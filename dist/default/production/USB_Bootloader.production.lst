

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Sep 09 14:32:54 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=2
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=2
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   237                           	psect	text215,global,reloc=2,class=CODE,delta=1
   238                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   239                           	dabs	1,0x600,512,_msd_buffer
   240                           	dabs	1,0xD00,48,_BDT
   241                           	dabs	1,0xD40,31,_msd_cbw
   242                           	dabs	1,0xD80,13,_msd_csw
   243                           	dabs	1,0xD38,8,_CtrlTrfData
   244                           	dabs	1,0xD30,8,_SetupPkt
   245  0000                     
   246                           ; Version 2.00
   247                           ; Generated 27/05/2018 GMT
   248                           ; 
   249                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   250                           ; All rights reserved.
   251                           ; 
   252                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   253                           ; 
   254                           ; Redistribution and use in source and binary forms, with or without modification, are
   255                           ; permitted provided that the following conditions are met:
   256                           ; 
   257                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   258                           ;        conditions and the following disclaimer.
   259                           ; 
   260                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   261                           ;        of conditions and the following disclaimer in the documentation and/or other
   262                           ;        materials provided with the distribution.
   263                           ; 
   264                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   265                           ;        software without specific prior written permission.
   266                           ; 
   267                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   268                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   269                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   270                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   271                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   272                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   273                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   274                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   275                           ; 
   276                           ; 
   277                           ; Code-generator required, PIC18F47J53 Definitions
   278                           ; 
   279                           ; SFR Addresses
   280  0000                     
   281                           	psect	intcode
   282  000008  EF04 F048          	goto	36872	;# 
   283                           
   284                           	psect	intcodelo
   285  000018  EF0C F048          	goto	36888	; ;# 
   286  0000                     
   287                           	psect	idataBANK0
   288  0089CE                     __pidataBANK0:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _file_number
   292  0089CE  FF                 	db	255
   293                           
   294                           	psect	idataBANK1
   295  008630                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for _LUN
   299  008630  BC                 	db	low _ExternalFlash_MediaInitialize
   300  008631  87                 	db	high _ExternalFlash_MediaInitialize
   301  008632  72                 	db	low _ExternalFlash_CapacityRead
   302  008633  88                 	db	high _ExternalFlash_CapacityRead
   303  008634  3A                 	db	low _ExternalFlash_SectorSizeRead
   304  008635  89                 	db	high _ExternalFlash_SectorSizeRead
   305  008636  CA                 	db	low _ExternalFlash_MediaDetect
   306  008637  89                 	db	high _ExternalFlash_MediaDetect
   307  008638  62                 	db	low _ExternalFlash_SectorRead
   308  008639  83                 	db	high _ExternalFlash_SectorRead
   309  00863A  C6                 	db	low _ExternalFlash_WriteProtectStateGet
   310  00863B  89                 	db	high _ExternalFlash_WriteProtectStateGet
   311  00863C  30                 	db	low _ExternalFlash_SectorWrite
   312  00863D  83                 	db	high _ExternalFlash_SectorWrite
   313  00863E  00                 	db	0
   314  00863F  00                 	db	0
   315  008640  00                 	db	0
   316  008641  00                 	db	0
   317  008642  00                 	db	0
   318  008643  00                 	db	0
   319                           
   320                           ;initializer for i2c_display_send_init_sequence@F6808
   321  008644  3A                 	db	58
   322  008645  1E                 	db	30
   323  008646  39                 	db	57
   324  008647  0C                 	db	12
   325  008648  74                 	db	116
   326  008649  5C                 	db	92
   327  00864A  6D                 	db	109
   328  00864B  0C                 	db	12
   329  00864C  01                 	db	1
   330                           
   331                           ;initializer for _tx_buf
   332  00864D  01                 	db	1
   333  00864E  02                 	db	2
   334  00864F  03                 	db	3
   335  008650  04                 	db	4
   336  008651  05                 	db	5
   337  008652  06                 	db	6
   338  008653  07                 	db	7
   339  008654  08                 	db	8
   340                           
   341                           	psect	mediumconst
   342  008C98                     __pmediumconst:
   343                           	opt stack 0
   344  008C98  00                 	db	0
   345  008C99                     _checked_line2:
   346                           	opt stack 0
   347  008C99  46                 	db	70
   348  008C9A  69                 	db	105
   349  008C9B  6C                 	db	108
   350  008C9C  65                 	db	101
   351  008C9D  20                 	db	32
   352  008C9E  63                 	db	99
   353  008C9F  68                 	db	104
   354  008CA0  65                 	db	101
   355  008CA1  63                 	db	99
   356  008CA2  6B                 	db	107
   357  008CA3  20                 	db	32
   358  008CA4  63                 	db	99
   359  008CA5  6F                 	db	111
   360  008CA6  6D                 	db	109
   361  008CA7  70                 	db	112
   362  008CA8  6C                 	db	108
   363  008CA9  65                 	db	101
   364  008CAA  74                 	db	116
   365  008CAB  65                 	db	101
   366  008CAC  64                 	db	100
   367  008CAD  00                 	db	0
   368  008CAE                     __end_of_checked_line2:
   369                           	opt stack 0
   370  008CAE                     _failed_line3_addressRange:
   371                           	opt stack 0
   372  008CAE  41                 	db	65
   373  008CAF  64                 	db	100
   374  008CB0  64                 	db	100
   375  008CB1  72                 	db	114
   376  008CB2  2E                 	db	46
   377  008CB3  20                 	db	32
   378  008CB4  6F                 	db	111
   379  008CB5  75                 	db	117
   380  008CB6  74                 	db	116
   381  008CB7  73                 	db	115
   382  008CB8  69                 	db	105
   383  008CB9  64                 	db	100
   384  008CBA  65                 	db	101
   385  008CBB  20                 	db	32
   386  008CBC  72                 	db	114
   387  008CBD  61                 	db	97
   388  008CBE  6E                 	db	110
   389  008CBF  67                 	db	103
   390  008CC0  65                 	db	101
   391  008CC1  00                 	db	0
   392  008CC2                     __end_of_failed_line3_addressRange:
   393                           	opt stack 0
   394  008CC2                     _search_line3:
   395                           	opt stack 0
   396  008CC2  46                 	db	70
   397  008CC3  49                 	db	73
   398  008CC4  52                 	db	82
   399  008CC5  4D                 	db	77
   400  008CC6  57                 	db	87
   401  008CC7  41                 	db	65
   402  008CC8  52                 	db	82
   403  008CC9  45                 	db	69
   404  008CCA  2E                 	db	46
   405  008CCB  48                 	db	72
   406  008CCC  45                 	db	69
   407  008CCD  58                 	db	88
   408  008CCE  20                 	db	32
   409  008CCF  6F                 	db	111
   410  008CD0  6E                 	db	110
   411  008CD1  20                 	db	32
   412  008CD2  55                 	db	85
   413  008CD3  53                 	db	83
   414  008CD4  42                 	db	66
   415  008CD5  00                 	db	0
   416  008CD6                     __end_of_search_line3:
   417                           	opt stack 0
   418  008CD6                     _failed_line3_startCode:
   419                           	opt stack 0
   420  008CD6  4D                 	db	77
   421  008CD7  69                 	db	105
   422  008CD8  73                 	db	115
   423  008CD9  73                 	db	115
   424  008CDA  69                 	db	105
   425  008CDB  6E                 	db	110
   426  008CDC  67                 	db	103
   427  008CDD  20                 	db	32
   428  008CDE  73                 	db	115
   429  008CDF  74                 	db	116
   430  008CE0  61                 	db	97
   431  008CE1  72                 	db	114
   432  008CE2  74                 	db	116
   433  008CE3  20                 	db	32
   434  008CE4  63                 	db	99
   435  008CE5  6F                 	db	111
   436  008CE6  64                 	db	100
   437  008CE7  65                 	db	101
   438  008CE8  00                 	db	0
   439  008CE9                     __end_of_failed_line3_startCode:
   440                           	opt stack 0
   441  008CE9                     _found_line2:
   442                           	opt stack 0
   443  008CE9  46                 	db	70
   444  008CEA  49                 	db	73
   445  008CEB  52                 	db	82
   446  008CEC  4D                 	db	77
   447  008CED  57                 	db	87
   448  008CEE  41                 	db	65
   449  008CEF  52                 	db	82
   450  008CF0  45                 	db	69
   451  008CF1  2E                 	db	46
   452  008CF2  48                 	db	72
   453  008CF3  45                 	db	69
   454  008CF4  58                 	db	88
   455  008CF5  20                 	db	32
   456  008CF6  66                 	db	102
   457  008CF7  6F                 	db	111
   458  008CF8  75                 	db	117
   459  008CF9  6E                 	db	110
   460  008CFA  64                 	db	100
   461  008CFB  00                 	db	0
   462  008CFC                     __end_of_found_line2:
   463                           	opt stack 0
   464  008CFC                     _programming_line2:
   465                           	opt stack 0
   466  008CFC  50                 	db	80
   467  008CFD  72                 	db	114
   468  008CFE  6F                 	db	111
   469  008CFF  67                 	db	103
   470  008D00  72                 	db	114
   471  008D01  61                 	db	97
   472  008D02  6D                 	db	109
   473  008D03  6D                 	db	109
   474  008D04  69                 	db	105
   475  008D05  6E                 	db	110
   476  008D06  67                 	db	103
   477  008D07  20                 	db	32
   478  008D08  66                 	db	102
   479  008D09  6C                 	db	108
   480  008D0A  61                 	db	97
   481  008D0B  73                 	db	115
   482  008D0C  68                 	db	104
   483  008D0D  00                 	db	0
   484  008D0E                     __end_of_programming_line2:
   485                           	opt stack 0
   486  008D0E                     _failed_line2:
   487                           	opt stack 0
   488  008D0E  46                 	db	70
   489  008D0F  69                 	db	105
   490  008D10  6C                 	db	108
   491  008D11  65                 	db	101
   492  008D12  20                 	db	32
   493  008D13  63                 	db	99
   494  008D14  68                 	db	104
   495  008D15  65                 	db	101
   496  008D16  63                 	db	99
   497  008D17  6B                 	db	107
   498  008D18  20                 	db	32
   499  008D19  66                 	db	102
   500  008D1A  61                 	db	97
   501  008D1B  69                 	db	105
   502  008D1C  6C                 	db	108
   503  008D1D  65                 	db	101
   504  008D1E  64                 	db	100
   505  008D1F  00                 	db	0
   506  008D20                     __end_of_failed_line2:
   507                           	opt stack 0
   508  008D20                     _found_line4:
   509                           	opt stack 0
   510  008D20  50                 	db	80
   511  008D21  72                 	db	114
   512  008D22  65                 	db	101
   513  008D23  73                 	db	115
   514  008D24  73                 	db	115
   515  008D25  20                 	db	32
   516  008D26  74                 	db	116
   517  008D27  6F                 	db	111
   518  008D28  20                 	db	32
   519  008D29  75                 	db	117
   520  008D2A  73                 	db	115
   521  008D2B  65                 	db	101
   522  008D2C  20                 	db	32
   523  008D2D  66                 	db	102
   524  008D2E  69                 	db	105
   525  008D2F  6C                 	db	108
   526  008D30  65                 	db	101
   527  008D31  00                 	db	0
   528  008D32                     __end_of_found_line4:
   529                           	opt stack 0
   530  008D32                     _checked_line4:
   531                           	opt stack 0
   532  008D32  50                 	db	80
   533  008D33  72                 	db	114
   534  008D34  65                 	db	101
   535  008D35  73                 	db	115
   536  008D36  73                 	db	115
   537  008D37  20                 	db	32
   538  008D38  74                 	db	116
   539  008D39  6F                 	db	111
   540  008D3A  20                 	db	32
   541  008D3B  70                 	db	112
   542  008D3C  72                 	db	114
   543  008D3D  6F                 	db	111
   544  008D3E  67                 	db	103
   545  008D3F  72                 	db	114
   546  008D40  61                 	db	97
   547  008D41  6D                 	db	109
   548  008D42  00                 	db	0
   549  008D43                     __end_of_checked_line4:
   550                           	opt stack 0
   551  008D43                     _search_line2:
   552                           	opt stack 0
   553  008D43  4C                 	db	76
   554  008D44  6F                 	db	111
   555  008D45  6F                 	db	111
   556  008D46  6B                 	db	107
   557  008D47  69                 	db	105
   558  008D48  6E                 	db	110
   559  008D49  67                 	db	103
   560  008D4A  20                 	db	32
   561  008D4B  66                 	db	102
   562  008D4C  6F                 	db	111
   563  008D4D  72                 	db	114
   564  008D4E  20                 	db	32
   565  008D4F  66                 	db	102
   566  008D50  69                 	db	105
   567  008D51  6C                 	db	108
   568  008D52  65                 	db	101
   569  008D53  00                 	db	0
   570  008D54                     __end_of_search_line2:
   571                           	opt stack 0
   572  008D54                     _done_line4:
   573                           	opt stack 0
   574  008D54  50                 	db	80
   575  008D55  72                 	db	114
   576  008D56  65                 	db	101
   577  008D57  73                 	db	115
   578  008D58  73                 	db	115
   579  008D59  20                 	db	32
   580  008D5A  74                 	db	116
   581  008D5B  6F                 	db	111
   582  008D5C  20                 	db	32
   583  008D5D  72                 	db	114
   584  008D5E  65                 	db	101
   585  008D5F  62                 	db	98
   586  008D60  6F                 	db	111
   587  008D61  6F                 	db	111
   588  008D62  74                 	db	116
   589  008D63  00                 	db	0
   590  008D64                     __end_of_done_line4:
   591                           	opt stack 0
   592  008D64                     _done_line3:
   593                           	opt stack 0
   594  008D64  50                 	db	80
   595  008D65  61                 	db	97
   596  008D66  67                 	db	103
   597  008D67  65                 	db	101
   598  008D68  73                 	db	115
   599  008D69  20                 	db	32
   600  008D6A  77                 	db	119
   601  008D6B  72                 	db	114
   602  008D6C  69                 	db	105
   603  008D6D  74                 	db	116
   604  008D6E  74                 	db	116
   605  008D6F  65                 	db	101
   606  008D70  6E                 	db	110
   607  008D71  3A                 	db	58
   608  008D72  20                 	db	32
   609  008D73  00                 	db	0
   610  008D74                     __end_of_done_line3:
   611                           	opt stack 0
   612  008D74                     _done_line1:
   613                           	opt stack 0
   614  008D74  42                 	db	66
   615  008D75  6F                 	db	111
   616  008D76  6F                 	db	111
   617  008D77  74                 	db	116
   618  008D78  6C                 	db	108
   619  008D79  6F                 	db	111
   620  008D7A  61                 	db	97
   621  008D7B  64                 	db	100
   622  008D7C  65                 	db	101
   623  008D7D  72                 	db	114
   624  008D7E  20                 	db	32
   625  008D7F  4D                 	db	77
   626  008D80  6F                 	db	111
   627  008D81  64                 	db	100
   628  008D82  65                 	db	101
   629  008D83  00                 	db	0
   630  008D84                     __end_of_done_line1:
   631                           	opt stack 0
   632  008D84                     _programming_line4:
   633                           	opt stack 0
   634  008D84  50                 	db	80
   635  008D85  61                 	db	97
   636  008D86  67                 	db	103
   637  008D87  65                 	db	101
   638  008D88  73                 	db	115
   639  008D89  20                 	db	32
   640  008D8A  77                 	db	119
   641  008D8B  72                 	db	114
   642  008D8C  69                 	db	105
   643  008D8D  74                 	db	116
   644  008D8E  74                 	db	116
   645  008D8F  65                 	db	101
   646  008D90  6E                 	db	110
   647  008D91  3A                 	db	58
   648  008D92  20                 	db	32
   649  008D93  00                 	db	0
   650  008D94                     __end_of_programming_line4:
   651                           	opt stack 0
   652  008D94                     _programming_line1:
   653                           	opt stack 0
   654  008D94  42                 	db	66
   655  008D95  6F                 	db	111
   656  008D96  6F                 	db	111
   657  008D97  74                 	db	116
   658  008D98  6C                 	db	108
   659  008D99  6F                 	db	111
   660  008D9A  61                 	db	97
   661  008D9B  64                 	db	100
   662  008D9C  65                 	db	101
   663  008D9D  72                 	db	114
   664  008D9E  20                 	db	32
   665  008D9F  4D                 	db	77
   666  008DA0  6F                 	db	111
   667  008DA1  64                 	db	100
   668  008DA2  65                 	db	101
   669  008DA3  00                 	db	0
   670  008DA4                     __end_of_programming_line1:
   671                           	opt stack 0
   672  008DA4                     _failed_line1:
   673                           	opt stack 0
   674  008DA4  42                 	db	66
   675  008DA5  6F                 	db	111
   676  008DA6  6F                 	db	111
   677  008DA7  74                 	db	116
   678  008DA8  6C                 	db	108
   679  008DA9  6F                 	db	111
   680  008DAA  61                 	db	97
   681  008DAB  64                 	db	100
   682  008DAC  65                 	db	101
   683  008DAD  72                 	db	114
   684  008DAE  20                 	db	32
   685  008DAF  4D                 	db	77
   686  008DB0  6F                 	db	111
   687  008DB1  64                 	db	100
   688  008DB2  65                 	db	101
   689  008DB3  00                 	db	0
   690  008DB4                     __end_of_failed_line1:
   691                           	opt stack 0
   692  008DB4                     _checked_line1:
   693                           	opt stack 0
   694  008DB4  42                 	db	66
   695  008DB5  6F                 	db	111
   696  008DB6  6F                 	db	111
   697  008DB7  74                 	db	116
   698  008DB8  6C                 	db	108
   699  008DB9  6F                 	db	111
   700  008DBA  61                 	db	97
   701  008DBB  64                 	db	100
   702  008DBC  65                 	db	101
   703  008DBD  72                 	db	114
   704  008DBE  20                 	db	32
   705  008DBF  4D                 	db	77
   706  008DC0  6F                 	db	111
   707  008DC1  64                 	db	100
   708  008DC2  65                 	db	101
   709  008DC3  00                 	db	0
   710  008DC4                     __end_of_checked_line1:
   711                           	opt stack 0
   712  008DC4                     _verify_line1:
   713                           	opt stack 0
   714  008DC4  42                 	db	66
   715  008DC5  6F                 	db	111
   716  008DC6  6F                 	db	111
   717  008DC7  74                 	db	116
   718  008DC8  6C                 	db	108
   719  008DC9  6F                 	db	111
   720  008DCA  61                 	db	97
   721  008DCB  64                 	db	100
   722  008DCC  65                 	db	101
   723  008DCD  72                 	db	114
   724  008DCE  20                 	db	32
   725  008DCF  4D                 	db	77
   726  008DD0  6F                 	db	111
   727  008DD1  64                 	db	100
   728  008DD2  65                 	db	101
   729  008DD3  00                 	db	0
   730  008DD4                     __end_of_verify_line1:
   731                           	opt stack 0
   732  008DD4                     _found_line1:
   733                           	opt stack 0
   734  008DD4  42                 	db	66
   735  008DD5  6F                 	db	111
   736  008DD6  6F                 	db	111
   737  008DD7  74                 	db	116
   738  008DD8  6C                 	db	108
   739  008DD9  6F                 	db	111
   740  008DDA  61                 	db	97
   741  008DDB  64                 	db	100
   742  008DDC  65                 	db	101
   743  008DDD  72                 	db	114
   744  008DDE  20                 	db	32
   745  008DDF  4D                 	db	77
   746  008DE0  6F                 	db	111
   747  008DE1  64                 	db	100
   748  008DE2  65                 	db	101
   749  008DE3  00                 	db	0
   750  008DE4                     __end_of_found_line1:
   751                           	opt stack 0
   752  008DE4                     _search_line1:
   753                           	opt stack 0
   754  008DE4  42                 	db	66
   755  008DE5  6F                 	db	111
   756  008DE6  6F                 	db	111
   757  008DE7  74                 	db	116
   758  008DE8  6C                 	db	108
   759  008DE9  6F                 	db	111
   760  008DEA  61                 	db	97
   761  008DEB  64                 	db	100
   762  008DEC  65                 	db	101
   763  008DED  72                 	db	114
   764  008DEE  20                 	db	32
   765  008DEF  4D                 	db	77
   766  008DF0  6F                 	db	111
   767  008DF1  64                 	db	100
   768  008DF2  65                 	db	101
   769  008DF3  00                 	db	0
   770  008DF4                     __end_of_search_line1:
   771                           	opt stack 0
   772  008DF4                     _start_line1:
   773                           	opt stack 0
   774  008DF4  42                 	db	66
   775  008DF5  6F                 	db	111
   776  008DF6  6F                 	db	111
   777  008DF7  74                 	db	116
   778  008DF8  6C                 	db	108
   779  008DF9  6F                 	db	111
   780  008DFA  61                 	db	97
   781  008DFB  64                 	db	100
   782  008DFC  65                 	db	101
   783  008DFD  72                 	db	114
   784  008DFE  20                 	db	32
   785  008DFF  4D                 	db	77
   786  008E00  6F                 	db	111
   787  008E01  64                 	db	100
   788  008E02  65                 	db	101
   789  008E03  00                 	db	0
   790  008E04                     __end_of_start_line1:
   791                           	opt stack 0
   792  008E04                     _failed_line3_checksum:
   793                           	opt stack 0
   794  008E04  43                 	db	67
   795  008E05  68                 	db	104
   796  008E06  65                 	db	101
   797  008E07  63                 	db	99
   798  008E08  6B                 	db	107
   799  008E09  73                 	db	115
   800  008E0A  75                 	db	117
   801  008E0B  6D                 	db	109
   802  008E0C  20                 	db	32
   803  008E0D  65                 	db	101
   804  008E0E  72                 	db	114
   805  008E0F  72                 	db	114
   806  008E10  6F                 	db	111
   807  008E11  72                 	db	114
   808  008E12  00                 	db	0
   809  008E13                     __end_of_failed_line3_checksum:
   810                           	opt stack 0
   811  008E13                     _failed_line3_noNextRecord:
   812                           	opt stack 0
   813  008E13  4E                 	db	78
   814  008E14  6F                 	db	111
   815  008E15  20                 	db	32
   816  008E16  6E                 	db	110
   817  008E17  65                 	db	101
   818  008E18  78                 	db	120
   819  008E19  74                 	db	116
   820  008E1A  20                 	db	32
   821  008E1B  72                 	db	114
   822  008E1C  65                 	db	101
   823  008E1D  63                 	db	99
   824  008E1E  6F                 	db	111
   825  008E1F  72                 	db	114
   826  008E20  64                 	db	100
   827  008E21  00                 	db	0
   828  008E22                     __end_of_failed_line3_noNextRecord:
   829                           	opt stack 0
   830  008E22                     _start_line4:
   831                           	opt stack 0
   832  008E22  73                 	db	115
   833  008E23  6F                 	db	111
   834  008E24  6C                 	db	108
   835  008E25  64                 	db	100
   836  008E26  65                 	db	101
   837  008E27  72                 	db	114
   838  008E28  6E                 	db	110
   839  008E29  65                 	db	101
   840  008E2A  72                 	db	114
   841  008E2B  64                 	db	100
   842  008E2C  2E                 	db	46
   843  008E2D  63                 	db	99
   844  008E2E  6F                 	db	111
   845  008E2F  6D                 	db	109
   846  008E30  00                 	db	0
   847  008E31                     __end_of_start_line4:
   848                           	opt stack 0
   849  008E31                     _failed_line3_dataTooLong:
   850                           	opt stack 0
   851  008E31  44                 	db	68
   852  008E32  61                 	db	97
   853  008E33  74                 	db	116
   854  008E34  61                 	db	97
   855  008E35  20                 	db	32
   856  008E36  74                 	db	116
   857  008E37  6F                 	db	111
   858  008E38  6F                 	db	111
   859  008E39  20                 	db	32
   860  008E3A  6C                 	db	108
   861  008E3B  6F                 	db	111
   862  008E3C  6E                 	db	110
   863  008E3D  67                 	db	103
   864  008E3E  00                 	db	0
   865  008E3F                     __end_of_failed_line3_dataTooLong:
   866                           	opt stack 0
   867  008E3F                     _reboot_line1:
   868                           	opt stack 0
   869  008E3F  52                 	db	82
   870  008E40  65                 	db	101
   871  008E41  62                 	db	98
   872  008E42  6F                 	db	111
   873  008E43  6F                 	db	111
   874  008E44  74                 	db	116
   875  008E45  69                 	db	105
   876  008E46  6E                 	db	110
   877  008E47  67                 	db	103
   878  008E48  2E                 	db	46
   879  008E49  2E                 	db	46
   880  008E4A  2E                 	db	46
   881  008E4B  00                 	db	0
   882  008E4C                     __end_of_reboot_line1:
   883                           	opt stack 0
   884  008E4C                     _verify_line2:
   885                           	opt stack 0
   886  008E4C  56                 	db	86
   887  008E4D  65                 	db	101
   888  008E4E  72                 	db	114
   889  008E4F  69                 	db	105
   890  008E50  66                 	db	102
   891  008E51  79                 	db	121
   892  008E52  69                 	db	105
   893  008E53  6E                 	db	110
   894  008E54  67                 	db	103
   895  008E55  2E                 	db	46
   896  008E56  2E                 	db	46
   897  008E57  2E                 	db	46
   898  008E58  00                 	db	0
   899  008E59                     __end_of_verify_line2:
   900                           	opt stack 0
   901  008E59                     _search_line4:
   902                           	opt stack 0
   903  008E59  64                 	db	100
   904  008E5A  72                 	db	114
   905  008E5B  69                 	db	105
   906  008E5C  76                 	db	118
   907  008E5D  65                 	db	101
   908  008E5E  2E                 	db	46
   909  008E5F  2E                 	db	46
   910  008E60  2E                 	db	46
   911  008E61  00                 	db	0
   912  008E62                     __end_of_search_line4:
   913                           	opt stack 0
   914  008E62                     _start_line2:
   915                           	opt stack 0
   916  008E62  56                 	db	86
   917  008E63  65                 	db	101
   918  008E64  72                 	db	114
   919  008E65  73                 	db	115
   920  008E66  69                 	db	105
   921  008E67  6F                 	db	111
   922  008E68  6E                 	db	110
   923  008E69  20                 	db	32
   924  008E6A  00                 	db	0
   925  008E6B                     __end_of_start_line2:
   926                           	opt stack 0
   927  008E6B                     _failed_line4:
   928                           	opt stack 0
   929  008E6B  52                 	db	82
   930  008E6C  65                 	db	101
   931  008E6D  63                 	db	99
   932  008E6E  6F                 	db	111
   933  008E6F  72                 	db	114
   934  008E70  64                 	db	100
   935  008E71  20                 	db	32
   936  008E72  00                 	db	0
   937  008E73                     __end_of_failed_line4:
   938                           	opt stack 0
   939  008E73                     _checked_line3:
   940                           	opt stack 0
   941  008E73  72                 	db	114
   942  008E74  65                 	db	101
   943  008E75  63                 	db	99
   944  008E76  6F                 	db	111
   945  008E77  72                 	db	114
   946  008E78  64                 	db	100
   947  008E79  73                 	db	115
   948  008E7A  00                 	db	0
   949  008E7B                     __end_of_checked_line3:
   950                           	opt stack 0
   951  008E7B                     _USB_SD_Ptr:
   952                           	opt stack 0
   953  008E7B  CC                 	db	low _sd000
   954  008E7C  8F                 	db	high _sd000
   955  008E7D  E8                 	db	low _sd001
   956  008E7E  8E                 	db	high _sd001
   957  008E7F  1C                 	db	low _sd002
   958  008E80  8F                 	db	high _sd002
   959  008E81  8B                 	db	low _sd003
   960  008E82  8F                 	db	high _sd003
   961  008E83                     __end_of_USB_SD_Ptr:
   962                           	opt stack 0
   963  008E83                     _programming_line3:
   964                           	opt stack 0
   965  008E83  45                 	db	69
   966  008E84  6E                 	db	110
   967  008E85  74                 	db	116
   968  008E86  72                 	db	114
   969  008E87  79                 	db	121
   970  008E88  20                 	db	32
   971  008E89  00                 	db	0
   972  008E8A                     __end_of_programming_line3:
   973                           	opt stack 0
   974  008E8A                     _verify_line3:
   975                           	opt stack 0
   976  008E8A  52                 	db	82
   977  008E8B  65                 	db	101
   978  008E8C  63                 	db	99
   979  008E8D  6F                 	db	111
   980  008E8E  72                 	db	114
   981  008E8F  64                 	db	100
   982  008E90  00                 	db	0
   983  008E91                     __end_of_verify_line3:
   984                           	opt stack 0
   985  008E91                     _found_line3b:
   986                           	opt stack 0
   987  008E91  20                 	db	32
   988  008E92  62                 	db	98
   989  008E93  79                 	db	121
   990  008E94  74                 	db	116
   991  008E95  65                 	db	101
   992  008E96  73                 	db	115
   993  008E97  00                 	db	0
   994  008E98                     __end_of_found_line3b:
   995                           	opt stack 0
   996  008E98                     _found_line3:
   997                           	opt stack 0
   998  008E98  53                 	db	83
   999  008E99  69                 	db	105
  1000  008E9A  7A                 	db	122
  1001  008E9B  65                 	db	101
  1002  008E9C  3A                 	db	58
  1003  008E9D  20                 	db	32
  1004  008E9E  00                 	db	0
  1005  008E9F                     __end_of_found_line3:
  1006                           	opt stack 0
  1007  008E9F                     _done_line2:
  1008                           	opt stack 0
  1009  008E9F  44                 	db	68
  1010  008EA0  6F                 	db	111
  1011  008EA1  6E                 	db	110
  1012  008EA2  65                 	db	101
  1013  008EA3  21                 	db	33
  1014  008EA4  00                 	db	0
  1015  008EA5                     __end_of_done_line2:
  1016                           	opt stack 0
  1017  008EA5                     _USB_CD_Ptr:
  1018                           	opt stack 0
  1019  008EA5  A8                 	db	low _configDescriptor1
  1020  008EA6  8E                 	db	high _configDescriptor1
  1021  008EA7                     __end_of_USB_CD_Ptr:
  1022                           	opt stack 0
  1023  008EA7                     _start_line3:
  1024                           	opt stack 0
  1025  008EA7  00                 	db	0
  1026  008EA8                     __end_of_start_line3:
  1027                           	opt stack 0
  1028  008EA8                     _configDescriptor1:
  1029                           	opt stack 0
  1030  008EA8  09                 	db	9
  1031  008EA9  02                 	db	2
  1032  008EAA  40                 	db	64
  1033  008EAB  00                 	db	0
  1034  008EAC  02                 	db	2
  1035  008EAD  01                 	db	1
  1036  008EAE  00                 	db	0
  1037  008EAF  C0                 	db	192
  1038  008EB0  32                 	db	50
  1039  008EB1  09                 	db	9
  1040  008EB2  04                 	db	4
  1041  008EB3  00                 	db	0
  1042  008EB4  00                 	db	0
  1043  008EB5  02                 	db	2
  1044  008EB6  03                 	db	3
  1045  008EB7  00                 	db	0
  1046  008EB8  00                 	db	0
  1047  008EB9  00                 	db	0
  1048  008EBA  09                 	db	9
  1049  008EBB  21                 	db	33
  1050  008EBC  11                 	db	17
  1051  008EBD  01                 	db	1
  1052  008EBE  00                 	db	0
  1053  008EBF  01                 	db	1
  1054  008EC0  22                 	db	34
  1055  008EC1  1D                 	db	29
  1056  008EC2  00                 	db	0
  1057  008EC3  07                 	db	7
  1058  008EC4  05                 	db	5
  1059  008EC5  81                 	db	129
  1060  008EC6  03                 	db	3
  1061  008EC7  40                 	db	64
  1062  008EC8  00                 	db	0
  1063  008EC9  01                 	db	1
  1064  008ECA  07                 	db	7
  1065  008ECB  05                 	db	5
  1066  008ECC  01                 	db	1
  1067  008ECD  03                 	db	3
  1068  008ECE  40                 	db	64
  1069  008ECF  00                 	db	0
  1070  008ED0  01                 	db	1
  1071  008ED1  09                 	db	9
  1072  008ED2  04                 	db	4
  1073  008ED3  01                 	db	1
  1074  008ED4  00                 	db	0
  1075  008ED5  02                 	db	2
  1076  008ED6  08                 	db	8
  1077  008ED7  06                 	db	6
  1078  008ED8  50                 	db	80
  1079  008ED9  00                 	db	0
  1080  008EDA  07                 	db	7
  1081  008EDB  05                 	db	5
  1082  008EDC  82                 	db	130
  1083  008EDD  02                 	db	2
  1084  008EDE  40                 	db	64
  1085  008EDF  00                 	db	0
  1086  008EE0  01                 	db	1
  1087  008EE1  07                 	db	7
  1088  008EE2  05                 	db	5
  1089  008EE3  02                 	db	2
  1090  008EE4  02                 	db	2
  1091  008EE5  40                 	db	64
  1092  008EE6  00                 	db	0
  1093  008EE7  01                 	db	1
  1094  008EE8                     __end_of_configDescriptor1:
  1095                           	opt stack 0
  1096  008EE8                     _sd001:
  1097                           	opt stack 0
  1098  008EE8  34                 	db	52
  1099  008EE9  03                 	db	3
  1100  008EEA  0053               	dw	83
  1101  008EEC  006F               	dw	111
  1102  008EEE  006C               	dw	108
  1103  008EF0  0064               	dw	100
  1104  008EF2  0065               	dw	101
  1105  008EF4  0072               	dw	114
  1106  008EF6  006E               	dw	110
  1107  008EF8  0065               	dw	101
  1108  008EFA  0072               	dw	114
  1109  008EFC  0064               	dw	100
  1110  008EFE  002E               	dw	46
  1111  008F00  0063               	dw	99
  1112  008F02  006F               	dw	111
  1113  008F04  006D               	dw	109
  1114  008F06  0020               	dw	32
  1115  008F08  0020               	dw	32
  1116  008F0A  0020               	dw	32
  1117  008F0C  0020               	dw	32
  1118  008F0E  0020               	dw	32
  1119  008F10  0020               	dw	32
  1120  008F12  0020               	dw	32
  1121  008F14  0020               	dw	32
  1122  008F16  0020               	dw	32
  1123  008F18  0020               	dw	32
  1124  008F1A  0020               	dw	32
  1125  008F1C                     __end_of_sd001:
  1126                           	opt stack 0
  1127  008F1C                     _sd002:
  1128                           	opt stack 0
  1129  008F1C  2E                 	db	46
  1130  008F1D  03                 	db	3
  1131  008F1E  004D               	dw	77
  1132  008F20  0050               	dw	80
  1133  008F22  0050               	dw	80
  1134  008F24  0054               	dw	84
  1135  008F26  0053               	dw	83
  1136  008F28  006F               	dw	111
  1137  008F2A  006C               	dw	108
  1138  008F2C  0061               	dw	97
  1139  008F2E  0072               	dw	114
  1140  008F30  0020               	dw	32
  1141  008F32  0043               	dw	67
  1142  008F34  0068               	dw	104
  1143  008F36  0061               	dw	97
  1144  008F38  0072               	dw	114
  1145  008F3A  0067               	dw	103
  1146  008F3C  0065               	dw	101
  1147  008F3E  0072               	dw	114
  1148  008F40  0020               	dw	32
  1149  008F42  0052               	dw	82
  1150  008F44  0065               	dw	101
  1151  008F46  0076               	dw	118
  1152  008F48  0043               	dw	67
  1153  008F4A                     __end_of_sd002:
  1154                           	opt stack 0
  1155  008F4A                     _inq_resp:
  1156                           	opt stack 0
  1157  008F4A  00                 	db	0
  1158  008F4B  80                 	db	128
  1159  008F4C  04                 	db	4
  1160  008F4D  02                 	db	2
  1161  008F4E  20                 	db	32
  1162  008F4F  00                 	db	0
  1163  008F50  00                 	db	0
  1164  008F51  00                 	db	0
  1165  008F52  4D                 	db	77
  1166  008F53  69                 	db	105
  1167  008F54  63                 	db	99
  1168  008F55  72                 	db	114
  1169  008F56  6F                 	db	111
  1170  008F57  63                 	db	99
  1171  008F58  68                 	db	104
  1172  008F59  70                 	db	112
  1173  008F5A  4D                 	db	77
  1174  008F5B  61                 	db	97
  1175  008F5C  73                 	db	115
  1176  008F5D  73                 	db	115
  1177  008F5E  20                 	db	32
  1178  008F5F  53                 	db	83
  1179  008F60  74                 	db	116
  1180  008F61  6F                 	db	111
  1181  008F62  72                 	db	114
  1182  008F63  61                 	db	97
  1183  008F64  67                 	db	103
  1184  008F65  65                 	db	101
  1185  008F66  20                 	db	32
  1186  008F67  20                 	db	32
  1187  008F68  20                 	db	32
  1188  008F69  20                 	db	32
  1189  008F6A  30                 	db	48
  1190  008F6B  30                 	db	48
  1191  008F6C  30                 	db	48
  1192  008F6D  31                 	db	49
  1193  008F6E                     __end_of_inq_resp:
  1194                           	opt stack 0
  1195  008F6E                     _hid_rpt01:
  1196                           	opt stack 0
  1197  008F6E  06                 	db	6
  1198  008F6F  00                 	db	0
  1199  008F70  FF                 	db	255
  1200  008F71  09                 	db	9
  1201  008F72  01                 	db	1
  1202  008F73  A1                 	db	161
  1203  008F74  01                 	db	1
  1204  008F75  19                 	db	25
  1205  008F76  01                 	db	1
  1206  008F77  29                 	db	41
  1207  008F78  40                 	db	64
  1208  008F79  15                 	db	21
  1209  008F7A  00                 	db	0
  1210  008F7B  26                 	db	38
  1211  008F7C  FF                 	db	255
  1212  008F7D  00                 	db	0
  1213  008F7E  75                 	db	117
  1214  008F7F  08                 	db	8
  1215  008F80  95                 	db	149
  1216  008F81  40                 	db	64
  1217  008F82  81                 	db	129
  1218  008F83  00                 	db	0
  1219  008F84  19                 	db	25
  1220  008F85  01                 	db	1
  1221  008F86  29                 	db	41
  1222  008F87  40                 	db	64
  1223  008F88  91                 	db	145
  1224  008F89  00                 	db	0
  1225  008F8A  C0                 	db	192
  1226  008F8B                     __end_of_hid_rpt01:
  1227                           	opt stack 0
  1228  008F8B                     _sd003:
  1229                           	opt stack 0
  1230  008F8B  1A                 	db	26
  1231  008F8C  03                 	db	3
  1232  008F8D  0031               	dw	49
  1233  008F8F  0032               	dw	50
  1234  008F91  0033               	dw	51
  1235  008F93  0034               	dw	52
  1236  008F95  0035               	dw	53
  1237  008F97  0036               	dw	54
  1238  008F99  0037               	dw	55
  1239  008F9B  0038               	dw	56
  1240  008F9D  0039               	dw	57
  1241  008F9F  0030               	dw	48
  1242  008FA1  0039               	dw	57
  1243  008FA3  0039               	dw	57
  1244  008FA5                     __end_of_sd003:
  1245                           	opt stack 0
  1246  008FA5                     _device_dsc:
  1247                           	opt stack 0
  1248  008FA5  12                 	db	18
  1249  008FA6  01                 	db	1
  1250  008FA7  0200               	dw	512
  1251  008FA9  00                 	db	0
  1252  008FAA  00                 	db	0
  1253  008FAB  00                 	db	0
  1254  008FAC  08                 	db	8
  1255  008FAD  04D8               	dw	1240
  1256  008FAF  F08E               	dw	61582
  1257  008FB1  0100               	dw	256
  1258  008FB3  01                 	db	1
  1259  008FB4  02                 	db	2
  1260  008FB5  00                 	db	0
  1261  008FB6  01                 	db	1
  1262  008FB7                     __end_of_device_dsc:
  1263                           	opt stack 0
  1264  008FB7                     _bootloader_filename:
  1265                           	opt stack 0
  1266  008FB7  46                 	db	70
  1267  008FB8  49                 	db	73
  1268  008FB9  52                 	db	82
  1269  008FBA  4D                 	db	77
  1270  008FBB  57                 	db	87
  1271  008FBC  41                 	db	65
  1272  008FBD  52                 	db	82
  1273  008FBE  45                 	db	69
  1274  008FBF  00                 	db	0
  1275  008FC0                     __end_of_bootloader_filename:
  1276                           	opt stack 0
  1277  008FC0                     _flash_command_pagesize_528:
  1278                           	opt stack 0
  1279  008FC0  3D                 	db	61
  1280  008FC1  2A                 	db	42
  1281  008FC2  80                 	db	128
  1282  008FC3  A7                 	db	167
  1283  008FC4                     __end_of_flash_command_pagesize_528:
  1284                           	opt stack 0
  1285  008FC4                     _flash_command_pagesize_512:
  1286                           	opt stack 0
  1287  008FC4  3D                 	db	61
  1288  008FC5  2A                 	db	42
  1289  008FC6  80                 	db	128
  1290  008FC7  A6                 	db	166
  1291  008FC8                     __end_of_flash_command_pagesize_512:
  1292                           	opt stack 0
  1293  008FC8                     _bootloader_extension:
  1294                           	opt stack 0
  1295  008FC8  48                 	db	72
  1296  008FC9  45                 	db	69
  1297  008FCA  58                 	db	88
  1298  008FCB  00                 	db	0
  1299  008FCC                     __end_of_bootloader_extension:
  1300                           	opt stack 0
  1301  008FCC                     _sd000:
  1302                           	opt stack 0
  1303  008FCC  04                 	db	4
  1304  008FCD  03                 	db	3
  1305  008FCE  0409               	dw	1033
  1306  008FD0                     __end_of_sd000:
  1307                           	opt stack 0
  1308  0000                     _RPINR23	set	3838
  1309  0000                     _RPOR23	set	3799
  1310  0000                     _RPINR22	set	3837
  1311  0000                     _RPOR22	set	3798
  1312  0000                     _RPOR21	set	3797
  1313  0000                     _RPINR21	set	3836
  1314  0000                     _RPINR2	set	3810
  1315  0000                     _RPINR3	set	3811
  1316  0000                     _RPINR1	set	3809
  1317  0000                     _PPSCONbits	set	3775
  1318  0000                     _ODCON3bits	set	3904
  1319  0000                     _ANCON0bits	set	3912
  1320  0000                     _UEP0bits	set	3878
  1321  0000                     _UIEbits	set	3894
  1322  0000                     _UADDR	set	3896
  1323  0000                     _UIE	set	3894
  1324  0000                     _UEIE	set	3895
  1325  0000                     _UCFG	set	3897
  1326  0000                     _UEP1	set	3879
  1327  0000                     _UEP0	set	3878
  1328  0000                     _TBLPTR	set	4086
  1329  0000                     _DMACON2bits	set	3974
  1330  0000                     _SSP2CON1bits	set	3954
  1331  0000                     _SSP2STATbits	set	3955
  1332  0000                     _INTCON	set	4082
  1333  0000                     _EECON1	set	4006
  1334  0000                     _TABLAT	set	4085
  1335  0000                     _EECON1bits	set	4006
  1336  0000                     _SSP1CON1	set	4038
  1337  0000                     _SSP1BUF	set	4041
  1338  0000                     _SSP1CON2bits	set	4037
  1339  0000                     _SSP1CON1bits	set	4038
  1340  0000                     _SSP1ADD	set	4040
  1341  0000                     _SSP1STATbits	set	4039
  1342  0000                     _LATEbits	set	3981
  1343  0000                     _TRISEbits	set	3990
  1344  0000                     _LATBbits	set	3978
  1345  0000                     _TRISBbits	set	3987
  1346  0000                     _LATDbits	set	3980
  1347  0000                     _TRISDbits	set	3989
  1348  0000                     _LATCbits	set	3979
  1349  0000                     _TRISCbits	set	3988
  1350  0000                     _T0CONbits	set	4053
  1351  0000                     _INTCON2bits	set	4081
  1352  0000                     _EECON2	set	4007
  1353  0000                     _PORTBbits	set	3969
  1354  0000                     _INTCON3bits	set	4080
  1355  0000                     _TMR0L	set	4054
  1356  0000                     _TMR0H	set	4055
  1357  0000                     _INTCONbits	set	4082
  1358  0000                     _OSCCON	set	4051
  1359  0000                     _OSCTUNEbits	set	3995
  1360  0000                     _PORTAbits	set	3968
  1361  0000                     _TRISAbits	set	3986
  1362  0000                     _LATAbits	set	3977
  1363  0000                     _PIR3bits	set	4004
  1364  0000                     _DMABCL	set	3943
  1365  0000                     _DMABCH	set	3942
  1366  0000                     _RXADDRL	set	3945
  1367  0000                     _RXADDRH	set	3944
  1368  0000                     _DMACON1bits	set	3976
  1369  0000                     _TXADDRL	set	3947
  1370  0000                     _TXADDRH	set	3946
  1371  0000                     _PORTDbits	set	3971
  1372  0000                     _USTAT	set	3940
  1373  0000                     _PIR2bits	set	4001
  1374  0000                     _UCON	set	3941
  1375  0000                     _UIRbits	set	3938
  1376  0000                     _UCONbits	set	3941
  1377  0000                     _UIR	set	3938
  1378  0000                     _UEIR	set	3939
  1379  0000                     _PIE2bits	set	4000
  1380  008FD0                     STR_12:
  1381  008FD0  68                 	db	104	;'h'
  1382  008FD1  65                 	db	101	;'e'
  1383  008FD2  6C                 	db	108	;'l'
  1384  008FD3  6C                 	db	108	;'l'
  1385  008FD4  6F                 	db	111	;'o'
  1386  008FD5  20                 	db	32
  1387  008FD6  77                 	db	119	;'w'
  1388  008FD7  6F                 	db	111	;'o'
  1389  008FD8  72                 	db	114	;'r'
  1390  008FD9  6C                 	db	108	;'l'
  1391  008FDA  64                 	db	100	;'d'
  1392  008FDB  21                 	db	33
  1393  008FDC  00                 	db	0
  1394  008FDD                     STR_9:
  1395  008FDD  53                 	db	83	;'S'
  1396  008FDE  6F                 	db	111	;'o'
  1397  008FDF  6C                 	db	108	;'l'
  1398  008FE0  61                 	db	97	;'a'
  1399  008FE1  72                 	db	114	;'r'
  1400  008FE2  43                 	db	67	;'C'
  1401  008FE3  68                 	db	104	;'h'
  1402  008FE4  61                 	db	97	;'a'
  1403  008FE5  72                 	db	114	;'r'
  1404  008FE6  67                 	db	103	;'g'
  1405  008FE7  72                 	db	114	;'r'
  1406  008FE8  00                 	db	0
  1407  008FE9                     STR_10:
  1408  008FE9  46                 	db	70	;'F'
  1409  008FEA  49                 	db	73	;'I'
  1410  008FEB  4C                 	db	76	;'L'
  1411  008FEC  45                 	db	69	;'E'
  1412  008FED  20                 	db	32
  1413  008FEE  20                 	db	32
  1414  008FEF  20                 	db	32
  1415  008FF0  20                 	db	32
  1416  008FF1  00                 	db	0
  1417  008FF2                     STR_1:
  1418  008FF2  4D                 	db	77	;'M'
  1419  008FF3  53                 	db	83	;'S'
  1420  008FF4  44                 	db	68	;'D'
  1421  008FF5  4F                 	db	79	;'O'
  1422  008FF6  53                 	db	83	;'S'
  1423  008FF7  35                 	db	53	;'5'
  1424  008FF8  2E                 	db	46
  1425  008FF9  30                 	db	48	;'0'
  1426  008FFA  00                 	db	0
  1427  008FFB                     STR_11:
  1428  008FFB  54                 	db	84	;'T'
  1429  008FFC  58                 	db	88	;'X'
  1430  008FFD  54                 	db	84	;'T'
  1431  008FFE  00                 	db	0
  1432  0000                     
  1433                           ; #config settings
  1434  008FFF  00                 	db	0	; dummy byte at the end
  1435  0000                     
  1436                           	psect	cinit
  1437  006AF8                     __pcinit:
  1438                           	opt stack 0
  1439  006AF8                     start_initialization:
  1440                           	opt stack 0
  1441  006AF8                     __initialization:
  1442                           	opt stack 0
  1443                           
  1444                           ; Initialize objects allocated to BANK1 (37 bytes)
  1445                           ; load TBLPTR registers with __pidataBANK1
  1446  006AF8  0E30               	movlw	low __pidataBANK1
  1447  006AFA  6EF6               	movwf	tblptrl,c
  1448  006AFC  0E86               	movlw	high __pidataBANK1
  1449  006AFE  6EF7               	movwf	tblptrh,c
  1450  006B00  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1451  006B02  6EF8               	movwf	tblptru,c
  1452  006B04  EE01  F0D9         	lfsr	0,__pdataBANK1
  1453  006B08  EE10 F025          	lfsr	1,37
  1454  006B0C                     copy_data0:
  1455  006B0C  0009               	tblrd		*+
  1456  006B0E  CFF5 FFEE          	movff	tablat,postinc0
  1457  006B12  50E5               	movf	postdec1,w,c
  1458  006B14  50E1               	movf	fsr1l,w,c
  1459  006B16  E1FA               	bnz	copy_data0
  1460                           
  1461                           ; Initialize objects allocated to BANK0 (1 bytes)
  1462                           ; load TBLPTR registers with __pidataBANK0
  1463  006B18  0ECE               	movlw	low __pidataBANK0
  1464  006B1A  6EF6               	movwf	tblptrl,c
  1465  006B1C  0E89               	movlw	high __pidataBANK0
  1466  006B1E  6EF7               	movwf	tblptrh,c
  1467  006B20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1468  006B22  6EF8               	movwf	tblptru,c
  1469  006B24  0009               	tblrd		*+	;fetch initializer
  1470  006B26  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1471                           
  1472                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1473  006B2A  EE03  F080         	lfsr	0,__pbssBIGRAMll
  1474  006B2E  EE12 F000          	lfsr	1,512
  1475  006B32                     clear_0:
  1476  006B32  6AEE               	clrf	postinc0,c
  1477  006B34  50E5               	movf	postdec1,w,c
  1478  006B36  50E1               	movf	fsr1l,w,c
  1479  006B38  E1FC               	bnz	clear_0
  1480  006B3A  50E2               	movf	fsr1h,w,c
  1481  006B3C  E1FA               	bnz	clear_0
  1482                           
  1483                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1484  006B3E  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1485  006B42  EE14 F000          	lfsr	1,1024
  1486  006B46                     clear_1:
  1487  006B46  6AEE               	clrf	postinc0,c
  1488  006B48  50E5               	movf	postdec1,w,c
  1489  006B4A  50E1               	movf	fsr1l,w,c
  1490  006B4C  E1FC               	bnz	clear_1
  1491  006B4E  50E2               	movf	fsr1h,w,c
  1492  006B50  E1FA               	bnz	clear_1
  1493                           
  1494                           ; Clear objects allocated to BANK3 (128 bytes)
  1495  006B52  EE03  F000         	lfsr	0,__pbssBANK3
  1496  006B56  0E80               	movlw	128
  1497  006B58                     clear_2:
  1498  006B58  6AEE               	clrf	postinc0,c
  1499  006B5A  06E8               	decf	wreg,f,c
  1500  006B5C  E1FD               	bnz	clear_2
  1501                           
  1502                           ; Clear objects allocated to BANK2 (208 bytes)
  1503  006B5E  EE02  F000         	lfsr	0,__pbssBANK2
  1504  006B62  0ED0               	movlw	208
  1505  006B64                     clear_3:
  1506  006B64  6AEE               	clrf	postinc0,c
  1507  006B66  06E8               	decf	wreg,f,c
  1508  006B68  E1FD               	bnz	clear_3
  1509                           
  1510                           ; Clear objects allocated to BANK1 (217 bytes)
  1511  006B6A  EE01  F000         	lfsr	0,__pbssBANK1
  1512  006B6E  0ED9               	movlw	217
  1513  006B70                     clear_4:
  1514  006B70  6AEE               	clrf	postinc0,c
  1515  006B72  06E8               	decf	wreg,f,c
  1516  006B74  E1FD               	bnz	clear_4
  1517                           
  1518                           ; Clear objects allocated to BANK0 (70 bytes)
  1519  006B76  EE00  F0B9         	lfsr	0,__pbssBANK0
  1520  006B7A  0E46               	movlw	70
  1521  006B7C                     clear_5:
  1522  006B7C  6AEE               	clrf	postinc0,c
  1523  006B7E  06E8               	decf	wreg,f,c
  1524  006B80  E1FD               	bnz	clear_5
  1525  006B82                     end_of_initialization:
  1526                           	opt stack 0
  1527  006B82                     __end_of__initialization:
  1528                           	opt stack 0
  1529  006B82  0100               	movlb	0
  1530  006B84  EFDD  F01E         	goto	_main	;jump to C main() function
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           
  1541                           	psect	bssBANK0
  1542  0000B9                     __pbssBANK0:
  1543                           	opt stack 0
  1544  0000B9                     _os:
  1545                           	opt stack 0
  1546  0000B9                     	ds	6
  1547  0000BF                     _inPipes:
  1548                           	opt stack 0
  1549  0000BF                     	ds	6
  1550  0000C5                     _pBDTEntryIn:
  1551                           	opt stack 0
  1552  0000C5                     	ds	6
  1553  0000CB                     _hex_file_size:
  1554                           	opt stack 0
  1555  0000CB                     	ds	4
  1556  0000CF                     _hex_file_offset:
  1557                           	opt stack 0
  1558  0000CF                     	ds	4
  1559  0000D3                     _TransferLength:
  1560                           	opt stack 0
  1561  0000D3                     	ds	2
  1562  0000D5                     _USBMSDInHandle:
  1563                           	opt stack 0
  1564  0000D5                     	ds	2
  1565  0000D7                     _USBMSDOutHandle:
  1566                           	opt stack 0
  1567  0000D7                     	ds	2
  1568  0000D9                     _pBDTEntryEP0OutNext:
  1569                           	opt stack 0
  1570  0000D9                     	ds	2
  1571  0000DB                     _pBDTEntryEP0OutCurrent:
  1572                           	opt stack 0
  1573  0000DB                     	ds	2
  1574  0000DD                     _start_from_byte_next:
  1575                           	opt stack 0
  1576  0000DD                     	ds	1
  1577  0000DE                     _last_error:
  1578                           	opt stack 0
  1579  0000DE                     	ds	1
  1580  0000DF                     _power_state:
  1581                           	opt stack 0
  1582  0000DF                     	ds	1
  1583  0000E0                     _userInterfaceStatus:
  1584                           	opt stack 0
  1585  0000E0                     	ds	1
  1586  0000E1                     _MSDCBWValid:
  1587                           	opt stack 0
  1588  0000E1                     	ds	1
  1589  0000E2                     _MSDHostNoData:
  1590                           	opt stack 0
  1591  0000E2                     	ds	1
  1592  0000E3                     _SoftDetach:
  1593                           	opt stack 0
  1594  0000E3                     	ds	1
  1595  0000E4                     _MSDRetryAttempt:
  1596                           	opt stack 0
  1597  0000E4                     	ds	1
  1598  0000E5                     _MSDWriteState:
  1599                           	opt stack 0
  1600  0000E5                     	ds	1
  1601  0000E6                     _MSDReadState:
  1602                           	opt stack 0
  1603  0000E6                     	ds	1
  1604  0000E7                     _MSDCommandState:
  1605                           	opt stack 0
  1606  0000E7                     	ds	1
  1607  0000E8                     _MSD_State:
  1608                           	opt stack 0
  1609  0000E8                     	ds	1
  1610  0000E9                     _USBTicksSinceSuspendEnd:
  1611                           	opt stack 0
  1612  0000E9                     	ds	1
  1613  0000EA                     _USBDeferOUTDataStagePackets:
  1614                           	opt stack 0
  1615  0000EA                     	ds	1
  1616  0000EB                     _USBDeferINDataStagePackets:
  1617                           	opt stack 0
  1618  0000EB                     	ds	1
  1619  0000EC                     _USBStatusStageEnabledFlag2:
  1620                           	opt stack 0
  1621  0000EC                     	ds	1
  1622  0000ED                     _USBStatusStageEnabledFlag1:
  1623                           	opt stack 0
  1624  0000ED                     	ds	1
  1625  0000EE                     _USBDeferStatusStagePacket:
  1626                           	opt stack 0
  1627  0000EE                     	ds	1
  1628  0000EF                     _USBStatusStageTimeoutCounter:
  1629                           	opt stack 0
  1630  0000EF                     	ds	1
  1631  0000F0                     _BothEP0OutUOWNsSet:
  1632                           	opt stack 0
  1633  0000F0                     	ds	1
  1634  0000F1                     _endpoint_number:
  1635                           	opt stack 0
  1636  0000F1                     	ds	1
  1637  0000F2                     _USBBusIsSuspended:
  1638                           	opt stack 0
  1639  0000F2                     	ds	1
  1640  0000F3                     _RemoteWakeup:
  1641                           	opt stack 0
  1642  0000F3                     	ds	1
  1643  0000F4                     _controlTransferState:
  1644                           	opt stack 0
  1645  0000F4                     	ds	1
  1646  0000F5                     _shortPacketStatus:
  1647                           	opt stack 0
  1648  0000F5                     	ds	1
  1649  0000F6                     _USBDeviceState:
  1650                           	opt stack 0
  1651  0000F6                     	ds	1
  1652  0000F7                     _fast_read_cluster_number:
  1653                           	opt stack 0
  1654  0000F7                     	ds	2
  1655  0000F9                     _fast_read_cluster:
  1656                           	opt stack 0
  1657  0000F9                     	ds	2
  1658  0000FB                     _active_protocol:
  1659                           	opt stack 0
  1660  0000FB                     	ds	1
  1661  0000FC                     _idle_rate:
  1662                           	opt stack 0
  1663  0000FC                     	ds	1
  1664  0000FD                     _USTATcopy:
  1665                           	opt stack 0
  1666  0000FD                     	ds	1
  1667  0000FE                     _USBActiveConfiguration:
  1668                           	opt stack 0
  1669  0000FE                     	ds	1
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1h	equ	0xFE2
  1678                           fsr1l	equ	0xFE1
  1679                           
  1680                           	psect	dataBANK0
  1681  0000FF                     __pdataBANK0:
  1682                           	opt stack 0
  1683  0000FF                     _file_number:
  1684                           	opt stack 0
  1685  0000FF                     	ds	1
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           postdec1	equ	0xFE5
  1693                           fsr1h	equ	0xFE2
  1694                           fsr1l	equ	0xFE1
  1695                           
  1696                           	psect	bssBANK1
  1697  000100                     __pbssBANK1:
  1698                           	opt stack 0
  1699  000100                     _gblCBW:
  1700                           	opt stack 0
  1701  000100                     	ds	31
  1702  00011F                     _gblSenseData:
  1703                           	opt stack 0
  1704  00011F                     	ds	18
  1705  000131                     _outPipes:
  1706                           	opt stack 0
  1707  000131                     	ds	8
  1708  000139                     _communicationSettings:
  1709                           	opt stack 0
  1710  000139                     	ds	7
  1711  000140                     _pBDTEntryOut:
  1712                           	opt stack 0
  1713  000140                     	ds	6
  1714  000146                     _extended_linear_address:
  1715                           	opt stack 0
  1716  000146                     	ds	4
  1717  00014A                     _file_maximum_address:
  1718                           	opt stack 0
  1719  00014A                     	ds	4
  1720  00014E                     _file_minimum_address:
  1721                           	opt stack 0
  1722  00014E                     	ds	4
  1723  000152                     _gblBLKLen:
  1724                           	opt stack 0
  1725  000152                     	ds	4
  1726  000156                     _gblNumBLKS:
  1727                           	opt stack 0
  1728  000156                     	ds	4
  1729  00015A                     _LBA:
  1730                           	opt stack 0
  1731  00015A                     	ds	4
  1732  00015E                     _USB1msTickCount:
  1733                           	opt stack 0
  1734  00015E                     	ds	4
  1735  000162                     _config_external:
  1736                           	opt stack 0
  1737  000162                     	ds	3
  1738  000165                     _config_internal:
  1739                           	opt stack 0
  1740  000165                     	ds	3
  1741  000168                     _ep_data_out:
  1742                           	opt stack 0
  1743  000168                     	ds	3
  1744  00016B                     _ep_data_in:
  1745                           	opt stack 0
  1746  00016B                     	ds	3
  1747  00016E                     _FileAddress:
  1748                           	opt stack 0
  1749  00016E                     	ds	2
  1750  000170                     _flash_pages_written:
  1751                           	opt stack 0
  1752  000170                     	ds	2
  1753  000172                     _total_hex_file_entries:
  1754                           	opt stack 0
  1755  000172                     	ds	2
  1756  000174                     _hex_file_entries:
  1757                           	opt stack 0
  1758  000174                     	ds	2
  1759  000176                     _startup_timer:
  1760                           	opt stack 0
  1761  000176                     	ds	2
  1762  000178                     _system_ui_inactive_count:
  1763                           	opt stack 0
  1764  000178                     	ds	2
  1765  00017A                     _USBInHandle:
  1766                           	opt stack 0
  1767  00017A                     	ds	2
  1768  00017C                     _USBOutHandle:
  1769                           	opt stack 0
  1770  00017C                     	ds	2
  1771  00017E                     _gblMediaPresent:
  1772                           	opt stack 0
  1773  00017E                     	ds	2
  1774  000180                     _MSBBufferIndex:
  1775                           	opt stack 0
  1776  000180                     	ds	2
  1777  000182                     _ptrNextData:
  1778                           	opt stack 0
  1779  000182                     	ds	2
  1780  000184                     _pDst:
  1781                           	opt stack 0
  1782  000184                     	ds	2
  1783  000186                     _active_configuration:
  1784                           	opt stack 0
  1785  000186                     	ds	1
  1786  000187                     _i2c_frequency:
  1787                           	opt stack 0
  1788  000187                     	ds	1
  1789  000188                     _gblCBWLength:
  1790                           	opt stack 0
  1791  000188                     	ds	1
  1792  000189                     _file_buffer:
  1793                           	opt stack 0
  1794  000189                     	ds	50
  1795  0001BB                     _hex_file_entry:
  1796                           	opt stack 0
  1797  0001BB                     	ds	23
  1798  0001D2                     _mediaInformation:
  1799                           	opt stack 0
  1800  0001D2                     	ds	5
  1801  0001D7                     _USBAlternateInterface:
  1802                           	opt stack 0
  1803  0001D7                     	ds	2
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           
  1814                           	psect	dataBANK1
  1815  0001D9                     __pdataBANK1:
  1816                           	opt stack 0
  1817  0001D9                     _LUN:
  1818                           	opt stack 0
  1819  0001D9                     	ds	20
  1820  0001ED                     i2c_display_send_init_sequence@F6808:
  1821                           	opt stack 0
  1822  0001ED                     	ds	9
  1823  0001F6                     	ds	8
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           postdec1	equ	0xFE5
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           
  1834                           	psect	bssBANK2
  1835  000200                     __pbssBANK2:
  1836                           	opt stack 0
  1837  000200                     _display_content:
  1838                           	opt stack 0
  1839  000200                     	ds	80
  1840  000250                     __spi_external_tx_buffer:
  1841                           	opt stack 0
  1842  000250                     	ds	64
  1843  000290                     _ReceivedDataBuffer:
  1844                           	opt stack 0
  1845  000290                     	ds	64
  1846                           tblptru	equ	0xFF8
  1847                           tblptrh	equ	0xFF7
  1848                           tblptrl	equ	0xFF6
  1849                           tablat	equ	0xFF5
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           
  1856                           	psect	bssBANK3
  1857  000300                     __pbssBANK3:
  1858                           	opt stack 0
  1859  000300                     __spi_external_rx_buffer:
  1860                           	opt stack 0
  1861  000300                     	ds	64
  1862  000340                     _ToSendDataBuffer:
  1863                           	opt stack 0
  1864  000340                     	ds	64
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           fsr1h	equ	0xFE2
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           	psect	bssBIGRAMlh
  1876  000800                     __pbssBIGRAMlh:
  1877                           	opt stack 0
  1878  000800                     _pageBuffer:
  1879                           	opt stack 0
  1880  000800                     	ds	1024
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           fsr1h	equ	0xFE2
  1889                           fsr1l	equ	0xFE1
  1890                           
  1891                           	psect	bssBIGRAMll
  1892  000380                     __pbssBIGRAMll:
  1893                           	opt stack 0
  1894  000380                     _buffer:
  1895                           	opt stack 0
  1896  000380                     	ds	512
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           postdec1	equ	0xFE5
  1904                           fsr1h	equ	0xFE2
  1905                           fsr1l	equ	0xFE1
  1906                           
  1907                           	psect	cstackBANK0
  1908  000060                     __pcstackBANK0:
  1909                           	opt stack 0
  1910  000060                     ??__bootloader_verify_file:
  1911  000060                     ??__bootloader_program:
  1912  000060                     fat_rename_file@file_number:
  1913                           	opt stack 0
  1914  000060                     fat_create_file@next_cluster:
  1915                           	opt stack 0
  1916  000060                     fat_append_to_file@sector:
  1917                           	opt stack 0
  1918  000060                     fat_modify_file@sector:
  1919                           	opt stack 0
  1920  000060                     fat_read_from_file@start_byte:
  1921                           	opt stack 0
  1922  000060                     fat_resize_file@old_file_size:
  1923                           	opt stack 0
  1924                           
  1925                           ; 4 bytes @ 0x0
  1926  000060                     	ds	1
  1927  000061                     fat_rename_file@root:
  1928                           	opt stack 0
  1929                           
  1930                           ; 32 bytes @ 0x1
  1931  000061                     	ds	1
  1932  000062                     fat_modify_file@file_number:
  1933                           	opt stack 0
  1934  000062                     fat_create_file@cluster_count:
  1935                           	opt stack 0
  1936  000062                     fat_append_to_file@file_size:
  1937                           	opt stack 0
  1938                           
  1939                           ; 4 bytes @ 0x2
  1940  000062                     	ds	1
  1941  000063                     fat_modify_file@cluster:
  1942                           	opt stack 0
  1943                           
  1944                           ; 2 bytes @ 0x3
  1945  000063                     	ds	1
  1946  000064                     fat_create_file@root_slot:
  1947                           	opt stack 0
  1948  000064                     fat_resize_file@old_number_of_clusters:
  1949                           	opt stack 0
  1950  000064                     fat_read_from_file@length:
  1951                           	opt stack 0
  1952                           
  1953                           ; 4 bytes @ 0x4
  1954  000064                     	ds	1
  1955  000065                     fat_create_file@number_of_clusters:
  1956                           	opt stack 0
  1957  000065                     fat_modify_file@offset:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x5
  1961  000065                     	ds	1
  1962  000066                     fat_resize_file@file_number:
  1963                           	opt stack 0
  1964  000066                     fat_append_to_file@new_cluster:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x6
  1968  000066                     	ds	1
  1969  000067                     fat_create_file@cluster:
  1970                           	opt stack 0
  1971  000067                     fat_resize_file@cntr:
  1972                           	opt stack 0
  1973  000067                     fat_modify_file@number_of_bytes:
  1974                           	opt stack 0
  1975                           
  1976                           ; 2 bytes @ 0x7
  1977  000067                     	ds	1
  1978  000068                     fat_append_to_file@fat_cluster:
  1979                           	opt stack 0
  1980  000068                     fat_read_from_file@data:
  1981                           	opt stack 0
  1982  000068                     __bootloader_program@buffer:
  1983                           	opt stack 0
  1984  000068                     __bootloader_verify_file@root:
  1985                           	opt stack 0
  1986                           
  1987                           ; 32 bytes @ 0x8
  1988  000068                     	ds	1
  1989  000069                     fat_resize_file@new_number_of_clusters:
  1990                           	opt stack 0
  1991  000069                     fat_create_file@root_entry:
  1992                           	opt stack 0
  1993  000069                     fat_modify_file@root:
  1994                           	opt stack 0
  1995                           
  1996                           ; 32 bytes @ 0x9
  1997  000069                     	ds	1
  1998  00006A                     ??_fat_read_from_file:
  1999  00006A                     fat_append_to_file@offset:
  2000                           	opt stack 0
  2001  00006A                     __bootloader_program@entry_page:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0xA
  2005  00006A                     	ds	1
  2006  00006B                     fat_resize_file@root:
  2007                           	opt stack 0
  2008                           
  2009                           ; 32 bytes @ 0xB
  2010  00006B                     	ds	1
  2011  00006C                     fat_append_to_file@file_number:
  2012                           	opt stack 0
  2013  00006C                     __bootloader_program@address_within_page:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0xC
  2017  00006C                     	ds	1
  2018  00006D                     fat_append_to_file@length:
  2019                           	opt stack 0
  2020                           
  2021                           ; 2 bytes @ 0xD
  2022  00006D                     	ds	1
  2023  00006E                     fat_read_from_file@file_number:
  2024                           	opt stack 0
  2025  00006E                     __bootloader_program@root:
  2026                           	opt stack 0
  2027                           
  2028                           ; 32 bytes @ 0xE
  2029  00006E                     	ds	1
  2030  00006F                     fat_read_from_file@cluster_number:
  2031                           	opt stack 0
  2032  00006F                     fat_append_to_file@position:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0xF
  2036  00006F                     	ds	2
  2037  000071                     fat_read_from_file@cluster:
  2038                           	opt stack 0
  2039                           
  2040                           ; 2 bytes @ 0x11
  2041  000071                     	ds	2
  2042  000073                     fat_append_to_file@root:
  2043                           	opt stack 0
  2044  000073                     fat_read_from_file@root:
  2045                           	opt stack 0
  2046                           
  2047                           ; 32 bytes @ 0x13
  2048  000073                     	ds	14
  2049  000081                     fat_rename_file@cntr:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x21
  2053  000081                     	ds	7
  2054  000088                     __bootloader_verify_file@rec_counter:
  2055                           	opt stack 0
  2056                           
  2057                           ; 1 bytes @ 0x28
  2058  000088                     	ds	1
  2059  000089                     fat_modify_file@position:
  2060                           	opt stack 0
  2061  000089                     __bootloader_verify_file@return_value:
  2062                           	opt stack 0
  2063                           
  2064                           ; 4 bytes @ 0x29
  2065  000089                     	ds	2
  2066  00008B                     fat_resize_file@next_cluster:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x2B
  2070  00008B                     	ds	2
  2071  00008D                     fat_resize_file@cluster:
  2072                           	opt stack 0
  2073  00008D                     __bootloader_verify_file@address32:
  2074                           	opt stack 0
  2075                           
  2076                           ; 4 bytes @ 0x2D
  2077  00008D                     	ds	1
  2078  00008E                     __bootloader_program@return_value:
  2079                           	opt stack 0
  2080                           
  2081                           ; 4 bytes @ 0x2E
  2082  00008E                     	ds	4
  2083  000092                     __bootloader_program@address32:
  2084                           	opt stack 0
  2085                           
  2086                           ; 4 bytes @ 0x32
  2087  000092                     	ds	1
  2088  000093                     api_parse@inBuffer:
  2089                           	opt stack 0
  2090  000093                     __fill_buffer_read_file@inBuffer:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x33
  2094  000093                     	ds	2
  2095  000095                     api_parse@receivedDataLength:
  2096                           	opt stack 0
  2097  000095                     __fill_buffer_read_file@outBuffer:
  2098                           	opt stack 0
  2099                           
  2100                           ; 2 bytes @ 0x35
  2101  000095                     	ds	1
  2102  000096                     ??_api_parse:
  2103  000096                     __bootloader_program@start_from_byte:
  2104                           	opt stack 0
  2105                           
  2106                           ; 1 bytes @ 0x36
  2107  000096                     	ds	1
  2108  000097                     ??__fill_buffer_read_file:
  2109  000097                     __bootloader_program@cntr:
  2110                           	opt stack 0
  2111                           
  2112                           ; 2 bytes @ 0x37
  2113  000097                     	ds	2
  2114  000099                     __bootloader_program@page_to_write:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x39
  2118  000099                     	ds	2
  2119  00009B                     __fill_buffer_read_file@file_size:
  2120                           	opt stack 0
  2121                           
  2122                           ; 4 bytes @ 0x3B
  2123  00009B                     	ds	4
  2124  00009F                     __fill_buffer_read_file@data_length:
  2125                           	opt stack 0
  2126                           
  2127                           ; 4 bytes @ 0x3F
  2128  00009F                     	ds	4
  2129  0000A3                     __fill_buffer_read_file@start:
  2130                           	opt stack 0
  2131                           
  2132                           ; 4 bytes @ 0x43
  2133  0000A3                     	ds	4
  2134  0000A7                     api_prepare@inBuffer:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x47
  2138  0000A7                     	ds	2
  2139  0000A9                     api_prepare@outBuffer:
  2140                           	opt stack 0
  2141                           
  2142                           ; 2 bytes @ 0x49
  2143  0000A9                     	ds	2
  2144  0000AB                     ??_APP_DeviceCustomHIDTasks:
  2145                           
  2146                           ; 1 bytes @ 0x4B
  2147  0000AB                     	ds	4
  2148  0000AF                     ??_main:
  2149                           
  2150                           ; 1 bytes @ 0x4F
  2151  0000AF                     	ds	2
  2152  0000B1                     main@tx_start_addr:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x51
  2156  0000B1                     	ds	2
  2157  0000B3                     main@bytes_transmitted:
  2158                           	opt stack 0
  2159                           
  2160                           ; 2 bytes @ 0x53
  2161  0000B3                     	ds	2
  2162  0000B5                     main@rx_buffer:
  2163                           	opt stack 0
  2164                           
  2165                           ; 2 bytes @ 0x55
  2166  0000B5                     	ds	2
  2167  0000B7                     main@tx_buffer:
  2168                           	opt stack 0
  2169                           
  2170                           ; 2 bytes @ 0x57
  2171  0000B7                     	ds	2
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	cstackCOMRAM
  2183  000001                     __pcstackCOMRAM:
  2184                           	opt stack 0
  2185  000001                     ??_USBStdGetDscHandler:
  2186  000001                     ??_USBStdGetStatusHandler:
  2187  000001                     ??_system_delay_ms:
  2188  000001                     ??__i2c_wait_idle:
  2189  000001                     ??__display_clear:
  2190  000001                     ?_USBTransferOnePacket:
  2191                           	opt stack 0
  2192  000001                     ?_spi_get_external_rx_buffer:
  2193                           	opt stack 0
  2194  000001                     ?_spi_get_external_tx_buffer:
  2195                           	opt stack 0
  2196  000001                     ?_ExternalFlash_MediaInitialize:
  2197                           	opt stack 0
  2198  000001                     ?_ExternalFlash_SectorSizeRead:
  2199                           	opt stack 0
  2200  000001                     ?_bootloader_get_entries:
  2201                           	opt stack 0
  2202  000001                     ?_bootloader_get_total_entries:
  2203                           	opt stack 0
  2204  000001                     ?_bootloader_get_rec_address:
  2205                           	opt stack 0
  2206  000001                     ?_bootloader_get_flashPagesWritten:
  2207                           	opt stack 0
  2208  000001                     ?_strncmp:
  2209                           	opt stack 0
  2210  000001                     ?_internalFlash_pageFromAddress:
  2211                           	opt stack 0
  2212  000001                     ?_internalFlash_getBuffer:
  2213                           	opt stack 0
  2214  000001                     ?__get_time:
  2215                           	opt stack 0
  2216  000001                     ?__get_date:
  2217                           	opt stack 0
  2218  000001                     ?__sector_from_cluster:
  2219                           	opt stack 0
  2220  000001                     ?_bootloader_get_rec_dataLength:
  2221                           	opt stack 0
  2222  000001                     ?___lwdiv:
  2223                           	opt stack 0
  2224  000001                     ?___lwmod:
  2225                           	opt stack 0
  2226  000001                     ?_ExternalFlash_CapacityRead:
  2227                           	opt stack 0
  2228  000001                     ?_bootloader_get_file_size:
  2229                           	opt stack 0
  2230  000001                     ?_internalFlash_addressFromPage:
  2231                           	opt stack 0
  2232  000001                     ?___lldiv:
  2233                           	opt stack 0
  2234  000001                     ?___llmod:
  2235                           	opt stack 0
  2236  000001                     USBTransferOnePacket@dir:
  2237                           	opt stack 0
  2238  000001                     USBStallEndpoint@dir:
  2239                           	opt stack 0
  2240  000001                     USBConfigureEndpoint@direction:
  2241                           	opt stack 0
  2242  000001                     USBCtrlTrfTxService@byteToSend:
  2243                           	opt stack 0
  2244  000001                     USBCtrlTrfRxService@i:
  2245                           	opt stack 0
  2246  000001                     __i2c_send@dat:
  2247                           	opt stack 0
  2248  000001                     i2c_set_frequency@frequency:
  2249                           	opt stack 0
  2250  000001                     display_get_character@position:
  2251                           	opt stack 0
  2252  000001                     __display_search@cntr:
  2253                           	opt stack 0
  2254  000001                     __display_rebooting@cntr:
  2255                           	opt stack 0
  2256  000001                     hexCharToUint8@c:
  2257                           	opt stack 0
  2258  000001                     bootloader_get_rec_data@index:
  2259                           	opt stack 0
  2260  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2261                           	opt stack 0
  2262  000001                     spi_set_configuration@configuration:
  2263                           	opt stack 0
  2264  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2265                           	opt stack 0
  2266  000001                     SYSTEM_Initialize@pll_startup_counter:
  2267                           	opt stack 0
  2268  000001                     ExternalFlash_MediaInitialize@config:
  2269                           	opt stack 0
  2270  000001                     ExternalFlash_SectorSizeRead@config:
  2271                           	opt stack 0
  2272  000001                     ExternalFlash_CapacityRead@config:
  2273                           	opt stack 0
  2274  000001                     ExternalFlash_MediaDetect@config:
  2275                           	opt stack 0
  2276  000001                     ExternalFlash_WriteProtectStateGet@config:
  2277                           	opt stack 0
  2278  000001                     __sector_from_cluster@fat_cluster:
  2279                           	opt stack 0
  2280  000001                     __get_mbr@idx:
  2281                           	opt stack 0
  2282  000001                     __get_fbr@idx:
  2283                           	opt stack 0
  2284  000001                     __get_fat@idx:
  2285                           	opt stack 0
  2286  000001                     __get_root@idx:
  2287                           	opt stack 0
  2288  000001                     __get_data@idx:
  2289                           	opt stack 0
  2290  000001                     internalFlash_addressFromPage@page:
  2291                           	opt stack 0
  2292  000001                     __fill_buffer_get_configuration@outBuffer:
  2293                           	opt stack 0
  2294  000001                     spi_tx@data:
  2295                           	opt stack 0
  2296  000001                     spi_tx_tx@command:
  2297                           	opt stack 0
  2298  000001                     spi_tx_rx@command:
  2299                           	opt stack 0
  2300  000001                     ___lwdiv@dividend:
  2301                           	opt stack 0
  2302  000001                     ___lwmod@dividend:
  2303                           	opt stack 0
  2304  000001                     memcpy@d1:
  2305                           	opt stack 0
  2306  000001                     memset@p1:
  2307                           	opt stack 0
  2308  000001                     strncmp@s1:
  2309                           	opt stack 0
  2310  000001                     __spi_init@details:
  2311                           	opt stack 0
  2312  000001                     __bootloader_check_address@address:
  2313                           	opt stack 0
  2314  000001                     internalFlash_pageFromAddress@address:
  2315                           	opt stack 0
  2316  000001                     ___lldiv@dividend:
  2317                           	opt stack 0
  2318  000001                     ___llmod@dividend:
  2319                           	opt stack 0
  2320                           
  2321                           ; 4 bytes @ 0x0
  2322  000001                     	ds	1
  2323  000002                     ??_USBConfigureEndpoint:
  2324  000002                     ??_USBStallEndpoint:
  2325  000002                     ??_display_get_character:
  2326  000002                     USBCtrlTrfRxService@byteToRead:
  2327                           	opt stack 0
  2328  000002                     USBCtrlTrfInHandler@lastDTS:
  2329                           	opt stack 0
  2330  000002                     system_delay_ms@ms:
  2331                           	opt stack 0
  2332  000002                     hexCharToUint8@ascii:
  2333                           	opt stack 0
  2334  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2335                           	opt stack 0
  2336  000002                     USBTransferOnePacket@data:
  2337                           	opt stack 0
  2338  000002                     USBStdGetStatusHandler@p:
  2339                           	opt stack 0
  2340                           
  2341                           ; 2 bytes @ 0x1
  2342  000002                     	ds	1
  2343  000003                     ??_MSDComputeDeviceInAndResidue:
  2344  000003                     ??__get_mbr:
  2345  000003                     ??__get_fbr:
  2346  000003                     ??__get_fat:
  2347  000003                     ??__get_root:
  2348  000003                     ?_hexCharsToUint16:
  2349                           	opt stack 0
  2350  000003                     system_delay_ms@cntr:
  2351                           	opt stack 0
  2352  000003                     __display_clear@row:
  2353                           	opt stack 0
  2354  000003                     hexCharsToUint8@c2:
  2355                           	opt stack 0
  2356  000003                     hexCharsToUint16@c2:
  2357                           	opt stack 0
  2358  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2359                           	opt stack 0
  2360  000003                     __get_time@time:
  2361                           	opt stack 0
  2362  000003                     __get_date@date:
  2363                           	opt stack 0
  2364  000003                     internalFlash_erasePage@page:
  2365                           	opt stack 0
  2366  000003                     internalFlash_writePage@page:
  2367                           	opt stack 0
  2368  000003                     spi_tx@length:
  2369                           	opt stack 0
  2370  000003                     spi_tx_tx@command_length:
  2371                           	opt stack 0
  2372  000003                     spi_tx_rx@command_length:
  2373                           	opt stack 0
  2374  000003                     ___lwdiv@divisor:
  2375                           	opt stack 0
  2376  000003                     ___lwmod@divisor:
  2377                           	opt stack 0
  2378  000003                     memset@c:
  2379                           	opt stack 0
  2380  000003                     strncmp@s2:
  2381                           	opt stack 0
  2382  000003                     memcpy@s1:
  2383                           	opt stack 0
  2384                           
  2385                           ; 3 bytes @ 0x2
  2386  000003                     	ds	1
  2387  000004                     ??_hexCharsToUint8:
  2388  000004                     USBTransferOnePacket@len:
  2389                           	opt stack 0
  2390  000004                     display_get_character@line:
  2391                           	opt stack 0
  2392  000004                     __display_clear@col:
  2393                           	opt stack 0
  2394  000004                     hexCharsToUint16@c3:
  2395                           	opt stack 0
  2396  000004                     spi_init@configuration:
  2397                           	opt stack 0
  2398                           
  2399                           ; 1 bytes @ 0x3
  2400  000004                     	ds	1
  2401  000005                     ??_USBTransferOnePacket:
  2402  000005                     ??_spi_tx:
  2403  000005                     ??_internalFlash_pageFromAddress:
  2404  000005                     SYSTEM_Initialize@state:
  2405                           	opt stack 0
  2406  000005                     hexCharsToUint8@c1:
  2407                           	opt stack 0
  2408  000005                     hexCharsToUint16@c4:
  2409                           	opt stack 0
  2410  000005                     __bootloader_check_address@dataLength:
  2411                           	opt stack 0
  2412  000005                     ___lwmod@counter:
  2413                           	opt stack 0
  2414  000005                     __update_modified_time@root:
  2415                           	opt stack 0
  2416  000005                     __fill_buffer_get_display@outBuffer:
  2417                           	opt stack 0
  2418  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2419                           	opt stack 0
  2420  000005                     spi_tx_tx@data:
  2421                           	opt stack 0
  2422  000005                     spi_tx_rx@data:
  2423                           	opt stack 0
  2424  000005                     ___lwdiv@quotient:
  2425                           	opt stack 0
  2426  000005                     memset@n:
  2427                           	opt stack 0
  2428  000005                     strncmp@len:
  2429                           	opt stack 0
  2430  000005                     internalFlash_erasePage@address:
  2431                           	opt stack 0
  2432  000005                     internalFlash_writePage@address:
  2433                           	opt stack 0
  2434  000005                     internalFlash_addressFromPage@address:
  2435                           	opt stack 0
  2436  000005                     ___lldiv@divisor:
  2437                           	opt stack 0
  2438  000005                     ___llmod@divisor:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x4
  2442  000005                     	ds	1
  2443  000006                     ??_hexCharsToUint16:
  2444  000006                     ??__bootloader_check_address:
  2445  000006                     USBStallEndpoint@ep:
  2446                           	opt stack 0
  2447  000006                     USBConfigureEndpoint@EPNum:
  2448                           	opt stack 0
  2449  000006                     hexCharsToUint8@retVal:
  2450                           	opt stack 0
  2451  000006                     __i2c_write@data:
  2452                           	opt stack 0
  2453  000006                     __i2c_read@data:
  2454                           	opt stack 0
  2455  000006                     i2c_display_write_fixed@data:
  2456                           	opt stack 0
  2457  000006                     memcpy@n:
  2458                           	opt stack 0
  2459                           
  2460                           ; 2 bytes @ 0x5
  2461  000006                     	ds	1
  2462  000007                     ??_strncmp:
  2463  000007                     ??__fill_buffer_get_bootloader_details:
  2464  000007                     __fill_buffer_get_display@secondHalf:
  2465                           	opt stack 0
  2466  000007                     ___lwdiv@counter:
  2467                           	opt stack 0
  2468  000007                     USBStallEndpoint@p:
  2469                           	opt stack 0
  2470  000007                     USBConfigureEndpoint@handle:
  2471                           	opt stack 0
  2472  000007                     spi_tx_tx@data_length:
  2473                           	opt stack 0
  2474  000007                     spi_tx_rx@data_length:
  2475                           	opt stack 0
  2476  000007                     memset@p:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x6
  2480  000007                     	ds	1
  2481  000008                     ??__fill_buffer_get_display:
  2482  000008                     __i2c_write@length:
  2483                           	opt stack 0
  2484  000008                     __i2c_read@length:
  2485                           	opt stack 0
  2486  000008                     i2c_display_write_fixed@length:
  2487                           	opt stack 0
  2488  000008                     utoa@buf:
  2489                           	opt stack 0
  2490  000008                     memcpy@s:
  2491                           	opt stack 0
  2492                           
  2493                           ; 3 bytes @ 0x7
  2494  000008                     	ds	1
  2495  000009                     ??_spi_tx_rx:
  2496  000009                     ??_spi_tx_tx:
  2497  000009                     ??__i2c_read:
  2498  000009                     ?_internalFlash_addressWithinPage:
  2499                           	opt stack 0
  2500  000009                     USBDeviceInit@i:
  2501                           	opt stack 0
  2502  000009                     USBEnableEndpoint@options:
  2503                           	opt stack 0
  2504  000009                     USBTransferOnePacket@ep:
  2505                           	opt stack 0
  2506  000009                     MSDErrorHandler@ErrorCase:
  2507                           	opt stack 0
  2508  000009                     __i2c_write@slave_address:
  2509                           	opt stack 0
  2510  000009                     i2c_display_write_fixed@pos:
  2511                           	opt stack 0
  2512  000009                     __flash_wakeup@command:
  2513                           	opt stack 0
  2514  000009                     hexCharsToUint16@c1:
  2515                           	opt stack 0
  2516  000009                     ___llmod@counter:
  2517                           	opt stack 0
  2518  000009                     internalFlash_writePage@cntr:
  2519                           	opt stack 0
  2520  000009                     internalFlash_addressWithinPage@address:
  2521                           	opt stack 0
  2522  000009                     ___lldiv@quotient:
  2523                           	opt stack 0
  2524                           
  2525                           ; 4 bytes @ 0x8
  2526  000009                     	ds	1
  2527  00000A                     MSDErrorHandler@OldMSD_State:
  2528                           	opt stack 0
  2529  00000A                     __i2c_write@cntr:
  2530                           	opt stack 0
  2531  00000A                     __bootloader_check_address@worst_case:
  2532                           	opt stack 0
  2533  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2534                           	opt stack 0
  2535  00000A                     USBEnableEndpoint@p:
  2536                           	opt stack 0
  2537  00000A                     USBTransferOnePacket@handle:
  2538                           	opt stack 0
  2539  00000A                     hexCharsToUint16@retVal:
  2540                           	opt stack 0
  2541  00000A                     utoa@val:
  2542                           	opt stack 0
  2543                           
  2544                           ; 2 bytes @ 0x9
  2545  00000A                     	ds	1
  2546  00000B                     __ic2_display_set_address@address:
  2547                           	opt stack 0
  2548  00000B                     i2c_digipot_backlight@level:
  2549                           	opt stack 0
  2550  00000B                     __bootloader_check_address@byte_status:
  2551                           	opt stack 0
  2552  00000B                     internalFlash_writePage@block_cntr:
  2553                           	opt stack 0
  2554  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2555                           	opt stack 0
  2556  00000B                     i2c_digipot_reset_on@data_array:
  2557                           	opt stack 0
  2558  00000B                     i2c_digipot_reset_off@data_array:
  2559                           	opt stack 0
  2560  00000B                     i2c_eeprom_writeByte@address:
  2561                           	opt stack 0
  2562  00000B                     memcpy@d:
  2563                           	opt stack 0
  2564  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2565                           	opt stack 0
  2566  00000B                     i2c_display_send_init_sequence@init_sequence:
  2567                           	opt stack 0
  2568                           
  2569                           ; 9 bytes @ 0xA
  2570  00000B                     	ds	1
  2571  00000C                     ??_USBMSDInit:
  2572  00000C                     ?_parseHexFileEntry:
  2573                           	opt stack 0
  2574  00000C                     USBEnableEndpoint@ep:
  2575                           	opt stack 0
  2576  00000C                     __bootloader_check_address@cntr:
  2577                           	opt stack 0
  2578  00000C                     internalFlash_writePage@byte_cntr:
  2579                           	opt stack 0
  2580  00000C                     _USBCheckMSDRequest$2319:
  2581                           	opt stack 0
  2582  00000C                     MSDTransferTerminated@handle:
  2583                           	opt stack 0
  2584  00000C                     __ic2_display_set_address@data_array:
  2585                           	opt stack 0
  2586  00000C                     i2c_digipot_backlight@data_array:
  2587                           	opt stack 0
  2588  00000C                     parseHexFileEntry@data:
  2589                           	opt stack 0
  2590  00000C                     utoa@base:
  2591                           	opt stack 0
  2592  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2593                           	opt stack 0
  2594                           
  2595                           ; 4 bytes @ 0xB
  2596  00000C                     	ds	1
  2597  00000D                     ?__flash_get_status:
  2598                           	opt stack 0
  2599  00000D                     i2c_eeprom_writeByte@data:
  2600                           	opt stack 0
  2601  00000D                     __fill_buffer_get_display@cntr:
  2602                           	opt stack 0
  2603  00000D                     ___lldiv@counter:
  2604                           	opt stack 0
  2605  00000D                     memcpy@tmp:
  2606                           	opt stack 0
  2607  00000D                     internalFlash_addressWithinPage@page:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0xC
  2611  00000D                     	ds	1
  2612  00000E                     ??_i2c_eeprom_writeByte:
  2613  00000E                     i2c_display_cursor@position:
  2614                           	opt stack 0
  2615  00000E                     __fill_buffer_get_display@line:
  2616                           	opt stack 0
  2617  00000E                     _USBCheckMSDRequest$2320:
  2618                           	opt stack 0
  2619  00000E                     _MSDTransferTerminated$2407:
  2620                           	opt stack 0
  2621  00000E                     utoa@v:
  2622                           	opt stack 0
  2623  00000E                     parseHexFileEntry@offset:
  2624                           	opt stack 0
  2625  00000E                     internalFlash_read@address:
  2626                           	opt stack 0
  2627                           
  2628                           ; 4 bytes @ 0xD
  2629  00000E                     	ds	1
  2630  00000F                     ??_internalFlash_addressWithinPage:
  2631  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2632                           	opt stack 0
  2633  00000F                     i2c_display_cursor@line:
  2634                           	opt stack 0
  2635  00000F                     __flash_get_status@command:
  2636                           	opt stack 0
  2637  00000F                     __fill_buffer_get_display@start_line:
  2638                           	opt stack 0
  2639                           
  2640                           ; 1 bytes @ 0xE
  2641  00000F                     	ds	1
  2642  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2643                           	opt stack 0
  2644  000010                     __i2c_read@slave_address:
  2645                           	opt stack 0
  2646  000010                     i2c_display_cursor@address:
  2647                           	opt stack 0
  2648  000010                     __fill_buffer_get_display@position:
  2649                           	opt stack 0
  2650  000010                     utoa@c:
  2651                           	opt stack 0
  2652  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2653                           	opt stack 0
  2654  000010                     __flash_get_status@status:
  2655                           	opt stack 0
  2656  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0xF
  2660  000010                     	ds	1
  2661  000011                     MSDCheckForErrorCases@DeviceNoData:
  2662                           	opt stack 0
  2663  000011                     __i2c_read@cntr:
  2664                           	opt stack 0
  2665  000011                     i2c_eeprom_writeByte@dat:
  2666                           	opt stack 0
  2667  000011                     itoa@buf:
  2668                           	opt stack 0
  2669                           
  2670                           ; 2 bytes @ 0x10
  2671  000011                     	ds	1
  2672  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2673                           	opt stack 0
  2674  000012                     i2c_eeprom_readByte@address:
  2675                           	opt stack 0
  2676  000012                     __flash_is_busy@status:
  2677                           	opt stack 0
  2678  000012                     parseHexFileEntry@hexEntry:
  2679                           	opt stack 0
  2680  000012                     internalFlash_read@data_length:
  2681                           	opt stack 0
  2682                           
  2683                           ; 2 bytes @ 0x11
  2684  000012                     	ds	1
  2685  000013                     i2c_eeprom_writeByte@slave_address:
  2686                           	opt stack 0
  2687  000013                     itoa@val:
  2688                           	opt stack 0
  2689  000013                     internalFlash_addressWithinPage@page_start_address:
  2690                           	opt stack 0
  2691                           
  2692                           ; 4 bytes @ 0x12
  2693  000013                     	ds	1
  2694  000014                     ??_i2c_eeprom_readByte:
  2695  000014                     ??_parseHexFileEntry:
  2696  000014                     flash_is_busy@result:
  2697                           	opt stack 0
  2698  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2699                           	opt stack 0
  2700  000014                     __flash_copy_page_to_buffer@page:
  2701                           	opt stack 0
  2702  000014                     __flash_compare_page_to_buffer@page:
  2703                           	opt stack 0
  2704  000014                     __flash_write_to_buffer@start:
  2705                           	opt stack 0
  2706  000014                     __flash_write_page_from_buffer@page:
  2707                           	opt stack 0
  2708  000014                     __flash_partial_read@page:
  2709                           	opt stack 0
  2710  000014                     internalFlash_read@buffer:
  2711                           	opt stack 0
  2712  000014                     __flash_set_page_size@command:
  2713                           	opt stack 0
  2714                           
  2715                           ; 4 bytes @ 0x13
  2716  000014                     	ds	1
  2717  000015                     __fill_buffer_get_status@outBuffer:
  2718                           	opt stack 0
  2719  000015                     itoa@base:
  2720                           	opt stack 0
  2721                           
  2722                           ; 2 bytes @ 0x14
  2723  000015                     	ds	1
  2724  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2725  000016                     __flash_copy_page_to_buffer@buffer:
  2726                           	opt stack 0
  2727  000016                     __flash_compare_page_to_buffer@buffer:
  2728                           	opt stack 0
  2729  000016                     __flash_write_page_from_buffer@buffer:
  2730                           	opt stack 0
  2731  000016                     __flash_write_to_buffer@data:
  2732                           	opt stack 0
  2733  000016                     __flash_partial_read@start:
  2734                           	opt stack 0
  2735  000016                     internalFlash_readPage@page:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x15
  2739  000016                     	ds	1
  2740  000017                     ??__flash_copy_page_to_buffer:
  2741  000017                     ??__flash_compare_page_to_buffer:
  2742  000017                     ??__flash_write_page_from_buffer:
  2743  000017                     i2c_eeprom_readByte@slave_address:
  2744                           	opt stack 0
  2745  000017                     itoa@cp:
  2746                           	opt stack 0
  2747                           
  2748                           ; 2 bytes @ 0x16
  2749  000017                     	ds	1
  2750  000018                     ??_USBStdFeatureReqHandler:
  2751  000018                     USBStdSetCfgHandler@i:
  2752                           	opt stack 0
  2753  000018                     i2c_eeprom_readByte@addr:
  2754                           	opt stack 0
  2755  000018                     __flash_set_page_size@size:
  2756                           	opt stack 0
  2757  000018                     __flash_write_to_buffer@data_length:
  2758                           	opt stack 0
  2759  000018                     __flash_partial_read@length:
  2760                           	opt stack 0
  2761  000018                     internalFlash_readPage@address:
  2762                           	opt stack 0
  2763                           
  2764                           ; 4 bytes @ 0x17
  2765  000018                     	ds	1
  2766  000019                     USBStdFeatureReqHandler@pUEP:
  2767                           	opt stack 0
  2768  000019                     __display_itoa_u16@value:
  2769                           	opt stack 0
  2770                           
  2771                           ; 4 bytes @ 0x18
  2772  000019                     	ds	1
  2773  00001A                     __flash_write_to_buffer@buffer:
  2774                           	opt stack 0
  2775  00001A                     __flash_compare_page_to_buffer@status:
  2776                           	opt stack 0
  2777  00001A                     __flash_partial_read@data:
  2778                           	opt stack 0
  2779  00001A                     __flash_copy_page_to_buffer@command:
  2780                           	opt stack 0
  2781  00001A                     __flash_write_page_from_buffer@command:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x19
  2785  00001A                     	ds	1
  2786  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2787                           	opt stack 0
  2788  00001B                     __flash_write_to_buffer@command:
  2789                           	opt stack 0
  2790                           
  2791                           ; 4 bytes @ 0x1A
  2792  00001B                     	ds	1
  2793  00001C                     ??__flash_partial_read:
  2794  00001C                     parseHexFileEntry@i:
  2795                           	opt stack 0
  2796  00001C                     USBStdFeatureReqHandler@p:
  2797                           	opt stack 0
  2798  00001C                     __flash_compare_page_to_buffer@command:
  2799                           	opt stack 0
  2800                           
  2801                           ; 4 bytes @ 0x1B
  2802  00001C                     	ds	1
  2803  00001D                     __display_itoa_u16@text:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x1C
  2807  00001D                     	ds	1
  2808  00001E                     ??_USBCtrlEPService:
  2809  00001E                     
  2810                           ; 1 bytes @ 0x1D
  2811  00001E                     	ds	1
  2812  00001F                     ??__display_verify:
  2813  00001F                     ??__display_checked:
  2814  00001F                     __display_programming@cntr:
  2815                           	opt stack 0
  2816  00001F                     __display_done@cntr:
  2817                           	opt stack 0
  2818  00001F                     __display_itoa_u32@value:
  2819                           	opt stack 0
  2820                           
  2821                           ; 4 bytes @ 0x1E
  2822  00001F                     	ds	1
  2823  000020                     USBDeviceTasks@i:
  2824                           	opt stack 0
  2825  000020                     flash_page_write@page:
  2826                           	opt stack 0
  2827  000020                     flash_partial_write@page:
  2828                           	opt stack 0
  2829  000020                     __flash_partial_read@command:
  2830                           	opt stack 0
  2831                           
  2832                           ; 4 bytes @ 0x1F
  2833  000020                     	ds	1
  2834  000021                     __display_verify@cntr:
  2835                           	opt stack 0
  2836  000021                     __display_checked@start:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0x20
  2840  000021                     	ds	1
  2841  000022                     __display_checked@cntr:
  2842                           	opt stack 0
  2843  000022                     flash_page_write@data:
  2844                           	opt stack 0
  2845  000022                     flash_partial_write@start:
  2846                           	opt stack 0
  2847                           
  2848                           ; 2 bytes @ 0x21
  2849  000022                     	ds	1
  2850  000023                     __display_itoa_u32@text:
  2851                           	opt stack 0
  2852                           
  2853                           ; 2 bytes @ 0x22
  2854  000023                     	ds	1
  2855  000024                     flash_page_write@match:
  2856                           	opt stack 0
  2857  000024                     flash_partial_write@length:
  2858                           	opt stack 0
  2859  000024                     __flash_partial_read@address:
  2860                           	opt stack 0
  2861                           
  2862                           ; 4 bytes @ 0x23
  2863  000024                     	ds	1
  2864  000025                     ??__display_found:
  2865  000025                     __display_start@cntr:
  2866                           	opt stack 0
  2867  000025                     __display_failed@cntr:
  2868                           	opt stack 0
  2869  000025                     ExternalFlash_SectorWrite@config:
  2870                           	opt stack 0
  2871  000025                     fat_format@cntr:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0x24
  2875  000025                     	ds	1
  2876  000026                     flash_partial_write@data:
  2877                           	opt stack 0
  2878                           
  2879                           ; 2 bytes @ 0x25
  2880  000026                     	ds	1
  2881  000027                     __display_found@start:
  2882                           	opt stack 0
  2883  000027                     __parse_format_drive@data:
  2884                           	opt stack 0
  2885  000027                     ExternalFlash_SectorWrite@sector_addr:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x26
  2889  000027                     	ds	1
  2890  000028                     __display_found@cntr:
  2891                           	opt stack 0
  2892  000028                     flash_partial_write@match:
  2893                           	opt stack 0
  2894  000028                     flash_page_read@page:
  2895                           	opt stack 0
  2896  000028                     flash_partial_read@page:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x27
  2900  000028                     	ds	1
  2901  000029                     ??_display_prepare:
  2902  000029                     ??__delete_root:
  2903  000029                     __write_fat@cluster:
  2904                           	opt stack 0
  2905  000029                     __write_root@data:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x28
  2909  000029                     	ds	1
  2910  00002A                     flash_page_read@data:
  2911                           	opt stack 0
  2912  00002A                     flash_partial_read@start:
  2913                           	opt stack 0
  2914  00002A                     __delete_root@root_sector:
  2915                           	opt stack 0
  2916                           
  2917                           ; 2 bytes @ 0x29
  2918  00002A                     	ds	1
  2919  00002B                     ??__write_root:
  2920  00002B                     display_prepare@mode:
  2921                           	opt stack 0
  2922  00002B                     ExternalFlash_SectorWrite@buffer:
  2923                           	opt stack 0
  2924  00002B                     __write_fat@value:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x2A
  2928  00002B                     	ds	1
  2929  00002C                     ??_fat_get_format_status:
  2930  00002C                     __parse_command_short@cmd:
  2931                           	opt stack 0
  2932  00002C                     flash_partial_read@length:
  2933                           	opt stack 0
  2934  00002C                     ExternalFlash_SectorRead@config:
  2935                           	opt stack 0
  2936  00002C                     __write_root@root_sector:
  2937                           	opt stack 0
  2938  00002C                     __delete_root@offset:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x2B
  2942  00002C                     	ds	1
  2943  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2944                           	opt stack 0
  2945  00002D                     __write_fat@fat_sector:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x2C
  2949  00002D                     	ds	1
  2950  00002E                     __delete_root@deleted_value:
  2951                           	opt stack 0
  2952  00002E                     flash_partial_read@data:
  2953                           	opt stack 0
  2954  00002E                     ExternalFlash_SectorWrite@page:
  2955                           	opt stack 0
  2956  00002E                     __write_root@offset:
  2957                           	opt stack 0
  2958  00002E                     fat_get_format_status@cntr:
  2959                           	opt stack 0
  2960  00002E                     ExternalFlash_SectorRead@sector_addr:
  2961                           	opt stack 0
  2962                           
  2963                           ; 4 bytes @ 0x2D
  2964  00002E                     	ds	1
  2965  00002F                     __delete_root@slot:
  2966                           	opt stack 0
  2967  00002F                     __write_fat@offset:
  2968                           	opt stack 0
  2969                           
  2970                           ; 2 bytes @ 0x2E
  2971  00002F                     	ds	1
  2972  000030                     ??_MSDWriteHandler:
  2973  000030                     ??__root_is_available:
  2974  000030                     ?__get_empty_cluster:
  2975                           	opt stack 0
  2976  000030                     ?_fat_get_empty_clusters:
  2977                           	opt stack 0
  2978  000030                     ?__read_fat:
  2979                           	opt stack 0
  2980  000030                     ?__get_first_cluster:
  2981                           	opt stack 0
  2982  000030                     ?_fat_get_file_size:
  2983                           	opt stack 0
  2984  000030                     __write_root@slot:
  2985                           	opt stack 0
  2986  000030                     __get_empty_cluster@first_cluster:
  2987                           	opt stack 0
  2988  000030                     fat_get_empty_clusters@maximum:
  2989                           	opt stack 0
  2990  000030                     __read_fat@cluster:
  2991                           	opt stack 0
  2992  000030                     fat_find_file@name:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x2F
  2996  000030                     	ds	1
  2997  000031                     __root_is_available@root_sector:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x30
  3001  000031                     	ds	1
  3002  000032                     ??__get_first_cluster:
  3003  000032                     ExternalFlash_SectorRead@buffer:
  3004                           	opt stack 0
  3005  000032                     __get_empty_cluster@fat_sector:
  3006                           	opt stack 0
  3007  000032                     fat_get_empty_clusters@fat_sector:
  3008                           	opt stack 0
  3009  000032                     __read_fat@fat_sector:
  3010                           	opt stack 0
  3011  000032                     fat_find_file@extension:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x31
  3015  000032                     	ds	1
  3016  000033                     __root_is_available@offset:
  3017                           	opt stack 0
  3018  000033                     __get_first_cluster@sector:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x32
  3022  000033                     	ds	1
  3023  000034                     ??_fat_get_file_size:
  3024  000034                     ExternalFlash_SectorRead@page:
  3025                           	opt stack 0
  3026  000034                     __get_empty_cluster@offset:
  3027                           	opt stack 0
  3028  000034                     fat_get_empty_clusters@offset:
  3029                           	opt stack 0
  3030  000034                     __read_fat@offset:
  3031                           	opt stack 0
  3032  000034                     fat_find_file@buffer:
  3033                           	opt stack 0
  3034                           
  3035                           ; 11 bytes @ 0x33
  3036  000034                     	ds	1
  3037  000035                     __root_is_available@file_number:
  3038                           	opt stack 0
  3039  000035                     __get_first_cluster@offset:
  3040                           	opt stack 0
  3041  000035                     fat_get_file_size@sector:
  3042                           	opt stack 0
  3043                           
  3044                           ; 2 bytes @ 0x34
  3045  000035                     	ds	1
  3046  000036                     ??_MSDReadHandler:
  3047  000036                     __root_is_available@first_byte:
  3048                           	opt stack 0
  3049  000036                     __get_empty_cluster@value:
  3050                           	opt stack 0
  3051  000036                     fat_get_empty_clusters@value:
  3052                           	opt stack 0
  3053  000036                     __read_fat@value:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x35
  3057  000036                     	ds	1
  3058  000037                     __get_available_root_entry@file_number:
  3059                           	opt stack 0
  3060  000037                     __get_first_cluster@first_cluster:
  3061                           	opt stack 0
  3062  000037                     fat_get_file_information@data:
  3063                           	opt stack 0
  3064  000037                     fat_get_file_size@file_size:
  3065                           	opt stack 0
  3066                           
  3067                           ; 4 bytes @ 0x36
  3068  000037                     	ds	1
  3069  000038                     __get_empty_cluster@cluster:
  3070                           	opt stack 0
  3071  000038                     fat_get_empty_clusters@empty_clusters:
  3072                           	opt stack 0
  3073  000038                     fat_read_from_file_fast@start_byte:
  3074                           	opt stack 0
  3075                           
  3076                           ; 4 bytes @ 0x37
  3077  000038                     	ds	1
  3078  000039                     ??_fat_get_file_information:
  3079  000039                     __get_first_cluster@slot:
  3080                           	opt stack 0
  3081                           
  3082                           ; 1 bytes @ 0x38
  3083  000039                     	ds	1
  3084  00003A                     ??_MSDProcessCommandMediaPresent:
  3085  00003A                     fat_get_empty_clusters@cluster:
  3086                           	opt stack 0
  3087  00003A                     fat_delete_file@next_cluster:
  3088                           	opt stack 0
  3089  00003A                     fat_get_file_information@root_sector:
  3090                           	opt stack 0
  3091                           
  3092                           ; 2 bytes @ 0x39
  3093  00003A                     	ds	1
  3094  00003B                     fat_get_file_size@offset:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0x3A
  3098  00003B                     	ds	1
  3099  00003C                     _MSDProcessCommandMediaPresent$2390:
  3100                           	opt stack 0
  3101  00003C                     fat_delete_file@first_cluster:
  3102                           	opt stack 0
  3103  00003C                     fat_get_file_information@offset:
  3104                           	opt stack 0
  3105  00003C                     fat_read_from_file_fast@length:
  3106                           	opt stack 0
  3107                           
  3108                           ; 4 bytes @ 0x3B
  3109  00003C                     	ds	1
  3110  00003D                     fat_get_file_size@file_number:
  3111                           	opt stack 0
  3112                           
  3113                           ; 1 bytes @ 0x3C
  3114  00003D                     	ds	1
  3115  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3116                           	opt stack 0
  3117  00003E                     fat_delete_file@file_number:
  3118                           	opt stack 0
  3119  00003E                     fat_get_file_information@file_number:
  3120                           	opt stack 0
  3121                           
  3122                           ; 1 bytes @ 0x3D
  3123  00003E                     	ds	1
  3124  00003F                     fat_find_file@slot:
  3125                           	opt stack 0
  3126  00003F                     fat_append_to_file@number_of_bytes:
  3127                           	opt stack 0
  3128  00003F                     fat_rename_file@name:
  3129                           	opt stack 0
  3130  00003F                     __fill_buffer_get_file_details@inBuffer:
  3131                           	opt stack 0
  3132  00003F                     __parse_file_delete@data:
  3133                           	opt stack 0
  3134  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3135                           	opt stack 0
  3136  00003F                     fat_resize_file@new_file_size:
  3137                           	opt stack 0
  3138  00003F                     fat_modify_file@start_byte:
  3139                           	opt stack 0
  3140                           
  3141                           ; 4 bytes @ 0x3E
  3142  00003F                     	ds	1
  3143  000040                     fat_find_file@sector:
  3144                           	opt stack 0
  3145  000040                     fat_read_from_file_fast@data:
  3146                           	opt stack 0
  3147                           
  3148                           ; 2 bytes @ 0x3F
  3149  000040                     	ds	1
  3150  000041                     fat_append_to_file@data:
  3151                           	opt stack 0
  3152  000041                     fat_rename_file@extension:
  3153                           	opt stack 0
  3154  000041                     __fill_buffer_get_file_details@outBuffer:
  3155                           	opt stack 0
  3156                           
  3157                           ; 2 bytes @ 0x40
  3158  000041                     	ds	1
  3159  000042                     fat_find_file@offset:
  3160                           	opt stack 0
  3161  000042                     fat_read_from_file_fast@cluster:
  3162                           	opt stack 0
  3163                           
  3164                           ; 2 bytes @ 0x41
  3165  000042                     	ds	1
  3166  000043                     ??_fat_append_to_file:
  3167  000043                     ??_fat_resize_file:
  3168  000043                     __fill_buffer_get_file_details@file_number:
  3169                           	opt stack 0
  3170  000043                     fat_modify_file@length:
  3171                           	opt stack 0
  3172  000043                     __parse_file_rename@data:
  3173                           	opt stack 0
  3174  000043                     MSDProcessCommandMediaPresent@capacity:
  3175                           	opt stack 0
  3176                           
  3177                           ; 4 bytes @ 0x42
  3178  000043                     	ds	1
  3179  000044                     fat_create_file@name:
  3180                           	opt stack 0
  3181  000044                     fat_read_from_file_fast@cluster_number:
  3182                           	opt stack 0
  3183  000044                     __fill_buffer_find_file@inBuffer:
  3184                           	opt stack 0
  3185                           
  3186                           ; 2 bytes @ 0x43
  3187  000044                     	ds	1
  3188  000045                     fat_modify_file@data:
  3189                           	opt stack 0
  3190                           
  3191                           ; 2 bytes @ 0x44
  3192  000045                     	ds	1
  3193  000046                     ??_fat_read_from_file_fast:
  3194  000046                     fat_create_file@extension:
  3195                           	opt stack 0
  3196  000046                     __fill_buffer_find_file@outBuffer:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x45
  3200  000046                     	ds	1
  3201  000047                     ??_fat_modify_file:
  3202  000047                     MSDProcessCommandMediaPresent@i:
  3203                           	opt stack 0
  3204  000047                     __parse_file_resize@data:
  3205                           	opt stack 0
  3206                           
  3207                           ; 2 bytes @ 0x46
  3208  000047                     	ds	1
  3209  000048                     ??_MSDProcessCommand:
  3210  000048                     ??__fill_buffer_find_file:
  3211  000048                     fat_create_file@size:
  3212                           	opt stack 0
  3213                           
  3214                           ; 4 bytes @ 0x47
  3215  000048                     	ds	1
  3216  000049                     ??__parse_file_resize:
  3217                           
  3218                           ; 1 bytes @ 0x48
  3219  000049                     	ds	1
  3220  00004A                     __parse_file_resize@file_size:
  3221                           	opt stack 0
  3222                           
  3223                           ; 4 bytes @ 0x49
  3224  00004A                     	ds	1
  3225  00004B                     __parse_file_append@data:
  3226                           	opt stack 0
  3227                           
  3228                           ; 2 bytes @ 0x4A
  3229  00004B                     	ds	1
  3230  00004C                     ??_fat_create_file:
  3231  00004C                     __fill_buffer_find_file@cntr:
  3232                           	opt stack 0
  3233                           
  3234                           ; 1 bytes @ 0x4B
  3235  00004C                     	ds	1
  3236  00004D                     ??__parse_file_append:
  3237  00004D                     ??_MSDTasks:
  3238                           
  3239                           ; 1 bytes @ 0x4C
  3240  00004D                     	ds	1
  3241  00004E                     _MSDTasks$2372:
  3242                           	opt stack 0
  3243                           
  3244                           ; 2 bytes @ 0x4D
  3245  00004E                     	ds	2
  3246  000050                     _MSDTasks$2373:
  3247                           	opt stack 0
  3248  000050                     __parse_file_create@data:
  3249                           	opt stack 0
  3250                           
  3251                           ; 2 bytes @ 0x4F
  3252  000050                     	ds	2
  3253  000052                     ??__parse_file_create:
  3254  000052                     MSDTasks@i:
  3255                           	opt stack 0
  3256  000052                     fat_read_from_file_fast@sector:
  3257                           	opt stack 0
  3258                           
  3259                           ; 2 bytes @ 0x51
  3260  000052                     	ds	1
  3261  000053                     __parse_file_modify@data:
  3262                           	opt stack 0
  3263  000053                     __parse_file_create@file_size:
  3264                           	opt stack 0
  3265                           
  3266                           ; 4 bytes @ 0x52
  3267  000053                     	ds	1
  3268  000054                     fat_read_from_file_fast@working_cluster:
  3269                           	opt stack 0
  3270                           
  3271                           ; 2 bytes @ 0x53
  3272  000054                     	ds	1
  3273  000055                     ??__parse_file_modify:
  3274                           
  3275                           ; 1 bytes @ 0x54
  3276  000055                     	ds	1
  3277  000056                     fat_read_from_file_fast@offset:
  3278                           	opt stack 0
  3279  000056                     __parse_file_modify@number_of_bytes:
  3280                           	opt stack 0
  3281                           
  3282                           ; 2 bytes @ 0x55
  3283  000056                     	ds	2
  3284  000058                     fat_read_from_file_fast@read_length:
  3285                           	opt stack 0
  3286  000058                     __parse_file_modify@start_byte:
  3287                           	opt stack 0
  3288                           
  3289                           ; 4 bytes @ 0x57
  3290  000058                     	ds	2
  3291  00005A                     fat_read_from_file_fast@position:
  3292                           	opt stack 0
  3293                           
  3294                           ; 4 bytes @ 0x59
  3295  00005A                     	ds	2
  3296  00005C                     __parse_command_long@data:
  3297                           	opt stack 0
  3298                           
  3299                           ; 2 bytes @ 0x5B
  3300  00005C                     	ds	2
  3301  00005E                     bootloader_run@timeslot:
  3302                           	opt stack 0
  3303  00005E                     api_prepare@command:
  3304                           	opt stack 0
  3305  00005E                     __parse_command_long@length:
  3306                           	opt stack 0
  3307                           
  3308                           ; 1 bytes @ 0x5D
  3309  00005E                     	ds	1
  3310  00005F                     api_parse@idx:
  3311                           	opt stack 0
  3312                           
  3313                           ; 1 bytes @ 0x5E
  3314  00005F                     	ds	1
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           postinc0	equ	0xFEE
  3320                           wreg	equ	0xFE8
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           
  3325 ;;
  3326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3327 ;;
  3328 ;; *************** function _main *****************
  3329 ;; Defined at:
  3330 ;;		line 54 in file "main.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  tx_buffer       2   87[BANK0 ] PTR unsigned char 
  3335 ;;		 -> _spi_external_tx_buffer(64), 
  3336 ;;  rx_buffer       2   85[BANK0 ] PTR unsigned char 
  3337 ;;		 -> _spi_external_rx_buffer(64), 
  3338 ;;  bytes_transm    2   83[BANK0 ] unsigned int 
  3339 ;;  tx_start_add    2   81[BANK0 ] unsigned int 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;Total ram usage:       10 bytes
  3354 ;; Hardware stack levels required when called:   12
  3355 ;; This function calls:
  3356 ;;		_APP_DeviceCustomHIDTasks
  3357 ;;		_APP_DeviceMSDTasks
  3358 ;;		_SYSTEM_Initialize
  3359 ;;		_USBDeviceInit
  3360 ;;		_USBDeviceTasks
  3361 ;;		__normal_mode
  3362 ;;		_api_parse
  3363 ;;		_api_prepare
  3364 ;;		_bootloader_run
  3365 ;;		_display_prepare
  3366 ;;		_display_update
  3367 ;;		_jump_to_main_program
  3368 ;;		_spi_get_external_rx_buffer
  3369 ;;		_spi_get_external_tx_buffer
  3370 ;;		_system_full_init
  3371 ;;		_system_minimal_init
  3372 ;;		_system_minimal_init_undo
  3373 ;;		_timer_pseudo_isr
  3374 ;;		_ui_get_status
  3375 ;;		_ui_run
  3376 ;; This function is called by:
  3377 ;;		Startup code after reset
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text0
  3382  003DBA                     __ptext0:
  3383                           	opt stack 0
  3384  003DBA                     _main:
  3385                           	opt stack 19
  3386                           
  3387                           ;incstack = 0
  3388  003DBA  0004               	clrwdt		;# 
  3389                           
  3390                           ;main.c: 65: rx_buffer = spi_get_external_rx_buffer();
  3391  003DBC  EC84  F044         	call	_spi_get_external_rx_buffer	;wreg free
  3392  003DC0  C001  F0B5         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3393  003DC4  C002  F0B6         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3394                           
  3395                           ;main.c: 66: tx_buffer = spi_get_external_tx_buffer();
  3396  003DC8  EC7F  F044         	call	_spi_get_external_tx_buffer	;wreg free
  3397  003DCC  C001  F0B7         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3398  003DD0  C002  F0B8         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3399                           
  3400                           ;main.c: 67: tx_start_addr = (uint16_t) tx_buffer;
  3401  003DD4  C0B7  F0B1         	movff	main@tx_buffer,main@tx_start_addr
  3402  003DD8  C0B8  F0B2         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3403                           
  3404                           ;main.c: 71: system_minimal_init();
  3405  003DDC  EC04  F044         	call	_system_minimal_init	;wreg free
  3406                           
  3407                           ;main.c: 74: if(_normal_mode())
  3408  003DE0  EC16  F03C         	call	__normal_mode	;wreg free
  3409  003DE4  0900               	iorlw	0
  3410  003DE6  B4D8               	btfsc	status,2,c
  3411  003DE8  D004               	goto	l893
  3412                           
  3413                           ;main.c: 75: {;main.c: 77: system_minimal_init_undo();
  3414  003DEA  EC53  F044         	call	_system_minimal_init_undo	;wreg free
  3415                           
  3416                           ;main.c: 78: jump_to_main_program();
  3417  003DEE  ECD1  F044         	call	_jump_to_main_program	;wreg free
  3418  003DF2                     l893:
  3419                           
  3420                           ;main.c: 79: };main.c: 83: system_full_init();
  3421  003DF2  EC45  F03C         	call	_system_full_init	;wreg free
  3422                           
  3423                           ;main.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3424  003DF6  0E00               	movlw	0
  3425  003DF8  EC7F  F03E         	call	_SYSTEM_Initialize
  3426                           
  3427                           ;main.c: 88: USBDeviceInit();
  3428  003DFC  EC3F  F020         	call	_USBDeviceInit	;wreg free
  3429  003E00                     l894:
  3430  003E00  0004               	clrwdt		;# 
  3431                           
  3432                           ;main.c: 101: USBDeviceTasks();
  3433  003E02  ECA4  F01C         	call	_USBDeviceTasks	;wreg free
  3434                           
  3435                           ;main.c: 102: APP_DeviceMSDTasks();
  3436  003E06  EC2F  F044         	call	_APP_DeviceMSDTasks	;wreg free
  3437                           
  3438                           ;main.c: 103: APP_DeviceCustomHIDTasks();
  3439  003E0A  EC33  F031         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3440                           
  3441                           ;main.c: 107: timer_pseudo_isr();
  3442  003E0E  EC4A  F041         	call	_timer_pseudo_isr	;wreg free
  3443                           
  3444                           ;main.c: 110: if(PORTDbits.RD2)
  3445  003E12  A483               	btfss	3971,2,c	;volatile
  3446  003E14  D039               	goto	l896
  3447                           
  3448                           ;main.c: 111: {;main.c: 114: bytes_transmitted = TXADDRH;
  3449  003E16  CF6A F0B3          	movff	3946,main@bytes_transmitted	;volatile
  3450  003E1A  0100               	movlb	0	; () banked
  3451  003E1C  6BB4               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;main.c: 115: bytes_transmitted <<= 8;
  3455  003E1E  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3456  003E20  6FB4               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3457  003E22  6BB3               	clrf	main@bytes_transmitted& (0+255),b
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;main.c: 116: bytes_transmitted |= TXADDRL;
  3461  003E24  506B               	movf	3947,w,c	;volatile
  3462  003E26  13B3               	iorwf	main@bytes_transmitted& (0+255),f,b
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;main.c: 117: --bytes_transmitted;
  3466  003E28  07B3               	decf	main@bytes_transmitted& (0+255),f,b
  3467  003E2A  A0D8               	btfss	status,0,c
  3468  003E2C  07B4               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;main.c: 118: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3472  003E2E  EC7F  F044         	call	_spi_get_external_tx_buffer	;wreg free
  3473  003E32  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3474  003E34  0100               	movlb	0	; () banked
  3475  003E36  5FB3               	subwf	main@bytes_transmitted& (0+255),f,b
  3476  003E38  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3477  003E3A  5BB4               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 121: if(bytes_transmitted>0)
  3481  003E3C  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3482  003E3E  11B4               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3483  003E40  B4D8               	btfsc	status,2,c
  3484  003E42  D022               	goto	l896
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;main.c: 122: {;main.c: 124: DMACON1bits.DMAEN = 0;
  3488  003E44  9088               	bcf	3976,0,c	;volatile
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;main.c: 127: api_prepare(rx_buffer, tx_buffer);
  3492  003E46  C0B5  F0A7         	movff	main@rx_buffer,api_prepare@inBuffer
  3493  003E4A  C0B6  F0A8         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3494  003E4E  C0B7  F0A9         	movff	main@tx_buffer,api_prepare@outBuffer
  3495  003E52  C0B8  F0AA         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3496  003E56  ECE6  F020         	call	_api_prepare	;wreg free
  3497                           
  3498                           ;main.c: 128: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3499  003E5A  C0B5  F093         	movff	main@rx_buffer,api_parse@inBuffer
  3500  003E5E  C0B6  F094         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3501  003E62  C0B3  F095         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3502  003E66  EC50  F02C         	call	_api_parse	;wreg free
  3503                           
  3504                           ;main.c: 131: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3505  003E6A  0100               	movlb	0	; () banked
  3506  003E6C  51B8               	movf	(main@tx_buffer+1)& (0+255),w,b
  3507  003E6E  6E6A               	movwf	3946,c	;volatile
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;main.c: 132: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3511  003E70  C0B7  FF6B         	movff	main@tx_buffer,3947	;volatile
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;main.c: 135: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3515  003E74  51B6               	movf	(main@rx_buffer+1)& (0+255),w,b
  3516  003E76  6E68               	movwf	3944,c	;volatile
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;main.c: 136: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3520  003E78  C0B5  FF69         	movff	main@rx_buffer,3945	;volatile
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;main.c: 139: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3524  003E7C  0E00               	movlw	0
  3525  003E7E  6E66               	movwf	3942,c	;volatile
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 140: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3529  003E80  0E3F               	movlw	63
  3530  003E82  6E67               	movwf	3943,c	;volatile
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;main.c: 143: PIR3bits.SSP2IF = 0;
  3534  003E84  9EA4               	bcf	4004,7,c	;volatile
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;main.c: 145: DMACON1bits.DMAEN = 1;
  3538  003E86  8088               	bsf	3976,0,c	;volatile
  3539  003E88                     l896:
  3540                           
  3541                           ;main.c: 146: };main.c: 147: };main.c: 151: if(!os.done)
  3542                           
  3543                           ; BSR set to: 0
  3544                           
  3545                           ; BSR set to: 0
  3546  003E88  0100               	movlb	0	; () banked
  3547  003E8A  51BC               	movf	(_os+3)& (0+255),w,b	;volatile
  3548  003E8C  A4D8               	btfss	status,2,c
  3549  003E8E  D7B8               	goto	l894
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;main.c: 152: {;main.c: 154: ui_run();
  3553  003E90  EC63  F025         	call	_ui_run	;wreg free
  3554                           
  3555                           ;main.c: 159: switch(os.timeSlot&0b00000111)
  3556  003E94  D025               	goto	l898
  3557  003E96                     
  3558                           ;main.c: 162: bootloader_run(0);
  3559  003E96  0E00               	movlw	0
  3560  003E98  EC23  F03B         	call	_bootloader_run
  3561                           
  3562                           ;main.c: 163: break;
  3563  003E9C  D043               	goto	l900
  3564  003E9E                     
  3565                           ;main.c: 166: bootloader_run(1);
  3566  003E9E  0E01               	movlw	1
  3567  003EA0  EC23  F03B         	call	_bootloader_run
  3568                           
  3569                           ;main.c: 167: break;
  3570  003EA4  D03F               	goto	l900
  3571  003EA6                     
  3572                           ;main.c: 170: bootloader_run(2);
  3573  003EA6  0E02               	movlw	2
  3574  003EA8  EC23  F03B         	call	_bootloader_run
  3575                           
  3576                           ;main.c: 171: break;
  3577  003EAC  D03B               	goto	l900
  3578  003EAE                     
  3579                           ;main.c: 174: bootloader_run(3);
  3580  003EAE  0E03               	movlw	3
  3581  003EB0  EC23  F03B         	call	_bootloader_run
  3582                           
  3583                           ;main.c: 175: break;
  3584  003EB4  D037               	goto	l900
  3585  003EB6                     
  3586                           ;main.c: 178: bootloader_run(4);
  3587  003EB6  0E04               	movlw	4
  3588  003EB8  EC23  F03B         	call	_bootloader_run
  3589                           
  3590                           ;main.c: 179: break;
  3591  003EBC  D033               	goto	l900
  3592  003EBE                     
  3593                           ;main.c: 182: bootloader_run(5);
  3594  003EBE  0E05               	movlw	5
  3595  003EC0  EC23  F03B         	call	_bootloader_run
  3596                           
  3597                           ;main.c: 183: break;
  3598  003EC4  D02F               	goto	l900
  3599  003EC6                     
  3600                           ;main.c: 186: display_prepare(os.display_mode);
  3601  003EC6  0100               	movlb	0	; () banked
  3602  003EC8  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3603  003ECA  ECBA  F02C         	call	_display_prepare
  3604                           
  3605                           ;main.c: 187: break;
  3606  003ECE  D02A               	goto	l900
  3607  003ED0                     
  3608                           ;main.c: 190: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3609  003ED0  ECDD  F044         	call	_ui_get_status	;wreg free
  3610  003ED4  0A05               	xorlw	5
  3611  003ED6  A4D8               	btfss	status,2,c
  3612  003ED8  D025               	goto	l900
  3613                           
  3614                           ;main.c: 191: {;main.c: 192: display_update();
  3615  003EDA  ECE9  F039         	call	_display_update	;wreg free
  3616                           
  3617                           ;main.c: 195: }
  3618                           
  3619                           ;main.c: 193: };main.c: 194: break;
  3620  003EDE  D022               	goto	l900
  3621  003EE0                     l898:
  3622  003EE0  0100               	movlb	0	; () banked
  3623  003EE2  51BB               	movf	(_os+2)& (0+255),w,b	;volatile
  3624  003EE4  0B07               	andlw	7
  3625  003EE6  6FAF               	movwf	??_main& (0+255),b
  3626  003EE8  6BB0               	clrf	(??_main+1)& (0+255),b
  3627                           
  3628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3629                           ; Switch size 1, requested type "space"
  3630                           ; Number of cases is 1, Range of values is 0 to 0
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte            4     3 (average)
  3634                           ;	Chosen strategy is simple_byte
  3635  003EEA  51B0               	movf	(??_main+1)& (0+255),w,b
  3636  003EEC  0A00               	xorlw	0	; case 0
  3637  003EEE  A4D8               	btfss	status,2,c
  3638  003EF0  D019               	goto	l900
  3639                           
  3640                           ; BSR set to: 0
  3641                           ; Switch size 1, requested type "space"
  3642                           ; Number of cases is 8, Range of values is 0 to 7
  3643                           ; switch strategies available:
  3644                           ; Name         Instructions Cycles
  3645                           ; simple_byte           25    13 (average)
  3646                           ;	Chosen strategy is simple_byte
  3647  003EF2  51AF               	movf	??_main& (0+255),w,b
  3648  003EF4  0A00               	xorlw	0	; case 0
  3649  003EF6  B4D8               	btfsc	status,2,c
  3650  003EF8  D7CE               	goto	l899
  3651  003EFA  0A01               	xorlw	1	; case 1
  3652  003EFC  B4D8               	btfsc	status,2,c
  3653  003EFE  D7CF               	goto	l901
  3654  003F00  0A03               	xorlw	3	; case 2
  3655  003F02  B4D8               	btfsc	status,2,c
  3656  003F04  D7D0               	goto	l902
  3657  003F06  0A01               	xorlw	1	; case 3
  3658  003F08  B4D8               	btfsc	status,2,c
  3659  003F0A  D7D1               	goto	l903
  3660  003F0C  0A07               	xorlw	7	; case 4
  3661  003F0E  B4D8               	btfsc	status,2,c
  3662  003F10  D7D2               	goto	l904
  3663  003F12  0A01               	xorlw	1	; case 5
  3664  003F14  B4D8               	btfsc	status,2,c
  3665  003F16  D7D3               	goto	l905
  3666  003F18  0A03               	xorlw	3	; case 6
  3667  003F1A  B4D8               	btfsc	status,2,c
  3668  003F1C  D7D4               	goto	l906
  3669  003F1E  0A01               	xorlw	1	; case 7
  3670  003F20  B4D8               	btfsc	status,2,c
  3671  003F22  D7D6               	goto	l907
  3672  003F24                     l900:
  3673                           
  3674                           ;main.c: 196: os.done = 1;
  3675                           
  3676                           ; BSR set to: 0
  3677  003F24  0E01               	movlw	1
  3678  003F26  0100               	movlb	0	; () banked
  3679  003F28  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  3680                           
  3681                           ; BSR set to: 0
  3682                           
  3683                           ; BSR set to: 0
  3684  003F2A  D76A               	goto	l894
  3685  003F2C                     __end_of_main:
  3686                           	opt stack 0
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           postdec1	equ	0xFE5
  3694                           fsr1h	equ	0xFE2
  3695                           fsr1l	equ	0xFE1
  3696                           status	equ	0xFD8
  3697                           
  3698 ;; *************** function _ui_run *****************
  3699 ;; Defined at:
  3700 ;;		line 110 in file "ui.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;Total ram usage:        0 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    9
  3721 ;; This function calls:
  3722 ;;		__ui_encoder
  3723 ;;		_i2c_digipot_backlight
  3724 ;;		_i2c_digipot_reset_off
  3725 ;;		_i2c_digipot_reset_on
  3726 ;;		_i2c_display_send_init_sequence
  3727 ;;		_system_encoder_enable
  3728 ;;		_ui_init
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text1
  3735  004AC6                     __ptext1:
  3736                           	opt stack 0
  3737  004AC6                     _ui_run:
  3738                           	opt stack 21
  3739                           
  3740                           ;ui.c: 112: switch(userInterfaceStatus)
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;incstack = 0
  3744  004AC6  D06D               	goto	l1319
  3745  004AC8                     
  3746                           ;ui.c: 116: if (os.buttonCount!=0)
  3747  004AC8  0100               	movlb	0	; () banked
  3748  004ACA  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3749  004ACC  B4D8               	btfsc	status,2,c
  3750  004ACE  0012               	return	
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3754  004AD0  EC25  F044         	call	_ui_init	;wreg free
  3755                           
  3756                           ;ui.c: 119: os.buttonCount = 0;
  3757  004AD4  0E00               	movlw	0
  3758  004AD6  0100               	movlb	0	; () banked
  3759  004AD8  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;ui.c: 120: };ui.c: 121: break;
  3763  004ADA  0012               	return	
  3764  004ADC                     l1323:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;ui.c: 125: LATDbits.LD0 = 0;
  3768  004ADC  908C               	bcf	3980,0,c	;volatile
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;ui.c: 127: system_ui_inactive_count = 0;
  3772  004ADE  0E00               	movlw	0
  3773  004AE0  0101               	movlb	1	; () banked
  3774  004AE2  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3775  004AE4  0E00               	movlw	0
  3776  004AE6  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3777                           
  3778                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3779  004AE8  0E02               	movlw	2
  3780  004AEA  0100               	movlb	0	; () banked
  3781  004AEC  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3782                           
  3783                           ;ui.c: 129: break;
  3784  004AEE  0012               	return	
  3785  004AF0                     
  3786                           ; BSR set to: 0
  3787                           ;ui.c: 133: i2c_digipot_reset_on();
  3788                           
  3789                           ; BSR set to: 0
  3790  004AF0  EC61  F043         	call	_i2c_digipot_reset_on	;wreg free
  3791                           
  3792                           ;ui.c: 135: system_ui_inactive_count = 0;
  3793  004AF4  0E00               	movlw	0
  3794  004AF6  0101               	movlb	1	; () banked
  3795  004AF8  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3796  004AFA  0E00               	movlw	0
  3797  004AFC  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3798                           
  3799                           ; BSR set to: 1
  3800                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3801  004AFE  0E03               	movlw	3
  3802  004B00  0100               	movlb	0	; () banked
  3803  004B02  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3804                           
  3805                           ;ui.c: 137: break;
  3806  004B04  0012               	return	
  3807  004B06                     
  3808                           ; BSR set to: 0
  3809                           ;ui.c: 140: ++system_ui_inactive_count;
  3810                           
  3811                           ; BSR set to: 0
  3812  004B06  0101               	movlb	1	; () banked
  3813  004B08  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3814  004B0A  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 1
  3817                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3818  004B0C  5179               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3819  004B0E  E104               	bnz	u12370
  3820  004B10  0E04               	movlw	4
  3821  004B12  5D78               	subwf	_system_ui_inactive_count& (0+255),w,b
  3822  004B14  A0D8               	btfss	status,0,c
  3823  004B16  0012               	return	
  3824  004B18                     u12370:
  3825                           
  3826                           ; BSR set to: 1
  3827                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3828  004B18  EC72  F043         	call	_i2c_digipot_reset_off	;wreg free
  3829                           
  3830                           ;ui.c: 145: system_ui_inactive_count = 0;
  3831  004B1C  0E00               	movlw	0
  3832  004B1E  0101               	movlb	1	; () banked
  3833  004B20  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3834  004B22  0E00               	movlw	0
  3835  004B24  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3839  004B26  0E04               	movlw	4
  3840  004B28  0100               	movlb	0	; () banked
  3841  004B2A  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;ui.c: 147: };ui.c: 148: break;
  3845  004B2C  0012               	return	
  3846  004B2E                     
  3847                           ; BSR set to: 0
  3848                           ;ui.c: 152: i2c_display_send_init_sequence();
  3849                           
  3850                           ; BSR set to: 0
  3851  004B2E  EC5D  F042         	call	_i2c_display_send_init_sequence	;wreg free
  3852                           
  3853                           ;ui.c: 154: i2c_digipot_backlight(150);
  3854  004B32  0E96               	movlw	150
  3855  004B34  ECF2  F042         	call	_i2c_digipot_backlight
  3856                           
  3857                           ;ui.c: 156: system_encoder_enable();
  3858  004B38  EC4B  F044         	call	_system_encoder_enable	;wreg free
  3859                           
  3860                           ;ui.c: 158: system_ui_inactive_count = 0;
  3861  004B3C  0E00               	movlw	0
  3862  004B3E  0101               	movlb	1	; () banked
  3863  004B40  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3864  004B42  0E00               	movlw	0
  3865  004B44  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3866                           
  3867                           ; BSR set to: 1
  3868                           ;ui.c: 159: startup_timer = 0;
  3869  004B46  0E00               	movlw	0
  3870  004B48  6F77               	movwf	(_startup_timer+1)& (0+255),b
  3871  004B4A  0E00               	movlw	0
  3872  004B4C  6F76               	movwf	_startup_timer& (0+255),b
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3876  004B4E  0E05               	movlw	5
  3877  004B50  0100               	movlb	0	; () banked
  3878  004B52  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3879                           
  3880                           ;ui.c: 161: break;
  3881  004B54  0012               	return	
  3882  004B56                     
  3883                           ; BSR set to: 0
  3884                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3885                           
  3886                           ; BSR set to: 0
  3887  004B56  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3888  004B58  A4D8               	btfss	status,2,c
  3889  004B5A  D00B               	goto	l1330
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  3893  004B5C  0101               	movlb	1	; () banked
  3894  004B5E  4B76               	infsnz	_startup_timer& (0+255),f,b
  3895  004B60  2B77               	incf	(_startup_timer+1)& (0+255),f,b
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;ui.c: 167: if(startup_timer==250)
  3899  004B62  0EFA               	movlw	250
  3900  004B64  1976               	xorwf	_startup_timer& (0+255),w,b
  3901  004B66  1177               	iorwf	(_startup_timer+1)& (0+255),w,b
  3902  004B68  A4D8               	btfss	status,2,c
  3903  004B6A  D003               	goto	l1330
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3907  004B6C  0E10               	movlw	16
  3908  004B6E  0100               	movlb	0	; () banked
  3909  004B70  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  3910  004B72                     l1330:
  3911                           
  3912                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  3913                           
  3914                           ; BSR set to: 0
  3915  004B72  0100               	movlb	0	; () banked
  3916  004B74  51B9               	movf	_os& (0+255),w,b	;volatile
  3917  004B76  A4D8               	btfss	status,2,c
  3918  004B78  D00C               	goto	l1331
  3919                           
  3920                           ; BSR set to: 0
  3921  004B7A  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3922  004B7C  A4D8               	btfss	status,2,c
  3923  004B7E  D009               	goto	l1331
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  3927  004B80  0101               	movlb	1	; () banked
  3928  004B82  2978               	incf	_system_ui_inactive_count& (0+255),w,b
  3929  004B84  E103               	bnz	u12420
  3930  004B86  2979               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3931  004B88  B4D8               	btfsc	status,2,c
  3932  004B8A  0012               	return	
  3933  004B8C                     u12420:
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;ui.c: 175: ++system_ui_inactive_count;
  3937  004B8C  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3938  004B8E  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;ui.c: 176: }
  3942  004B90  0012               	return	
  3943  004B92                     l1331:
  3944                           
  3945                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  3946                           
  3947                           ; BSR set to: 1
  3948  004B92  0E00               	movlw	0
  3949  004B94  0101               	movlb	1	; () banked
  3950  004B96  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3951  004B98  0E00               	movlw	0
  3952  004B9A  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;ui.c: 180: _ui_encoder();
  3956  004B9C  EC09  F02B         	call	__ui_encoder	;wreg free
  3957                           
  3958                           ;ui.c: 183: }
  3959                           
  3960                           ;ui.c: 181: };ui.c: 182: break;
  3961  004BA0  0012               	return	
  3962  004BA2                     l1319:
  3963  004BA2  0100               	movlb	0	; () banked
  3964  004BA4  51E0               	movf	_userInterfaceStatus& (0+255),w,b
  3965                           
  3966                           ; Switch size 1, requested type "space"
  3967                           ; Number of cases is 6, Range of values is 0 to 5
  3968                           ; switch strategies available:
  3969                           ; Name         Instructions Cycles
  3970                           ; simple_byte           19    10 (average)
  3971                           ;	Chosen strategy is simple_byte
  3972  004BA6  0A00               	xorlw	0	; case 0
  3973  004BA8  B4D8               	btfsc	status,2,c
  3974  004BAA  D78E               	goto	l1320
  3975  004BAC  0A01               	xorlw	1	; case 1
  3976  004BAE  B4D8               	btfsc	status,2,c
  3977  004BB0  D795               	goto	l1323
  3978  004BB2  0A03               	xorlw	3	; case 2
  3979  004BB4  B4D8               	btfsc	status,2,c
  3980  004BB6  D79C               	goto	l1324
  3981  004BB8  0A01               	xorlw	1	; case 3
  3982  004BBA  B4D8               	btfsc	status,2,c
  3983  004BBC  D7A4               	goto	l1325
  3984  004BBE  0A07               	xorlw	7	; case 4
  3985  004BC0  B4D8               	btfsc	status,2,c
  3986  004BC2  D7B5               	goto	l1327
  3987  004BC4  0A01               	xorlw	1	; case 5
  3988  004BC6  A4D8               	btfss	status,2,c
  3989  004BC8  0012               	return	
  3990  004BCA  D7C5               	goto	l1328
  3991  004BCC                     __end_of_ui_run:
  3992                           	opt stack 0
  3993                           tblptru	equ	0xFF8
  3994                           tblptrh	equ	0xFF7
  3995                           tblptrl	equ	0xFF6
  3996                           tablat	equ	0xFF5
  3997                           postinc0	equ	0xFEE
  3998                           wreg	equ	0xFE8
  3999                           postdec1	equ	0xFE5
  4000                           fsr1h	equ	0xFE2
  4001                           fsr1l	equ	0xFE1
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _system_encoder_enable *****************
  4005 ;; Defined at:
  4006 ;;		line 96 in file "os.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_ui_run
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text2
  4034  008896                     __ptext2:
  4035                           	opt stack 0
  4036  008896                     _system_encoder_enable:
  4037                           	opt stack 29
  4038                           
  4039                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4040                           
  4041                           ;incstack = 0
  4042  008896  92F0               	bcf	intcon3,1,c	;volatile
  4043                           
  4044                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4045  008898  94F0               	bcf	intcon3,2,c	;volatile
  4046                           
  4047                           ;os.c: 103: os.encoderCount = 0;
  4048  00889A  0E00               	movlw	0
  4049  00889C  0100               	movlb	0	; () banked
  4050  00889E  6FB9               	movwf	_os& (0+255),b	;volatile
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4054  0088A0  88F0               	bsf	intcon3,4,c	;volatile
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4058  0088A2  8AF0               	bsf	intcon3,5,c	;volatile
  4059                           
  4060                           ; BSR set to: 0
  4061  0088A4  0012               	return		;funcret
  4062  0088A6                     __end_of_system_encoder_enable:
  4063                           	opt stack 0
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           intcon3	equ	0xFF0
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postdec1	equ	0xFE5
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           status	equ	0xFD8
  4075                           
  4076 ;; *************** function _i2c_display_send_init_sequence *****************
  4077 ;; Defined at:
  4078 ;;		line 207 in file "i2c.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        9 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    2
  4099 ;; This function calls:
  4100 ;;		__i2c_write
  4101 ;;		_i2c_set_frequency
  4102 ;; This function is called by:
  4103 ;;		_ui_run
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text3
  4108  0084BA                     __ptext3:
  4109                           	opt stack 0
  4110  0084BA                     _i2c_display_send_init_sequence:
  4111                           	opt stack 27
  4112                           
  4113                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;incstack = 0
  4117  0084BA  EE21  F0ED         	lfsr	2,i2c_display_send_init_sequence@F6808
  4118  0084BE  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4119  0084C2  0E08               	movlw	8
  4120  0084C4                     u11641:
  4121  0084C4  CFDB FFE3          	movff	plusw2,plusw1
  4122  0084C8  06E8               	decf	wreg,f,c
  4123  0084CA  E2FC               	bc	u11641
  4124                           
  4125                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4126  0084CC  0E00               	movlw	0
  4127  0084CE  EC9F  F042         	call	_i2c_set_frequency
  4128                           
  4129                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4130  0084D2  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4131  0084D4  6E06               	movwf	__i2c_write@data,c
  4132  0084D6  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4133  0084D8  6E07               	movwf	__i2c_write@data+1,c
  4134  0084DA  0E09               	movlw	9
  4135  0084DC  6E08               	movwf	__i2c_write@length,c
  4136  0084DE  0E78               	movlw	120
  4137  0084E0  EC6F  F03F         	call	__i2c_write
  4138  0084E4  0012               	return		;funcret
  4139  0084E6                     __end_of_i2c_display_send_init_sequence:
  4140                           	opt stack 0
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           intcon3	equ	0xFF0
  4146                           postinc0	equ	0xFEE
  4147                           wreg	equ	0xFE8
  4148                           postdec1	equ	0xFE5
  4149                           plusw1	equ	0xFE3
  4150                           fsr1h	equ	0xFE2
  4151                           fsr1l	equ	0xFE1
  4152                           plusw2	equ	0xFDB
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function _i2c_digipot_reset_on *****************
  4156 ;; Defined at:
  4157 ;;		line 310 in file "i2c.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;Total ram usage:        2 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    2
  4178 ;; This function calls:
  4179 ;;		__i2c_write
  4180 ;;		_i2c_set_frequency
  4181 ;; This function is called by:
  4182 ;;		_ui_run
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text4
  4187  0086C2                     __ptext4:
  4188                           	opt stack 0
  4189  0086C2                     _i2c_digipot_reset_on:
  4190                           	opt stack 27
  4191                           
  4192                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4193                           
  4194                           ;incstack = 0
  4195  0086C2  0E10               	movlw	16
  4196  0086C4  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4197                           
  4198                           ;i2c.c: 315: data_array[1] = 0x00;
  4199  0086C6  0E00               	movlw	0
  4200  0086C8  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4201                           
  4202                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4203  0086CA  0E02               	movlw	2
  4204  0086CC  EC9F  F042         	call	_i2c_set_frequency
  4205                           
  4206                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4207  0086D0  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4208  0086D2  6E06               	movwf	__i2c_write@data,c
  4209  0086D4  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4210  0086D6  6E07               	movwf	__i2c_write@data+1,c
  4211  0086D8  0E02               	movlw	2
  4212  0086DA  6E08               	movwf	__i2c_write@length,c
  4213  0086DC  0E5C               	movlw	92
  4214  0086DE  EC6F  F03F         	call	__i2c_write
  4215  0086E2  0012               	return		;funcret
  4216  0086E4                     __end_of_i2c_digipot_reset_on:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           intcon3	equ	0xFF0
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postdec1	equ	0xFE5
  4226                           plusw1	equ	0xFE3
  4227                           fsr1h	equ	0xFE2
  4228                           fsr1l	equ	0xFE1
  4229                           plusw2	equ	0xFDB
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function _i2c_digipot_reset_off *****************
  4233 ;; Defined at:
  4234 ;;		line 323 in file "i2c.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:        2 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		__i2c_write
  4257 ;;		_i2c_set_frequency
  4258 ;; This function is called by:
  4259 ;;		_ui_run
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text5
  4264  0086E4                     __ptext5:
  4265                           	opt stack 0
  4266  0086E4                     _i2c_digipot_reset_off:
  4267                           	opt stack 27
  4268                           
  4269                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4270                           
  4271                           ;incstack = 0
  4272  0086E4  0E10               	movlw	16
  4273  0086E6  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4274                           
  4275                           ;i2c.c: 327: data_array[1] = 0x80;
  4276  0086E8  0E80               	movlw	128
  4277  0086EA  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4278                           
  4279                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4280  0086EC  0E02               	movlw	2
  4281  0086EE  EC9F  F042         	call	_i2c_set_frequency
  4282                           
  4283                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4284  0086F2  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4285  0086F4  6E06               	movwf	__i2c_write@data,c
  4286  0086F6  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4287  0086F8  6E07               	movwf	__i2c_write@data+1,c
  4288  0086FA  0E02               	movlw	2
  4289  0086FC  6E08               	movwf	__i2c_write@length,c
  4290  0086FE  0E5C               	movlw	92
  4291  008700  EC6F  F03F         	call	__i2c_write
  4292  008704  0012               	return		;funcret
  4293  008706                     __end_of_i2c_digipot_reset_off:
  4294                           	opt stack 0
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           intcon3	equ	0xFF0
  4300                           postinc0	equ	0xFEE
  4301                           wreg	equ	0xFE8
  4302                           postdec1	equ	0xFE5
  4303                           plusw1	equ	0xFE3
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           plusw2	equ	0xFDB
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _i2c_digipot_backlight *****************
  4310 ;; Defined at:
  4311 ;;		line 335 in file "i2c.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  level           1    wreg     unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  level           1   10[COMRAM] unsigned char 
  4316 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;Total ram usage:        3 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    2
  4333 ;; This function calls:
  4334 ;;		__i2c_write
  4335 ;;		_i2c_set_frequency
  4336 ;; This function is called by:
  4337 ;;		_ui_run
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text6
  4342  0085E4                     __ptext6:
  4343                           	opt stack 0
  4344  0085E4                     _i2c_digipot_backlight:
  4345                           	opt stack 27
  4346                           
  4347                           ;incstack = 0
  4348                           ;i2c_digipot_backlight@level stored from wreg
  4349  0085E4  6E0B               	movwf	i2c_digipot_backlight@level,c
  4350                           
  4351                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4352  0085E6  0E00               	movlw	0
  4353  0085E8  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4354                           
  4355                           ;i2c.c: 339: data_array[1] = level>>1;
  4356  0085EA  90D8               	bcf	status,0,c
  4357  0085EC  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4358  0085EE  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4359                           
  4360                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4361  0085F0  0E02               	movlw	2
  4362  0085F2  EC9F  F042         	call	_i2c_set_frequency
  4363                           
  4364                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4365  0085F6  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4366  0085F8  6E06               	movwf	__i2c_write@data,c
  4367  0085FA  0E00               	movlw	high i2c_digipot_backlight@data_array
  4368  0085FC  6E07               	movwf	__i2c_write@data+1,c
  4369  0085FE  0E02               	movlw	2
  4370  008600  6E08               	movwf	__i2c_write@length,c
  4371  008602  0E5C               	movlw	92
  4372  008604  EC6F  F03F         	call	__i2c_write
  4373  008608  0012               	return		;funcret
  4374  00860A                     __end_of_i2c_digipot_backlight:
  4375                           	opt stack 0
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           intcon3	equ	0xFF0
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           postdec1	equ	0xFE5
  4384                           plusw1	equ	0xFE3
  4385                           fsr1h	equ	0xFE2
  4386                           fsr1l	equ	0xFE1
  4387                           plusw2	equ	0xFDB
  4388                           status	equ	0xFD8
  4389                           
  4390 ;; *************** function __ui_encoder *****************
  4391 ;; Defined at:
  4392 ;;		line 22 in file "ui.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;		None
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:        0 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    8
  4413 ;; This function calls:
  4414 ;;		_i2c_eeprom_writeByte
  4415 ;;		_reboot
  4416 ;;		_system_delay_ms
  4417 ;; This function is called by:
  4418 ;;		_ui_run
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text7
  4423  005612                     __ptext7:
  4424                           	opt stack 0
  4425  005612                     __ui_encoder:
  4426                           	opt stack 21
  4427                           
  4428                           ;ui.c: 24: switch(os.display_mode)
  4429                           
  4430                           ;incstack = 0
  4431  005612  D054               	goto	l1292
  4432  005614                     
  4433                           ;ui.c: 27: if(os.buttonCount>0)
  4434  005614  0100               	movlb	0	; () banked
  4435  005616  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4436  005618  0A80               	xorlw	128
  4437  00561A  0F7F               	addlw	-129
  4438  00561C  A0D8               	btfss	status,0,c
  4439  00561E  0012               	return	
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4443  005620  0E00               	movlw	0
  4444  005622  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;ui.c: 30: };ui.c: 31: break;
  4448  005624  0012               	return	
  4449  005626                     
  4450                           ; BSR set to: 0
  4451                           ;ui.c: 34: if(os.buttonCount>0)
  4452                           
  4453                           ; BSR set to: 0
  4454  005626  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4455  005628  0A80               	xorlw	128
  4456  00562A  0F7F               	addlw	-129
  4457  00562C  A0D8               	btfss	status,0,c
  4458  00562E  0012               	return	
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4462  005630  0E00               	movlw	0
  4463  005632  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;ui.c: 37: };ui.c: 38: break;
  4467  005634  0012               	return	
  4468  005636                     
  4469                           ; BSR set to: 0
  4470                           ;ui.c: 41: if(os.buttonCount>0)
  4471                           
  4472                           ; BSR set to: 0
  4473  005636  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4474  005638  0A80               	xorlw	128
  4475  00563A  0F7F               	addlw	-129
  4476  00563C  A0D8               	btfss	status,0,c
  4477  00563E  0012               	return	
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4481  005640  0E30               	movlw	48
  4482  005642  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4483                           
  4484                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4485  005644  0E30               	movlw	48
  4486  005646  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4487                           
  4488                           ;ui.c: 45: os.buttonCount = 0;
  4489  005648  0E00               	movlw	0
  4490  00564A  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;ui.c: 46: };ui.c: 47: break;
  4494  00564C  0012               	return	
  4495  00564E                     
  4496                           ; BSR set to: 0
  4497                           ;ui.c: 50: if(os.buttonCount>0)
  4498                           
  4499                           ; BSR set to: 0
  4500  00564E  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4501  005650  0A80               	xorlw	128
  4502  005652  0F7F               	addlw	-129
  4503  005654  A0D8               	btfss	status,0,c
  4504  005656  0012               	return	
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4508  005658  0E00               	movlw	0
  4509  00565A  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;ui.c: 53: };ui.c: 54: break;
  4513  00565C  0012               	return	
  4514  00565E                     
  4515                           ; BSR set to: 0
  4516                           ;ui.c: 57: if(os.buttonCount>0)
  4517                           
  4518                           ; BSR set to: 0
  4519  00565E  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4520  005660  0A80               	xorlw	128
  4521  005662  0F7F               	addlw	-129
  4522  005664  A0D8               	btfss	status,0,c
  4523  005666  0012               	return	
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4527  005668  0E00               	movlw	0
  4528  00566A  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;ui.c: 60: };ui.c: 61: break;
  4532  00566C  0012               	return	
  4533  00566E                     
  4534                           ; BSR set to: 0
  4535                           ;ui.c: 64: if(os.buttonCount>0)
  4536                           
  4537                           ; BSR set to: 0
  4538  00566E  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4539  005670  0A80               	xorlw	128
  4540  005672  0F7F               	addlw	-129
  4541  005674  A0D8               	btfss	status,0,c
  4542  005676  0012               	return	
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4546  005678  0E60               	movlw	96
  4547  00567A  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4548                           
  4549                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4550  00567C  0E60               	movlw	96
  4551  00567E  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4552                           
  4553                           ;ui.c: 68: os.buttonCount = 0;
  4554  005680  0E00               	movlw	0
  4555  005682  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;ui.c: 69: };ui.c: 70: break;
  4559  005684  0012               	return	
  4560  005686                     
  4561                           ; BSR set to: 0
  4562                           ;ui.c: 73: if(os.buttonCount>0)
  4563                           
  4564                           ; BSR set to: 0
  4565  005686  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4566  005688  0A80               	xorlw	128
  4567  00568A  0F7F               	addlw	-129
  4568  00568C  A0D8               	btfss	status,0,c
  4569  00568E  0012               	return	
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4573  005690  0E00               	movlw	0
  4574  005692  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;ui.c: 76: };ui.c: 77: break;
  4578  005694  0012               	return	
  4579  005696                     
  4580                           ; BSR set to: 0
  4581                           ;ui.c: 80: if(os.buttonCount>0)
  4582                           
  4583                           ; BSR set to: 0
  4584  005696  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4585  005698  0A80               	xorlw	128
  4586  00569A  0F7F               	addlw	-129
  4587  00569C  A0D8               	btfss	status,0,c
  4588  00569E  0012               	return	
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4592  0056A0  0E01               	movlw	1
  4593  0056A2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4594  0056A4  0E00               	movlw	0
  4595  0056A6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4596  0056A8  0E78               	movlw	120
  4597  0056AA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4598  0056AC  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
  4599                           
  4600                           ;ui.c: 83: system_delay_ms(10);
  4601  0056B0  0E0A               	movlw	10
  4602  0056B2  EC2B  F043         	call	_system_delay_ms
  4603                           
  4604                           ;ui.c: 84: reboot();
  4605  0056B6  ECEB  F043         	call	_reboot	;wreg free
  4606                           
  4607                           ;ui.c: 87: }
  4608                           
  4609                           ;ui.c: 85: };ui.c: 86: break;
  4610  0056BA  0012               	return	
  4611  0056BC                     l1292:
  4612  0056BC  0100               	movlb	0	; () banked
  4613  0056BE  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  4614                           
  4615                           ; Switch size 1, requested type "space"
  4616                           ; Number of cases is 8, Range of values is 0 to 112
  4617                           ; switch strategies available:
  4618                           ; Name         Instructions Cycles
  4619                           ; simple_byte           25    13 (average)
  4620                           ;	Chosen strategy is simple_byte
  4621  0056C0  0A00               	xorlw	0	; case 0
  4622  0056C2  B4D8               	btfsc	status,2,c
  4623  0056C4  D7A7               	goto	l1293
  4624  0056C6  0A10               	xorlw	16	; case 16
  4625  0056C8  B4D8               	btfsc	status,2,c
  4626  0056CA  D7AD               	goto	l1296
  4627  0056CC  0A30               	xorlw	48	; case 32
  4628  0056CE  B4D8               	btfsc	status,2,c
  4629  0056D0  D7B2               	goto	l1298
  4630  0056D2  0A10               	xorlw	16	; case 48
  4631  0056D4  B4D8               	btfsc	status,2,c
  4632  0056D6  D7BB               	goto	l1300
  4633  0056D8  0A70               	xorlw	112	; case 64
  4634  0056DA  B4D8               	btfsc	status,2,c
  4635  0056DC  D7C8               	goto	l1304
  4636  0056DE  0A10               	xorlw	16	; case 80
  4637  0056E0  B4D8               	btfsc	status,2,c
  4638  0056E2  D7BD               	goto	l1302
  4639  0056E4  0A30               	xorlw	48	; case 96
  4640  0056E6  B4D8               	btfsc	status,2,c
  4641  0056E8  D7CE               	goto	l1306
  4642  0056EA  0A10               	xorlw	16	; case 112
  4643  0056EC  A4D8               	btfss	status,2,c
  4644  0056EE  0012               	return	
  4645  0056F0  D7D2               	goto	l1308
  4646  0056F2                     __end_of__ui_encoder:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           intcon3	equ	0xFF0
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           postdec1	equ	0xFE5
  4656                           plusw1	equ	0xFE3
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           plusw2	equ	0xFDB
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _timer_pseudo_isr *****************
  4663 ;; Defined at:
  4664 ;;		line 19 in file "os.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text8
  4692  008294                     __ptext8:
  4693                           	opt stack 0
  4694  008294                     _timer_pseudo_isr:
  4695                           	opt stack 30
  4696                           
  4697                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4698                           
  4699                           ;incstack = 0
  4700  008294  A4F2               	btfss	intcon,2,c	;volatile
  4701  008296  0012               	return	
  4702                           
  4703                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4704                           
  4705                           ;os.c: 23: {;os.c: 24: return;
  4706  008298  0ED1               	movlw	209
  4707  00829A  6ED7               	movwf	4055,c	;volatile
  4708                           
  4709                           ;os.c: 30: TMR0L = 0x20;
  4710  00829C  0E20               	movlw	32
  4711  00829E  6ED6               	movwf	4054,c	;volatile
  4712                           
  4713                           ;os.c: 31: ++os.timeSlot;
  4714  0082A0  0100               	movlb	0	; () banked
  4715  0082A2  2BBB               	incf	(_os+2)& (0+255),f,b	;volatile
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;os.c: 33: os.done = 0;
  4719  0082A4  0E00               	movlw	0
  4720  0082A6  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;os.c: 34: INTCONbits.T0IF = 0;
  4724  0082A8  94F2               	bcf	intcon,2,c	;volatile
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4728  0082AA  A0F0               	btfss	intcon3,0,c	;volatile
  4729  0082AC  D002               	goto	l1083
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4733  0082AE  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4737  0082B0  90F0               	bcf	intcon3,0,c	;volatile
  4738  0082B2                     l1083:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4742                           
  4743                           ; BSR set to: 0
  4744  0082B2  A2F0               	btfss	intcon3,1,c	;volatile
  4745  0082B4  D003               	goto	l1084
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4749  0082B6  AC81               	btfss	3969,6,c	;volatile
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4753  0082B8  07B9               	decf	_os& (0+255),f,b	;volatile
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4757                           
  4758                           ; BSR set to: 0
  4759  0082BA  92F0               	bcf	intcon3,1,c	;volatile
  4760  0082BC                     l1084:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4764                           
  4765                           ; BSR set to: 0
  4766  0082BC  A4F0               	btfss	intcon3,2,c	;volatile
  4767  0082BE  0012               	return	
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4771  0082C0  AE81               	btfss	3969,7,c	;volatile
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4775  0082C2  2BB9               	incf	_os& (0+255),f,b	;volatile
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4779                           
  4780                           ; BSR set to: 0
  4781  0082C4  94F0               	bcf	intcon3,2,c	;volatile
  4782  0082C6  0012               	return	
  4783  0082C8                     __end_of_timer_pseudo_isr:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           intcon	equ	0xFF2
  4790                           intcon3	equ	0xFF0
  4791                           postinc0	equ	0xFEE
  4792                           wreg	equ	0xFE8
  4793                           postdec1	equ	0xFE5
  4794                           plusw1	equ	0xFE3
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           plusw2	equ	0xFDB
  4798                           status	equ	0xFD8
  4799                           
  4800 ;; *************** function _system_minimal_init_undo *****************
  4801 ;; Defined at:
  4802 ;;		line 157 in file "os.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4820 ;;Total ram usage:        0 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    1
  4823 ;; This function calls:
  4824 ;;		_i2c_reset
  4825 ;; This function is called by:
  4826 ;;		_main
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text9
  4831  0088A6                     __ptext9:
  4832                           	opt stack 0
  4833  0088A6                     _system_minimal_init_undo:
  4834                           	opt stack 29
  4835                           
  4836                           ;os.c: 160: i2c_reset();
  4837                           
  4838                           ;incstack = 0
  4839  0088A6  EC6B  F044         	call	_i2c_reset	;wreg free
  4840                           
  4841                           ;os.c: 163: TRISAbits.TRISA0 = 1;
  4842  0088AA  8092               	bsf	3986,0,c	;volatile
  4843                           
  4844                           ;os.c: 164: ANCON0bits.PCFG0 = 0;
  4845  0088AC  010F               	movlb	15	; () banked
  4846  0088AE  9148               	bcf	72,0,b	;volatile
  4847                           
  4848                           ; BSR set to: 15
  4849                           ;os.c: 167: LATCbits.LC2 = 0;
  4850  0088B0  948B               	bcf	3979,2,c	;volatile
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;os.c: 168: TRISCbits.TRISC2 = 1;
  4854  0088B2  8494               	bsf	3988,2,c	;volatile
  4855                           
  4856                           ; BSR set to: 15
  4857  0088B4  0012               	return		;funcret
  4858  0088B6                     __end_of_system_minimal_init_undo:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           intcon	equ	0xFF2
  4865                           intcon3	equ	0xFF0
  4866                           postinc0	equ	0xFEE
  4867                           wreg	equ	0xFE8
  4868                           postdec1	equ	0xFE5
  4869                           plusw1	equ	0xFE3
  4870                           fsr1h	equ	0xFE2
  4871                           fsr1l	equ	0xFE1
  4872                           plusw2	equ	0xFDB
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _i2c_reset *****************
  4876 ;; Defined at:
  4877 ;;		line 110 in file "i2c.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, status,2
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;Total ram usage:        0 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_system_minimal_init_undo
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text10
  4905  0088D6                     __ptext10:
  4906                           	opt stack 0
  4907  0088D6                     _i2c_reset:
  4908                           	opt stack 29
  4909                           
  4910                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;incstack = 0
  4914  0088D6  9EC7               	bcf	4039,7,c	;volatile
  4915                           
  4916                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  4917  0088D8  9CC7               	bcf	4039,6,c	;volatile
  4918                           
  4919                           ;i2c.c: 114: SSP1CON1 = 0x00;
  4920  0088DA  0E00               	movlw	0
  4921  0088DC  6EC6               	movwf	4038,c	;volatile
  4922                           
  4923                           ;i2c.c: 115: SSP1ADD = 0x00;
  4924  0088DE  0E00               	movlw	0
  4925  0088E0  6EC8               	movwf	4040,c	;volatile
  4926  0088E2  0012               	return		;funcret
  4927  0088E4                     __end_of_i2c_reset:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           intcon	equ	0xFF2
  4934                           intcon3	equ	0xFF0
  4935                           postinc0	equ	0xFEE
  4936                           wreg	equ	0xFE8
  4937                           postdec1	equ	0xFE5
  4938                           plusw1	equ	0xFE3
  4939                           fsr1h	equ	0xFE2
  4940                           fsr1l	equ	0xFE1
  4941                           plusw2	equ	0xFDB
  4942                           status	equ	0xFD8
  4943                           
  4944 ;; *************** function _system_minimal_init *****************
  4945 ;; Defined at:
  4946 ;;		line 139 in file "os.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    2
  4967 ;; This function calls:
  4968 ;;		_i2c_init
  4969 ;;		_system_delay_ms
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text11
  4976  008808                     __ptext11:
  4977                           	opt stack 0
  4978  008808                     _system_minimal_init:
  4979                           	opt stack 28
  4980                           
  4981                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  4982                           
  4983                           ;incstack = 0
  4984  008808  9494               	bcf	3988,2,c	;volatile
  4985                           
  4986                           ;os.c: 143: LATCbits.LC2 = 1;
  4987  00880A  848B               	bsf	3979,2,c	;volatile
  4988                           
  4989                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  4990  00880C  8092               	bsf	3986,0,c	;volatile
  4991                           
  4992                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  4993  00880E  010F               	movlb	15	; () banked
  4994  008810  8148               	bsf	72,0,b	;volatile
  4995                           
  4996                           ; BSR set to: 15
  4997                           ;os.c: 150: i2c_init();
  4998  008812  EC79  F044         	call	_i2c_init	;wreg free
  4999                           
  5000                           ;os.c: 153: system_delay_ms(50);
  5001  008816  0E32               	movlw	50
  5002  008818  EC2B  F043         	call	_system_delay_ms
  5003  00881C  0012               	return		;funcret
  5004  00881E                     __end_of_system_minimal_init:
  5005                           	opt stack 0
  5006                           tblptru	equ	0xFF8
  5007                           tblptrh	equ	0xFF7
  5008                           tblptrl	equ	0xFF6
  5009                           tablat	equ	0xFF5
  5010                           intcon	equ	0xFF2
  5011                           intcon3	equ	0xFF0
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           postdec1	equ	0xFE5
  5015                           plusw1	equ	0xFE3
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           plusw2	equ	0xFDB
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _i2c_init *****************
  5022 ;; Defined at:
  5023 ;;		line 102 in file "i2c.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    1
  5044 ;; This function calls:
  5045 ;;		__i2c_open_1
  5046 ;;		_i2c_set_frequency
  5047 ;; This function is called by:
  5048 ;;		_system_minimal_init
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text12
  5053  0088F2                     __ptext12:
  5054                           	opt stack 0
  5055  0088F2                     _i2c_init:
  5056                           	opt stack 28
  5057                           
  5058                           ;i2c.c: 105: _i2c_open_1();
  5059                           
  5060                           ;incstack = 0
  5061  0088F2  ECF8  F043         	call	__i2c_open_1	;wreg free
  5062                           
  5063                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5064  0088F6  0E00               	movlw	0
  5065  0088F8  EC9F  F042         	call	_i2c_set_frequency
  5066  0088FC  0012               	return		;funcret
  5067  0088FE                     __end_of_i2c_init:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           intcon	equ	0xFF2
  5074                           intcon3	equ	0xFF0
  5075                           postinc0	equ	0xFEE
  5076                           wreg	equ	0xFE8
  5077                           postdec1	equ	0xFE5
  5078                           plusw1	equ	0xFE3
  5079                           fsr1h	equ	0xFE2
  5080                           fsr1l	equ	0xFE1
  5081                           plusw2	equ	0xFDB
  5082                           status	equ	0xFD8
  5083                           
  5084 ;; *************** function __i2c_open_1 *****************
  5085 ;; Defined at:
  5086 ;;		line 36 in file "i2c.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_i2c_init
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text13
  5114  0087F0                     __ptext13:
  5115                           	opt stack 0
  5116  0087F0                     __i2c_open_1:
  5117                           	opt stack 28
  5118                           
  5119                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5120                           
  5121                           ;incstack = 0
  5122  0087F0  9EC7               	bcf	4039,7,c	;volatile
  5123                           
  5124                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5125  0087F2  9CC7               	bcf	4039,6,c	;volatile
  5126                           
  5127                           ;i2c.c: 40: SSP1ADD = 29;
  5128  0087F4  0E1D               	movlw	29
  5129  0087F6  6EC8               	movwf	4040,c	;volatile
  5130                           
  5131                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5132  0087F8  9EC6               	bcf	4038,7,c	;volatile
  5133                           
  5134                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5135  0087FA  9CC6               	bcf	4038,6,c	;volatile
  5136                           
  5137                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5138  0087FC  50C6               	movf	4038,w,c	;volatile
  5139  0087FE  0BF0               	andlw	-16
  5140  008800  0908               	iorlw	8
  5141  008802  6EC6               	movwf	4038,c	;volatile
  5142                           
  5143                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5144  008804  8AC6               	bsf	4038,5,c	;volatile
  5145  008806  0012               	return		;funcret
  5146  008808                     __end_of__i2c_open_1:
  5147                           	opt stack 0
  5148                           tblptru	equ	0xFF8
  5149                           tblptrh	equ	0xFF7
  5150                           tblptrl	equ	0xFF6
  5151                           tablat	equ	0xFF5
  5152                           intcon	equ	0xFF2
  5153                           intcon3	equ	0xFF0
  5154                           postinc0	equ	0xFEE
  5155                           wreg	equ	0xFE8
  5156                           postdec1	equ	0xFE5
  5157                           plusw1	equ	0xFE3
  5158                           fsr1h	equ	0xFE2
  5159                           fsr1l	equ	0xFE1
  5160                           plusw2	equ	0xFDB
  5161                           status	equ	0xFD8
  5162                           
  5163 ;; *************** function _system_full_init *****************
  5164 ;; Defined at:
  5165 ;;		line 172 in file "os.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    7
  5186 ;; This function calls:
  5187 ;;		__system_encoder_init
  5188 ;;		__system_timer0_init
  5189 ;;		_fat_init
  5190 ;;		_flash_init
  5191 ;;		_ui_init
  5192 ;; This function is called by:
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text14
  5198  00788A                     __ptext14:
  5199                           	opt stack 0
  5200  00788A                     _system_full_init:
  5201                           	opt stack 23
  5202                           
  5203                           ;os.c: 179: TRISDbits.TRISD0 = 0;
  5204                           
  5205                           ;incstack = 0
  5206  00788A  9095               	bcf	3989,0,c	;volatile
  5207                           
  5208                           ;os.c: 180: LATDbits.LD0 = 0;
  5209  00788C  908C               	bcf	3980,0,c	;volatile
  5210                           
  5211                           ;os.c: 183: TRISDbits.TRISD3 = 0;
  5212  00788E  9695               	bcf	3989,3,c	;volatile
  5213                           
  5214                           ;os.c: 184: LATDbits.LD3 = 0;
  5215  007890  968C               	bcf	3980,3,c	;volatile
  5216                           
  5217                           ;os.c: 187: TRISDbits.TRISD1 = 0;
  5218  007892  9295               	bcf	3989,1,c	;volatile
  5219                           
  5220                           ;os.c: 188: LATDbits.LD1 = 0;
  5221  007894  928C               	bcf	3980,1,c	;volatile
  5222                           
  5223                           ;os.c: 191: TRISBbits.TRISB1 = 0;
  5224  007896  9293               	bcf	3987,1,c	;volatile
  5225                           
  5226                           ;os.c: 192: LATBbits.LB1 = 0;
  5227  007898  928A               	bcf	3978,1,c	;volatile
  5228                           
  5229                           ;os.c: 195: TRISBbits.TRISB2 = 0;
  5230  00789A  9493               	bcf	3987,2,c	;volatile
  5231                           
  5232                           ;os.c: 196: LATBbits.LB2 = 0;
  5233  00789C  948A               	bcf	3978,2,c	;volatile
  5234                           
  5235                           ;os.c: 197: TRISBbits.TRISB3 = 0;
  5236  00789E  9693               	bcf	3987,3,c	;volatile
  5237                           
  5238                           ;os.c: 198: LATBbits.LB3 = 0;
  5239  0078A0  968A               	bcf	3978,3,c	;volatile
  5240                           
  5241                           ;os.c: 201: TRISDbits.TRISD6 = 1;
  5242  0078A2  8C95               	bsf	3989,6,c	;volatile
  5243                           
  5244                           ;os.c: 202: TRISDbits.TRISD4 = 0;
  5245  0078A4  9895               	bcf	3989,4,c	;volatile
  5246                           
  5247                           ;os.c: 203: TRISDbits.TRISD5 = 0;
  5248  0078A6  9A95               	bcf	3989,5,c	;volatile
  5249                           
  5250                           ;os.c: 204: TRISDbits.TRISD7 = 0;
  5251  0078A8  9E95               	bcf	3989,7,c	;volatile
  5252                           
  5253                           ;os.c: 205: LATDbits.LD7 = 1;
  5254  0078AA  8E8C               	bsf	3980,7,c	;volatile
  5255                           
  5256                           ;os.c: 206: TRISDbits.TRISD2 = 1;
  5257  0078AC  8495               	bsf	3989,2,c	;volatile
  5258                           
  5259                           ;os.c: 209: TRISCbits.TRISC7 = 0;
  5260  0078AE  9E94               	bcf	3988,7,c	;volatile
  5261                           
  5262                           ;os.c: 210: LATCbits.LC7 = 0;
  5263  0078B0  9E8B               	bcf	3979,7,c	;volatile
  5264                           
  5265                           ;os.c: 213: TRISEbits.TRISE2 = 0;
  5266  0078B2  9496               	bcf	3990,2,c	;volatile
  5267                           
  5268                           ;os.c: 214: LATEbits.LE2 = 1;
  5269  0078B4  848D               	bsf	3981,2,c	;volatile
  5270                           
  5271                           ;os.c: 215: TRISEbits.TRISE1 = 0;
  5272  0078B6  9296               	bcf	3990,1,c	;volatile
  5273                           
  5274                           ;os.c: 216: LATEbits.LE1 = 1;
  5275  0078B8  828D               	bsf	3981,1,c	;volatile
  5276                           
  5277                           ;os.c: 217: TRISEbits.TRISE0 = 0;
  5278  0078BA  9096               	bcf	3990,0,c	;volatile
  5279                           
  5280                           ;os.c: 218: LATEbits.LE0 = 1;
  5281  0078BC  808D               	bsf	3981,0,c	;volatile
  5282                           
  5283                           ;os.c: 219: TRISAbits.TRISA5 = 0;
  5284  0078BE  9A92               	bcf	3986,5,c	;volatile
  5285                           
  5286                           ;os.c: 220: LATAbits.LA5 = 1;
  5287  0078C0  8A89               	bsf	3977,5,c	;volatile
  5288                           
  5289                           ;os.c: 223: TRISBbits.TRISB7 = 1;
  5290  0078C2  8E93               	bsf	3987,7,c	;volatile
  5291                           
  5292                           ;os.c: 224: TRISBbits.TRISB6 = 1;
  5293  0078C4  8C93               	bsf	3987,6,c	;volatile
  5294                           
  5295                           ;os.c: 227: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5296  0078C6  0E10               	movlw	16
  5297  0078C8  0100               	movlb	0	; () banked
  5298  0078CA  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  5299                           
  5300                           ;os.c: 228: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5301  0078CC  0E00               	movlw	0
  5302  0078CE  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;os.c: 231: flash_init();
  5306  0078D0  ECD1  F043         	call	_flash_init	;wreg free
  5307                           
  5308                           ;os.c: 234: fat_init();
  5309  0078D4  EC5B  F044         	call	_fat_init	;wreg free
  5310                           
  5311                           ;os.c: 237: _system_encoder_init();
  5312  0078D8  ECDA  F040         	call	__system_encoder_init	;wreg free
  5313                           
  5314                           ;os.c: 240: ui_init();
  5315  0078DC  EC25  F044         	call	_ui_init	;wreg free
  5316                           
  5317                           ;os.c: 243: _system_timer0_init();
  5318  0078E0  ECA5  F043         	call	__system_timer0_init	;wreg free
  5319  0078E4  0012               	return		;funcret
  5320  0078E6                     __end_of_system_full_init:
  5321                           	opt stack 0
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           intcon	equ	0xFF2
  5327                           intcon3	equ	0xFF0
  5328                           postinc0	equ	0xFEE
  5329                           wreg	equ	0xFE8
  5330                           postdec1	equ	0xFE5
  5331                           plusw1	equ	0xFE3
  5332                           fsr1h	equ	0xFE2
  5333                           fsr1l	equ	0xFE1
  5334                           plusw2	equ	0xFDB
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _ui_init *****************
  5338 ;; Defined at:
  5339 ;;		line 101 in file "ui.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_system_full_init
  5363 ;;		_ui_run
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text15
  5368  00884A                     __ptext15:
  5369                           	opt stack 0
  5370  00884A                     _ui_init:
  5371                           	opt stack 29
  5372                           
  5373                           ;ui.c: 103: system_ui_inactive_count = 0;
  5374                           
  5375                           ;incstack = 0
  5376  00884A  0E00               	movlw	0
  5377  00884C  0101               	movlb	1	; () banked
  5378  00884E  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5379  008850  0E00               	movlw	0
  5380  008852  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  5381                           
  5382                           ; BSR set to: 1
  5383                           ;ui.c: 105: LATCbits.LC2 = 1;
  5384  008854  848B               	bsf	3979,2,c	;volatile
  5385                           
  5386                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5387  008856  0E01               	movlw	1
  5388  008858  0100               	movlb	0	; () banked
  5389  00885A  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  5390                           
  5391                           ; BSR set to: 0
  5392  00885C  0012               	return		;funcret
  5393  00885E                     __end_of_ui_init:
  5394                           	opt stack 0
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           intcon	equ	0xFF2
  5400                           intcon3	equ	0xFF0
  5401                           postinc0	equ	0xFEE
  5402                           wreg	equ	0xFE8
  5403                           postdec1	equ	0xFE5
  5404                           plusw1	equ	0xFE3
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           plusw2	equ	0xFDB
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function _flash_init *****************
  5411 ;; Defined at:
  5412 ;;		line 337 in file "flash.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5430 ;;Total ram usage:        0 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    4
  5433 ;; This function calls:
  5434 ;;		__flash_set_page_size
  5435 ;;		_spi_init
  5436 ;;		_spi_set_configuration
  5437 ;; This function is called by:
  5438 ;;		_system_full_init
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text16
  5443  0087A2                     __ptext16:
  5444                           	opt stack 0
  5445  0087A2                     _flash_init:
  5446                           	opt stack 25
  5447                           
  5448                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;incstack = 0
  5452  0087A2  0E00               	movlw	0
  5453  0087A4  EC9E  F040         	call	_spi_init
  5454                           
  5455                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5456  0087A8  0E00               	movlw	0
  5457  0087AA  EC5A  F024         	call	_spi_set_configuration
  5458                           
  5459                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5460  0087AE  0E00               	movlw	0
  5461  0087B0  ECDF  F037         	call	__flash_set_page_size
  5462                           
  5463                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5464  0087B4  0E01               	movlw	1
  5465  0087B6  EC5A  F024         	call	_spi_set_configuration
  5466  0087BA  0012               	return		;funcret
  5467  0087BC                     __end_of_flash_init:
  5468                           	opt stack 0
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           intcon	equ	0xFF2
  5474                           intcon3	equ	0xFF0
  5475                           postinc0	equ	0xFEE
  5476                           wreg	equ	0xFE8
  5477                           postdec1	equ	0xFE5
  5478                           plusw1	equ	0xFE3
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           plusw2	equ	0xFDB
  5482                           status	equ	0xFD8
  5483                           
  5484 ;; *************** function _spi_init *****************
  5485 ;; Defined at:
  5486 ;;		line 122 in file "spi.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  configuratio    1    wreg     enum E6749
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  configuratio    1    3[COMRAM] enum E6749
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;Total ram usage:        1 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    1
  5507 ;; This function calls:
  5508 ;;		__spi_init
  5509 ;; This function is called by:
  5510 ;;		_flash_init
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text17
  5515  00813C                     __ptext17:
  5516                           	opt stack 0
  5517  00813C                     _spi_init:
  5518                           	opt stack 27
  5519                           
  5520                           ;incstack = 0
  5521                           ;spi_init@configuration stored from wreg
  5522  00813C  6E04               	movwf	spi_init@configuration,c
  5523                           
  5524                           ;spi.c: 124: switch(configuration)
  5525  00813E  D012               	goto	l2870
  5526  008140                     
  5527                           ;spi.c: 127: _spi_init(config_internal);
  5528  008140  C165  F001         	movff	_config_internal,__spi_init@details
  5529  008144  C166  F002         	movff	_config_internal+1,__spi_init@details+1
  5530  008148  C167  F003         	movff	_config_internal+2,__spi_init@details+2
  5531  00814C  ECF7  F040         	call	__spi_init	;wreg free
  5532                           
  5533                           ;spi.c: 128: break;
  5534  008150  D010               	goto	l2872
  5535  008152                     
  5536                           ;spi.c: 131: _spi_init(config_external);
  5537  008152  C162  F001         	movff	_config_external,__spi_init@details
  5538  008156  C163  F002         	movff	_config_external+1,__spi_init@details+1
  5539  00815A  C164  F003         	movff	_config_external+2,__spi_init@details+2
  5540  00815E  ECF7  F040         	call	__spi_init	;wreg free
  5541                           
  5542                           ;spi.c: 133: }
  5543                           
  5544                           ;spi.c: 132: break;
  5545  008162  D007               	goto	l2872
  5546  008164                     l2870:
  5547  008164  5004               	movf	spi_init@configuration,w,c
  5548                           
  5549                           ; Switch size 1, requested type "space"
  5550                           ; Number of cases is 2, Range of values is 0 to 1
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte            7     4 (average)
  5554                           ;	Chosen strategy is simple_byte
  5555  008166  0A00               	xorlw	0	; case 0
  5556  008168  B4D8               	btfsc	status,2,c
  5557  00816A  D7EA               	goto	l2871
  5558  00816C  0A01               	xorlw	1	; case 1
  5559  00816E  B4D8               	btfsc	status,2,c
  5560  008170  D7F0               	goto	l2873
  5561  008172                     l2872:
  5562                           
  5563                           ;spi.c: 135: active_configuration = configuration;
  5564  008172  C004  F186         	movff	spi_init@configuration,_active_configuration
  5565  008176  0012               	return		;funcret
  5566  008178                     __end_of_spi_init:
  5567                           	opt stack 0
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           intcon	equ	0xFF2
  5573                           intcon3	equ	0xFF0
  5574                           postinc0	equ	0xFEE
  5575                           wreg	equ	0xFE8
  5576                           postdec1	equ	0xFE5
  5577                           plusw1	equ	0xFE3
  5578                           fsr1h	equ	0xFE2
  5579                           fsr1l	equ	0xFE1
  5580                           plusw2	equ	0xFDB
  5581                           status	equ	0xFD8
  5582                           
  5583 ;; *************** function __spi_init *****************
  5584 ;; Defined at:
  5585 ;;		line 25 in file "spi.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;  details         3    0[COMRAM] struct .
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5599 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;Total ram usage:        3 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_spi_init
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text18
  5613  0081EE                     __ptext18:
  5614                           	opt stack 0
  5615  0081EE                     __spi_init:
  5616                           	opt stack 27
  5617                           
  5618                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5619                           
  5620                           ;incstack = 0
  5621  0081EE  0E55               	movlw	85
  5622  0081F0  6EA7               	movwf	4007,c	;volsfr
  5623  0081F2  0EAA               	movlw	170
  5624  0081F4  6EA7               	movwf	4007,c	;volsfr
  5625  0081F6  010E               	movlb	14	; () banked
  5626  0081F8  91BF               	bcf	191,0,b	;volatile
  5627                           
  5628                           ;spi.c: 32: RPINR21 = 23;
  5629  0081FA  0E17               	movlw	23
  5630  0081FC  6FFC               	movwf	252,b	;volatile
  5631                           
  5632                           ;spi.c: 33: RPOR21 = 10;
  5633  0081FE  0E0A               	movlw	10
  5634  008200  6FD5               	movwf	213,b	;volatile
  5635                           
  5636                           ;spi.c: 35: RPOR22 = 11;
  5637  008202  0E0B               	movlw	11
  5638  008204  6FD6               	movwf	214,b	;volatile
  5639                           
  5640                           ;spi.c: 36: RPINR22 = 22;
  5641  008206  0E16               	movlw	22
  5642  008208  6FFD               	movwf	253,b	;volatile
  5643                           
  5644                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5645  00820A  0E55               	movlw	85
  5646  00820C  6EA7               	movwf	4007,c	;volsfr
  5647  00820E  0EAA               	movlw	170
  5648  008210  6EA7               	movwf	4007,c	;volsfr
  5649                           
  5650                           ; BSR set to: 14
  5651  008212  81BF               	bsf	191,0,b	;volatile
  5652                           
  5653                           ; BSR set to: 14
  5654                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5655  008214  8E73               	bsf	3955,7,c	;volatile
  5656                           
  5657                           ; BSR set to: 14
  5658                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5659  008216  8C73               	bsf	3955,6,c	;volatile
  5660                           
  5661                           ; BSR set to: 14
  5662                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5663  008218  9872               	bcf	3954,4,c	;volatile
  5664                           
  5665                           ; BSR set to: 14
  5666                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5667  00821A  9072               	bcf	3954,0,c	;volatile
  5668  00821C  9272               	bcf	3954,1,c	;volatile
  5669  00821E  9472               	bcf	3954,2,c	;volatile
  5670  008220  9672               	bcf	3954,3,c	;volatile
  5671                           
  5672                           ; BSR set to: 14
  5673                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5674  008222  8A72               	bsf	3954,5,c	;volatile
  5675                           
  5676                           ; BSR set to: 14
  5677  008224  0012               	return		;funcret
  5678  008226                     __end_of__spi_init:
  5679                           	opt stack 0
  5680                           tblptru	equ	0xFF8
  5681                           tblptrh	equ	0xFF7
  5682                           tblptrl	equ	0xFF6
  5683                           tablat	equ	0xFF5
  5684                           intcon	equ	0xFF2
  5685                           intcon3	equ	0xFF0
  5686                           postinc0	equ	0xFEE
  5687                           wreg	equ	0xFE8
  5688                           postdec1	equ	0xFE5
  5689                           plusw1	equ	0xFE3
  5690                           fsr1h	equ	0xFE2
  5691                           fsr1l	equ	0xFE1
  5692                           plusw2	equ	0xFDB
  5693                           status	equ	0xFD8
  5694                           
  5695 ;; *************** function __flash_set_page_size *****************
  5696 ;; Defined at:
  5697 ;;		line 95 in file "flash.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  size            1    wreg     enum E6886
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  size            1   23[COMRAM] enum E6886
  5702 ;;  command         4   19[COMRAM] unsigned char [4]
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5716 ;;Total ram usage:        5 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    3
  5719 ;; This function calls:
  5720 ;;		__flash_is_busy
  5721 ;;		_memcpy
  5722 ;;		_spi_tx
  5723 ;; This function is called by:
  5724 ;;		_flash_init
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text19
  5729  006FBE                     __ptext19:
  5730                           	opt stack 0
  5731  006FBE                     __flash_set_page_size:
  5732                           	opt stack 25
  5733                           
  5734                           ; BSR set to: 14
  5735                           ;incstack = 0
  5736                           ;__flash_set_page_size@size stored from wreg
  5737  006FBE  6E18               	movwf	__flash_set_page_size@size,c
  5738  006FC0                     
  5739                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5740  006FC0  EC94  F043         	call	__flash_is_busy	;wreg free
  5741  006FC4  0900               	iorlw	0
  5742  006FC6  A4D8               	btfss	status,2,c
  5743  006FC8  D7FB               	goto	l13712
  5744                           
  5745                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5746  006FCA  5018               	movf	__flash_set_page_size@size,w,c
  5747  006FCC  A4D8               	btfss	status,2,c
  5748  006FCE  D013               	goto	l1741
  5749                           
  5750                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5751  006FD0  0E14               	movlw	low __flash_set_page_size@command
  5752  006FD2  6E01               	movwf	memcpy@d1,c
  5753  006FD4  0E00               	movlw	high __flash_set_page_size@command
  5754  006FD6  6E02               	movwf	memcpy@d1+1,c
  5755  006FD8  0EC4               	movlw	low _flash_command_pagesize_512
  5756  006FDA  6E03               	movwf	memcpy@s1,c
  5757  006FDC  0E8F               	movlw	high _flash_command_pagesize_512
  5758  006FDE  6E04               	movwf	memcpy@s1+1,c
  5759  006FE0  5003               	movf	memcpy@s1,w,c
  5760  006FE2  1004               	iorwf	memcpy@s1+1,w,c
  5761  006FE4  A4D8               	btfss	status,2,c
  5762  006FE6  0E00               	movlw	low (__mediumconst shr (0+16))
  5763  006FE8  6E05               	movwf	memcpy@s1+2,c
  5764  006FEA  0E00               	movlw	0
  5765  006FEC  6E07               	movwf	memcpy@n+1,c
  5766  006FEE  0E04               	movlw	4
  5767  006FF0  6E06               	movwf	memcpy@n,c
  5768  006FF2  ECF0  F03A         	call	_memcpy	;wreg free
  5769  006FF6                     l1741:
  5770                           
  5771                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5772  006FF6  0418               	decf	__flash_set_page_size@size,w,c
  5773  006FF8  A4D8               	btfss	status,2,c
  5774  006FFA  D013               	goto	l1742
  5775                           
  5776                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5777  006FFC  0E14               	movlw	low __flash_set_page_size@command
  5778  006FFE  6E01               	movwf	memcpy@d1,c
  5779  007000  0E00               	movlw	high __flash_set_page_size@command
  5780  007002  6E02               	movwf	memcpy@d1+1,c
  5781  007004  0EC0               	movlw	low _flash_command_pagesize_528
  5782  007006  6E03               	movwf	memcpy@s1,c
  5783  007008  0E8F               	movlw	high _flash_command_pagesize_528
  5784  00700A  6E04               	movwf	memcpy@s1+1,c
  5785  00700C  5003               	movf	memcpy@s1,w,c
  5786  00700E  1004               	iorwf	memcpy@s1+1,w,c
  5787  007010  A4D8               	btfss	status,2,c
  5788  007012  0E00               	movlw	low (__mediumconst shr (0+16))
  5789  007014  6E05               	movwf	memcpy@s1+2,c
  5790  007016  0E00               	movlw	0
  5791  007018  6E07               	movwf	memcpy@n+1,c
  5792  00701A  0E04               	movlw	4
  5793  00701C  6E06               	movwf	memcpy@n,c
  5794  00701E  ECF0  F03A         	call	_memcpy	;wreg free
  5795  007022                     l1742:
  5796                           
  5797                           ;flash.c: 109: spi_tx(command, 4);
  5798  007022  0E14               	movlw	low __flash_set_page_size@command
  5799  007024  6E01               	movwf	spi_tx@data,c
  5800  007026  0E00               	movlw	high __flash_set_page_size@command
  5801  007028  6E02               	movwf	spi_tx@data+1,c
  5802  00702A  0E00               	movlw	0
  5803  00702C  6E04               	movwf	spi_tx@length+1,c
  5804  00702E  0E04               	movlw	4
  5805  007030  6E03               	movwf	spi_tx@length,c
  5806  007032  EC51  F03D         	call	_spi_tx	;wreg free
  5807  007036  0012               	return		;funcret
  5808  007038                     __end_of__flash_set_page_size:
  5809                           	opt stack 0
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           intcon	equ	0xFF2
  5815                           intcon3	equ	0xFF0
  5816                           postinc0	equ	0xFEE
  5817                           wreg	equ	0xFE8
  5818                           postdec1	equ	0xFE5
  5819                           plusw1	equ	0xFE3
  5820                           fsr1h	equ	0xFE2
  5821                           fsr1l	equ	0xFE1
  5822                           plusw2	equ	0xFDB
  5823                           status	equ	0xFD8
  5824                           
  5825 ;; *************** function _fat_init *****************
  5826 ;; Defined at:
  5827 ;;		line 1187 in file "fat16.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    6
  5848 ;; This function calls:
  5849 ;;		_fat_format
  5850 ;;		_fat_get_format_status
  5851 ;; This function is called by:
  5852 ;;		_system_full_init
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text20
  5857  0088B6                     __ptext20:
  5858                           	opt stack 0
  5859  0088B6                     _fat_init:
  5860                           	opt stack 23
  5861                           
  5862                           ;fat16.c: 1190: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5863                           
  5864                           ;incstack = 0
  5865  0088B6  EC88  F031         	call	_fat_get_format_status	;wreg free
  5866  0088BA  0900               	iorlw	0
  5867  0088BC  A4D8               	btfss	status,2,c
  5868  0088BE  0012               	return	
  5869                           
  5870                           ;fat16.c: 1191: {;fat16.c: 1192: fat_format();
  5871  0088C0  EC46  F015         	call	_fat_format	;wreg free
  5872  0088C4  0012               	return	
  5873  0088C6                     __end_of_fat_init:
  5874                           	opt stack 0
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           intcon	equ	0xFF2
  5880                           intcon3	equ	0xFF0
  5881                           postinc0	equ	0xFEE
  5882                           wreg	equ	0xFE8
  5883                           postdec1	equ	0xFE5
  5884                           plusw1	equ	0xFE3
  5885                           fsr1h	equ	0xFE2
  5886                           fsr1l	equ	0xFE1
  5887                           plusw2	equ	0xFDB
  5888                           status	equ	0xFD8
  5889                           
  5890 ;; *************** function _fat_get_format_status *****************
  5891 ;; Defined at:
  5892 ;;		line 1099 in file "fat16.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  cntr            2   45[COMRAM] unsigned int 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      enum E6872
  5899 ;; Registers used:
  5900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5910 ;;Total ram usage:        4 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    5
  5913 ;; This function calls:
  5914 ;;		__get_fbr
  5915 ;;		__get_mbr
  5916 ;;		_flash_page_read
  5917 ;; This function is called by:
  5918 ;;		_fat_init
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text21
  5923  006310                     __ptext21:
  5924                           	opt stack 0
  5925  006310                     _fat_get_format_status:
  5926                           	opt stack 23
  5927                           
  5928                           ;fat16.c: 1101: uint16_t cntr;;fat16.c: 1104: flash_page_read(0, buffer);
  5929                           
  5930                           ;incstack = 0
  5931  006310  0E00               	movlw	0
  5932  006312  6E29               	movwf	flash_page_read@page+1,c
  5933  006314  0E00               	movlw	0
  5934  006316  6E28               	movwf	flash_page_read@page,c
  5935  006318  0E80               	movlw	low _buffer
  5936  00631A  6E2A               	movwf	flash_page_read@data,c
  5937  00631C  0E03               	movlw	high _buffer
  5938  00631E  6E2B               	movwf	flash_page_read@data+1,c
  5939  006320  ECCA  F041         	call	_flash_page_read	;wreg free
  5940                           
  5941                           ;fat16.c: 1105: for(cntr=0; cntr<512; ++cntr)
  5942  006324  0E00               	movlw	0
  5943  006326  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5944  006328  0E00               	movlw	0
  5945  00632A  6E2E               	movwf	fat_get_format_status@cntr,c
  5946  00632C                     l13740:
  5947  00632C  0E02               	movlw	2
  5948  00632E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5949  006330  B0D8               	btfsc	status,0,c
  5950  006332  D016               	goto	u10840
  5951                           
  5952                           ;fat16.c: 1106: {;fat16.c: 1107: if(buffer[cntr] != _get_mbr(cntr))
  5953  006334  0E80               	movlw	low _buffer
  5954  006336  242E               	addwf	fat_get_format_status@cntr,w,c
  5955  006338  6ED9               	movwf	fsr2l,c
  5956  00633A  0E03               	movlw	high _buffer
  5957  00633C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5958  00633E  6EDA               	movwf	fsr2h,c
  5959  006340  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5960  006344  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5961  006348  EC23  F02D         	call	__get_mbr	;wreg free
  5962  00634C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5963  00634E  50DE               	movf	postinc2,w,c
  5964  006350  182D               	xorwf	??_fat_get_format_status+1,w,c
  5965  006352  B4D8               	btfsc	status,2,c
  5966  006354  D002               	goto	l2207
  5967                           
  5968                           ;fat16.c: 1108: {;fat16.c: 1109: return DRIVE_NOT_FORMATED;
  5969  006356  0E00               	movlw	0
  5970  006358  0012               	return	
  5971  00635A                     l2207:
  5972  00635A  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5973  00635C  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5974  00635E  D7E6               	goto	l13740
  5975  006360                     u10840:
  5976                           
  5977                           ;fat16.c: 1110: };fat16.c: 1111: };fat16.c: 1114: flash_page_read(1, buffer);
  5978  006360  0E00               	movlw	0
  5979  006362  6E29               	movwf	flash_page_read@page+1,c
  5980  006364  0E01               	movlw	1
  5981  006366  6E28               	movwf	flash_page_read@page,c
  5982  006368  0E80               	movlw	low _buffer
  5983  00636A  6E2A               	movwf	flash_page_read@data,c
  5984  00636C  0E03               	movlw	high _buffer
  5985  00636E  6E2B               	movwf	flash_page_read@data+1,c
  5986  006370  ECCA  F041         	call	_flash_page_read	;wreg free
  5987                           
  5988                           ;fat16.c: 1115: for(cntr=0; cntr<512; ++cntr)
  5989  006374  0E00               	movlw	0
  5990  006376  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5991  006378  0E00               	movlw	0
  5992  00637A  6E2E               	movwf	fat_get_format_status@cntr,c
  5993  00637C                     l13758:
  5994  00637C  0E02               	movlw	2
  5995  00637E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5996  006380  B0D8               	btfsc	status,0,c
  5997  006382  D016               	goto	u10870
  5998                           
  5999                           ;fat16.c: 1116: {;fat16.c: 1117: if(buffer[cntr] != _get_fbr(cntr))
  6000  006384  0E80               	movlw	low _buffer
  6001  006386  242E               	addwf	fat_get_format_status@cntr,w,c
  6002  006388  6ED9               	movwf	fsr2l,c
  6003  00638A  0E03               	movlw	high _buffer
  6004  00638C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6005  00638E  6EDA               	movwf	fsr2h,c
  6006  006390  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6007  006394  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6008  006398  EC66  F00D         	call	__get_fbr	;wreg free
  6009  00639C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6010  00639E  50DE               	movf	postinc2,w,c
  6011  0063A0  182D               	xorwf	??_fat_get_format_status+1,w,c
  6012  0063A2  B4D8               	btfsc	status,2,c
  6013  0063A4  D002               	goto	l2211
  6014                           
  6015                           ;fat16.c: 1118: {;fat16.c: 1119: return DRIVE_NOT_FORMATED;
  6016  0063A6  0E00               	movlw	0
  6017  0063A8  0012               	return	
  6018  0063AA                     l2211:
  6019  0063AA  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6020  0063AC  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6021  0063AE  D7E6               	goto	l13758
  6022  0063B0                     u10870:
  6023                           
  6024                           ;fat16.c: 1120: };fat16.c: 1121: };fat16.c: 1124: return DRIVE_FORMATED;
  6025  0063B0  0E01               	movlw	1
  6026  0063B2  0012               	return	
  6027  0063B4                     __end_of_fat_get_format_status:
  6028                           	opt stack 0
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           intcon	equ	0xFF2
  6034                           intcon3	equ	0xFF0
  6035                           postinc0	equ	0xFEE
  6036                           wreg	equ	0xFE8
  6037                           postdec1	equ	0xFE5
  6038                           plusw1	equ	0xFE3
  6039                           fsr1h	equ	0xFE2
  6040                           fsr1l	equ	0xFE1
  6041                           postinc2	equ	0xFDE
  6042                           plusw2	equ	0xFDB
  6043                           fsr2h	equ	0xFDA
  6044                           fsr2l	equ	0xFD9
  6045                           status	equ	0xFD8
  6046                           
  6047 ;; *************** function __system_timer0_init *****************
  6048 ;; Defined at:
  6049 ;;		line 112 in file "os.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_system_full_init
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text22
  6077  00874A                     __ptext22:
  6078                           	opt stack 0
  6079  00874A                     __system_timer0_init:
  6080                           	opt stack 29
  6081                           
  6082                           ;os.c: 115: T0CONbits.T0CS = 0;
  6083                           
  6084                           ;incstack = 0
  6085  00874A  9AD5               	bcf	4053,5,c	;volatile
  6086                           
  6087                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6088  00874C  9CD5               	bcf	4053,6,c	;volatile
  6089                           
  6090                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6091  00874E  94D5               	bcf	4053,2,c	;volatile
  6092                           
  6093                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6094  008750  82D5               	bsf	4053,1,c	;volatile
  6095                           
  6096                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6097  008752  90D5               	bcf	4053,0,c	;volatile
  6098                           
  6099                           ;os.c: 123: T0CONbits.PSA = 0;
  6100  008754  96D5               	bcf	4053,3,c	;volatile
  6101                           
  6102                           ;os.c: 125: TMR0H = 0xD1;
  6103  008756  0ED1               	movlw	209
  6104  008758  6ED7               	movwf	4055,c	;volatile
  6105                           
  6106                           ;os.c: 126: TMR0L = 0x20;
  6107  00875A  0E20               	movlw	32
  6108  00875C  6ED6               	movwf	4054,c	;volatile
  6109                           
  6110                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6111  00875E  8ED5               	bsf	4053,7,c	;volatile
  6112                           
  6113                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6114  008760  94F2               	bcf	intcon,2,c	;volatile
  6115                           
  6116                           ;os.c: 135: os.timeSlot = 0;
  6117  008762  0E00               	movlw	0
  6118  008764  0100               	movlb	0	; () banked
  6119  008766  6FBB               	movwf	(_os+2)& (0+255),b	;volatile
  6120                           
  6121                           ; BSR set to: 0
  6122  008768  0012               	return		;funcret
  6123  00876A                     __end_of__system_timer0_init:
  6124                           	opt stack 0
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           intcon	equ	0xFF2
  6130                           intcon3	equ	0xFF0
  6131                           postinc0	equ	0xFEE
  6132                           wreg	equ	0xFE8
  6133                           postdec1	equ	0xFE5
  6134                           plusw1	equ	0xFE3
  6135                           fsr1h	equ	0xFE2
  6136                           fsr1l	equ	0xFE1
  6137                           postinc2	equ	0xFDE
  6138                           plusw2	equ	0xFDB
  6139                           fsr2h	equ	0xFDA
  6140                           fsr2l	equ	0xFD9
  6141                           status	equ	0xFD8
  6142                           
  6143 ;; *************** function __system_encoder_init *****************
  6144 ;; Defined at:
  6145 ;;		line 73 in file "os.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_system_full_init
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text23
  6173  0081B4                     __ptext23:
  6174                           	opt stack 0
  6175  0081B4                     __system_encoder_init:
  6176                           	opt stack 29
  6177                           
  6178                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;incstack = 0
  6182  0081B4  0E55               	movlw	85
  6183  0081B6  6EA7               	movwf	4007,c	;volsfr
  6184  0081B8  0EAA               	movlw	170
  6185  0081BA  6EA7               	movwf	4007,c	;volsfr
  6186  0081BC  010E               	movlb	14	; () banked
  6187  0081BE  91BF               	bcf	191,0,b	;volatile
  6188                           
  6189                           ;os.c: 76: RPINR1 = 0;
  6190  0081C0  0E00               	movlw	0
  6191  0081C2  6FE1               	movwf	225,b	;volatile
  6192                           
  6193                           ;os.c: 77: RPINR3 = 9;
  6194  0081C4  0E09               	movlw	9
  6195  0081C6  6FE3               	movwf	227,b	;volatile
  6196                           
  6197                           ;os.c: 78: RPINR2 = 10;
  6198  0081C8  0E0A               	movlw	10
  6199  0081CA  6FE2               	movwf	226,b	;volatile
  6200                           
  6201                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6202  0081CC  0E55               	movlw	85
  6203  0081CE  6EA7               	movwf	4007,c	;volsfr
  6204  0081D0  0EAA               	movlw	170
  6205  0081D2  6EA7               	movwf	4007,c	;volsfr
  6206                           
  6207                           ; BSR set to: 14
  6208  0081D4  91BF               	bcf	191,0,b	;volatile
  6209                           
  6210                           ; BSR set to: 14
  6211                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6212  0081D6  9AF1               	bcf	intcon2,5,c	;volatile
  6213                           
  6214                           ; BSR set to: 14
  6215                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6216  0081D8  90F0               	bcf	intcon3,0,c	;volatile
  6217                           
  6218                           ; BSR set to: 14
  6219                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6220  0081DA  88F1               	bsf	intcon2,4,c	;volatile
  6221                           
  6222                           ; BSR set to: 14
  6223                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6224  0081DC  92F0               	bcf	intcon3,1,c	;volatile
  6225                           
  6226                           ; BSR set to: 14
  6227                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6228  0081DE  86F1               	bsf	intcon2,3,c	;volatile
  6229                           
  6230                           ; BSR set to: 14
  6231                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6232  0081E0  94F0               	bcf	intcon3,2,c	;volatile
  6233                           
  6234                           ;os.c: 91: os.encoderCount = 0;
  6235  0081E2  0E00               	movlw	0
  6236  0081E4  0100               	movlb	0	; () banked
  6237  0081E6  6FB9               	movwf	_os& (0+255),b	;volatile
  6238                           
  6239                           ;os.c: 92: os.buttonCount = 0;
  6240  0081E8  0E00               	movlw	0
  6241  0081EA  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  6242                           
  6243                           ; BSR set to: 0
  6244  0081EC  0012               	return		;funcret
  6245  0081EE                     __end_of__system_encoder_init:
  6246                           	opt stack 0
  6247                           tblptru	equ	0xFF8
  6248                           tblptrh	equ	0xFF7
  6249                           tblptrl	equ	0xFF6
  6250                           tablat	equ	0xFF5
  6251                           intcon	equ	0xFF2
  6252                           intcon2	equ	0xFF1
  6253                           intcon3	equ	0xFF0
  6254                           postinc0	equ	0xFEE
  6255                           wreg	equ	0xFE8
  6256                           postdec1	equ	0xFE5
  6257                           plusw1	equ	0xFE3
  6258                           fsr1h	equ	0xFE2
  6259                           fsr1l	equ	0xFE1
  6260                           postinc2	equ	0xFDE
  6261                           plusw2	equ	0xFDB
  6262                           fsr2h	equ	0xFDA
  6263                           fsr2l	equ	0xFD9
  6264                           status	equ	0xFD8
  6265                           
  6266 ;; *************** function _spi_get_external_tx_buffer *****************
  6267 ;; Defined at:
  6268 ;;		line 75 in file "spi.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  2    0[COMRAM] PTR unsigned char 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text24
  6296  0088FE                     __ptext24:
  6297                           	opt stack 0
  6298  0088FE                     _spi_get_external_tx_buffer:
  6299                           	opt stack 30
  6300                           
  6301                           ;spi.c: 77: return _spi_external_tx_buffer;
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;incstack = 0
  6305  0088FE  0E50               	movlw	low __spi_external_tx_buffer
  6306  008900  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6307  008902  0E02               	movlw	high __spi_external_tx_buffer
  6308  008904  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6309  008906  0012               	return	
  6310  008908                     __end_of_spi_get_external_tx_buffer:
  6311                           	opt stack 0
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           intcon	equ	0xFF2
  6317                           intcon2	equ	0xFF1
  6318                           intcon3	equ	0xFF0
  6319                           postinc0	equ	0xFEE
  6320                           wreg	equ	0xFE8
  6321                           postdec1	equ	0xFE5
  6322                           plusw1	equ	0xFE3
  6323                           fsr1h	equ	0xFE2
  6324                           fsr1l	equ	0xFE1
  6325                           postinc2	equ	0xFDE
  6326                           plusw2	equ	0xFDB
  6327                           fsr2h	equ	0xFDA
  6328                           fsr2l	equ	0xFD9
  6329                           status	equ	0xFD8
  6330                           
  6331 ;; *************** function _spi_get_external_rx_buffer *****************
  6332 ;; Defined at:
  6333 ;;		line 80 in file "spi.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2    0[COMRAM] PTR unsigned char 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;Total ram usage:        2 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_main
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text25
  6361  008908                     __ptext25:
  6362                           	opt stack 0
  6363  008908                     _spi_get_external_rx_buffer:
  6364                           	opt stack 30
  6365                           
  6366                           ;spi.c: 82: return _spi_external_rx_buffer;
  6367                           
  6368                           ;incstack = 0
  6369  008908  0E00               	movlw	low __spi_external_rx_buffer
  6370  00890A  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6371  00890C  0E03               	movlw	high __spi_external_rx_buffer
  6372  00890E  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6373  008910  0012               	return	
  6374  008912                     __end_of_spi_get_external_rx_buffer:
  6375                           	opt stack 0
  6376                           tblptru	equ	0xFF8
  6377                           tblptrh	equ	0xFF7
  6378                           tblptrl	equ	0xFF6
  6379                           tablat	equ	0xFF5
  6380                           intcon	equ	0xFF2
  6381                           intcon2	equ	0xFF1
  6382                           intcon3	equ	0xFF0
  6383                           postinc0	equ	0xFEE
  6384                           wreg	equ	0xFE8
  6385                           postdec1	equ	0xFE5
  6386                           plusw1	equ	0xFE3
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           postinc2	equ	0xFDE
  6390                           plusw2	equ	0xFDB
  6391                           fsr2h	equ	0xFDA
  6392                           fsr2l	equ	0xFD9
  6393                           status	equ	0xFD8
  6394                           
  6395 ;; *************** function _jump_to_main_program *****************
  6396 ;; Defined at:
  6397 ;;		line 251 in file "os.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		None
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_main
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text26
  6425  0089A2                     __ptext26:
  6426                           	opt stack 0
  6427  0089A2                     _jump_to_main_program:
  6428                           	opt stack 30
  6429                           
  6430                           ;incstack = 0
  6431  0089A2  EF00 F048          	goto	36864	; ;# 
  6432  0089A6  0012               	return		;funcret
  6433  0089A8                     __end_of_jump_to_main_program:
  6434                           	opt stack 0
  6435                           tblptru	equ	0xFF8
  6436                           tblptrh	equ	0xFF7
  6437                           tblptrl	equ	0xFF6
  6438                           tablat	equ	0xFF5
  6439                           intcon	equ	0xFF2
  6440                           intcon2	equ	0xFF1
  6441                           intcon3	equ	0xFF0
  6442                           postinc0	equ	0xFEE
  6443                           wreg	equ	0xFE8
  6444                           postdec1	equ	0xFE5
  6445                           plusw1	equ	0xFE3
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           postinc2	equ	0xFDE
  6449                           plusw2	equ	0xFDB
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           
  6454 ;; *************** function _bootloader_run *****************
  6455 ;; Defined at:
  6456 ;;		line 63 in file "bootloader.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  timeslot        1    wreg     unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  timeslot        1   93[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;Total ram usage:        1 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    8
  6477 ;; This function calls:
  6478 ;;		__bootloader_find_file
  6479 ;;		__bootloader_program
  6480 ;;		__bootloader_verify_file
  6481 ;; This function is called by:
  6482 ;;		_main
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text27
  6487  007646                     __ptext27:
  6488                           	opt stack 0
  6489  007646                     _bootloader_run:
  6490                           	opt stack 22
  6491                           
  6492                           ;incstack = 0
  6493                           ;bootloader_run@timeslot stored from wreg
  6494  007646  6E5E               	movwf	bootloader_run@timeslot,c
  6495                           
  6496                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6497  007648  0100               	movlb	0	; () banked
  6498  00764A  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  6499  00764C  B4D8               	btfsc	status,2,c
  6500  00764E  0012               	return	
  6501  007650  D015               	goto	l2349
  6502  007652                     
  6503                           ; BSR set to: 0
  6504                           ;bootloader.c: 74: if(timeslot==0)
  6505                           
  6506                           ; BSR set to: 0
  6507  007652  505E               	movf	bootloader_run@timeslot,w,c
  6508  007654  A4D8               	btfss	status,2,c
  6509  007656  0012               	return	
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6513  007658  ECCE  F032         	call	__bootloader_find_file	;wreg free
  6514                           
  6515                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6516  00765C  0012               	return	
  6517  00765E                     
  6518                           ;bootloader.c: 81: if(timeslot==0)
  6519  00765E  505E               	movf	bootloader_run@timeslot,w,c
  6520  007660  A4D8               	btfss	status,2,c
  6521  007662  0012               	return	
  6522                           
  6523                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6524  007664  ECCE  F032         	call	__bootloader_find_file	;wreg free
  6525                           
  6526                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6527  007668  0012               	return	
  6528  00766A                     
  6529                           ;bootloader.c: 88: _bootloader_verify_file();
  6530  00766A  ECBE  F007         	call	__bootloader_verify_file	;wreg free
  6531                           
  6532                           ;bootloader.c: 95: break;
  6533                           
  6534                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6535                           
  6536                           ;bootloader.c: 92: break;
  6537                           
  6538                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6539                           
  6540                           ;bootloader.c: 89: break;
  6541  00766E  0012               	return	
  6542  007670                     
  6543                           ;bootloader.c: 98: if(timeslot==0)
  6544  007670  505E               	movf	bootloader_run@timeslot,w,c
  6545  007672  A4D8               	btfss	status,2,c
  6546  007674  0012               	return	
  6547                           
  6548                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6549  007676  EC2D  F004         	call	__bootloader_program	;wreg free
  6550                           
  6551                           ;bootloader.c: 106: }
  6552                           
  6553                           ;bootloader.c: 105: break;
  6554                           
  6555                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6556                           
  6557                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6558  00767A  0012               	return	
  6559  00767C                     l2349:
  6560  00767C  0100               	movlb	0	; () banked
  6561  00767E  51BD               	movf	(_os+4)& (0+255),w,b	;volatile
  6562                           
  6563                           ; Switch size 1, requested type "space"
  6564                           ; Number of cases is 7, Range of values is 16 to 112
  6565                           ; switch strategies available:
  6566                           ; Name         Instructions Cycles
  6567                           ; simple_byte           22    12 (average)
  6568                           ;	Chosen strategy is simple_byte
  6569  007680  0A10               	xorlw	16	; case 16
  6570  007682  B4D8               	btfsc	status,2,c
  6571  007684  D7E6               	goto	l2350
  6572  007686  0A30               	xorlw	48	; case 32
  6573  007688  B4D8               	btfsc	status,2,c
  6574  00768A  D7E9               	goto	l2353
  6575  00768C  0A10               	xorlw	16	; case 48
  6576  00768E  B4D8               	btfsc	status,2,c
  6577  007690  D7EC               	goto	l2355
  6578  007692  0A70               	xorlw	112	; case 64
  6579  007694  B4D8               	btfsc	status,2,c
  6580  007696  0012               	return	
  6581  007698  0A10               	xorlw	16	; case 80
  6582  00769A  B4D8               	btfsc	status,2,c
  6583  00769C  0012               	return	
  6584  00769E  0A30               	xorlw	48	; case 96
  6585  0076A0  B4D8               	btfsc	status,2,c
  6586  0076A2  D7E6               	goto	l2358
  6587  0076A4  0A10               	xorlw	16	; case 112
  6588  0076A6  0012               	return	
  6589  0076A8                     __end_of_bootloader_run:
  6590                           	opt stack 0
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           intcon	equ	0xFF2
  6596                           intcon2	equ	0xFF1
  6597                           intcon3	equ	0xFF0
  6598                           postinc0	equ	0xFEE
  6599                           wreg	equ	0xFE8
  6600                           postdec1	equ	0xFE5
  6601                           plusw1	equ	0xFE3
  6602                           fsr1h	equ	0xFE2
  6603                           fsr1l	equ	0xFE1
  6604                           postinc2	equ	0xFDE
  6605                           plusw2	equ	0xFDB
  6606                           fsr2h	equ	0xFDA
  6607                           fsr2l	equ	0xFD9
  6608                           status	equ	0xFD8
  6609                           
  6610 ;; *************** function __bootloader_verify_file *****************
  6611 ;; Defined at:
  6612 ;;		line 182 in file "bootloader.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  root           32    8[BANK0 ] struct .
  6617 ;;  address32       4   45[BANK0 ] unsigned long 
  6618 ;;  return_value    4   41[BANK0 ] unsigned long 
  6619 ;;  rec_counter     1   40[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;Total ram usage:       49 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    7
  6636 ;; This function calls:
  6637 ;;		__bootloader_check_address
  6638 ;;		_fat_get_file_information
  6639 ;;		_fat_get_file_size
  6640 ;;		_fat_read_from_file_fast
  6641 ;;		_parseHexFileEntry
  6642 ;; This function is called by:
  6643 ;;		_bootloader_run
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text28
  6648  000F7C                     __ptext28:
  6649                           	opt stack 0
  6650  000F7C                     __bootloader_verify_file:
  6651                           	opt stack 22
  6652                           
  6653                           ;bootloader.c: 184: uint8_t rec_counter;;bootloader.c: 185: uint32_t return_value = 0;
  6654                           
  6655                           ;incstack = 0
  6656  000F7C  0E00               	movlw	0
  6657  000F7E  0100               	movlb	0	; () banked
  6658  000F80  6F89               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6659  000F82  0E00               	movlw	0
  6660  000F84  6F8A               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6661  000F86  0E00               	movlw	0
  6662  000F88  6F8B               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6663  000F8A  0E00               	movlw	0
  6664  000F8C  6F8C               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;bootloader.c: 186: uint32_t address32;;bootloader.c: 187: rootEntry_t root;;bootloader.
      +                          c: 189: if(hex_file_offset==0)
  6668  000F8E  51CF               	movf	_hex_file_offset& (0+255),w,b
  6669  000F90  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6670  000F92  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6671  000F94  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6672  000F96  A4D8               	btfss	status,2,c
  6673  000F98  D010               	goto	l2380
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;bootloader.c: 190: {;bootloader.c: 192: fat_get_file_information(file_number, &root);
  6677  000F9A  0E68               	movlw	low __bootloader_verify_file@root
  6678  000F9C  6E37               	movwf	fat_get_file_information@data,c
  6679  000F9E  0E00               	movlw	high __bootloader_verify_file@root
  6680  000FA0  6E38               	movwf	fat_get_file_information@data+1,c
  6681  000FA2  51FF               	movf	_file_number& (0+255),w,b
  6682  000FA4  ECCF  F038         	call	_fat_get_file_information
  6683                           
  6684                           ;bootloader.c: 193: fast_read_cluster = root.firstCluster;
  6685  000FA8  C082  F0F9         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6686  000FAC  C083  F0FA         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6687                           
  6688                           ;bootloader.c: 194: fast_read_cluster_number = 0;
  6689  000FB0  0E00               	movlw	0
  6690  000FB2  0100               	movlb	0	; () banked
  6691  000FB4  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6692  000FB6  0E00               	movlw	0
  6693  000FB8  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  6694  000FBA                     l2380:
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;bootloader.c: 195: };bootloader.c: 198: hex_file_size = fat_get_file_size(file_number);
  6698                           
  6699                           ; BSR set to: 0
  6700  000FBA  51FF               	movf	_file_number& (0+255),w,b
  6701  000FBC  EC09  F039         	call	_fat_get_file_size
  6702  000FC0  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
  6703  000FC4  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6704  000FC8  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6705  000FCC  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6706                           
  6707                           ;bootloader.c: 201: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6708  000FD0  0E00               	movlw	0
  6709  000FD2  0100               	movlb	0	; () banked
  6710  000FD4  6F88               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6711  000FD6                     l14734:
  6712                           
  6713                           ; BSR set to: 0
  6714  000FD6  0E0F               	movlw	15
  6715  000FD8  6588               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6716  000FDA  D001               	goto	l2381
  6717  000FDC  0012               	return	
  6718  000FDE                     l2381:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;bootloader.c: 202: {;bootloader.c: 204: if((hex_file_size-hex_file_offset)>=50)
  6722                           
  6723                           ; BSR set to: 0
  6724  000FDE  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  6725  000FE2  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6726  000FE6  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6727  000FEA  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6728  000FEE  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  6729  000FF0  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6730  000FF2  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6731  000FF4  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6732  000FF6  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  6733  000FF8  0E00               	movlw	0
  6734  000FFA  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6735  000FFC  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6736  000FFE  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6737  001000  51CB               	movf	_hex_file_size& (0+255),w,b
  6738  001002  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  6739  001004  6F64               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6740  001006  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  6741  001008  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6742  00100A  6F65               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6743  00100C  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  6744  00100E  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6745  001010  6F66               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6746  001012  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  6747  001014  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6748  001016  6F67               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6749  001018  5167               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6750  00101A  1166               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6751  00101C  1165               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6752  00101E  E104               	bnz	u11760
  6753  001020  0E32               	movlw	50
  6754  001022  5D64               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6755  001024  A0D8               	btfss	status,0,c
  6756  001026  D01F               	goto	l2383
  6757  001028                     u11760:
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;bootloader.c: 205: {;bootloader.c: 207: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6761  001028  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6762  00102C  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6763  001030  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6764  001034  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6765  001038  0E32               	movlw	50
  6766  00103A  6E3C               	movwf	fat_read_from_file_fast@length,c
  6767  00103C  0E00               	movlw	0
  6768  00103E  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  6769  001040  0E00               	movlw	0
  6770  001042  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  6771  001044  0E00               	movlw	0
  6772  001046  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  6773  001048  0E89               	movlw	low _file_buffer
  6774  00104A  6E40               	movwf	fat_read_from_file_fast@data,c
  6775  00104C  0E01               	movlw	high _file_buffer
  6776  00104E  6E41               	movwf	fat_read_from_file_fast@data+1,c
  6777  001050  0EF9               	movlw	low _fast_read_cluster
  6778  001052  6E42               	movwf	fat_read_from_file_fast@cluster,c
  6779  001054  0E00               	movlw	high _fast_read_cluster
  6780  001056  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  6781  001058  0EF7               	movlw	low _fast_read_cluster_number
  6782  00105A  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  6783  00105C  0E00               	movlw	high _fast_read_cluster_number
  6784  00105E  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6785  001060  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  6786                           
  6787                           ;bootloader.c: 208: }
  6788  001064  D034               	goto	l2384
  6789  001066                     l2383:
  6790                           
  6791                           ;bootloader.c: 209: else;bootloader.c: 210: {;bootloader.c: 212: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6792  001066  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6793  00106A  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6794  00106E  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6795  001072  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6796  001076  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  6797  00107A  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6798  00107E  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6799  001082  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6800  001086  0100               	movlb	0	; () banked
  6801  001088  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  6802  00108A  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6803  00108C  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6804  00108E  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6805  001090  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  6806  001092  0E00               	movlw	0
  6807  001094  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6808  001096  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6809  001098  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6810  00109A  51CB               	movf	_hex_file_size& (0+255),w,b
  6811  00109C  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  6812  00109E  6E3C               	movwf	fat_read_from_file_fast@length,c
  6813  0010A0  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  6814  0010A2  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6815  0010A4  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  6816  0010A6  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  6817  0010A8  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6818  0010AA  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  6819  0010AC  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  6820  0010AE  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6821  0010B0  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  6822  0010B2  0E89               	movlw	low _file_buffer
  6823  0010B4  6E40               	movwf	fat_read_from_file_fast@data,c
  6824  0010B6  0E01               	movlw	high _file_buffer
  6825  0010B8  6E41               	movwf	fat_read_from_file_fast@data+1,c
  6826  0010BA  0EF9               	movlw	low _fast_read_cluster
  6827  0010BC  6E42               	movwf	fat_read_from_file_fast@cluster,c
  6828  0010BE  0E00               	movlw	high _fast_read_cluster
  6829  0010C0  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  6830  0010C2  0EF7               	movlw	low _fast_read_cluster_number
  6831  0010C4  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  6832  0010C6  0E00               	movlw	high _fast_read_cluster_number
  6833  0010C8  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6834  0010CA  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  6835  0010CE                     l2384:
  6836                           
  6837                           ;bootloader.c: 213: };bootloader.c: 216: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6838  0010CE  0E89               	movlw	low _file_buffer
  6839  0010D0  6E0C               	movwf	parseHexFileEntry@data,c
  6840  0010D2  0E01               	movlw	high _file_buffer
  6841  0010D4  6E0D               	movwf	parseHexFileEntry@data+1,c
  6842  0010D6  0E00               	movlw	0
  6843  0010D8  6E0E               	movwf	parseHexFileEntry@offset,c
  6844  0010DA  0E00               	movlw	0
  6845  0010DC  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6846  0010DE  0E00               	movlw	0
  6847  0010E0  6E10               	movwf	parseHexFileEntry@offset+2,c
  6848  0010E2  0E00               	movlw	0
  6849  0010E4  6E11               	movwf	parseHexFileEntry@offset+3,c
  6850  0010E6  0EBB               	movlw	low _hex_file_entry
  6851  0010E8  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6852  0010EA  0E01               	movlw	high _hex_file_entry
  6853  0010EC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6854  0010EE  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6855  0010F2  C00C  F089         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  6856  0010F6  C00D  F08A         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  6857  0010FA  C00E  F08B         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  6858  0010FE  C00F  F08C         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  6859                           
  6860                           ;bootloader.c: 219: ++hex_file_entries;
  6861  001102  0101               	movlb	1	; () banked
  6862  001104  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  6863  001106  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  6864                           
  6865                           ; BSR set to: 1
  6866                           ;bootloader.c: 222: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  6867  001108  0E04               	movlw	4
  6868  00110A  19BF               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  6869  00110C  A4D8               	btfss	status,2,c
  6870  00110E  D01C               	goto	l2385
  6871                           
  6872                           ; BSR set to: 1
  6873                           ;bootloader.c: 223: {;bootloader.c: 224: extended_linear_address = hex_file_entry.data[0
      +                          ];
  6874  001110  51C0               	movf	(_hex_file_entry+5)& (0+255),w,b
  6875  001112  6F46               	movwf	_extended_linear_address& (0+255),b
  6876  001114  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  6877  001116  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  6878  001118  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;bootloader.c: 225: extended_linear_address <<= 8;
  6882  00111A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6883  00111E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6884  001122  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6885  001126  6B46               	clrf	_extended_linear_address& (0+255),b
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;bootloader.c: 226: extended_linear_address |= hex_file_entry.data[1];
  6889  001128  51C1               	movf	(_hex_file_entry+6)& (0+255),w,b
  6890  00112A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;bootloader.c: 227: extended_linear_address <<= 8;
  6894  00112C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6895  001130  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6896  001134  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6897  001138  6B46               	clrf	_extended_linear_address& (0+255),b
  6898                           
  6899                           ; BSR set to: 1
  6900                           ;bootloader.c: 228: extended_linear_address <<= 8;
  6901  00113A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  6902  00113E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  6903  001142  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  6904  001146  6B46               	clrf	_extended_linear_address& (0+255),b
  6905  001148                     l2385:
  6906                           
  6907                           ; BSR set to: 1
  6908                           ;bootloader.c: 229: };bootloader.c: 232: if(hex_file_entry.recordType==RecordTypeData)
  6909                           
  6910                           ; BSR set to: 1
  6911  001148  51BF               	movf	(_hex_file_entry+4)& (0+255),w,b
  6912  00114A  A4D8               	btfss	status,2,c
  6913  00114C  D05D               	goto	l2389
  6914                           
  6915                           ; BSR set to: 1
  6916                           ;bootloader.c: 233: {;bootloader.c: 235: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  6917  00114E  51BD               	movf	(_hex_file_entry+2)& (0+255),w,b
  6918  001150  2546               	addwf	_extended_linear_address& (0+255),w,b
  6919  001152  0100               	movlb	0	; () banked
  6920  001154  6F8D               	movwf	__bootloader_verify_file@address32& (0+255),b
  6921  001156  0101               	movlb	1	; () banked
  6922  001158  51BE               	movf	(_hex_file_entry+3)& (0+255),w,b
  6923  00115A  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6924  00115C  0100               	movlb	0	; () banked
  6925  00115E  6F8E               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  6926  001160  0E00               	movlw	0
  6927  001162  0101               	movlb	1	; () banked
  6928  001164  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6929  001166  0100               	movlb	0	; () banked
  6930  001168  6F8F               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  6931  00116A  0E00               	movlw	0
  6932  00116C  0101               	movlb	1	; () banked
  6933  00116E  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6934  001170  0100               	movlb	0	; () banked
  6935  001172  6F90               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  6936                           
  6937                           ;bootloader.c: 238: if(address32<file_minimum_address)
  6938  001174  0101               	movlb	1	; () banked
  6939  001176  514E               	movf	_file_minimum_address& (0+255),w,b
  6940  001178  0100               	movlb	0	; () banked
  6941  00117A  5D8D               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  6942  00117C  0101               	movlb	1	; () banked
  6943  00117E  514F               	movf	(_file_minimum_address+1)& (0+255),w,b
  6944  001180  0100               	movlb	0	; () banked
  6945  001182  598E               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6946  001184  0101               	movlb	1	; () banked
  6947  001186  5150               	movf	(_file_minimum_address+2)& (0+255),w,b
  6948  001188  0100               	movlb	0	; () banked
  6949  00118A  598F               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6950  00118C  0101               	movlb	1	; () banked
  6951  00118E  5151               	movf	(_file_minimum_address+3)& (0+255),w,b
  6952  001190  0100               	movlb	0	; () banked
  6953  001192  5990               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6954  001194  B0D8               	btfsc	status,0,c
  6955  001196  D008               	goto	l2387
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;bootloader.c: 239: {;bootloader.c: 240: file_minimum_address = address32;
  6959  001198  C08D  F14E         	movff	__bootloader_verify_file@address32,_file_minimum_address
  6960  00119C  C08E  F14F         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  6961  0011A0  C08F  F150         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  6962  0011A4  C090  F151         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  6963  0011A8                     l2387:
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;bootloader.c: 241: };bootloader.c: 242: if(address32>file_maximum_address)
  6967                           
  6968                           ; BSR set to: 0
  6969  0011A8  518D               	movf	__bootloader_verify_file@address32& (0+255),w,b
  6970  0011AA  0101               	movlb	1	; () banked
  6971  0011AC  5D4A               	subwf	_file_maximum_address& (0+255),w,b
  6972  0011AE  0100               	movlb	0	; () banked
  6973  0011B0  518E               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6974  0011B2  0101               	movlb	1	; () banked
  6975  0011B4  594B               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  6976  0011B6  0100               	movlb	0	; () banked
  6977  0011B8  518F               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6978  0011BA  0101               	movlb	1	; () banked
  6979  0011BC  594C               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  6980  0011BE  0100               	movlb	0	; () banked
  6981  0011C0  5190               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6982  0011C2  0101               	movlb	1	; () banked
  6983  0011C4  594D               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  6984  0011C6  B0D8               	btfsc	status,0,c
  6985  0011C8  D008               	goto	l2388
  6986                           
  6987                           ; BSR set to: 1
  6988                           ;bootloader.c: 243: {;bootloader.c: 244: file_maximum_address = address32;
  6989  0011CA  C08D  F14A         	movff	__bootloader_verify_file@address32,_file_maximum_address
  6990  0011CE  C08E  F14B         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  6991  0011D2  C08F  F14C         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  6992  0011D6  C090  F14D         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  6993  0011DA                     l2388:
  6994                           
  6995                           ; BSR set to: 1
  6996                           ;bootloader.c: 245: };bootloader.c: 248: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  6997                           
  6998                           ; BSR set to: 1
  6999  0011DA  C08D  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7000  0011DE  C08E  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7001  0011E2  C08F  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7002  0011E6  C090  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7003  0011EA  C1BB  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7004  0011EE  EC79  F02B         	call	__bootloader_check_address	;wreg free
  7005  0011F2  0AFF               	xorlw	255
  7006  0011F4  A4D8               	btfss	status,2,c
  7007  0011F6  D008               	goto	l2389
  7008                           
  7009                           ;bootloader.c: 249: {;bootloader.c: 251: last_error = ShortRecordErrorAddressRange;
  7010  0011F8  0E0B               	movlw	11
  7011  0011FA  0100               	movlb	0	; () banked
  7012  0011FC  6FDE               	movwf	_last_error& (0+255),b
  7013                           
  7014                           ;bootloader.c: 253: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7015  0011FE  0E50               	movlw	80
  7016  001200  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7017                           
  7018                           ;bootloader.c: 254: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7019  001202  0E50               	movlw	80
  7020  001204  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7021                           
  7022                           ;bootloader.c: 255: break;
  7023  001206  0012               	return	
  7024  001208                     l2389:
  7025                           
  7026                           ;bootloader.c: 256: };bootloader.c: 257: };bootloader.c: 259: if(return_value==0)
  7027                           
  7028                           ; BSR set to: 0
  7029                           
  7030                           ; BSR set to: 0
  7031  001208  0100               	movlb	0	; () banked
  7032  00120A  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7033  00120C  118A               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7034  00120E  118B               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7035  001210  118C               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7036  001212  A4D8               	btfss	status,2,c
  7037  001214  D027               	goto	l2390
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;bootloader.c: 260: {;bootloader.c: 263: total_hex_file_entries = hex_file_entries;
  7041  001216  C174  F172         	movff	_hex_file_entries,_total_hex_file_entries
  7042  00121A  C175  F173         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;bootloader.c: 264: hex_file_entries = 0;
  7046  00121E  0E00               	movlw	0
  7047  001220  0101               	movlb	1	; () banked
  7048  001222  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
  7049  001224  0E00               	movlw	0
  7050  001226  6F74               	movwf	_hex_file_entries& (0+255),b
  7051                           
  7052                           ;bootloader.c: 265: hex_file_offset = 0;
  7053  001228  0E00               	movlw	0
  7054  00122A  0100               	movlb	0	; () banked
  7055  00122C  6FCF               	movwf	_hex_file_offset& (0+255),b
  7056  00122E  0E00               	movlw	0
  7057  001230  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
  7058  001232  0E00               	movlw	0
  7059  001234  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
  7060  001236  0E00               	movlw	0
  7061  001238  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
  7062                           
  7063                           ;bootloader.c: 266: extended_linear_address = 0;
  7064  00123A  0E00               	movlw	0
  7065  00123C  0101               	movlb	1	; () banked
  7066  00123E  6F46               	movwf	_extended_linear_address& (0+255),b
  7067  001240  0E00               	movlw	0
  7068  001242  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7069  001244  0E00               	movlw	0
  7070  001246  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7071  001248  0E00               	movlw	0
  7072  00124A  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7073                           
  7074                           ;bootloader.c: 267: flash_pages_written = 0;
  7075  00124C  0E00               	movlw	0
  7076  00124E  6F71               	movwf	(_flash_pages_written+1)& (0+255),b
  7077  001250  0E00               	movlw	0
  7078  001252  6F70               	movwf	_flash_pages_written& (0+255),b
  7079                           
  7080                           ;bootloader.c: 268: start_from_byte_next = 0;
  7081  001254  0E00               	movlw	0
  7082  001256  0100               	movlb	0	; () banked
  7083  001258  6FDD               	movwf	_start_from_byte_next& (0+255),b
  7084                           
  7085                           ;bootloader.c: 270: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7086  00125A  0E40               	movlw	64
  7087  00125C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7088                           
  7089                           ;bootloader.c: 271: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7090  00125E  0E40               	movlw	64
  7091  001260  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7092                           
  7093                           ;bootloader.c: 272: break;
  7094  001262  0012               	return	
  7095  001264                     l2390:
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;bootloader.c: 274: else if(return_value>0xFFFFFFF0)
  7099                           
  7100                           ; BSR set to: 0
  7101  001264  0EF1               	movlw	241
  7102  001266  5D89               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7103  001268  0EFF               	movlw	255
  7104  00126A  598A               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7105  00126C  0EFF               	movlw	255
  7106  00126E  598B               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7107  001270  0EFF               	movlw	255
  7108  001272  598C               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7109  001274  A0D8               	btfss	status,0,c
  7110  001276  D007               	goto	l2392
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;bootloader.c: 275: {;bootloader.c: 277: last_error = return_value & 0xF;
  7114  001278  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7115  00127A  0B0F               	andlw	15
  7116  00127C  6FDE               	movwf	_last_error& (0+255),b
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;bootloader.c: 279: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7120  00127E  0E50               	movlw	80
  7121  001280  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;bootloader.c: 280: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7125  001282  0E50               	movlw	80
  7126  001284  D7ED               	goto	L1
  7127  001286                     l2392:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;bootloader.c: 283: else;bootloader.c: 284: {;bootloader.c: 286: hex_file_offset += retu
      +                          rn_value;
  7131                           
  7132                           ; BSR set to: 0
  7133  001286  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7134  001288  27CF               	addwf	_hex_file_offset& (0+255),f,b
  7135  00128A  518A               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7136  00128C  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7137  00128E  518B               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7138  001290  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7139  001292  518C               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7140  001294  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7141                           
  7142                           ; BSR set to: 0
  7143                           
  7144                           ; BSR set to: 0
  7145                           
  7146                           ; BSR set to: 0
  7147  001296  2B88               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7148  001298  D69E               	goto	l14734
  7149  00129A                     __end_of__bootloader_verify_file:
  7150                           	opt stack 0
  7151                           tblptru	equ	0xFF8
  7152                           tblptrh	equ	0xFF7
  7153                           tblptrl	equ	0xFF6
  7154                           tablat	equ	0xFF5
  7155                           intcon	equ	0xFF2
  7156                           intcon2	equ	0xFF1
  7157                           intcon3	equ	0xFF0
  7158                           postinc0	equ	0xFEE
  7159                           wreg	equ	0xFE8
  7160                           postdec1	equ	0xFE5
  7161                           plusw1	equ	0xFE3
  7162                           fsr1h	equ	0xFE2
  7163                           fsr1l	equ	0xFE1
  7164                           postinc2	equ	0xFDE
  7165                           plusw2	equ	0xFDB
  7166                           fsr2h	equ	0xFDA
  7167                           fsr2l	equ	0xFD9
  7168                           status	equ	0xFD8
  7169                           
  7170 ;; *************** function __bootloader_program *****************
  7171 ;; Defined at:
  7172 ;;		line 291 in file "bootloader.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  root           32   14[BANK0 ] struct .
  7177 ;;  address32       4   50[BANK0 ] unsigned long 
  7178 ;;  return_value    4   46[BANK0 ] unsigned long 
  7179 ;;  page_to_writ    2   57[BANK0 ] unsigned int 
  7180 ;;  cntr            2   55[BANK0 ] unsigned int 
  7181 ;;  address_with    2   12[BANK0 ] unsigned int 
  7182 ;;  entry_page      2   10[BANK0 ] unsigned int 
  7183 ;;  buffer          2    8[BANK0 ] PTR unsigned char 
  7184 ;;		 -> pageBuffer(1024), 
  7185 ;;  start_from_b    1   54[BANK0 ] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7196 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7197 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;Total ram usage:       59 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    7
  7202 ;; This function calls:
  7203 ;;		__bootloader_check_address
  7204 ;;		_fat_get_file_information
  7205 ;;		_fat_read_from_file_fast
  7206 ;;		_internalFlash_addressWithinPage
  7207 ;;		_internalFlash_erasePage
  7208 ;;		_internalFlash_getBuffer
  7209 ;;		_internalFlash_pageFromAddress
  7210 ;;		_internalFlash_readPage
  7211 ;;		_internalFlash_writePage
  7212 ;;		_parseHexFileEntry
  7213 ;; This function is called by:
  7214 ;;		_bootloader_run
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text29
  7219  00085A                     __ptext29:
  7220                           	opt stack 0
  7221  00085A                     __bootloader_program:
  7222                           	opt stack 22
  7223                           
  7224                           ;bootloader.c: 293: uint16_t cntr;;bootloader.c: 294: uint8_t* buffer;;bootloader.c: 295
      +                          : uint16_t entry_page;;bootloader.c: 296: uint16_t page_to_write = 0;
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;incstack = 0
  7228  00085A  0E00               	movlw	0
  7229  00085C  0100               	movlb	0	; () banked
  7230  00085E  6F9A               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7231  000860  0E00               	movlw	0
  7232  000862  6F99               	movwf	__bootloader_program@page_to_write& (0+255),b
  7233                           
  7234                           ;bootloader.c: 297: uint8_t start_from_byte;;bootloader.c: 298: uint32_t address32;;boot
      +                          loader.c: 299: uint32_t return_value = 0;
  7235  000864  0E00               	movlw	0
  7236  000866  6F8E               	movwf	__bootloader_program@return_value& (0+255),b
  7237  000868  0E00               	movlw	0
  7238  00086A  6F8F               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7239  00086C  0E00               	movlw	0
  7240  00086E  6F90               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7241  000870  0E00               	movlw	0
  7242  000872  6F91               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;bootloader.c: 300: uint16_t address_within_page;;bootloader.c: 301: rootEntry_t root;;b
      +                          ootloader.c: 303: if(hex_file_offset==0)
  7246  000874  51CF               	movf	_hex_file_offset& (0+255),w,b
  7247  000876  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7248  000878  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7249  00087A  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7250  00087C  A4D8               	btfss	status,2,c
  7251  00087E  D010               	goto	l2397
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;bootloader.c: 304: {;bootloader.c: 306: fat_get_file_information(file_number, &root);
  7255  000880  0E6E               	movlw	low __bootloader_program@root
  7256  000882  6E37               	movwf	fat_get_file_information@data,c
  7257  000884  0E00               	movlw	high __bootloader_program@root
  7258  000886  6E38               	movwf	fat_get_file_information@data+1,c
  7259  000888  51FF               	movf	_file_number& (0+255),w,b
  7260  00088A  ECCF  F038         	call	_fat_get_file_information
  7261                           
  7262                           ;bootloader.c: 307: fast_read_cluster = root.firstCluster;
  7263  00088E  C088  F0F9         	movff	__bootloader_program@root+26,_fast_read_cluster
  7264  000892  C089  F0FA         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7265                           
  7266                           ;bootloader.c: 308: fast_read_cluster_number = 0;
  7267  000896  0E00               	movlw	0
  7268  000898  0100               	movlb	0	; () banked
  7269  00089A  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7270  00089C  0E00               	movlw	0
  7271  00089E  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  7272  0008A0                     l2397:
  7273                           
  7274                           ;bootloader.c: 313: {;bootloader.c: 318: if((hex_file_size-hex_file_offset)>=50)
  7275                           
  7276                           ; BSR set to: 0
  7277                           
  7278                           ;bootloader.c: 309: };bootloader.c: 312: while(1)
  7279                           
  7280                           ; BSR set to: 0
  7281  0008A0  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  7282  0008A4  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  7283  0008A8  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  7284  0008AC  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  7285  0008B0  0100               	movlb	0	; () banked
  7286  0008B2  1F60               	comf	??__bootloader_program& (0+255),f,b
  7287  0008B4  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  7288  0008B6  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  7289  0008B8  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  7290  0008BA  2B60               	incf	??__bootloader_program& (0+255),f,b
  7291  0008BC  0E00               	movlw	0
  7292  0008BE  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7293  0008C0  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7294  0008C2  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7295  0008C4  51CB               	movf	_hex_file_size& (0+255),w,b
  7296  0008C6  2560               	addwf	??__bootloader_program& (0+255),w,b
  7297  0008C8  6F64               	movwf	(??__bootloader_program+4)& (0+255),b
  7298  0008CA  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  7299  0008CC  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7300  0008CE  6F65               	movwf	(??__bootloader_program+5)& (0+255),b
  7301  0008D0  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  7302  0008D2  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7303  0008D4  6F66               	movwf	(??__bootloader_program+6)& (0+255),b
  7304  0008D6  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  7305  0008D8  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7306  0008DA  6F67               	movwf	(??__bootloader_program+7)& (0+255),b
  7307  0008DC  5167               	movf	(??__bootloader_program+7)& (0+255),w,b
  7308  0008DE  1166               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7309  0008E0  1165               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7310  0008E2  E104               	bnz	u11860
  7311  0008E4  0E32               	movlw	50
  7312  0008E6  5D64               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7313  0008E8  A0D8               	btfss	status,0,c
  7314  0008EA  D01F               	goto	l2399
  7315  0008EC                     u11860:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;bootloader.c: 319: {;bootloader.c: 321: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7319  0008EC  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7320  0008F0  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7321  0008F4  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7322  0008F8  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7323  0008FC  0E32               	movlw	50
  7324  0008FE  6E3C               	movwf	fat_read_from_file_fast@length,c
  7325  000900  0E00               	movlw	0
  7326  000902  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  7327  000904  0E00               	movlw	0
  7328  000906  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  7329  000908  0E00               	movlw	0
  7330  00090A  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  7331  00090C  0E89               	movlw	low _file_buffer
  7332  00090E  6E40               	movwf	fat_read_from_file_fast@data,c
  7333  000910  0E01               	movlw	high _file_buffer
  7334  000912  6E41               	movwf	fat_read_from_file_fast@data+1,c
  7335  000914  0EF9               	movlw	low _fast_read_cluster
  7336  000916  6E42               	movwf	fat_read_from_file_fast@cluster,c
  7337  000918  0E00               	movlw	high _fast_read_cluster
  7338  00091A  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  7339  00091C  0EF7               	movlw	low _fast_read_cluster_number
  7340  00091E  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  7341  000920  0E00               	movlw	high _fast_read_cluster_number
  7342  000922  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7343  000924  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  7344                           
  7345                           ;bootloader.c: 322: }
  7346  000928  D034               	goto	l2400
  7347  00092A                     l2399:
  7348                           
  7349                           ;bootloader.c: 323: else;bootloader.c: 324: {;bootloader.c: 326: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7350  00092A  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7351  00092E  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7352  000932  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7353  000936  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7354  00093A  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  7355  00093E  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  7356  000942  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  7357  000946  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  7358  00094A  0100               	movlb	0	; () banked
  7359  00094C  1F60               	comf	??__bootloader_program& (0+255),f,b
  7360  00094E  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  7361  000950  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  7362  000952  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  7363  000954  2B60               	incf	??__bootloader_program& (0+255),f,b
  7364  000956  0E00               	movlw	0
  7365  000958  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7366  00095A  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7367  00095C  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7368  00095E  51CB               	movf	_hex_file_size& (0+255),w,b
  7369  000960  2560               	addwf	??__bootloader_program& (0+255),w,b
  7370  000962  6E3C               	movwf	fat_read_from_file_fast@length,c
  7371  000964  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  7372  000966  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7373  000968  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  7374  00096A  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  7375  00096C  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7376  00096E  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  7377  000970  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  7378  000972  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7379  000974  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  7380  000976  0E89               	movlw	low _file_buffer
  7381  000978  6E40               	movwf	fat_read_from_file_fast@data,c
  7382  00097A  0E01               	movlw	high _file_buffer
  7383  00097C  6E41               	movwf	fat_read_from_file_fast@data+1,c
  7384  00097E  0EF9               	movlw	low _fast_read_cluster
  7385  000980  6E42               	movwf	fat_read_from_file_fast@cluster,c
  7386  000982  0E00               	movlw	high _fast_read_cluster
  7387  000984  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  7388  000986  0EF7               	movlw	low _fast_read_cluster_number
  7389  000988  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  7390  00098A  0E00               	movlw	high _fast_read_cluster_number
  7391  00098C  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7392  00098E  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
  7393  000992                     l2400:
  7394                           
  7395                           ;bootloader.c: 327: };bootloader.c: 330: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7396  000992  0E89               	movlw	low _file_buffer
  7397  000994  6E0C               	movwf	parseHexFileEntry@data,c
  7398  000996  0E01               	movlw	high _file_buffer
  7399  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  7400  00099A  0E00               	movlw	0
  7401  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  7402  00099E  0E00               	movlw	0
  7403  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7404  0009A2  0E00               	movlw	0
  7405  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  7406  0009A6  0E00               	movlw	0
  7407  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  7408  0009AA  0EBB               	movlw	low _hex_file_entry
  7409  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7410  0009AE  0E01               	movlw	high _hex_file_entry
  7411  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7412  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7413  0009B6  C00C  F08E         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7414  0009BA  C00D  F08F         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7415  0009BE  C00E  F090         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7416  0009C2  C00F  F091         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7417                           
  7418                           ;bootloader.c: 333: ++hex_file_entries;
  7419  0009C6  0101               	movlb	1	; () banked
  7420  0009C8  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  7421  0009CA  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  7422                           
  7423                           ; BSR set to: 1
  7424                           ;bootloader.c: 336: if(return_value>RecordErrorNoError)
  7425  0009CC  0EF1               	movlw	241
  7426  0009CE  0100               	movlb	0	; () banked
  7427  0009D0  5D8E               	subwf	__bootloader_program@return_value& (0+255),w,b
  7428  0009D2  0EFF               	movlw	255
  7429  0009D4  598F               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7430  0009D6  0EFF               	movlw	255
  7431  0009D8  5990               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7432  0009DA  0EFF               	movlw	255
  7433  0009DC  5991               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7434  0009DE  A0D8               	btfss	status,0,c
  7435  0009E0  D005               	goto	l2401
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;bootloader.c: 337: {;bootloader.c: 339: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7439  0009E2  0E50               	movlw	80
  7440  0009E4  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7441                           
  7442                           ;bootloader.c: 340: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7443  0009E6  0E50               	movlw	80
  7444  0009E8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;bootloader.c: 341: return;
  7448  0009EA  0012               	return	
  7449  0009EC                     l2401:
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;bootloader.c: 343: else;bootloader.c: 344: {;bootloader.c: 346: hex_file_offset += retu
      +                          rn_value;
  7453                           
  7454                           ; BSR set to: 0
  7455  0009EC  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  7456  0009EE  27CF               	addwf	_hex_file_offset& (0+255),f,b
  7457  0009F0  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7458  0009F2  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7459  0009F4  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7460  0009F6  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7461  0009F8  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7462  0009FA  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;bootloader.c: 347: };bootloader.c: 349: switch(hex_file_entry.recordType)
  7466  0009FC  D0FC               	goto	l2404
  7467  0009FE                     
  7468                           ;bootloader.c: 355: extended_linear_address = hex_file_entry.data[0];
  7469                           
  7470                           ; BSR set to: 0
  7471  0009FE  0101               	movlb	1	; () banked
  7472  000A00  51C0               	movf	(_hex_file_entry+5)& (0+255),w,b
  7473  000A02  6F46               	movwf	_extended_linear_address& (0+255),b
  7474  000A04  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7475  000A06  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7476  000A08  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7477                           
  7478                           ; BSR set to: 1
  7479                           ;bootloader.c: 356: extended_linear_address <<= 8;
  7480  000A0A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7481  000A0E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7482  000A12  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7483  000A16  6B46               	clrf	_extended_linear_address& (0+255),b
  7484                           
  7485                           ; BSR set to: 1
  7486                           ;bootloader.c: 357: extended_linear_address |= hex_file_entry.data[1];
  7487  000A18  51C1               	movf	(_hex_file_entry+6)& (0+255),w,b
  7488  000A1A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;bootloader.c: 358: extended_linear_address <<= 8;
  7492  000A1C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7493  000A20  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7494  000A24  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7495  000A28  6B46               	clrf	_extended_linear_address& (0+255),b
  7496                           
  7497                           ; BSR set to: 1
  7498                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7499  000A2A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7500  000A2E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7501  000A32  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7502  000A36  6B46               	clrf	_extended_linear_address& (0+255),b
  7503                           
  7504                           ; BSR set to: 1
  7505                           ;bootloader.c: 361: break;
  7506                           
  7507                           ;bootloader.c: 360: continue;
  7508  000A38  D733               	goto	l2397
  7509  000A3A                     l2408:
  7510                           
  7511                           ; BSR set to: 1
  7512                           ;bootloader.c: 366: start_from_byte = start_from_byte_next;
  7513  000A3A  C0DD  F096         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7514                           
  7515                           ; BSR set to: 1
  7516                           ;bootloader.c: 368: start_from_byte_next = 0;
  7517  000A3E  0E00               	movlw	0
  7518  000A40  0100               	movlb	0	; () banked
  7519  000A42  6FDD               	movwf	_start_from_byte_next& (0+255),b
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;bootloader.c: 371: address32 = extended_linear_address + hex_file_entry.address;
  7523  000A44  0101               	movlb	1	; () banked
  7524  000A46  51BD               	movf	(_hex_file_entry+2)& (0+255),w,b
  7525  000A48  2546               	addwf	_extended_linear_address& (0+255),w,b
  7526  000A4A  0100               	movlb	0	; () banked
  7527  000A4C  6F92               	movwf	__bootloader_program@address32& (0+255),b
  7528  000A4E  0101               	movlb	1	; () banked
  7529  000A50  51BE               	movf	(_hex_file_entry+3)& (0+255),w,b
  7530  000A52  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7531  000A54  0100               	movlb	0	; () banked
  7532  000A56  6F93               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7533  000A58  0E00               	movlw	0
  7534  000A5A  0101               	movlb	1	; () banked
  7535  000A5C  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7536  000A5E  0100               	movlb	0	; () banked
  7537  000A60  6F94               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7538  000A62  0E00               	movlw	0
  7539  000A64  0101               	movlb	1	; () banked
  7540  000A66  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7541  000A68  0100               	movlb	0	; () banked
  7542  000A6A  6F95               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;bootloader.c: 372: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7546  000A6C  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7547  000A6E  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7548  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7549  000A72  0E00               	movlw	0
  7550  000A74  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7551  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7552  000A78  0E00               	movlw	0
  7553  000A7A  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7554  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7555  000A7E  0E00               	movlw	0
  7556  000A80  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7557  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7558  000A84  ECC3  F043         	call	_internalFlash_pageFromAddress	;wreg free
  7559  000A88  C001  F06A         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7560  000A8C  C002  F06B         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7561                           
  7562                           ;bootloader.c: 375: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7563  000A90  0100               	movlb	0	; () banked
  7564  000A92  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7565  000A94  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7566  000A96  6E01               	movwf	__bootloader_check_address@address,c
  7567  000A98  0E00               	movlw	0
  7568  000A9A  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7569  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  7570  000A9E  0E00               	movlw	0
  7571  000AA0  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7572  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  7573  000AA4  0E00               	movlw	0
  7574  000AA6  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7575  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  7576  000AAA  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7577  000AAC  0800               	sublw	0
  7578  000AAE  0101               	movlb	1	; () banked
  7579  000AB0  25BB               	addwf	_hex_file_entry& (0+255),w,b
  7580  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  7581  000AB4  EC79  F02B         	call	__bootloader_check_address	;wreg free
  7582  000AB8  0900               	iorlw	0
  7583  000ABA  A4D8               	btfss	status,2,c
  7584  000ABC  D6F1               	goto	l2397
  7585                           
  7586                           ;bootloader.c: 378: };bootloader.c: 380: if(page_to_write==0)
  7587                           
  7588                           ;bootloader.c: 376: {;bootloader.c: 377: break;
  7589  000ABE  0100               	movlb	0	; () banked
  7590  000AC0  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7591  000AC2  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7592  000AC4  A4D8               	btfss	status,2,c
  7593  000AC6  D010               	goto	l2410
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;bootloader.c: 381: {;bootloader.c: 385: page_to_write = entry_page;
  7597  000AC8  C06A  F099         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7598  000ACC  C06B  F09A         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;bootloader.c: 386: internalFlash_readPage(page_to_write);
  7602  000AD0  C099  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7603  000AD4  C09A  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7604  000AD8  ECFB  F03F         	call	_internalFlash_readPage	;wreg free
  7605                           
  7606                           ;bootloader.c: 387: buffer = internalFlash_getBuffer();
  7607  000ADC  EC89  F044         	call	_internalFlash_getBuffer	;wreg free
  7608  000AE0  C001  F068         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7609  000AE4  C002  F069         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7610  000AE8                     l2410:
  7611                           
  7612                           ;bootloader.c: 388: };bootloader.c: 390: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7613  000AE8  C096  F097         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7614  000AEC  0100               	movlb	0	; () banked
  7615  000AEE  6B98               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7616  000AF0  D05D               	goto	l2411
  7617  000AF2                     
  7618                           ; BSR set to: 0
  7619                           ;bootloader.c: 391: {;bootloader.c: 394: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7620                           
  7621                           ; BSR set to: 0
  7622  000AF2  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  7623  000AF4  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7624  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7625  000AF8  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7626  000AFA  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7627  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7628  000AFE  0E00               	movlw	0
  7629  000B00  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7630  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7631  000B04  0E00               	movlw	0
  7632  000B06  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7633  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7634  000B0A  ECC3  F043         	call	_internalFlash_pageFromAddress	;wreg free
  7635  000B0E  0100               	movlb	0	; () banked
  7636  000B10  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7637  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7638  000B14  E12A               	bnz	l14866
  7639  000B16  519A               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7640  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7641  000B1A  A4D8               	btfss	status,2,c
  7642  000B1C  D026               	goto	l2413
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;bootloader.c: 395: {;bootloader.c: 396: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7646  000B1E  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  7647  000B20  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  7648  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7649  000B24  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7650  000B26  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7651  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7652  000B2A  0E00               	movlw	0
  7653  000B2C  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7654  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7655  000B30  0E00               	movlw	0
  7656  000B32  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7657  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7658  000B36  C099  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7659  000B3A  C09A  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7660  000B3E  ECB6  F03B         	call	_internalFlash_addressWithinPage	;wreg free
  7661  000B42  C009  F06C         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7662  000B46  C00A  F06D         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7663                           
  7664                           ;bootloader.c: 397: buffer[address_within_page] = hex_file_entry.data[cntr];
  7665  000B4A  0EC0               	movlw	low (_hex_file_entry+5)
  7666  000B4C  0100               	movlb	0	; () banked
  7667  000B4E  2597               	addwf	__bootloader_program@cntr& (0+255),w,b
  7668  000B50  6ED9               	movwf	fsr2l,c
  7669  000B52  0E01               	movlw	high (_hex_file_entry+5)
  7670  000B54  2198               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7671  000B56  6EDA               	movwf	fsr2h,c
  7672  000B58  516C               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7673  000B5A  2568               	addwf	__bootloader_program@buffer& (0+255),w,b
  7674  000B5C  6EE1               	movwf	fsr1l,c
  7675  000B5E  516D               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7676  000B60  2169               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7677  000B62  6EE2               	movwf	fsr1h,c
  7678  000B64  CFDF FFE7          	movff	indf2,indf1
  7679                           
  7680                           ;bootloader.c: 398: }
  7681  000B68  D01E               	goto	l2414
  7682  000B6A                     l2413:
  7683  000B6A                     l14866:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;bootloader.c: 399: else;bootloader.c: 400: {;bootloader.c: 402: hex_file_offset -= retu
      +                          rn_value;
  7687  000B6A  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  7688  000B6C  5FCF               	subwf	_hex_file_offset& (0+255),f,b
  7689  000B6E  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7690  000B70  5BD0               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7691  000B72  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7692  000B74  5BD1               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7693  000B76  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7694  000B78  5BD2               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;bootloader.c: 403: --hex_file_entries;
  7698  000B7A  0101               	movlb	1	; () banked
  7699  000B7C  0774               	decf	_hex_file_entries& (0+255),f,b
  7700  000B7E  A0D8               	btfss	status,0,c
  7701  000B80  0775               	decf	(_hex_file_entries+1)& (0+255),f,b
  7702                           
  7703                           ; BSR set to: 1
  7704                           ;bootloader.c: 405: start_from_byte_next = cntr;
  7705  000B82  C097  F0DD         	movff	__bootloader_program@cntr,_start_from_byte_next
  7706                           
  7707                           ; BSR set to: 1
  7708                           ;bootloader.c: 407: internalFlash_erasePage(page_to_write);
  7709  000B86  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7710  000B8A  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7711  000B8E  EC64  F041         	call	_internalFlash_erasePage	;wreg free
  7712                           
  7713                           ;bootloader.c: 408: internalFlash_writePage(page_to_write);
  7714  000B92  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7715  000B96  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7716  000B9A  ECA0  F037         	call	_internalFlash_writePage	;wreg free
  7717                           
  7718                           ;bootloader.c: 409: ++flash_pages_written;
  7719  000B9E  0101               	movlb	1	; () banked
  7720  000BA0  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  7721  000BA2  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  7722                           
  7723                           ; BSR set to: 1
  7724                           ;bootloader.c: 411: return;
  7725  000BA4  0012               	return	
  7726  000BA6                     l2414:
  7727                           
  7728                           ; BSR set to: 1
  7729  000BA6  0100               	movlb	0	; () banked
  7730  000BA8  4B97               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7731  000BAA  2B98               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7732  000BAC                     l2411:
  7733                           
  7734                           ; BSR set to: 0
  7735                           
  7736                           ; BSR set to: 0
  7737  000BAC  0101               	movlb	1	; () banked
  7738  000BAE  51BB               	movf	_hex_file_entry& (0+255),w,b
  7739  000BB0  0100               	movlb	0	; () banked
  7740  000BB2  5D97               	subwf	__bootloader_program@cntr& (0+255),w,b
  7741  000BB4  0101               	movlb	1	; () banked
  7742  000BB6  51BC               	movf	(_hex_file_entry+1)& (0+255),w,b
  7743  000BB8  0100               	movlb	0	; () banked
  7744  000BBA  5998               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7745  000BBC  B0D8               	btfsc	status,0,c
  7746  000BBE  D670               	goto	l2397
  7747  000BC0  D798               	goto	l2412
  7748  000BC2                     
  7749                           ;bootloader.c: 419: if(page_to_write!=0)
  7750                           
  7751                           ; BSR set to: 0
  7752  000BC2  0100               	movlb	0	; () banked
  7753  000BC4  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7754  000BC6  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7755  000BC8  B4D8               	btfsc	status,2,c
  7756  000BCA  0012               	return	
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;bootloader.c: 420: {;bootloader.c: 422: internalFlash_erasePage(page_to_write);
  7760  000BCC  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7761  000BD0  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7762  000BD4  EC64  F041         	call	_internalFlash_erasePage	;wreg free
  7763                           
  7764                           ;bootloader.c: 423: internalFlash_writePage(page_to_write);
  7765  000BD8  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7766  000BDC  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7767  000BE0  ECA0  F037         	call	_internalFlash_writePage	;wreg free
  7768                           
  7769                           ;bootloader.c: 424: ++flash_pages_written;
  7770  000BE4  0101               	movlb	1	; () banked
  7771  000BE6  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  7772  000BE8  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  7773                           
  7774                           ; BSR set to: 1
  7775                           ;bootloader.c: 426: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7776  000BEA  0E70               	movlw	112
  7777  000BEC  0100               	movlb	0	; () banked
  7778  000BEE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;bootloader.c: 427: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7782  000BF0  0E70               	movlw	112
  7783  000BF2  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;bootloader.c: 428: };bootloader.c: 430: return;
  7787                           
  7788                           ; BSR set to: 0
  7789  000BF4  0012               	return	
  7790  000BF6                     l2404:
  7791                           
  7792                           ; BSR set to: 0
  7793                           
  7794                           ; BSR set to: 0
  7795  000BF6  0101               	movlb	1	; () banked
  7796  000BF8  51BF               	movf	(_hex_file_entry+4)& (0+255),w,b
  7797                           
  7798                           ; Switch size 1, requested type "space"
  7799                           ; Number of cases is 3, Range of values is 0 to 4
  7800                           ; switch strategies available:
  7801                           ; Name         Instructions Cycles
  7802                           ; simple_byte           10     6 (average)
  7803                           ;	Chosen strategy is simple_byte
  7804  000BFA  0A00               	xorlw	0	; case 0
  7805  000BFC  B4D8               	btfsc	status,2,c
  7806  000BFE  D71D               	goto	l2408
  7807  000C00  0A01               	xorlw	1	; case 1
  7808  000C02  B4D8               	btfsc	status,2,c
  7809  000C04  D7DE               	goto	l2416
  7810  000C06  0A05               	xorlw	5	; case 4
  7811  000C08  B4D8               	btfsc	status,2,c
  7812  000C0A  D6F9               	goto	l2405
  7813                           
  7814                           ; BSR set to: 1
  7815                           
  7816                           ; BSR set to: 1
  7817  000C0C  D649               	goto	l2397
  7818  000C0E                     __end_of__bootloader_program:
  7819                           	opt stack 0
  7820                           tblptru	equ	0xFF8
  7821                           tblptrh	equ	0xFF7
  7822                           tblptrl	equ	0xFF6
  7823                           tablat	equ	0xFF5
  7824                           intcon	equ	0xFF2
  7825                           intcon2	equ	0xFF1
  7826                           intcon3	equ	0xFF0
  7827                           postinc0	equ	0xFEE
  7828                           wreg	equ	0xFE8
  7829                           indf1	equ	0xFE7
  7830                           postdec1	equ	0xFE5
  7831                           plusw1	equ	0xFE3
  7832                           fsr1h	equ	0xFE2
  7833                           fsr1l	equ	0xFE1
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           plusw2	equ	0xFDB
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _parseHexFileEntry *****************
  7842 ;; Defined at:
  7843 ;;		line 59 in file "hex.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  data            2   11[COMRAM] PTR unsigned char 
  7846 ;;		 -> file_buffer(50), 
  7847 ;;  offset          4   13[COMRAM] unsigned long 
  7848 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  7849 ;;		 -> hex_file_entry(23), 
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  i               1   27[COMRAM] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  4   11[COMRAM] unsigned long 
  7854 ;; Registers used:
  7855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7861 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;Total ram usage:       17 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    2
  7868 ;; This function calls:
  7869 ;;		_hexCharsToUint16
  7870 ;;		_hexCharsToUint8
  7871 ;; This function is called by:
  7872 ;;		__bootloader_verify_file
  7873 ;;		__bootloader_program
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text30
  7878  000020                     __ptext30:
  7879                           	opt stack 0
  7880  000020                     _parseHexFileEntry:
  7881                           	opt stack 26
  7882                           
  7883                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7884                           
  7885                           ;incstack = 0
  7886  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7887  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7888  000024  6ED9               	movwf	fsr2l,c
  7889  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7890  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7891  00002A  6EDA               	movwf	fsr2h,c
  7892  00002C  0E3A               	movlw	58
  7893  00002E  18DE               	xorwf	postinc2,w,c
  7894  000030  B4D8               	btfsc	status,2,c
  7895  000032  D005               	goto	l2259
  7896                           
  7897                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7898  000034  680C               	setf	?_parseHexFileEntry,c
  7899  000036  680D               	setf	?_parseHexFileEntry+1,c
  7900  000038  680E               	setf	?_parseHexFileEntry+2,c
  7901  00003A  680F               	setf	?_parseHexFileEntry+3,c
  7902  00003C  0012               	return	
  7903  00003E                     l2259:
  7904                           
  7905                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  7906  00003E  0E02               	movlw	2
  7907  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  7908  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7909  000044  0E00               	movlw	0
  7910  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7911  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7912  00004A  5014               	movf	??_parseHexFileEntry,w,c
  7913  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  7914  00004E  6ED9               	movwf	fsr2l,c
  7915  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  7916  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7917  000054  6EDA               	movwf	fsr2h,c
  7918  000056  50DF               	movf	indf2,w,c
  7919  000058  6E03               	movwf	hexCharsToUint8@c2,c
  7920  00005A  0E01               	movlw	1
  7921  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  7922  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7923  000060  0E00               	movlw	0
  7924  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7925  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7926  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  7927  000068  240C               	addwf	parseHexFileEntry@data,w,c
  7928  00006A  6ED9               	movwf	fsr2l,c
  7929  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  7930  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7931  000070  6EDA               	movwf	fsr2h,c
  7932  000072  50DF               	movf	indf2,w,c
  7933  000074  ECB5  F043         	call	_hexCharsToUint8
  7934  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7935  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  7936  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7937  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7938  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  7939  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  7940                           
  7941                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  7942  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7943  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7944  000094  0E01               	movlw	1
  7945  000096  50DB               	movf	plusw2,w,c
  7946  000098  E104               	bnz	u10890
  7947  00009A  0E11               	movlw	17
  7948  00009C  5CDE               	subwf	postinc2,w,c
  7949  00009E  A0D8               	btfss	status,0,c
  7950  0000A0  D009               	goto	l2261
  7951  0000A2                     u10890:
  7952                           
  7953                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  7954  0000A2  0EFC               	movlw	252
  7955  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  7956  0000A6  0EFF               	movlw	255
  7957  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  7958  0000AA  0EFF               	movlw	255
  7959  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  7960  0000AE  0EFF               	movlw	255
  7961  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  7962  0000B2  0012               	return	
  7963  0000B4                     l2261:
  7964                           
  7965                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  7966  0000B4  0E04               	movlw	4
  7967  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  7968  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7969  0000BA  0E00               	movlw	0
  7970  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7971  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7972  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  7973  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  7974  0000C4  6ED9               	movwf	fsr2l,c
  7975  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  7976  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7977  0000CA  6EDA               	movwf	fsr2h,c
  7978  0000CC  50DF               	movf	indf2,w,c
  7979  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  7980  0000D0  0E05               	movlw	5
  7981  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  7982  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7983  0000D6  0E00               	movlw	0
  7984  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7985  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7986  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  7987  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  7988  0000E0  6ED9               	movwf	fsr2l,c
  7989  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  7990  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7991  0000E6  6EDA               	movwf	fsr2h,c
  7992  0000E8  50DF               	movf	indf2,w,c
  7993  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  7994  0000EC  0E06               	movlw	6
  7995  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  7996  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7997  0000F2  0E00               	movlw	0
  7998  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7999  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8000  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8001  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8002  0000FC  6ED9               	movwf	fsr2l,c
  8003  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8004  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8005  000102  6EDA               	movwf	fsr2h,c
  8006  000104  50DF               	movf	indf2,w,c
  8007  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8008  000108  0E03               	movlw	3
  8009  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8010  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8011  00010E  0E00               	movlw	0
  8012  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8013  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8014  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8015  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8016  000118  6ED9               	movwf	fsr2l,c
  8017  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8018  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8019  00011E  6EDA               	movwf	fsr2h,c
  8020  000120  50DF               	movf	indf2,w,c
  8021  000122  EC42  F039         	call	_hexCharsToUint16
  8022  000126  EE20 F002          	lfsr	2,2
  8023  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8024  00012C  26D9               	addwf	fsr2l,f,c
  8025  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8026  000130  22DA               	addwfc	fsr2h,f,c
  8027  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8028  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8029                           
  8030                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8031  00013A  EE20 F004          	lfsr	2,4
  8032  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8033  000140  26D9               	addwf	fsr2l,f,c
  8034  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8035  000144  22DA               	addwfc	fsr2h,f,c
  8036  000146  0E08               	movlw	8
  8037  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8038  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8039  00014C  0E00               	movlw	0
  8040  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8041  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8042  000152  5014               	movf	??_parseHexFileEntry,w,c
  8043  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8044  000156  6EE1               	movwf	fsr1l,c
  8045  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8046  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8047  00015C  6EE2               	movwf	fsr1h,c
  8048  00015E  50E7               	movf	indf1,w,c
  8049  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8050  000162  0E07               	movlw	7
  8051  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8052  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8053  000168  0E00               	movlw	0
  8054  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8055  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8056  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8057  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8058  000172  6EE1               	movwf	fsr1l,c
  8059  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8060  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8061  000178  6EE2               	movwf	fsr1h,c
  8062  00017A  50E7               	movf	indf1,w,c
  8063  00017C  ECB5  F043         	call	_hexCharsToUint8
  8064  000180  6EDF               	movwf	indf2,c
  8065                           
  8066                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8067  000182  0E00               	movlw	0
  8068  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8069  000186  D03D               	goto	l2262
  8070  000188                     
  8071                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8072  000188  501C               	movf	parseHexFileEntry@i,w,c
  8073  00018A  0D01               	mullw	1
  8074  00018C  0E05               	movlw	5
  8075  00018E  26F3               	addwf	prodl,f,c
  8076  000190  0E00               	movlw	0
  8077  000192  22F4               	addwfc	prodh,f,c
  8078  000194  50F3               	movf	prodl,w,c
  8079  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8080  000198  6ED9               	movwf	fsr2l,c
  8081  00019A  50F4               	movf	prodh,w,c
  8082  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8083  00019E  6EDA               	movwf	fsr2h,c
  8084  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8085  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8086  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8087  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8088  0001AA  0E00               	movlw	0
  8089  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8090  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8091  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8092  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8093  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8094  0001B6  0E0A               	movlw	10
  8095  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8096  0001BA  0E00               	movlw	0
  8097  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8098  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8099  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8100  0001C2  6EE1               	movwf	fsr1l,c
  8101  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8102  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8103  0001C8  6EE2               	movwf	fsr1h,c
  8104  0001CA  50E7               	movf	indf1,w,c
  8105  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8106  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8107  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8108  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8109  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8110  0001D8  0E00               	movlw	0
  8111  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8112  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8113  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8114  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8115  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8116  0001E4  0E09               	movlw	9
  8117  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8118  0001E8  0E00               	movlw	0
  8119  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8120  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8121  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8122  0001F0  6EE1               	movwf	fsr1l,c
  8123  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8124  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8125  0001F6  6EE2               	movwf	fsr1h,c
  8126  0001F8  50E7               	movf	indf1,w,c
  8127  0001FA  ECB5  F043         	call	_hexCharsToUint8
  8128  0001FE  6EDF               	movwf	indf2,c
  8129  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8130  000202                     l2262:
  8131  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8132  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8133  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8134  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8135  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8136  000210  50DE               	movf	postinc2,w,c
  8137  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8138  000214  50DE               	movf	postinc2,w,c
  8139  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8140  000218  A0D8               	btfss	status,0,c
  8141  00021A  D7B6               	goto	l2263
  8142                           
  8143                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8144  00021C  EE20 F015          	lfsr	2,21
  8145  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8146  000222  26D9               	addwf	fsr2l,f,c
  8147  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8148  000226  22DA               	addwfc	fsr2h,f,c
  8149  000228  501C               	movf	parseHexFileEntry@i,w,c
  8150  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8151  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8152  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8153  000232  0E00               	movlw	0
  8154  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8155  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8156  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8157  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8158  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8159  00023E  0E0A               	movlw	10
  8160  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8161  000242  0E00               	movlw	0
  8162  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8163  000246  5014               	movf	??_parseHexFileEntry,w,c
  8164  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8165  00024A  6EE1               	movwf	fsr1l,c
  8166  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8167  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8168  000250  6EE2               	movwf	fsr1h,c
  8169  000252  50E7               	movf	indf1,w,c
  8170  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8171  000256  501C               	movf	parseHexFileEntry@i,w,c
  8172  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8173  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8174  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8175  000260  0E00               	movlw	0
  8176  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8177  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8178  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8179  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8180  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8181  00026C  0E09               	movlw	9
  8182  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8183  000270  0E00               	movlw	0
  8184  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8185  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8186  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8187  000278  6EE1               	movwf	fsr1l,c
  8188  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8189  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8190  00027E  6EE2               	movwf	fsr1h,c
  8191  000280  50E7               	movf	indf1,w,c
  8192  000282  ECB5  F043         	call	_hexCharsToUint8
  8193  000286  6EDF               	movwf	indf2,c
  8194                           
  8195                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8196  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8197  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8198  000290  EE10 F016          	lfsr	1,22
  8199  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8200  000296  26E1               	addwf	fsr1l,f,c
  8201  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8202  00029A  22E2               	addwfc	fsr1h,f,c
  8203  00029C  CFDF FFE7          	movff	indf2,indf1
  8204                           
  8205                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8206  0002A0  EE20 F002          	lfsr	2,2
  8207  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8208  0002A6  26D9               	addwf	fsr2l,f,c
  8209  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8210  0002AA  22DA               	addwfc	fsr2h,f,c
  8211  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8212  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8213  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8214  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8215  0002BA  EE20 F016          	lfsr	2,22
  8216  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8217  0002C0  26D9               	addwf	fsr2l,f,c
  8218  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8219  0002C4  22DA               	addwfc	fsr2h,f,c
  8220  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8221  0002C8  26DF               	addwf	indf2,f,c
  8222                           
  8223                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8224  0002CA  EE20 F002          	lfsr	2,2
  8225  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8226  0002D0  26D9               	addwf	fsr2l,f,c
  8227  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8228  0002D4  22DA               	addwfc	fsr2h,f,c
  8229  0002D6  50DF               	movf	indf2,w,c
  8230  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8231  0002DA  EE20 F016          	lfsr	2,22
  8232  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8233  0002E0  26D9               	addwf	fsr2l,f,c
  8234  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8235  0002E4  22DA               	addwfc	fsr2h,f,c
  8236  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8237  0002E8  26DF               	addwf	indf2,f,c
  8238                           
  8239                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8240  0002EA  EE20 F004          	lfsr	2,4
  8241  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8242  0002F0  26D9               	addwf	fsr2l,f,c
  8243  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8244  0002F4  22DA               	addwfc	fsr2h,f,c
  8245  0002F6  50DF               	movf	indf2,w,c
  8246  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8247  0002FA  EE20 F016          	lfsr	2,22
  8248  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8249  000300  26D9               	addwf	fsr2l,f,c
  8250  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8251  000304  22DA               	addwfc	fsr2h,f,c
  8252  000306  5014               	movf	??_parseHexFileEntry,w,c
  8253  000308  26DF               	addwf	indf2,f,c
  8254                           
  8255                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8256  00030A  0E00               	movlw	0
  8257  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8258  00030E  D017               	goto	l2265
  8259  000310                     
  8260                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8261  000310  501C               	movf	parseHexFileEntry@i,w,c
  8262  000312  0D01               	mullw	1
  8263  000314  0E05               	movlw	5
  8264  000316  26F3               	addwf	prodl,f,c
  8265  000318  0E00               	movlw	0
  8266  00031A  22F4               	addwfc	prodh,f,c
  8267  00031C  50F3               	movf	prodl,w,c
  8268  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8269  000320  6ED9               	movwf	fsr2l,c
  8270  000322  50F4               	movf	prodh,w,c
  8271  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8272  000326  6EDA               	movwf	fsr2h,c
  8273  000328  50DF               	movf	indf2,w,c
  8274  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8275  00032C  EE20 F016          	lfsr	2,22
  8276  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8277  000332  26D9               	addwf	fsr2l,f,c
  8278  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8279  000336  22DA               	addwfc	fsr2h,f,c
  8280  000338  5014               	movf	??_parseHexFileEntry,w,c
  8281  00033A  26DF               	addwf	indf2,f,c
  8282  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8283  00033E                     l2265:
  8284  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8285  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8286  000346  501C               	movf	parseHexFileEntry@i,w,c
  8287  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8288  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8289  00034C  50DE               	movf	postinc2,w,c
  8290  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8291  000350  50DE               	movf	postinc2,w,c
  8292  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8293  000354  A0D8               	btfss	status,0,c
  8294  000356  D7DC               	goto	l2266
  8295                           
  8296                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8297  000358  EE20 F015          	lfsr	2,21
  8298  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8299  00035E  26D9               	addwf	fsr2l,f,c
  8300  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8301  000362  22DA               	addwfc	fsr2h,f,c
  8302  000364  50DF               	movf	indf2,w,c
  8303  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8304  000368  EE20 F016          	lfsr	2,22
  8305  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8306  00036E  26D9               	addwf	fsr2l,f,c
  8307  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8308  000372  22DA               	addwfc	fsr2h,f,c
  8309  000374  5014               	movf	??_parseHexFileEntry,w,c
  8310  000376  26DF               	addwf	indf2,f,c
  8311                           
  8312                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8313  000378  EE20 F016          	lfsr	2,22
  8314  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8315  00037E  26D9               	addwf	fsr2l,f,c
  8316  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8317  000382  22DA               	addwfc	fsr2h,f,c
  8318  000384  50DF               	movf	indf2,w,c
  8319  000386  B4D8               	btfsc	status,2,c
  8320  000388  D009               	goto	l2268
  8321                           
  8322                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8323  00038A  0EFE               	movlw	254
  8324  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8325  00038E  0EFF               	movlw	255
  8326  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8327  000392  0EFF               	movlw	255
  8328  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8329  000396  0EFF               	movlw	255
  8330  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8331  00039A  0012               	return	
  8332  00039C                     l2268:
  8333                           
  8334                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8335  00039C  EE20 F004          	lfsr	2,4
  8336  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8337  0003A2  26D9               	addwf	fsr2l,f,c
  8338  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8339  0003A6  22DA               	addwfc	fsr2h,f,c
  8340  0003A8  04DE               	decf	postinc2,w,c
  8341  0003AA  A4D8               	btfss	status,2,c
  8342  0003AC  D009               	goto	l2269
  8343                           
  8344                           ;hex.c: 110: {;hex.c: 112: return 0;
  8345  0003AE  0E00               	movlw	0
  8346  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8347  0003B2  0E00               	movlw	0
  8348  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8349  0003B6  0E00               	movlw	0
  8350  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8351  0003BA  0E00               	movlw	0
  8352  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8353                           
  8354                           ;hex.c: 113: }
  8355  0003BE  0012               	return	
  8356  0003C0                     l2269:
  8357                           
  8358                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8359  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8360  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8361  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8362  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8363  0003CA  0E00               	movlw	0
  8364  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8365  0003CE  0E0B               	movlw	11
  8366  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8367  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8368  0003D4  0E00               	movlw	0
  8369  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8370  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8371  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8372  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8373  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8374  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8375  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8376  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8377  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8378  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8379  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8380  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8381  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8382  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8383  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8384                           
  8385                           ;hex.c: 117: if (data[++offset] == ':')
  8386  0003F4  0E01               	movlw	1
  8387  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8388  0003F8  0E00               	movlw	0
  8389  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8390  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8391  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8392  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8393  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8394  000404  6ED9               	movwf	fsr2l,c
  8395  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8396  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8397  00040A  6EDA               	movwf	fsr2h,c
  8398  00040C  0E3A               	movlw	58
  8399  00040E  18DE               	xorwf	postinc2,w,c
  8400  000410  A4D8               	btfss	status,2,c
  8401  000412  D009               	goto	l2271
  8402                           
  8403                           ;hex.c: 118: {;hex.c: 119: return offset;
  8404  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8405  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8406  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8407  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8408                           
  8409                           ;hex.c: 120: }
  8410  000424  0012               	return	
  8411  000426                     l2271:
  8412                           
  8413                           ;hex.c: 121: else if (data[++offset] == ':')
  8414  000426  0E01               	movlw	1
  8415  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8416  00042A  0E00               	movlw	0
  8417  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8418  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8419  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8420  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8421  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8422  000436  6ED9               	movwf	fsr2l,c
  8423  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8424  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8425  00043C  6EDA               	movwf	fsr2h,c
  8426  00043E  0E3A               	movlw	58
  8427  000440  18DE               	xorwf	postinc2,w,c
  8428  000442  A4D8               	btfss	status,2,c
  8429  000444  D009               	goto	l2273
  8430                           
  8431                           ;hex.c: 122: {;hex.c: 123: return offset;
  8432  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8433  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8434  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8435  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8436                           
  8437                           ;hex.c: 124: }
  8438  000456  0012               	return	
  8439  000458                     l2273:
  8440                           
  8441                           ;hex.c: 125: else if (data[++offset] == ':')
  8442  000458  0E01               	movlw	1
  8443  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8444  00045C  0E00               	movlw	0
  8445  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8446  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8447  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8448  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8449  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8450  000468  6ED9               	movwf	fsr2l,c
  8451  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8452  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8453  00046E  6EDA               	movwf	fsr2h,c
  8454  000470  0E3A               	movlw	58
  8455  000472  18DE               	xorwf	postinc2,w,c
  8456  000474  A4D8               	btfss	status,2,c
  8457  000476  D009               	goto	l2275
  8458                           
  8459                           ;hex.c: 126: {;hex.c: 127: return offset;
  8460  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8461  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8462  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8463  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8464                           
  8465                           ;hex.c: 128: }
  8466  000488  0012               	return	
  8467  00048A                     l2275:
  8468                           
  8469                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8470  00048A  0EFD               	movlw	253
  8471  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8472  00048E  0EFF               	movlw	255
  8473  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8474  000492  0EFF               	movlw	255
  8475  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8476  000496  0EFF               	movlw	255
  8477  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8478  00049A  0012               	return	
  8479  00049C                     __end_of_parseHexFileEntry:
  8480                           	opt stack 0
  8481                           tblptru	equ	0xFF8
  8482                           tblptrh	equ	0xFF7
  8483                           tblptrl	equ	0xFF6
  8484                           tablat	equ	0xFF5
  8485                           prodh	equ	0xFF4
  8486                           prodl	equ	0xFF3
  8487                           intcon	equ	0xFF2
  8488                           intcon2	equ	0xFF1
  8489                           intcon3	equ	0xFF0
  8490                           postinc0	equ	0xFEE
  8491                           wreg	equ	0xFE8
  8492                           indf1	equ	0xFE7
  8493                           postdec1	equ	0xFE5
  8494                           plusw1	equ	0xFE3
  8495                           fsr1h	equ	0xFE2
  8496                           fsr1l	equ	0xFE1
  8497                           indf2	equ	0xFDF
  8498                           postinc2	equ	0xFDE
  8499                           postdec2	equ	0xFDD
  8500                           plusw2	equ	0xFDB
  8501                           fsr2h	equ	0xFDA
  8502                           fsr2l	equ	0xFD9
  8503                           status	equ	0xFD8
  8504                           
  8505 ;; *************** function _hexCharsToUint8 *****************
  8506 ;; Defined at:
  8507 ;;		line 42 in file "hex.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  c1              1    wreg     unsigned char 
  8510 ;;  c2              1    2[COMRAM] unsigned char 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  c1              1    4[COMRAM] unsigned char 
  8513 ;;  retVal          1    5[COMRAM] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      unsigned char 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;Total ram usage:        4 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    1
  8530 ;; This function calls:
  8531 ;;		_hexCharToUint8
  8532 ;; This function is called by:
  8533 ;;		_parseHexFileEntry
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text31
  8538  00876A                     __ptext31:
  8539                           	opt stack 0
  8540  00876A                     _hexCharsToUint8:
  8541                           	opt stack 26
  8542                           
  8543                           ;incstack = 0
  8544                           ;hexCharsToUint8@c1 stored from wreg
  8545  00876A  6E05               	movwf	hexCharsToUint8@c1,c
  8546                           
  8547                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8548  00876C  5005               	movf	hexCharsToUint8@c1,w,c
  8549  00876E  EC73  F042         	call	_hexCharToUint8
  8550  008772  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8551  008774  3804               	swapf	??_hexCharsToUint8,w,c
  8552  008776  0BF0               	andlw	240
  8553  008778  6E06               	movwf	hexCharsToUint8@retVal,c
  8554                           
  8555                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8556  00877A  5003               	movf	hexCharsToUint8@c2,w,c
  8557  00877C  EC73  F042         	call	_hexCharToUint8
  8558  008780  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8559                           
  8560                           ;hex.c: 46: return retVal;
  8561  008782  5006               	movf	hexCharsToUint8@retVal,w,c
  8562  008784  0012               	return	
  8563  008786                     __end_of_hexCharsToUint8:
  8564                           	opt stack 0
  8565                           tblptru	equ	0xFF8
  8566                           tblptrh	equ	0xFF7
  8567                           tblptrl	equ	0xFF6
  8568                           tablat	equ	0xFF5
  8569                           prodh	equ	0xFF4
  8570                           prodl	equ	0xFF3
  8571                           intcon	equ	0xFF2
  8572                           intcon2	equ	0xFF1
  8573                           intcon3	equ	0xFF0
  8574                           postinc0	equ	0xFEE
  8575                           wreg	equ	0xFE8
  8576                           indf1	equ	0xFE7
  8577                           postdec1	equ	0xFE5
  8578                           plusw1	equ	0xFE3
  8579                           fsr1h	equ	0xFE2
  8580                           fsr1l	equ	0xFE1
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           plusw2	equ	0xFDB
  8585                           fsr2h	equ	0xFDA
  8586                           fsr2l	equ	0xFD9
  8587                           status	equ	0xFD8
  8588                           
  8589 ;; *************** function _hexCharsToUint16 *****************
  8590 ;; Defined at:
  8591 ;;		line 49 in file "hex.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  c1              1    wreg     unsigned char 
  8594 ;;  c2              1    2[COMRAM] unsigned char 
  8595 ;;  c3              1    3[COMRAM] unsigned char 
  8596 ;;  c4              1    4[COMRAM] unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  c1              1    8[COMRAM] unsigned char 
  8599 ;;  retVal          2    9[COMRAM] unsigned int 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  2    2[COMRAM] unsigned int 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8609 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;Total ram usage:        9 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:    1
  8616 ;; This function calls:
  8617 ;;		_hexCharToUint8
  8618 ;; This function is called by:
  8619 ;;		_parseHexFileEntry
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text32
  8624  007284                     __ptext32:
  8625                           	opt stack 0
  8626  007284                     _hexCharsToUint16:
  8627                           	opt stack 26
  8628                           
  8629                           ;incstack = 0
  8630                           ;hexCharsToUint16@c1 stored from wreg
  8631  007284  6E09               	movwf	hexCharsToUint16@c1,c
  8632                           
  8633                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8634  007286  5009               	movf	hexCharsToUint16@c1,w,c
  8635  007288  EC73  F042         	call	_hexCharToUint8
  8636  00728C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8637  00728E  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8638  007290  0E0C               	movlw	12
  8639  007292                     u10355:
  8640  007292  90D8               	bcf	status,0,c
  8641  007294  3606               	rlcf	??_hexCharsToUint16,f,c
  8642  007296  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8643  007298  2EE8               	decfsz	wreg,f,c
  8644  00729A  D7FB               	goto	u10355
  8645  00729C  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8646  0072A0  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8647                           
  8648                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8649  0072A4  5003               	movf	hexCharsToUint16@c2,w,c
  8650  0072A6  EC73  F042         	call	_hexCharToUint8
  8651  0072AA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8652  0072AC  5006               	movf	??_hexCharsToUint16,w,c
  8653  0072AE  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8654  0072B0  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8655  0072B2  5007               	movf	??_hexCharsToUint16+1,w,c
  8656  0072B4  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8657  0072B6  5008               	movf	??_hexCharsToUint16+2,w,c
  8658  0072B8  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8659                           
  8660                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8661  0072BA  5004               	movf	hexCharsToUint16@c3,w,c
  8662  0072BC  EC73  F042         	call	_hexCharToUint8
  8663  0072C0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8664  0072C2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8665  0072C4  3A06               	swapf	??_hexCharsToUint16,f,c
  8666  0072C6  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8667  0072C8  0EF0               	movlw	240
  8668  0072CA  1607               	andwf	??_hexCharsToUint16+1,f,c
  8669  0072CC  5006               	movf	??_hexCharsToUint16,w,c
  8670  0072CE  0B0F               	andlw	15
  8671  0072D0  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8672  0072D2  0EF0               	movlw	240
  8673  0072D4  1606               	andwf	??_hexCharsToUint16,f,c
  8674  0072D6  5006               	movf	??_hexCharsToUint16,w,c
  8675  0072D8  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8676  0072DA  5007               	movf	??_hexCharsToUint16+1,w,c
  8677  0072DC  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8678                           
  8679                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8680  0072DE  5005               	movf	hexCharsToUint16@c4,w,c
  8681  0072E0  EC73  F042         	call	_hexCharToUint8
  8682  0072E4  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8683  0072E6  5006               	movf	??_hexCharsToUint16,w,c
  8684  0072E8  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8685                           
  8686                           ;hex.c: 55: return retVal;
  8687  0072EA  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8688  0072EE  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8689  0072F2  0012               	return	
  8690  0072F4                     __end_of_hexCharsToUint16:
  8691                           	opt stack 0
  8692                           tblptru	equ	0xFF8
  8693                           tblptrh	equ	0xFF7
  8694                           tblptrl	equ	0xFF6
  8695                           tablat	equ	0xFF5
  8696                           prodh	equ	0xFF4
  8697                           prodl	equ	0xFF3
  8698                           intcon	equ	0xFF2
  8699                           intcon2	equ	0xFF1
  8700                           intcon3	equ	0xFF0
  8701                           postinc0	equ	0xFEE
  8702                           wreg	equ	0xFE8
  8703                           indf1	equ	0xFE7
  8704                           postdec1	equ	0xFE5
  8705                           plusw1	equ	0xFE3
  8706                           fsr1h	equ	0xFE2
  8707                           fsr1l	equ	0xFE1
  8708                           indf2	equ	0xFDF
  8709                           postinc2	equ	0xFDE
  8710                           postdec2	equ	0xFDD
  8711                           plusw2	equ	0xFDB
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _hexCharToUint8 *****************
  8717 ;; Defined at:
  8718 ;;		line 11 in file "hex.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  c               1    wreg     unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  c               1    0[COMRAM] unsigned char 
  8723 ;;  ascii           1    1[COMRAM] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      unsigned char 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8737 ;;Total ram usage:        2 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; This function calls:
  8740 ;;		Nothing
  8741 ;; This function is called by:
  8742 ;;		_hexCharsToUint8
  8743 ;;		_hexCharsToUint16
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text33
  8748  0084E6                     __ptext33:
  8749                           	opt stack 0
  8750  0084E6                     _hexCharToUint8:
  8751                           	opt stack 26
  8752                           
  8753                           ;incstack = 0
  8754                           ;hexCharToUint8@c stored from wreg
  8755  0084E6  6E01               	movwf	hexCharToUint8@c,c
  8756                           
  8757                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8758  0084E8  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8759                           
  8760                           ;hex.c: 16: if (ascii >= 97)
  8761  0084EC  0E60               	movlw	96
  8762  0084EE  6402               	cpfsgt	hexCharToUint8@ascii,c
  8763  0084F0  D002               	goto	l2244
  8764                           
  8765                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8766  0084F2  0E57               	movlw	87
  8767  0084F4  D006               	goto	L3
  8768  0084F6                     l2244:
  8769                           
  8770                           ;hex.c: 21: else if (ascii >= 65)
  8771  0084F6  0E40               	movlw	64
  8772  0084F8  6402               	cpfsgt	hexCharToUint8@ascii,c
  8773  0084FA  D002               	goto	l2246
  8774                           
  8775                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8776  0084FC  0E37               	movlw	55
  8777  0084FE  D001               	goto	L3
  8778  008500                     l2246:
  8779                           
  8780                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8781  008500  0E30               	movlw	48
  8782  008502                     L3:
  8783  008502  5E02               	subwf	hexCharToUint8@ascii,f,c
  8784                           
  8785                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8786  008504  0E0F               	movlw	15
  8787  008506  6402               	cpfsgt	hexCharToUint8@ascii,c
  8788  008508  D002               	goto	l2248
  8789                           
  8790                           ;hex.c: 32: {;hex.c: 33: return 0;
  8791  00850A  0E00               	movlw	0
  8792                           
  8793                           ;hex.c: 34: }
  8794  00850C  0012               	return	
  8795  00850E                     l2248:
  8796                           
  8797                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8798  00850E  5002               	movf	hexCharToUint8@ascii,w,c
  8799  008510  0012               	return	
  8800  008512                     __end_of_hexCharToUint8:
  8801                           	opt stack 0
  8802                           tblptru	equ	0xFF8
  8803                           tblptrh	equ	0xFF7
  8804                           tblptrl	equ	0xFF6
  8805                           tablat	equ	0xFF5
  8806                           prodh	equ	0xFF4
  8807                           prodl	equ	0xFF3
  8808                           intcon	equ	0xFF2
  8809                           intcon2	equ	0xFF1
  8810                           intcon3	equ	0xFF0
  8811                           postinc0	equ	0xFEE
  8812                           wreg	equ	0xFE8
  8813                           indf1	equ	0xFE7
  8814                           postdec1	equ	0xFE5
  8815                           plusw1	equ	0xFE3
  8816                           fsr1h	equ	0xFE2
  8817                           fsr1l	equ	0xFE1
  8818                           indf2	equ	0xFDF
  8819                           postinc2	equ	0xFDE
  8820                           postdec2	equ	0xFDD
  8821                           plusw2	equ	0xFDB
  8822                           fsr2h	equ	0xFDA
  8823                           fsr2l	equ	0xFD9
  8824                           status	equ	0xFD8
  8825                           
  8826 ;; *************** function _internalFlash_writePage *****************
  8827 ;; Defined at:
  8828 ;;		line 63 in file "internal_flash.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  page            2    2[COMRAM] unsigned int 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  address         4    4[COMRAM] unsigned long 
  8833 ;;  cntr            2    8[COMRAM] unsigned int 
  8834 ;;  byte_cntr       1   11[COMRAM] unsigned char 
  8835 ;;  block_cntr      1   10[COMRAM] unsigned char 
  8836 ;;  i               1    0        unsigned char 
  8837 ;;  gie             1    0        unsigned char 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8850 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8851 ;;Total ram usage:       10 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    1
  8854 ;; This function calls:
  8855 ;;		__internalFlash_unlockAndActivate
  8856 ;; This function is called by:
  8857 ;;		__bootloader_program
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text34
  8862  006F40                     __ptext34:
  8863                           	opt stack 0
  8864  006F40                     _internalFlash_writePage:
  8865                           	opt stack 27
  8866                           
  8867                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
  8868                           
  8869                           ;incstack = 0
  8870  006F40  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
  8871  006F44  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
  8872  006F48  6A07               	clrf	internalFlash_writePage@address+2,c
  8873  006F4A  6A08               	clrf	internalFlash_writePage@address+3,c
  8874                           
  8875                           ;internal_flash.c: 74: address <<= 10;
  8876  006F4C  0E0A               	movlw	10
  8877  006F4E                     u11065:
  8878  006F4E  90D8               	bcf	status,0,c
  8879  006F50  3605               	rlcf	internalFlash_writePage@address,f,c
  8880  006F52  3606               	rlcf	internalFlash_writePage@address+1,f,c
  8881  006F54  3607               	rlcf	internalFlash_writePage@address+2,f,c
  8882  006F56  3608               	rlcf	internalFlash_writePage@address+3,f,c
  8883  006F58  2EE8               	decfsz	wreg,f,c
  8884  006F5A  D7F9               	goto	u11065
  8885                           
  8886                           ;internal_flash.c: 76: TBLPTR = address;
  8887  006F5C  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8888  006F60  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8889  006F64  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8890                           
  8891                           ;internal_flash.c: 79: cntr = 0;
  8892  006F68  0E00               	movlw	0
  8893  006F6A  6E0A               	movwf	internalFlash_writePage@cntr+1,c
  8894  006F6C  0E00               	movlw	0
  8895  006F6E  6E09               	movwf	internalFlash_writePage@cntr,c
  8896                           
  8897                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8898  006F70  0E00               	movlw	0
  8899  006F72  6E0B               	movwf	internalFlash_writePage@block_cntr,c
  8900  006F74                     l13932:
  8901  006F74  0E0F               	movlw	15
  8902  006F76  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
  8903  006F78  D001               	goto	l2496
  8904  006F7A  0012               	return	
  8905  006F7C                     l2496:
  8906                           
  8907                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  8908  006F7C  0E00               	movlw	0
  8909  006F7E  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
  8910  006F80                     l13938:
  8911  006F80  0E3F               	movlw	63
  8912  006F82  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
  8913  006F84  D001               	goto	l2498
  8914  006F86  D00D               	goto	u11090
  8915  006F88                     l2498:
  8916                           
  8917                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
  8918  006F88  0E00               	movlw	low _pageBuffer
  8919  006F8A  2409               	addwf	internalFlash_writePage@cntr,w,c
  8920  006F8C  6ED9               	movwf	fsr2l,c
  8921  006F8E  0E08               	movlw	high _pageBuffer
  8922  006F90  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
  8923  006F92  6EDA               	movwf	fsr2h,c
  8924  006F94  50DF               	movf	indf2,w,c
  8925  006F96  6EF5               	movwf	tablat,c	;volatile
  8926  006F98  000D               	tblwt		*+	;# 
  8927                           
  8928                           ;internal_flash.c: 91: ++cntr;
  8929  006F9A  4A09               	infsnz	internalFlash_writePage@cntr,f,c
  8930  006F9C  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
  8931  006F9E  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
  8932  006FA0  D7EF               	goto	l13938
  8933  006FA2                     u11090:
  8934  006FA2  000A               	tblrd		*-	;# 
  8935                           
  8936                           ;internal_flash.c: 98: EECON1 = 0x84;
  8937  006FA4  0E84               	movlw	132
  8938  006FA6  6EA6               	movwf	4006,c	;volsfr
  8939                           
  8940                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8941  006FA8  0EB5               	movlw	181
  8942  006FAA  ECCA  F042         	call	__internalFlash_unlockAndActivate
  8943                           
  8944                           ;internal_flash.c: 100: TBLPTR++;
  8945  006FAE  0E01               	movlw	1
  8946  006FB0  26F6               	addwf	tblptrl,f,c	;volatile
  8947  006FB2  0E00               	movlw	0
  8948  006FB4  22F7               	addwfc	tblptrh,f,c	;volatile
  8949  006FB6  0E00               	movlw	0
  8950  006FB8  22F8               	addwfc	tblptru,f,c	;volatile
  8951  006FBA  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
  8952  006FBC  D7DB               	goto	l13932
  8953  006FBE                     __end_of_internalFlash_writePage:
  8954                           	opt stack 0
  8955                           tblptru	equ	0xFF8
  8956                           tblptrh	equ	0xFF7
  8957                           tblptrl	equ	0xFF6
  8958                           tablat	equ	0xFF5
  8959                           prodh	equ	0xFF4
  8960                           prodl	equ	0xFF3
  8961                           intcon	equ	0xFF2
  8962                           intcon2	equ	0xFF1
  8963                           intcon3	equ	0xFF0
  8964                           postinc0	equ	0xFEE
  8965                           wreg	equ	0xFE8
  8966                           indf1	equ	0xFE7
  8967                           postdec1	equ	0xFE5
  8968                           plusw1	equ	0xFE3
  8969                           fsr1h	equ	0xFE2
  8970                           fsr1l	equ	0xFE1
  8971                           indf2	equ	0xFDF
  8972                           postinc2	equ	0xFDE
  8973                           postdec2	equ	0xFDD
  8974                           plusw2	equ	0xFDB
  8975                           fsr2h	equ	0xFDA
  8976                           fsr2l	equ	0xFD9
  8977                           status	equ	0xFD8
  8978                           
  8979 ;; *************** function _internalFlash_readPage *****************
  8980 ;; Defined at:
  8981 ;;		line 37 in file "internal_flash.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  page            2   21[COMRAM] unsigned int 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  address         4   23[COMRAM] unsigned long 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8999 ;;Total ram usage:        6 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    2
  9002 ;; This function calls:
  9003 ;;		_internalFlash_addressFromPage
  9004 ;;		_internalFlash_read
  9005 ;; This function is called by:
  9006 ;;		__bootloader_program
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           	psect	text35
  9011  007FF6                     __ptext35:
  9012                           	opt stack 0
  9013  007FF6                     _internalFlash_readPage:
  9014                           	opt stack 26
  9015                           
  9016                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9017                           
  9018                           ;incstack = 0
  9019  007FF6  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9020  007FFA  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9021  007FFE  EC46  F042         	call	_internalFlash_addressFromPage	;wreg free
  9022  008002  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9023  008006  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9024  00800A  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9025  00800E  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9026                           
  9027                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9028  008012  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9029  008016  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9030  00801A  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9031  00801E  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9032  008022  0E04               	movlw	4
  9033  008024  6E13               	movwf	internalFlash_read@data_length+1,c
  9034  008026  0E00               	movlw	0
  9035  008028  6E12               	movwf	internalFlash_read@data_length,c
  9036  00802A  0E00               	movlw	low _pageBuffer
  9037  00802C  6E14               	movwf	internalFlash_read@buffer,c
  9038  00802E  0E08               	movlw	high _pageBuffer
  9039  008030  6E15               	movwf	internalFlash_read@buffer+1,c
  9040  008032  EC2F  F041         	call	_internalFlash_read	;wreg free
  9041  008036  0012               	return		;funcret
  9042  008038                     __end_of_internalFlash_readPage:
  9043                           	opt stack 0
  9044                           tblptru	equ	0xFF8
  9045                           tblptrh	equ	0xFF7
  9046                           tblptrl	equ	0xFF6
  9047                           tablat	equ	0xFF5
  9048                           prodh	equ	0xFF4
  9049                           prodl	equ	0xFF3
  9050                           intcon	equ	0xFF2
  9051                           intcon2	equ	0xFF1
  9052                           intcon3	equ	0xFF0
  9053                           postinc0	equ	0xFEE
  9054                           wreg	equ	0xFE8
  9055                           indf1	equ	0xFE7
  9056                           postdec1	equ	0xFE5
  9057                           plusw1	equ	0xFE3
  9058                           fsr1h	equ	0xFE2
  9059                           fsr1l	equ	0xFE1
  9060                           indf2	equ	0xFDF
  9061                           postinc2	equ	0xFDE
  9062                           postdec2	equ	0xFDD
  9063                           plusw2	equ	0xFDB
  9064                           fsr2h	equ	0xFDA
  9065                           fsr2l	equ	0xFD9
  9066                           status	equ	0xFD8
  9067                           
  9068 ;; *************** function _internalFlash_read *****************
  9069 ;; Defined at:
  9070 ;;		line 144 in file "internal_flash.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  address         4   13[COMRAM] unsigned long 
  9073 ;;  data_length     2   17[COMRAM] unsigned int 
  9074 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9075 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      unsigned char 
  9080 ;; Registers used:
  9081 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9087 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9091 ;;Total ram usage:        8 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    1
  9094 ;; This function calls:
  9095 ;;		_memcpy
  9096 ;; This function is called by:
  9097 ;;		_internalFlash_readPage
  9098 ;;		__bootloader_verify_program_memory
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text36
  9103  00825E                     __ptext36:
  9104                           	opt stack 0
  9105  00825E                     _internalFlash_read:
  9106                           	opt stack 26
  9107                           
  9108                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
  9109                           
  9110                           ;incstack = 0
  9111  00825E  5011               	movf	internalFlash_read@address+3,w,c
  9112  008260  E118               	bnz	l2512
  9113  008262  280E               	incf	internalFlash_read@address,w,c
  9114  008264  0EFF               	movlw	255
  9115  008266  580F               	subwfb	internalFlash_read@address+1,w,c
  9116  008268  0E01               	movlw	1
  9117  00826A  5810               	subwfb	internalFlash_read@address+2,w,c
  9118  00826C  B0D8               	btfsc	status,0,c
  9119  00826E  0012               	return	
  9120                           
  9121                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
  9122                           
  9123                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9124  008270  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9125  008274  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9126  008278  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9127  00827C  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9128  008280  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9129  008284  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9130  008288  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9131  00828C  ECF0  F03A         	call	_memcpy	;wreg free
  9132  008290  0012               	return	
  9133  008292                     l2512:
  9134  008292  0012               	return		;funcret
  9135  008294                     __end_of_internalFlash_read:
  9136                           	opt stack 0
  9137                           tblptru	equ	0xFF8
  9138                           tblptrh	equ	0xFF7
  9139                           tblptrl	equ	0xFF6
  9140                           tablat	equ	0xFF5
  9141                           prodh	equ	0xFF4
  9142                           prodl	equ	0xFF3
  9143                           intcon	equ	0xFF2
  9144                           intcon2	equ	0xFF1
  9145                           intcon3	equ	0xFF0
  9146                           postinc0	equ	0xFEE
  9147                           wreg	equ	0xFE8
  9148                           indf1	equ	0xFE7
  9149                           postdec1	equ	0xFE5
  9150                           plusw1	equ	0xFE3
  9151                           fsr1h	equ	0xFE2
  9152                           fsr1l	equ	0xFE1
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           plusw2	equ	0xFDB
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function _internalFlash_pageFromAddress *****************
  9162 ;; Defined at:
  9163 ;;		line 308 in file "internal_flash.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  address         4    0[COMRAM] unsigned long 
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  2    0[COMRAM] unsigned int 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;Total ram usage:        5 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		__bootloader_program
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text37
  9191  008786                     __ptext37:
  9192                           	opt stack 0
  9193  008786                     _internalFlash_pageFromAddress:
  9194                           	opt stack 28
  9195                           
  9196                           ;internal_flash.c: 310: address >>= 10;
  9197                           
  9198                           ;incstack = 0
  9199  008786  0E0A               	movlw	10
  9200  008788  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9201  00878A                     u11045:
  9202  00878A  90D8               	bcf	status,0,c
  9203  00878C  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9204  00878E  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9205  008790  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9206  008792  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9207  008794  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9208  008796  D7F9               	goto	u11045
  9209                           
  9210                           ;internal_flash.c: 311: return (uint16_t) address;
  9211  008798  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9212  00879C  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9213  0087A0  0012               	return	
  9214  0087A2                     __end_of_internalFlash_pageFromAddress:
  9215                           	opt stack 0
  9216                           tblptru	equ	0xFF8
  9217                           tblptrh	equ	0xFF7
  9218                           tblptrl	equ	0xFF6
  9219                           tablat	equ	0xFF5
  9220                           prodh	equ	0xFF4
  9221                           prodl	equ	0xFF3
  9222                           intcon	equ	0xFF2
  9223                           intcon2	equ	0xFF1
  9224                           intcon3	equ	0xFF0
  9225                           postinc0	equ	0xFEE
  9226                           wreg	equ	0xFE8
  9227                           indf1	equ	0xFE7
  9228                           postdec1	equ	0xFE5
  9229                           plusw1	equ	0xFE3
  9230                           fsr1h	equ	0xFE2
  9231                           fsr1l	equ	0xFE1
  9232                           indf2	equ	0xFDF
  9233                           postinc2	equ	0xFDE
  9234                           postdec2	equ	0xFDD
  9235                           plusw2	equ	0xFDB
  9236                           fsr2h	equ	0xFDA
  9237                           fsr2l	equ	0xFD9
  9238                           status	equ	0xFD8
  9239                           
  9240 ;; *************** function _internalFlash_getBuffer *****************
  9241 ;; Defined at:
  9242 ;;		line 32 in file "internal_flash.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  2    0[COMRAM] PTR unsigned char 
  9249 ;; Registers used:
  9250 ;;		wreg, status,2, status,0
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;Total ram usage:        2 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; This function calls:
  9263 ;;		Nothing
  9264 ;; This function is called by:
  9265 ;;		__bootloader_program
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text38
  9270  008912                     __ptext38:
  9271                           	opt stack 0
  9272  008912                     _internalFlash_getBuffer:
  9273                           	opt stack 28
  9274                           
  9275                           ;internal_flash.c: 34: return pageBuffer;
  9276                           
  9277                           ;incstack = 0
  9278  008912  0E00               	movlw	low _pageBuffer
  9279  008914  6E01               	movwf	?_internalFlash_getBuffer,c
  9280  008916  0E08               	movlw	high _pageBuffer
  9281  008918  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9282  00891A  0012               	return	
  9283  00891C                     __end_of_internalFlash_getBuffer:
  9284                           	opt stack 0
  9285                           tblptru	equ	0xFF8
  9286                           tblptrh	equ	0xFF7
  9287                           tblptrl	equ	0xFF6
  9288                           tablat	equ	0xFF5
  9289                           prodh	equ	0xFF4
  9290                           prodl	equ	0xFF3
  9291                           intcon	equ	0xFF2
  9292                           intcon2	equ	0xFF1
  9293                           intcon3	equ	0xFF0
  9294                           postinc0	equ	0xFEE
  9295                           wreg	equ	0xFE8
  9296                           indf1	equ	0xFE7
  9297                           postdec1	equ	0xFE5
  9298                           plusw1	equ	0xFE3
  9299                           fsr1h	equ	0xFE2
  9300                           fsr1l	equ	0xFE1
  9301                           indf2	equ	0xFDF
  9302                           postinc2	equ	0xFDE
  9303                           postdec2	equ	0xFDD
  9304                           plusw2	equ	0xFDB
  9305                           fsr2h	equ	0xFDA
  9306                           fsr2l	equ	0xFD9
  9307                           status	equ	0xFD8
  9308                           
  9309 ;; *************** function _internalFlash_erasePage *****************
  9310 ;; Defined at:
  9311 ;;		line 44 in file "internal_flash.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  page            2    2[COMRAM] unsigned int 
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;  address         4    4[COMRAM] unsigned long 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, status,0, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;Total ram usage:        6 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    1
  9332 ;; This function calls:
  9333 ;;		__internalFlash_unlockAndActivate
  9334 ;; This function is called by:
  9335 ;;		__bootloader_program
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text39
  9340  0082C8                     __ptext39:
  9341                           	opt stack 0
  9342  0082C8                     _internalFlash_erasePage:
  9343                           	opt stack 27
  9344                           
  9345                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
  9346                           
  9347                           ;incstack = 0
  9348  0082C8  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
  9349  0082CC  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
  9350  0082D0  6A07               	clrf	internalFlash_erasePage@address+2,c
  9351  0082D2  6A08               	clrf	internalFlash_erasePage@address+3,c
  9352                           
  9353                           ;internal_flash.c: 50: address <<= 10;
  9354  0082D4  0E0A               	movlw	10
  9355  0082D6                     u11055:
  9356  0082D6  90D8               	bcf	status,0,c
  9357  0082D8  3605               	rlcf	internalFlash_erasePage@address,f,c
  9358  0082DA  3606               	rlcf	internalFlash_erasePage@address+1,f,c
  9359  0082DC  3607               	rlcf	internalFlash_erasePage@address+2,f,c
  9360  0082DE  3608               	rlcf	internalFlash_erasePage@address+3,f,c
  9361  0082E0  2EE8               	decfsz	wreg,f,c
  9362  0082E2  D7F9               	goto	u11055
  9363                           
  9364                           ;internal_flash.c: 51: TBLPTR = address;
  9365  0082E4  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9366  0082E8  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9367  0082EC  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9368                           
  9369                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
  9370  0082F0  84A6               	bsf	4006,2,c	;volsfr
  9371                           
  9372                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
  9373  0082F2  88A6               	bsf	4006,4,c	;volsfr
  9374                           
  9375                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9376  0082F4  0EB5               	movlw	181
  9377  0082F6  ECCA  F042         	call	__internalFlash_unlockAndActivate
  9378  0082FA  0012               	return		;funcret
  9379  0082FC                     __end_of_internalFlash_erasePage:
  9380                           	opt stack 0
  9381                           tblptru	equ	0xFF8
  9382                           tblptrh	equ	0xFF7
  9383                           tblptrl	equ	0xFF6
  9384                           tablat	equ	0xFF5
  9385                           prodh	equ	0xFF4
  9386                           prodl	equ	0xFF3
  9387                           intcon	equ	0xFF2
  9388                           intcon2	equ	0xFF1
  9389                           intcon3	equ	0xFF0
  9390                           postinc0	equ	0xFEE
  9391                           wreg	equ	0xFE8
  9392                           indf1	equ	0xFE7
  9393                           postdec1	equ	0xFE5
  9394                           plusw1	equ	0xFE3
  9395                           fsr1h	equ	0xFE2
  9396                           fsr1l	equ	0xFE1
  9397                           indf2	equ	0xFDF
  9398                           postinc2	equ	0xFDE
  9399                           postdec2	equ	0xFDD
  9400                           plusw2	equ	0xFDB
  9401                           fsr2h	equ	0xFDA
  9402                           fsr2l	equ	0xFD9
  9403                           status	equ	0xFD8
  9404                           
  9405 ;; *************** function __internalFlash_unlockAndActivate *****************
  9406 ;; Defined at:
  9407 ;;		line 106 in file "internal_flash.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  UnlockKey       1    wreg     unsigned char 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9412 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;Total ram usage:        2 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; This function calls:
  9429 ;;		Nothing
  9430 ;; This function is called by:
  9431 ;;		_internalFlash_erasePage
  9432 ;;		_internalFlash_writePage
  9433 ;;		_EraseBlock
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text40
  9438  008594                     __ptext40:
  9439                           	opt stack 0
  9440  008594                     __internalFlash_unlockAndActivate:
  9441                           	opt stack 27
  9442                           
  9443                           ;incstack = 0
  9444                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9445  008594  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9446                           
  9447                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9448  008596  0EB5               	movlw	181
  9449  008598  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9450  00859A  B4D8               	btfsc	status,2,c
  9451  00859C  D002               	goto	l2503
  9452                           
  9453                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
  9454  00859E  94A6               	bcf	4006,2,c	;volsfr
  9455                           
  9456                           ;internal_flash.c: 118: return;
  9457  0085A0  0012               	return	
  9458  0085A2                     l2503:
  9459                           
  9460                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
  9461  0085A2  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9462                           
  9463                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
  9464  0085A6  9EF2               	bcf	intcon,7,c	;volatile
  9465                           
  9466                           ;internal_flash.c: 123: EECON2 = 0x55;
  9467  0085A8  0E55               	movlw	85
  9468  0085AA  6EA7               	movwf	4007,c	;volsfr
  9469                           
  9470                           ;internal_flash.c: 124: EECON2 = 0xAA;
  9471  0085AC  0EAA               	movlw	170
  9472  0085AE  6EA7               	movwf	4007,c	;volsfr
  9473                           
  9474                           ;internal_flash.c: 125: EECON1bits.WR = 1;
  9475  0085B0  82A6               	bsf	4006,1,c	;volsfr
  9476                           
  9477                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
  9478  0085B2  94A6               	bcf	4006,2,c	;volsfr
  9479                           
  9480                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
  9481  0085B4  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9482  0085B6  0012               	return	
  9483                           
  9484                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
  9485  0085B8  8EF2               	bsf	intcon,7,c	;volatile
  9486  0085BA  0012               	return	
  9487  0085BC                     __end_of__internalFlash_unlockAndActivate:
  9488                           	opt stack 0
  9489                           tblptru	equ	0xFF8
  9490                           tblptrh	equ	0xFF7
  9491                           tblptrl	equ	0xFF6
  9492                           tablat	equ	0xFF5
  9493                           prodh	equ	0xFF4
  9494                           prodl	equ	0xFF3
  9495                           intcon	equ	0xFF2
  9496                           intcon2	equ	0xFF1
  9497                           intcon3	equ	0xFF0
  9498                           postinc0	equ	0xFEE
  9499                           wreg	equ	0xFE8
  9500                           indf1	equ	0xFE7
  9501                           postdec1	equ	0xFE5
  9502                           plusw1	equ	0xFE3
  9503                           fsr1h	equ	0xFE2
  9504                           fsr1l	equ	0xFE1
  9505                           indf2	equ	0xFDF
  9506                           postinc2	equ	0xFDE
  9507                           postdec2	equ	0xFDD
  9508                           plusw2	equ	0xFDB
  9509                           fsr2h	equ	0xFDA
  9510                           fsr2l	equ	0xFD9
  9511                           status	equ	0xFD8
  9512                           
  9513 ;; *************** function _internalFlash_addressWithinPage *****************
  9514 ;; Defined at:
  9515 ;;		line 322 in file "internal_flash.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  address         4    8[COMRAM] unsigned long 
  9518 ;;  page            2   12[COMRAM] unsigned int 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2    8[COMRAM] unsigned int 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2, status,0, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9530 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9532 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9533 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9534 ;;Total ram usage:       14 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    1
  9537 ;; This function calls:
  9538 ;;		_internalFlash_addressFromPage
  9539 ;; This function is called by:
  9540 ;;		__bootloader_program
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text41
  9545  00776C                     __ptext41:
  9546                           	opt stack 0
  9547  00776C                     _internalFlash_addressWithinPage:
  9548                           	opt stack 27
  9549                           
  9550                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9551                           
  9552                           ;incstack = 0
  9553  00776C  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9554  007770  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9555  007774  EC46  F042         	call	_internalFlash_addressFromPage	;wreg free
  9556  007778  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9557  00777C  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9558  007780  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9559  007784  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9560                           
  9561                           ;internal_flash.c: 326: address = address - page_start_address;
  9562  007788  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9563  00778C  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9564  007790  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9565  007794  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9566  007798  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9567  00779A  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9568  00779C  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9569  00779E  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9570  0077A0  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9571  0077A2  0E00               	movlw	0
  9572  0077A4  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9573  0077A6  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9574  0077A8  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9575  0077AA  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9576  0077AC  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9577  0077AE  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9578  0077B0  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9579  0077B2  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9580  0077B4  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9581  0077B6  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9582  0077B8  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9583  0077BA  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9584  0077BC  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9585  0077BE  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9586  0077C0  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9587                           
  9588                           ;internal_flash.c: 327: return (uint16_t) address;
  9589  0077C2  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9590  0077C6  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9591  0077CA  0012               	return	
  9592  0077CC                     __end_of_internalFlash_addressWithinPage:
  9593                           	opt stack 0
  9594                           tblptru	equ	0xFF8
  9595                           tblptrh	equ	0xFF7
  9596                           tblptrl	equ	0xFF6
  9597                           tablat	equ	0xFF5
  9598                           prodh	equ	0xFF4
  9599                           prodl	equ	0xFF3
  9600                           intcon	equ	0xFF2
  9601                           intcon2	equ	0xFF1
  9602                           intcon3	equ	0xFF0
  9603                           postinc0	equ	0xFEE
  9604                           wreg	equ	0xFE8
  9605                           indf1	equ	0xFE7
  9606                           postdec1	equ	0xFE5
  9607                           plusw1	equ	0xFE3
  9608                           fsr1h	equ	0xFE2
  9609                           fsr1l	equ	0xFE1
  9610                           indf2	equ	0xFDF
  9611                           postinc2	equ	0xFDE
  9612                           postdec2	equ	0xFDD
  9613                           plusw2	equ	0xFDB
  9614                           fsr2h	equ	0xFDA
  9615                           fsr2l	equ	0xFD9
  9616                           status	equ	0xFD8
  9617                           
  9618 ;; *************** function _internalFlash_addressFromPage *****************
  9619 ;; Defined at:
  9620 ;;		line 314 in file "internal_flash.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  page            2    0[COMRAM] unsigned int 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;  address         4    4[COMRAM] unsigned long 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  4    0[COMRAM] unsigned long 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;Total ram usage:        8 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_internalFlash_readPage
  9644 ;;		_internalFlash_addressWithinPage
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text42
  9649  00848C                     __ptext42:
  9650                           	opt stack 0
  9651  00848C                     _internalFlash_addressFromPage:
  9652                           	opt stack 27
  9653                           
  9654                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
  9655                           
  9656                           ;incstack = 0
  9657  00848C  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9658  008490  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9659  008494  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9660  008496  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9661                           
  9662                           ;internal_flash.c: 318: address <<= 10;
  9663  008498  0E0A               	movlw	10
  9664  00849A                     u10375:
  9665  00849A  90D8               	bcf	status,0,c
  9666  00849C  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9667  00849E  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9668  0084A0  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9669  0084A2  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9670  0084A4  2EE8               	decfsz	wreg,f,c
  9671  0084A6  D7F9               	goto	u10375
  9672                           
  9673                           ;internal_flash.c: 319: return address;
  9674  0084A8  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9675  0084AC  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9676  0084B0  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9677  0084B4  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9678  0084B8  0012               	return	
  9679  0084BA                     __end_of_internalFlash_addressFromPage:
  9680                           	opt stack 0
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           intcon2	equ	0xFF1
  9689                           intcon3	equ	0xFF0
  9690                           postinc0	equ	0xFEE
  9691                           wreg	equ	0xFE8
  9692                           indf1	equ	0xFE7
  9693                           postdec1	equ	0xFE5
  9694                           plusw1	equ	0xFE3
  9695                           fsr1h	equ	0xFE2
  9696                           fsr1l	equ	0xFE1
  9697                           indf2	equ	0xFDF
  9698                           postinc2	equ	0xFDE
  9699                           postdec2	equ	0xFDD
  9700                           plusw2	equ	0xFDB
  9701                           fsr2h	equ	0xFDA
  9702                           fsr2l	equ	0xFD9
  9703                           status	equ	0xFD8
  9704                           
  9705 ;; *************** function __bootloader_check_address *****************
  9706 ;; Defined at:
  9707 ;;		line 109 in file "bootloader.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  address         4    0[COMRAM] unsigned long 
  9710 ;;  dataLength      1    4[COMRAM] unsigned char 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  cntr            1   11[COMRAM] unsigned char 
  9713 ;;  byte_status     1   10[COMRAM] enum E6951
  9714 ;;  worst_case      1    9[COMRAM] enum E6951
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      enum E6951
  9717 ;; Registers used:
  9718 ;;		wreg, status,2, status,0
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9724 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9725 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9727 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9728 ;;Total ram usage:       12 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; This function calls:
  9731 ;;		Nothing
  9732 ;; This function is called by:
  9733 ;;		__bootloader_verify_file
  9734 ;;		__bootloader_program
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text43
  9739  0056F2                     __ptext43:
  9740                           	opt stack 0
  9741  0056F2                     __bootloader_check_address:
  9742                           	opt stack 28
  9743                           
  9744                           ;bootloader.c: 111: addressCheckResult_t byte_status;;bootloader.c: 112: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 113: uint8_t cntr;;bootloader.c: 115: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
  9745                           
  9746                           ;incstack = 0
  9747  0056F2  0E00               	movlw	0
  9748  0056F4  6E0A               	movwf	__bootloader_check_address@worst_case,c
  9749                           
  9750                           ;bootloader.c: 118: for(cntr=0; cntr<dataLength; ++cntr)
  9751  0056F6  0E00               	movlw	0
  9752  0056F8  6E0C               	movwf	__bootloader_check_address@cntr,c
  9753  0056FA  D062               	goto	l2363
  9754  0056FC                     
  9755                           ;bootloader.c: 119: {;bootloader.c: 121: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
  9756  0056FC  500C               	movf	__bootloader_check_address@cntr,w,c
  9757  0056FE  2401               	addwf	__bootloader_check_address@address,w,c
  9758  005700  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9759  005702  0E00               	movlw	0
  9760  005704  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9761  005706  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9762  005708  0E00               	movlw	0
  9763  00570A  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9764  00570C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9765  00570E  0E00               	movlw	0
  9766  005710  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9767  005712  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9768  005714  5009               	movf	??__bootloader_check_address+3,w,c
  9769  005716  1008               	iorwf	??__bootloader_check_address+2,w,c
  9770  005718  E104               	bnz	u10970
  9771  00571A  0E90               	movlw	144
  9772  00571C  5C07               	subwf	??__bootloader_check_address+1,w,c
  9773  00571E  A0D8               	btfss	status,0,c
  9774  005720  D018               	goto	l2365
  9775  005722                     u10970:
  9776  005722  500C               	movf	__bootloader_check_address@cntr,w,c
  9777  005724  2401               	addwf	__bootloader_check_address@address,w,c
  9778  005726  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9779  005728  0E00               	movlw	0
  9780  00572A  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9781  00572C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9782  00572E  0E00               	movlw	0
  9783  005730  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9784  005732  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9785  005734  0E00               	movlw	0
  9786  005736  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9787  005738  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9788  00573A  5009               	movf	??__bootloader_check_address+3,w,c
  9789  00573C  E10A               	bnz	l13864
  9790  00573E  0EF8               	movlw	248
  9791  005740  5C06               	subwf	??__bootloader_check_address,w,c
  9792  005742  0EFF               	movlw	255
  9793  005744  5807               	subwfb	??__bootloader_check_address+1,w,c
  9794  005746  0E01               	movlw	1
  9795  005748  5808               	subwfb	??__bootloader_check_address+2,w,c
  9796  00574A  B0D8               	btfsc	status,0,c
  9797  00574C  D002               	goto	l2365
  9798                           
  9799                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_OK;
  9800  00574E  0E00               	movlw	0
  9801  005750  D029               	goto	L4
  9802  005752                     l2365:
  9803  005752                     l13864:
  9804                           
  9805                           ;bootloader.c: 127: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
  9806  005752  500C               	movf	__bootloader_check_address@cntr,w,c
  9807  005754  2401               	addwf	__bootloader_check_address@address,w,c
  9808  005756  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9809  005758  0E00               	movlw	0
  9810  00575A  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9811  00575C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9812  00575E  0E00               	movlw	0
  9813  005760  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9814  005762  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9815  005764  0E00               	movlw	0
  9816  005766  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9817  005768  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9818  00576A  5009               	movf	??__bootloader_check_address+3,w,c
  9819  00576C  E108               	bnz	u10990
  9820  00576E  0EF8               	movlw	248
  9821  005770  5C06               	subwf	??__bootloader_check_address,w,c
  9822  005772  0EFF               	movlw	255
  9823  005774  5807               	subwfb	??__bootloader_check_address+1,w,c
  9824  005776  0E01               	movlw	1
  9825  005778  5808               	subwfb	??__bootloader_check_address+2,w,c
  9826  00577A  A0D8               	btfss	status,0,c
  9827  00577C  D015               	goto	l2367
  9828  00577E                     u10990:
  9829  00577E  500C               	movf	__bootloader_check_address@cntr,w,c
  9830  005780  2401               	addwf	__bootloader_check_address@address,w,c
  9831  005782  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9832  005784  0E00               	movlw	0
  9833  005786  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9834  005788  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9835  00578A  0E00               	movlw	0
  9836  00578C  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9837  00578E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9838  005790  0E00               	movlw	0
  9839  005792  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9840  005794  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9841  005796  5009               	movf	??__bootloader_check_address+3,w,c
  9842  005798  E107               	bnz	l2367
  9843  00579A  0E02               	movlw	2
  9844  00579C  5C08               	subwf	??__bootloader_check_address+2,w,c
  9845  00579E  B0D8               	btfsc	status,0,c
  9846  0057A0  D003               	goto	l2367
  9847                           
  9848                           ;bootloader.c: 128: {;bootloader.c: 129: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
  9849  0057A2  0E01               	movlw	1
  9850  0057A4                     L4:
  9851  0057A4  6E0B               	movwf	__bootloader_check_address@byte_status,c
  9852                           
  9853                           ;bootloader.c: 130: }
  9854  0057A6  D001               	goto	l2368
  9855  0057A8                     l2367:
  9856                           
  9857                           ;bootloader.c: 131: else;bootloader.c: 132: {;bootloader.c: 133: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
  9858  0057A8  680B               	setf	__bootloader_check_address@byte_status,c
  9859  0057AA                     l2368:
  9860                           
  9861                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
  9862  0057AA  280B               	incf	__bootloader_check_address@byte_status,w,c
  9863  0057AC  A4D8               	btfss	status,2,c
  9864  0057AE  D002               	goto	l2369
  9865                           
  9866                           ;bootloader.c: 138: {;bootloader.c: 139: return ADDRESS_CHECK_RESULT_ERROR;
  9867  0057B0  0EFF               	movlw	255
  9868  0057B2  0012               	return	
  9869  0057B4                     l2369:
  9870                           
  9871                           ;bootloader.c: 140: };bootloader.c: 143: if(byte_status > worst_case)
  9872  0057B4  500B               	movf	__bootloader_check_address@byte_status,w,c
  9873  0057B6  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
  9874  0057B8  A0D8               	btfss	status,0,c
  9875                           
  9876                           ;bootloader.c: 144: {;bootloader.c: 145: worst_case = byte_status;
  9877  0057BA  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
  9878  0057BE  2A0C               	incf	__bootloader_check_address@cntr,f,c
  9879  0057C0                     l2363:
  9880  0057C0  5005               	movf	__bootloader_check_address@dataLength,w,c
  9881  0057C2  5C0C               	subwf	__bootloader_check_address@cntr,w,c
  9882  0057C4  A0D8               	btfss	status,0,c
  9883  0057C6  D79A               	goto	l2364
  9884                           
  9885                           ;bootloader.c: 146: };bootloader.c: 147: };bootloader.c: 149: return worst_case;
  9886  0057C8  500A               	movf	__bootloader_check_address@worst_case,w,c
  9887  0057CA  0012               	return	
  9888  0057CC                     __end_of__bootloader_check_address:
  9889                           	opt stack 0
  9890                           tblptru	equ	0xFF8
  9891                           tblptrh	equ	0xFF7
  9892                           tblptrl	equ	0xFF6
  9893                           tablat	equ	0xFF5
  9894                           prodh	equ	0xFF4
  9895                           prodl	equ	0xFF3
  9896                           intcon	equ	0xFF2
  9897                           intcon2	equ	0xFF1
  9898                           intcon3	equ	0xFF0
  9899                           postinc0	equ	0xFEE
  9900                           wreg	equ	0xFE8
  9901                           indf1	equ	0xFE7
  9902                           postdec1	equ	0xFE5
  9903                           plusw1	equ	0xFE3
  9904                           fsr1h	equ	0xFE2
  9905                           fsr1l	equ	0xFE1
  9906                           indf2	equ	0xFDF
  9907                           postinc2	equ	0xFDE
  9908                           postdec2	equ	0xFDD
  9909                           plusw2	equ	0xFDB
  9910                           fsr2h	equ	0xFDA
  9911                           fsr2l	equ	0xFD9
  9912                           status	equ	0xFD8
  9913                           
  9914 ;; *************** function __bootloader_find_file *****************
  9915 ;; Defined at:
  9916 ;;		line 152 in file "bootloader.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;		None
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9934 ;;Total ram usage:        0 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    6
  9937 ;; This function calls:
  9938 ;;		_fat_find_file
  9939 ;;		_fat_get_file_size
  9940 ;; This function is called by:
  9941 ;;		_bootloader_run
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text44
  9946  00659C                     __ptext44:
  9947                           	opt stack 0
  9948  00659C                     __bootloader_find_file:
  9949                           	opt stack 23
  9950                           
  9951                           ;bootloader.c: 155: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
  9952                           
  9953                           ;incstack = 0
  9954  00659C  0EB7               	movlw	low _bootloader_filename
  9955  00659E  6E30               	movwf	fat_find_file@name,c
  9956  0065A0  0E8F               	movlw	high _bootloader_filename
  9957  0065A2  6E31               	movwf	fat_find_file@name+1,c
  9958  0065A4  0EC8               	movlw	low _bootloader_extension
  9959  0065A6  6E32               	movwf	fat_find_file@extension,c
  9960  0065A8  0E8F               	movlw	high _bootloader_extension
  9961  0065AA  6E33               	movwf	fat_find_file@extension+1,c
  9962  0065AC  EC74  F02F         	call	_fat_find_file	;wreg free
  9963  0065B0  0100               	movlb	0	; () banked
  9964  0065B2  6FFF               	movwf	_file_number& (0+255),b
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;bootloader.c: 158: if(file_number!=0xFF)
  9968  0065B4  29FF               	incf	_file_number& (0+255),w,b
  9969  0065B6  B4D8               	btfsc	status,2,c
  9970  0065B8  D034               	goto	l2375
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;bootloader.c: 159: {;bootloader.c: 161: hex_file_size = fat_get_file_size(file_number);
  9974  0065BA  51FF               	movf	_file_number& (0+255),w,b
  9975  0065BC  EC09  F039         	call	_fat_get_file_size
  9976  0065C0  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
  9977  0065C4  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
  9978  0065C8  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
  9979  0065CC  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
  9980                           
  9981                           ;bootloader.c: 163: hex_file_entries = 0;
  9982  0065D0  0E00               	movlw	0
  9983  0065D2  0101               	movlb	1	; () banked
  9984  0065D4  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
  9985  0065D6  0E00               	movlw	0
  9986  0065D8  6F74               	movwf	_hex_file_entries& (0+255),b
  9987                           
  9988                           ; BSR set to: 1
  9989                           ;bootloader.c: 164: hex_file_offset = 0;
  9990  0065DA  0E00               	movlw	0
  9991  0065DC  0100               	movlb	0	; () banked
  9992  0065DE  6FCF               	movwf	_hex_file_offset& (0+255),b
  9993  0065E0  0E00               	movlw	0
  9994  0065E2  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
  9995  0065E4  0E00               	movlw	0
  9996  0065E6  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
  9997  0065E8  0E00               	movlw	0
  9998  0065EA  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;bootloader.c: 165: file_minimum_address = 0xFFFFFFFF;
 10002  0065EC  0101               	movlb	1	; () banked
 10003  0065EE  694E               	setf	_file_minimum_address& (0+255),b
 10004  0065F0  694F               	setf	(_file_minimum_address+1)& (0+255),b
 10005  0065F2  6950               	setf	(_file_minimum_address+2)& (0+255),b
 10006  0065F4  6951               	setf	(_file_minimum_address+3)& (0+255),b
 10007                           
 10008                           ; BSR set to: 1
 10009                           ;bootloader.c: 166: file_maximum_address = 0x00000000;
 10010  0065F6  0E00               	movlw	0
 10011  0065F8  6F4A               	movwf	_file_maximum_address& (0+255),b
 10012  0065FA  0E00               	movlw	0
 10013  0065FC  6F4B               	movwf	(_file_maximum_address+1)& (0+255),b
 10014  0065FE  0E00               	movlw	0
 10015  006600  6F4C               	movwf	(_file_maximum_address+2)& (0+255),b
 10016  006602  0E00               	movlw	0
 10017  006604  6F4D               	movwf	(_file_maximum_address+3)& (0+255),b
 10018                           
 10019                           ; BSR set to: 1
 10020                           ;bootloader.c: 167: extended_linear_address = 0x00000000;
 10021  006606  0E00               	movlw	0
 10022  006608  6F46               	movwf	_extended_linear_address& (0+255),b
 10023  00660A  0E00               	movlw	0
 10024  00660C  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10025  00660E  0E00               	movlw	0
 10026  006610  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10027  006612  0E00               	movlw	0
 10028  006614  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10029                           
 10030                           ; BSR set to: 1
 10031                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10032  006616  0E20               	movlw	32
 10033  006618  0100               	movlb	0	; () banked
 10034  00661A  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10038  00661C  0E20               	movlw	32
 10039  00661E  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 10040                           
 10041                           ;bootloader.c: 170: }
 10042  006620  0012               	return	
 10043  006622                     l2375:
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;bootloader.c: 172: else;bootloader.c: 173: {;bootloader.c: 175: hex_file_size = 0;
 10047                           
 10048                           ; BSR set to: 0
 10049  006622  0E00               	movlw	0
 10050  006624  6FCB               	movwf	_hex_file_size& (0+255),b
 10051  006626  0E00               	movlw	0
 10052  006628  6FCC               	movwf	(_hex_file_size+1)& (0+255),b
 10053  00662A  0E00               	movlw	0
 10054  00662C  6FCD               	movwf	(_hex_file_size+2)& (0+255),b
 10055  00662E  0E00               	movlw	0
 10056  006630  6FCE               	movwf	(_hex_file_size+3)& (0+255),b
 10057                           
 10058                           ;bootloader.c: 177: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10059  006632  0E10               	movlw	16
 10060  006634  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 10061                           
 10062                           ;bootloader.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10063  006636  0E10               	movlw	16
 10064  006638  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 10065  00663A  0012               	return	
 10066  00663C                     __end_of__bootloader_find_file:
 10067                           	opt stack 0
 10068                           tblptru	equ	0xFF8
 10069                           tblptrh	equ	0xFF7
 10070                           tblptrl	equ	0xFF6
 10071                           tablat	equ	0xFF5
 10072                           prodh	equ	0xFF4
 10073                           prodl	equ	0xFF3
 10074                           intcon	equ	0xFF2
 10075                           intcon2	equ	0xFF1
 10076                           intcon3	equ	0xFF0
 10077                           postinc0	equ	0xFEE
 10078                           wreg	equ	0xFE8
 10079                           indf1	equ	0xFE7
 10080                           postdec1	equ	0xFE5
 10081                           plusw1	equ	0xFE3
 10082                           fsr1h	equ	0xFE2
 10083                           fsr1l	equ	0xFE1
 10084                           indf2	equ	0xFDF
 10085                           postinc2	equ	0xFDE
 10086                           postdec2	equ	0xFDD
 10087                           plusw2	equ	0xFDB
 10088                           fsr2h	equ	0xFDA
 10089                           fsr2l	equ	0xFD9
 10090                           status	equ	0xFD8
 10091                           
 10092 ;; *************** function __normal_mode *****************
 10093 ;; Defined at:
 10094 ;;		line 208 in file "main.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;		None
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1    wreg      unsigned char 
 10101 ;; Registers used:
 10102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;Total ram usage:        0 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; Hardware stack levels required when called:    3
 10115 ;; This function calls:
 10116 ;;		_i2c_eeprom_readByte
 10117 ;;		_i2c_eeprom_writeByte
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text45
 10124  00782C                     __ptext45:
 10125                           	opt stack 0
 10126  00782C                     __normal_mode:
 10127                           	opt stack 27
 10128                           
 10129                           ;main.c: 210: if(i2c_eeprom_readByte(0x100)==0x94)
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;incstack = 0
 10133  00782C  0E01               	movlw	1
 10134  00782E  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10135  007830  0E00               	movlw	0
 10136  007832  6E12               	movwf	i2c_eeprom_readByte@address,c
 10137  007834  ECFB  F03E         	call	_i2c_eeprom_readByte	;wreg free
 10138  007838  0A94               	xorlw	148
 10139  00783A  A4D8               	btfss	status,2,c
 10140  00783C  D00A               	goto	l914
 10141                           
 10142                           ;main.c: 211: {;main.c: 213: i2c_eeprom_writeByte(0x100, 0x00);
 10143  00783E  0E01               	movlw	1
 10144  007840  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10145  007842  0E00               	movlw	0
 10146  007844  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10147  007846  0E00               	movlw	0
 10148  007848  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10149  00784A  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
 10150                           
 10151                           ;main.c: 215: return 0;
 10152  00784E  0E00               	movlw	0
 10153  007850  0012               	return	
 10154  007852                     l914:
 10155                           
 10156                           ;main.c: 217: else if(i2c_eeprom_readByte(0x100)==0x78)
 10157  007852  0E01               	movlw	1
 10158  007854  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10159  007856  0E00               	movlw	0
 10160  007858  6E12               	movwf	i2c_eeprom_readByte@address,c
 10161  00785A  ECFB  F03E         	call	_i2c_eeprom_readByte	;wreg free
 10162  00785E  0A78               	xorlw	120
 10163  007860  A4D8               	btfss	status,2,c
 10164  007862  D00A               	goto	l917
 10165                           
 10166                           ;main.c: 218: {;main.c: 220: i2c_eeprom_writeByte(0x100, 0x00);
 10167  007864  0E01               	movlw	1
 10168  007866  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10169  007868  0E00               	movlw	0
 10170  00786A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10171  00786C  0E00               	movlw	0
 10172  00786E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10173  007870  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
 10174                           
 10175                           ;main.c: 222: return 1;
 10176  007874  0E01               	movlw	1
 10177  007876  0012               	return	
 10178  007878                     l917:
 10179                           
 10180                           ;main.c: 223: };main.c: 229: LATAbits.LA0 = 1;
 10181  007878  8089               	bsf	3977,0,c	;volatile
 10182                           
 10183                           ;main.c: 230: TRISAbits.TRISA0 = 0;
 10184  00787A  9092               	bcf	3986,0,c	;volatile
 10185                           
 10186                           ;main.c: 231: TRISAbits.TRISA0 = 1;
 10187  00787C  8092               	bsf	3986,0,c	;volatile
 10188                           
 10189                           ;main.c: 233: if(!PORTAbits.RA0)
 10190  00787E  B080               	btfsc	3968,0,c	;volatile
 10191  007880  D002               	goto	l918
 10192                           
 10193                           ;main.c: 234: {;main.c: 236: return 0;
 10194  007882  0E00               	movlw	0
 10195                           
 10196                           ;main.c: 237: }
 10197  007884  0012               	return	
 10198  007886                     l918:
 10199                           
 10200                           ;main.c: 238: else;main.c: 239: {;main.c: 241: return 1;
 10201  007886  0E01               	movlw	1
 10202  007888  0012               	return	
 10203  00788A                     __end_of__normal_mode:
 10204                           	opt stack 0
 10205                           tblptru	equ	0xFF8
 10206                           tblptrh	equ	0xFF7
 10207                           tblptrl	equ	0xFF6
 10208                           tablat	equ	0xFF5
 10209                           prodh	equ	0xFF4
 10210                           prodl	equ	0xFF3
 10211                           intcon	equ	0xFF2
 10212                           intcon2	equ	0xFF1
 10213                           intcon3	equ	0xFF0
 10214                           postinc0	equ	0xFEE
 10215                           wreg	equ	0xFE8
 10216                           indf1	equ	0xFE7
 10217                           postdec1	equ	0xFE5
 10218                           plusw1	equ	0xFE3
 10219                           fsr1h	equ	0xFE2
 10220                           fsr1l	equ	0xFE1
 10221                           indf2	equ	0xFDF
 10222                           postinc2	equ	0xFDE
 10223                           postdec2	equ	0xFDD
 10224                           plusw2	equ	0xFDB
 10225                           fsr2h	equ	0xFDA
 10226                           fsr2l	equ	0xFD9
 10227                           status	equ	0xFD8
 10228                           
 10229 ;; *************** function _i2c_eeprom_readByte *****************
 10230 ;; Defined at:
 10231 ;;		line 367 in file "i2c.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;  address         2   17[COMRAM] unsigned int 
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;  addr            1   23[COMRAM] unsigned char 
 10236 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  1    wreg      unsigned char 
 10239 ;; Registers used:
 10240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10248 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10249 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10250 ;;Total ram usage:        7 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    2
 10253 ;; This function calls:
 10254 ;;		__i2c_read
 10255 ;;		__i2c_write
 10256 ;;		_i2c_set_frequency
 10257 ;; This function is called by:
 10258 ;;		__normal_mode
 10259 ;; This function uses a non-reentrant model
 10260 ;;
 10261                           
 10262                           	psect	text46
 10263  007DF6                     __ptext46:
 10264                           	opt stack 0
 10265  007DF6                     _i2c_eeprom_readByte:
 10266                           	opt stack 27
 10267                           
 10268                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10269                           
 10270                           ;incstack = 0
 10271  007DF6  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10272  007DFA  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10273  007DFE  0E07               	movlw	7
 10274  007E00  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10275  007E02                     u11625:
 10276  007E02  90D8               	bcf	status,0,c
 10277  007E04  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10278  007E06  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10279  007E08  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10280  007E0A  D7FB               	goto	u11625
 10281  007E0C  5014               	movf	??_i2c_eeprom_readByte,w,c
 10282  007E0E  0B0E               	andlw	14
 10283  007E10  09A0               	iorlw	160
 10284  007E12  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10285                           
 10286                           ;i2c.c: 372: addr = address & 0xFF;
 10287  007E14  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10288                           
 10289                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10290  007E18  0E02               	movlw	2
 10291  007E1A  EC9F  F042         	call	_i2c_set_frequency
 10292                           
 10293                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10294  007E1E  0E18               	movlw	low i2c_eeprom_readByte@addr
 10295  007E20  6E06               	movwf	__i2c_write@data,c
 10296  007E22  0E00               	movlw	high i2c_eeprom_readByte@addr
 10297  007E24  6E07               	movwf	__i2c_write@data+1,c
 10298  007E26  0E01               	movlw	1
 10299  007E28  6E08               	movwf	__i2c_write@length,c
 10300  007E2A  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10301  007E2C  EC6F  F03F         	call	__i2c_write
 10302                           
 10303                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10304  007E30  0E18               	movlw	low i2c_eeprom_readByte@addr
 10305  007E32  6E06               	movwf	__i2c_read@data,c
 10306  007E34  0E00               	movlw	high i2c_eeprom_readByte@addr
 10307  007E36  6E07               	movwf	__i2c_read@data+1,c
 10308  007E38  0E01               	movlw	1
 10309  007E3A  6E08               	movwf	__i2c_read@length,c
 10310  007E3C  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10311  007E3E  EC0B  F036         	call	__i2c_read
 10312                           
 10313                           ;i2c.c: 379: return addr;
 10314  007E42  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10315  007E44  0012               	return	
 10316  007E46                     __end_of_i2c_eeprom_readByte:
 10317                           	opt stack 0
 10318                           tblptru	equ	0xFF8
 10319                           tblptrh	equ	0xFF7
 10320                           tblptrl	equ	0xFF6
 10321                           tablat	equ	0xFF5
 10322                           prodh	equ	0xFF4
 10323                           prodl	equ	0xFF3
 10324                           intcon	equ	0xFF2
 10325                           intcon2	equ	0xFF1
 10326                           intcon3	equ	0xFF0
 10327                           postinc0	equ	0xFEE
 10328                           wreg	equ	0xFE8
 10329                           indf1	equ	0xFE7
 10330                           postdec1	equ	0xFE5
 10331                           plusw1	equ	0xFE3
 10332                           fsr1h	equ	0xFE2
 10333                           fsr1l	equ	0xFE1
 10334                           indf2	equ	0xFDF
 10335                           postinc2	equ	0xFDE
 10336                           postdec2	equ	0xFDD
 10337                           plusw2	equ	0xFDB
 10338                           fsr2h	equ	0xFDA
 10339                           fsr2l	equ	0xFD9
 10340                           status	equ	0xFD8
 10341                           
 10342 ;; *************** function __i2c_read *****************
 10343 ;; Defined at:
 10344 ;;		line 161 in file "i2c.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  slave_addres    1    wreg     unsigned char 
 10347 ;;  data            2    5[COMRAM] PTR unsigned char 
 10348 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10349 ;;  length          1    7[COMRAM] unsigned char 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10352 ;;  cntr            1   16[COMRAM] unsigned char 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      void 
 10355 ;; Registers used:
 10356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10362 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10364 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10365 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10366 ;;Total ram usage:       12 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:    1
 10369 ;; This function calls:
 10370 ;;		__i2c_acknowledge
 10371 ;;		__i2c_get
 10372 ;;		__i2c_not_acknowledge
 10373 ;;		__i2c_send
 10374 ;;		__i2c_start
 10375 ;;		__i2c_stop
 10376 ;;		__i2c_wait_idle
 10377 ;; This function is called by:
 10378 ;;		_i2c_eeprom_readByte
 10379 ;;		_i2c_eeprom_read
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text47
 10384  006C16                     __ptext47:
 10385                           	opt stack 0
 10386  006C16                     __i2c_read:
 10387                           	opt stack 27
 10388                           
 10389                           ;incstack = 0
 10390                           ;__i2c_read@slave_address stored from wreg
 10391  006C16  6E10               	movwf	__i2c_read@slave_address,c
 10392                           
 10393                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10394  006C18  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 10395                           
 10396                           ;i2c.c: 166: _i2c_start();
 10397  006C1C  ECC9  F044         	call	__i2c_start	;wreg free
 10398                           
 10399                           ;i2c.c: 167: _i2c_wait_idle();
 10400  006C20  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 10401                           
 10402                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10403  006C24  5010               	movf	__i2c_read@slave_address,w,c
 10404  006C26  0901               	iorlw	1
 10405  006C28  ECCD  F044         	call	__i2c_send
 10406                           
 10407                           ;i2c.c: 169: _i2c_wait_idle();
 10408  006C2C  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 10409                           
 10410                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10411  006C30  0E00               	movlw	0
 10412  006C32  6E11               	movwf	__i2c_read@cntr,c
 10413  006C34  D00E               	goto	l1209
 10414  006C36                     
 10415                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10416  006C36  5011               	movf	__i2c_read@cntr,w,c
 10417  006C38  0D01               	mullw	1
 10418  006C3A  50F3               	movf	prodl,w,c
 10419  006C3C  2406               	addwf	__i2c_read@data,w,c
 10420  006C3E  6ED9               	movwf	fsr2l,c
 10421  006C40  50F4               	movf	prodh,w,c
 10422  006C42  2007               	addwfc	__i2c_read@data+1,w,c
 10423  006C44  6EDA               	movwf	fsr2h,c
 10424  006C46  EC93  F044         	call	__i2c_get	;wreg free
 10425  006C4A  6EDF               	movwf	indf2,c
 10426                           
 10427                           ;i2c.c: 174: _i2c_acknowledge();
 10428  006C4C  EC98  F044         	call	__i2c_acknowledge	;wreg free
 10429  006C50  2A11               	incf	__i2c_read@cntr,f,c
 10430  006C52                     l1209:
 10431  006C52  0EFF               	movlw	255
 10432  006C54  6E09               	movwf	??__i2c_read& (0+255),c
 10433  006C56  0EFF               	movlw	255
 10434  006C58  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10435  006C5A  5008               	movf	__i2c_read@length,w,c
 10436  006C5C  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10437  006C5E  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10438  006C60  5009               	movf	??__i2c_read,w,c
 10439  006C62  260B               	addwf	??__i2c_read+2,f,c
 10440  006C64  500A               	movf	??__i2c_read+1,w,c
 10441  006C66  220C               	addwfc	??__i2c_read+3,f,c
 10442  006C68  5011               	movf	__i2c_read@cntr,w,c
 10443  006C6A  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10444  006C6C  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10445  006C6E  500B               	movf	??__i2c_read+2,w,c
 10446  006C70  5C0D               	subwf	??__i2c_read+4,w,c
 10447  006C72  500E               	movf	??__i2c_read+5,w,c
 10448  006C74  0A80               	xorlw	128
 10449  006C76  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10450  006C78  500C               	movf	??__i2c_read+3,w,c
 10451  006C7A  0A80               	xorlw	128
 10452  006C7C  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10453  006C7E  A0D8               	btfss	status,0,c
 10454  006C80  D7DA               	goto	l1210
 10455                           
 10456                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10457  006C82  5011               	movf	__i2c_read@cntr,w,c
 10458  006C84  0D01               	mullw	1
 10459  006C86  50F3               	movf	prodl,w,c
 10460  006C88  2406               	addwf	__i2c_read@data,w,c
 10461  006C8A  6ED9               	movwf	fsr2l,c
 10462  006C8C  50F4               	movf	prodh,w,c
 10463  006C8E  2007               	addwfc	__i2c_read@data+1,w,c
 10464  006C90  6EDA               	movwf	fsr2h,c
 10465  006C92  EC93  F044         	call	__i2c_get	;wreg free
 10466  006C96  6EDF               	movwf	indf2,c
 10467                           
 10468                           ;i2c.c: 177: _i2c_not_acknowledge();
 10469  006C98  EC8E  F044         	call	__i2c_not_acknowledge	;wreg free
 10470                           
 10471                           ;i2c.c: 179: _i2c_stop();
 10472  006C9C  ECC5  F044         	call	__i2c_stop	;wreg free
 10473  006CA0  0012               	return		;funcret
 10474  006CA2                     __end_of__i2c_read:
 10475                           	opt stack 0
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           intcon2	equ	0xFF1
 10484                           intcon3	equ	0xFF0
 10485                           postinc0	equ	0xFEE
 10486                           wreg	equ	0xFE8
 10487                           indf1	equ	0xFE7
 10488                           postdec1	equ	0xFE5
 10489                           plusw1	equ	0xFE3
 10490                           fsr1h	equ	0xFE2
 10491                           fsr1l	equ	0xFE1
 10492                           indf2	equ	0xFDF
 10493                           postinc2	equ	0xFDE
 10494                           postdec2	equ	0xFDD
 10495                           plusw2	equ	0xFDB
 10496                           fsr2h	equ	0xFDA
 10497                           fsr2l	equ	0xFD9
 10498                           status	equ	0xFD8
 10499                           
 10500 ;; *************** function __i2c_not_acknowledge *****************
 10501 ;; Defined at:
 10502 ;;		line 90 in file "i2c.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;		None
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		None
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10520 ;;Total ram usage:        0 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		__i2c_read
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text48
 10530  00891C                     __ptext48:
 10531                           	opt stack 0
 10532  00891C                     __i2c_not_acknowledge:
 10533                           	opt stack 27
 10534                           
 10535                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 10536                           
 10537                           ;incstack = 0
 10538  00891C  8AC5               	bsf	4037,5,c	;volatile
 10539                           
 10540                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 10541  00891E  88C5               	bsf	4037,4,c	;volatile
 10542  008920  A8C5               	btfss	4037,4,c	;volatile
 10543  008922  0012               	return	
 10544  008924  D7FD               	goto	l1181
 10545  008926                     __end_of__i2c_not_acknowledge:
 10546                           	opt stack 0
 10547                           tblptru	equ	0xFF8
 10548                           tblptrh	equ	0xFF7
 10549                           tblptrl	equ	0xFF6
 10550                           tablat	equ	0xFF5
 10551                           prodh	equ	0xFF4
 10552                           prodl	equ	0xFF3
 10553                           intcon	equ	0xFF2
 10554                           intcon2	equ	0xFF1
 10555                           intcon3	equ	0xFF0
 10556                           postinc0	equ	0xFEE
 10557                           wreg	equ	0xFE8
 10558                           indf1	equ	0xFE7
 10559                           postdec1	equ	0xFE5
 10560                           plusw1	equ	0xFE3
 10561                           fsr1h	equ	0xFE2
 10562                           fsr1l	equ	0xFE1
 10563                           indf2	equ	0xFDF
 10564                           postinc2	equ	0xFDE
 10565                           postdec2	equ	0xFDD
 10566                           plusw2	equ	0xFDB
 10567                           fsr2h	equ	0xFDA
 10568                           fsr2l	equ	0xFD9
 10569                           status	equ	0xFD8
 10570                           
 10571 ;; *************** function __i2c_get *****************
 10572 ;; Defined at:
 10573 ;;		line 67 in file "i2c.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;		None
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;		None
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      unsigned char 
 10580 ;; Registers used:
 10581 ;;		wreg, status,2
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;Total ram usage:        0 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		__i2c_read
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text49
 10601  008926                     __ptext49:
 10602                           	opt stack 0
 10603  008926                     __i2c_get:
 10604                           	opt stack 27
 10605                           
 10606                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 10607                           
 10608                           ;incstack = 0
 10609  008926  86C5               	bsf	4037,3,c	;volatile
 10610  008928  B6C5               	btfsc	4037,3,c	;volatile
 10611  00892A  D7FE               	goto	l1163
 10612                           
 10613                           ;i2c.c: 71: return SSP1BUF;
 10614  00892C  50C9               	movf	4041,w,c	;volatile
 10615  00892E  0012               	return	
 10616  008930                     __end_of__i2c_get:
 10617                           	opt stack 0
 10618                           tblptru	equ	0xFF8
 10619                           tblptrh	equ	0xFF7
 10620                           tblptrl	equ	0xFF6
 10621                           tablat	equ	0xFF5
 10622                           prodh	equ	0xFF4
 10623                           prodl	equ	0xFF3
 10624                           intcon	equ	0xFF2
 10625                           intcon2	equ	0xFF1
 10626                           intcon3	equ	0xFF0
 10627                           postinc0	equ	0xFEE
 10628                           wreg	equ	0xFE8
 10629                           indf1	equ	0xFE7
 10630                           postdec1	equ	0xFE5
 10631                           plusw1	equ	0xFE3
 10632                           fsr1h	equ	0xFE2
 10633                           fsr1l	equ	0xFE1
 10634                           indf2	equ	0xFDF
 10635                           postinc2	equ	0xFDE
 10636                           postdec2	equ	0xFDD
 10637                           plusw2	equ	0xFDB
 10638                           fsr2h	equ	0xFDA
 10639                           fsr2l	equ	0xFD9
 10640                           status	equ	0xFD8
 10641                           
 10642 ;; *************** function __i2c_acknowledge *****************
 10643 ;; Defined at:
 10644 ;;		line 82 in file "i2c.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;		None
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		None
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;Total ram usage:        0 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		__i2c_read
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text50
 10672  008930                     __ptext50:
 10673                           	opt stack 0
 10674  008930                     __i2c_acknowledge:
 10675                           	opt stack 27
 10676                           
 10677                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 10678                           
 10679                           ;incstack = 0
 10680  008930  9AC5               	bcf	4037,5,c	;volatile
 10681                           
 10682                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 10683  008932  88C5               	bsf	4037,4,c	;volatile
 10684  008934  A8C5               	btfss	4037,4,c	;volatile
 10685  008936  0012               	return	
 10686  008938  D7FD               	goto	l1175
 10687  00893A                     __end_of__i2c_acknowledge:
 10688                           	opt stack 0
 10689                           tblptru	equ	0xFF8
 10690                           tblptrh	equ	0xFF7
 10691                           tblptrl	equ	0xFF6
 10692                           tablat	equ	0xFF5
 10693                           prodh	equ	0xFF4
 10694                           prodl	equ	0xFF3
 10695                           intcon	equ	0xFF2
 10696                           intcon2	equ	0xFF1
 10697                           intcon3	equ	0xFF0
 10698                           postinc0	equ	0xFEE
 10699                           wreg	equ	0xFE8
 10700                           indf1	equ	0xFE7
 10701                           postdec1	equ	0xFE5
 10702                           plusw1	equ	0xFE3
 10703                           fsr1h	equ	0xFE2
 10704                           fsr1l	equ	0xFE1
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           postdec2	equ	0xFDD
 10708                           plusw2	equ	0xFDB
 10709                           fsr2h	equ	0xFDA
 10710                           fsr2l	equ	0xFD9
 10711                           status	equ	0xFD8
 10712                           
 10713 ;; *************** function _USBDeviceTasks *****************
 10714 ;; Defined at:
 10715 ;;		line 477 in file "usb_device.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;  i               1   31[COMRAM] unsigned char 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10733 ;;Total ram usage:        1 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    8
 10736 ;; This function calls:
 10737 ;;		_USBCtrlEPAllowStatusStage
 10738 ;;		_USBCtrlEPService
 10739 ;;		_USBDeviceInit
 10740 ;;		_USBIncrement1msInternalTimers
 10741 ;;		_USBStallHandler
 10742 ;;		_USBSuspend
 10743 ;;		_USBWakeFromSuspend
 10744 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10745 ;; This function is called by:
 10746 ;;		_main
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           	psect	text51
 10751  003948                     __ptext51:
 10752                           	opt stack 0
 10753  003948                     _USBDeviceTasks:
 10754                           	opt stack 22
 10755                           
 10756                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 10757                           
 10758                           ; BSR set to: 0
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;usb_device.c: 543: return;
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 10765                           
 10766                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 10767                           
 10768                           ;usb_device.c: 511: UIE = 0;
 10769                           
 10770                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 10771                           
 10772                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 10773                           
 10774                           ;incstack = 0
 10775  003948  0100               	movlb	0	; () banked
 10776  00394A  51F6               	movf	_USBDeviceState& (0+255),w,b
 10777  00394C  A4D8               	btfss	status,2,c
 10778  00394E  D012               	goto	l150
 10779                           
 10780                           ; BSR set to: 0
 10781                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 10782  003950  0E00               	movlw	0
 10783  003952  6E65               	movwf	3941,c	;volatile
 10784                           
 10785                           ;usb_device.c: 572: UIE = 0;
 10786  003954  0E00               	movlw	0
 10787  003956  010F               	movlb	15	; () banked
 10788  003958  6F36               	movwf	54,b	;volatile
 10789                           
 10790                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10791  00395A  0E16               	movlw	22
 10792  00395C  6F39               	movwf	57,b	;volatile
 10793  00395E  0E9F               	movlw	159
 10794  003960  6F37               	movwf	55,b	;volatile
 10795  003962  0E7B               	movlw	123
 10796  003964  6F36               	movwf	54,b	;volatile
 10797                           
 10798                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10799  003966  D001               	goto	l151
 10800  003968                     l152:
 10801  003968  8665               	bsf	3941,3,c	;volatile
 10802  00396A                     l151:
 10803  00396A  A665               	btfss	3941,3,c	;volatile
 10804  00396C  D7FD               	goto	l152
 10805                           
 10806                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 10807  00396E  0E01               	movlw	1
 10808  003970  0100               	movlb	0	; () banked
 10809  003972  6FF6               	movwf	_USBDeviceState& (0+255),b
 10810  003974                     l150:
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10814                           
 10815                           ; BSR set to: 0
 10816  003974  05F6               	decf	_USBDeviceState& (0+255),w,b
 10817  003976  B4D8               	btfsc	status,2,c
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 10821  003978  BA65               	btfsc	3941,5,c	;volatile
 10822  00397A  D00A               	goto	l155
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 10826  00397C  0E00               	movlw	0
 10827  00397E  6E62               	movwf	3938,c	;volatile
 10828                           
 10829                           ;usb_device.c: 612: UIE=0;
 10830  003980  0E00               	movlw	0
 10831  003982  010F               	movlb	15	; () banked
 10832  003984  6F36               	movwf	54,b	;volatile
 10833                           
 10834                           ; BSR set to: 15
 10835                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10836  003986  8136               	bsf	54,0,b	;volatile
 10837                           
 10838                           ; BSR set to: 15
 10839                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10840  003988  8936               	bsf	54,4,b	;volatile
 10841                           
 10842                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10843  00398A  0E02               	movlw	2
 10844  00398C  0100               	movlb	0	; () banked
 10845  00398E  6FF6               	movwf	_USBDeviceState& (0+255),b
 10846  003990                     l155:
 10847                           
 10848                           ; BSR set to: 0
 10849                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 10850                           
 10851                           ; BSR set to: 0
 10852                           
 10853                           ; BSR set to: 0
 10854  003990  A462               	btfss	3938,2,c	;volatile
 10855  003992  D006               	goto	l156
 10856                           
 10857                           ; BSR set to: 0
 10858  003994  010F               	movlb	15	; () banked
 10859  003996  A536               	btfss	54,2,b	;volatile
 10860  003998  D003               	goto	l156
 10861                           
 10862                           ; BSR set to: 15
 10863                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 10864  00399A  9462               	bcf	3938,2,c	;volatile
 10865                           
 10866                           ; BSR set to: 15
 10867                           ;usb_device.c: 640: USBWakeFromSuspend();
 10868  00399C  EC13  F041         	call	_USBWakeFromSuspend	;wreg free
 10869  0039A0                     l156:
 10870                           
 10871                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 10872  0039A0  A265               	btfss	3941,1,c	;volatile
 10873  0039A2  D002               	goto	l157
 10874                           
 10875                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 10876  0039A4  98A1               	bcf	4001,4,c	;volatile
 10877                           
 10878                           ;usb_device.c: 650: return;
 10879  0039A6  0012               	return	
 10880  0039A8                     l157:
 10881                           
 10882                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10883  0039A8  A062               	btfss	3938,0,c	;volatile
 10884  0039AA  D009               	goto	l158
 10885  0039AC  010F               	movlb	15	; () banked
 10886  0039AE  A136               	btfss	54,0,b	;volatile
 10887  0039B0  D006               	goto	l158
 10888                           
 10889                           ; BSR set to: 15
 10890                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 10891  0039B2  EC3F  F020         	call	_USBDeviceInit	;wreg free
 10892                           
 10893                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10894  0039B6  0E04               	movlw	4
 10895  0039B8  0100               	movlb	0	; () banked
 10896  0039BA  6FF6               	movwf	_USBDeviceState& (0+255),b
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;usb_device.c: 681: (UIR &= 0xFE);
 10900  0039BC  9062               	bcf	3938,0,c	;volatile
 10901  0039BE                     l158:
 10902                           
 10903                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10904                           
 10905                           ; BSR set to: 0
 10906  0039BE  A862               	btfss	3938,4,c	;volatile
 10907  0039C0  D004               	goto	l159
 10908  0039C2  010F               	movlb	15	; () banked
 10909  0039C4  B936               	btfsc	54,4,b	;volatile
 10910                           
 10911                           ; BSR set to: 15
 10912                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 10913  0039C6  EC2E  F042         	call	_USBSuspend	;wreg free
 10914  0039CA                     l159:
 10915                           
 10916                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 10917  0039CA  AC62               	btfss	3938,6,c	;volatile
 10918  0039CC  D01C               	goto	l163
 10919                           
 10920                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 10921  0039CE  010F               	movlb	15	; () banked
 10922  0039D0  AD36               	btfss	54,6,b	;volatile
 10923  0039D2  D00E               	goto	l161
 10924                           
 10925                           ; BSR set to: 15
 10926                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10927  0039D4  0E00               	movlw	0
 10928  0039D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10929  0039D8  0E73               	movlw	115
 10930  0039DA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10931  0039DC  0E00               	movlw	0
 10932  0039DE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10933  0039E0  0E00               	movlw	0
 10934  0039E2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10935  0039E4  0E00               	movlw	0
 10936  0039E6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10937  0039E8  0E01               	movlw	1
 10938  0039EA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 10939  0039EC  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10940  0039F0                     l161:
 10941                           
 10942                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 10943  0039F0  9C62               	bcf	3938,6,c	;volatile
 10944                           
 10945                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10946  0039F2  EC83  F043         	call	_USBIncrement1msInternalTimers	;wreg free
 10947                           
 10948                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10949  0039F6  0100               	movlb	0	; () banked
 10950  0039F8  51EF               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 10951  0039FA  A4D8               	btfss	status,2,c
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10955  0039FC  07EF               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10959                           
 10960                           ; BSR set to: 0
 10961  0039FE  51EF               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 10962  003A00  B4D8               	btfsc	status,2,c
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10966  003A02  ECEE  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10967  003A06                     l163:
 10968                           
 10969                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 10970  003A06  AA62               	btfss	3938,5,c	;volatile
 10971  003A08  D004               	goto	l164
 10972  003A0A  010F               	movlb	15	; () banked
 10973  003A0C  BB36               	btfsc	54,5,b	;volatile
 10974                           
 10975                           ; BSR set to: 15
 10976                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 10977  003A0E  ECB7  F03F         	call	_USBStallHandler	;wreg free
 10978  003A12                     l164:
 10979                           
 10980                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10981  003A12  A262               	btfss	3938,1,c	;volatile
 10982  003A14  D012               	goto	l165
 10983  003A16  010F               	movlb	15	; () banked
 10984  003A18  A336               	btfss	54,1,b	;volatile
 10985  003A1A  D00F               	goto	l165
 10986                           
 10987                           ; BSR set to: 15
 10988                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 10989  003A1C  0E7F               	movlw	127
 10990  003A1E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10991  003A20  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10992  003A22  0E00               	movlw	0
 10993  003A24  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10994  003A26  0E00               	movlw	0
 10995  003A28  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10996  003A2A  0E00               	movlw	0
 10997  003A2C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10998  003A2E  0E01               	movlw	1
 10999  003A30  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11000  003A32  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11001                           
 11002                           ;usb_device.c: 759: {UEIR = 0;};
 11003  003A36  0E00               	movlw	0
 11004  003A38  6E63               	movwf	3939,c	;volatile
 11005  003A3A                     l165:
 11006                           
 11007                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11008  003A3A  0E04               	movlw	4
 11009  003A3C  0100               	movlb	0	; () banked
 11010  003A3E  61F6               	cpfslt	_USBDeviceState& (0+255),b
 11011  003A40  D002               	goto	l166
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11015  003A42  98A1               	bcf	4001,4,c	;volatile
 11016                           
 11017                           ;usb_device.c: 777: return;
 11018  003A44  0012               	return	
 11019  003A46                     l166:
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11023  003A46  010F               	movlb	15	; () banked
 11024  003A48  A736               	btfss	54,3,b	;volatile
 11025  003A4A  D03C               	goto	u12180
 11026                           
 11027                           ; BSR set to: 15
 11028                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11029  003A4C  0E00               	movlw	0
 11030  003A4E  6E20               	movwf	USBDeviceTasks@i,c
 11031  003A50                     l14992:
 11032                           
 11033                           ; BSR set to: 15
 11034  003A50  0E03               	movlw	3
 11035  003A52  6420               	cpfsgt	USBDeviceTasks@i,c
 11036  003A54  D001               	goto	l168
 11037  003A56  D036               	goto	u12180
 11038  003A58                     l168:
 11039                           
 11040                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11041  003A58  A662               	btfss	3938,3,c	;volatile
 11042  003A5A  D034               	goto	u12180
 11043                           
 11044                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11045  003A5C  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11046                           
 11047                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11048  003A60  0100               	movlb	0	; () banked
 11049  003A62  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11050  003A64  32E8               	rrcf	wreg,f,c
 11051  003A66  32E8               	rrcf	wreg,f,c
 11052  003A68  0B0F               	andlw	15
 11053  003A6A  6FF1               	movwf	_endpoint_number& (0+255),b
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;usb_device.c: 793: (UIR &= 0xF7);
 11057  003A6C  9662               	bcf	3938,3,c	;volatile
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11061  003A6E  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11062  003A70  D007               	goto	l171
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11066  003A72  51F1               	movf	_endpoint_number& (0+255),w,b
 11067  003A74  0D01               	mullw	1
 11068  003A76  0E68               	movlw	low _ep_data_out
 11069  003A78  24F3               	addwf	prodl,w,c
 11070  003A7A  6ED9               	movwf	fsr2l,c
 11071  003A7C  0E01               	movlw	high _ep_data_out
 11072  003A7E  D007               	goto	L5
 11073  003A80                     l171:
 11074                           
 11075                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11076                           
 11077                           ; BSR set to: 1
 11078  003A80  0100               	movlb	0	; () banked
 11079  003A82  51F1               	movf	_endpoint_number& (0+255),w,b
 11080  003A84  0D01               	mullw	1
 11081  003A86  0E6B               	movlw	low _ep_data_in
 11082  003A88  24F3               	addwf	prodl,w,c
 11083  003A8A  6ED9               	movwf	fsr2l,c
 11084  003A8C  0E01               	movlw	high _ep_data_in
 11085  003A8E                     L5:
 11086  003A8E  20F4               	addwfc	prodh,w,c
 11087  003A90  6EDA               	movwf	fsr2h,c
 11088  003A92  0101               	movlb	1	; () banked
 11089  003A94  70DF               	btg	indf2,0,c
 11090                           
 11091                           ; BSR set to: 1
 11092                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11093                           
 11094                           ; BSR set to: 1
 11095  003A96  0100               	movlb	0	; () banked
 11096  003A98  51F1               	movf	_endpoint_number& (0+255),w,b
 11097  003A9A  A4D8               	btfss	status,2,c
 11098  003A9C  D003               	goto	l173
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11102  003A9E  EC88  F030         	call	_USBCtrlEPService	;wreg free
 11103                           
 11104                           ;usb_device.c: 813: }
 11105  003AA2  D00E               	goto	l175
 11106  003AA4                     l173:
 11107                           
 11108                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11109  003AA4  0E00               	movlw	0
 11110  003AA6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11111  003AA8  0E72               	movlw	114
 11112  003AAA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11113  003AAC  0EFD               	movlw	low _USTATcopy
 11114  003AAE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11115  003AB0  0E00               	movlw	high _USTATcopy
 11116  003AB2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11117  003AB4  0E00               	movlw	0
 11118  003AB6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11119  003AB8  0E00               	movlw	0
 11120  003ABA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11121  003ABC  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11122  003AC0                     l175:
 11123  003AC0  2A20               	incf	USBDeviceTasks@i,f,c
 11124  003AC2  D7C6               	goto	l14992
 11125  003AC4                     u12180:
 11126                           
 11127                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11128  003AC4  98A1               	bcf	4001,4,c	;volatile
 11129  003AC6  0012               	return		;funcret
 11130  003AC8                     __end_of_USBDeviceTasks:
 11131                           	opt stack 0
 11132                           tblptru	equ	0xFF8
 11133                           tblptrh	equ	0xFF7
 11134                           tblptrl	equ	0xFF6
 11135                           tablat	equ	0xFF5
 11136                           prodh	equ	0xFF4
 11137                           prodl	equ	0xFF3
 11138                           intcon	equ	0xFF2
 11139                           intcon2	equ	0xFF1
 11140                           intcon3	equ	0xFF0
 11141                           postinc0	equ	0xFEE
 11142                           wreg	equ	0xFE8
 11143                           indf1	equ	0xFE7
 11144                           postdec1	equ	0xFE5
 11145                           plusw1	equ	0xFE3
 11146                           fsr1h	equ	0xFE2
 11147                           fsr1l	equ	0xFE1
 11148                           indf2	equ	0xFDF
 11149                           postinc2	equ	0xFDE
 11150                           postdec2	equ	0xFDD
 11151                           plusw2	equ	0xFDB
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _USBWakeFromSuspend *****************
 11157 ;; Defined at:
 11158 ;;		line 2305 in file "usb_device.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11176 ;;Total ram usage:        0 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    4
 11179 ;; This function calls:
 11180 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11181 ;; This function is called by:
 11182 ;;		_USBDeviceTasks
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text52
 11187  008226                     __ptext52:
 11188                           	opt stack 0
 11189  008226                     _USBWakeFromSuspend:
 11190                           	opt stack 25
 11191                           
 11192                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11193                           
 11194                           ;incstack = 0
 11195  008226  0E00               	movlw	0
 11196  008228  0100               	movlb	0	; () banked
 11197  00822A  6FF2               	movwf	_USBBusIsSuspended& (0+255),b
 11198                           
 11199                           ; BSR set to: 0
 11200                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11201  00822C  0E00               	movlw	0
 11202  00822E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11203  008230  0E74               	movlw	116
 11204  008232  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11205  008234  0E00               	movlw	0
 11206  008236  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11207  008238  0E00               	movlw	0
 11208  00823A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11209  00823C  0E00               	movlw	0
 11210  00823E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11211  008240  0E00               	movlw	0
 11212  008242  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11213  008244  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11214                           
 11215                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11216  008248  9265               	bcf	3941,1,c	;volatile
 11217                           
 11218                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11219  00824A  010F               	movlb	15	; () banked
 11220  00824C  9536               	bcf	54,2,b	;volatile
 11221                           
 11222                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11223  00824E  D001               	goto	l303
 11224  008250                     
 11225                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11226                           
 11227                           ; BSR set to: 15
 11228  008250  9462               	bcf	3938,2,c	;volatile
 11229  008252                     l303:
 11230  008252  B462               	btfsc	3938,2,c	;volatile
 11231  008254  D7FD               	goto	l304
 11232                           
 11233                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11234  008256  0E00               	movlw	0
 11235  008258  0100               	movlb	0	; () banked
 11236  00825A  6FE9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11237                           
 11238                           ; BSR set to: 0
 11239  00825C  0012               	return		;funcret
 11240  00825E                     __end_of_USBWakeFromSuspend:
 11241                           	opt stack 0
 11242                           tblptru	equ	0xFF8
 11243                           tblptrh	equ	0xFF7
 11244                           tblptrl	equ	0xFF6
 11245                           tablat	equ	0xFF5
 11246                           prodh	equ	0xFF4
 11247                           prodl	equ	0xFF3
 11248                           intcon	equ	0xFF2
 11249                           intcon2	equ	0xFF1
 11250                           intcon3	equ	0xFF0
 11251                           postinc0	equ	0xFEE
 11252                           wreg	equ	0xFE8
 11253                           indf1	equ	0xFE7
 11254                           postdec1	equ	0xFE5
 11255                           plusw1	equ	0xFE3
 11256                           fsr1h	equ	0xFE2
 11257                           fsr1l	equ	0xFE1
 11258                           indf2	equ	0xFDF
 11259                           postinc2	equ	0xFDE
 11260                           postdec2	equ	0xFDD
 11261                           plusw2	equ	0xFDB
 11262                           fsr2h	equ	0xFDA
 11263                           fsr2l	equ	0xFD9
 11264                           status	equ	0xFD8
 11265                           
 11266 ;; *************** function _USBSuspend *****************
 11267 ;; Defined at:
 11268 ;;		line 2247 in file "usb_device.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;		None
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;		None
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;Total ram usage:        0 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    4
 11289 ;; This function calls:
 11290 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11291 ;; This function is called by:
 11292 ;;		_USBDeviceTasks
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text53
 11297  00845C                     __ptext53:
 11298                           	opt stack 0
 11299  00845C                     _USBSuspend:
 11300                           	opt stack 25
 11301                           
 11302                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;incstack = 0
 11306  00845C  010F               	movlb	15	; () banked
 11307  00845E  8536               	bsf	54,2,b	;volatile
 11308                           
 11309                           ; BSR set to: 15
 11310                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11311  008460  9862               	bcf	3938,4,c	;volatile
 11312                           
 11313                           ; BSR set to: 15
 11314                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11315  008462  8265               	bsf	3941,1,c	;volatile
 11316                           
 11317                           ; BSR set to: 15
 11318                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11319  008464  0E01               	movlw	1
 11320  008466  0100               	movlb	0	; () banked
 11321  008468  6FF2               	movwf	_USBBusIsSuspended& (0+255),b
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11325  00846A  0E00               	movlw	0
 11326  00846C  6FE9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11330  00846E  0E00               	movlw	0
 11331  008470  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11332  008472  0E75               	movlw	117
 11333  008474  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11334  008476  0E00               	movlw	0
 11335  008478  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11336  00847A  0E00               	movlw	0
 11337  00847C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11338  00847E  0E00               	movlw	0
 11339  008480  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11340  008482  0E00               	movlw	0
 11341  008484  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11342  008486  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11343  00848A  0012               	return		;funcret
 11344  00848C                     __end_of_USBSuspend:
 11345                           	opt stack 0
 11346                           tblptru	equ	0xFF8
 11347                           tblptrh	equ	0xFF7
 11348                           tblptrl	equ	0xFF6
 11349                           tablat	equ	0xFF5
 11350                           prodh	equ	0xFF4
 11351                           prodl	equ	0xFF3
 11352                           intcon	equ	0xFF2
 11353                           intcon2	equ	0xFF1
 11354                           intcon3	equ	0xFF0
 11355                           postinc0	equ	0xFEE
 11356                           wreg	equ	0xFE8
 11357                           indf1	equ	0xFE7
 11358                           postdec1	equ	0xFE5
 11359                           plusw1	equ	0xFE3
 11360                           fsr1h	equ	0xFE2
 11361                           fsr1l	equ	0xFE1
 11362                           indf2	equ	0xFDF
 11363                           postinc2	equ	0xFDE
 11364                           postdec2	equ	0xFDD
 11365                           plusw2	equ	0xFDB
 11366                           fsr2h	equ	0xFDA
 11367                           fsr2l	equ	0xFD9
 11368                           status	equ	0xFD8
 11369                           
 11370 ;; *************** function _USBStallHandler *****************
 11371 ;; Defined at:
 11372 ;;		line 2204 in file "usb_device.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;		None
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11390 ;;Total ram usage:        1 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_USBDeviceTasks
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text54
 11400  007F6E                     __ptext54:
 11401                           	opt stack 0
 11402  007F6E                     _USBStallHandler:
 11403                           	opt stack 29
 11404                           
 11405                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11406                           
 11407                           ;incstack = 0
 11408  007F6E  010F               	movlb	15	; () banked
 11409  007F70  A126               	btfss	38,0,b	;volatile
 11410  007F72  D01D               	goto	l295
 11411                           
 11412                           ; BSR set to: 15
 11413                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11414  007F74  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11415  007F78  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11416  007F7C  0E80               	movlw	128
 11417  007F7E  18DE               	xorwf	postinc2,w,c
 11418  007F80  A4D8               	btfss	status,2,c
 11419  007F82  D014               	goto	l296
 11420                           
 11421                           ; BSR set to: 15
 11422  007F84  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11423  007F88  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11424  007F8C  0E84               	movlw	132
 11425  007F8E  18DE               	xorwf	postinc2,w,c
 11426  007F90  A4D8               	btfss	status,2,c
 11427  007F92  D00C               	goto	l296
 11428                           
 11429                           ; BSR set to: 15
 11430                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11431  007F94  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11432  007F98  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11433  007F9C  0E0C               	movlw	12
 11434  007F9E  6EDF               	movwf	indf2,c
 11435                           
 11436                           ; BSR set to: 15
 11437                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11438  007FA0  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11439  007FA4  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11440  007FA8  0E00               	movlw	0
 11441  007FAA  8EDB               	bsf	plusw2,7,c
 11442  007FAC                     l296:
 11443                           
 11444                           ; BSR set to: 15
 11445                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11446                           
 11447                           ; BSR set to: 15
 11448  007FAC  9126               	bcf	38,0,b	;volatile
 11449  007FAE                     l295:
 11450                           
 11451                           ; BSR set to: 15
 11452                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11453  007FAE  9A62               	bcf	3938,5,c	;volatile
 11454                           
 11455                           ; BSR set to: 15
 11456  007FB0  0012               	return		;funcret
 11457  007FB2                     __end_of_USBStallHandler:
 11458                           	opt stack 0
 11459                           tblptru	equ	0xFF8
 11460                           tblptrh	equ	0xFF7
 11461                           tblptrl	equ	0xFF6
 11462                           tablat	equ	0xFF5
 11463                           prodh	equ	0xFF4
 11464                           prodl	equ	0xFF3
 11465                           intcon	equ	0xFF2
 11466                           intcon2	equ	0xFF1
 11467                           intcon3	equ	0xFF0
 11468                           postinc0	equ	0xFEE
 11469                           wreg	equ	0xFE8
 11470                           indf1	equ	0xFE7
 11471                           postdec1	equ	0xFE5
 11472                           plusw1	equ	0xFE3
 11473                           fsr1h	equ	0xFE2
 11474                           fsr1l	equ	0xFE1
 11475                           indf2	equ	0xFDF
 11476                           postinc2	equ	0xFDE
 11477                           postdec2	equ	0xFDD
 11478                           plusw2	equ	0xFDB
 11479                           fsr2h	equ	0xFDA
 11480                           fsr2l	equ	0xFD9
 11481                           status	equ	0xFD8
 11482                           
 11483 ;; *************** function _USBIncrement1msInternalTimers *****************
 11484 ;; Defined at:
 11485 ;;		line 3027 in file "usb_device.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;		None
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2, status,0
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;Total ram usage:        0 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; This function calls:
 11506 ;;		Nothing
 11507 ;; This function is called by:
 11508 ;;		_USBDeviceTasks
 11509 ;; This function uses a non-reentrant model
 11510 ;;
 11511                           
 11512                           	psect	text55
 11513  008706                     __ptext55:
 11514                           	opt stack 0
 11515  008706                     _USBIncrement1msInternalTimers:
 11516                           	opt stack 29
 11517                           
 11518                           ;usb_device.c: 3035: USB1msTickCount++;
 11519                           
 11520                           ; BSR set to: 15
 11521                           ;incstack = 0
 11522  008706  0E01               	movlw	1
 11523  008708  0101               	movlb	1	; () banked
 11524  00870A  275E               	addwf	_USB1msTickCount& (0+255),f,b
 11525  00870C  0E00               	movlw	0
 11526  00870E  235F               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 11527  008710  2360               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 11528  008712  2361               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 11529                           
 11530                           ; BSR set to: 1
 11531                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 11532  008714  0100               	movlb	0	; () banked
 11533  008716  51F2               	movf	_USBBusIsSuspended& (0+255),w,b
 11534  008718  A4D8               	btfss	status,2,c
 11535  00871A  0012               	return	
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 11539  00871C  2BE9               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 11543  00871E  51E9               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 11544  008720  A4D8               	btfss	status,2,c
 11545  008722  0012               	return	
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 11549  008724  69E9               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 11550                           
 11551                           ; BSR set to: 0
 11552  008726  0012               	return	
 11553  008728                     __end_of_USBIncrement1msInternalTimers:
 11554                           	opt stack 0
 11555                           tblptru	equ	0xFF8
 11556                           tblptrh	equ	0xFF7
 11557                           tblptrl	equ	0xFF6
 11558                           tablat	equ	0xFF5
 11559                           prodh	equ	0xFF4
 11560                           prodl	equ	0xFF3
 11561                           intcon	equ	0xFF2
 11562                           intcon2	equ	0xFF1
 11563                           intcon3	equ	0xFF0
 11564                           postinc0	equ	0xFEE
 11565                           wreg	equ	0xFE8
 11566                           indf1	equ	0xFE7
 11567                           postdec1	equ	0xFE5
 11568                           plusw1	equ	0xFE3
 11569                           fsr1h	equ	0xFE2
 11570                           fsr1l	equ	0xFE1
 11571                           indf2	equ	0xFDF
 11572                           postinc2	equ	0xFDE
 11573                           postdec2	equ	0xFDD
 11574                           plusw2	equ	0xFDB
 11575                           fsr2h	equ	0xFDA
 11576                           fsr2l	equ	0xFD9
 11577                           status	equ	0xFD8
 11578                           
 11579 ;; *************** function _USBDeviceInit *****************
 11580 ;; Defined at:
 11581 ;;		line 277 in file "usb_device.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;		None
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  i               1    8[COMRAM] unsigned char 
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  1    wreg      void 
 11588 ;; Registers used:
 11589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11599 ;;Total ram usage:        1 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:    1
 11602 ;; This function calls:
 11603 ;;		_memset
 11604 ;; This function is called by:
 11605 ;;		_USBDeviceTasks
 11606 ;;		_main
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text56
 11611  00407E                     __ptext56:
 11612                           	opt stack 0
 11613  00407E                     _USBDeviceInit:
 11614                           	opt stack 28
 11615                           
 11616                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;incstack = 0
 11620  00407E  98A0               	bcf	4000,4,c	;volatile
 11621                           
 11622                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 11623  004080  0E00               	movlw	0
 11624  004082  6E63               	movwf	3939,c	;volatile
 11625                           
 11626                           ;usb_device.c: 291: {UIR = 0;};
 11627  004084  0E00               	movlw	0
 11628  004086  6E62               	movwf	3938,c	;volatile
 11629                           
 11630                           ;usb_device.c: 294: UEP0 = 0;
 11631  004088  0E00               	movlw	0
 11632  00408A  010F               	movlb	15	; () banked
 11633  00408C  6F26               	movwf	38,b	;volatile
 11634                           
 11635                           ; BSR set to: 15
 11636                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 11637  00408E  0E27               	movlw	39
 11638  004090  6E01               	movwf	memset@p1,c
 11639  004092  0E0F               	movlw	15
 11640  004094  6E02               	movwf	memset@p1+1,c
 11641  004096  0E00               	movlw	0
 11642  004098  6E04               	movwf	memset@c+1,c
 11643  00409A  0E00               	movlw	0
 11644  00409C  6E03               	movwf	memset@c,c
 11645  00409E  0E00               	movlw	0
 11646  0040A0  6E06               	movwf	memset@n+1,c
 11647  0040A2  0E02               	movlw	2
 11648  0040A4  6E05               	movwf	memset@n,c
 11649  0040A6  EC89  F042         	call	_memset	;wreg free
 11650                           
 11651                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11652  0040AA  0E16               	movlw	22
 11653  0040AC  010F               	movlb	15	; () banked
 11654  0040AE  6F39               	movwf	57,b	;volatile
 11655                           
 11656                           ; BSR set to: 15
 11657  0040B0  0E9F               	movlw	159
 11658  0040B2  6F37               	movwf	55,b	;volatile
 11659                           
 11660                           ; BSR set to: 15
 11661  0040B4  0E7B               	movlw	123
 11662  0040B6  6F36               	movwf	54,b	;volatile
 11663                           
 11664                           ; BSR set to: 15
 11665                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 11666  0040B8  0E00               	movlw	0
 11667  0040BA  6E09               	movwf	USBDeviceInit@i,c
 11668  0040BC                     l14260:
 11669                           
 11670                           ; BSR set to: 15
 11671  0040BC  0E0B               	movlw	11
 11672  0040BE  6409               	cpfsgt	USBDeviceInit@i,c
 11673  0040C0  D001               	goto	l139
 11674  0040C2  D00E               	goto	u11220
 11675  0040C4                     l139:
 11676                           
 11677                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 11678                           
 11679                           ; BSR set to: 15
 11680  0040C4  5009               	movf	USBDeviceInit@i,w,c
 11681  0040C6  0D04               	mullw	4
 11682  0040C8  0E00               	movlw	0
 11683  0040CA  24F3               	addwf	prodl,w,c
 11684  0040CC  6ED9               	movwf	fsr2l,c
 11685  0040CE  0E0D               	movlw	13
 11686  0040D0  20F4               	addwfc	prodh,w,c
 11687  0040D2  6EDA               	movwf	fsr2h,c
 11688  0040D4  6ADE               	clrf	postinc2,c
 11689  0040D6  6ADE               	clrf	postinc2,c
 11690  0040D8  6ADE               	clrf	postinc2,c
 11691  0040DA  6ADD               	clrf	postdec2,c
 11692  0040DC  2A09               	incf	USBDeviceInit@i,f,c
 11693  0040DE  D7EE               	goto	l14260
 11694  0040E0                     u11220:
 11695                           
 11696                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 11697  0040E0  8C65               	bsf	3941,6,c	;volatile
 11698                           
 11699                           ;usb_device.c: 316: UADDR = 0x00;
 11700  0040E2  0E00               	movlw	0
 11701  0040E4  010F               	movlb	15	; () banked
 11702  0040E6  6F38               	movwf	56,b	;volatile
 11703                           
 11704                           ; BSR set to: 15
 11705                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11706  0040E8  9865               	bcf	3941,4,c	;volatile
 11707                           
 11708                           ; BSR set to: 15
 11709                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11710  0040EA  9C65               	bcf	3941,6,c	;volatile
 11711  0040EC                     
 11712                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 11713                           
 11714                           ; BSR set to: 15
 11715  0040EC  9662               	bcf	3938,3,c	;volatile
 11716                           
 11717                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11718  0040EE  0E00               	movlw	0
 11719  0040F0  0100               	movlb	0	; () banked
 11720  0040F2  6FC2               	movwf	(_inPipes+3)& (0+255),b
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11724  0040F4  0E00               	movlw	0
 11725  0040F6  0101               	movlb	1	; () banked
 11726  0040F8  6F34               	movwf	(_outPipes+3)& (0+255),b
 11727                           
 11728                           ; BSR set to: 1
 11729                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11730  0040FA  0E00               	movlw	0
 11731  0040FC  6F36               	movwf	(_outPipes+5)& (0+255),b
 11732  0040FE  0E00               	movlw	0
 11733  004100  6F35               	movwf	(_outPipes+4)& (0+255),b
 11734                           
 11735                           ; BSR set to: 1
 11736                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11737  004102  B662               	btfsc	3938,3,c	;volatile
 11738  004104  D7F3               	goto	l141
 11739                           
 11740                           ; BSR set to: 1
 11741                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11742                           
 11743                           ; BSR set to: 1
 11744  004106  0E01               	movlw	1
 11745  004108  0100               	movlb	0	; () banked
 11746  00410A  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11747                           
 11748                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11749  00410C  0E01               	movlw	1
 11750  00410E  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11751                           
 11752                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11753  004110  0E00               	movlw	0
 11754  004112  6FEB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11755                           
 11756                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11757  004114  0E00               	movlw	0
 11758  004116  6FEA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11759                           
 11760                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11761  004118  0E00               	movlw	0
 11762  00411A  6FF2               	movwf	_USBBusIsSuspended& (0+255),b
 11763                           
 11764                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11765  00411C  0E00               	movlw	0
 11766  00411E  6E09               	movwf	USBDeviceInit@i,c
 11767  004120                     l14288:
 11768                           
 11769                           ; BSR set to: 0
 11770  004120  0E02               	movlw	2
 11771  004122  6409               	cpfsgt	USBDeviceInit@i,c
 11772  004124  D001               	goto	l143
 11773  004126  D02E               	goto	u11250
 11774  004128                     l143:
 11775                           
 11776                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11777                           
 11778                           ; BSR set to: 0
 11779  004128  5009               	movf	USBDeviceInit@i,w,c
 11780  00412A  0D02               	mullw	2
 11781  00412C  0EC5               	movlw	low _pBDTEntryIn
 11782  00412E  24F3               	addwf	prodl,w,c
 11783  004130  6ED9               	movwf	fsr2l,c
 11784  004132  0E00               	movlw	high _pBDTEntryIn
 11785  004134  20F4               	addwfc	prodh,w,c
 11786  004136  6EDA               	movwf	fsr2h,c
 11787  004138  0E00               	movlw	0
 11788  00413A  6EDE               	movwf	postinc2,c
 11789  00413C  0E00               	movlw	0
 11790  00413E  6EDD               	movwf	postdec2,c
 11791                           
 11792                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11793  004140  5009               	movf	USBDeviceInit@i,w,c
 11794  004142  0D02               	mullw	2
 11795  004144  0E40               	movlw	low _pBDTEntryOut
 11796  004146  24F3               	addwf	prodl,w,c
 11797  004148  6ED9               	movwf	fsr2l,c
 11798  00414A  0E01               	movlw	high _pBDTEntryOut
 11799  00414C  20F4               	addwfc	prodh,w,c
 11800  00414E  6EDA               	movwf	fsr2h,c
 11801  004150  0E00               	movlw	0
 11802  004152  6EDE               	movwf	postinc2,c
 11803  004154  0E00               	movlw	0
 11804  004156  6EDD               	movwf	postdec2,c
 11805                           
 11806                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 11807  004158  5009               	movf	USBDeviceInit@i,w,c
 11808  00415A  0D01               	mullw	1
 11809  00415C  0E6B               	movlw	low _ep_data_in
 11810  00415E  24F3               	addwf	prodl,w,c
 11811  004160  6ED9               	movwf	fsr2l,c
 11812  004162  0E01               	movlw	high _ep_data_in
 11813  004164  20F4               	addwfc	prodh,w,c
 11814  004166  6EDA               	movwf	fsr2h,c
 11815  004168  0E00               	movlw	0
 11816  00416A  6EDF               	movwf	indf2,c
 11817                           
 11818                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 11819  00416C  5009               	movf	USBDeviceInit@i,w,c
 11820  00416E  0D01               	mullw	1
 11821  004170  0E68               	movlw	low _ep_data_out
 11822  004172  24F3               	addwf	prodl,w,c
 11823  004174  6ED9               	movwf	fsr2l,c
 11824  004176  0E01               	movlw	high _ep_data_out
 11825  004178  20F4               	addwfc	prodh,w,c
 11826  00417A  6EDA               	movwf	fsr2h,c
 11827  00417C  0E00               	movlw	0
 11828  00417E  6EDF               	movwf	indf2,c
 11829  004180  2A09               	incf	USBDeviceInit@i,f,c
 11830  004182  D7CE               	goto	l14288
 11831  004184                     u11250:
 11832                           
 11833                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11834  004184  0E08               	movlw	8
 11835  004186  0100               	movlb	0	; () banked
 11836  004188  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 11837  00418A  0E0D               	movlw	13
 11838  00418C  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 11842  00418E  0E16               	movlw	22
 11843  004190  010F               	movlb	15	; () banked
 11844  004192  6F26               	movwf	38,b	;volatile
 11845                           
 11846                           ; BSR set to: 15
 11847                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 11848  004194  0E0D               	movlw	13
 11849  004196  010D               	movlb	13	; () banked
 11850  004198  6F03               	movwf	3,b	;volatile
 11851  00419A  0E30               	movlw	48
 11852  00419C  6F02               	movwf	2,b	;volatile
 11853                           
 11854                           ; BSR set to: 13
 11855                           ;usb_device.c: 359: BDT[0].CNT = 8;
 11856  00419E  0E08               	movlw	8
 11857  0041A0  6F01               	movwf	1,b	;volatile
 11858                           
 11859                           ; BSR set to: 13
 11860                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 11861  0041A2  0E04               	movlw	4
 11862  0041A4  6F00               	movwf	0,b	;volatile
 11863                           
 11864                           ; BSR set to: 13
 11865                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 11866  0041A6  8F00               	bsf	0,7,b	;volatile
 11867                           
 11868                           ; BSR set to: 13
 11869                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 11870  0041A8  0E00               	movlw	0
 11871  0041AA  0100               	movlb	0	; () banked
 11872  0041AC  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;usb_device.c: 366: USB1msTickCount = 0;
 11876  0041AE  0E00               	movlw	0
 11877  0041B0  0101               	movlb	1	; () banked
 11878  0041B2  6F5E               	movwf	_USB1msTickCount& (0+255),b
 11879  0041B4  0E00               	movlw	0
 11880  0041B6  6F5F               	movwf	(_USB1msTickCount+1)& (0+255),b
 11881  0041B8  0E00               	movlw	0
 11882  0041BA  6F60               	movwf	(_USB1msTickCount+2)& (0+255),b
 11883  0041BC  0E00               	movlw	0
 11884  0041BE  6F61               	movwf	(_USB1msTickCount+3)& (0+255),b
 11885                           
 11886                           ; BSR set to: 1
 11887                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 11888  0041C0  0E00               	movlw	0
 11889  0041C2  0100               	movlb	0	; () banked
 11890  0041C4  6FE9               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 11894  0041C6  0E00               	movlw	0
 11895  0041C8  6FF6               	movwf	_USBDeviceState& (0+255),b
 11896                           
 11897                           ; BSR set to: 0
 11898  0041CA  0012               	return		;funcret
 11899  0041CC                     __end_of_USBDeviceInit:
 11900                           	opt stack 0
 11901                           tblptru	equ	0xFF8
 11902                           tblptrh	equ	0xFF7
 11903                           tblptrl	equ	0xFF6
 11904                           tablat	equ	0xFF5
 11905                           prodh	equ	0xFF4
 11906                           prodl	equ	0xFF3
 11907                           intcon	equ	0xFF2
 11908                           intcon2	equ	0xFF1
 11909                           intcon3	equ	0xFF0
 11910                           postinc0	equ	0xFEE
 11911                           wreg	equ	0xFE8
 11912                           indf1	equ	0xFE7
 11913                           postdec1	equ	0xFE5
 11914                           plusw1	equ	0xFE3
 11915                           fsr1h	equ	0xFE2
 11916                           fsr1l	equ	0xFE1
 11917                           indf2	equ	0xFDF
 11918                           postinc2	equ	0xFDE
 11919                           postdec2	equ	0xFDD
 11920                           plusw2	equ	0xFDB
 11921                           fsr2h	equ	0xFDA
 11922                           fsr2l	equ	0xFD9
 11923                           status	equ	0xFD8
 11924                           
 11925 ;; *************** function _USBCtrlEPService *****************
 11926 ;; Defined at:
 11927 ;;		line 2374 in file "usb_device.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;		None
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;		None
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11945 ;;Total ram usage:        2 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:    7
 11948 ;; This function calls:
 11949 ;;		_USBCtrlTrfInHandler
 11950 ;;		_USBCtrlTrfOutHandler
 11951 ;;		_USBCtrlTrfSetupHandler
 11952 ;;		_memcpy
 11953 ;; This function is called by:
 11954 ;;		_USBDeviceTasks
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text57
 11959  006110                     __ptext57:
 11960                           	opt stack 0
 11961  006110                     _USBCtrlEPService:
 11962                           	opt stack 22
 11963                           
 11964                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;incstack = 0
 11968  006110  0E2D               	movlw	45
 11969  006112  0100               	movlb	0	; () banked
 11970  006114  6FEF               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 11974  006116  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 11975  00611A  0EFD               	movlw	253
 11976  00611C  161E               	andwf	??_USBCtrlEPService,f,c
 11977  00611E  A4D8               	btfss	status,2,c
 11978  006120  D044               	goto	l309
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 11982  006122  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 11983  006126  90D8               	bcf	status,0,c
 11984  006128  321E               	rrcf	??_USBCtrlEPService,f,c
 11985  00612A  0E3F               	movlw	63
 11986  00612C  161E               	andwf	??_USBCtrlEPService,f,c
 11987  00612E  501E               	movf	??_USBCtrlEPService,w,c
 11988  006130  0D04               	mullw	4
 11989  006132  0E00               	movlw	0
 11990  006134  24F3               	addwf	prodl,w,c
 11991  006136  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 11992  006138  0E0D               	movlw	13
 11993  00613A  20F4               	addwfc	prodh,w,c
 11994  00613C  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11998  00613E  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 11999  006142  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12003  006146  0E04               	movlw	4
 12004  006148  19D9               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12005  00614A  6FD9               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12006  00614C  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12007  00614E  6FDA               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12011  006150  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12012  006154  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12013  006158  30DF               	rrcf	223,w,c
 12014  00615A  32E8               	rrcf	wreg,f,c
 12015  00615C  0B0F               	andlw	15
 12016  00615E  0A0D               	xorlw	13
 12017  006160  A4D8               	btfss	status,2,c
 12018  006162  D020               	goto	l310
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12022  006164  0E30               	movlw	48
 12023  006166  6E01               	movwf	memcpy@d1,c
 12024  006168  0E0D               	movlw	13
 12025  00616A  6E02               	movwf	memcpy@d1+1,c
 12026  00616C  EE20 F002          	lfsr	2,2
 12027  006170  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12028  006172  26D9               	addwf	fsr2l,f,c
 12029  006174  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12030  006176  22DA               	addwfc	fsr2h,f,c
 12031  006178  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12032  00617C  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12033  006180  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12034  006184  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12035  006188  5003               	movf	memcpy@s1,w,c
 12036  00618A  1004               	iorwf	memcpy@s1+1,w,c
 12037  00618C  A4D8               	btfss	status,2,c
 12038  00618E  0E20               	movlw	32
 12039  006190  6E05               	movwf	memcpy@s1+2,c
 12040  006192  0E00               	movlw	0
 12041  006194  6E07               	movwf	memcpy@n+1,c
 12042  006196  0E08               	movlw	8
 12043  006198  6E06               	movwf	memcpy@n,c
 12044  00619A  ECF0  F03A         	call	_memcpy	;wreg free
 12045                           
 12046                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12047  00619E  EC33  F035         	call	_USBCtrlTrfSetupHandler	;wreg free
 12048                           
 12049                           ;usb_device.c: 2411: }
 12050  0061A2  0012               	return	
 12051  0061A4                     l310:
 12052                           
 12053                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12054  0061A4  ECE6  F03B         	call	_USBCtrlTrfOutHandler	;wreg free
 12055                           
 12056                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12057  0061A8  0012               	return	
 12058  0061AA                     l309:
 12059                           
 12060                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12061  0061AA  0100               	movlb	0	; () banked
 12062  0061AC  51FD               	movf	_USTATcopy& (0+255),w,b
 12063  0061AE  0BFD               	andlw	253
 12064  0061B0  0A04               	xorlw	4
 12065  0061B2  A4D8               	btfss	status,2,c
 12066  0061B4  0012               	return	
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12070  0061B6  EC8A  F02D         	call	_USBCtrlTrfInHandler	;wreg free
 12071  0061BA  0012               	return	
 12072  0061BC                     __end_of_USBCtrlEPService:
 12073                           	opt stack 0
 12074                           tblptru	equ	0xFF8
 12075                           tblptrh	equ	0xFF7
 12076                           tblptrl	equ	0xFF6
 12077                           tablat	equ	0xFF5
 12078                           prodh	equ	0xFF4
 12079                           prodl	equ	0xFF3
 12080                           intcon	equ	0xFF2
 12081                           intcon2	equ	0xFF1
 12082                           intcon3	equ	0xFF0
 12083                           postinc0	equ	0xFEE
 12084                           wreg	equ	0xFE8
 12085                           indf1	equ	0xFE7
 12086                           postdec1	equ	0xFE5
 12087                           plusw1	equ	0xFE3
 12088                           fsr1h	equ	0xFE2
 12089                           fsr1l	equ	0xFE1
 12090                           indf2	equ	0xFDF
 12091                           postinc2	equ	0xFDE
 12092                           postdec2	equ	0xFDD
 12093                           plusw2	equ	0xFDB
 12094                           fsr2h	equ	0xFDA
 12095                           fsr2l	equ	0xFD9
 12096                           status	equ	0xFD8
 12097                           
 12098 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12099 ;; Defined at:
 12100 ;;		line 2467 in file "usb_device.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12118 ;;Total ram usage:        0 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    6
 12121 ;; This function calls:
 12122 ;;		_USBCheckStdRequest
 12123 ;;		_USBCtrlEPServiceComplete
 12124 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12125 ;; This function is called by:
 12126 ;;		_USBCtrlEPService
 12127 ;; This function uses a non-reentrant model
 12128 ;;
 12129                           
 12130                           	psect	text58
 12131  006A66                     __ptext58:
 12132                           	opt stack 0
 12133  006A66                     _USBCtrlTrfSetupHandler:
 12134                           	opt stack 22
 12135                           
 12136                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12137                           
 12138                           ;incstack = 0
 12139  006A66  0E00               	movlw	0
 12140  006A68  0100               	movlb	0	; () banked
 12141  006A6A  6FF5               	movwf	_shortPacketStatus& (0+255),b
 12142                           
 12143                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12144  006A6C  0E00               	movlw	0
 12145  006A6E  6FEE               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12146                           
 12147                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12148  006A70  0E00               	movlw	0
 12149  006A72  6FEB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12150                           
 12151                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12152  006A74  0E00               	movlw	0
 12153  006A76  6FEA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12154                           
 12155                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12156  006A78  0E00               	movlw	0
 12157  006A7A  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12158                           
 12159                           ;usb_device.c: 2477: controlTransferState = 0;
 12160  006A7C  0E00               	movlw	0
 12161  006A7E  6FF4               	movwf	_controlTransferState& (0+255),b
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12165  006A80  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12166  006A84  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12167  006A88  0E7F               	movlw	127
 12168  006A8A  16DF               	andwf	indf2,f,c
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12172  006A8C  0E04               	movlw	4
 12173  006A8E  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 12174  006A90  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 12175  006A92  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12176  006A94  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12180  006A96  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12181  006A9A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12182  006A9E  0E7F               	movlw	127
 12183  006AA0  16DF               	andwf	indf2,f,c
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12187  006AA2  0E04               	movlw	4
 12188  006AA4  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 12189  006AA6  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 12190  006AA8  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12191  006AAA  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12195  006AAC  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12196  006AB0  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12197  006AB4  0E7F               	movlw	127
 12198  006AB6  16DF               	andwf	indf2,f,c
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12202  006AB8  0E00               	movlw	0
 12203  006ABA  6FC2               	movwf	(_inPipes+3)& (0+255),b
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12207  006ABC  0E00               	movlw	0
 12208  006ABE  6FC4               	movwf	(_inPipes+5)& (0+255),b
 12209  006AC0  0E00               	movlw	0
 12210  006AC2  6FC3               	movwf	(_inPipes+4)& (0+255),b
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12214  006AC4  0E00               	movlw	0
 12215  006AC6  0101               	movlb	1	; () banked
 12216  006AC8  6F34               	movwf	(_outPipes+3)& (0+255),b
 12217                           
 12218                           ; BSR set to: 1
 12219                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12220  006ACA  0E00               	movlw	0
 12221  006ACC  6F36               	movwf	(_outPipes+5)& (0+255),b
 12222  006ACE  0E00               	movlw	0
 12223  006AD0  6F35               	movwf	(_outPipes+4)& (0+255),b
 12224                           
 12225                           ; BSR set to: 1
 12226                           ;usb_device.c: 2502: USBCheckStdRequest();
 12227  006AD2  EC63  F028         	call	_USBCheckStdRequest	;wreg free
 12228                           
 12229                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12230  006AD6  0E00               	movlw	0
 12231  006AD8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12232  006ADA  0E03               	movlw	3
 12233  006ADC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12234  006ADE  0E00               	movlw	0
 12235  006AE0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12236  006AE2  0E00               	movlw	0
 12237  006AE4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12238  006AE6  0E00               	movlw	0
 12239  006AE8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12240  006AEA  0E00               	movlw	0
 12241  006AEC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12242  006AEE  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12243                           
 12244                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12245  006AF2  EC6D  F027         	call	_USBCtrlEPServiceComplete	;wreg free
 12246  006AF6  0012               	return		;funcret
 12247  006AF8                     __end_of_USBCtrlTrfSetupHandler:
 12248                           	opt stack 0
 12249                           tblptru	equ	0xFF8
 12250                           tblptrh	equ	0xFF7
 12251                           tblptrl	equ	0xFF6
 12252                           tablat	equ	0xFF5
 12253                           prodh	equ	0xFF4
 12254                           prodl	equ	0xFF3
 12255                           intcon	equ	0xFF2
 12256                           intcon2	equ	0xFF1
 12257                           intcon3	equ	0xFF0
 12258                           postinc0	equ	0xFEE
 12259                           wreg	equ	0xFE8
 12260                           indf1	equ	0xFE7
 12261                           postdec1	equ	0xFE5
 12262                           plusw1	equ	0xFE3
 12263                           fsr1h	equ	0xFE2
 12264                           fsr1l	equ	0xFE1
 12265                           indf2	equ	0xFDF
 12266                           postinc2	equ	0xFDE
 12267                           postdec2	equ	0xFDD
 12268                           plusw2	equ	0xFDB
 12269                           fsr2h	equ	0xFDA
 12270                           fsr2l	equ	0xFD9
 12271                           status	equ	0xFD8
 12272                           
 12273 ;; *************** function _USBCtrlEPServiceComplete *****************
 12274 ;; Defined at:
 12275 ;;		line 1618 in file "usb_device.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;		None
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      void 
 12282 ;; Registers used:
 12283 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:    2
 12296 ;; This function calls:
 12297 ;;		_USBCtrlEPAllowDataStage
 12298 ;;		_USBCtrlEPAllowStatusStage
 12299 ;; This function is called by:
 12300 ;;		_USBCtrlTrfSetupHandler
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           	psect	text59
 12305  004EDA                     __ptext59:
 12306                           	opt stack 0
 12307  004EDA                     _USBCtrlEPServiceComplete:
 12308                           	opt stack 25
 12309                           
 12310                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12311                           
 12312                           ;incstack = 0
 12313  004EDA  9865               	bcf	3941,4,c	;volatile
 12314                           
 12315                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12316  004EDC  0100               	movlb	0	; () banked
 12317  004EDE  BFC2               	btfsc	(_inPipes+3)& (0+255),7,b
 12318  004EE0  D03C               	goto	l219
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12322  004EE2  0101               	movlb	1	; () banked
 12323  004EE4  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12324  004EE6  D00D               	goto	l220
 12325                           
 12326                           ; BSR set to: 1
 12327                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12328  004EE8  0E02               	movlw	2
 12329  004EEA  0100               	movlb	0	; () banked
 12330  004EEC  6FF4               	movwf	_controlTransferState& (0+255),b
 12331                           
 12332                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12333  004EEE  51EA               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12334  004EF0  B4D8               	btfsc	status,2,c
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12338  004EF2  EC1E  F033         	call	_USBCtrlEPAllowDataStage	;wreg free
 12339                           
 12340                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12341  004EF6  0E00               	movlw	0
 12342  004EF8  0100               	movlb	0	; () banked
 12343  004EFA  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12347  004EFC  0E00               	movlw	0
 12348  004EFE  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12349                           
 12350                           ;usb_device.c: 1654: }
 12351  004F00  0012               	return	
 12352  004F02                     l220:
 12353                           
 12354                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12355                           
 12356                           ; BSR set to: 0
 12357  004F02  0100               	movlb	0	; () banked
 12358  004F04  EE20 F001          	lfsr	2,1
 12359  004F08  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12360  004F0A  26D9               	addwf	fsr2l,f,c
 12361  004F0C  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12362  004F0E  22DA               	addwfc	fsr2h,f,c
 12363  004F10  0E08               	movlw	8
 12364  004F12  6EDF               	movwf	indf2,c
 12365                           
 12366                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12367  004F14  EE20 F002          	lfsr	2,2
 12368  004F18  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12369  004F1A  26D9               	addwf	fsr2l,f,c
 12370  004F1C  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12371  004F1E  22DA               	addwfc	fsr2h,f,c
 12372  004F20  0E30               	movlw	48
 12373  004F22  6EDE               	movwf	postinc2,c
 12374  004F24  0E0D               	movlw	13
 12375  004F26  6EDD               	movwf	postdec2,c
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12379  004F28  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12380  004F2C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12381  004F30  0E0C               	movlw	12
 12382  004F32  6EDF               	movwf	indf2,c
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12386  004F34  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12387  004F38  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12388  004F3C  0E00               	movlw	0
 12389  004F3E  8EDB               	bsf	plusw2,7,c
 12390                           
 12391                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12392  004F40  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12393  004F44  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12394  004F48  0E04               	movlw	4
 12395  004F4A  6EDF               	movwf	indf2,c
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12399  004F4C  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12400  004F50  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12401  004F54  0E00               	movlw	0
 12402  004F56  8EDB               	bsf	plusw2,7,c
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12406  004F58  0012               	return	
 12407  004F5A                     l219:
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12411  004F5A  010D               	movlb	13	; () banked
 12412  004F5C  AF30               	btfss	48,7,b	;volatile
 12413  004F5E  D012               	goto	l224
 12414                           
 12415                           ; BSR set to: 13
 12416                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12417  004F60  0E01               	movlw	1
 12418  004F62  0100               	movlb	0	; () banked
 12419  004F64  6FF4               	movwf	_controlTransferState& (0+255),b
 12420                           
 12421                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12422  004F66  51EB               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12423  004F68  B4D8               	btfsc	status,2,c
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12427  004F6A  EC1E  F033         	call	_USBCtrlEPAllowDataStage	;wreg free
 12428                           
 12429                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12430  004F6E  0E00               	movlw	0
 12431  004F70  0100               	movlb	0	; () banked
 12432  004F72  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12436  004F74  0E00               	movlw	0
 12437  004F76  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12441  004F78  51EE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12442  004F7A  A4D8               	btfss	status,2,c
 12443  004F7C  0012               	return	
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12447  004F7E  ECEE  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12448                           
 12449                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12450  004F82  0012               	return	
 12451  004F84                     l224:
 12452                           
 12453                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12454  004F84  0E02               	movlw	2
 12455  004F86  0100               	movlb	0	; () banked
 12456  004F88  6FF4               	movwf	_controlTransferState& (0+255),b
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 12460  004F8A  EE20 F001          	lfsr	2,1
 12461  004F8E  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12462  004F90  26D9               	addwf	fsr2l,f,c
 12463  004F92  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12464  004F94  22DA               	addwfc	fsr2h,f,c
 12465  004F96  0E08               	movlw	8
 12466  004F98  6EDF               	movwf	indf2,c
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12470  004F9A  EE20 F002          	lfsr	2,2
 12471  004F9E  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12472  004FA0  26D9               	addwf	fsr2l,f,c
 12473  004FA2  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12474  004FA4  22DA               	addwfc	fsr2h,f,c
 12475  004FA6  0E30               	movlw	48
 12476  004FA8  6EDE               	movwf	postinc2,c
 12477  004FAA  0E0D               	movlw	13
 12478  004FAC  6EDD               	movwf	postdec2,c
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12482  004FAE  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12483  004FB2  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12484  004FB6  0E04               	movlw	4
 12485  004FB8  6EDF               	movwf	indf2,c
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12489  004FBA  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12490  004FBE  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12491  004FC2  0E00               	movlw	0
 12492  004FC4  8EDB               	bsf	plusw2,7,c
 12493                           
 12494                           ; BSR set to: 0
 12495                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 12496  004FC6  0E00               	movlw	0
 12497  004FC8  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 12501  004FCA  0E00               	movlw	0
 12502  004FCC  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 12506  004FCE  51EE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12507  004FD0  A4D8               	btfss	status,2,c
 12508  004FD2  0012               	return	
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 12512  004FD4  ECEE  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12513  004FD8  0012               	return	
 12514  004FDA                     __end_of_USBCtrlEPServiceComplete:
 12515                           	opt stack 0
 12516                           tblptru	equ	0xFF8
 12517                           tblptrh	equ	0xFF7
 12518                           tblptrl	equ	0xFF6
 12519                           tablat	equ	0xFF5
 12520                           prodh	equ	0xFF4
 12521                           prodl	equ	0xFF3
 12522                           intcon	equ	0xFF2
 12523                           intcon2	equ	0xFF1
 12524                           intcon3	equ	0xFF0
 12525                           postinc0	equ	0xFEE
 12526                           wreg	equ	0xFE8
 12527                           indf1	equ	0xFE7
 12528                           postdec1	equ	0xFE5
 12529                           plusw1	equ	0xFE3
 12530                           fsr1h	equ	0xFE2
 12531                           fsr1l	equ	0xFE1
 12532                           indf2	equ	0xFDF
 12533                           postinc2	equ	0xFDE
 12534                           postdec2	equ	0xFDD
 12535                           plusw2	equ	0xFDB
 12536                           fsr2h	equ	0xFDA
 12537                           fsr2l	equ	0xFD9
 12538                           status	equ	0xFD8
 12539                           
 12540 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12541 ;; Defined at:
 12542 ;;		line 1490 in file "usb_device.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;		None
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;		None
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      void 
 12549 ;; Registers used:
 12550 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12560 ;;Total ram usage:        0 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:    1
 12563 ;; This function calls:
 12564 ;;		_USBCtrlTrfTxService
 12565 ;; This function is called by:
 12566 ;;		_USBCtrlEPServiceComplete
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text60
 12571  00663C                     __ptext60:
 12572                           	opt stack 0
 12573  00663C                     _USBCtrlEPAllowDataStage:
 12574                           	opt stack 25
 12575                           
 12576                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 12577                           
 12578                           ;incstack = 0
 12579  00663C  0E00               	movlw	0
 12580  00663E  0100               	movlb	0	; () banked
 12581  006640  6FEB               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12582                           
 12583                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 12584  006642  0E00               	movlw	0
 12585  006644  6FEA               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;usb_device.c: 1495: if(controlTransferState == 2)
 12589  006646  0E02               	movlw	2
 12590  006648  19F4               	xorwf	_controlTransferState& (0+255),w,b
 12591  00664A  A4D8               	btfss	status,2,c
 12592  00664C  D01F               	goto	l208
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 12596  00664E  EE20 F001          	lfsr	2,1
 12597  006652  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12598  006654  26D9               	addwf	fsr2l,f,c
 12599  006656  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12600  006658  22DA               	addwfc	fsr2h,f,c
 12601  00665A  0E08               	movlw	8
 12602  00665C  6EDF               	movwf	indf2,c
 12603                           
 12604                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12605  00665E  EE20 F002          	lfsr	2,2
 12606  006662  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12607  006664  26D9               	addwf	fsr2l,f,c
 12608  006666  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12609  006668  22DA               	addwfc	fsr2h,f,c
 12610  00666A  0E38               	movlw	56
 12611  00666C  6EDE               	movwf	postinc2,c
 12612  00666E  0E0D               	movlw	13
 12613  006670  6EDD               	movwf	postdec2,c
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12617  006672  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12618  006676  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12619  00667A  0E48               	movlw	72
 12620  00667C  6EDF               	movwf	indf2,c
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12624  00667E  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12625  006682  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12626  006686  0E00               	movlw	0
 12627  006688  8EDB               	bsf	plusw2,7,c
 12628                           
 12629                           ;usb_device.c: 1502: }
 12630  00668A  0012               	return	
 12631  00668C                     l208:
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 12635                           
 12636                           ; BSR set to: 0
 12637  00668C  51C3               	movf	(_inPipes+4)& (0+255),w,b
 12638  00668E  010D               	movlb	13	; () banked
 12639  006690  5D36               	subwf	54,w,b	;volatile
 12640  006692  0100               	movlb	0	; () banked
 12641  006694  51C4               	movf	(_inPipes+5)& (0+255),w,b
 12642  006696  010D               	movlb	13	; () banked
 12643  006698  5937               	subwfb	55,w,b	;volatile
 12644  00669A  B0D8               	btfsc	status,0,c
 12645  00669C  D004               	goto	l210
 12646                           
 12647                           ; BSR set to: 13
 12648                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 12649  00669E  CD36 F0C3          	movff	3382,_inPipes+4	;volatile
 12650  0066A2  CD37 F0C4          	movff	3383,_inPipes+5	;volatile
 12651  0066A6                     l210:
 12652                           
 12653                           ; BSR set to: 13
 12654                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 12655                           
 12656                           ; BSR set to: 13
 12657  0066A6  ECE6  F02B         	call	_USBCtrlTrfTxService	;wreg free
 12658                           
 12659                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12660  0066AA  0100               	movlb	0	; () banked
 12661  0066AC  EE20 F002          	lfsr	2,2
 12662  0066B0  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 12663  0066B2  26D9               	addwf	fsr2l,f,c
 12664  0066B4  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12665  0066B6  22DA               	addwfc	fsr2h,f,c
 12666  0066B8  0E38               	movlw	56
 12667  0066BA  6EDE               	movwf	postinc2,c
 12668  0066BC  0E0D               	movlw	13
 12669  0066BE  6EDD               	movwf	postdec2,c
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12673  0066C0  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12674  0066C4  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12675  0066C8  0E48               	movlw	72
 12676  0066CA  6EDF               	movwf	indf2,c
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12680  0066CC  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 12681  0066D0  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12682  0066D4  0E00               	movlw	0
 12683  0066D6  8EDB               	bsf	plusw2,7,c
 12684  0066D8  0012               	return	
 12685  0066DA                     __end_of_USBCtrlEPAllowDataStage:
 12686                           	opt stack 0
 12687                           tblptru	equ	0xFF8
 12688                           tblptrh	equ	0xFF7
 12689                           tblptrl	equ	0xFF6
 12690                           tablat	equ	0xFF5
 12691                           prodh	equ	0xFF4
 12692                           prodl	equ	0xFF3
 12693                           intcon	equ	0xFF2
 12694                           intcon2	equ	0xFF1
 12695                           intcon3	equ	0xFF0
 12696                           postinc0	equ	0xFEE
 12697                           wreg	equ	0xFE8
 12698                           indf1	equ	0xFE7
 12699                           postdec1	equ	0xFE5
 12700                           plusw1	equ	0xFE3
 12701                           fsr1h	equ	0xFE2
 12702                           fsr1l	equ	0xFE1
 12703                           indf2	equ	0xFDF
 12704                           postinc2	equ	0xFDE
 12705                           postdec2	equ	0xFDD
 12706                           plusw2	equ	0xFDB
 12707                           fsr2h	equ	0xFDA
 12708                           fsr2l	equ	0xFD9
 12709                           status	equ	0xFD8
 12710                           
 12711 ;; *************** function _USBCheckStdRequest *****************
 12712 ;; Defined at:
 12713 ;;		line 2688 in file "usb_device.c"
 12714 ;; Parameters:    Size  Location     Type
 12715 ;;		None
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;		None
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      void 
 12720 ;; Registers used:
 12721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12731 ;;Total ram usage:        0 bytes
 12732 ;; Hardware stack levels used:    1
 12733 ;; Hardware stack levels required when called:    5
 12734 ;; This function calls:
 12735 ;;		_USBStdFeatureReqHandler
 12736 ;;		_USBStdGetDscHandler
 12737 ;;		_USBStdGetStatusHandler
 12738 ;;		_USBStdSetCfgHandler
 12739 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12740 ;; This function is called by:
 12741 ;;		_USBCtrlTrfSetupHandler
 12742 ;; This function uses a non-reentrant model
 12743 ;;
 12744                           
 12745                           	psect	text61
 12746  0050C6                     __ptext61:
 12747                           	opt stack 0
 12748  0050C6                     _USBCheckStdRequest:
 12749                           	opt stack 22
 12750                           
 12751                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;incstack = 0
 12755  0050C6  010D               	movlb	13	; () banked
 12756  0050C8  3930               	swapf	48,w,b	;volatile
 12757  0050CA  32E8               	rrcf	wreg,f,c
 12758  0050CC  0B03               	andlw	3
 12759  0050CE  0900               	iorlw	0
 12760  0050D0  A4D8               	btfss	status,2,c
 12761  0050D2  0012               	return	
 12762  0050D4  D047               	goto	l343
 12763  0050D6                     l344:
 12764                           
 12765                           ; BSR set to: 13
 12766                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 12767  0050D6  0100               	movlb	0	; () banked
 12768  0050D8  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 12772  0050DA  0E08               	movlw	8
 12773  0050DC  6FF6               	movwf	_USBDeviceState& (0+255),b
 12774                           
 12775                           ;usb_device.c: 2698: break;
 12776  0050DE  0012               	return	
 12777  0050E0                     
 12778                           ;usb_device.c: 2700: USBStdGetDscHandler();
 12779                           
 12780                           ; BSR set to: 0
 12781  0050E0  EC8B  F021         	call	_USBStdGetDscHandler	;wreg free
 12782                           
 12783                           ;usb_device.c: 2701: break;
 12784  0050E4  0012               	return	
 12785  0050E6                     
 12786                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 12787  0050E6  ECD4  F028         	call	_USBStdSetCfgHandler	;wreg free
 12788                           
 12789                           ;usb_device.c: 2704: break;
 12790  0050EA  0012               	return	
 12791  0050EC                     
 12792                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12793  0050EC  0EFE               	movlw	low _USBActiveConfiguration
 12794  0050EE  0100               	movlb	0	; () banked
 12795  0050F0  6FBF               	movwf	_inPipes& (0+255),b
 12796  0050F2  0E00               	movlw	high _USBActiveConfiguration
 12797  0050F4  6FC0               	movwf	(_inPipes+1)& (0+255),b
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12801  0050F6  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 12805  0050F8  0E01               	movlw	1
 12806  0050FA  6FC3               	movwf	(_inPipes+4)& (0+255),b
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 12810  0050FC  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12811                           
 12812                           ;usb_device.c: 2710: break;
 12813  0050FE  0012               	return	
 12814  005100                     
 12815                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 12816                           
 12817                           ; BSR set to: 0
 12818  005100  ECDE  F030         	call	_USBStdGetStatusHandler	;wreg free
 12819                           
 12820                           ;usb_device.c: 2713: break;
 12821  005104  0012               	return	
 12822  005106                     
 12823                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 12824  005106  EC24  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 12825                           
 12826                           ;usb_device.c: 2717: break;
 12827  00510A  0012               	return	
 12828  00510C                     
 12829                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 12830  00510C  010D               	movlb	13	; () banked
 12831  00510E  5134               	movf	52,w,b	;volatile
 12832  005110  0D01               	mullw	1
 12833  005112  0ED7               	movlw	low _USBAlternateInterface
 12834  005114  24F3               	addwf	prodl,w,c
 12835  005116  0100               	movlb	0	; () banked
 12836  005118  6FBF               	movwf	_inPipes& (0+255),b
 12837  00511A  0E01               	movlw	high _USBAlternateInterface
 12838  00511C  20F4               	addwfc	prodh,w,c
 12839  00511E  6FC0               	movwf	(_inPipes+1)& (0+255),b
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12843  005120  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 12847  005122  0E01               	movlw	1
 12848  005124  6FC3               	movwf	(_inPipes+4)& (0+255),b
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 12852  005126  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12853                           
 12854                           ;usb_device.c: 2723: break;
 12855  005128  0012               	return	
 12856  00512A                     l353:
 12857                           
 12858                           ; BSR set to: 13
 12859                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 12860  00512A  0100               	movlb	0	; () banked
 12861  00512C  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 12865  00512E  010D               	movlb	13	; () banked
 12866  005130  5134               	movf	52,w,b	;volatile
 12867  005132  0D01               	mullw	1
 12868  005134  0ED7               	movlw	low _USBAlternateInterface
 12869  005136  24F3               	addwf	prodl,w,c
 12870  005138  6ED9               	movwf	fsr2l,c
 12871  00513A  0E01               	movlw	high _USBAlternateInterface
 12872  00513C  20F4               	addwfc	prodh,w,c
 12873  00513E  6EDA               	movwf	fsr2h,c
 12874  005140  CD32 FFDF          	movff	3378,indf2	;volatile
 12875                           
 12876                           ;usb_device.c: 2727: break;
 12877  005144  0012               	return	
 12878  005146                     
 12879                           ; BSR set to: 13
 12880                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12881                           
 12882                           ; BSR set to: 13
 12883  005146  0E00               	movlw	0
 12884  005148  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12885  00514A  0E02               	movlw	2
 12886  00514C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12887  00514E  0E00               	movlw	0
 12888  005150  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12889  005152  0E00               	movlw	0
 12890  005154  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12891  005156  0E00               	movlw	0
 12892  005158  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12893  00515A  0E00               	movlw	0
 12894  00515C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12895  00515E  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12896                           
 12897                           ;usb_device.c: 2734: }
 12898                           
 12899                           ;usb_device.c: 2733: break;
 12900                           
 12901                           ;usb_device.c: 2732: default:
 12902                           
 12903                           ;usb_device.c: 2731: case 12:
 12904                           
 12905                           ;usb_device.c: 2730: break;
 12906  005162  0012               	return	
 12907  005164                     l343:
 12908  005164  010D               	movlb	13	; () banked
 12909  005166  5131               	movf	49,w,b	;volatile
 12910                           
 12911                           ; Switch size 1, requested type "space"
 12912                           ; Number of cases is 11, Range of values is 0 to 12
 12913                           ; switch strategies available:
 12914                           ; Name         Instructions Cycles
 12915                           ; simple_byte           34    18 (average)
 12916                           ;	Chosen strategy is simple_byte
 12917  005168  0A00               	xorlw	0	; case 0
 12918  00516A  B4D8               	btfsc	status,2,c
 12919  00516C  D7C9               	goto	l349
 12920  00516E  0A01               	xorlw	1	; case 1
 12921  005170  B4D8               	btfsc	status,2,c
 12922  005172  D7C9               	goto	l350
 12923  005174  0A02               	xorlw	2	; case 3
 12924  005176  B4D8               	btfsc	status,2,c
 12925  005178  D7C6               	goto	l350
 12926  00517A  0A06               	xorlw	6	; case 5
 12927  00517C  B4D8               	btfsc	status,2,c
 12928  00517E  D7AB               	goto	l344
 12929  005180  0A03               	xorlw	3	; case 6
 12930  005182  B4D8               	btfsc	status,2,c
 12931  005184  D7AD               	goto	l346
 12932  005186  0A01               	xorlw	1	; case 7
 12933  005188  B4D8               	btfsc	status,2,c
 12934  00518A  D7DD               	goto	l354
 12935  00518C  0A0F               	xorlw	15	; case 8
 12936  00518E  B4D8               	btfsc	status,2,c
 12937  005190  D7AD               	goto	l348
 12938  005192  0A01               	xorlw	1	; case 9
 12939  005194  B4D8               	btfsc	status,2,c
 12940  005196  D7A7               	goto	l347
 12941  005198  0A03               	xorlw	3	; case 10
 12942  00519A  B4D8               	btfsc	status,2,c
 12943  00519C  D7B7               	goto	l352
 12944  00519E  0A01               	xorlw	1	; case 11
 12945  0051A0  B4D8               	btfsc	status,2,c
 12946  0051A2  D7C3               	goto	l353
 12947  0051A4  0A07               	xorlw	7	; case 12
 12948  0051A6  0012               	return	
 12949  0051A8                     __end_of_USBCheckStdRequest:
 12950                           	opt stack 0
 12951                           tblptru	equ	0xFF8
 12952                           tblptrh	equ	0xFF7
 12953                           tblptrl	equ	0xFF6
 12954                           tablat	equ	0xFF5
 12955                           prodh	equ	0xFF4
 12956                           prodl	equ	0xFF3
 12957                           intcon	equ	0xFF2
 12958                           intcon2	equ	0xFF1
 12959                           intcon3	equ	0xFF0
 12960                           postinc0	equ	0xFEE
 12961                           wreg	equ	0xFE8
 12962                           indf1	equ	0xFE7
 12963                           postdec1	equ	0xFE5
 12964                           plusw1	equ	0xFE3
 12965                           fsr1h	equ	0xFE2
 12966                           fsr1l	equ	0xFE1
 12967                           indf2	equ	0xFDF
 12968                           postinc2	equ	0xFDE
 12969                           postdec2	equ	0xFDD
 12970                           plusw2	equ	0xFDB
 12971                           fsr2h	equ	0xFDA
 12972                           fsr2l	equ	0xFD9
 12973                           status	equ	0xFD8
 12974                           
 12975 ;; *************** function _USBStdSetCfgHandler *****************
 12976 ;; Defined at:
 12977 ;;		line 1970 in file "usb_device.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;		None
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;  i               1   23[COMRAM] unsigned char 
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1    wreg      void 
 12984 ;; Registers used:
 12985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12995 ;;Total ram usage:        1 bytes
 12996 ;; Hardware stack levels used:    1
 12997 ;; Hardware stack levels required when called:    4
 12998 ;; This function calls:
 12999 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13000 ;;		_memset
 13001 ;; This function is called by:
 13002 ;;		_USBCheckStdRequest
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text62
 13007  0051A8                     __ptext62:
 13008                           	opt stack 0
 13009  0051A8                     _USBStdSetCfgHandler:
 13010                           	opt stack 22
 13011                           
 13012                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13013                           
 13014                           ;incstack = 0
 13015  0051A8  0100               	movlb	0	; () banked
 13016  0051AA  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13020  0051AC  0E27               	movlw	39
 13021  0051AE  6E01               	movwf	memset@p1,c
 13022  0051B0  0E0F               	movlw	15
 13023  0051B2  6E02               	movwf	memset@p1+1,c
 13024  0051B4  0E00               	movlw	0
 13025  0051B6  6E04               	movwf	memset@c+1,c
 13026  0051B8  0E00               	movlw	0
 13027  0051BA  6E03               	movwf	memset@c,c
 13028  0051BC  0E00               	movlw	0
 13029  0051BE  6E06               	movwf	memset@n+1,c
 13030  0051C0  0E02               	movlw	2
 13031  0051C2  6E05               	movwf	memset@n,c
 13032  0051C4  EC89  F042         	call	_memset	;wreg free
 13033                           
 13034                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13035  0051C8  0E00               	movlw	0
 13036  0051CA  6E01               	movwf	memset@p1,c
 13037  0051CC  0E0D               	movlw	13
 13038  0051CE  6E02               	movwf	memset@p1+1,c
 13039  0051D0  0E00               	movlw	0
 13040  0051D2  6E04               	movwf	memset@c+1,c
 13041  0051D4  0E00               	movlw	0
 13042  0051D6  6E03               	movwf	memset@c,c
 13043  0051D8  0E00               	movlw	0
 13044  0051DA  6E06               	movwf	memset@n+1,c
 13045  0051DC  0E30               	movlw	48
 13046  0051DE  6E05               	movwf	memset@n,c
 13047  0051E0  EC89  F042         	call	_memset	;wreg free
 13048                           
 13049                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13050  0051E4  8C65               	bsf	3941,6,c	;volatile
 13051                           
 13052                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13053  0051E6  0E00               	movlw	0
 13054  0051E8  6E18               	movwf	USBStdSetCfgHandler@i,c
 13055  0051EA                     l12274:
 13056  0051EA  0E02               	movlw	2
 13057  0051EC  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13058  0051EE  D001               	goto	l260
 13059  0051F0  D016               	goto	u8940
 13060  0051F2                     l260:
 13061                           
 13062                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13063  0051F2  5018               	movf	USBStdSetCfgHandler@i,w,c
 13064  0051F4  0D01               	mullw	1
 13065  0051F6  0E6B               	movlw	low _ep_data_in
 13066  0051F8  24F3               	addwf	prodl,w,c
 13067  0051FA  6ED9               	movwf	fsr2l,c
 13068  0051FC  0E01               	movlw	high _ep_data_in
 13069  0051FE  20F4               	addwfc	prodh,w,c
 13070  005200  6EDA               	movwf	fsr2h,c
 13071  005202  0E00               	movlw	0
 13072  005204  6EDF               	movwf	indf2,c
 13073                           
 13074                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13075  005206  5018               	movf	USBStdSetCfgHandler@i,w,c
 13076  005208  0D01               	mullw	1
 13077  00520A  0E68               	movlw	low _ep_data_out
 13078  00520C  24F3               	addwf	prodl,w,c
 13079  00520E  6ED9               	movwf	fsr2l,c
 13080  005210  0E01               	movlw	high _ep_data_out
 13081  005212  20F4               	addwfc	prodh,w,c
 13082  005214  6EDA               	movwf	fsr2h,c
 13083  005216  0E00               	movlw	0
 13084  005218  6EDF               	movwf	indf2,c
 13085  00521A  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13086  00521C  D7E6               	goto	l12274
 13087  00521E                     u8940:
 13088                           
 13089                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13090  00521E  0ED7               	movlw	low _USBAlternateInterface
 13091  005220  6E01               	movwf	memset@p1,c
 13092  005222  0E01               	movlw	high _USBAlternateInterface
 13093  005224  6E02               	movwf	memset@p1+1,c
 13094  005226  0E00               	movlw	0
 13095  005228  6E04               	movwf	memset@c+1,c
 13096  00522A  0E00               	movlw	0
 13097  00522C  6E03               	movwf	memset@c,c
 13098  00522E  0E00               	movlw	0
 13099  005230  6E06               	movwf	memset@n+1,c
 13100  005232  0E02               	movlw	2
 13101  005234  6E05               	movwf	memset@n,c
 13102  005236  EC89  F042         	call	_memset	;wreg free
 13103                           
 13104                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13105  00523A  9C65               	bcf	3941,6,c	;volatile
 13106                           
 13107                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13108  00523C  0E08               	movlw	8
 13109  00523E  0100               	movlb	0	; () banked
 13110  005240  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13111  005242  0E0D               	movlw	13
 13112  005244  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13116  005246  0E00               	movlw	0
 13117  005248  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13118  00524A  0E0D               	movlw	13
 13119  00524C  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13123  00524E  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13124  005252  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13128  005256  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13132  00525A  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13133  00525C  A4D8               	btfss	status,2,c
 13134  00525E  D003               	goto	l262
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13138  005260  0E10               	movlw	16
 13139  005262  6FF6               	movwf	_USBDeviceState& (0+255),b
 13140                           
 13141                           ;usb_device.c: 2015: }
 13142  005264  0012               	return	
 13143  005266                     l262:
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13147                           
 13148                           ; BSR set to: 0
 13149  005266  0E00               	movlw	0
 13150  005268  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13151  00526A  0E01               	movlw	1
 13152  00526C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13153  00526E  0EFE               	movlw	low _USBActiveConfiguration
 13154  005270  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13155  005272  0E00               	movlw	high _USBActiveConfiguration
 13156  005274  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13157  005276  0E00               	movlw	0
 13158  005278  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13159  00527A  0E01               	movlw	1
 13160  00527C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13161  00527E  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13162                           
 13163                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13164  005282  0E20               	movlw	32
 13165  005284  0100               	movlb	0	; () banked
 13166  005286  6FF6               	movwf	_USBDeviceState& (0+255),b
 13167  005288  0012               	return	
 13168  00528A                     __end_of_USBStdSetCfgHandler:
 13169                           	opt stack 0
 13170                           tblptru	equ	0xFF8
 13171                           tblptrh	equ	0xFF7
 13172                           tblptrl	equ	0xFF6
 13173                           tablat	equ	0xFF5
 13174                           prodh	equ	0xFF4
 13175                           prodl	equ	0xFF3
 13176                           intcon	equ	0xFF2
 13177                           intcon2	equ	0xFF1
 13178                           intcon3	equ	0xFF0
 13179                           postinc0	equ	0xFEE
 13180                           wreg	equ	0xFE8
 13181                           indf1	equ	0xFE7
 13182                           postdec1	equ	0xFE5
 13183                           plusw1	equ	0xFE3
 13184                           fsr1h	equ	0xFE2
 13185                           fsr1l	equ	0xFE1
 13186                           indf2	equ	0xFDF
 13187                           postinc2	equ	0xFDE
 13188                           postdec2	equ	0xFDD
 13189                           plusw2	equ	0xFDB
 13190                           fsr2h	equ	0xFDA
 13191                           fsr2l	equ	0xFD9
 13192                           status	equ	0xFD8
 13193                           
 13194 ;; *************** function _memset *****************
 13195 ;; Defined at:
 13196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;  p1              2    0[COMRAM] PTR void 
 13199 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13200 ;;  c               2    2[COMRAM] int 
 13201 ;;  n               2    4[COMRAM] unsigned int 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  p               2    6[COMRAM] PTR unsigned char 
 13204 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13205 ;; Return value:  Size  Location     Type
 13206 ;;                  2    0[COMRAM] PTR void 
 13207 ;; Registers used:
 13208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 0/0
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13214 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13217 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13218 ;;Total ram usage:        8 bytes
 13219 ;; Hardware stack levels used:    1
 13220 ;; This function calls:
 13221 ;;		Nothing
 13222 ;; This function is called by:
 13223 ;;		_USBDeviceInit
 13224 ;;		_USBStdSetCfgHandler
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           	psect	text63
 13229  008512                     __ptext63:
 13230                           	opt stack 0
 13231  008512                     _memset:
 13232                           	opt stack 28
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;incstack = 0
 13236  008512  C001  F007         	movff	memset@p1,memset@p
 13237  008516  C002  F008         	movff	memset@p1+1,memset@p+1
 13238  00851A  D008               	goto	l3596
 13239  00851C                     l10892:
 13240  00851C  C007  FFD9         	movff	memset@p,fsr2l
 13241  008520  C008  FFDA         	movff	memset@p+1,fsr2h
 13242  008524  C003  FFDF         	movff	memset@c,indf2
 13243  008528  4A07               	infsnz	memset@p,f,c
 13244  00852A  2A08               	incf	memset@p+1,f,c
 13245  00852C                     l3596:
 13246  00852C  0605               	decf	memset@n,f,c
 13247  00852E  A0D8               	btfss	status,0,c
 13248  008530  0606               	decf	memset@n+1,f,c
 13249  008532  2805               	incf	memset@n,w,c
 13250  008534  E1F3               	bnz	l10892
 13251  008536  2806               	incf	memset@n+1,w,c
 13252  008538  B4D8               	btfsc	status,2,c
 13253  00853A  0012               	return	
 13254  00853C  D7EF               	goto	l3597
 13255  00853E                     __end_of_memset:
 13256                           	opt stack 0
 13257                           tblptru	equ	0xFF8
 13258                           tblptrh	equ	0xFF7
 13259                           tblptrl	equ	0xFF6
 13260                           tablat	equ	0xFF5
 13261                           prodh	equ	0xFF4
 13262                           prodl	equ	0xFF3
 13263                           intcon	equ	0xFF2
 13264                           intcon2	equ	0xFF1
 13265                           intcon3	equ	0xFF0
 13266                           postinc0	equ	0xFEE
 13267                           wreg	equ	0xFE8
 13268                           indf1	equ	0xFE7
 13269                           postdec1	equ	0xFE5
 13270                           plusw1	equ	0xFE3
 13271                           fsr1h	equ	0xFE2
 13272                           fsr1l	equ	0xFE1
 13273                           indf2	equ	0xFDF
 13274                           postinc2	equ	0xFDE
 13275                           postdec2	equ	0xFDD
 13276                           plusw2	equ	0xFDB
 13277                           fsr2h	equ	0xFDA
 13278                           fsr2l	equ	0xFD9
 13279                           status	equ	0xFD8
 13280                           
 13281 ;; *************** function _USBStdGetStatusHandler *****************
 13282 ;; Defined at:
 13283 ;;		line 2131 in file "usb_device.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;		None
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;  p               2    1[COMRAM] PTR struct __BDT
 13288 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  1    wreg      void 
 13291 ;; Registers used:
 13292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13293 ;; Tracked objects:
 13294 ;;		On entry : 0/0
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13302 ;;Total ram usage:        3 bytes
 13303 ;; Hardware stack levels used:    1
 13304 ;; This function calls:
 13305 ;;		Nothing
 13306 ;; This function is called by:
 13307 ;;		_USBCheckStdRequest
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           	psect	text64
 13312  0061BC                     __ptext64:
 13313                           	opt stack 0
 13314  0061BC                     _USBStdGetStatusHandler:
 13315                           	opt stack 26
 13316                           
 13317                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13318                           
 13319                           ;incstack = 0
 13320  0061BC  0E00               	movlw	0
 13321  0061BE  010D               	movlb	13	; () banked
 13322  0061C0  6F38               	movwf	56,b	;volatile
 13323                           
 13324                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13325  0061C2  0E00               	movlw	0
 13326  0061C4  6F39               	movwf	57,b	;volatile
 13327                           
 13328                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13329  0061C6  D039               	goto	l281
 13330  0061C8                     l282:
 13331                           
 13332                           ; BSR set to: 13
 13333                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13334  0061C8  0100               	movlb	0	; () banked
 13335  0061CA  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13336                           
 13337                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13338                           
 13339                           ; BSR set to: 13
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13343                           
 13344                           ;usb_device.c: 2144: if(0 == 1)
 13345  0061CC  0100               	movlb	0	; () banked
 13346  0061CE  05F3               	decf	_RemoteWakeup& (0+255),w,b
 13347  0061D0  A4D8               	btfss	status,2,c
 13348  0061D2  D03E               	goto	l285
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13352  0061D4  010D               	movlb	13	; () banked
 13353  0061D6  8338               	bsf	56,1,b	;volatile
 13354                           
 13355                           ; BSR set to: 13
 13356                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13357  0061D8  D03B               	goto	l285
 13358  0061DA                     l286:
 13359                           
 13360                           ; BSR set to: 13
 13361                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13362  0061DA  0100               	movlb	0	; () banked
 13363  0061DC  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13364                           
 13365                           ;usb_device.c: 2156: break;
 13366  0061DE  D038               	goto	l285
 13367  0061E0                     l287:
 13368                           
 13369                           ; BSR set to: 13
 13370                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13371  0061E0  0100               	movlb	0	; () banked
 13372  0061E2  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13373                           
 13374                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13375  0061E4  010D               	movlb	13	; () banked
 13376  0061E6  BF34               	btfsc	52,7,b	;volatile
 13377  0061E8  D00A               	goto	l288
 13378                           
 13379                           ; BSR set to: 13
 13380                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13381  0061EA  5134               	movf	52,w,b	;volatile
 13382  0061EC  0B0F               	andlw	15
 13383  0061EE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13384  0061F0  5001               	movf	??_USBStdGetStatusHandler,w,c
 13385  0061F2  0D02               	mullw	2
 13386  0061F4  0E40               	movlw	low _pBDTEntryOut
 13387  0061F6  24F3               	addwf	prodl,w,c
 13388  0061F8  6ED9               	movwf	fsr2l,c
 13389  0061FA  0E01               	movlw	high _pBDTEntryOut
 13390  0061FC  D009               	goto	L6
 13391  0061FE                     l288:
 13392                           
 13393                           ; BSR set to: 13
 13394                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13395                           
 13396                           ; BSR set to: 13
 13397  0061FE  5134               	movf	52,w,b	;volatile
 13398  006200  0B0F               	andlw	15
 13399  006202  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13400  006204  5001               	movf	??_USBStdGetStatusHandler,w,c
 13401  006206  0D02               	mullw	2
 13402  006208  0EC5               	movlw	low _pBDTEntryIn
 13403  00620A  24F3               	addwf	prodl,w,c
 13404  00620C  6ED9               	movwf	fsr2l,c
 13405  00620E  0E00               	movlw	high _pBDTEntryIn
 13406  006210                     L6:
 13407  006210  20F4               	addwfc	prodh,w,c
 13408  006212  6EDA               	movwf	fsr2h,c
 13409  006214  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13410  006218  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13411                           
 13412                           ; BSR set to: 13
 13413                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13414                           
 13415                           ; BSR set to: 13
 13416  00621C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13417  006220  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13418  006224  AEDF               	btfss	indf2,7,c
 13419  006226  D014               	goto	l285
 13420                           
 13421                           ; BSR set to: 13
 13422  006228  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13423  00622C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13424  006230  A4DF               	btfss	indf2,2,c
 13425  006232  D00E               	goto	l285
 13426                           
 13427                           ; BSR set to: 13
 13428                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13429  006234  0E01               	movlw	1
 13430  006236  6F38               	movwf	56,b	;volatile
 13431                           
 13432                           ; BSR set to: 13
 13433                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13434                           
 13435                           ; BSR set to: 13
 13436                           ;usb_device.c: 2176: break;
 13437  006238  D00B               	goto	l285
 13438  00623A                     l281:
 13439                           
 13440                           ; BSR set to: 13
 13441                           
 13442                           ; BSR set to: 13
 13443  00623A  5130               	movf	48,w,b	;volatile
 13444  00623C  0B1F               	andlw	31
 13445                           
 13446                           ; Switch size 1, requested type "space"
 13447                           ; Number of cases is 3, Range of values is 0 to 2
 13448                           ; switch strategies available:
 13449                           ; Name         Instructions Cycles
 13450                           ; simple_byte           10     6 (average)
 13451                           ;	Chosen strategy is simple_byte
 13452  00623E  0A00               	xorlw	0	; case 0
 13453  006240  B4D8               	btfsc	status,2,c
 13454  006242  D7C2               	goto	l282
 13455  006244  0A01               	xorlw	1	; case 1
 13456  006246  B4D8               	btfsc	status,2,c
 13457  006248  D7C8               	goto	l286
 13458  00624A  0A03               	xorlw	3	; case 2
 13459  00624C  B4D8               	btfsc	status,2,c
 13460  00624E  D7C8               	goto	l287
 13461  006250                     l285:
 13462                           
 13463                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 13464  006250  0100               	movlb	0	; () banked
 13465  006252  AFC2               	btfss	(_inPipes+3)& (0+255),7,b
 13466  006254  0012               	return	
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 13470  006256  0E38               	movlw	56
 13471  006258  6FBF               	movwf	_inPipes& (0+255),b
 13472  00625A  0E0D               	movlw	13
 13473  00625C  6FC0               	movwf	(_inPipes+1)& (0+255),b
 13474                           
 13475                           ; BSR set to: 0
 13476                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13477  00625E  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 13481  006260  0E02               	movlw	2
 13482  006262  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13483  006264  0012               	return	
 13484  006266                     __end_of_USBStdGetStatusHandler:
 13485                           	opt stack 0
 13486                           tblptru	equ	0xFF8
 13487                           tblptrh	equ	0xFF7
 13488                           tblptrl	equ	0xFF6
 13489                           tablat	equ	0xFF5
 13490                           prodh	equ	0xFF4
 13491                           prodl	equ	0xFF3
 13492                           intcon	equ	0xFF2
 13493                           intcon2	equ	0xFF1
 13494                           intcon3	equ	0xFF0
 13495                           postinc0	equ	0xFEE
 13496                           wreg	equ	0xFE8
 13497                           indf1	equ	0xFE7
 13498                           postdec1	equ	0xFE5
 13499                           plusw1	equ	0xFE3
 13500                           fsr1h	equ	0xFE2
 13501                           fsr1l	equ	0xFE1
 13502                           indf2	equ	0xFDF
 13503                           postinc2	equ	0xFDE
 13504                           postdec2	equ	0xFDD
 13505                           plusw2	equ	0xFDB
 13506                           fsr2h	equ	0xFDA
 13507                           fsr2l	equ	0xFD9
 13508                           status	equ	0xFD8
 13509                           
 13510 ;; *************** function _USBStdGetDscHandler *****************
 13511 ;; Defined at:
 13512 ;;		line 2045 in file "usb_device.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;		None
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13530 ;;Total ram usage:        2 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; This function calls:
 13533 ;;		Nothing
 13534 ;; This function is called by:
 13535 ;;		_USBCheckStdRequest
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text65
 13540  004316                     __ptext65:
 13541                           	opt stack 0
 13542  004316                     _USBStdGetDscHandler:
 13543                           	opt stack 26
 13544                           
 13545                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;incstack = 0
 13549  004316  0E80               	movlw	128
 13550  004318  010D               	movlb	13	; () banked
 13551  00431A  1930               	xorwf	48,w,b	;volatile
 13552  00431C  A4D8               	btfss	status,2,c
 13553  00431E  0012               	return	
 13554                           
 13555                           ; BSR set to: 13
 13556                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13557  004320  0EC0               	movlw	192
 13558  004322  0100               	movlb	0	; () banked
 13559  004324  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13560                           
 13561                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 13562  004326  D088               	goto	l268
 13563  004328                     
 13564                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13565                           
 13566                           ; BSR set to: 0
 13567  004328  0EA5               	movlw	low _device_dsc
 13568  00432A  0100               	movlb	0	; () banked
 13569  00432C  6FBF               	movwf	_inPipes& (0+255),b
 13570  00432E  0E8F               	movlw	high _device_dsc
 13571  004330  6FC0               	movwf	(_inPipes+1)& (0+255),b
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 13575  004332  0E00               	movlw	0
 13576  004334  6FC4               	movwf	(_inPipes+5)& (0+255),b
 13577  004336  0E12               	movlw	18
 13578  004338  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13579                           
 13580                           ;usb_device.c: 2060: break;
 13581  00433A  0012               	return	
 13582  00433C                     
 13583                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 13584                           
 13585                           ; BSR set to: 0
 13586  00433C  010D               	movlb	13	; () banked
 13587  00433E  5132               	movf	50,w,b	;volatile
 13588  004340  A4D8               	btfss	status,2,c
 13589  004342  D043               	goto	l272
 13590                           
 13591                           ; BSR set to: 13
 13592                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 13593  004344  5132               	movf	50,w,b	;volatile
 13594  004346  0D02               	mullw	2
 13595  004348  0EA5               	movlw	low _USB_CD_Ptr
 13596  00434A  24F3               	addwf	prodl,w,c
 13597  00434C  6EF6               	movwf	tblptrl,c
 13598  00434E  0E8E               	movlw	high _USB_CD_Ptr
 13599  004350  20F4               	addwfc	prodh,w,c
 13600  004352  6EF7               	movwf	tblptrh,c
 13601  004354                     	if	1	;There are 3 active tblptr bytes
 13602  004354  6AF8               	clrf	tblptru,c
 13603  004356  0E00               	movlw	low (__mediumconst shr (0+16))
 13604  004358  22F8               	addwfc	tblptru,f,c
 13605  00435A                     	endif
 13606  00435A  0009               	tblrd		*+
 13607  00435C  CFF5 F0BF          	movff	tablat,_inPipes
 13608  004360  000A               	tblrd		*-
 13609  004362  CFF5 F0C0          	movff	tablat,_inPipes+1
 13610                           
 13611                           ; BSR set to: 13
 13612                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13613  004366  0E02               	movlw	2
 13614  004368  0100               	movlb	0	; () banked
 13615  00436A  25BF               	addwf	_inPipes& (0+255),w,b
 13616  00436C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13617  00436E  0E00               	movlw	0
 13618  004370  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 13619  004372  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13620  004374  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13621  004378  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13622  00437C  6AF8               	clrf	tblptru,c
 13623  00437E  0E0E               	movlw	(high __ramtop+-1)
 13624  004380  64F7               	cpfsgt	tblptrh,c
 13625  004382  D003               	bra	u8987
 13626  004384  0008               	tblrd		*
 13627  004386  50F5               	movf	tablat,w,c
 13628  004388  D005               	bra	u8980
 13629  00438A                     u8987:
 13630  00438A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13631  00438E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13632  004392  50EF               	movf	indf0,w,c
 13633  004394                     u8980:
 13634  004394  0100               	movlb	0	; () banked
 13635  004396  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13639  004398  0E03               	movlw	3
 13640  00439A  25BF               	addwf	_inPipes& (0+255),w,b
 13641  00439C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13642  00439E  0E00               	movlw	0
 13643  0043A0  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 13644  0043A2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13645  0043A4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13646  0043A8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13647  0043AC  6AF8               	clrf	tblptru,c
 13648  0043AE  0E0E               	movlw	(high __ramtop+-1)
 13649  0043B0  64F7               	cpfsgt	tblptrh,c
 13650  0043B2  D003               	bra	u8997
 13651  0043B4  0008               	tblrd		*
 13652  0043B6  50F5               	movf	tablat,w,c
 13653  0043B8  D005               	bra	u8990
 13654  0043BA                     u8997:
 13655  0043BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13656  0043BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13657  0043C2  50EF               	movf	indf0,w,c
 13658  0043C4                     u8990:
 13659  0043C4  0100               	movlb	0	; () banked
 13660  0043C6  6FC4               	movwf	(_inPipes+5)& (0+255),b
 13661                           
 13662                           ;usb_device.c: 2078: }
 13663  0043C8  0012               	return	
 13664  0043CA                     l272:
 13665                           
 13666                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 13667                           
 13668                           ; BSR set to: 0
 13669  0043CA  0E00               	movlw	0
 13670  0043CC  0100               	movlb	0	; () banked
 13671  0043CE  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 13675  0043D0  0012               	return	
 13676  0043D2                     
 13677                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 13678                           
 13679                           ; BSR set to: 0
 13680  0043D2  0E04               	movlw	4
 13681  0043D4  010D               	movlb	13	; () banked
 13682  0043D6  6132               	cpfslt	50,b	;volatile
 13683  0043D8  D027               	goto	l275
 13684                           
 13685                           ; BSR set to: 13
 13686                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 13687  0043DA  5132               	movf	50,w,b	;volatile
 13688  0043DC  0D02               	mullw	2
 13689  0043DE  0E7B               	movlw	low _USB_SD_Ptr
 13690  0043E0  24F3               	addwf	prodl,w,c
 13691  0043E2  6EF6               	movwf	tblptrl,c
 13692  0043E4  0E8E               	movlw	high _USB_SD_Ptr
 13693  0043E6  20F4               	addwfc	prodh,w,c
 13694  0043E8  6EF7               	movwf	tblptrh,c
 13695  0043EA                     	if	1	;There are 3 active tblptr bytes
 13696  0043EA  6AF8               	clrf	tblptru,c
 13697  0043EC  0E00               	movlw	low (__mediumconst shr (0+16))
 13698  0043EE  22F8               	addwfc	tblptru,f,c
 13699  0043F0                     	endif
 13700  0043F0  0009               	tblrd		*+
 13701  0043F2  CFF5 F0BF          	movff	tablat,_inPipes
 13702  0043F6  000A               	tblrd		*-
 13703  0043F8  CFF5 F0C0          	movff	tablat,_inPipes+1
 13704                           
 13705                           ; BSR set to: 13
 13706                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13707  0043FC  C0BF  FFF6         	movff	_inPipes,tblptrl
 13708  004400  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 13709  004404  6AF8               	clrf	tblptru,c
 13710  004406  0E0E               	movlw	(high __ramtop+-1)
 13711  004408  64F7               	cpfsgt	tblptrh,c
 13712  00440A  D003               	bra	u9017
 13713  00440C  0008               	tblrd		*
 13714  00440E  50F5               	movf	tablat,w,c
 13715  004410  D005               	bra	u9010
 13716  004412                     u9017:
 13717  004412  CFF6 FFE9          	movff	tblptrl,fsr0l
 13718  004416  CFF7 FFEA          	movff	tblptrh,fsr0h
 13719  00441A  50EF               	movf	indf0,w,c
 13720  00441C                     u9010:
 13721  00441C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13722  00441E  5001               	movf	??_USBStdGetDscHandler,w,c
 13723  004420  0100               	movlb	0	; () banked
 13724  004422  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13725  004424  6BC4               	clrf	(_inPipes+5)& (0+255),b
 13726                           
 13727                           ;usb_device.c: 2094: }
 13728  004426  0012               	return	
 13729  004428                     l275:
 13730                           
 13731                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 13732                           
 13733                           ; BSR set to: 0
 13734  004428  0E00               	movlw	0
 13735  00442A  0100               	movlb	0	; () banked
 13736  00442C  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 13740  00442E  0012               	return	
 13741  004430                     
 13742                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 13743                           
 13744                           ; BSR set to: 0
 13745  004430  0E00               	movlw	0
 13746  004432  0100               	movlb	0	; () banked
 13747  004434  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;usb_device.c: 2112: }
 13751                           
 13752                           ;usb_device.c: 2111: break;
 13753  004436  0012               	return	
 13754  004438                     l268:
 13755                           
 13756                           ; BSR set to: 0
 13757                           
 13758                           ; BSR set to: 0
 13759  004438  010D               	movlb	13	; () banked
 13760  00443A  5133               	movf	51,w,b	;volatile
 13761                           
 13762                           ; Switch size 1, requested type "space"
 13763                           ; Number of cases is 3, Range of values is 1 to 3
 13764                           ; switch strategies available:
 13765                           ; Name         Instructions Cycles
 13766                           ; simple_byte           10     6 (average)
 13767                           ;	Chosen strategy is simple_byte
 13768  00443C  0A01               	xorlw	1	; case 1
 13769  00443E  B4D8               	btfsc	status,2,c
 13770  004440  D773               	goto	l269
 13771  004442  0A03               	xorlw	3	; case 2
 13772  004444  B4D8               	btfsc	status,2,c
 13773  004446  D77A               	goto	l271
 13774  004448  0A01               	xorlw	1	; case 3
 13775  00444A  B4D8               	btfsc	status,2,c
 13776  00444C  D7C2               	goto	l274
 13777  00444E  D7F0               	goto	l277
 13778  004450                     __end_of_USBStdGetDscHandler:
 13779                           	opt stack 0
 13780                           tblptru	equ	0xFF8
 13781                           tblptrh	equ	0xFF7
 13782                           tblptrl	equ	0xFF6
 13783                           tablat	equ	0xFF5
 13784                           prodh	equ	0xFF4
 13785                           prodl	equ	0xFF3
 13786                           intcon	equ	0xFF2
 13787                           intcon2	equ	0xFF1
 13788                           intcon3	equ	0xFF0
 13789                           indf0	equ	0xFEF
 13790                           postinc0	equ	0xFEE
 13791                           fsr0h	equ	0xFEA
 13792                           fsr0l	equ	0xFE9
 13793                           wreg	equ	0xFE8
 13794                           indf1	equ	0xFE7
 13795                           postdec1	equ	0xFE5
 13796                           plusw1	equ	0xFE3
 13797                           fsr1h	equ	0xFE2
 13798                           fsr1l	equ	0xFE1
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           plusw2	equ	0xFDB
 13803                           fsr2h	equ	0xFDA
 13804                           fsr2l	equ	0xFD9
 13805                           status	equ	0xFD8
 13806                           
 13807 ;; *************** function _USBStdFeatureReqHandler *****************
 13808 ;; Defined at:
 13809 ;;		line 2756 in file "usb_device.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  p               2   27[COMRAM] PTR struct __BDT
 13814 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13815 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 13816 ;;		 -> UEP0(1), 
 13817 ;;  current_ep_d    1   26[COMRAM] struct .
 13818 ;; Return value:  Size  Location     Type
 13819 ;;                  1    wreg      void 
 13820 ;; Registers used:
 13821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13822 ;; Tracked objects:
 13823 ;;		On entry : 0/0
 13824 ;;		On exit  : 0/0
 13825 ;;		Unchanged: 0/0
 13826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13828 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13830 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13831 ;;Total ram usage:        6 bytes
 13832 ;; Hardware stack levels used:    1
 13833 ;; Hardware stack levels required when called:    4
 13834 ;; This function calls:
 13835 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13836 ;; This function is called by:
 13837 ;;		_USBCheckStdRequest
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           	psect	text66
 13842  001848                     __ptext66:
 13843                           	opt stack 0
 13844  001848                     _USBStdFeatureReqHandler:
 13845                           	opt stack 22
 13846                           
 13847                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 13848                           
 13849                           ;incstack = 0
 13850  001848  010D               	movlb	13	; () banked
 13851  00184A  0532               	decf	50,w,b	;volatile
 13852  00184C  A4D8               	btfss	status,2,c
 13853  00184E  D011               	goto	l361
 13854                           
 13855                           ; BSR set to: 13
 13856  001850  5130               	movf	48,w,b	;volatile
 13857  001852  0B1F               	andlw	31
 13858  001854  0900               	iorlw	0
 13859  001856  A4D8               	btfss	status,2,c
 13860  001858  D00C               	goto	l361
 13861                           
 13862                           ; BSR set to: 13
 13863                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 13864  00185A  0100               	movlb	0	; () banked
 13865  00185C  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13866                           
 13867                           ; BSR set to: 0
 13868                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 13869  00185E  0E03               	movlw	3
 13870  001860  010D               	movlb	13	; () banked
 13871  001862  1931               	xorwf	49,w,b	;volatile
 13872  001864  A4D8               	btfss	status,2,c
 13873  001866  D002               	goto	l360
 13874                           
 13875                           ; BSR set to: 13
 13876                           ;usb_device.c: 2806: RemoteWakeup = 1;
 13877  001868  0E01               	movlw	1
 13878  00186A  D001               	goto	L7
 13879  00186C                     l360:
 13880                           
 13881                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 13882                           
 13883                           ; BSR set to: 0
 13884  00186C  0E00               	movlw	0
 13885  00186E                     L7:
 13886  00186E  0100               	movlb	0	; () banked
 13887  001870  6FF3               	movwf	_RemoteWakeup& (0+255),b
 13888  001872                     l361:
 13889                           
 13890                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 13891                           
 13892                           ; BSR set to: 0
 13893  001872  010D               	movlb	13	; () banked
 13894  001874  5132               	movf	50,w,b	;volatile
 13895  001876  A4D8               	btfss	status,2,c
 13896  001878  0012               	return	
 13897                           
 13898                           ; BSR set to: 13
 13899  00187A  5130               	movf	48,w,b	;volatile
 13900  00187C  0B1F               	andlw	31
 13901  00187E  0A02               	xorlw	2
 13902  001880  A4D8               	btfss	status,2,c
 13903  001882  0012               	return	
 13904                           
 13905                           ; BSR set to: 13
 13906  001884  5134               	movf	52,w,b	;volatile
 13907  001886  0B0F               	andlw	15
 13908  001888  0900               	iorlw	0
 13909  00188A  B4D8               	btfsc	status,2,c
 13910  00188C  0012               	return	
 13911                           
 13912                           ; BSR set to: 13
 13913  00188E  5134               	movf	52,w,b	;volatile
 13914  001890  0B0F               	andlw	15
 13915  001892  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13916  001894  0E03               	movlw	3
 13917  001896  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 13918  001898  0012               	return	
 13919                           
 13920                           ; BSR set to: 13
 13921  00189A  0E20               	movlw	32
 13922  00189C  0100               	movlb	0	; () banked
 13923  00189E  19F6               	xorwf	_USBDeviceState& (0+255),w,b
 13924  0018A0  A4D8               	btfss	status,2,c
 13925  0018A2  0012               	return	
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 13929  0018A4  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 13930                           
 13931                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 13932  0018A6  010D               	movlb	13	; () banked
 13933  0018A8  BF34               	btfsc	52,7,b	;volatile
 13934  0018AA  D019               	goto	l363
 13935                           
 13936                           ; BSR set to: 13
 13937                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13938  0018AC  5134               	movf	52,w,b	;volatile
 13939  0018AE  0B0F               	andlw	15
 13940  0018B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13941  0018B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13942  0018B4  0D02               	mullw	2
 13943  0018B6  0E40               	movlw	low _pBDTEntryOut
 13944  0018B8  24F3               	addwf	prodl,w,c
 13945  0018BA  6ED9               	movwf	fsr2l,c
 13946  0018BC  0E01               	movlw	high _pBDTEntryOut
 13947  0018BE  20F4               	addwfc	prodh,w,c
 13948  0018C0  6EDA               	movwf	fsr2h,c
 13949  0018C2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 13950  0018C6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 13951                           
 13952                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 13953  0018CA  5134               	movf	52,w,b	;volatile
 13954  0018CC  0B0F               	andlw	15
 13955  0018CE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13956  0018D0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13957  0018D2  0D01               	mullw	1
 13958  0018D4  0E68               	movlw	low _ep_data_out
 13959  0018D6  24F3               	addwf	prodl,w,c
 13960  0018D8  6ED9               	movwf	fsr2l,c
 13961  0018DA  0E01               	movlw	high _ep_data_out
 13962  0018DC  D018               	goto	L8
 13963  0018DE                     l363:
 13964                           
 13965                           ; BSR set to: 13
 13966                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13967                           
 13968                           ; BSR set to: 13
 13969  0018DE  5134               	movf	52,w,b	;volatile
 13970  0018E0  0B0F               	andlw	15
 13971  0018E2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13972  0018E4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13973  0018E6  0D02               	mullw	2
 13974  0018E8  0EC5               	movlw	low _pBDTEntryIn
 13975  0018EA  24F3               	addwf	prodl,w,c
 13976  0018EC  6ED9               	movwf	fsr2l,c
 13977  0018EE  0E00               	movlw	high _pBDTEntryIn
 13978  0018F0  20F4               	addwfc	prodh,w,c
 13979  0018F2  6EDA               	movwf	fsr2h,c
 13980  0018F4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 13981  0018F8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 13982                           
 13983                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 13984  0018FC  5134               	movf	52,w,b	;volatile
 13985  0018FE  0B0F               	andlw	15
 13986  001900  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13987  001902  5018               	movf	??_USBStdFeatureReqHandler,w,c
 13988  001904  0D01               	mullw	1
 13989  001906  0E6B               	movlw	low _ep_data_in
 13990  001908  24F3               	addwf	prodl,w,c
 13991  00190A  6ED9               	movwf	fsr2l,c
 13992  00190C  0E01               	movlw	high _ep_data_in
 13993  00190E                     L8:
 13994  00190E  20F4               	addwfc	prodh,w,c
 13995  001910  6EDA               	movwf	fsr2h,c
 13996  001912  50DF               	movf	indf2,w,c
 13997  001914  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 13998                           
 13999                           ; BSR set to: 13
 14000                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14001                           
 14002                           ; BSR set to: 13
 14003  001916  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14004  001918  D006               	goto	l365
 14005                           
 14006                           ; BSR set to: 13
 14007                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14008  00191A  0EFB               	movlw	251
 14009  00191C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14010  00191E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14011  001920  0EFF               	movlw	255
 14012  001922  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14013  001924  D004               	goto	L9
 14014  001926                     l365:
 14015                           
 14016                           ; BSR set to: 13
 14017                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14018                           
 14019                           ; BSR set to: 13
 14020  001926  0E04               	movlw	4
 14021  001928  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14022  00192A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14023  00192C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14024  00192E                     L9:
 14025  00192E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14026                           
 14027                           ; BSR set to: 13
 14028                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14029                           
 14030                           ; BSR set to: 13
 14031  001930  BF34               	btfsc	52,7,b	;volatile
 14032  001932  D00A               	goto	l367
 14033                           
 14034                           ; BSR set to: 13
 14035                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14036  001934  5134               	movf	52,w,b	;volatile
 14037  001936  0B0F               	andlw	15
 14038  001938  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14039  00193A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14040  00193C  0D02               	mullw	2
 14041  00193E  0E40               	movlw	low _pBDTEntryOut
 14042  001940  24F3               	addwf	prodl,w,c
 14043  001942  6ED9               	movwf	fsr2l,c
 14044  001944  0E01               	movlw	high _pBDTEntryOut
 14045  001946  D009               	goto	L10
 14046  001948                     l367:
 14047                           
 14048                           ; BSR set to: 13
 14049                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14050                           
 14051                           ; BSR set to: 13
 14052  001948  5134               	movf	52,w,b	;volatile
 14053  00194A  0B0F               	andlw	15
 14054  00194C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14055  00194E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14056  001950  0D02               	mullw	2
 14057  001952  0EC5               	movlw	low _pBDTEntryIn
 14058  001954  24F3               	addwf	prodl,w,c
 14059  001956  6ED9               	movwf	fsr2l,c
 14060  001958  0E00               	movlw	high _pBDTEntryIn
 14061  00195A                     L10:
 14062  00195A  20F4               	addwfc	prodh,w,c
 14063  00195C  6EDA               	movwf	fsr2h,c
 14064  00195E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14065  001962  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14066                           
 14067                           ; BSR set to: 13
 14068                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14069                           
 14070                           ; BSR set to: 13
 14071  001966  0E03               	movlw	3
 14072  001968  1931               	xorwf	49,w,b	;volatile
 14073  00196A  A4D8               	btfss	status,2,c
 14074  00196C  D02D               	goto	l369
 14075                           
 14076                           ; BSR set to: 13
 14077                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14078  00196E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14079  001972  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14080  001976  AEDF               	btfss	indf2,7,c
 14081  001978  D01A               	goto	l372
 14082                           
 14083                           ; BSR set to: 13
 14084                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14085  00197A  BF34               	btfsc	52,7,b	;volatile
 14086  00197C  D00A               	goto	l371
 14087                           
 14088                           ; BSR set to: 13
 14089                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14090  00197E  5134               	movf	52,w,b	;volatile
 14091  001980  0B0F               	andlw	15
 14092  001982  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14093  001984  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14094  001986  0D01               	mullw	1
 14095  001988  0E68               	movlw	low _ep_data_out
 14096  00198A  24F3               	addwf	prodl,w,c
 14097  00198C  6ED9               	movwf	fsr2l,c
 14098  00198E  0E01               	movlw	high _ep_data_out
 14099  001990  D00A               	goto	L11
 14100  001992                     l371:
 14101                           
 14102                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14103                           
 14104                           ; BSR set to: 1
 14105  001992  010D               	movlb	13	; () banked
 14106  001994  5134               	movf	52,w,b	;volatile
 14107  001996  0B0F               	andlw	15
 14108  001998  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14109  00199A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14110  00199C  0D01               	mullw	1
 14111  00199E  0E6B               	movlw	low _ep_data_in
 14112  0019A0  24F3               	addwf	prodl,w,c
 14113  0019A2  6ED9               	movwf	fsr2l,c
 14114  0019A4  0E01               	movlw	high _ep_data_in
 14115  0019A6                     L11:
 14116  0019A6  20F4               	addwfc	prodh,w,c
 14117  0019A8  6EDA               	movwf	fsr2h,c
 14118  0019AA  0101               	movlb	1	; () banked
 14119  0019AC  82DF               	bsf	indf2,1,c
 14120  0019AE                     l372:
 14121                           
 14122                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14123                           
 14124                           ; BSR set to: 1
 14125                           
 14126                           ; BSR set to: 1
 14127  0019AE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14128  0019B2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14129  0019B6  0E00               	movlw	0
 14130  0019B8  84DB               	bsf	plusw2,2,c
 14131                           
 14132                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14133  0019BA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14134  0019BE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14135  0019C2  0E00               	movlw	0
 14136  0019C4  8EDB               	bsf	plusw2,7,c
 14137                           
 14138                           ;usb_device.c: 2878: }
 14139  0019C6  0012               	return	
 14140  0019C8                     l369:
 14141                           
 14142                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14143  0019C8  0E04               	movlw	4
 14144  0019CA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14145  0019CC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14146  0019CE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14147  0019D0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14148                           
 14149                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14150  0019D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14151  0019D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14152  0019DA  AEDF               	btfss	indf2,7,c
 14153  0019DC  D01B               	goto	l374
 14154                           
 14155                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14156  0019DE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14157  0019E2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14158  0019E6  0E7F               	movlw	127
 14159  0019E8  16DF               	andwf	indf2,f,c
 14160                           
 14161                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14162  0019EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14163  0019EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14164  0019F2  0E00               	movlw	0
 14165  0019F4  8CDB               	bsf	plusw2,6,c
 14166                           
 14167                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14168  0019F6  0E00               	movlw	0
 14169  0019F8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14170  0019FA  0E05               	movlw	5
 14171  0019FC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14172  0019FE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14173  001A02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14174  001A06  0E00               	movlw	0
 14175  001A08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14176  001A0A  0E02               	movlw	2
 14177  001A0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14178  001A0E  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14179                           
 14180                           ;usb_device.c: 2893: }
 14181  001A12  D006               	goto	l375
 14182  001A14                     l374:
 14183                           
 14184                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14185  001A14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14186  001A18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14187  001A1C  0E00               	movlw	0
 14188  001A1E  8CDB               	bsf	plusw2,6,c
 14189  001A20                     l375:
 14190                           
 14191                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14192  001A20  0E04               	movlw	4
 14193  001A22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14194  001A24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14195  001A26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14196  001A28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14197                           
 14198                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14199  001A2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14200  001A2C  D006               	goto	u9230
 14201  001A2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14202  001A32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14203  001A36  AEDF               	btfss	indf2,7,c
 14204  001A38  D030               	goto	l376
 14205  001A3A                     u9230:
 14206                           
 14207                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14208  001A3A  010D               	movlb	13	; () banked
 14209  001A3C  BF34               	btfsc	52,7,b	;volatile
 14210  001A3E  D00A               	goto	l379
 14211                           
 14212                           ; BSR set to: 13
 14213                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14214  001A40  5134               	movf	52,w,b	;volatile
 14215  001A42  0B0F               	andlw	15
 14216  001A44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14217  001A46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14218  001A48  0D01               	mullw	1
 14219  001A4A  0E68               	movlw	low _ep_data_out
 14220  001A4C  24F3               	addwf	prodl,w,c
 14221  001A4E  6ED9               	movwf	fsr2l,c
 14222  001A50  0E01               	movlw	high _ep_data_out
 14223  001A52  D00A               	goto	L12
 14224  001A54                     l379:
 14225                           
 14226                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14227                           
 14228                           ; BSR set to: 1
 14229  001A54  010D               	movlb	13	; () banked
 14230  001A56  5134               	movf	52,w,b	;volatile
 14231  001A58  0B0F               	andlw	15
 14232  001A5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14233  001A5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14234  001A5E  0D01               	mullw	1
 14235  001A60  0E6B               	movlw	low _ep_data_in
 14236  001A62  24F3               	addwf	prodl,w,c
 14237  001A64  6ED9               	movwf	fsr2l,c
 14238  001A66  0E01               	movlw	high _ep_data_in
 14239  001A68                     L12:
 14240  001A68  20F4               	addwfc	prodh,w,c
 14241  001A6A  6EDA               	movwf	fsr2h,c
 14242  001A6C  0101               	movlb	1	; () banked
 14243  001A6E  92DF               	bcf	indf2,1,c
 14244                           
 14245                           ; BSR set to: 1
 14246                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14247                           
 14248                           ; BSR set to: 1
 14249  001A70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14250  001A74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14251  001A78  0E3B               	movlw	59
 14252  001A7A  16DF               	andwf	indf2,f,c
 14253                           
 14254                           ; BSR set to: 1
 14255                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14256  001A7C  0E00               	movlw	0
 14257  001A7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14258  001A80  0E05               	movlw	5
 14259  001A82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14260  001A84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14261  001A88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14262  001A8C  0E00               	movlw	0
 14263  001A8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14264  001A90  0E02               	movlw	2
 14265  001A92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14266  001A94  ECDB  F036         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14267                           
 14268                           ;usb_device.c: 2923: }
 14269  001A98  D006               	goto	l381
 14270  001A9A                     l376:
 14271                           
 14272                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14273  001A9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14274  001A9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14275  001AA2  0E3B               	movlw	59
 14276  001AA4  16DF               	andwf	indf2,f,c
 14277  001AA6                     l381:
 14278                           
 14279                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14280  001AA6  010D               	movlb	13	; () banked
 14281  001AA8  5134               	movf	52,w,b	;volatile
 14282  001AAA  0B0F               	andlw	15
 14283  001AAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14284  001AAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14285  001AB0  0D01               	mullw	1
 14286  001AB2  0E26               	movlw	38
 14287  001AB4  24F3               	addwf	prodl,w,c
 14288  001AB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14289  001AB8  0E0F               	movlw	15
 14290  001ABA  20F4               	addwfc	prodh,w,c
 14291  001ABC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14292                           
 14293                           ; BSR set to: 13
 14294                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14295  001ABE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14296  001AC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14297  001AC6  0EFE               	movlw	254
 14298  001AC8  16DF               	andwf	indf2,f,c
 14299                           
 14300                           ; BSR set to: 13
 14301  001ACA  0012               	return	
 14302  001ACC                     __end_of_USBStdFeatureReqHandler:
 14303                           	opt stack 0
 14304                           tblptru	equ	0xFF8
 14305                           tblptrh	equ	0xFF7
 14306                           tblptrl	equ	0xFF6
 14307                           tablat	equ	0xFF5
 14308                           prodh	equ	0xFF4
 14309                           prodl	equ	0xFF3
 14310                           intcon	equ	0xFF2
 14311                           intcon2	equ	0xFF1
 14312                           intcon3	equ	0xFF0
 14313                           indf0	equ	0xFEF
 14314                           postinc0	equ	0xFEE
 14315                           fsr0h	equ	0xFEA
 14316                           fsr0l	equ	0xFE9
 14317                           wreg	equ	0xFE8
 14318                           indf1	equ	0xFE7
 14319                           postdec1	equ	0xFE5
 14320                           plusw1	equ	0xFE3
 14321                           fsr1h	equ	0xFE2
 14322                           fsr1l	equ	0xFE1
 14323                           indf2	equ	0xFDF
 14324                           postinc2	equ	0xFDE
 14325                           postdec2	equ	0xFDD
 14326                           plusw2	equ	0xFDB
 14327                           fsr2h	equ	0xFDA
 14328                           fsr2l	equ	0xFD9
 14329                           status	equ	0xFD8
 14330                           
 14331 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14332 ;; Defined at:
 14333 ;;		line 54 in file "usb_events.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  event           2   15[COMRAM] enum E6832
 14336 ;;  pdata           2   17[COMRAM] PTR void 
 14337 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14338 ;;		 -> BDT(48), 
 14339 ;;  size            2   19[COMRAM] unsigned int 
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;		None
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1    wreg      unsigned char 
 14344 ;; Registers used:
 14345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14351 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14355 ;;Total ram usage:        8 bytes
 14356 ;; Hardware stack levels used:    1
 14357 ;; Hardware stack levels required when called:    3
 14358 ;; This function calls:
 14359 ;;		_APP_DeviceCustomHIDInitialize
 14360 ;;		_APP_DeviceMSDInitialize
 14361 ;;		_MSDTransferTerminated
 14362 ;;		_SYSTEM_Initialize
 14363 ;;		_USBCheckHIDRequest
 14364 ;;		_USBCheckMSDRequest
 14365 ;; This function is called by:
 14366 ;;		_USBDeviceTasks
 14367 ;;		_USBStdSetCfgHandler
 14368 ;;		_USBSuspend
 14369 ;;		_USBWakeFromSuspend
 14370 ;;		_USBCtrlTrfSetupHandler
 14371 ;;		_USBCheckStdRequest
 14372 ;;		_USBStdFeatureReqHandler
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text67
 14377  006DB6                     __ptext67:
 14378                           	opt stack 0
 14379  006DB6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14380                           	opt stack 26
 14381                           
 14382                           ;usb_events.c: 56: switch((int)event)
 14383                           
 14384                           ;incstack = 0
 14385  006DB6  D019               	goto	l800
 14386  006DB8                     
 14387                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14388  006DB8  0E01               	movlw	1
 14389  006DBA  EC7F  F03E         	call	_SYSTEM_Initialize
 14390                           
 14391                           ;usb_events.c: 79: break;
 14392  006DBE  0012               	return	
 14393  006DC0                     
 14394                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14395  006DC0  0E02               	movlw	2
 14396  006DC2  EC7F  F03E         	call	_SYSTEM_Initialize
 14397                           
 14398                           ;usb_events.c: 90: break;
 14399  006DC6  0012               	return	
 14400  006DC8                     
 14401                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14402  006DC8  EC7E  F041         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14403                           
 14404                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14405  006DCC  EC63  F044         	call	_APP_DeviceMSDInitialize	;wreg free
 14406                           
 14407                           ;usb_events.c: 100: break;
 14408                           
 14409                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14410                           
 14411                           ;usb_events.c: 97: break;
 14412  006DD0  0012               	return	
 14413  006DD2                     
 14414                           ;usb_events.c: 105: USBCheckHIDRequest();
 14415  006DD2  EC45  F029         	call	_USBCheckHIDRequest	;wreg free
 14416                           
 14417                           ;usb_events.c: 108: USBCheckMSDRequest();
 14418  006DD6  ECB2  F02E         	call	_USBCheckMSDRequest	;wreg free
 14419                           
 14420                           ;usb_events.c: 112: break;
 14421                           
 14422                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14423                           
 14424                           ;usb_events.c: 109: break;
 14425  006DDA  0012               	return	
 14426  006DDC                     
 14427                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14428  006DDC  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14429  006DE0  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14430  006DE4  EC7D  F03D         	call	_MSDTransferTerminated	;wreg free
 14431                           
 14432                           ;usb_events.c: 129: }
 14433                           
 14434                           ;usb_events.c: 128: break;
 14435                           
 14436                           ;usb_events.c: 127: default:
 14437                           
 14438                           ;usb_events.c: 125: break;
 14439  006DE8  0012               	return	
 14440  006DEA                     l800:
 14441  006DEA  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14442  006DEE  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14443                           
 14444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14445                           ; Switch size 1, requested type "space"
 14446                           ; Number of cases is 2, Range of values is 0 to 127
 14447                           ; switch strategies available:
 14448                           ; Name         Instructions Cycles
 14449                           ; simple_byte            7     4 (average)
 14450                           ;	Chosen strategy is simple_byte
 14451  006DF2  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14452  006DF4  0A00               	xorlw	0	; case 0
 14453  006DF6  B4D8               	btfsc	status,2,c
 14454  006DF8  D004               	goto	l15736
 14455  006DFA  0A7F               	xorlw	127	; case 127
 14456  006DFC  A4D8               	btfss	status,2,c
 14457  006DFE  0012               	return	
 14458  006E00  D01A               	goto	l15738
 14459  006E02                     l15736:
 14460                           
 14461                           ; Switch size 1, requested type "space"
 14462                           ; Number of cases is 8, Range of values is 1 to 117
 14463                           ; switch strategies available:
 14464                           ; Name         Instructions Cycles
 14465                           ; simple_byte           25    13 (average)
 14466                           ;	Chosen strategy is simple_byte
 14467  006E02  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14468  006E04  0A01               	xorlw	1	; case 1
 14469  006E06  B4D8               	btfsc	status,2,c
 14470  006E08  D7DF               	goto	l806
 14471  006E0A  0A03               	xorlw	3	; case 2
 14472  006E0C  B4D8               	btfsc	status,2,c
 14473  006E0E  0012               	return	
 14474  006E10  0A01               	xorlw	1	; case 3
 14475  006E12  B4D8               	btfsc	status,2,c
 14476  006E14  D7DE               	goto	l808
 14477  006E16  0A06               	xorlw	6	; case 5
 14478  006E18  B4D8               	btfsc	status,2,c
 14479  006E1A  D7E0               	goto	l810
 14480  006E1C  0A77               	xorlw	119	; case 114
 14481  006E1E  B4D8               	btfsc	status,2,c
 14482  006E20  0012               	return	
 14483  006E22  0A01               	xorlw	1	; case 115
 14484  006E24  B4D8               	btfsc	status,2,c
 14485  006E26  0012               	return	
 14486  006E28  0A07               	xorlw	7	; case 116
 14487  006E2A  B4D8               	btfsc	status,2,c
 14488  006E2C  D7C9               	goto	l805
 14489  006E2E  0A01               	xorlw	1	; case 117
 14490  006E30  A4D8               	btfss	status,2,c
 14491  006E32  0012               	return	
 14492  006E34  D7C1               	goto	l804
 14493  006E36                     l15738:
 14494                           
 14495                           ; Switch size 1, requested type "space"
 14496                           ; Number of cases is 1, Range of values is 255 to 255
 14497                           ; switch strategies available:
 14498                           ; Name         Instructions Cycles
 14499                           ; simple_byte            4     3 (average)
 14500                           ;	Chosen strategy is simple_byte
 14501  006E36  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14502  006E38  0AFF               	xorlw	255	; case 255
 14503  006E3A  0012               	return	
 14504  006E3C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14505                           	opt stack 0
 14506                           tblptru	equ	0xFF8
 14507                           tblptrh	equ	0xFF7
 14508                           tblptrl	equ	0xFF6
 14509                           tablat	equ	0xFF5
 14510                           prodh	equ	0xFF4
 14511                           prodl	equ	0xFF3
 14512                           intcon	equ	0xFF2
 14513                           intcon2	equ	0xFF1
 14514                           intcon3	equ	0xFF0
 14515                           indf0	equ	0xFEF
 14516                           postinc0	equ	0xFEE
 14517                           fsr0h	equ	0xFEA
 14518                           fsr0l	equ	0xFE9
 14519                           wreg	equ	0xFE8
 14520                           indf1	equ	0xFE7
 14521                           postdec1	equ	0xFE5
 14522                           plusw1	equ	0xFE3
 14523                           fsr1h	equ	0xFE2
 14524                           fsr1l	equ	0xFE1
 14525                           indf2	equ	0xFDF
 14526                           postinc2	equ	0xFDE
 14527                           postdec2	equ	0xFDD
 14528                           plusw2	equ	0xFDB
 14529                           fsr2h	equ	0xFDA
 14530                           fsr2l	equ	0xFD9
 14531                           status	equ	0xFD8
 14532                           
 14533 ;; *************** function _USBCheckMSDRequest *****************
 14534 ;; Defined at:
 14535 ;;		line 218 in file "usb_device_msd.c"
 14536 ;; Parameters:    Size  Location     Type
 14537 ;;		None
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;		None
 14540 ;; Return value:  Size  Location     Type
 14541 ;;                  1    wreg      void 
 14542 ;; Registers used:
 14543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14550 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14553 ;;Total ram usage:        4 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; Hardware stack levels required when called:    1
 14556 ;; This function calls:
 14557 ;;		_USBTransferOnePacket
 14558 ;; This function is called by:
 14559 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14560 ;; This function uses a non-reentrant model
 14561 ;;
 14562                           
 14563                           	psect	text68
 14564  005D64                     __ptext68:
 14565                           	opt stack 0
 14566  005D64                     _USBCheckMSDRequest:
 14567                           	opt stack 27
 14568                           
 14569                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 14570                           
 14571                           ;incstack = 0
 14572  005D64  010D               	movlb	13	; () banked
 14573  005D66  5130               	movf	48,w,b	;volatile
 14574  005D68  0B1F               	andlw	31
 14575  005D6A  06E8               	decf	wreg,f,c
 14576  005D6C  A4D8               	btfss	status,2,c
 14577  005D6E  0012               	return	
 14578                           
 14579                           ; BSR set to: 13
 14580                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 14581                           
 14582                           ; BSR set to: 13
 14583                           
 14584                           ; BSR set to: 13
 14585                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 14586  005D70  5134               	movf	52,w,b	;volatile
 14587  005D72  A4D8               	btfss	status,2,c
 14588  005D74  0012               	return	
 14589  005D76  D04E               	goto	l529
 14590  005D78                     
 14591                           ; BSR set to: 13
 14592                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 14593                           
 14594                           ; BSR set to: 13
 14595  005D78  5132               	movf	50,w,b	;volatile
 14596  005D7A  1133               	iorwf	51,w,b	;volatile
 14597  005D7C  A4D8               	btfss	status,2,c
 14598  005D7E  0012               	return	
 14599                           
 14600                           ; BSR set to: 13
 14601  005D80  5136               	movf	54,w,b	;volatile
 14602  005D82  1137               	iorwf	55,w,b	;volatile
 14603  005D84  A4D8               	btfss	status,2,c
 14604  005D86  0012               	return	
 14605                           
 14606                           ; BSR set to: 13
 14607                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 14608                           
 14609                           ; BSR set to: 13
 14610                           
 14611                           ; BSR set to: 13
 14612                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 14613  005D88  0E00               	movlw	0
 14614  005D8A  0100               	movlb	0	; () banked
 14615  005D8C  6FE8               	movwf	_MSD_State& (0+255),b
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 14619  005D8E  69E7               	setf	_MSDCommandState& (0+255),b
 14620                           
 14621                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 14622  005D90  0E00               	movlw	0
 14623  005D92  6FE6               	movwf	_MSDReadState& (0+255),b
 14624                           
 14625                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 14626  005D94  0E00               	movlw	0
 14627  005D96  6FE5               	movwf	_MSDWriteState& (0+255),b
 14628                           
 14629                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 14630  005D98  0E01               	movlw	1
 14631  005D9A  6FE1               	movwf	_MSDCBWValid& (0+255),b
 14632                           
 14633                           ; BSR set to: 0
 14634                           
 14635                           ; BSR set to: 0
 14636                           
 14637                           ; BSR set to: 0
 14638                           
 14639                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 14640  005D9C  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 14641  005DA0  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 14642                           
 14643                           ; BSR set to: 0
 14644  005DA4  500C               	movf	_USBCheckMSDRequest$2319,w,c
 14645  005DA6  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 14646  005DA8  B4D8               	btfsc	status,2,c
 14647  005DAA  D00A               	goto	u7280
 14648                           
 14649                           ; BSR set to: 0
 14650                           
 14651                           ; BSR set to: 0
 14652                           
 14653                           ; BSR set to: 0
 14654                           
 14655                           ; BSR set to: 0
 14656  005DAC  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 14657  005DB0  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 14658                           
 14659                           ; BSR set to: 0
 14660                           
 14661                           ; BSR set to: 0
 14662  005DB4  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 14663  005DB8  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 14664  005DBC  BEDF               	btfsc	indf2,7,c
 14665  005DBE  D00F               	goto	l534
 14666  005DC0                     u7280:
 14667                           
 14668                           ; BSR set to: 0
 14669                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 14670                           
 14671                           ; BSR set to: 0
 14672  005DC0  0E00               	movlw	0
 14673  005DC2  6E01               	movwf	USBTransferOnePacket@dir,c
 14674  005DC4  0E40               	movlw	64
 14675  005DC6  6E02               	movwf	USBTransferOnePacket@data,c
 14676  005DC8  0E0D               	movlw	13
 14677  005DCA  6E03               	movwf	USBTransferOnePacket@data+1,c
 14678  005DCC  0E40               	movlw	64
 14679  005DCE  6E04               	movwf	USBTransferOnePacket@len,c
 14680  005DD0  0E02               	movlw	2
 14681  005DD2  ECEC  F026         	call	_USBTransferOnePacket
 14682  005DD6  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 14683  005DDA  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 14684  005DDE                     l534:
 14685                           
 14686                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 14687  005DDE  0E80               	movlw	128
 14688  005DE0  0100               	movlb	0	; () banked
 14689  005DE2  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14690                           
 14691                           ;usb_device_msd.c: 263: break;
 14692  005DE4  0012               	return	
 14693  005DE6                     
 14694                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 14695                           
 14696                           ; BSR set to: 0
 14697  005DE6  010D               	movlb	13	; () banked
 14698  005DE8  5132               	movf	50,w,b	;volatile
 14699  005DEA  1133               	iorwf	51,w,b	;volatile
 14700  005DEC  A4D8               	btfss	status,2,c
 14701  005DEE  0012               	return	
 14702                           
 14703                           ; BSR set to: 13
 14704  005DF0  0536               	decf	54,w,b	;volatile
 14705  005DF2  1137               	iorwf	55,w,b	;volatile
 14706  005DF4  A4D8               	btfss	status,2,c
 14707  005DF6  0012               	return	
 14708                           
 14709                           ; BSR set to: 13
 14710                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 14711                           
 14712                           ; BSR set to: 13
 14713                           
 14714                           ; BSR set to: 13
 14715                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 14716  005DF8  0E00               	movlw	0
 14717  005DFA  6F38               	movwf	56,b	;volatile
 14718                           
 14719                           ; BSR set to: 13
 14720                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14721  005DFC  0E38               	movlw	56
 14722  005DFE  0100               	movlb	0	; () banked
 14723  005E00  6FBF               	movwf	_inPipes& (0+255),b
 14724  005E02  0E0D               	movlw	13
 14725  005E04  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14726                           
 14727                           ; BSR set to: 0
 14728  005E06  0E00               	movlw	0
 14729  005E08  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14730  005E0A  0E01               	movlw	1
 14731  005E0C  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14732                           
 14733                           ; BSR set to: 0
 14734  005E0E  0EC1               	movlw	193
 14735  005E10  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14736                           
 14737                           ; BSR set to: 0
 14738                           ;usb_device_msd.c: 278: }
 14739                           
 14740                           ;usb_device_msd.c: 277: break;
 14741  005E12  0012               	return	
 14742  005E14                     l529:
 14743                           
 14744                           ; BSR set to: 0
 14745  005E14  010D               	movlb	13	; () banked
 14746  005E16  5131               	movf	49,w,b	;volatile
 14747                           
 14748                           ; Switch size 1, requested type "space"
 14749                           ; Number of cases is 2, Range of values is 254 to 255
 14750                           ; switch strategies available:
 14751                           ; Name         Instructions Cycles
 14752                           ; simple_byte            7     4 (average)
 14753                           ;	Chosen strategy is simple_byte
 14754  005E18  0AFE               	xorlw	254	; case 254
 14755  005E1A  B4D8               	btfsc	status,2,c
 14756  005E1C  D7E4               	goto	l546
 14757  005E1E  0A01               	xorlw	1	; case 255
 14758  005E20  A4D8               	btfss	status,2,c
 14759  005E22  0012               	return	
 14760  005E24  D7A9               	goto	l530
 14761  005E26                     __end_of_USBCheckMSDRequest:
 14762                           	opt stack 0
 14763                           tblptru	equ	0xFF8
 14764                           tblptrh	equ	0xFF7
 14765                           tblptrl	equ	0xFF6
 14766                           tablat	equ	0xFF5
 14767                           prodh	equ	0xFF4
 14768                           prodl	equ	0xFF3
 14769                           intcon	equ	0xFF2
 14770                           intcon2	equ	0xFF1
 14771                           intcon3	equ	0xFF0
 14772                           indf0	equ	0xFEF
 14773                           postinc0	equ	0xFEE
 14774                           fsr0h	equ	0xFEA
 14775                           fsr0l	equ	0xFE9
 14776                           wreg	equ	0xFE8
 14777                           indf1	equ	0xFE7
 14778                           postdec1	equ	0xFE5
 14779                           plusw1	equ	0xFE3
 14780                           fsr1h	equ	0xFE2
 14781                           fsr1l	equ	0xFE1
 14782                           indf2	equ	0xFDF
 14783                           postinc2	equ	0xFDE
 14784                           postdec2	equ	0xFDD
 14785                           plusw2	equ	0xFDB
 14786                           fsr2h	equ	0xFDA
 14787                           fsr2l	equ	0xFD9
 14788                           status	equ	0xFD8
 14789                           
 14790 ;; *************** function _USBCheckHIDRequest *****************
 14791 ;; Defined at:
 14792 ;;		line 153 in file "usb_device_hid.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;		None
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;		None
 14797 ;; Return value:  Size  Location     Type
 14798 ;;                  1    wreg      void 
 14799 ;; Registers used:
 14800 ;;		wreg, status,2, status,0
 14801 ;; Tracked objects:
 14802 ;;		On entry : 0/0
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14810 ;;Total ram usage:        0 bytes
 14811 ;; Hardware stack levels used:    1
 14812 ;; This function calls:
 14813 ;;		Nothing
 14814 ;; This function is called by:
 14815 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text69
 14820  00528A                     __ptext69:
 14821                           	opt stack 0
 14822  00528A                     _USBCheckHIDRequest:
 14823                           	opt stack 28
 14824                           
 14825                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 14826                           
 14827                           ;incstack = 0
 14828  00528A  010D               	movlb	13	; () banked
 14829  00528C  5130               	movf	48,w,b	;volatile
 14830  00528E  0B1F               	andlw	31
 14831  005290  06E8               	decf	wreg,f,c
 14832  005292  A4D8               	btfss	status,2,c
 14833  005294  0012               	return	
 14834                           
 14835                           ; BSR set to: 13
 14836                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 14837                           
 14838                           ; BSR set to: 13
 14839                           
 14840                           ; BSR set to: 13
 14841  005296  5134               	movf	52,w,b	;volatile
 14842  005298  A4D8               	btfss	status,2,c
 14843  00529A  0012               	return	
 14844                           
 14845                           ; BSR set to: 13
 14846                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 14847                           
 14848                           ; BSR set to: 13
 14849                           
 14850                           ; BSR set to: 13
 14851  00529C  0E06               	movlw	6
 14852  00529E  1931               	xorwf	49,w,b	;volatile
 14853  0052A0  B4D8               	btfsc	status,2,c
 14854  0052A2  D01A               	goto	l411
 14855  0052A4  D022               	goto	l414
 14856  0052A6                     
 14857                           ; BSR set to: 13
 14858                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 14859                           
 14860                           ; BSR set to: 13
 14861  0052A6  0100               	movlb	0	; () banked
 14862  0052A8  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 14863  0052AA  A4D8               	btfss	status,2,c
 14864  0052AC  D01E               	goto	l414
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 14868  0052AE  0EBA               	movlw	low (_configDescriptor1+18)
 14869  0052B0  6FBF               	movwf	_inPipes& (0+255),b
 14870  0052B2  0E8E               	movlw	high (_configDescriptor1+18)
 14871  0052B4  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14872                           
 14873                           ; BSR set to: 0
 14874  0052B6  0E00               	movlw	0
 14875  0052B8  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14876  0052BA  0E09               	movlw	9
 14877  0052BC  D00B               	goto	L13
 14878  0052BE                     l10512:
 14879                           
 14880                           ; BSR set to: 0
 14881  0052BE  0EC0               	movlw	192
 14882  0052C0  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 14886  0052C2  D013               	goto	l414
 14887  0052C4                     
 14888                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 14889                           
 14890                           ; BSR set to: 0
 14891  0052C4  0E6E               	movlw	low _hid_rpt01
 14892  0052C6  0100               	movlb	0	; () banked
 14893  0052C8  6FBF               	movwf	_inPipes& (0+255),b
 14894  0052CA  0E8F               	movlw	high _hid_rpt01
 14895  0052CC  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14896                           
 14897                           ; BSR set to: 0
 14898  0052CE  0E00               	movlw	0
 14899  0052D0  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14900  0052D2  0E1D               	movlw	29
 14901  0052D4                     L13:
 14902  0052D4  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14903  0052D6  D7F3               	goto	l10512
 14904  0052D8                     l411:
 14905                           
 14906                           ; BSR set to: 0
 14907  0052D8  010D               	movlb	13	; () banked
 14908  0052DA  5133               	movf	51,w,b	;volatile
 14909                           
 14910                           ; Switch size 1, requested type "space"
 14911                           ; Number of cases is 3, Range of values is 33 to 35
 14912                           ; switch strategies available:
 14913                           ; Name         Instructions Cycles
 14914                           ; simple_byte           10     6 (average)
 14915                           ;	Chosen strategy is simple_byte
 14916  0052DC  0A21               	xorlw	33	; case 33
 14917  0052DE  B4D8               	btfsc	status,2,c
 14918  0052E0  D7E2               	goto	l412
 14919  0052E2  0A03               	xorlw	3	; case 34
 14920  0052E4  B4D8               	btfsc	status,2,c
 14921  0052E6  D7EE               	goto	l415
 14922  0052E8  0A01               	xorlw	1	; case 35
 14923  0052EA                     l414:
 14924                           
 14925                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 14926                           
 14927                           ; BSR set to: 13
 14928                           
 14929                           ; BSR set to: 13
 14930  0052EA  010D               	movlb	13	; () banked
 14931  0052EC  3930               	swapf	48,w,b	;volatile
 14932  0052EE  32E8               	rrcf	wreg,f,c
 14933  0052F0  0B03               	andlw	3
 14934  0052F2  06E8               	decf	wreg,f,c
 14935  0052F4  A4D8               	btfss	status,2,c
 14936  0052F6  0012               	return	
 14937  0052F8  D024               	goto	l418
 14938  0052FA                     
 14939                           ; BSR set to: 13
 14940                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14941                           
 14942                           ; BSR set to: 13
 14943  0052FA  0EFC               	movlw	low _idle_rate
 14944  0052FC  0100               	movlb	0	; () banked
 14945  0052FE  6FBF               	movwf	_inPipes& (0+255),b
 14946  005300  0E00               	movlw	high _idle_rate
 14947  005302  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14948                           
 14949                           ; BSR set to: 0
 14950  005304  0E00               	movlw	0
 14951  005306  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14952  005308  0E01               	movlw	1
 14953  00530A  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14954                           
 14955                           ; BSR set to: 0
 14956  00530C  0EC1               	movlw	193
 14957  00530E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14958                           
 14959                           ;usb_device_hid.c: 223: break;
 14960  005310  0012               	return	
 14961  005312                     
 14962                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 14963                           
 14964                           ; BSR set to: 0
 14965  005312  0E80               	movlw	128
 14966  005314  0100               	movlb	0	; () banked
 14967  005316  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 14971  005318  CD33 F0FC          	movff	3379,_idle_rate	;volatile
 14972                           
 14973                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 14974  00531C  0012               	return	
 14975  00531E                     
 14976                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 14977                           
 14978                           ; BSR set to: 0
 14979  00531E  0EFB               	movlw	low _active_protocol
 14980  005320  0100               	movlb	0	; () banked
 14981  005322  6FBF               	movwf	_inPipes& (0+255),b
 14982  005324  0E00               	movlw	high _active_protocol
 14983  005326  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14984                           
 14985                           ; BSR set to: 0
 14986  005328  0E00               	movlw	0
 14987  00532A  6FC4               	movwf	(_inPipes+5)& (0+255),b
 14988  00532C  0E01               	movlw	1
 14989  00532E  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14990                           
 14991                           ; BSR set to: 0
 14992  005330  0E81               	movlw	129
 14993  005332  6FC2               	movwf	(_inPipes+3)& (0+255),b
 14994                           
 14995                           ;usb_device_hid.c: 234: break;
 14996  005334  0012               	return	
 14997  005336                     
 14998                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 14999                           
 15000                           ; BSR set to: 0
 15001  005336  0E80               	movlw	128
 15002  005338  0100               	movlb	0	; () banked
 15003  00533A  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15007  00533C  CD32 F0FB          	movff	3378,_active_protocol	;volatile
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;usb_device_hid.c: 239: }
 15011                           
 15012                           ;usb_device_hid.c: 238: break;
 15013  005340  0012               	return	
 15014  005342                     l418:
 15015                           
 15016                           ; BSR set to: 0
 15017  005342  010D               	movlb	13	; () banked
 15018  005344  5131               	movf	49,w,b	;volatile
 15019                           
 15020                           ; Switch size 1, requested type "space"
 15021                           ; Number of cases is 6, Range of values is 1 to 11
 15022                           ; switch strategies available:
 15023                           ; Name         Instructions Cycles
 15024                           ; simple_byte           19    10 (average)
 15025                           ;	Chosen strategy is simple_byte
 15026  005346  0A01               	xorlw	1	; case 1
 15027  005348  B4D8               	btfsc	status,2,c
 15028  00534A  0012               	return	
 15029  00534C  0A03               	xorlw	3	; case 2
 15030  00534E  B4D8               	btfsc	status,2,c
 15031  005350  D7D4               	goto	l422
 15032  005352  0A01               	xorlw	1	; case 3
 15033  005354  B4D8               	btfsc	status,2,c
 15034  005356  D7E3               	goto	l424
 15035  005358  0A0A               	xorlw	10	; case 9
 15036  00535A  B4D8               	btfsc	status,2,c
 15037  00535C  0012               	return	
 15038  00535E  0A03               	xorlw	3	; case 10
 15039  005360  B4D8               	btfsc	status,2,c
 15040  005362  D7D7               	goto	l423
 15041  005364  0A01               	xorlw	1	; case 11
 15042  005366  A4D8               	btfss	status,2,c
 15043  005368  0012               	return	
 15044  00536A  D7E5               	goto	l425
 15045  00536C                     __end_of_USBCheckHIDRequest:
 15046                           	opt stack 0
 15047                           tblptru	equ	0xFF8
 15048                           tblptrh	equ	0xFF7
 15049                           tblptrl	equ	0xFF6
 15050                           tablat	equ	0xFF5
 15051                           prodh	equ	0xFF4
 15052                           prodl	equ	0xFF3
 15053                           intcon	equ	0xFF2
 15054                           intcon2	equ	0xFF1
 15055                           intcon3	equ	0xFF0
 15056                           indf0	equ	0xFEF
 15057                           postinc0	equ	0xFEE
 15058                           fsr0h	equ	0xFEA
 15059                           fsr0l	equ	0xFE9
 15060                           wreg	equ	0xFE8
 15061                           indf1	equ	0xFE7
 15062                           postdec1	equ	0xFE5
 15063                           plusw1	equ	0xFE3
 15064                           fsr1h	equ	0xFE2
 15065                           fsr1l	equ	0xFE1
 15066                           indf2	equ	0xFDF
 15067                           postinc2	equ	0xFDE
 15068                           postdec2	equ	0xFDD
 15069                           plusw2	equ	0xFDB
 15070                           fsr2h	equ	0xFDA
 15071                           fsr2l	equ	0xFD9
 15072                           status	equ	0xFD8
 15073                           
 15074 ;; *************** function _SYSTEM_Initialize *****************
 15075 ;; Defined at:
 15076 ;;		line 80 in file "system.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  state           1    wreg     enum E6623
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  state           1    4[COMRAM] enum E6623
 15081 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15082 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15083 ;; Return value:  Size  Location     Type
 15084 ;;                  1    wreg      void 
 15085 ;; Registers used:
 15086 ;;		wreg, status,2, status,0
 15087 ;; Tracked objects:
 15088 ;;		On entry : 0/0
 15089 ;;		On exit  : 0/0
 15090 ;;		Unchanged: 0/0
 15091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15093 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15095 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15096 ;;Total ram usage:        5 bytes
 15097 ;; Hardware stack levels used:    1
 15098 ;; This function calls:
 15099 ;;		Nothing
 15100 ;; This function is called by:
 15101 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15102 ;;		_main
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text70
 15107  007CFE                     __ptext70:
 15108                           	opt stack 0
 15109  007CFE                     _SYSTEM_Initialize:
 15110                           	opt stack 28
 15111                           
 15112                           ;incstack = 0
 15113                           ;SYSTEM_Initialize@state stored from wreg
 15114  007CFE  6E05               	movwf	SYSTEM_Initialize@state,c
 15115                           
 15116                           ;system.c: 82: switch(state)
 15117  007D00  D01D               	goto	l926
 15118  007D02                     
 15119                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15120  007D02  0E02               	movlw	2
 15121  007D04  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15122  007D06  0E58               	movlw	88
 15123  007D08  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15124                           
 15125                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15126  007D0A  8C9B               	bsf	3995,6,c	;volatile
 15127  007D0C                     l10698:
 15128  007D0C  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15129  007D0E  A0D8               	btfss	status,0,c
 15130  007D10  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15131  007D12  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15132  007D14  E1FB               	bnz	l10698
 15133  007D16  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15134  007D18  B4D8               	btfsc	status,2,c
 15135  007D1A  0012               	return	
 15136  007D1C  D7F7               	goto	l929
 15137  007D1E                     
 15138                           ;system.c: 119: OSCCON = 0x70;
 15139  007D1E  0E70               	movlw	112
 15140  007D20  6ED3               	movwf	4051,c	;volatile
 15141                           
 15142                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15143  007D22  0E03               	movlw	3
 15144  007D24  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 15145  007D26  0E20               	movlw	32
 15146  007D28  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 15147  007D2A                     l10702:
 15148  007D2A  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 15149  007D2C  A0D8               	btfss	status,0,c
 15150  007D2E  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 15151  007D30  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 15152  007D32  E1FB               	bnz	l10702
 15153  007D34  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 15154  007D36  B4D8               	btfsc	status,2,c
 15155  007D38  0012               	return	
 15156  007D3A  D7F7               	goto	l935
 15157  007D3C                     l926:
 15158  007D3C  5005               	movf	SYSTEM_Initialize@state,w,c
 15159                           
 15160                           ; Switch size 1, requested type "space"
 15161                           ; Number of cases is 3, Range of values is 0 to 2
 15162                           ; switch strategies available:
 15163                           ; Name         Instructions Cycles
 15164                           ; simple_byte           10     6 (average)
 15165                           ;	Chosen strategy is simple_byte
 15166  007D3E  0A00               	xorlw	0	; case 0
 15167  007D40  B4D8               	btfsc	status,2,c
 15168  007D42  D7DF               	goto	l927
 15169  007D44  0A01               	xorlw	1	; case 1
 15170  007D46  B4D8               	btfsc	status,2,c
 15171  007D48  0012               	return	
 15172  007D4A  0A03               	xorlw	3	; case 2
 15173  007D4C  A4D8               	btfss	status,2,c
 15174  007D4E  0012               	return	
 15175  007D50  D7E6               	goto	l933
 15176  007D52                     __end_of_SYSTEM_Initialize:
 15177                           	opt stack 0
 15178                           tblptru	equ	0xFF8
 15179                           tblptrh	equ	0xFF7
 15180                           tblptrl	equ	0xFF6
 15181                           tablat	equ	0xFF5
 15182                           prodh	equ	0xFF4
 15183                           prodl	equ	0xFF3
 15184                           intcon	equ	0xFF2
 15185                           intcon2	equ	0xFF1
 15186                           intcon3	equ	0xFF0
 15187                           indf0	equ	0xFEF
 15188                           postinc0	equ	0xFEE
 15189                           fsr0h	equ	0xFEA
 15190                           fsr0l	equ	0xFE9
 15191                           wreg	equ	0xFE8
 15192                           indf1	equ	0xFE7
 15193                           postdec1	equ	0xFE5
 15194                           plusw1	equ	0xFE3
 15195                           fsr1h	equ	0xFE2
 15196                           fsr1l	equ	0xFE1
 15197                           indf2	equ	0xFDF
 15198                           postinc2	equ	0xFDE
 15199                           postdec2	equ	0xFDD
 15200                           plusw2	equ	0xFDB
 15201                           fsr2h	equ	0xFDA
 15202                           fsr2l	equ	0xFD9
 15203                           status	equ	0xFD8
 15204                           
 15205 ;; *************** function _MSDTransferTerminated *****************
 15206 ;; Defined at:
 15207 ;;		line 1674 in file "usb_device_msd.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;  handle          2   11[COMRAM] PTR void 
 15210 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15211 ;;		 -> BDT(48), 
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15226 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15227 ;;Total ram usage:        4 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:    1
 15230 ;; This function calls:
 15231 ;;		_USBStallEndpoint
 15232 ;;		_USBTransferOnePacket
 15233 ;; This function is called by:
 15234 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15235 ;; This function uses a non-reentrant model
 15236 ;;
 15237                           
 15238                           	psect	text71
 15239  007AFA                     __ptext71:
 15240                           	opt stack 0
 15241  007AFA                     _MSDTransferTerminated:
 15242                           	opt stack 27
 15243                           
 15244                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15245                           
 15246                           ;incstack = 0
 15247  007AFA  0100               	movlb	0	; () banked
 15248  007AFC  51E1               	movf	_MSDCBWValid& (0+255),w,b
 15249  007AFE  A4D8               	btfss	status,2,c
 15250  007B00  D00B               	goto	l764
 15251                           
 15252                           ; BSR set to: 0
 15253                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15254  007B02  0E01               	movlw	1
 15255  007B04  6E01               	movwf	USBStallEndpoint@dir,c
 15256  007B06  0E02               	movlw	2
 15257  007B08  ECDF  F024         	call	_USBStallEndpoint
 15258                           
 15259                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15260  007B0C  0E00               	movlw	0
 15261  007B0E  6E01               	movwf	USBStallEndpoint@dir,c
 15262  007B10  0E02               	movlw	2
 15263  007B12  ECDF  F024         	call	_USBStallEndpoint
 15264                           
 15265                           ;usb_device_msd.c: 1681: }
 15266  007B16  0012               	return	
 15267  007B18                     l764:
 15268  007B18  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15269  007B1C  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15270  007B20  500E               	movf	_MSDTransferTerminated$2407,w,c
 15271  007B22  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15272  007B24  E114               	bnz	l767
 15273  007B26  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15274  007B28  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15275  007B2A  A4D8               	btfss	status,2,c
 15276  007B2C  0012               	return	
 15277                           
 15278                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15279  007B2E  0E00               	movlw	0
 15280  007B30  6E01               	movwf	USBTransferOnePacket@dir,c
 15281  007B32  0E40               	movlw	64
 15282  007B34  6E02               	movwf	USBTransferOnePacket@data,c
 15283  007B36  0E0D               	movlw	13
 15284  007B38  6E03               	movwf	USBTransferOnePacket@data+1,c
 15285  007B3A  0E40               	movlw	64
 15286  007B3C  6E04               	movwf	USBTransferOnePacket@len,c
 15287  007B3E  0E02               	movlw	2
 15288  007B40  ECEC  F026         	call	_USBTransferOnePacket
 15289  007B44  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15290  007B48  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15291  007B4C  0012               	return	
 15292  007B4E                     l767:
 15293  007B4E  0012               	return		;funcret
 15294  007B50                     __end_of_MSDTransferTerminated:
 15295                           	opt stack 0
 15296                           tblptru	equ	0xFF8
 15297                           tblptrh	equ	0xFF7
 15298                           tblptrl	equ	0xFF6
 15299                           tablat	equ	0xFF5
 15300                           prodh	equ	0xFF4
 15301                           prodl	equ	0xFF3
 15302                           intcon	equ	0xFF2
 15303                           intcon2	equ	0xFF1
 15304                           intcon3	equ	0xFF0
 15305                           indf0	equ	0xFEF
 15306                           postinc0	equ	0xFEE
 15307                           fsr0h	equ	0xFEA
 15308                           fsr0l	equ	0xFE9
 15309                           wreg	equ	0xFE8
 15310                           indf1	equ	0xFE7
 15311                           postdec1	equ	0xFE5
 15312                           plusw1	equ	0xFE3
 15313                           fsr1h	equ	0xFE2
 15314                           fsr1l	equ	0xFE1
 15315                           indf2	equ	0xFDF
 15316                           postinc2	equ	0xFDE
 15317                           postdec2	equ	0xFDD
 15318                           plusw2	equ	0xFDB
 15319                           fsr2h	equ	0xFDA
 15320                           fsr2l	equ	0xFD9
 15321                           status	equ	0xFD8
 15322                           
 15323 ;; *************** function _APP_DeviceMSDInitialize *****************
 15324 ;; Defined at:
 15325 ;;		line 84 in file "app_device_msd.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;		None
 15328 ;; Auto vars:     Size  Location     Type
 15329 ;;		None
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      void 
 15332 ;; Registers used:
 15333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15343 ;;Total ram usage:        0 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; Hardware stack levels required when called:    2
 15346 ;; This function calls:
 15347 ;;		_USBEnableEndpoint
 15348 ;;		_USBMSDInit
 15349 ;; This function is called by:
 15350 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15351 ;; This function uses a non-reentrant model
 15352 ;;
 15353                           
 15354                           	psect	text72
 15355  0088C6                     __ptext72:
 15356                           	opt stack 0
 15357  0088C6                     _APP_DeviceMSDInitialize:
 15358                           	opt stack 26
 15359                           
 15360                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15361                           
 15362                           ;incstack = 0
 15363  0088C6  0E1E               	movlw	30
 15364  0088C8  6E09               	movwf	USBEnableEndpoint@options,c
 15365  0088CA  0E02               	movlw	2
 15366  0088CC  ECBC  F040         	call	_USBEnableEndpoint
 15367                           
 15368                           ;app_device_msd.c: 93: USBMSDInit();
 15369  0088D0  ECE6  F025         	call	_USBMSDInit	;wreg free
 15370  0088D4  0012               	return		;funcret
 15371  0088D6                     __end_of_APP_DeviceMSDInitialize:
 15372                           	opt stack 0
 15373                           tblptru	equ	0xFF8
 15374                           tblptrh	equ	0xFF7
 15375                           tblptrl	equ	0xFF6
 15376                           tablat	equ	0xFF5
 15377                           prodh	equ	0xFF4
 15378                           prodl	equ	0xFF3
 15379                           intcon	equ	0xFF2
 15380                           intcon2	equ	0xFF1
 15381                           intcon3	equ	0xFF0
 15382                           indf0	equ	0xFEF
 15383                           postinc0	equ	0xFEE
 15384                           fsr0h	equ	0xFEA
 15385                           fsr0l	equ	0xFE9
 15386                           wreg	equ	0xFE8
 15387                           indf1	equ	0xFE7
 15388                           postdec1	equ	0xFE5
 15389                           plusw1	equ	0xFE3
 15390                           fsr1h	equ	0xFE2
 15391                           fsr1l	equ	0xFE1
 15392                           indf2	equ	0xFDF
 15393                           postinc2	equ	0xFDE
 15394                           postdec2	equ	0xFDD
 15395                           plusw2	equ	0xFDB
 15396                           fsr2h	equ	0xFDA
 15397                           fsr2l	equ	0xFD9
 15398                           status	equ	0xFD8
 15399                           
 15400 ;; *************** function _USBMSDInit *****************
 15401 ;; Defined at:
 15402 ;;		line 142 in file "usb_device_msd.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;		None
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  1    wreg      void 
 15409 ;; Registers used:
 15410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15418 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15420 ;;Total ram usage:        3 bytes
 15421 ;; Hardware stack levels used:    1
 15422 ;; Hardware stack levels required when called:    1
 15423 ;; This function calls:
 15424 ;;		_ExternalFlash_MediaDetect
 15425 ;;		_ExternalFlash_MediaInitialize
 15426 ;;		_ResetSenseData
 15427 ;;		_USBTransferOnePacket
 15428 ;; This function is called by:
 15429 ;;		_APP_DeviceMSDInitialize
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           	psect	text73
 15434  004BCC                     __ptext73:
 15435                           	opt stack 0
 15436  004BCC                     _USBMSDInit:
 15437                           	opt stack 26
 15438                           
 15439                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15440                           
 15441                           ;incstack = 0
 15442  004BCC  0E00               	movlw	0
 15443  004BCE  6E01               	movwf	USBTransferOnePacket@dir,c
 15444  004BD0  0E40               	movlw	64
 15445  004BD2  6E02               	movwf	USBTransferOnePacket@data,c
 15446  004BD4  0E0D               	movlw	13
 15447  004BD6  6E03               	movwf	USBTransferOnePacket@data+1,c
 15448  004BD8  0E40               	movlw	64
 15449  004BDA  6E04               	movwf	USBTransferOnePacket@len,c
 15450  004BDC  0E02               	movlw	2
 15451  004BDE  ECEC  F026         	call	_USBTransferOnePacket
 15452  004BE2  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15453  004BE6  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15454  004BEA  C0C9  F0D5         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15455  004BEE  C0CA  F0D6         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15456                           
 15457                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 15458  004BF2  0E00               	movlw	0
 15459  004BF4  0100               	movlb	0	; () banked
 15460  004BF6  6FE8               	movwf	_MSD_State& (0+255),b
 15461                           
 15462                           ; BSR set to: 0
 15463                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 15464  004BF8  69E7               	setf	_MSDCommandState& (0+255),b
 15465                           
 15466                           ; BSR set to: 0
 15467                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 15468  004BFA  0E00               	movlw	0
 15469  004BFC  6FE6               	movwf	_MSDReadState& (0+255),b
 15470                           
 15471                           ; BSR set to: 0
 15472                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 15473  004BFE  0E00               	movlw	0
 15474  004C00  6FE5               	movwf	_MSDWriteState& (0+255),b
 15475                           
 15476                           ; BSR set to: 0
 15477                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 15478  004C02  0E00               	movlw	0
 15479  004C04  6FE2               	movwf	_MSDHostNoData& (0+255),b
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 15483  004C06  0E00               	movlw	0
 15484  004C08  0101               	movlb	1	; () banked
 15485  004C0A  6F56               	movwf	_gblNumBLKS& (0+255),b
 15486  004C0C  0E00               	movlw	0
 15487  004C0E  6F57               	movwf	(_gblNumBLKS+1)& (0+255),b
 15488  004C10  0E00               	movlw	0
 15489  004C12  6F58               	movwf	(_gblNumBLKS+2)& (0+255),b
 15490  004C14  0E00               	movlw	0
 15491  004C16  6F59               	movwf	(_gblNumBLKS+3)& (0+255),b
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 15495  004C18  0E00               	movlw	0
 15496  004C1A  6F52               	movwf	_gblBLKLen& (0+255),b
 15497  004C1C  0E00               	movlw	0
 15498  004C1E  6F53               	movwf	(_gblBLKLen+1)& (0+255),b
 15499  004C20  0E00               	movlw	0
 15500  004C22  6F54               	movwf	(_gblBLKLen+2)& (0+255),b
 15501  004C24  0E00               	movlw	0
 15502  004C26  6F55               	movwf	(_gblBLKLen+3)& (0+255),b
 15503                           
 15504                           ; BSR set to: 1
 15505                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 15506  004C28  0E01               	movlw	1
 15507  004C2A  0100               	movlb	0	; () banked
 15508  004C2C  6FE1               	movwf	_MSDCBWValid& (0+255),b
 15509                           
 15510                           ; BSR set to: 0
 15511                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 15512  004C2E  0E00               	movlw	0
 15513  004C30  0101               	movlb	1	; () banked
 15514  004C32  6F7F               	movwf	(_gblMediaPresent+1)& (0+255),b
 15515  004C34  0E00               	movlw	0
 15516  004C36  6F7E               	movwf	_gblMediaPresent& (0+255),b
 15517                           
 15518                           ; BSR set to: 1
 15519                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 15520  004C38  0E00               	movlw	0
 15521  004C3A  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 15522  004C3C  D046               	goto	l518
 15523  004C3E                     
 15524                           ; BSR set to: 1
 15525                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 15526                           
 15527                           ; BSR set to: 1
 15528  004C3E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15529  004C40  0D01               	mullw	1
 15530  004C42  0EE3               	movlw	low _SoftDetach
 15531  004C44  24F3               	addwf	prodl,w,c
 15532  004C46  6ED9               	movwf	fsr2l,c
 15533  004C48  0E00               	movlw	high _SoftDetach
 15534  004C4A  20F4               	addwfc	prodh,w,c
 15535  004C4C  6EDA               	movwf	fsr2h,c
 15536  004C4E  0E00               	movlw	0
 15537  004C50  6EDF               	movwf	indf2,c
 15538                           
 15539                           ; BSR set to: 1
 15540                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 15541  004C52  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 15542  004C56  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 15543  004C5A  D801               	call	u6908
 15544  004C5C  D009               	goto	u6909
 15545  004C5E                     u6908:
 15546  004C5E  0005               	push	
 15547  004C60  6EFA               	movwf	pclath,c
 15548  004C62  51DF               	movf	(_LUN+6)& (0+255),w,b
 15549  004C64  6EFD               	movwf	tosl,c
 15550  004C66  51E0               	movf	(_LUN+7)& (0+255),w,b
 15551  004C68  6EFE               	movwf	tosh,c
 15552  004C6A  6AFF               	clrf	tosu,c
 15553  004C6C  50FA               	movf	pclath,w,c
 15554  004C6E  0012               	return		;indir
 15555  004C70                     u6909:
 15556  004C70  0900               	iorlw	0
 15557  004C72  B4D8               	btfsc	status,2,c
 15558  004C74  D026               	goto	l521
 15559                           
 15560                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 15561  004C76  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 15562  004C7A  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 15563  004C7E  D801               	call	u6928
 15564  004C80  D00A               	goto	u6929
 15565  004C82                     u6928:
 15566  004C82  0005               	push	
 15567  004C84  6EFA               	movwf	pclath,c
 15568  004C86  0101               	movlb	1	; () banked
 15569  004C88  51D9               	movf	_LUN& (0+255),w,b
 15570  004C8A  6EFD               	movwf	tosl,c
 15571  004C8C  51DA               	movf	(_LUN+1)& (0+255),w,b
 15572  004C8E  6EFE               	movwf	tosh,c
 15573  004C90  6AFF               	clrf	tosu,c
 15574  004C92  50FA               	movf	pclath,w,c
 15575  004C94  0012               	return		;indir
 15576  004C96                     u6929:
 15577  004C96  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 15578  004C98  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 15579  004C9A  B4D8               	btfsc	status,2,c
 15580  004C9C  D012               	goto	l521
 15581                           
 15582                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 15583  004C9E  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 15584  004CA2  0E01               	movlw	1
 15585  004CA4  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 15586  004CA6  0E00               	movlw	0
 15587  004CA8  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 15588  004CAA  2A0C               	incf	??_USBMSDInit,f,c
 15589  004CAC  D003               	goto	u6944
 15590  004CAE                     u6945:
 15591  004CAE  90D8               	bcf	status,0,c
 15592  004CB0  360D               	rlcf	??_USBMSDInit+1,f,c
 15593  004CB2  360E               	rlcf	??_USBMSDInit+2,f,c
 15594  004CB4                     u6944:
 15595  004CB4  2E0C               	decfsz	??_USBMSDInit,f,c
 15596  004CB6  D7FB               	goto	u6945
 15597  004CB8  500D               	movf	??_USBMSDInit+1,w,c
 15598  004CBA  0101               	movlb	1	; () banked
 15599  004CBC  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 15600  004CBE  500E               	movf	??_USBMSDInit+2,w,c
 15601  004CC0  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 15602  004CC2                     l521:
 15603                           
 15604                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 15605                           
 15606                           ; BSR set to: 1
 15607                           
 15608                           ; BSR set to: 1
 15609  004CC2  EC85  F03B         	call	_ResetSenseData	;wreg free
 15610  004CC6  0101               	movlb	1	; () banked
 15611  004CC8  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 15612  004CCA                     l518:
 15613                           
 15614                           ; BSR set to: 1
 15615                           
 15616                           ; BSR set to: 1
 15617  004CCA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15618  004CCC  A4D8               	btfss	status,2,c
 15619  004CCE  0012               	return	
 15620  004CD0  D7B6               	goto	l519
 15621  004CD2                     __end_of_USBMSDInit:
 15622                           	opt stack 0
 15623                           tosu	equ	0xFFF
 15624                           tosh	equ	0xFFE
 15625                           tosl	equ	0xFFD
 15626                           pclath	equ	0xFFA
 15627                           tblptru	equ	0xFF8
 15628                           tblptrh	equ	0xFF7
 15629                           tblptrl	equ	0xFF6
 15630                           tablat	equ	0xFF5
 15631                           prodh	equ	0xFF4
 15632                           prodl	equ	0xFF3
 15633                           intcon	equ	0xFF2
 15634                           intcon2	equ	0xFF1
 15635                           intcon3	equ	0xFF0
 15636                           indf0	equ	0xFEF
 15637                           postinc0	equ	0xFEE
 15638                           fsr0h	equ	0xFEA
 15639                           fsr0l	equ	0xFE9
 15640                           wreg	equ	0xFE8
 15641                           indf1	equ	0xFE7
 15642                           postdec1	equ	0xFE5
 15643                           plusw1	equ	0xFE3
 15644                           fsr1h	equ	0xFE2
 15645                           fsr1l	equ	0xFE1
 15646                           indf2	equ	0xFDF
 15647                           postinc2	equ	0xFDE
 15648                           postdec2	equ	0xFDD
 15649                           plusw2	equ	0xFDB
 15650                           fsr2h	equ	0xFDA
 15651                           fsr2l	equ	0xFD9
 15652                           status	equ	0xFD8
 15653                           
 15654 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 15655 ;; Defined at:
 15656 ;;		line 47 in file "app_device_custom_hid.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;		None
 15659 ;; Auto vars:     Size  Location     Type
 15660 ;;		None
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15665 ;; Tracked objects:
 15666 ;;		On entry : 0/0
 15667 ;;		On exit  : 0/0
 15668 ;;		Unchanged: 0/0
 15669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15674 ;;Total ram usage:        0 bytes
 15675 ;; Hardware stack levels used:    1
 15676 ;; Hardware stack levels required when called:    2
 15677 ;; This function calls:
 15678 ;;		_USBEnableEndpoint
 15679 ;;		_USBTransferOnePacket
 15680 ;; This function is called by:
 15681 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text74
 15686  0082FC                     __ptext74:
 15687                           	opt stack 0
 15688  0082FC                     _APP_DeviceCustomHIDInitialize:
 15689                           	opt stack 26
 15690                           
 15691                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 15692                           
 15693                           ; BSR set to: 1
 15694                           ;incstack = 0
 15695  0082FC  0E00               	movlw	0
 15696  0082FE  0101               	movlb	1	; () banked
 15697  008300  6F7A               	movwf	_USBInHandle& (0+255),b
 15698  008302  0E00               	movlw	0
 15699  008304  6F7B               	movwf	(_USBInHandle+1)& (0+255),b
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 15703  008306  0E1E               	movlw	30
 15704  008308  6E09               	movwf	USBEnableEndpoint@options,c
 15705  00830A  0E01               	movlw	1
 15706  00830C  ECBC  F040         	call	_USBEnableEndpoint
 15707                           
 15708                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 15709  008310  0E00               	movlw	0
 15710  008312  6E01               	movwf	USBTransferOnePacket@dir,c
 15711  008314  0E90               	movlw	low _ReceivedDataBuffer
 15712  008316  6E02               	movwf	USBTransferOnePacket@data,c
 15713  008318  0E02               	movlw	high _ReceivedDataBuffer
 15714  00831A  6E03               	movwf	USBTransferOnePacket@data+1,c
 15715  00831C  0E40               	movlw	64
 15716  00831E  6E04               	movwf	USBTransferOnePacket@len,c
 15717  008320  0E01               	movlw	1
 15718  008322  ECEC  F026         	call	_USBTransferOnePacket
 15719  008326  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 15720  00832A  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 15721  00832E  0012               	return		;funcret
 15722  008330                     __end_of_APP_DeviceCustomHIDInitialize:
 15723                           	opt stack 0
 15724                           tosu	equ	0xFFF
 15725                           tosh	equ	0xFFE
 15726                           tosl	equ	0xFFD
 15727                           pclath	equ	0xFFA
 15728                           tblptru	equ	0xFF8
 15729                           tblptrh	equ	0xFF7
 15730                           tblptrl	equ	0xFF6
 15731                           tablat	equ	0xFF5
 15732                           prodh	equ	0xFF4
 15733                           prodl	equ	0xFF3
 15734                           intcon	equ	0xFF2
 15735                           intcon2	equ	0xFF1
 15736                           intcon3	equ	0xFF0
 15737                           indf0	equ	0xFEF
 15738                           postinc0	equ	0xFEE
 15739                           fsr0h	equ	0xFEA
 15740                           fsr0l	equ	0xFE9
 15741                           wreg	equ	0xFE8
 15742                           indf1	equ	0xFE7
 15743                           postdec1	equ	0xFE5
 15744                           plusw1	equ	0xFE3
 15745                           fsr1h	equ	0xFE2
 15746                           fsr1l	equ	0xFE1
 15747                           indf2	equ	0xFDF
 15748                           postinc2	equ	0xFDE
 15749                           postdec2	equ	0xFDD
 15750                           plusw2	equ	0xFDB
 15751                           fsr2h	equ	0xFDA
 15752                           fsr2l	equ	0xFD9
 15753                           status	equ	0xFD8
 15754                           
 15755 ;; *************** function _USBEnableEndpoint *****************
 15756 ;; Defined at:
 15757 ;;		line 878 in file "usb_device.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;  ep              1    wreg     unsigned char 
 15760 ;;  options         1    8[COMRAM] unsigned char 
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;  ep              1   11[COMRAM] unsigned char 
 15763 ;;  p               2    9[COMRAM] PTR unsigned char 
 15764 ;;		 -> UEP0(1), 
 15765 ;; Return value:  Size  Location     Type
 15766 ;;                  1    wreg      void 
 15767 ;; Registers used:
 15768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15769 ;; Tracked objects:
 15770 ;;		On entry : 0/0
 15771 ;;		On exit  : 0/0
 15772 ;;		Unchanged: 0/0
 15773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15774 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15775 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15778 ;;Total ram usage:        4 bytes
 15779 ;; Hardware stack levels used:    1
 15780 ;; Hardware stack levels required when called:    1
 15781 ;; This function calls:
 15782 ;;		_USBConfigureEndpoint
 15783 ;; This function is called by:
 15784 ;;		_APP_DeviceCustomHIDInitialize
 15785 ;;		_APP_DeviceMSDInitialize
 15786 ;; This function uses a non-reentrant model
 15787 ;;
 15788                           
 15789                           	psect	text75
 15790  008178                     __ptext75:
 15791                           	opt stack 0
 15792  008178                     _USBEnableEndpoint:
 15793                           	opt stack 26
 15794                           
 15795                           ;incstack = 0
 15796                           ;USBEnableEndpoint@ep stored from wreg
 15797  008178  6E0C               	movwf	USBEnableEndpoint@ep,c
 15798                           
 15799                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 15800  00817A  A409               	btfss	USBEnableEndpoint@options,2,c
 15801  00817C  D005               	goto	l178
 15802                           
 15803                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15804  00817E  0E00               	movlw	0
 15805  008180  6E01               	movwf	USBConfigureEndpoint@direction,c
 15806  008182  500C               	movf	USBEnableEndpoint@ep,w,c
 15807  008184  EC55  F034         	call	_USBConfigureEndpoint
 15808  008188                     l178:
 15809                           
 15810                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 15811  008188  A209               	btfss	USBEnableEndpoint@options,1,c
 15812  00818A  D005               	goto	l179
 15813                           
 15814                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15815  00818C  0E01               	movlw	1
 15816  00818E  6E01               	movwf	USBConfigureEndpoint@direction,c
 15817  008190  500C               	movf	USBEnableEndpoint@ep,w,c
 15818  008192  EC55  F034         	call	_USBConfigureEndpoint
 15819  008196                     l179:
 15820                           
 15821                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15822  008196  500C               	movf	USBEnableEndpoint@ep,w,c
 15823  008198  0D01               	mullw	1
 15824  00819A  0E26               	movlw	38
 15825  00819C  24F3               	addwf	prodl,w,c
 15826  00819E  6E0A               	movwf	USBEnableEndpoint@p,c
 15827  0081A0  0E0F               	movlw	15
 15828  0081A2  20F4               	addwfc	prodh,w,c
 15829  0081A4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 15830                           
 15831                           ;usb_device.c: 901: *p = options;
 15832  0081A6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 15833  0081AA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 15834  0081AE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 15835  0081B2  0012               	return		;funcret
 15836  0081B4                     __end_of_USBEnableEndpoint:
 15837                           	opt stack 0
 15838                           tosu	equ	0xFFF
 15839                           tosh	equ	0xFFE
 15840                           tosl	equ	0xFFD
 15841                           pclath	equ	0xFFA
 15842                           tblptru	equ	0xFF8
 15843                           tblptrh	equ	0xFF7
 15844                           tblptrl	equ	0xFF6
 15845                           tablat	equ	0xFF5
 15846                           prodh	equ	0xFF4
 15847                           prodl	equ	0xFF3
 15848                           intcon	equ	0xFF2
 15849                           intcon2	equ	0xFF1
 15850                           intcon3	equ	0xFF0
 15851                           indf0	equ	0xFEF
 15852                           postinc0	equ	0xFEE
 15853                           fsr0h	equ	0xFEA
 15854                           fsr0l	equ	0xFE9
 15855                           wreg	equ	0xFE8
 15856                           indf1	equ	0xFE7
 15857                           postdec1	equ	0xFE5
 15858                           plusw1	equ	0xFE3
 15859                           fsr1h	equ	0xFE2
 15860                           fsr1l	equ	0xFE1
 15861                           indf2	equ	0xFDF
 15862                           postinc2	equ	0xFDE
 15863                           postdec2	equ	0xFDD
 15864                           plusw2	equ	0xFDB
 15865                           fsr2h	equ	0xFDA
 15866                           fsr2l	equ	0xFD9
 15867                           status	equ	0xFD8
 15868                           
 15869 ;; *************** function _USBConfigureEndpoint *****************
 15870 ;; Defined at:
 15871 ;;		line 1545 in file "usb_device.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;  EPNum           1    wreg     unsigned char 
 15874 ;;  direction       1    0[COMRAM] unsigned char 
 15875 ;; Auto vars:     Size  Location     Type
 15876 ;;  EPNum           1    5[COMRAM] unsigned char 
 15877 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 15878 ;;		 -> BDT(48), 
 15879 ;; Return value:  Size  Location     Type
 15880 ;;                  1    wreg      void 
 15881 ;; Registers used:
 15882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15883 ;; Tracked objects:
 15884 ;;		On entry : 0/0
 15885 ;;		On exit  : 0/0
 15886 ;;		Unchanged: 0/0
 15887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15892 ;;Total ram usage:        8 bytes
 15893 ;; Hardware stack levels used:    1
 15894 ;; This function calls:
 15895 ;;		Nothing
 15896 ;; This function is called by:
 15897 ;;		_USBEnableEndpoint
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text76
 15902  0068AA                     __ptext76:
 15903                           	opt stack 0
 15904  0068AA                     _USBConfigureEndpoint:
 15905                           	opt stack 26
 15906                           
 15907                           ;incstack = 0
 15908                           ;USBConfigureEndpoint@EPNum stored from wreg
 15909  0068AA  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 15910                           
 15911                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 15912  0068AC  0E00               	movlw	0
 15913  0068AE  6E07               	movwf	USBConfigureEndpoint@handle,c
 15914  0068B0  0E0D               	movlw	13
 15915  0068B2  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 15916                           
 15917                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 15918  0068B4  5001               	movf	USBConfigureEndpoint@direction,w,c
 15919  0068B6  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 15920  0068B8  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 15921  0068BA  90D8               	bcf	status,0,c
 15922  0068BC  3602               	rlcf	??_USBConfigureEndpoint,f,c
 15923  0068BE  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 15924  0068C0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 15925  0068C2  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 15926  0068C4  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 15927  0068C6  90D8               	bcf	status,0,c
 15928  0068C8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15929  0068CA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15930  0068CC  90D8               	bcf	status,0,c
 15931  0068CE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15932  0068D0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15933  0068D2  5002               	movf	??_USBConfigureEndpoint,w,c
 15934  0068D4  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 15935  0068D6  5003               	movf	??_USBConfigureEndpoint+1,w,c
 15936  0068D8  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 15937  0068DA  90D8               	bcf	status,0,c
 15938  0068DC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15939  0068DE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15940  0068E0  90D8               	bcf	status,0,c
 15941  0068E2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 15942  0068E4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 15943  0068E6  5004               	movf	??_USBConfigureEndpoint+2,w,c
 15944  0068E8  2607               	addwf	USBConfigureEndpoint@handle,f,c
 15945  0068EA  5005               	movf	??_USBConfigureEndpoint+3,w,c
 15946  0068EC  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 15947                           
 15948                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 15949  0068EE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 15950  0068F2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 15951  0068F6  9EDF               	bcf	indf2,7,c
 15952                           
 15953                           ;usb_device.c: 1559: if(direction == 0)
 15954  0068F8  5001               	movf	USBConfigureEndpoint@direction,w,c
 15955  0068FA  A4D8               	btfss	status,2,c
 15956  0068FC  D007               	goto	l214
 15957                           
 15958                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 15959  0068FE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 15960  006900  0D02               	mullw	2
 15961  006902  0E40               	movlw	low _pBDTEntryOut
 15962  006904  24F3               	addwf	prodl,w,c
 15963  006906  6ED9               	movwf	fsr2l,c
 15964  006908  0E01               	movlw	high _pBDTEntryOut
 15965  00690A  D006               	goto	L14
 15966  00690C                     l214:
 15967                           
 15968                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 15969  00690C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 15970  00690E  0D02               	mullw	2
 15971  006910  0EC5               	movlw	low _pBDTEntryIn
 15972  006912  24F3               	addwf	prodl,w,c
 15973  006914  6ED9               	movwf	fsr2l,c
 15974  006916  0E00               	movlw	high _pBDTEntryIn
 15975  006918                     L14:
 15976  006918  20F4               	addwfc	prodh,w,c
 15977  00691A  6EDA               	movwf	fsr2h,c
 15978  00691C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 15979  006920  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 15980                           
 15981                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 15982  006924  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 15983  006928  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 15984  00692C  9CDF               	bcf	indf2,6,c
 15985                           
 15986                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 15987  00692E  EE20 F004          	lfsr	2,4
 15988  006932  5007               	movf	USBConfigureEndpoint@handle,w,c
 15989  006934  26D9               	addwf	fsr2l,f,c
 15990  006936  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 15991  006938  22DA               	addwfc	fsr2h,f,c
 15992  00693A  8CDF               	bsf	indf2,6,c
 15993  00693C  0012               	return		;funcret
 15994  00693E                     __end_of_USBConfigureEndpoint:
 15995                           	opt stack 0
 15996                           tosu	equ	0xFFF
 15997                           tosh	equ	0xFFE
 15998                           tosl	equ	0xFFD
 15999                           pclath	equ	0xFFA
 16000                           tblptru	equ	0xFF8
 16001                           tblptrh	equ	0xFF7
 16002                           tblptrl	equ	0xFF6
 16003                           tablat	equ	0xFF5
 16004                           prodh	equ	0xFF4
 16005                           prodl	equ	0xFF3
 16006                           intcon	equ	0xFF2
 16007                           intcon2	equ	0xFF1
 16008                           intcon3	equ	0xFF0
 16009                           indf0	equ	0xFEF
 16010                           postinc0	equ	0xFEE
 16011                           fsr0h	equ	0xFEA
 16012                           fsr0l	equ	0xFE9
 16013                           wreg	equ	0xFE8
 16014                           indf1	equ	0xFE7
 16015                           postdec1	equ	0xFE5
 16016                           plusw1	equ	0xFE3
 16017                           fsr1h	equ	0xFE2
 16018                           fsr1l	equ	0xFE1
 16019                           indf2	equ	0xFDF
 16020                           postinc2	equ	0xFDE
 16021                           postdec2	equ	0xFDD
 16022                           plusw2	equ	0xFDB
 16023                           fsr2h	equ	0xFDA
 16024                           fsr2l	equ	0xFD9
 16025                           status	equ	0xFD8
 16026                           
 16027 ;; *************** function _USBCtrlTrfOutHandler *****************
 16028 ;; Defined at:
 16029 ;;		line 2540 in file "usb_device.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;		None
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;		None
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  1    wreg      void 
 16036 ;; Registers used:
 16037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16047 ;;Total ram usage:        0 bytes
 16048 ;; Hardware stack levels used:    1
 16049 ;; Hardware stack levels required when called:    2
 16050 ;; This function calls:
 16051 ;;		_USBCtrlTrfRxService
 16052 ;; This function is called by:
 16053 ;;		_USBCtrlEPService
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	text77
 16058  0077CC                     __ptext77:
 16059                           	opt stack 0
 16060  0077CC                     _USBCtrlTrfOutHandler:
 16061                           	opt stack 26
 16062                           
 16063                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16064                           
 16065                           ;incstack = 0
 16066  0077CC  0E02               	movlw	2
 16067  0077CE  0100               	movlb	0	; () banked
 16068  0077D0  19F4               	xorwf	_controlTransferState& (0+255),w,b
 16069  0077D2  A4D8               	btfss	status,2,c
 16070  0077D4  D003               	goto	l320
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16074  0077D6  ECBE  F022         	call	_USBCtrlTrfRxService	;wreg free
 16075                           
 16076                           ;usb_device.c: 2545: }
 16077  0077DA  0012               	return	
 16078  0077DC                     l320:
 16079                           
 16080                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16081  0077DC  0E00               	movlw	0
 16082  0077DE  0100               	movlb	0	; () banked
 16083  0077E0  6FF4               	movwf	_controlTransferState& (0+255),b
 16084                           
 16085                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16086  0077E2  51F0               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16087  0077E4  A4D8               	btfss	status,2,c
 16088  0077E6  D01F               	goto	l322
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16092  0077E8  EE20 F001          	lfsr	2,1
 16093  0077EC  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16094  0077EE  26D9               	addwf	fsr2l,f,c
 16095  0077F0  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16096  0077F2  22DA               	addwfc	fsr2h,f,c
 16097  0077F4  0E08               	movlw	8
 16098  0077F6  6EDF               	movwf	indf2,c
 16099                           
 16100                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16101  0077F8  EE20 F002          	lfsr	2,2
 16102  0077FC  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16103  0077FE  26D9               	addwf	fsr2l,f,c
 16104  007800  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16105  007802  22DA               	addwfc	fsr2h,f,c
 16106  007804  0E30               	movlw	48
 16107  007806  6EDE               	movwf	postinc2,c
 16108  007808  0E0D               	movlw	13
 16109  00780A  6EDD               	movwf	postdec2,c
 16110                           
 16111                           ; BSR set to: 0
 16112                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16113  00780C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16114  007810  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16115  007814  0E0C               	movlw	12
 16116  007816  6EDF               	movwf	indf2,c
 16117                           
 16118                           ; BSR set to: 0
 16119                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16120  007818  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16121  00781C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16122  007820  0E00               	movlw	0
 16123  007822  8EDB               	bsf	plusw2,7,c
 16124                           
 16125                           ;usb_device.c: 2563: }
 16126  007824  0012               	return	
 16127  007826                     l322:
 16128                           
 16129                           ; BSR set to: 0
 16130                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16131                           
 16132                           ; BSR set to: 0
 16133  007826  0E00               	movlw	0
 16134  007828  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16135                           
 16136                           ; BSR set to: 0
 16137  00782A  0012               	return	
 16138  00782C                     __end_of_USBCtrlTrfOutHandler:
 16139                           	opt stack 0
 16140                           tosu	equ	0xFFF
 16141                           tosh	equ	0xFFE
 16142                           tosl	equ	0xFFD
 16143                           pclath	equ	0xFFA
 16144                           tblptru	equ	0xFF8
 16145                           tblptrh	equ	0xFF7
 16146                           tblptrl	equ	0xFF6
 16147                           tablat	equ	0xFF5
 16148                           prodh	equ	0xFF4
 16149                           prodl	equ	0xFF3
 16150                           intcon	equ	0xFF2
 16151                           intcon2	equ	0xFF1
 16152                           intcon3	equ	0xFF0
 16153                           indf0	equ	0xFEF
 16154                           postinc0	equ	0xFEE
 16155                           fsr0h	equ	0xFEA
 16156                           fsr0l	equ	0xFE9
 16157                           wreg	equ	0xFE8
 16158                           indf1	equ	0xFE7
 16159                           postdec1	equ	0xFE5
 16160                           plusw1	equ	0xFE3
 16161                           fsr1h	equ	0xFE2
 16162                           fsr1l	equ	0xFE1
 16163                           indf2	equ	0xFDF
 16164                           postinc2	equ	0xFDE
 16165                           postdec2	equ	0xFDD
 16166                           plusw2	equ	0xFDB
 16167                           fsr2h	equ	0xFDA
 16168                           fsr2l	equ	0xFD9
 16169                           status	equ	0xFD8
 16170                           
 16171 ;; *************** function _USBCtrlTrfRxService *****************
 16172 ;; Defined at:
 16173 ;;		line 1854 in file "usb_device.c"
 16174 ;; Parameters:    Size  Location     Type
 16175 ;;		None
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16178 ;;  i               1    0[COMRAM] unsigned char 
 16179 ;; Return value:  Size  Location     Type
 16180 ;;                  1    wreg      void 
 16181 ;; Registers used:
 16182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16183 ;; Tracked objects:
 16184 ;;		On entry : 0/0
 16185 ;;		On exit  : 0/0
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16192 ;;Total ram usage:        2 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; Hardware stack levels required when called:    1
 16195 ;; This function calls:
 16196 ;;		_USBCtrlEPAllowStatusStage
 16197 ;; This function is called by:
 16198 ;;		_USBCtrlTrfOutHandler
 16199 ;; This function uses a non-reentrant model
 16200 ;;
 16201                           
 16202                           	psect	text78
 16203  00457C                     __ptext78:
 16204                           	opt stack 0
 16205  00457C                     _USBCtrlTrfRxService:
 16206                           	opt stack 26
 16207                           
 16208                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16209                           
 16210                           ;incstack = 0
 16211  00457C  0100               	movlb	0	; () banked
 16212  00457E  EE20 F001          	lfsr	2,1
 16213  004582  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16214  004584  26D9               	addwf	fsr2l,f,c
 16215  004586  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16216  004588  22DA               	addwfc	fsr2h,f,c
 16217  00458A  50DF               	movf	indf2,w,c
 16218  00458C  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16219                           
 16220                           ; BSR set to: 0
 16221                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16222  00458E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16223  004590  0101               	movlb	1	; () banked
 16224  004592  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16225  004594  0E00               	movlw	0
 16226  004596  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16227  004598  A0D8               	btfss	status,0,c
 16228                           
 16229                           ; BSR set to: 1
 16230                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16231  00459A  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16232                           
 16233                           ; BSR set to: 1
 16234                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16235                           
 16236                           ; BSR set to: 1
 16237  00459E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16238  0045A0  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16239  0045A2  0E00               	movlw	0
 16240  0045A4  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16241                           
 16242                           ; BSR set to: 1
 16243                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16244  0045A6  0E00               	movlw	0
 16245  0045A8  6E01               	movwf	USBCtrlTrfRxService@i,c
 16246  0045AA  D011               	goto	l248
 16247  0045AC                     
 16248                           ; BSR set to: 1
 16249                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16250                           
 16251                           ; BSR set to: 1
 16252  0045AC  5001               	movf	USBCtrlTrfRxService@i,w,c
 16253  0045AE  0D01               	mullw	1
 16254  0045B0  0E38               	movlw	56
 16255  0045B2  24F3               	addwf	prodl,w,c
 16256  0045B4  6ED9               	movwf	fsr2l,c
 16257  0045B6  0E0D               	movlw	13
 16258  0045B8  20F4               	addwfc	prodh,w,c
 16259  0045BA  6EDA               	movwf	fsr2h,c
 16260  0045BC  C131  FFE1         	movff	_outPipes,fsr1l
 16261  0045C0  C132  FFE2         	movff	_outPipes+1,fsr1h
 16262  0045C4  CFDF FFE7          	movff	indf2,indf1
 16263                           
 16264                           ; BSR set to: 1
 16265  0045C8  4B31               	infsnz	_outPipes& (0+255),f,b
 16266  0045CA  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16267                           
 16268                           ; BSR set to: 1
 16269  0045CC  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16270  0045CE                     l248:
 16271                           
 16272                           ; BSR set to: 1
 16273                           
 16274                           ; BSR set to: 1
 16275  0045CE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16276  0045D0  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16277  0045D2  A0D8               	btfss	status,0,c
 16278  0045D4  D7EB               	goto	l249
 16279                           
 16280                           ; BSR set to: 1
 16281                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16282                           
 16283                           ; BSR set to: 1
 16284  0045D6  5135               	movf	(_outPipes+4)& (0+255),w,b
 16285  0045D8  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16286  0045DA  B4D8               	btfsc	status,2,c
 16287  0045DC  D033               	goto	l251
 16288                           
 16289                           ; BSR set to: 1
 16290                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16291  0045DE  0100               	movlb	0	; () banked
 16292  0045E0  EE20 F001          	lfsr	2,1
 16293  0045E4  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16294  0045E6  26D9               	addwf	fsr2l,f,c
 16295  0045E8  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16296  0045EA  22DA               	addwfc	fsr2h,f,c
 16297  0045EC  0E08               	movlw	8
 16298  0045EE  6EDF               	movwf	indf2,c
 16299                           
 16300                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16301  0045F0  EE20 F002          	lfsr	2,2
 16302  0045F4  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16303  0045F6  26D9               	addwf	fsr2l,f,c
 16304  0045F8  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16305  0045FA  22DA               	addwfc	fsr2h,f,c
 16306  0045FC  0E38               	movlw	56
 16307  0045FE  6EDE               	movwf	postinc2,c
 16308  004600  0E0D               	movlw	13
 16309  004602  6EDD               	movwf	postdec2,c
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16313  004604  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16314  004608  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16315  00460C  BCDF               	btfsc	indf2,6,c
 16316  00460E  D00D               	goto	l252
 16317                           
 16318                           ; BSR set to: 0
 16319                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16320  004610  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16321  004614  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16322  004618  0E48               	movlw	72
 16323  00461A  6EDF               	movwf	indf2,c
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16327  00461C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16328  004620  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16329  004624  0E00               	movlw	0
 16330  004626  8EDB               	bsf	plusw2,7,c
 16331                           
 16332                           ;usb_device.c: 1891: }
 16333  004628  0012               	return	
 16334  00462A                     l252:
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16338                           
 16339                           ; BSR set to: 0
 16340  00462A  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16341  00462E  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16342  004632  0E08               	movlw	8
 16343  004634  6EDF               	movwf	indf2,c
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16347  004636  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16348  00463A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16349  00463E  0E00               	movlw	0
 16350  004640  8EDB               	bsf	plusw2,7,c
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16354  004642  0012               	return	
 16355  004644                     l251:
 16356                           
 16357                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16358                           
 16359                           ; BSR set to: 0
 16360  004644  0100               	movlb	0	; () banked
 16361  004646  EE20 F001          	lfsr	2,1
 16362  00464A  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16363  00464C  26D9               	addwf	fsr2l,f,c
 16364  00464E  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16365  004650  22DA               	addwfc	fsr2h,f,c
 16366  004652  0E08               	movlw	8
 16367  004654  6EDF               	movwf	indf2,c
 16368                           
 16369                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16370  004656  EE20 F002          	lfsr	2,2
 16371  00465A  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16372  00465C  26D9               	addwf	fsr2l,f,c
 16373  00465E  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16374  004660  22DA               	addwfc	fsr2h,f,c
 16375  004662  0E30               	movlw	48
 16376  004664  6EDE               	movwf	postinc2,c
 16377  004666  0E0D               	movlw	13
 16378  004668  6EDD               	movwf	postdec2,c
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16382  00466A  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16383  00466E  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16384  004672  0E04               	movlw	4
 16385  004674  6EDF               	movwf	indf2,c
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16389  004676  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16390  00467A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16391  00467E  0E00               	movlw	0
 16392  004680  8EDB               	bsf	plusw2,7,c
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16396                           
 16397                           ; BSR set to: 0
 16398  004682  0101               	movlb	1	; () banked
 16399  004684  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16400                           
 16401                           ; BSR set to: 1
 16402                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16403  004686  0100               	movlb	0	; () banked
 16404  004688  51EE               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16405  00468A  A4D8               	btfss	status,2,c
 16406  00468C  0012               	return	
 16407                           
 16408                           ; BSR set to: 0
 16409                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16410  00468E  ECEE  F02D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16411  004692  0012               	return	
 16412  004694                     __end_of_USBCtrlTrfRxService:
 16413                           	opt stack 0
 16414                           tosu	equ	0xFFF
 16415                           tosh	equ	0xFFE
 16416                           tosl	equ	0xFFD
 16417                           pclath	equ	0xFFA
 16418                           tblptru	equ	0xFF8
 16419                           tblptrh	equ	0xFF7
 16420                           tblptrl	equ	0xFF6
 16421                           tablat	equ	0xFF5
 16422                           prodh	equ	0xFF4
 16423                           prodl	equ	0xFF3
 16424                           intcon	equ	0xFF2
 16425                           intcon2	equ	0xFF1
 16426                           intcon3	equ	0xFF0
 16427                           indf0	equ	0xFEF
 16428                           postinc0	equ	0xFEE
 16429                           fsr0h	equ	0xFEA
 16430                           fsr0l	equ	0xFE9
 16431                           wreg	equ	0xFE8
 16432                           indf1	equ	0xFE7
 16433                           postdec1	equ	0xFE5
 16434                           plusw1	equ	0xFE3
 16435                           fsr1h	equ	0xFE2
 16436                           fsr1l	equ	0xFE1
 16437                           indf2	equ	0xFDF
 16438                           postinc2	equ	0xFDE
 16439                           postdec2	equ	0xFDD
 16440                           plusw2	equ	0xFDB
 16441                           fsr2h	equ	0xFDA
 16442                           fsr2l	equ	0xFD9
 16443                           status	equ	0xFD8
 16444                           
 16445 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16446 ;; Defined at:
 16447 ;;		line 1418 in file "usb_device.c"
 16448 ;; Parameters:    Size  Location     Type
 16449 ;;		None
 16450 ;; Auto vars:     Size  Location     Type
 16451 ;;		None
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  1    wreg      void 
 16454 ;; Registers used:
 16455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16465 ;;Total ram usage:        0 bytes
 16466 ;; Hardware stack levels used:    1
 16467 ;; This function calls:
 16468 ;;		Nothing
 16469 ;; This function is called by:
 16470 ;;		_USBDeviceTasks
 16471 ;;		_USBCtrlEPServiceComplete
 16472 ;;		_USBCtrlTrfRxService
 16473 ;; This function uses a non-reentrant model
 16474 ;;
 16475                           
 16476                           	psect	text79
 16477  005BDC                     __ptext79:
 16478                           	opt stack 0
 16479  005BDC                     _USBCtrlEPAllowStatusStage:
 16480                           	opt stack 26
 16481                           
 16482                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 16483                           
 16484                           ;incstack = 0
 16485  005BDC  0100               	movlb	0	; () banked
 16486  005BDE  51ED               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 16487  005BE0  A4D8               	btfss	status,2,c
 16488  005BE2  0012               	return	
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 16492  005BE4  0E01               	movlw	1
 16493  005BE6  6FED               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16494                           
 16495                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 16496  005BE8  51EC               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 16497  005BEA  A4D8               	btfss	status,2,c
 16498  005BEC  0012               	return	
 16499                           
 16500                           ; BSR set to: 0
 16501                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 16502  005BEE  0E01               	movlw	1
 16503  005BF0  6FEC               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;usb_device.c: 1434: if(controlTransferState == 2)
 16507  005BF2  0E02               	movlw	2
 16508  005BF4  19F4               	xorwf	_controlTransferState& (0+255),w,b
 16509  005BF6  A4D8               	btfss	status,2,c
 16510  005BF8  D015               	goto	l202
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 16514  005BFA  EE20 F001          	lfsr	2,1
 16515  005BFE  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 16516  005C00  26D9               	addwf	fsr2l,f,c
 16517  005C02  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16518  005C04  22DA               	addwfc	fsr2h,f,c
 16519  005C06  0E00               	movlw	0
 16520  005C08  6EDF               	movwf	indf2,c
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16524  005C0A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16525  005C0E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16526  005C12  0E48               	movlw	72
 16527  005C14  6EDF               	movwf	indf2,c
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16531  005C16  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16532  005C1A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16533  005C1E  0E00               	movlw	0
 16534  005C20  8EDB               	bsf	plusw2,7,c
 16535                           
 16536                           ;usb_device.c: 1439: }
 16537  005C22  0012               	return	
 16538  005C24                     l202:
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 16542                           
 16543                           ; BSR set to: 0
 16544  005C24  05F4               	decf	_controlTransferState& (0+255),w,b
 16545  005C26  A4D8               	btfss	status,2,c
 16546  005C28  0012               	return	
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 16550  005C2A  0E00               	movlw	0
 16551  005C2C  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16552                           
 16553                           ; BSR set to: 0
 16554                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 16555  005C2E  EE20 F001          	lfsr	2,1
 16556  005C32  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16557  005C34  26D9               	addwf	fsr2l,f,c
 16558  005C36  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16559  005C38  22DA               	addwfc	fsr2h,f,c
 16560  005C3A  0E08               	movlw	8
 16561  005C3C  6EDF               	movwf	indf2,c
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16565  005C3E  EE20 F002          	lfsr	2,2
 16566  005C42  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16567  005C44  26D9               	addwf	fsr2l,f,c
 16568  005C46  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16569  005C48  22DA               	addwfc	fsr2h,f,c
 16570  005C4A  0E30               	movlw	48
 16571  005C4C  6EDE               	movwf	postinc2,c
 16572  005C4E  0E0D               	movlw	13
 16573  005C50  6EDD               	movwf	postdec2,c
 16574                           
 16575                           ; BSR set to: 0
 16576                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16577  005C52  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16578  005C56  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16579  005C5A  0E04               	movlw	4
 16580  005C5C  6EDF               	movwf	indf2,c
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16584  005C5E  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16585  005C62  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16586  005C66  0E00               	movlw	0
 16587  005C68  8EDB               	bsf	plusw2,7,c
 16588                           
 16589                           ; BSR set to: 0
 16590                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 16591  005C6A  0E01               	movlw	1
 16592  005C6C  6FF0               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 16596  005C6E  EE20 F001          	lfsr	2,1
 16597  005C72  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16598  005C74  26D9               	addwf	fsr2l,f,c
 16599  005C76  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16600  005C78  22DA               	addwfc	fsr2h,f,c
 16601  005C7A  0E08               	movlw	8
 16602  005C7C  6EDF               	movwf	indf2,c
 16603                           
 16604                           ; BSR set to: 0
 16605                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16606  005C7E  EE20 F002          	lfsr	2,2
 16607  005C82  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16608  005C84  26D9               	addwf	fsr2l,f,c
 16609  005C86  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16610  005C88  22DA               	addwfc	fsr2h,f,c
 16611  005C8A  0E30               	movlw	48
 16612  005C8C  6EDE               	movwf	postinc2,c
 16613  005C8E  0E0D               	movlw	13
 16614  005C90  6EDD               	movwf	postdec2,c
 16615                           
 16616                           ; BSR set to: 0
 16617                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16618  005C92  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16619  005C96  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16620  005C9A  0E80               	movlw	128
 16621  005C9C  6EDF               	movwf	indf2,c
 16622                           
 16623                           ; BSR set to: 0
 16624                           
 16625                           ; BSR set to: 0
 16626                           
 16627                           ; BSR set to: 0
 16628  005C9E  0012               	return	
 16629  005CA0                     __end_of_USBCtrlEPAllowStatusStage:
 16630                           	opt stack 0
 16631                           tosu	equ	0xFFF
 16632                           tosh	equ	0xFFE
 16633                           tosl	equ	0xFFD
 16634                           pclath	equ	0xFFA
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           intcon	equ	0xFF2
 16642                           intcon2	equ	0xFF1
 16643                           intcon3	equ	0xFF0
 16644                           indf0	equ	0xFEF
 16645                           postinc0	equ	0xFEE
 16646                           fsr0h	equ	0xFEA
 16647                           fsr0l	equ	0xFE9
 16648                           wreg	equ	0xFE8
 16649                           indf1	equ	0xFE7
 16650                           postdec1	equ	0xFE5
 16651                           plusw1	equ	0xFE3
 16652                           fsr1h	equ	0xFE2
 16653                           fsr1l	equ	0xFE1
 16654                           indf2	equ	0xFDF
 16655                           postinc2	equ	0xFDE
 16656                           postdec2	equ	0xFDD
 16657                           plusw2	equ	0xFDB
 16658                           fsr2h	equ	0xFDA
 16659                           fsr2l	equ	0xFD9
 16660                           status	equ	0xFD8
 16661                           
 16662 ;; *************** function _USBCtrlTrfInHandler *****************
 16663 ;; Defined at:
 16664 ;;		line 2594 in file "usb_device.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;		None
 16667 ;; Auto vars:     Size  Location     Type
 16668 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16669 ;; Return value:  Size  Location     Type
 16670 ;;                  1    wreg      void 
 16671 ;; Registers used:
 16672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16673 ;; Tracked objects:
 16674 ;;		On entry : 0/0
 16675 ;;		On exit  : 0/0
 16676 ;;		Unchanged: 0/0
 16677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16682 ;;Total ram usage:        1 bytes
 16683 ;; Hardware stack levels used:    1
 16684 ;; Hardware stack levels required when called:    1
 16685 ;; This function calls:
 16686 ;;		_USBCtrlTrfTxService
 16687 ;; This function is called by:
 16688 ;;		_USBCtrlEPService
 16689 ;; This function uses a non-reentrant model
 16690 ;;
 16691                           
 16692                           	psect	text80
 16693  005B14                     __ptext80:
 16694                           	opt stack 0
 16695  005B14                     _USBCtrlTrfInHandler:
 16696                           	opt stack 27
 16697                           
 16698                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 16699                           
 16700                           ; BSR set to: 0
 16701                           ;incstack = 0
 16702  005B14  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16703  005B18  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16704  005B1C  0100               	movlb	0	; () banked
 16705  005B1E  0E00               	movlw	0
 16706  005B20  BCDF               	btfsc	indf2,6,c
 16707  005B22  0E01               	movlw	1
 16708  005B24  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 16712  005B26  0E04               	movlw	4
 16713  005B28  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 16714  005B2A  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 16715  005B2C  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16716  005B2E  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 16720  005B30  0E08               	movlw	8
 16721  005B32  19F6               	xorwf	_USBDeviceState& (0+255),w,b
 16722  005B34  A4D8               	btfss	status,2,c
 16723  005B36  D00D               	goto	l329
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 16727  005B38  010D               	movlb	13	; () banked
 16728  005B3A  5132               	movf	50,w,b	;volatile
 16729  005B3C  0B7F               	andlw	127
 16730  005B3E  010F               	movlb	15	; () banked
 16731  005B40  6F38               	movwf	56,b	;volatile
 16732                           
 16733                           ; BSR set to: 15
 16734                           ;usb_device.c: 2609: if(UADDR != 0u)
 16735  005B42  5138               	movf	56,w,b	;volatile
 16736  005B44  B4D8               	btfsc	status,2,c
 16737  005B46  D002               	goto	l328
 16738                           
 16739                           ; BSR set to: 15
 16740                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 16741  005B48  0E10               	movlw	16
 16742  005B4A  D001               	goto	L15
 16743  005B4C                     l328:
 16744                           
 16745                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 16746                           
 16747                           ; BSR set to: 0
 16748  005B4C  0E04               	movlw	4
 16749  005B4E                     L15:
 16750  005B4E  0100               	movlb	0	; () banked
 16751  005B50  6FF6               	movwf	_USBDeviceState& (0+255),b
 16752  005B52                     l329:
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 16756                           
 16757                           ; BSR set to: 0
 16758                           
 16759                           ; BSR set to: 0
 16760  005B52  05F4               	decf	_controlTransferState& (0+255),w,b
 16761  005B54  A4D8               	btfss	status,2,c
 16762  005B56  D03B               	goto	l330
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 16766  005B58  EE20 F002          	lfsr	2,2
 16767  005B5C  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 16768  005B5E  26D9               	addwf	fsr2l,f,c
 16769  005B60  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16770  005B62  22DA               	addwfc	fsr2h,f,c
 16771  005B64  0E38               	movlw	56
 16772  005B66  6EDE               	movwf	postinc2,c
 16773  005B68  0E0D               	movlw	13
 16774  005B6A  6EDD               	movwf	postdec2,c
 16775                           
 16776                           ; BSR set to: 0
 16777                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 16778  005B6C  ECE6  F02B         	call	_USBCtrlTrfTxService	;wreg free
 16779                           
 16780                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 16781  005B70  0E02               	movlw	2
 16782  005B72  0100               	movlb	0	; () banked
 16783  005B74  19F5               	xorwf	_shortPacketStatus& (0+255),w,b
 16784  005B76  A4D8               	btfss	status,2,c
 16785  005B78  D00D               	goto	l331
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 16789  005B7A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16790  005B7E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16791  005B82  0E04               	movlw	4
 16792  005B84  6EDF               	movwf	indf2,c
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16796  005B86  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16797  005B8A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16798  005B8E  0E00               	movlw	0
 16799  005B90  8EDB               	bsf	plusw2,7,c
 16800                           
 16801                           ;usb_device.c: 2635: }
 16802  005B92  0012               	return	
 16803  005B94                     l331:
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 16807                           
 16808                           ; BSR set to: 0
 16809  005B94  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 16810  005B96  A4D8               	btfss	status,2,c
 16811  005B98  D00D               	goto	l333
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 16815  005B9A  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16816  005B9E  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16817  005BA2  0E48               	movlw	72
 16818  005BA4  6EDF               	movwf	indf2,c
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16822  005BA6  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16823  005BAA  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16824  005BAE  0E00               	movlw	0
 16825  005BB0  8EDB               	bsf	plusw2,7,c
 16826                           
 16827                           ;usb_device.c: 2642: }
 16828  005BB2  0012               	return	
 16829  005BB4                     l333:
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 16833                           
 16834                           ; BSR set to: 0
 16835  005BB4  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16836  005BB8  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16837  005BBC  0E08               	movlw	8
 16838  005BBE  6EDF               	movwf	indf2,c
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16842  005BC0  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 16843  005BC4  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16844  005BC8  0E00               	movlw	0
 16845  005BCA  8EDB               	bsf	plusw2,7,c
 16846                           
 16847                           ; BSR set to: 0
 16848                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 16849                           
 16850                           ; BSR set to: 0
 16851  005BCC  0012               	return	
 16852  005BCE                     l330:
 16853                           
 16854                           ; BSR set to: 0
 16855                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 16856  005BCE  0101               	movlb	1	; () banked
 16857  005BD0  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 16858                           
 16859                           ; BSR set to: 1
 16860                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 16861                           
 16862                           ; BSR set to: 1
 16863  005BD2  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16864                           
 16865                           ; BSR set to: 1
 16866                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 16867                           
 16868                           ; BSR set to: 1
 16869  005BD4  0E00               	movlw	0
 16870  005BD6  0100               	movlb	0	; () banked
 16871  005BD8  6FF4               	movwf	_controlTransferState& (0+255),b
 16872  005BDA  0012               	return	
 16873  005BDC                     __end_of_USBCtrlTrfInHandler:
 16874                           	opt stack 0
 16875                           tosu	equ	0xFFF
 16876                           tosh	equ	0xFFE
 16877                           tosl	equ	0xFFD
 16878                           pclath	equ	0xFFA
 16879                           tblptru	equ	0xFF8
 16880                           tblptrh	equ	0xFF7
 16881                           tblptrl	equ	0xFF6
 16882                           tablat	equ	0xFF5
 16883                           prodh	equ	0xFF4
 16884                           prodl	equ	0xFF3
 16885                           intcon	equ	0xFF2
 16886                           intcon2	equ	0xFF1
 16887                           intcon3	equ	0xFF0
 16888                           indf0	equ	0xFEF
 16889                           postinc0	equ	0xFEE
 16890                           fsr0h	equ	0xFEA
 16891                           fsr0l	equ	0xFE9
 16892                           wreg	equ	0xFE8
 16893                           indf1	equ	0xFE7
 16894                           postdec1	equ	0xFE5
 16895                           plusw1	equ	0xFE3
 16896                           fsr1h	equ	0xFE2
 16897                           fsr1l	equ	0xFE1
 16898                           indf2	equ	0xFDF
 16899                           postinc2	equ	0xFDE
 16900                           postdec2	equ	0xFDD
 16901                           plusw2	equ	0xFDB
 16902                           fsr2h	equ	0xFDA
 16903                           fsr2l	equ	0xFD9
 16904                           status	equ	0xFD8
 16905                           
 16906 ;; *************** function _USBCtrlTrfTxService *****************
 16907 ;; Defined at:
 16908 ;;		line 1773 in file "usb_device.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;		None
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;  byteToSend      1    0[COMRAM] unsigned char 
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  1    wreg      void 
 16915 ;; Registers used:
 16916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16926 ;;Total ram usage:        1 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; This function calls:
 16929 ;;		Nothing
 16930 ;; This function is called by:
 16931 ;;		_USBCtrlEPAllowDataStage
 16932 ;;		_USBCtrlTrfInHandler
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           	psect	text81
 16937  0057CC                     __ptext81:
 16938                           	opt stack 0
 16939  0057CC                     _USBCtrlTrfTxService:
 16940                           	opt stack 25
 16941                           
 16942                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;incstack = 0
 16946  0057CC  0E08               	movlw	8
 16947  0057CE  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 16948                           
 16949                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 16950  0057D0  0100               	movlb	0	; () banked
 16951  0057D2  51C4               	movf	(_inPipes+5)& (0+255),w,b
 16952  0057D4  E110               	bnz	l10940
 16953  0057D6  0E08               	movlw	8
 16954  0057D8  5DC3               	subwf	(_inPipes+4)& (0+255),w,b
 16955  0057DA  B0D8               	btfsc	status,0,c
 16956  0057DC  D00C               	goto	l235
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 16960  0057DE  C0C3  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 16964  0057E2  51F5               	movf	_shortPacketStatus& (0+255),w,b
 16965  0057E4  A4D8               	btfss	status,2,c
 16966  0057E6  D002               	goto	l233
 16967                           
 16968                           ; BSR set to: 0
 16969                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 16970  0057E8  0E01               	movlw	1
 16971  0057EA  D004               	goto	L16
 16972  0057EC                     l233:
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 16976                           
 16977                           ; BSR set to: 0
 16978  0057EC  05F5               	decf	_shortPacketStatus& (0+255),w,b
 16979  0057EE  A4D8               	btfss	status,2,c
 16980  0057F0  D002               	goto	l235
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 16984  0057F2  0E02               	movlw	2
 16985  0057F4                     L16:
 16986  0057F4  6FF5               	movwf	_shortPacketStatus& (0+255),b
 16987  0057F6                     l235:
 16988  0057F6                     l10940:
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 16992  0057F6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16993  0057F8  5FC3               	subwf	(_inPipes+4)& (0+255),f,b
 16994  0057FA  0E00               	movlw	0
 16995  0057FC  5BC4               	subwfb	(_inPipes+5)& (0+255),f,b
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 16999  0057FE  EE20 F001          	lfsr	2,1
 17000  005802  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 17001  005804  26D9               	addwf	fsr2l,f,c
 17002  005806  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17003  005808  22DA               	addwfc	fsr2h,f,c
 17004  00580A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17008  00580E  0E38               	movlw	56
 17009  005810  0101               	movlb	1	; () banked
 17010  005812  6F84               	movwf	_pDst& (0+255),b
 17011  005814  0E0D               	movlw	13
 17012  005816  6F85               	movwf	(_pDst+1)& (0+255),b
 17013                           
 17014                           ; BSR set to: 1
 17015                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17016  005818  0100               	movlb	0	; () banked
 17017  00581A  A1C2               	btfss	(_inPipes+3)& (0+255),0,b
 17018  00581C  D01D               	goto	l237
 17019  00581E  D03C               	goto	l241
 17020  005820                     
 17021                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17022                           
 17023                           ; BSR set to: 0
 17024  005820  C0BF  FFF6         	movff	_inPipes,tblptrl
 17025  005824  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 17026  005828  6AF8               	clrf	tblptru,c
 17027  00582A  C184  FFD9         	movff	_pDst,fsr2l
 17028  00582E  C185  FFDA         	movff	_pDst+1,fsr2h
 17029  005832  0E0E               	movlw	(high __ramtop+-1)
 17030  005834  64F7               	cpfsgt	tblptrh,c
 17031  005836  D003               	bra	u7767
 17032  005838  0008               	tblrd		*
 17033  00583A  50F5               	movf	tablat,w,c
 17034  00583C  D005               	bra	u7760
 17035  00583E                     u7767:
 17036  00583E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17037  005842  CFF7 FFEA          	movff	tblptrh,fsr0h
 17038  005846  50EF               	movf	indf0,w,c
 17039  005848                     u7760:
 17040  005848  6EDF               	movwf	indf2,c
 17041  00584A  0100               	movlb	0	; () banked
 17042  00584C  4BBF               	infsnz	_inPipes& (0+255),f,b
 17043  00584E  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 17044                           
 17045                           ; BSR set to: 0
 17046  005850  0101               	movlb	1	; () banked
 17047  005852  4B84               	infsnz	_pDst& (0+255),f,b
 17048  005854  2B85               	incf	(_pDst+1)& (0+255),f,b
 17049                           
 17050                           ; BSR set to: 1
 17051                           ;usb_device.c: 1816: byteToSend--;
 17052  005856  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17053  005858                     l237:
 17054                           
 17055                           ; BSR set to: 1
 17056  005858  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17057  00585A  B4D8               	btfsc	status,2,c
 17058  00585C  0012               	return	
 17059  00585E  D7E0               	goto	l238
 17060  005860                     
 17061                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17062  005860  C0BF  FFF6         	movff	_inPipes,tblptrl
 17063  005864  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 17064  005868  6AF8               	clrf	tblptru,c
 17065  00586A  C184  FFD9         	movff	_pDst,fsr2l
 17066  00586E  C185  FFDA         	movff	_pDst+1,fsr2h
 17067  005872  0E0E               	movlw	(high __ramtop+-1)
 17068  005874  64F7               	cpfsgt	tblptrh,c
 17069  005876  D003               	bra	u7787
 17070  005878  0008               	tblrd		*
 17071  00587A  50F5               	movf	tablat,w,c
 17072  00587C  D005               	bra	u7780
 17073  00587E                     u7787:
 17074  00587E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17075  005882  CFF7 FFEA          	movff	tblptrh,fsr0h
 17076  005886  50EF               	movf	indf0,w,c
 17077  005888                     u7780:
 17078  005888  6EDF               	movwf	indf2,c
 17079  00588A  0100               	movlb	0	; () banked
 17080  00588C  4BBF               	infsnz	_inPipes& (0+255),f,b
 17081  00588E  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 17082                           
 17083                           ; BSR set to: 0
 17084  005890  0101               	movlb	1	; () banked
 17085  005892  4B84               	infsnz	_pDst& (0+255),f,b
 17086  005894  2B85               	incf	(_pDst+1)& (0+255),f,b
 17087                           
 17088                           ; BSR set to: 1
 17089                           ;usb_device.c: 1824: byteToSend--;
 17090  005896  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17091  005898                     l241:
 17092                           
 17093                           ; BSR set to: 1
 17094  005898  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17095  00589A  B4D8               	btfsc	status,2,c
 17096  00589C  0012               	return	
 17097  00589E  D7E0               	goto	l242
 17098  0058A0                     __end_of_USBCtrlTrfTxService:
 17099                           	opt stack 0
 17100                           tosu	equ	0xFFF
 17101                           tosh	equ	0xFFE
 17102                           tosl	equ	0xFFD
 17103                           pclath	equ	0xFFA
 17104                           tblptru	equ	0xFF8
 17105                           tblptrh	equ	0xFF7
 17106                           tblptrl	equ	0xFF6
 17107                           tablat	equ	0xFF5
 17108                           prodh	equ	0xFF4
 17109                           prodl	equ	0xFF3
 17110                           intcon	equ	0xFF2
 17111                           intcon2	equ	0xFF1
 17112                           intcon3	equ	0xFF0
 17113                           indf0	equ	0xFEF
 17114                           postinc0	equ	0xFEE
 17115                           fsr0h	equ	0xFEA
 17116                           fsr0l	equ	0xFE9
 17117                           wreg	equ	0xFE8
 17118                           indf1	equ	0xFE7
 17119                           postdec1	equ	0xFE5
 17120                           plusw1	equ	0xFE3
 17121                           fsr1h	equ	0xFE2
 17122                           fsr1l	equ	0xFE1
 17123                           indf2	equ	0xFDF
 17124                           postinc2	equ	0xFDE
 17125                           postdec2	equ	0xFDD
 17126                           plusw2	equ	0xFDB
 17127                           fsr2h	equ	0xFDA
 17128                           fsr2l	equ	0xFD9
 17129                           status	equ	0xFD8
 17130                           
 17131 ;; *************** function _APP_DeviceMSDTasks *****************
 17132 ;; Defined at:
 17133 ;;		line 110 in file "app_device_msd.c"
 17134 ;; Parameters:    Size  Location     Type
 17135 ;;		None
 17136 ;; Auto vars:     Size  Location     Type
 17137 ;;		None
 17138 ;; Return value:  Size  Location     Type
 17139 ;;                  1    wreg      void 
 17140 ;; Registers used:
 17141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17142 ;; Tracked objects:
 17143 ;;		On entry : 0/0
 17144 ;;		On exit  : 0/0
 17145 ;;		Unchanged: 0/0
 17146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17151 ;;Total ram usage:        0 bytes
 17152 ;; Hardware stack levels used:    1
 17153 ;; Hardware stack levels required when called:   11
 17154 ;; This function calls:
 17155 ;;		_MSDTasks
 17156 ;; This function is called by:
 17157 ;;		_main
 17158 ;; This function uses a non-reentrant model
 17159 ;;
 17160                           
 17161                           	psect	text82
 17162  00885E                     __ptext82:
 17163                           	opt stack 0
 17164  00885E                     _APP_DeviceMSDTasks:
 17165                           	opt stack 19
 17166                           
 17167                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17168                           
 17169                           ;incstack = 0
 17170  00885E  0E20               	movlw	32
 17171  008860  0100               	movlb	0	; () banked
 17172  008862  61F6               	cpfslt	_USBDeviceState& (0+255),b
 17173  008864  D001               	goto	l1008
 17174  008866  0012               	return	
 17175  008868                     l1008:
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17179  008868  B265               	btfsc	3941,1,c	;volatile
 17180  00886A  0012               	return	
 17181                           
 17182                           ; BSR set to: 0
 17183                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17184                           
 17185                           ; BSR set to: 0
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17189  00886C  ECC6  F00F         	call	_MSDTasks	;wreg free
 17190  008870  0012               	return		;funcret
 17191  008872                     __end_of_APP_DeviceMSDTasks:
 17192                           	opt stack 0
 17193                           tosu	equ	0xFFF
 17194                           tosh	equ	0xFFE
 17195                           tosl	equ	0xFFD
 17196                           pclath	equ	0xFFA
 17197                           tblptru	equ	0xFF8
 17198                           tblptrh	equ	0xFF7
 17199                           tblptrl	equ	0xFF6
 17200                           tablat	equ	0xFF5
 17201                           prodh	equ	0xFF4
 17202                           prodl	equ	0xFF3
 17203                           intcon	equ	0xFF2
 17204                           intcon2	equ	0xFF1
 17205                           intcon3	equ	0xFF0
 17206                           indf0	equ	0xFEF
 17207                           postinc0	equ	0xFEE
 17208                           fsr0h	equ	0xFEA
 17209                           fsr0l	equ	0xFE9
 17210                           wreg	equ	0xFE8
 17211                           indf1	equ	0xFE7
 17212                           postdec1	equ	0xFE5
 17213                           plusw1	equ	0xFE3
 17214                           fsr1h	equ	0xFE2
 17215                           fsr1l	equ	0xFE1
 17216                           indf2	equ	0xFDF
 17217                           postinc2	equ	0xFDE
 17218                           postdec2	equ	0xFDD
 17219                           plusw2	equ	0xFDB
 17220                           fsr2h	equ	0xFDA
 17221                           fsr2l	equ	0xFD9
 17222                           status	equ	0xFD8
 17223                           
 17224 ;; *************** function _MSDTasks *****************
 17225 ;; Defined at:
 17226 ;;		line 335 in file "usb_device_msd.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;		None
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;  i               1   81[COMRAM] unsigned char 
 17231 ;; Return value:  Size  Location     Type
 17232 ;;                  1    wreg      unsigned char 
 17233 ;; Registers used:
 17234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17235 ;; Tracked objects:
 17236 ;;		On entry : 0/0
 17237 ;;		On exit  : 0/0
 17238 ;;		Unchanged: 0/0
 17239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17241 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17244 ;;Total ram usage:        6 bytes
 17245 ;; Hardware stack levels used:    1
 17246 ;; Hardware stack levels required when called:   10
 17247 ;; This function calls:
 17248 ;;		_MSDProcessCommand
 17249 ;;		_USBStallEndpoint
 17250 ;;		_USBTransferOnePacket
 17251 ;; This function is called by:
 17252 ;;		_APP_DeviceMSDTasks
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           	psect	text83
 17257  001F8C                     __ptext83:
 17258                           	opt stack 0
 17259  001F8C                     _MSDTasks:
 17260                           	opt stack 19
 17261                           
 17262                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17263                           
 17264                           ;incstack = 0
 17265  001F8C  0E20               	movlw	32
 17266  001F8E  0100               	movlb	0	; () banked
 17267  001F90  19F6               	xorwf	_USBDeviceState& (0+255),w,b
 17268  001F92  A4D8               	btfss	status,2,c
 17269  001F94  0012               	return	
 17270  001F96  D117               	goto	l554
 17271  001F98                     
 17272                           ; BSR set to: 0
 17273                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17274                           
 17275                           ; BSR set to: 0
 17276  001F98  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 17277  001F9A  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17278  001F9C  B4D8               	btfsc	status,2,c
 17279  001F9E  D006               	goto	u11370
 17280                           
 17281                           ; BSR set to: 0
 17282  001FA0  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17283  001FA4  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17284  001FA8  BEDF               	btfsc	indf2,7,c
 17285  001FAA  0012               	return	
 17286  001FAC                     u11370:
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17290                           
 17291                           ; BSR set to: 0
 17292  001FAC  0E00               	movlw	0
 17293  001FAE  6E52               	movwf	MSDTasks@i,c
 17294  001FB0                     l14398:
 17295                           
 17296                           ; BSR set to: 0
 17297  001FB0  0E1E               	movlw	30
 17298  001FB2  6452               	cpfsgt	MSDTasks@i,c
 17299  001FB4  D001               	goto	l559
 17300  001FB6  D014               	goto	u11390
 17301  001FB8                     l559:
 17302                           
 17303                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17304                           
 17305                           ; BSR set to: 0
 17306  001FB8  5052               	movf	MSDTasks@i,w,c
 17307  001FBA  0D01               	mullw	1
 17308  001FBC  0E40               	movlw	64
 17309  001FBE  24F3               	addwf	prodl,w,c
 17310  001FC0  6ED9               	movwf	fsr2l,c
 17311  001FC2  0E0D               	movlw	13
 17312  001FC4  20F4               	addwfc	prodh,w,c
 17313  001FC6  6EDA               	movwf	fsr2h,c
 17314  001FC8  5052               	movf	MSDTasks@i,w,c
 17315  001FCA  0D01               	mullw	1
 17316  001FCC  0E00               	movlw	low _gblCBW
 17317  001FCE  24F3               	addwf	prodl,w,c
 17318  001FD0  6EE1               	movwf	fsr1l,c
 17319  001FD2  0E01               	movlw	high _gblCBW
 17320  001FD4  20F4               	addwfc	prodh,w,c
 17321  001FD6  6EE2               	movwf	fsr1h,c
 17322  001FD8  CFDF FFE7          	movff	indf2,indf1
 17323  001FDC  2A52               	incf	MSDTasks@i,f,c
 17324  001FDE  D7E8               	goto	l14398
 17325  001FE0                     u11390:
 17326                           
 17327                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17328  001FE0  0100               	movlb	0	; () banked
 17329  001FE2  EE20 F001          	lfsr	2,1
 17330  001FE6  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 17331  001FE8  26D9               	addwf	fsr2l,f,c
 17332  001FEA  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17333  001FEC  22DA               	addwfc	fsr2h,f,c
 17334  001FEE  0E1F               	movlw	31
 17335  001FF0  18DE               	xorwf	postinc2,w,c
 17336  001FF2  A4D8               	btfss	status,2,c
 17337  001FF4  D072               	goto	l561
 17338                           
 17339                           ; BSR set to: 0
 17340  001FF6  0E55               	movlw	85
 17341  001FF8  0101               	movlb	1	; () banked
 17342  001FFA  1900               	xorwf	_gblCBW& (0+255),w,b
 17343  001FFC  E16E               	bnz	l561
 17344  001FFE  0E53               	movlw	83
 17345  002000  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17346  002002  E16B               	bnz	l561
 17347  002004  0E42               	movlw	66
 17348  002006  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17349  002008  E168               	bnz	l561
 17350  00200A  0E43               	movlw	67
 17351  00200C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17352  00200E  A4D8               	btfss	status,2,c
 17353  002010  D064               	goto	l561
 17354                           
 17355                           ; BSR set to: 1
 17356                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17357  002012  0E01               	movlw	1
 17358  002014  0100               	movlb	0	; () banked
 17359  002016  6FE1               	movwf	_MSDCBWValid& (0+255),b
 17360                           
 17361                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17362  002018  0101               	movlb	1	; () banked
 17363  00201A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17364  00201C  A4D8               	btfss	status,2,c
 17365  00201E  D052               	goto	l562
 17366                           
 17367                           ; BSR set to: 1
 17368  002020  0E11               	movlw	17
 17369  002022  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17370  002024  D04F               	goto	l562
 17371                           
 17372                           ; BSR set to: 1
 17373  002026  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17374  002028  B4D8               	btfsc	status,2,c
 17375  00202A  D04C               	goto	l562
 17376                           
 17377                           ; BSR set to: 1
 17378  00202C  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17379  002030  0E3F               	movlw	63
 17380  002032  164D               	andwf	??_MSDTasks,f,c
 17381  002034  A4D8               	btfss	status,2,c
 17382  002036  D046               	goto	l562
 17383                           
 17384                           ; BSR set to: 1
 17385                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17386  002038  0E55               	movlw	85
 17387  00203A  010D               	movlb	13	; () banked
 17388  00203C  6F80               	movwf	128,b	;volatile
 17389  00203E  0E53               	movlw	83
 17390  002040  6F81               	movwf	129,b	;volatile
 17391  002042  0E42               	movlw	66
 17392  002044  6F82               	movwf	130,b	;volatile
 17393  002046  0E53               	movlw	83
 17394  002048  6F83               	movwf	131,b	;volatile
 17395                           
 17396                           ; BSR set to: 13
 17397                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17398  00204A  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17399  00204E  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17400  002052  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17401  002056  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17402                           
 17403                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17404  00205A  0E00               	movlw	0
 17405  00205C  6F88               	movwf	136,b	;volatile
 17406  00205E  0E00               	movlw	0
 17407  002060  6F89               	movwf	137,b	;volatile
 17408  002062  0E00               	movlw	0
 17409  002064  6F8A               	movwf	138,b	;volatile
 17410  002066  0E00               	movlw	0
 17411  002068  6F8B               	movwf	139,b	;volatile
 17412                           
 17413                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17414  00206A  0E00               	movlw	0
 17415  00206C  6F8C               	movwf	140,b	;volatile
 17416                           
 17417                           ; BSR set to: 13
 17418                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17419  00206E  0100               	movlb	0	; () banked
 17420  002070  69E7               	setf	_MSDCommandState& (0+255),b
 17421                           
 17422                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17423  002072  0E00               	movlw	0
 17424  002074  6FE6               	movwf	_MSDReadState& (0+255),b
 17425                           
 17426                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17427  002076  0E00               	movlw	0
 17428  002078  6FE5               	movwf	_MSDWriteState& (0+255),b
 17429                           
 17430                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17431  00207A  0E00               	movlw	0
 17432  00207C  6FE4               	movwf	_MSDRetryAttempt& (0+255),b
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17436  00207E  0E03               	movlw	3
 17437  002080  0101               	movlb	1	; () banked
 17438  002082  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17439  002084  B4D8               	btfsc	status,2,c
 17440  002086  D008               	goto	l563
 17441                           
 17442                           ; BSR set to: 1
 17443                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17444  002088  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17445  00208A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17446  00208C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17447  00208E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17448                           
 17449                           ; BSR set to: 1
 17450                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17451  002090  0E00               	movlw	0
 17452  002092  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17453                           
 17454                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17455  002094  0E00               	movlw	0
 17456  002096  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17457  002098                     l563:
 17458                           
 17459                           ; BSR set to: 1
 17460                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 17461                           
 17462                           ; BSR set to: 1
 17463  002098  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 17464  00209A  D002               	goto	l564
 17465                           
 17466                           ; BSR set to: 1
 17467                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 17468  00209C  0E01               	movlw	1
 17469  00209E  D001               	goto	L17
 17470  0020A0                     l564:
 17471                           
 17472                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 17473                           
 17474                           ; BSR set to: 0
 17475  0020A0  0E02               	movlw	2
 17476  0020A2                     L17:
 17477  0020A2  0100               	movlb	0	; () banked
 17478  0020A4  6FE8               	movwf	_MSD_State& (0+255),b
 17479                           
 17480                           ; BSR set to: 0
 17481                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 17482                           
 17483                           ; BSR set to: 0
 17484  0020A6  0101               	movlb	1	; () banked
 17485  0020A8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 17486  0020AA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 17487  0020AC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 17488  0020AE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 17489  0020B0  B4D8               	btfsc	status,2,c
 17490  0020B2  D002               	goto	l566
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 17494  0020B4  0E00               	movlw	0
 17495  0020B6  D001               	goto	L18
 17496  0020B8                     l566:
 17497                           
 17498                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 17499                           
 17500                           ; BSR set to: 0
 17501  0020B8  0E01               	movlw	1
 17502  0020BA                     L18:
 17503  0020BA  0100               	movlb	0	; () banked
 17504  0020BC  6FE2               	movwf	_MSDHostNoData& (0+255),b
 17505                           
 17506                           ; BSR set to: 0
 17507                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 17508                           
 17509                           ; BSR set to: 0
 17510  0020BE  C10F  F0E7         	movff	_gblCBW+15,_MSDCommandState
 17511                           
 17512                           ;usb_device_msd.c: 454: }
 17513  0020C2  0012               	return	
 17514  0020C4                     l562:
 17515                           
 17516                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 17517                           
 17518                           ; BSR set to: 0
 17519  0020C4  0E01               	movlw	1
 17520  0020C6  6E01               	movwf	USBStallEndpoint@dir,c
 17521  0020C8  0E02               	movlw	2
 17522  0020CA  ECDF  F024         	call	_USBStallEndpoint
 17523                           
 17524                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 17525  0020CE  0E00               	movlw	0
 17526  0020D0  6E01               	movwf	USBStallEndpoint@dir,c
 17527  0020D2  0E02               	movlw	2
 17528  0020D4  ECDF  F024         	call	_USBStallEndpoint
 17529                           
 17530                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 17531  0020D8  0012               	return	
 17532  0020DA                     l561:
 17533                           
 17534                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 17535  0020DA  0E01               	movlw	1
 17536  0020DC  6E01               	movwf	USBStallEndpoint@dir,c
 17537  0020DE  0E02               	movlw	2
 17538  0020E0  ECDF  F024         	call	_USBStallEndpoint
 17539                           
 17540                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 17541  0020E4  0E00               	movlw	0
 17542  0020E6  6E01               	movwf	USBStallEndpoint@dir,c
 17543  0020E8  0E02               	movlw	2
 17544  0020EA  ECDF  F024         	call	_USBStallEndpoint
 17545                           
 17546                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 17547  0020EE  0E00               	movlw	0
 17548  0020F0  0100               	movlb	0	; () banked
 17549  0020F2  6FE1               	movwf	_MSDCBWValid& (0+255),b
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 17553                           
 17554                           ; BSR set to: 0
 17555  0020F4  0012               	return	
 17556  0020F6                     
 17557                           ; BSR set to: 0
 17558                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 17559                           
 17560                           ; BSR set to: 0
 17561  0020F6  EC4A  F023         	call	_MSDProcessCommand	;wreg free
 17562  0020FA  0AFF               	xorlw	255
 17563  0020FC  A4D8               	btfss	status,2,c
 17564  0020FE  0012               	return	
 17565                           
 17566                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 17567  002100  0E03               	movlw	3
 17568  002102  0100               	movlb	0	; () banked
 17569  002104  6FE8               	movwf	_MSD_State& (0+255),b
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 17573  002106  0012               	return	
 17574  002108                     
 17575                           ; BSR set to: 0
 17576                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 17577                           
 17578                           ; BSR set to: 0
 17579  002108  EC4A  F023         	call	_MSDProcessCommand	;wreg free
 17580  00210C  0AFF               	xorlw	255
 17581  00210E  A4D8               	btfss	status,2,c
 17582  002110  0012               	return	
 17583                           
 17584                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 17585  002112  010D               	movlb	13	; () banked
 17586  002114  518C               	movf	140,w,b	;volatile
 17587  002116  A4D8               	btfss	status,2,c
 17588  002118  D008               	goto	l575
 17589                           
 17590                           ; BSR set to: 13
 17591  00211A  5188               	movf	136,w,b	;volatile
 17592  00211C  1189               	iorwf	137,w,b	;volatile
 17593  00211E  118A               	iorwf	138,w,b	;volatile
 17594  002120  118B               	iorwf	139,w,b	;volatile
 17595  002122  B4D8               	btfsc	status,2,c
 17596  002124  D002               	goto	l575
 17597                           
 17598                           ; BSR set to: 13
 17599                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 17600  002126  0E02               	movlw	2
 17601  002128  6F8C               	movwf	140,b	;volatile
 17602  00212A                     l575:
 17603                           
 17604                           ; BSR set to: 13
 17605                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 17606  00212A  0E03               	movlw	3
 17607  00212C  0100               	movlb	0	; () banked
 17608  00212E  6FE8               	movwf	_MSD_State& (0+255),b
 17609                           
 17610                           ; BSR set to: 0
 17611                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 17612  002130  0012               	return	
 17613  002132                     
 17614                           ; BSR set to: 0
 17615                           
 17616                           ; BSR set to: 0
 17617  002132  C0C9  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 17618  002136  C0CA  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 17619                           
 17620                           ; BSR set to: 0
 17621                           
 17622                           ; BSR set to: 0
 17623                           
 17624                           ; BSR set to: 0
 17625  00213A  504E               	movf	_MSDTasks$2372,w,c
 17626  00213C  104F               	iorwf	_MSDTasks$2372+1,w,c
 17627  00213E  B4D8               	btfsc	status,2,c
 17628  002140  D00A               	goto	l577
 17629                           
 17630                           ; BSR set to: 0
 17631  002142  C0C9  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 17632  002146  C0CA  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 17633                           
 17634                           ; BSR set to: 0
 17635                           
 17636                           ; BSR set to: 0
 17637                           
 17638                           ; BSR set to: 0
 17639                           
 17640                           ; BSR set to: 0
 17641  00214A  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 17642  00214E  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 17643  002152  BEDF               	btfsc	indf2,7,c
 17644  002154  0012               	return	
 17645  002156                     l577:
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 17649                           
 17650                           ; BSR set to: 0
 17651  002156  0E01               	movlw	1
 17652  002158  6E01               	movwf	USBTransferOnePacket@dir,c
 17653  00215A  0E80               	movlw	128
 17654  00215C  6E02               	movwf	USBTransferOnePacket@data,c
 17655  00215E  0E0D               	movlw	13
 17656  002160  6E03               	movwf	USBTransferOnePacket@data+1,c
 17657  002162  0E0D               	movlw	13
 17658  002164  6E04               	movwf	USBTransferOnePacket@len,c
 17659  002166  0E02               	movlw	2
 17660  002168  ECEC  F026         	call	_USBTransferOnePacket
 17661  00216C  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 17662  002170  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 17663                           
 17664                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 17665  002174  0100               	movlb	0	; () banked
 17666  002176  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 17667  002178  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17668  00217A  B4D8               	btfsc	status,2,c
 17669  00217C  D006               	goto	u11560
 17670                           
 17671                           ; BSR set to: 0
 17672  00217E  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17673  002182  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17674  002186  BEDF               	btfsc	indf2,7,c
 17675  002188  D00F               	goto	l586
 17676  00218A                     u11560:
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 17680                           
 17681                           ; BSR set to: 0
 17682  00218A  0E00               	movlw	0
 17683  00218C  6E01               	movwf	USBTransferOnePacket@dir,c
 17684  00218E  0E40               	movlw	64
 17685  002190  6E02               	movwf	USBTransferOnePacket@data,c
 17686  002192  0E0D               	movlw	13
 17687  002194  6E03               	movwf	USBTransferOnePacket@data+1,c
 17688  002196  0E40               	movlw	64
 17689  002198  6E04               	movwf	USBTransferOnePacket@len,c
 17690  00219A  0E02               	movlw	2
 17691  00219C  ECEC  F026         	call	_USBTransferOnePacket
 17692  0021A0  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17693  0021A4  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17694  0021A8                     l586:
 17695                           
 17696                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 17697  0021A8  0E00               	movlw	0
 17698  0021AA  0100               	movlb	0	; () banked
 17699  0021AC  6FE8               	movwf	_MSD_State& (0+255),b
 17700                           
 17701                           ;usb_device_msd.c: 513: break;
 17702  0021AE  0012               	return	
 17703  0021B0                     
 17704                           ; BSR set to: 0
 17705                           ;usb_device_msd.c: 518: MSD_State=0x00;
 17706                           
 17707                           ; BSR set to: 0
 17708  0021B0  0E00               	movlw	0
 17709  0021B2  6FE8               	movwf	_MSD_State& (0+255),b
 17710                           
 17711                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 17712  0021B4  0E02               	movlw	2
 17713  0021B6  010D               	movlb	13	; () banked
 17714  0021B8  6F8C               	movwf	140,b	;volatile
 17715                           
 17716                           ; BSR set to: 13
 17717                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 17718  0021BA  0E00               	movlw	0
 17719  0021BC  6E01               	movwf	USBStallEndpoint@dir,c
 17720  0021BE  0E02               	movlw	2
 17721  0021C0  ECDF  F024         	call	_USBStallEndpoint
 17722                           
 17723                           ;usb_device_msd.c: 521: }
 17724  0021C4  0012               	return	
 17725  0021C6                     l554:
 17726  0021C6  0100               	movlb	0	; () banked
 17727  0021C8  51E8               	movf	_MSD_State& (0+255),w,b
 17728                           
 17729                           ; Switch size 1, requested type "space"
 17730                           ; Number of cases is 4, Range of values is 0 to 3
 17731                           ; switch strategies available:
 17732                           ; Name         Instructions Cycles
 17733                           ; simple_byte           13     7 (average)
 17734                           ;	Chosen strategy is simple_byte
 17735  0021CA  0A00               	xorlw	0	; case 0
 17736  0021CC  B4D8               	btfsc	status,2,c
 17737  0021CE  D6E4               	goto	l555
 17738  0021D0  0A01               	xorlw	1	; case 1
 17739  0021D2  B4D8               	btfsc	status,2,c
 17740  0021D4  D790               	goto	l571
 17741  0021D6  0A03               	xorlw	3	; case 2
 17742  0021D8  B4D8               	btfsc	status,2,c
 17743  0021DA  D796               	goto	l573
 17744  0021DC  0A01               	xorlw	1	; case 3
 17745  0021DE  B4D8               	btfsc	status,2,c
 17746  0021E0  D7A8               	goto	l576
 17747  0021E2  D7E6               	goto	l589
 17748  0021E4                     __end_of_MSDTasks:
 17749                           	opt stack 0
 17750                           tosu	equ	0xFFF
 17751                           tosh	equ	0xFFE
 17752                           tosl	equ	0xFFD
 17753                           pclath	equ	0xFFA
 17754                           tblptru	equ	0xFF8
 17755                           tblptrh	equ	0xFF7
 17756                           tblptrl	equ	0xFF6
 17757                           tablat	equ	0xFF5
 17758                           prodh	equ	0xFF4
 17759                           prodl	equ	0xFF3
 17760                           intcon	equ	0xFF2
 17761                           intcon2	equ	0xFF1
 17762                           intcon3	equ	0xFF0
 17763                           indf0	equ	0xFEF
 17764                           postinc0	equ	0xFEE
 17765                           fsr0h	equ	0xFEA
 17766                           fsr0l	equ	0xFE9
 17767                           wreg	equ	0xFE8
 17768                           indf1	equ	0xFE7
 17769                           postdec1	equ	0xFE5
 17770                           plusw1	equ	0xFE3
 17771                           fsr1h	equ	0xFE2
 17772                           fsr1l	equ	0xFE1
 17773                           indf2	equ	0xFDF
 17774                           postinc2	equ	0xFDE
 17775                           postdec2	equ	0xFDD
 17776                           plusw2	equ	0xFDB
 17777                           fsr2h	equ	0xFDA
 17778                           fsr2l	equ	0xFD9
 17779                           status	equ	0xFD8
 17780                           
 17781 ;; *************** function _MSDProcessCommand *****************
 17782 ;; Defined at:
 17783 ;;		line 553 in file "usb_device_msd.c"
 17784 ;; Parameters:    Size  Location     Type
 17785 ;;		None
 17786 ;; Auto vars:     Size  Location     Type
 17787 ;;		None
 17788 ;; Return value:  Size  Location     Type
 17789 ;;                  1    wreg      unsigned char 
 17790 ;; Registers used:
 17791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17792 ;; Tracked objects:
 17793 ;;		On entry : 0/0
 17794 ;;		On exit  : 0/0
 17795 ;;		Unchanged: 0/0
 17796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17799 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17800 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17801 ;;Total ram usage:        5 bytes
 17802 ;; Hardware stack levels used:    1
 17803 ;; Hardware stack levels required when called:    9
 17804 ;; This function calls:
 17805 ;;		_ExternalFlash_MediaDetect
 17806 ;;		_ExternalFlash_MediaInitialize
 17807 ;;		_MSDProcessCommandMediaAbsent
 17808 ;;		_MSDProcessCommandMediaPresent
 17809 ;; This function is called by:
 17810 ;;		_MSDTasks
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           
 17814                           	psect	text84
 17815  004694                     __ptext84:
 17816                           	opt stack 0
 17817  004694                     _MSDProcessCommand:
 17818                           	opt stack 19
 17819                           
 17820                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 17821                           
 17822                           ;incstack = 0
 17823  004694  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17824  004698  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17825  00469C  D801               	call	u10698
 17826  00469E  D00A               	goto	u10699
 17827  0046A0                     u10698:
 17828  0046A0  0005               	push	
 17829  0046A2  6EFA               	movwf	pclath,c
 17830  0046A4  0101               	movlb	1	; () banked
 17831  0046A6  51DF               	movf	(_LUN+6)& (0+255),w,b
 17832  0046A8  6EFD               	movwf	tosl,c
 17833  0046AA  51E0               	movf	(_LUN+7)& (0+255),w,b
 17834  0046AC  6EFE               	movwf	tosh,c
 17835  0046AE  6AFF               	clrf	tosu,c
 17836  0046B0  50FA               	movf	pclath,w,c
 17837  0046B2  0012               	return		;indir
 17838  0046B4                     u10699:
 17839  0046B4  0900               	iorlw	0
 17840  0046B6  B4D8               	btfsc	status,2,c
 17841  0046B8  D00C               	goto	u10710
 17842  0046BA  0101               	movlb	1	; () banked
 17843  0046BC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17844  0046BE  0D01               	mullw	1
 17845  0046C0  0EE3               	movlw	low _SoftDetach
 17846  0046C2  24F3               	addwf	prodl,w,c
 17847  0046C4  6ED9               	movwf	fsr2l,c
 17848  0046C6  0E00               	movlw	high _SoftDetach
 17849  0046C8  20F4               	addwfc	prodh,w,c
 17850  0046CA  6EDA               	movwf	fsr2h,c
 17851  0046CC  04DE               	decf	postinc2,w,c
 17852  0046CE  A4D8               	btfss	status,2,c
 17853  0046D0  D019               	goto	l592
 17854  0046D2                     u10710:
 17855                           
 17856                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 17857                           
 17858                           ; BSR set to: 1
 17859  0046D2  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17860  0046D6  0E01               	movlw	1
 17861  0046D8  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17862  0046DA  0E00               	movlw	0
 17863  0046DC  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17864  0046DE  2A48               	incf	??_MSDProcessCommand,f,c
 17865  0046E0  D003               	goto	u10724
 17866  0046E2                     u10725:
 17867  0046E2  90D8               	bcf	status,0,c
 17868  0046E4  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17869  0046E6  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17870  0046E8                     u10724:
 17871  0046E8  2E48               	decfsz	??_MSDProcessCommand,f,c
 17872  0046EA  D7FB               	goto	u10725
 17873  0046EC  1C49               	comf	??_MSDProcessCommand+1,w,c
 17874  0046EE  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 17875  0046F0  1C4A               	comf	??_MSDProcessCommand+2,w,c
 17876  0046F2  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 17877  0046F4  504B               	movf	??_MSDProcessCommand+3,w,c
 17878  0046F6  0101               	movlb	1	; () banked
 17879  0046F8  177E               	andwf	_gblMediaPresent& (0+255),f,b
 17880  0046FA  504C               	movf	??_MSDProcessCommand+4,w,c
 17881  0046FC  177F               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 17882                           
 17883                           ; BSR set to: 1
 17884                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 17885  0046FE  EC54  F03B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 17886                           
 17887                           ;usb_device_msd.c: 563: }
 17888  004702  D04E               	goto	l599
 17889  004704                     l592:
 17890                           
 17891                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 17892  004704  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17893  004708  0E01               	movlw	1
 17894  00470A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17895  00470C  0E00               	movlw	0
 17896  00470E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17897  004710  2A48               	incf	??_MSDProcessCommand,f,c
 17898  004712  D003               	goto	u10734
 17899  004714                     u10735:
 17900  004714  90D8               	bcf	status,0,c
 17901  004716  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17902  004718  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17903  00471A                     u10734:
 17904  00471A  2E48               	decfsz	??_MSDProcessCommand,f,c
 17905  00471C  D7FB               	goto	u10735
 17906  00471E  0101               	movlb	1	; () banked
 17907  004720  517E               	movf	_gblMediaPresent& (0+255),w,b
 17908  004722  1649               	andwf	??_MSDProcessCommand+1,f,c
 17909  004724  517F               	movf	(_gblMediaPresent+1)& (0+255),w,b
 17910  004726  164A               	andwf	??_MSDProcessCommand+2,f,c
 17911  004728  5049               	movf	??_MSDProcessCommand+1,w,c
 17912  00472A  104A               	iorwf	??_MSDProcessCommand+2,w,c
 17913  00472C  A4D8               	btfss	status,2,c
 17914  00472E  D036               	goto	l596
 17915                           
 17916                           ; BSR set to: 1
 17917                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17918  004730  C1E7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17919  004734  C1E8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17920  004738  D801               	call	u10758
 17921  00473A  D009               	goto	u10759
 17922  00473C                     u10758:
 17923  00473C  0005               	push	
 17924  00473E  6EFA               	movwf	pclath,c
 17925  004740  51D9               	movf	_LUN& (0+255),w,b
 17926  004742  6EFD               	movwf	tosl,c
 17927  004744  51DA               	movf	(_LUN+1)& (0+255),w,b
 17928  004746  6EFE               	movwf	tosh,c
 17929  004748  6AFF               	clrf	tosu,c
 17930  00474A  50FA               	movf	pclath,w,c
 17931  00474C  0012               	return		;indir
 17932  00474E                     u10759:
 17933  00474E  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17934  004750  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17935  004752  B4D8               	btfsc	status,2,c
 17936  004754  D020               	goto	l597
 17937                           
 17938                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17939  004756  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 17940  00475A  0E01               	movlw	1
 17941  00475C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 17942  00475E  0E00               	movlw	0
 17943  004760  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 17944  004762  2A48               	incf	??_MSDProcessCommand,f,c
 17945  004764  D003               	goto	u10774
 17946  004766                     u10775:
 17947  004766  90D8               	bcf	status,0,c
 17948  004768  3649               	rlcf	??_MSDProcessCommand+1,f,c
 17949  00476A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 17950  00476C                     u10774:
 17951  00476C  2E48               	decfsz	??_MSDProcessCommand,f,c
 17952  00476E  D7FB               	goto	u10775
 17953  004770  5049               	movf	??_MSDProcessCommand+1,w,c
 17954  004772  0101               	movlb	1	; () banked
 17955  004774  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 17956  004776  504A               	movf	??_MSDProcessCommand+2,w,c
 17957  004778  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17958                           
 17959                           ; BSR set to: 1
 17960                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 17961  00477A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 17962  00477C  0BF0               	andlw	-16
 17963  00477E  0906               	iorlw	6
 17964  004780  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 17965                           
 17966                           ; BSR set to: 1
 17967                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 17968  004782  0E28               	movlw	40
 17969  004784  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17970                           
 17971                           ; BSR set to: 1
 17972                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 17973  004786  0E00               	movlw	0
 17974  004788  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17975                           
 17976                           ; BSR set to: 1
 17977                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 17978  00478A  0E01               	movlw	1
 17979  00478C  010D               	movlb	13	; () banked
 17980  00478E  6F8C               	movwf	140,b	;volatile
 17981                           
 17982                           ; BSR set to: 13
 17983                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 17984  004790  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 17985                           
 17986                           ;usb_device_msd.c: 589: }
 17987  004794  D005               	goto	l599
 17988  004796                     l597:
 17989                           
 17990                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 17991  004796  EC54  F03B         	call	_MSDProcessCommandMediaAbsent	;wreg free
 17992                           
 17993                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 17994  00479A  D002               	goto	l599
 17995  00479C                     l596:
 17996                           
 17997                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 17998  00479C  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 17999  0047A0                     l599:
 18000                           
 18001                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18002  0047A0  0100               	movlb	0	; () banked
 18003  0047A2  51E7               	movf	_MSDCommandState& (0+255),w,b
 18004  0047A4  0012               	return	
 18005  0047A6                     __end_of_MSDProcessCommand:
 18006                           	opt stack 0
 18007                           tosu	equ	0xFFF
 18008                           tosh	equ	0xFFE
 18009                           tosl	equ	0xFFD
 18010                           pclath	equ	0xFFA
 18011                           tblptru	equ	0xFF8
 18012                           tblptrh	equ	0xFF7
 18013                           tblptrl	equ	0xFF6
 18014                           tablat	equ	0xFF5
 18015                           prodh	equ	0xFF4
 18016                           prodl	equ	0xFF3
 18017                           intcon	equ	0xFF2
 18018                           intcon2	equ	0xFF1
 18019                           intcon3	equ	0xFF0
 18020                           indf0	equ	0xFEF
 18021                           postinc0	equ	0xFEE
 18022                           fsr0h	equ	0xFEA
 18023                           fsr0l	equ	0xFE9
 18024                           wreg	equ	0xFE8
 18025                           indf1	equ	0xFE7
 18026                           postdec1	equ	0xFE5
 18027                           plusw1	equ	0xFE3
 18028                           fsr1h	equ	0xFE2
 18029                           fsr1l	equ	0xFE1
 18030                           indf2	equ	0xFDF
 18031                           postinc2	equ	0xFDE
 18032                           postdec2	equ	0xFDD
 18033                           plusw2	equ	0xFDB
 18034                           fsr2h	equ	0xFDA
 18035                           fsr2l	equ	0xFD9
 18036                           status	equ	0xFD8
 18037                           
 18038 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18039 ;; Defined at:
 18040 ;;		line 635 in file "usb_device_msd.c"
 18041 ;; Parameters:    Size  Location     Type
 18042 ;;		None
 18043 ;; Auto vars:     Size  Location     Type
 18044 ;;		None
 18045 ;; Return value:  Size  Location     Type
 18046 ;;                  1    wreg      void 
 18047 ;; Registers used:
 18048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18049 ;; Tracked objects:
 18050 ;;		On entry : 0/0
 18051 ;;		On exit  : 0/0
 18052 ;;		Unchanged: 0/0
 18053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18058 ;;Total ram usage:        0 bytes
 18059 ;; Hardware stack levels used:    1
 18060 ;; Hardware stack levels required when called:    8
 18061 ;; This function calls:
 18062 ;;		_MSDErrorHandler
 18063 ;;		_MSDProcessCommandMediaPresent
 18064 ;;		_ResetSenseData
 18065 ;; This function is called by:
 18066 ;;		_MSDProcessCommand
 18067 ;; This function uses a non-reentrant model
 18068 ;;
 18069                           
 18070                           	psect	text85
 18071  0076A8                     __ptext85:
 18072                           	opt stack 0
 18073  0076A8                     _MSDProcessCommandMediaAbsent:
 18074                           	opt stack 19
 18075                           
 18076                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;incstack = 0
 18080  0076A8  D01E               	goto	l603
 18081  0076AA                     
 18082                           ;usb_device_msd.c: 646: ResetSenseData();
 18083  0076AA  EC85  F03B         	call	_ResetSenseData	;wreg free
 18084                           
 18085                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18086  0076AE  0101               	movlb	1	; () banked
 18087  0076B0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18088  0076B2  0BF0               	andlw	-16
 18089  0076B4  0902               	iorlw	2
 18090  0076B6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18091                           
 18092                           ; BSR set to: 1
 18093                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18094  0076B8  0E3A               	movlw	58
 18095  0076BA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18096                           
 18097                           ; BSR set to: 1
 18098                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18099  0076BC  0E00               	movlw	0
 18100  0076BE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18101                           
 18102                           ; BSR set to: 1
 18103                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18104  0076C0  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18105                           
 18106                           ;usb_device_msd.c: 655: break;
 18107  0076C4  0012               	return	
 18108  0076C6                     
 18109                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18110  0076C6  0E01               	movlw	1
 18111  0076C8  010D               	movlb	13	; () banked
 18112  0076CA  6F8C               	movwf	140,b	;volatile
 18113                           
 18114                           ; BSR set to: 13
 18115                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18116  0076CC  0100               	movlb	0	; () banked
 18117  0076CE  69E7               	setf	_MSDCommandState& (0+255),b
 18118                           
 18119                           ;usb_device_msd.c: 665: break;
 18120  0076D0  0012               	return	
 18121  0076D2                     
 18122                           ; BSR set to: 0
 18123                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18124                           
 18125                           ; BSR set to: 0
 18126  0076D2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18127                           
 18128                           ;usb_device_msd.c: 671: break;
 18129  0076D6  0012               	return	
 18130  0076D8                     
 18131                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18132  0076D8  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18133                           
 18134                           ;usb_device_msd.c: 677: break;
 18135  0076DC  0012               	return	
 18136  0076DE                     
 18137                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18138  0076DE  0E7F               	movlw	127
 18139  0076E0  EC69  F026         	call	_MSDErrorHandler
 18140                           
 18141                           ;usb_device_msd.c: 685: }
 18142                           
 18143                           ;usb_device_msd.c: 684: break;
 18144  0076E4  0012               	return	
 18145  0076E6                     l603:
 18146  0076E6  0100               	movlb	0	; () banked
 18147  0076E8  51E7               	movf	_MSDCommandState& (0+255),w,b
 18148                           
 18149                           ; Switch size 1, requested type "space"
 18150                           ; Number of cases is 5, Range of values is 0 to 253
 18151                           ; switch strategies available:
 18152                           ; Name         Instructions Cycles
 18153                           ; simple_byte           16     9 (average)
 18154                           ;	Chosen strategy is simple_byte
 18155  0076EA  0A00               	xorlw	0	; case 0
 18156  0076EC  B4D8               	btfsc	status,2,c
 18157  0076EE  D7EB               	goto	l606
 18158  0076F0  0A03               	xorlw	3	; case 3
 18159  0076F2  B4D8               	btfsc	status,2,c
 18160  0076F4  D7DA               	goto	l604
 18161  0076F6  0A11               	xorlw	17	; case 18
 18162  0076F8  B4D8               	btfsc	status,2,c
 18163  0076FA  D7EB               	goto	l608
 18164  0076FC  0A0C               	xorlw	12	; case 30
 18165  0076FE  B4D8               	btfsc	status,2,c
 18166  007700  D7E2               	goto	l606
 18167  007702  0AE3               	xorlw	227	; case 253
 18168  007704  B4D8               	btfsc	status,2,c
 18169  007706  D7E8               	goto	l609
 18170  007708  D7EA               	goto	l610
 18171  00770A                     __end_of_MSDProcessCommandMediaAbsent:
 18172                           	opt stack 0
 18173                           tosu	equ	0xFFF
 18174                           tosh	equ	0xFFE
 18175                           tosl	equ	0xFFD
 18176                           pclath	equ	0xFFA
 18177                           tblptru	equ	0xFF8
 18178                           tblptrh	equ	0xFF7
 18179                           tblptrl	equ	0xFF6
 18180                           tablat	equ	0xFF5
 18181                           prodh	equ	0xFF4
 18182                           prodl	equ	0xFF3
 18183                           intcon	equ	0xFF2
 18184                           intcon2	equ	0xFF1
 18185                           intcon3	equ	0xFF0
 18186                           indf0	equ	0xFEF
 18187                           postinc0	equ	0xFEE
 18188                           fsr0h	equ	0xFEA
 18189                           fsr0l	equ	0xFE9
 18190                           wreg	equ	0xFE8
 18191                           indf1	equ	0xFE7
 18192                           postdec1	equ	0xFE5
 18193                           plusw1	equ	0xFE3
 18194                           fsr1h	equ	0xFE2
 18195                           fsr1l	equ	0xFE1
 18196                           indf2	equ	0xFDF
 18197                           postinc2	equ	0xFDE
 18198                           postdec2	equ	0xFDD
 18199                           plusw2	equ	0xFDB
 18200                           fsr2h	equ	0xFDA
 18201                           fsr2l	equ	0xFD9
 18202                           status	equ	0xFD8
 18203                           
 18204 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18205 ;; Defined at:
 18206 ;;		line 712 in file "usb_device_msd.c"
 18207 ;; Parameters:    Size  Location     Type
 18208 ;;		None
 18209 ;; Auto vars:     Size  Location     Type
 18210 ;;  capacity        4   66[COMRAM] struct .
 18211 ;;  sectorSize      4   62[COMRAM] struct .
 18212 ;;  i               1   70[COMRAM] unsigned char 
 18213 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18214 ;; Return value:  Size  Location     Type
 18215 ;;                  1    wreg      void 
 18216 ;; Registers used:
 18217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18218 ;; Tracked objects:
 18219 ;;		On entry : 0/0
 18220 ;;		On exit  : 0/0
 18221 ;;		Unchanged: 0/0
 18222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18224 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18226 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18227 ;;Total ram usage:       14 bytes
 18228 ;; Hardware stack levels used:    1
 18229 ;; Hardware stack levels required when called:    7
 18230 ;; This function calls:
 18231 ;;		_ExternalFlash_CapacityRead
 18232 ;;		_ExternalFlash_SectorSizeRead
 18233 ;;		_ExternalFlash_WriteProtectStateGet
 18234 ;;		_MSDCheckForErrorCases
 18235 ;;		_MSDComputeDeviceInAndResidue
 18236 ;;		_MSDErrorHandler
 18237 ;;		_MSDReadHandler
 18238 ;;		_MSDWriteHandler
 18239 ;;		_ResetSenseData
 18240 ;;		_USBTransferOnePacket
 18241 ;;		_memcpy
 18242 ;; This function is called by:
 18243 ;;		_MSDProcessCommand
 18244 ;;		_MSDProcessCommandMediaAbsent
 18245 ;; This function uses a non-reentrant model
 18246 ;;
 18247                           
 18248                           	psect	text86
 18249  00049C                     __ptext86:
 18250                           	opt stack 0
 18251  00049C                     _MSDProcessCommandMediaPresent:
 18252                           	opt stack 20
 18253                           
 18254                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18255                           
 18256                           ;incstack = 0
 18257  00049C  D1B9               	goto	l614
 18258  00049E                     
 18259                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18260  00049E  EC23  F019         	call	_MSDReadHandler	;wreg free
 18261  0004A2  0900               	iorlw	0
 18262  0004A4  A4D8               	btfss	status,2,c
 18263  0004A6  0012               	return	
 18264                           
 18265                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18266  0004A8  0100               	movlb	0	; () banked
 18267  0004AA  69E7               	setf	_MSDCommandState& (0+255),b
 18268                           
 18269                           ; BSR set to: 0
 18270                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18271  0004AC  0012               	return	
 18272  0004AE                     
 18273                           ; BSR set to: 0
 18274                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18275                           
 18276                           ; BSR set to: 0
 18277  0004AE  ECC8  F00A         	call	_MSDWriteHandler	;wreg free
 18278  0004B2  0900               	iorlw	0
 18279  0004B4  A4D8               	btfss	status,2,c
 18280  0004B6  0012               	return	
 18281                           
 18282                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18283  0004B8  0100               	movlb	0	; () banked
 18284  0004BA  69E7               	setf	_MSDCommandState& (0+255),b
 18285                           
 18286                           ; BSR set to: 0
 18287                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18288  0004BC  0012               	return	
 18289  0004BE                     
 18290                           ; BSR set to: 0
 18291                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18292                           
 18293                           ; BSR set to: 0
 18294  0004BE  05E2               	decf	_MSDHostNoData& (0+255),w,b
 18295  0004C0  A4D8               	btfss	status,2,c
 18296  0004C2  D002               	goto	l621
 18297                           
 18298                           ; BSR set to: 0
 18299                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18300  0004C4  69E7               	setf	_MSDCommandState& (0+255),b
 18301                           
 18302                           ;usb_device_msd.c: 751: break;
 18303  0004C6  0012               	return	
 18304  0004C8                     l621:
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18308  0004C8  C112  F0D4         	movff	_gblCBW+18,_TransferLength+1
 18309                           
 18310                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18311  0004CC  C113  F0D3         	movff	_gblCBW+19,_TransferLength
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18315  0004D0  C0D3  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18316  0004D4  C0D4  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18317  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18318  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18319  0004DC  ECB6  F029         	call	_MSDCheckForErrorCases	;wreg free
 18320  0004E0  0900               	iorlw	0
 18321  0004E2  A4D8               	btfss	status,2,c
 18322  0004E4  0012               	return	
 18323                           
 18324                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18325                           
 18326                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18327  0004E6  0E00               	movlw	0
 18328  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18329  0004EA  0E24               	movlw	36
 18330  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18331  0004EE  ECBC  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18332                           
 18333                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18334  0004F2  0E00               	movlw	0
 18335  0004F4  6E01               	movwf	memcpy@d1,c
 18336  0004F6  0E06               	movlw	6
 18337  0004F8  6E02               	movwf	memcpy@d1+1,c
 18338  0004FA  0E4A               	movlw	low _inq_resp
 18339  0004FC  6E03               	movwf	memcpy@s1,c
 18340  0004FE  0E8F               	movlw	high _inq_resp
 18341  000500  6E04               	movwf	memcpy@s1+1,c
 18342  000502  5003               	movf	memcpy@s1,w,c
 18343  000504  1004               	iorwf	memcpy@s1+1,w,c
 18344  000506  A4D8               	btfss	status,2,c
 18345  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 18346  00050A  6E05               	movwf	memcpy@s1+2,c
 18347  00050C  0E00               	movlw	0
 18348  00050E  6E07               	movwf	memcpy@n+1,c
 18349  000510  0E24               	movlw	36
 18350  000512  6E06               	movwf	memcpy@n,c
 18351  000514  ECF0  F03A         	call	_memcpy	;wreg free
 18352                           
 18353                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18354  000518  0EFD               	movlw	253
 18355  00051A  0100               	movlb	0	; () banked
 18356  00051C  6FE7               	movwf	_MSDCommandState& (0+255),b
 18357                           
 18358                           ;usb_device_msd.c: 773: break;
 18359  00051E  0012               	return	
 18360  000520                     
 18361                           ; BSR set to: 0
 18362                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18363                           
 18364                           ; BSR set to: 0
 18365  000520  C1E7  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18366  000524  C1E8  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18367  000528  D801               	call	u9298
 18368  00052A  D00A               	goto	u9299
 18369  00052C                     u9298:
 18370  00052C  0005               	push	
 18371  00052E  6EFA               	movwf	pclath,c
 18372  000530  0101               	movlb	1	; () banked
 18373  000532  51DB               	movf	(_LUN+2)& (0+255),w,b
 18374  000534  6EFD               	movwf	tosl,c
 18375  000536  51DC               	movf	(_LUN+3)& (0+255),w,b
 18376  000538  6EFE               	movwf	tosh,c
 18377  00053A  6AFF               	clrf	tosu,c
 18378  00053C  50FA               	movf	pclath,w,c
 18379  00053E  0012               	return		;indir
 18380  000540                     u9299:
 18381  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18382  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18383  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18384  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18385                           
 18386                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18387  000550  C1E7  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18388  000554  C1E8  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18389  000558  D801               	call	u9308
 18390  00055A  D00A               	goto	u9309
 18391  00055C                     u9308:
 18392  00055C  0005               	push	
 18393  00055E  6EFA               	movwf	pclath,c
 18394  000560  0101               	movlb	1	; () banked
 18395  000562  51DD               	movf	(_LUN+4)& (0+255),w,b
 18396  000564  6EFD               	movwf	tosl,c
 18397  000566  51DE               	movf	(_LUN+5)& (0+255),w,b
 18398  000568  6EFE               	movwf	tosh,c
 18399  00056A  6AFF               	clrf	tosu,c
 18400  00056C  50FA               	movf	pclath,w,c
 18401  00056E  0012               	return		;indir
 18402  000570                     u9309:
 18403  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18404  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18405  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18406  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18407                           
 18408                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18409  00057C  EE26 F000          	lfsr	2,1536
 18410  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18411                           
 18412                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18413  000584  EE26 F001          	lfsr	2,1537	;volatile
 18414  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18415                           
 18416                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18417  00058C  EE26 F002          	lfsr	2,1538	;volatile
 18418  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18419                           
 18420                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18421  000594  EE26 F003          	lfsr	2,1539	;volatile
 18422  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18423                           
 18424                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18425  00059C  EE26 F004          	lfsr	2,1540	;volatile
 18426  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18427                           
 18428                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18429  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 18430  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18431                           
 18432                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18433  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 18434  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18435                           
 18436                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18437  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 18438  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18439                           
 18440                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18441  0005BC  0E00               	movlw	0
 18442  0005BE  0100               	movlb	0	; () banked
 18443  0005C0  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 18444  0005C2  0E08               	movlw	8
 18445  0005C4  6FD3               	movwf	_TransferLength& (0+255),b
 18446                           
 18447                           ; BSR set to: 0
 18448                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18449  0005C6  0E00               	movlw	0
 18450  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18451  0005CA  0E08               	movlw	8
 18452  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18453  0005CE  ECBC  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18454                           
 18455                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 18456  0005D2  0EFD               	movlw	253
 18457  0005D4  0100               	movlb	0	; () banked
 18458  0005D6  6FE7               	movwf	_MSDCommandState& (0+255),b
 18459                           
 18460                           ;usb_device_msd.c: 802: break;
 18461  0005D8  0012               	return	
 18462  0005DA                     
 18463                           ; BSR set to: 0
 18464                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 18465                           
 18466                           ; BSR set to: 0
 18467  0005DA  05E2               	decf	_MSDHostNoData& (0+255),w,b
 18468  0005DC  A4D8               	btfss	status,2,c
 18469  0005DE  D002               	goto	l625
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 18473  0005E0  69E7               	setf	_MSDCommandState& (0+255),b
 18474                           
 18475                           ;usb_device_msd.c: 814: break;
 18476  0005E2  0012               	return	
 18477  0005E4                     l625:
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 18481                           
 18482                           ; BSR set to: 0
 18483  0005E4  0E00               	movlw	0
 18484  0005E6  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 18485  0005E8  0E12               	movlw	18
 18486  0005EA  6FD3               	movwf	_TransferLength& (0+255),b
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 18490  0005EC  0E00               	movlw	0
 18491  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18492  0005F0  0E12               	movlw	18
 18493  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18494  0005F4  ECBC  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18495                           
 18496                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 18497  0005F8  0E00               	movlw	0
 18498  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18499  0005FC                     l12506:
 18500  0005FC  0E11               	movlw	17
 18501  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 18502  000600  D001               	goto	l626
 18503  000602  D014               	goto	u9330
 18504  000604                     l626:
 18505                           
 18506                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 18507  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18508  000606  0D01               	mullw	1
 18509  000608  0E1F               	movlw	low _gblSenseData
 18510  00060A  24F3               	addwf	prodl,w,c
 18511  00060C  6ED9               	movwf	fsr2l,c
 18512  00060E  0E01               	movlw	high _gblSenseData
 18513  000610  20F4               	addwfc	prodh,w,c
 18514  000612  6EDA               	movwf	fsr2h,c
 18515  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18516  000616  0D01               	mullw	1
 18517  000618  0E00               	movlw	0
 18518  00061A  24F3               	addwf	prodl,w,c
 18519  00061C  6EE1               	movwf	fsr1l,c
 18520  00061E  0E06               	movlw	6
 18521  000620  20F4               	addwfc	prodh,w,c
 18522  000622  6EE2               	movwf	fsr1h,c
 18523  000624  CFDF FFE7          	movff	indf2,indf1
 18524  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18525  00062A  D7E8               	goto	l12506
 18526  00062C                     u9330:
 18527                           
 18528                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 18529  00062C  0EFD               	movlw	253
 18530  00062E  0100               	movlb	0	; () banked
 18531  000630  6FE7               	movwf	_MSDCommandState& (0+255),b
 18532                           
 18533                           ;usb_device_msd.c: 827: break;
 18534  000632  0012               	return	
 18535  000634                     l628:
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 18539  000634  0E03               	movlw	3
 18540  000636  CFE8 F600          	movff	wreg,1536
 18541                           
 18542                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 18543  00063A  0E00               	movlw	0
 18544  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 18548  000640  C1E7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 18549  000644  C1E8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 18550  000648  D801               	call	u9348
 18551  00064A  D00A               	goto	u9349
 18552  00064C                     u9348:
 18553  00064C  0005               	push	
 18554  00064E  6EFA               	movwf	pclath,c
 18555  000650  0101               	movlb	1	; () banked
 18556  000652  51E3               	movf	(_LUN+10)& (0+255),w,b
 18557  000654  6EFD               	movwf	tosl,c
 18558  000656  51E4               	movf	(_LUN+11)& (0+255),w,b
 18559  000658  6EFE               	movwf	tosh,c
 18560  00065A  6AFF               	clrf	tosu,c
 18561  00065C  50FA               	movf	pclath,w,c
 18562  00065E  0012               	return		;indir
 18563  000660                     u9349:
 18564  000660  0900               	iorlw	0
 18565  000662  A4D8               	btfss	status,2,c
 18566  000664  D004               	goto	l630
 18567  000666  0E00               	movlw	0
 18568  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18569  00066A  0E00               	movlw	0
 18570  00066C  D003               	goto	L19
 18571  00066E                     l630:
 18572  00066E  0E00               	movlw	0
 18573  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18574  000672  0E80               	movlw	128
 18575  000674                     L19:
 18576  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 18577  000676  EE26 F002          	lfsr	2,1538	;volatile
 18578  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 18579                           
 18580                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 18581  00067E  0E00               	movlw	0
 18582  000680  CFE8 F603          	movff	wreg,1539	;volatile
 18583                           
 18584                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 18585  000684  0E00               	movlw	0
 18586  000686  0100               	movlb	0	; () banked
 18587  000688  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 18588  00068A  0E04               	movlw	4
 18589  00068C  6FD3               	movwf	_TransferLength& (0+255),b
 18590                           
 18591                           ; BSR set to: 0
 18592                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 18593  00068E  0E00               	movlw	0
 18594  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18595  000692  0E04               	movlw	4
 18596  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18597  000696  ECBC  F033         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18598                           
 18599                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 18600  00069A  0EFD               	movlw	253
 18601  00069C  0100               	movlb	0	; () banked
 18602  00069E  6FE7               	movwf	_MSDCommandState& (0+255),b
 18603                           
 18604                           ;usb_device_msd.c: 839: break;
 18605  0006A0  0012               	return	
 18606  0006A2                     
 18607                           ; BSR set to: 0
 18608                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 18609                           
 18610                           ; BSR set to: 0
 18611  0006A2  0101               	movlb	1	; () banked
 18612  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18613  0006A6  0BF0               	andlw	-16
 18614  0006A8  0905               	iorlw	5
 18615  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18616                           
 18617                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 18618  0006AC  0E20               	movlw	32
 18619  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18620                           
 18621                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 18622  0006B0  0E00               	movlw	0
 18623  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18624                           
 18625                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 18626  0006B4  0E01               	movlw	1
 18627  0006B6  010D               	movlb	13	; () banked
 18628  0006B8  6F8C               	movwf	140,b	;volatile
 18629                           
 18630                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 18631  0006BA  0E00               	movlw	0
 18632  0006BC  6F88               	movwf	136,b	;volatile
 18633  0006BE  0E00               	movlw	0
 18634  0006C0  6F89               	movwf	137,b	;volatile
 18635  0006C2  0E00               	movlw	0
 18636  0006C4  6F8A               	movwf	138,b	;volatile
 18637  0006C6  0E00               	movlw	0
 18638  0006C8  6F8B               	movwf	139,b	;volatile
 18639                           
 18640                           ; BSR set to: 13
 18641                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 18642  0006CA  0100               	movlb	0	; () banked
 18643  0006CC  69E7               	setf	_MSDCommandState& (0+255),b
 18644                           
 18645                           ;usb_device_msd.c: 848: break;
 18646  0006CE  0012               	return	
 18647  0006D0                     
 18648                           ; BSR set to: 0
 18649                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 18650                           
 18651                           ; BSR set to: 0
 18652  0006D0  0E00               	movlw	0
 18653  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 18654  0006D4  0E00               	movlw	0
 18655  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 18656  0006D8  0E00               	movlw	0
 18657  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 18658  0006DC  0E00               	movlw	0
 18659  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 18660  0006E0  ECB6  F029         	call	_MSDCheckForErrorCases	;wreg free
 18661  0006E4  0900               	iorlw	0
 18662  0006E6  A4D8               	btfss	status,2,c
 18663  0006E8  0012               	return	
 18664                           
 18665                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 18666                           
 18667                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 18668  0006EA  0101               	movlb	1	; () banked
 18669  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18670  0006EE  0B0F               	andlw	15
 18671  0006F0  0A06               	xorlw	6
 18672  0006F2  A4D8               	btfss	status,2,c
 18673  0006F4  D007               	goto	l636
 18674                           
 18675                           ; BSR set to: 1
 18676  0006F6  010D               	movlb	13	; () banked
 18677  0006F8  058C               	decf	140,w,b	;volatile
 18678  0006FA  A4D8               	btfss	status,2,c
 18679  0006FC  D003               	goto	l636
 18680                           
 18681                           ; BSR set to: 13
 18682                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 18683  0006FE  0100               	movlb	0	; () banked
 18684  000700  69E7               	setf	_MSDCommandState& (0+255),b
 18685                           
 18686                           ;usb_device_msd.c: 870: }
 18687  000702  0012               	return	
 18688  000704                     l636:
 18689                           
 18690                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 18691                           
 18692                           ; BSR set to: 0
 18693  000704  EC85  F03B         	call	_ResetSenseData	;wreg free
 18694                           
 18695                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 18696  000708  0E00               	movlw	0
 18697  00070A  010D               	movlb	13	; () banked
 18698  00070C  6F88               	movwf	136,b	;volatile
 18699  00070E  0E00               	movlw	0
 18700  000710  6F89               	movwf	137,b	;volatile
 18701  000712  0E00               	movlw	0
 18702  000714  6F8A               	movwf	138,b	;volatile
 18703  000716  0E00               	movlw	0
 18704  000718  6F8B               	movwf	139,b	;volatile
 18705                           
 18706                           ; BSR set to: 13
 18707                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 18708  00071A  0100               	movlb	0	; () banked
 18709  00071C  69E7               	setf	_MSDCommandState& (0+255),b
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 18713  00071E  0012               	return	
 18714  000720                     
 18715                           ; BSR set to: 0
 18716                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 18717                           
 18718                           ; BSR set to: 0
 18719                           
 18720                           ; BSR set to: 0
 18721  000720  0E00               	movlw	0
 18722  000722  010D               	movlb	13	; () banked
 18723  000724  6F88               	movwf	136,b	;volatile
 18724  000726  0E00               	movlw	0
 18725  000728  6F89               	movwf	137,b	;volatile
 18726  00072A  0E00               	movlw	0
 18727  00072C  6F8A               	movwf	138,b	;volatile
 18728  00072E  0E00               	movlw	0
 18729  000730  6F8B               	movwf	139,b	;volatile
 18730                           
 18731                           ; BSR set to: 13
 18732                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 18733  000732  0100               	movlb	0	; () banked
 18734  000734  69E7               	setf	_MSDCommandState& (0+255),b
 18735                           
 18736                           ;usb_device_msd.c: 885: break;
 18737  000736  0012               	return	
 18738  000738                     
 18739                           ; BSR set to: 0
 18740                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 18741                           
 18742                           ; BSR set to: 0
 18743  000738  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 18744  00073A  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 18745  00073C  B4D8               	btfsc	status,2,c
 18746  00073E  D006               	goto	u9400
 18747                           
 18748                           ; BSR set to: 0
 18749  000740  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 18750  000744  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 18751  000748  BEDF               	btfsc	indf2,7,c
 18752  00074A  0012               	return	
 18753  00074C                     u9400:
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 18757                           
 18758                           ; BSR set to: 0
 18759  00074C  0101               	movlb	1	; () banked
 18760  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 18761  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18762  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18763  000754  E104               	bnz	u9410
 18764  000756  0E40               	movlw	64
 18765  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 18766  00075A  A0D8               	btfss	status,0,c
 18767  00075C  D009               	goto	l644
 18768  00075E                     u9410:
 18769                           
 18770                           ; BSR set to: 1
 18771                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 18772  00075E  0E40               	movlw	64
 18773  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 18774                           
 18775                           ; BSR set to: 1
 18776                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 18777  000762  0E40               	movlw	64
 18778  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 18779  000766  0E00               	movlw	0
 18780  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 18781  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 18782  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 18783                           
 18784                           ;usb_device_msd.c: 900: }
 18785  00076E  D00A               	goto	l645
 18786  000770                     l644:
 18787                           
 18788                           ; BSR set to: 1
 18789                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 18790  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 18791                           
 18792                           ; BSR set to: 1
 18793                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 18794  000774  0E00               	movlw	0
 18795  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 18796  000778  0E00               	movlw	0
 18797  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 18798  00077C  0E00               	movlw	0
 18799  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 18800  000780  0E00               	movlw	0
 18801  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 18802  000784                     l645:
 18803                           
 18804                           ; BSR set to: 1
 18805                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 18806                           
 18807                           ; BSR set to: 1
 18808  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18809  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 18810  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 18811  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 18812  00078C  0100               	movlb	0	; () banked
 18813  00078E  5DD3               	subwf	_TransferLength& (0+255),w,b
 18814  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 18815  000792  59D4               	subwfb	(_TransferLength+1)& (0+255),w,b
 18816  000794  A0D8               	btfss	status,0,c
 18817  000796  D005               	goto	l646
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 18821  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18822  00079A  5FD3               	subwf	_TransferLength& (0+255),f,b
 18823  00079C  0E00               	movlw	0
 18824  00079E  5BD4               	subwfb	(_TransferLength+1)& (0+255),f,b
 18825                           
 18826                           ;usb_device_msd.c: 918: }
 18827  0007A0  D01A               	goto	u9440
 18828  0007A2                     l646:
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 18832                           
 18833                           ; BSR set to: 0
 18834  0007A2  0E00               	movlw	0
 18835  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18836  0007A6  D013               	goto	l648
 18837  0007A8                     
 18838                           ; BSR set to: 0
 18839                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 18840                           
 18841                           ; BSR set to: 0
 18842  0007A8  51D3               	movf	_TransferLength& (0+255),w,b
 18843  0007AA  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 18844  0007AC  B4D8               	btfsc	status,2,c
 18845  0007AE  D004               	goto	l650
 18846                           
 18847                           ; BSR set to: 0
 18848                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 18849  0007B0  07D3               	decf	_TransferLength& (0+255),f,b
 18850  0007B2  A0D8               	btfss	status,0,c
 18851  0007B4  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 18852                           
 18853                           ;usb_device_msd.c: 932: }
 18854  0007B6  D00A               	goto	l651
 18855  0007B8                     l650:
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 18859                           
 18860                           ; BSR set to: 0
 18861  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18862  0007BA  0D01               	mullw	1
 18863  0007BC  0E00               	movlw	0
 18864  0007BE  24F3               	addwf	prodl,w,c
 18865  0007C0  6ED9               	movwf	fsr2l,c
 18866  0007C2  0E06               	movlw	6
 18867  0007C4  20F4               	addwfc	prodh,w,c
 18868  0007C6  6EDA               	movwf	fsr2h,c
 18869  0007C8  0E00               	movlw	0
 18870  0007CA  6EDF               	movwf	indf2,c
 18871  0007CC                     l651:
 18872                           
 18873                           ; BSR set to: 0
 18874                           
 18875                           ; BSR set to: 0
 18876  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18877  0007CE                     l648:
 18878                           
 18879                           ; BSR set to: 0
 18880                           
 18881                           ; BSR set to: 0
 18882  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 18883  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 18884  0007D2  A0D8               	btfss	status,0,c
 18885  0007D4  D7E9               	goto	l649
 18886  0007D6                     u9440:
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 18890                           
 18891                           ; BSR set to: 0
 18892                           
 18893                           ; BSR set to: 0
 18894  0007D6  0E01               	movlw	1
 18895  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 18896  0007DA  0E00               	movlw	0
 18897  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 18898  0007DE  0E06               	movlw	6
 18899  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 18900  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 18901  0007E6  0E02               	movlw	2
 18902  0007E8  ECEC  F026         	call	_USBTransferOnePacket
 18903  0007EC  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18904  0007F0  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18905                           
 18906                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 18907  0007F4  0101               	movlb	1	; () banked
 18908  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18909  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18910  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18911  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18912  0007FE  A4D8               	btfss	status,2,c
 18913  000800  0012               	return	
 18914                           
 18915                           ; BSR set to: 1
 18916                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 18917  000802  0100               	movlb	0	; () banked
 18918  000804  69E7               	setf	_MSDCommandState& (0+255),b
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 18922                           
 18923                           ; BSR set to: 0
 18924                           
 18925                           ;usb_device_msd.c: 949: break;
 18926  000806  0012               	return	
 18927  000808                     
 18928                           ; BSR set to: 0
 18929                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 18930                           
 18931                           ; BSR set to: 0
 18932                           
 18933                           ;usb_device_msd.c: 954: default:
 18934                           
 18935                           ; BSR set to: 0
 18936  000808  0E7F               	movlw	127
 18937  00080A  EC69  F026         	call	_MSDErrorHandler
 18938                           
 18939                           ;usb_device_msd.c: 960: }
 18940                           
 18941                           ;usb_device_msd.c: 959: break;
 18942  00080E  0012               	return	
 18943  000810                     l614:
 18944  000810  0100               	movlb	0	; () banked
 18945  000812  51E7               	movf	_MSDCommandState& (0+255),w,b
 18946                           
 18947                           ; Switch size 1, requested type "space"
 18948                           ; Number of cases is 12, Range of values is 0 to 254
 18949                           ; switch strategies available:
 18950                           ; Name         Instructions Cycles
 18951                           ; simple_byte           37    19 (average)
 18952                           ;	Chosen strategy is simple_byte
 18953  000814  0A00               	xorlw	0	; case 0
 18954  000816  B4D8               	btfsc	status,2,c
 18955  000818  D75B               	goto	l634
 18956  00081A  0A03               	xorlw	3	; case 3
 18957  00081C  B4D8               	btfsc	status,2,c
 18958  00081E  D6DD               	goto	l624
 18959  000820  0A11               	xorlw	17	; case 18
 18960  000822  B4D8               	btfsc	status,2,c
 18961  000824  D64C               	goto	l620
 18962  000826  0A08               	xorlw	8	; case 26
 18963  000828  B4D8               	btfsc	status,2,c
 18964  00082A  D704               	goto	l628
 18965  00082C  0A01               	xorlw	1	; case 27
 18966  00082E  B4D8               	btfsc	status,2,c
 18967  000830  D777               	goto	l638
 18968  000832  0A05               	xorlw	5	; case 30
 18969  000834  B4D8               	btfsc	status,2,c
 18970  000836  D735               	goto	l633
 18971  000838  0A3B               	xorlw	59	; case 37
 18972  00083A  B4D8               	btfsc	status,2,c
 18973  00083C  D671               	goto	l623
 18974  00083E  0A0D               	xorlw	13	; case 40
 18975  000840  B4D8               	btfsc	status,2,c
 18976  000842  D62D               	goto	l615
 18977  000844  0A02               	xorlw	2	; case 42
 18978  000846  B4D8               	btfsc	status,2,c
 18979  000848  D632               	goto	l618
 18980  00084A  0A05               	xorlw	5	; case 47
 18981  00084C  B4D8               	btfsc	status,2,c
 18982  00084E  D768               	goto	l638
 18983  000850  0AD2               	xorlw	210	; case 253
 18984  000852  B4D8               	btfsc	status,2,c
 18985  000854  D771               	goto	l640
 18986  000856  0A03               	xorlw	3	; case 254
 18987  000858  D7D7               	goto	l654
 18988  00085A                     __end_of_MSDProcessCommandMediaPresent:
 18989                           	opt stack 0
 18990                           tosu	equ	0xFFF
 18991                           tosh	equ	0xFFE
 18992                           tosl	equ	0xFFD
 18993                           pclath	equ	0xFFA
 18994                           tblptru	equ	0xFF8
 18995                           tblptrh	equ	0xFF7
 18996                           tblptrl	equ	0xFF6
 18997                           tablat	equ	0xFF5
 18998                           prodh	equ	0xFF4
 18999                           prodl	equ	0xFF3
 19000                           intcon	equ	0xFF2
 19001                           intcon2	equ	0xFF1
 19002                           intcon3	equ	0xFF0
 19003                           indf0	equ	0xFEF
 19004                           postinc0	equ	0xFEE
 19005                           fsr0h	equ	0xFEA
 19006                           fsr0l	equ	0xFE9
 19007                           wreg	equ	0xFE8
 19008                           indf1	equ	0xFE7
 19009                           postdec1	equ	0xFE5
 19010                           plusw1	equ	0xFE3
 19011                           fsr1h	equ	0xFE2
 19012                           fsr1l	equ	0xFE1
 19013                           indf2	equ	0xFDF
 19014                           postinc2	equ	0xFDE
 19015                           postdec2	equ	0xFDD
 19016                           plusw2	equ	0xFDB
 19017                           fsr2h	equ	0xFDA
 19018                           fsr2l	equ	0xFD9
 19019                           status	equ	0xFD8
 19020                           
 19021 ;; *************** function _MSDWriteHandler *****************
 19022 ;; Defined at:
 19023 ;;		line 1188 in file "usb_device_msd.c"
 19024 ;; Parameters:    Size  Location     Type
 19025 ;;		None
 19026 ;; Auto vars:     Size  Location     Type
 19027 ;;		None
 19028 ;; Return value:  Size  Location     Type
 19029 ;;                  1    wreg      unsigned char 
 19030 ;; Registers used:
 19031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19032 ;; Tracked objects:
 19033 ;;		On entry : 0/0
 19034 ;;		On exit  : 0/0
 19035 ;;		Unchanged: 0/0
 19036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19039 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19040 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19041 ;;Total ram usage:        5 bytes
 19042 ;; Hardware stack levels used:    1
 19043 ;; Hardware stack levels required when called:    6
 19044 ;; This function calls:
 19045 ;;		_ExternalFlash_SectorWrite
 19046 ;;		_ExternalFlash_WriteProtectStateGet
 19047 ;;		_MSDCheckForErrorCases
 19048 ;;		_USBStallEndpoint
 19049 ;;		_USBTransferOnePacket
 19050 ;; This function is called by:
 19051 ;;		_MSDProcessCommandMediaPresent
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           	psect	text87
 19056  001590                     __ptext87:
 19057                           	opt stack 0
 19058  001590                     _MSDWriteHandler:
 19059                           	opt stack 20
 19060                           
 19061                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19062                           
 19063                           ;incstack = 0
 19064  001590  D146               	goto	l684
 19065  001592                     l685:
 19066                           
 19067                           ; BSR set to: 0
 19068                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19069  001592  C111  F15D         	movff	_gblCBW+17,_LBA+3
 19070                           
 19071                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19072  001596  C112  F15C         	movff	_gblCBW+18,_LBA+2
 19073                           
 19074                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19075  00159A  C113  F15B         	movff	_gblCBW+19,_LBA+1
 19076                           
 19077                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19078  00159E  C114  F15A         	movff	_gblCBW+20,_LBA
 19079                           
 19080                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19081  0015A2  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 19082                           
 19083                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19084  0015A6  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 19085                           
 19086                           ; BSR set to: 0
 19087                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19088  0015AA  51D3               	movf	_TransferLength& (0+255),w,b
 19089  0015AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19090  0015AE  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 19091  0015B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19092  0015B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19093  0015B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19094  0015B6  0E09               	movlw	9
 19095  0015B8                     u7935:
 19096  0015B8  90D8               	bcf	status,0,c
 19097  0015BA  3630               	rlcf	??_MSDWriteHandler,f,c
 19098  0015BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19099  0015BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19100  0015C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19101  0015C2  2EE8               	decfsz	wreg,f,c
 19102  0015C4  D7F9               	goto	u7935
 19103  0015C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19104  0015CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19105  0015CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19106  0015D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19107  0015D6  ECB6  F029         	call	_MSDCheckForErrorCases	;wreg free
 19108  0015DA  0900               	iorlw	0
 19109  0015DC  A4D8               	btfss	status,2,c
 19110  0015DE  D131               	goto	l687
 19111                           
 19112                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19113                           
 19114                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19115  0015E0  C1E7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19116  0015E4  C1E8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19117  0015E8  D801               	call	u7958
 19118  0015EA  D00A               	goto	u7959
 19119  0015EC                     u7958:
 19120  0015EC  0005               	push	
 19121  0015EE  6EFA               	movwf	pclath,c
 19122  0015F0  0101               	movlb	1	; () banked
 19123  0015F2  51E3               	movf	(_LUN+10)& (0+255),w,b
 19124  0015F4  6EFD               	movwf	tosl,c
 19125  0015F6  51E4               	movf	(_LUN+11)& (0+255),w,b
 19126  0015F8  6EFE               	movwf	tosh,c
 19127  0015FA  6AFF               	clrf	tosu,c
 19128  0015FC  50FA               	movf	pclath,w,c
 19129  0015FE  0012               	return		;indir
 19130  001600                     u7959:
 19131  001600  0900               	iorlw	0
 19132  001602  B4D8               	btfsc	status,2,c
 19133  001604  D016               	goto	l688
 19134                           
 19135                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19136  001606  0E01               	movlw	1
 19137  001608  010D               	movlb	13	; () banked
 19138  00160A  6F8C               	movwf	140,b	;volatile
 19139                           
 19140                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19141  00160C  0101               	movlb	1	; () banked
 19142  00160E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19143  001610  0BF0               	andlw	-16
 19144  001612  0907               	iorlw	7
 19145  001614  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19146                           
 19147                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19148  001616  0E27               	movlw	39
 19149  001618  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19150                           
 19151                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19152  00161A  0E00               	movlw	0
 19153  00161C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19154                           
 19155                           ; BSR set to: 1
 19156                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19157  00161E  0E00               	movlw	0
 19158  001620  6E01               	movwf	USBStallEndpoint@dir,c
 19159  001622  0E02               	movlw	2
 19160  001624  ECDF  F024         	call	_USBStallEndpoint
 19161                           
 19162                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19163  001628  0E00               	movlw	0
 19164  00162A  0100               	movlb	0	; () banked
 19165  00162C  6FE5               	movwf	_MSDWriteState& (0+255),b
 19166                           
 19167                           ; BSR set to: 0
 19168                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19169  00162E  51E5               	movf	_MSDWriteState& (0+255),w,b
 19170                           
 19171                           ; BSR set to: 0
 19172  001630  0012               	return	
 19173  001632                     l688:
 19174                           
 19175                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19176                           
 19177                           ; BSR set to: 0
 19178  001632  0E01               	movlw	1
 19179  001634  0100               	movlb	0	; () banked
 19180  001636  6FE8               	movwf	_MSD_State& (0+255),b
 19181  001638                     
 19182                           ; BSR set to: 0
 19183                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19184                           
 19185                           ; BSR set to: 0
 19186  001638  51D3               	movf	_TransferLength& (0+255),w,b
 19187  00163A  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 19188  00163C  A4D8               	btfss	status,2,c
 19189  00163E  D002               	goto	l691
 19190                           
 19191                           ; BSR set to: 0
 19192                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19193  001640  0E00               	movlw	0
 19194  001642  D056               	goto	L20
 19195  001644                     l691:
 19196                           
 19197                           ; BSR set to: 0
 19198                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19199                           
 19200                           ; BSR set to: 0
 19201  001644  0E03               	movlw	3
 19202  001646  6FE5               	movwf	_MSDWriteState& (0+255),b
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19206  001648  0E00               	movlw	0
 19207  00164A  0101               	movlb	1	; () banked
 19208  00164C  6F82               	movwf	_ptrNextData& (0+255),b
 19209  00164E  0E06               	movlw	6
 19210  001650  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 19211                           
 19212                           ; BSR set to: 1
 19213                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19214  001652  0E00               	movlw	0
 19215  001654  010D               	movlb	13	; () banked
 19216  001656  6F88               	movwf	136,b	;volatile
 19217  001658  0E02               	movlw	2
 19218  00165A  6F89               	movwf	137,b	;volatile
 19219  00165C  0E00               	movlw	0
 19220  00165E  6F8A               	movwf	138,b	;volatile
 19221  001660  0E00               	movlw	0
 19222  001662  6F8B               	movwf	139,b	;volatile
 19223  001664                     l692:
 19224                           
 19225                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19226  001664  010D               	movlb	13	; () banked
 19227  001666  5188               	movf	136,w,b	;volatile
 19228  001668  1189               	iorwf	137,w,b	;volatile
 19229  00166A  118A               	iorwf	138,w,b	;volatile
 19230  00166C  118B               	iorwf	139,w,b	;volatile
 19231  00166E  B4D8               	btfsc	status,2,c
 19232  001670  D01E               	goto	l693
 19233                           
 19234                           ; BSR set to: 13
 19235                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19236  001672  0100               	movlb	0	; () banked
 19237  001674  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19238  001676  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19239  001678  B4D8               	btfsc	status,2,c
 19240  00167A  D006               	goto	l694
 19241                           
 19242                           ; BSR set to: 0
 19243  00167C  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19244  001680  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19245  001684  BEDF               	btfsc	indf2,7,c
 19246  001686  D0DD               	goto	l687
 19247  001688                     l694:
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19251                           
 19252                           ; BSR set to: 0
 19253  001688  0E00               	movlw	0
 19254  00168A  6E01               	movwf	USBTransferOnePacket@dir,c
 19255  00168C  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19256  001690  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19257  001694  0E40               	movlw	64
 19258  001696  6E04               	movwf	USBTransferOnePacket@len,c
 19259  001698  0E02               	movlw	2
 19260  00169A  ECEC  F026         	call	_USBTransferOnePacket
 19261  00169E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19262  0016A2  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19263                           
 19264                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19265  0016A6  0E04               	movlw	4
 19266  0016A8  0100               	movlb	0	; () banked
 19267  0016AA  6FE5               	movwf	_MSDWriteState& (0+255),b
 19268                           
 19269                           ;usb_device_msd.c: 1260: }
 19270  0016AC  D023               	goto	l695
 19271  0016AE                     l693:
 19272                           
 19273                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19274                           
 19275                           ; BSR set to: 0
 19276  0016AE  C1E7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19277  0016B2  C1E8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19278  0016B6  D801               	call	u8018
 19279  0016B8  D00A               	goto	u8019
 19280  0016BA                     u8018:
 19281  0016BA  0005               	push	
 19282  0016BC  6EFA               	movwf	pclath,c
 19283  0016BE  0101               	movlb	1	; () banked
 19284  0016C0  51E3               	movf	(_LUN+10)& (0+255),w,b
 19285  0016C2  6EFD               	movwf	tosl,c
 19286  0016C4  51E4               	movf	(_LUN+11)& (0+255),w,b
 19287  0016C6  6EFE               	movwf	tosh,c
 19288  0016C8  6AFF               	clrf	tosu,c
 19289  0016CA  50FA               	movf	pclath,w,c
 19290  0016CC  0012               	return		;indir
 19291  0016CE                     u8019:
 19292  0016CE  0900               	iorlw	0
 19293  0016D0  B4D8               	btfsc	status,2,c
 19294  0016D2  D00C               	goto	l696
 19295                           
 19296                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19297  0016D4  0E01               	movlw	1
 19298  0016D6  010D               	movlb	13	; () banked
 19299  0016D8  6F8C               	movwf	140,b	;volatile
 19300                           
 19301                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19302  0016DA  0101               	movlb	1	; () banked
 19303  0016DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19304  0016DE  0BF0               	andlw	-16
 19305  0016E0  0902               	iorlw	2
 19306  0016E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19307                           
 19308                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19309  0016E4  0E27               	movlw	39
 19310  0016E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19311                           
 19312                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19313  0016E8  0E00               	movlw	0
 19314  0016EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19315  0016EC                     l696:
 19316                           
 19317                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19318  0016EC  0E02               	movlw	2
 19319  0016EE  D095               	goto	L22
 19320  0016F0                     L20:
 19321  0016F0  6FE5               	movwf	_MSDWriteState& (0+255),b
 19322                           
 19323                           ;usb_device_msd.c: 1280: break;
 19324  0016F2  D0A7               	goto	l687
 19325  0016F4                     l695:
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19329                           
 19330                           ; BSR set to: 0
 19331                           
 19332                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19333                           
 19334                           ; BSR set to: 0
 19335  0016F4  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19336  0016F6  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19337  0016F8  B4D8               	btfsc	status,2,c
 19338  0016FA  D006               	goto	l698
 19339                           
 19340                           ; BSR set to: 0
 19341  0016FC  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19342  001700  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19343  001704  BEDF               	btfsc	indf2,7,c
 19344  001706  D09D               	goto	l687
 19345  001708                     l698:
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19349                           
 19350                           ; BSR set to: 0
 19351  001708  EE20 F001          	lfsr	2,1
 19352  00170C  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19353  00170E  26D9               	addwf	fsr2l,f,c
 19354  001710  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19355  001712  22DA               	addwfc	fsr2h,f,c
 19356  001714  50DF               	movf	indf2,w,c
 19357  001716  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19358  001718  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19359  00171C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19360  00171E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19361  001720  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19362  001722  5031               	movf	??_MSDWriteHandler+1,w,c
 19363  001724  0101               	movlb	1	; () banked
 19364  001726  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19365  001728  5032               	movf	??_MSDWriteHandler+2,w,c
 19366  00172A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19367  00172C  5033               	movf	??_MSDWriteHandler+3,w,c
 19368  00172E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19369  001730  5034               	movf	??_MSDWriteHandler+4,w,c
 19370  001732  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19371                           
 19372                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19373  001734  0100               	movlb	0	; () banked
 19374  001736  EE20 F001          	lfsr	2,1
 19375  00173A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19376  00173C  26D9               	addwf	fsr2l,f,c
 19377  00173E  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19378  001740  22DA               	addwfc	fsr2h,f,c
 19379  001742  50DF               	movf	indf2,w,c
 19380  001744  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19381  001746  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19382  00174A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19383  00174C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19384  00174E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19385  001750  5031               	movf	??_MSDWriteHandler+1,w,c
 19386  001752  010D               	movlb	13	; () banked
 19387  001754  5F88               	subwf	136,f,b	;volatile
 19388  001756  5032               	movf	??_MSDWriteHandler+2,w,c
 19389  001758  5B89               	subwfb	137,f,b	;volatile
 19390  00175A  5033               	movf	??_MSDWriteHandler+3,w,c
 19391  00175C  5B8A               	subwfb	138,f,b	;volatile
 19392  00175E  5034               	movf	??_MSDWriteHandler+4,w,c
 19393  001760  5B8B               	subwfb	139,f,b	;volatile
 19394                           
 19395                           ; BSR set to: 13
 19396                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19397  001762  0E40               	movlw	64
 19398  001764  0101               	movlb	1	; () banked
 19399  001766  2782               	addwf	_ptrNextData& (0+255),f,b
 19400  001768  0E00               	movlw	0
 19401  00176A  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19402                           
 19403                           ; BSR set to: 1
 19404                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19405  00176C  0E03               	movlw	3
 19406  00176E  D055               	goto	L22
 19407  001770                     
 19408                           ; BSR set to: 0
 19409                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19410                           
 19411                           ; BSR set to: 0
 19412  001770  010D               	movlb	13	; () banked
 19413  001772  518C               	movf	140,w,b	;volatile
 19414  001774  A4D8               	btfss	status,2,c
 19415  001776  D03B               	goto	l703
 19416                           
 19417                           ; BSR set to: 13
 19418                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19419  001778  C1E7  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19420  00177C  C1E8  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19421  001780  C15A  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19422  001784  C15B  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19423  001788  C15C  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19424  00178C  C15D  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19425  001790  0E00               	movlw	0
 19426  001792  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19427  001794  0E06               	movlw	6
 19428  001796  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19429  001798  0101               	movlb	1	; () banked
 19430  00179A  515A               	movf	_LBA& (0+255),w,b
 19431  00179C  115B               	iorwf	(_LBA+1)& (0+255),w,b
 19432  00179E  115C               	iorwf	(_LBA+2)& (0+255),w,b
 19433  0017A0  115D               	iorwf	(_LBA+3)& (0+255),w,b
 19434  0017A2  A4D8               	btfss	status,2,c
 19435  0017A4  D002               	goto	u8060
 19436  0017A6  0E01               	movlw	1
 19437  0017A8  D001               	goto	u8070
 19438  0017AA                     u8060:
 19439  0017AA  0E00               	movlw	0
 19440  0017AC                     u8070:
 19441  0017AC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19442  0017AE  D801               	call	u8088
 19443  0017B0  D009               	goto	u8089
 19444  0017B2                     u8088:
 19445  0017B2  0005               	push	
 19446  0017B4  6EFA               	movwf	pclath,c
 19447  0017B6  51E5               	movf	(_LUN+12)& (0+255),w,b
 19448  0017B8  6EFD               	movwf	tosl,c
 19449  0017BA  51E6               	movf	(_LUN+13)& (0+255),w,b
 19450  0017BC  6EFE               	movwf	tosh,c
 19451  0017BE  6AFF               	clrf	tosu,c
 19452  0017C0  50FA               	movf	pclath,w,c
 19453  0017C2  0012               	return		;indir
 19454  0017C4                     u8089:
 19455  0017C4  06E8               	decf	wreg,f,c
 19456  0017C6  B4D8               	btfsc	status,2,c
 19457  0017C8  D012               	goto	l703
 19458                           
 19459                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 19460  0017CA  0E64               	movlw	100
 19461  0017CC  0100               	movlb	0	; () banked
 19462  0017CE  61E4               	cpfslt	_MSDRetryAttempt& (0+255),b
 19463  0017D0  D002               	goto	l702
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 19467  0017D2  2BE4               	incf	_MSDRetryAttempt& (0+255),f,b
 19468                           
 19469                           ;usb_device_msd.c: 1314: break;
 19470  0017D4  D036               	goto	l687
 19471  0017D6                     l702:
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 19475                           
 19476                           ; BSR set to: 0
 19477  0017D6  0E01               	movlw	1
 19478  0017D8  010D               	movlb	13	; () banked
 19479  0017DA  6F8C               	movwf	140,b	;volatile
 19480                           
 19481                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 19482  0017DC  0101               	movlb	1	; () banked
 19483  0017DE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19484  0017E0  0BF0               	andlw	-16
 19485  0017E2  0903               	iorlw	3
 19486  0017E4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19487                           
 19488                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 19489  0017E6  0E00               	movlw	0
 19490  0017E8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19491                           
 19492                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 19493  0017EA  0E00               	movlw	0
 19494  0017EC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19495  0017EE                     l703:
 19496                           
 19497                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 19498                           
 19499                           ; BSR set to: 1
 19500                           
 19501                           ; BSR set to: 1
 19502                           
 19503                           ; BSR set to: 1
 19504  0017EE  0E01               	movlw	1
 19505  0017F0  0101               	movlb	1	; () banked
 19506  0017F2  275A               	addwf	_LBA& (0+255),f,b
 19507  0017F4  0E00               	movlw	0
 19508  0017F6  235B               	addwfc	(_LBA+1)& (0+255),f,b
 19509  0017F8  235C               	addwfc	(_LBA+2)& (0+255),f,b
 19510  0017FA  235D               	addwfc	(_LBA+3)& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 1
 19513                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 19514  0017FC  0100               	movlb	0	; () banked
 19515  0017FE  07D3               	decf	_TransferLength& (0+255),f,b
 19516  001800  A0D8               	btfss	status,0,c
 19517  001802  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 19518                           
 19519                           ; BSR set to: 0
 19520                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 19521  001804  0E01               	movlw	1
 19522  001806  D774               	goto	L20
 19523  001808                     
 19524                           ; BSR set to: 0
 19525                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 19526                           
 19527                           ; BSR set to: 0
 19528  001808  0E02               	movlw	2
 19529  00180A  010D               	movlb	13	; () banked
 19530  00180C  6F8C               	movwf	140,b	;volatile
 19531                           
 19532                           ; BSR set to: 13
 19533                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 19534  00180E  0E00               	movlw	0
 19535  001810  6E01               	movwf	USBStallEndpoint@dir,c
 19536  001812  0E02               	movlw	2
 19537  001814  ECDF  F024         	call	_USBStallEndpoint
 19538                           
 19539                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 19540  001818  0E00               	movlw	0
 19541  00181A                     L22:
 19542  00181A  0100               	movlb	0	; () banked
 19543  00181C  D769               	goto	L20
 19544  00181E                     l684:
 19545                           
 19546                           ; BSR set to: 0
 19547  00181E  0100               	movlb	0	; () banked
 19548  001820  51E5               	movf	_MSDWriteState& (0+255),w,b
 19549                           
 19550                           ; Switch size 1, requested type "space"
 19551                           ; Number of cases is 5, Range of values is 0 to 4
 19552                           ; switch strategies available:
 19553                           ; Name         Instructions Cycles
 19554                           ; simple_byte           16     9 (average)
 19555                           ;	Chosen strategy is simple_byte
 19556  001822  0A00               	xorlw	0	; case 0
 19557  001824  B4D8               	btfsc	status,2,c
 19558  001826  D6B5               	goto	l685
 19559  001828  0A01               	xorlw	1	; case 1
 19560  00182A  B4D8               	btfsc	status,2,c
 19561  00182C  D705               	goto	l690
 19562  00182E  0A03               	xorlw	3	; case 2
 19563  001830  B4D8               	btfsc	status,2,c
 19564  001832  D79E               	goto	l699
 19565  001834  0A01               	xorlw	1	; case 3
 19566  001836  B4D8               	btfsc	status,2,c
 19567  001838  D715               	goto	l692
 19568  00183A  0A07               	xorlw	7	; case 4
 19569  00183C  B4D8               	btfsc	status,2,c
 19570  00183E  D75A               	goto	l695
 19571  001840  D7E3               	goto	l704
 19572  001842                     l687:
 19573                           
 19574                           ;usb_device_msd.c: 1347: return MSDWriteState;
 19575                           
 19576                           ; BSR set to: 0
 19577  001842  0100               	movlb	0	; () banked
 19578  001844  51E5               	movf	_MSDWriteState& (0+255),w,b
 19579  001846  0012               	return	
 19580  001848                     __end_of_MSDWriteHandler:
 19581                           	opt stack 0
 19582                           tosu	equ	0xFFF
 19583                           tosh	equ	0xFFE
 19584                           tosl	equ	0xFFD
 19585                           pclath	equ	0xFFA
 19586                           tblptru	equ	0xFF8
 19587                           tblptrh	equ	0xFF7
 19588                           tblptrl	equ	0xFF6
 19589                           tablat	equ	0xFF5
 19590                           prodh	equ	0xFF4
 19591                           prodl	equ	0xFF3
 19592                           intcon	equ	0xFF2
 19593                           intcon2	equ	0xFF1
 19594                           intcon3	equ	0xFF0
 19595                           indf0	equ	0xFEF
 19596                           postinc0	equ	0xFEE
 19597                           fsr0h	equ	0xFEA
 19598                           fsr0l	equ	0xFE9
 19599                           wreg	equ	0xFE8
 19600                           indf1	equ	0xFE7
 19601                           postdec1	equ	0xFE5
 19602                           plusw1	equ	0xFE3
 19603                           fsr1h	equ	0xFE2
 19604                           fsr1l	equ	0xFE1
 19605                           indf2	equ	0xFDF
 19606                           postinc2	equ	0xFDE
 19607                           postdec2	equ	0xFDD
 19608                           plusw2	equ	0xFDB
 19609                           fsr2h	equ	0xFDA
 19610                           fsr2l	equ	0xFD9
 19611                           status	equ	0xFD8
 19612                           
 19613 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 19614 ;; Defined at:
 19615 ;;		line 34 in file "external_flash.c"
 19616 ;; Parameters:    Size  Location     Type
 19617 ;;  config          2    0[COMRAM] PTR void 
 19618 ;;		 -> NULL(0), 
 19619 ;; Auto vars:     Size  Location     Type
 19620 ;;		None
 19621 ;; Return value:  Size  Location     Type
 19622 ;;                  1    wreg      unsigned char 
 19623 ;; Registers used:
 19624 ;;		wreg
 19625 ;; Tracked objects:
 19626 ;;		On entry : 0/0
 19627 ;;		On exit  : 0/0
 19628 ;;		Unchanged: 0/0
 19629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19634 ;;Total ram usage:        2 bytes
 19635 ;; Hardware stack levels used:    1
 19636 ;; This function calls:
 19637 ;;		Nothing
 19638 ;; This function is called by:
 19639 ;;		_MSDWriteHandler
 19640 ;;		_MSDProcessCommandMediaPresent
 19641 ;; This function uses a non-reentrant model
 19642 ;;
 19643                           
 19644                           	psect	text88
 19645  0089C6                     __ptext88:
 19646                           	opt stack 0
 19647  0089C6                     _ExternalFlash_WriteProtectStateGet:
 19648                           	opt stack 25
 19649                           
 19650                           ;external_flash.c: 37: return 0;
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;incstack = 0
 19654  0089C6  0E00               	movlw	0
 19655  0089C8  0012               	return	
 19656  0089CA                     __end_of_ExternalFlash_WriteProtectStateGet:
 19657                           	opt stack 0
 19658                           tosu	equ	0xFFF
 19659                           tosh	equ	0xFFE
 19660                           tosl	equ	0xFFD
 19661                           pclath	equ	0xFFA
 19662                           tblptru	equ	0xFF8
 19663                           tblptrh	equ	0xFF7
 19664                           tblptrl	equ	0xFF6
 19665                           tablat	equ	0xFF5
 19666                           prodh	equ	0xFF4
 19667                           prodl	equ	0xFF3
 19668                           intcon	equ	0xFF2
 19669                           intcon2	equ	0xFF1
 19670                           intcon3	equ	0xFF0
 19671                           indf0	equ	0xFEF
 19672                           postinc0	equ	0xFEE
 19673                           fsr0h	equ	0xFEA
 19674                           fsr0l	equ	0xFE9
 19675                           wreg	equ	0xFE8
 19676                           indf1	equ	0xFE7
 19677                           postdec1	equ	0xFE5
 19678                           plusw1	equ	0xFE3
 19679                           fsr1h	equ	0xFE2
 19680                           fsr1l	equ	0xFE1
 19681                           indf2	equ	0xFDF
 19682                           postinc2	equ	0xFDE
 19683                           postdec2	equ	0xFDD
 19684                           plusw2	equ	0xFDB
 19685                           fsr2h	equ	0xFDA
 19686                           fsr2l	equ	0xFD9
 19687                           status	equ	0xFD8
 19688                           
 19689 ;; *************** function _ExternalFlash_SectorWrite *****************
 19690 ;; Defined at:
 19691 ;;		line 56 in file "external_flash.c"
 19692 ;; Parameters:    Size  Location     Type
 19693 ;;  config          2   36[COMRAM] PTR void 
 19694 ;;		 -> NULL(0), 
 19695 ;;  sector_addr     4   38[COMRAM] unsigned long 
 19696 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 19697 ;;		 -> msd_buffer(512), 
 19698 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 19699 ;; Auto vars:     Size  Location     Type
 19700 ;;  page            2   45[COMRAM] unsigned int 
 19701 ;; Return value:  Size  Location     Type
 19702 ;;                  1    wreg      unsigned char 
 19703 ;; Registers used:
 19704 ;;		wreg, status,2, status,0, cstack
 19705 ;; Tracked objects:
 19706 ;;		On entry : 0/0
 19707 ;;		On exit  : 0/0
 19708 ;;		Unchanged: 0/0
 19709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19710 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19713 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19714 ;;Total ram usage:       11 bytes
 19715 ;; Hardware stack levels used:    1
 19716 ;; Hardware stack levels required when called:    5
 19717 ;; This function calls:
 19718 ;;		_flash_page_write
 19719 ;; This function is called by:
 19720 ;;		_MSDWriteHandler
 19721 ;; This function uses a non-reentrant model
 19722 ;;
 19723                           
 19724                           	psect	text89
 19725  008330                     __ptext89:
 19726                           	opt stack 0
 19727  008330                     _ExternalFlash_SectorWrite:
 19728                           	opt stack 20
 19729                           
 19730                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 19731                           
 19732                           ;incstack = 0
 19733  008330  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 19734  008334  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 19735                           
 19736                           ;external_flash.c: 61: if(sector_addr >= 8192)
 19737  008338  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 19738  00833A  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 19739  00833C  E104               	bnz	u7610
 19740  00833E  0E20               	movlw	32
 19741  008340  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 19742  008342  A0D8               	btfss	status,0,c
 19743  008344  D002               	goto	l1880
 19744  008346                     u7610:
 19745                           
 19746                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 19747  008346  0E00               	movlw	0
 19748  008348  0012               	return	
 19749  00834A                     l1880:
 19750                           
 19751                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 19752  00834A  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 19753  00834E  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 19754  008352  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 19755  008356  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 19756  00835A  ECFE  F03D         	call	_flash_page_write	;wreg free
 19757                           
 19758                           ;external_flash.c: 69: return 1;
 19759  00835E  0E01               	movlw	1
 19760  008360  0012               	return	
 19761  008362                     __end_of_ExternalFlash_SectorWrite:
 19762                           	opt stack 0
 19763                           tosu	equ	0xFFF
 19764                           tosh	equ	0xFFE
 19765                           tosl	equ	0xFFD
 19766                           pclath	equ	0xFFA
 19767                           tblptru	equ	0xFF8
 19768                           tblptrh	equ	0xFF7
 19769                           tblptrl	equ	0xFF6
 19770                           tablat	equ	0xFF5
 19771                           prodh	equ	0xFF4
 19772                           prodl	equ	0xFF3
 19773                           intcon	equ	0xFF2
 19774                           intcon2	equ	0xFF1
 19775                           intcon3	equ	0xFF0
 19776                           indf0	equ	0xFEF
 19777                           postinc0	equ	0xFEE
 19778                           fsr0h	equ	0xFEA
 19779                           fsr0l	equ	0xFE9
 19780                           wreg	equ	0xFE8
 19781                           indf1	equ	0xFE7
 19782                           postdec1	equ	0xFE5
 19783                           plusw1	equ	0xFE3
 19784                           fsr1h	equ	0xFE2
 19785                           fsr1l	equ	0xFE1
 19786                           indf2	equ	0xFDF
 19787                           postinc2	equ	0xFDE
 19788                           postdec2	equ	0xFDD
 19789                           plusw2	equ	0xFDB
 19790                           fsr2h	equ	0xFDA
 19791                           fsr2l	equ	0xFD9
 19792                           status	equ	0xFD8
 19793                           
 19794 ;; *************** function _MSDReadHandler *****************
 19795 ;; Defined at:
 19796 ;;		line 1038 in file "usb_device_msd.c"
 19797 ;; Parameters:    Size  Location     Type
 19798 ;;		None
 19799 ;; Auto vars:     Size  Location     Type
 19800 ;;		None
 19801 ;; Return value:  Size  Location     Type
 19802 ;;                  1    wreg      unsigned char 
 19803 ;; Registers used:
 19804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19805 ;; Tracked objects:
 19806 ;;		On entry : 0/0
 19807 ;;		On exit  : 0/0
 19808 ;;		Unchanged: 0/0
 19809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19814 ;;Total ram usage:        4 bytes
 19815 ;; Hardware stack levels used:    1
 19816 ;; Hardware stack levels required when called:    6
 19817 ;; This function calls:
 19818 ;;		_ExternalFlash_SectorRead
 19819 ;;		_MSDCheckForErrorCases
 19820 ;;		_USBStallEndpoint
 19821 ;;		_USBTransferOnePacket
 19822 ;; This function is called by:
 19823 ;;		_MSDProcessCommandMediaPresent
 19824 ;; This function uses a non-reentrant model
 19825 ;;
 19826                           
 19827                           	psect	text90
 19828  003246                     __ptext90:
 19829                           	opt stack 0
 19830  003246                     _MSDReadHandler:
 19831                           	opt stack 20
 19832                           
 19833                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 19834                           
 19835                           ;incstack = 0
 19836  003246  D0D7               	goto	l665
 19837  003248                     l666:
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 19841  003248  C111  F15D         	movff	_gblCBW+17,_LBA+3
 19842                           
 19843                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 19844  00324C  C112  F15C         	movff	_gblCBW+18,_LBA+2
 19845                           
 19846                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 19847  003250  C113  F15B         	movff	_gblCBW+19,_LBA+1
 19848                           
 19849                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 19850  003254  C114  F15A         	movff	_gblCBW+20,_LBA
 19851                           
 19852                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 19853  003258  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 19854                           
 19855                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 19856  00325C  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 19857                           
 19858                           ; BSR set to: 0
 19859                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19860  003260  51D3               	movf	_TransferLength& (0+255),w,b
 19861  003262  6E36               	movwf	??_MSDReadHandler& (0+255),c
 19862  003264  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 19863  003266  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 19864  003268  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 19865  00326A  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 19866  00326C  0E09               	movlw	9
 19867  00326E                     u7825:
 19868  00326E  90D8               	bcf	status,0,c
 19869  003270  3636               	rlcf	??_MSDReadHandler,f,c
 19870  003272  3637               	rlcf	??_MSDReadHandler+1,f,c
 19871  003274  3638               	rlcf	??_MSDReadHandler+2,f,c
 19872  003276  3639               	rlcf	??_MSDReadHandler+3,f,c
 19873  003278  2EE8               	decfsz	wreg,f,c
 19874  00327A  D7F9               	goto	u7825
 19875  00327C  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 19876  003280  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19877  003284  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19878  003288  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19879  00328C  ECB6  F029         	call	_MSDCheckForErrorCases	;wreg free
 19880  003290  0900               	iorlw	0
 19881  003292  A4D8               	btfss	status,2,c
 19882  003294  D0C2               	goto	l668
 19883                           
 19884                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 19885                           
 19886                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 19887  003296  0E01               	movlw	1
 19888  003298  0100               	movlb	0	; () banked
 19889  00329A  6FE6               	movwf	_MSDReadState& (0+255),b
 19890  00329C                     
 19891                           ; BSR set to: 0
 19892                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 19893                           
 19894                           ; BSR set to: 0
 19895  00329C  51D3               	movf	_TransferLength& (0+255),w,b
 19896  00329E  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 19897  0032A0  A4D8               	btfss	status,2,c
 19898  0032A2  D002               	goto	l670
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 19902  0032A4  0E00               	movlw	0
 19903  0032A6  D046               	goto	L23
 19904  0032A8                     l670:
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 19908                           
 19909                           ; BSR set to: 0
 19910  0032A8  07D3               	decf	_TransferLength& (0+255),f,b
 19911  0032AA  A0D8               	btfss	status,0,c
 19912  0032AC  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 19913                           
 19914                           ; BSR set to: 0
 19915                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 19916  0032AE  0E02               	movlw	2
 19917  0032B0  6FE6               	movwf	_MSDReadState& (0+255),b
 19918  0032B2                     
 19919                           ; BSR set to: 0
 19920                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 19921                           
 19922                           ; BSR set to: 0
 19923  0032B2  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 19924  0032B4  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19925  0032B6  B4D8               	btfsc	status,2,c
 19926  0032B8  D006               	goto	l672
 19927                           
 19928                           ; BSR set to: 0
 19929  0032BA  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 19930  0032BE  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19931  0032C2  BEDF               	btfsc	indf2,7,c
 19932  0032C4  D0AA               	goto	l668
 19933  0032C6                     l672:
 19934                           
 19935                           ; BSR set to: 0
 19936                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 19937                           
 19938                           ; BSR set to: 0
 19939  0032C6  C1E7  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 19940  0032CA  C1E8  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 19941  0032CE  C15A  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 19942  0032D2  C15B  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 19943  0032D6  C15C  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 19944  0032DA  C15D  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 19945  0032DE  0E00               	movlw	0
 19946  0032E0  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 19947  0032E2  0E06               	movlw	6
 19948  0032E4  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 19949  0032E6  D801               	call	u7878
 19950  0032E8  D00A               	goto	u7879
 19951  0032EA                     u7878:
 19952  0032EA  0005               	push	
 19953  0032EC  6EFA               	movwf	pclath,c
 19954  0032EE  0101               	movlb	1	; () banked
 19955  0032F0  51E1               	movf	(_LUN+8)& (0+255),w,b
 19956  0032F2  6EFD               	movwf	tosl,c
 19957  0032F4  51E2               	movf	(_LUN+9)& (0+255),w,b
 19958  0032F6  6EFE               	movwf	tosh,c
 19959  0032F8  6AFF               	clrf	tosu,c
 19960  0032FA  50FA               	movf	pclath,w,c
 19961  0032FC  0012               	return		;indir
 19962  0032FE                     u7879:
 19963  0032FE  06E8               	decf	wreg,f,c
 19964  003300  B4D8               	btfsc	status,2,c
 19965  003302  D01A               	goto	l675
 19966                           
 19967                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 19968  003304  0E64               	movlw	100
 19969  003306  0100               	movlb	0	; () banked
 19970  003308  61E4               	cpfslt	_MSDRetryAttempt& (0+255),b
 19971  00330A  D002               	goto	l674
 19972                           
 19973                           ; BSR set to: 0
 19974                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 19975  00330C  2BE4               	incf	_MSDRetryAttempt& (0+255),f,b
 19976                           
 19977                           ;usb_device_msd.c: 1088: break;
 19978  00330E  D085               	goto	l668
 19979  003310                     l674:
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 19983                           
 19984                           ; BSR set to: 0
 19985  003310  0E02               	movlw	2
 19986  003312  010D               	movlb	13	; () banked
 19987  003314  6F8C               	movwf	140,b	;volatile
 19988                           
 19989                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 19990  003316  0101               	movlb	1	; () banked
 19991  003318  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19992  00331A  0BF0               	andlw	-16
 19993  00331C  0903               	iorlw	3
 19994  00331E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19995                           
 19996                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 19997  003320  0E00               	movlw	0
 19998  003322  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19999                           
 20000                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20001  003324  0E00               	movlw	0
 20002  003326  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20003                           
 20004                           ; BSR set to: 1
 20005                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20006  003328  0E01               	movlw	1
 20007  00332A  6E01               	movwf	USBStallEndpoint@dir,c
 20008  00332C  0E02               	movlw	2
 20009  00332E  ECDF  F024         	call	_USBStallEndpoint
 20010  003332  D05E               	goto	l11050
 20011  003334                     L23:
 20012  003334  6FE6               	movwf	_MSDReadState& (0+255),b
 20013                           
 20014                           ;usb_device_msd.c: 1109: break;
 20015  003336  D071               	goto	l668
 20016  003338                     l675:
 20017                           
 20018                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20019                           
 20020                           ; BSR set to: 0
 20021                           
 20022                           ; BSR set to: 0
 20023  003338  0E01               	movlw	1
 20024  00333A  0101               	movlb	1	; () banked
 20025  00333C  275A               	addwf	_LBA& (0+255),f,b
 20026  00333E  0E00               	movlw	0
 20027  003340  235B               	addwfc	(_LBA+1)& (0+255),f,b
 20028  003342  235C               	addwfc	(_LBA+2)& (0+255),f,b
 20029  003344  235D               	addwfc	(_LBA+3)& (0+255),f,b
 20030                           
 20031                           ; BSR set to: 1
 20032                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20033  003346  0E00               	movlw	0
 20034  003348  010D               	movlb	13	; () banked
 20035  00334A  6F88               	movwf	136,b	;volatile
 20036  00334C  0E02               	movlw	2
 20037  00334E  6F89               	movwf	137,b	;volatile
 20038  003350  0E00               	movlw	0
 20039  003352  6F8A               	movwf	138,b	;volatile
 20040  003354  0E00               	movlw	0
 20041  003356  6F8B               	movwf	139,b	;volatile
 20042                           
 20043                           ; BSR set to: 13
 20044                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20045  003358  0E00               	movlw	0
 20046  00335A  0101               	movlb	1	; () banked
 20047  00335C  6F82               	movwf	_ptrNextData& (0+255),b
 20048  00335E  0E06               	movlw	6
 20049  003360  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 20050                           
 20051                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20052  003362  0E03               	movlw	3
 20053  003364  0100               	movlb	0	; () banked
 20054  003366  6FE6               	movwf	_MSDReadState& (0+255),b
 20055  003368                     
 20056                           ; BSR set to: 0
 20057                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20058                           
 20059                           ; BSR set to: 0
 20060  003368  010D               	movlb	13	; () banked
 20061  00336A  5188               	movf	136,w,b	;volatile
 20062  00336C  1189               	iorwf	137,w,b	;volatile
 20063  00336E  118A               	iorwf	138,w,b	;volatile
 20064  003370  118B               	iorwf	139,w,b	;volatile
 20065  003372  A4D8               	btfss	status,2,c
 20066  003374  D002               	goto	l677
 20067                           
 20068                           ; BSR set to: 13
 20069                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20070  003376  0E01               	movlw	1
 20071  003378  D03C               	goto	L25
 20072  00337A                     l677:
 20073                           
 20074                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20075                           
 20076                           ; BSR set to: 0
 20077  00337A  0E04               	movlw	4
 20078  00337C  0100               	movlb	0	; () banked
 20079  00337E  6FE6               	movwf	_MSDReadState& (0+255),b
 20080  003380                     
 20081                           ; BSR set to: 0
 20082                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20083                           
 20084                           ; BSR set to: 0
 20085  003380  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 20086  003382  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20087  003384  B4D8               	btfsc	status,2,c
 20088  003386  D006               	goto	l679
 20089                           
 20090                           ; BSR set to: 0
 20091  003388  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 20092  00338C  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20093  003390  BEDF               	btfsc	indf2,7,c
 20094  003392  D043               	goto	l668
 20095  003394                     l679:
 20096                           
 20097                           ; BSR set to: 0
 20098                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20099                           
 20100                           ; BSR set to: 0
 20101  003394  0E01               	movlw	1
 20102  003396  6E01               	movwf	USBTransferOnePacket@dir,c
 20103  003398  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20104  00339C  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20105  0033A0  0E40               	movlw	64
 20106  0033A2  6E04               	movwf	USBTransferOnePacket@len,c
 20107  0033A4  0E02               	movlw	2
 20108  0033A6  ECEC  F026         	call	_USBTransferOnePacket
 20109  0033AA  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20110  0033AE  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20111                           
 20112                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20113  0033B2  0E03               	movlw	3
 20114  0033B4  0100               	movlb	0	; () banked
 20115  0033B6  6FE6               	movwf	_MSDReadState& (0+255),b
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20119  0033B8  0E40               	movlw	64
 20120  0033BA  0101               	movlb	1	; () banked
 20121  0033BC  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20122  0033BE  0E00               	movlw	0
 20123  0033C0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20124  0033C2  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20125  0033C4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20126                           
 20127                           ; BSR set to: 1
 20128                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20129  0033C6  0E40               	movlw	64
 20130  0033C8  010D               	movlb	13	; () banked
 20131  0033CA  5F88               	subwf	136,f,b	;volatile
 20132  0033CC  0E00               	movlw	0
 20133  0033CE  5B89               	subwfb	137,f,b	;volatile
 20134  0033D0  5B8A               	subwfb	138,f,b	;volatile
 20135  0033D2  5B8B               	subwfb	139,f,b	;volatile
 20136                           
 20137                           ; BSR set to: 13
 20138                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20139  0033D4  0E40               	movlw	64
 20140  0033D6  0101               	movlb	1	; () banked
 20141  0033D8  2782               	addwf	_ptrNextData& (0+255),f,b
 20142  0033DA  0E00               	movlw	0
 20143  0033DC  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20144                           
 20145                           ;usb_device_msd.c: 1149: break;
 20146  0033DE  D01D               	goto	l668
 20147  0033E0                     
 20148                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20149                           
 20150                           ; BSR set to: 1
 20151  0033E0  0E02               	movlw	2
 20152  0033E2  010D               	movlb	13	; () banked
 20153  0033E4  6F8C               	movwf	140,b	;volatile
 20154                           
 20155                           ; BSR set to: 13
 20156                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20157  0033E6  0E01               	movlw	1
 20158  0033E8  6E01               	movwf	USBStallEndpoint@dir,c
 20159  0033EA  0E02               	movlw	2
 20160  0033EC  ECDF  F024         	call	_USBStallEndpoint
 20161  0033F0                     l11050:
 20162                           
 20163                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20164  0033F0  0E00               	movlw	0
 20165  0033F2                     L25:
 20166  0033F2  0100               	movlb	0	; () banked
 20167  0033F4  D79F               	goto	L23
 20168  0033F6                     l665:
 20169                           
 20170                           ; BSR set to: 0
 20171  0033F6  0100               	movlb	0	; () banked
 20172  0033F8  51E6               	movf	_MSDReadState& (0+255),w,b
 20173                           
 20174                           ; Switch size 1, requested type "space"
 20175                           ; Number of cases is 5, Range of values is 0 to 4
 20176                           ; switch strategies available:
 20177                           ; Name         Instructions Cycles
 20178                           ; simple_byte           16     9 (average)
 20179                           ;	Chosen strategy is simple_byte
 20180  0033FA  0A00               	xorlw	0	; case 0
 20181  0033FC  B4D8               	btfsc	status,2,c
 20182  0033FE  D724               	goto	l666
 20183  003400  0A01               	xorlw	1	; case 1
 20184  003402  B4D8               	btfsc	status,2,c
 20185  003404  D74B               	goto	l669
 20186  003406  0A03               	xorlw	3	; case 2
 20187  003408  B4D8               	btfsc	status,2,c
 20188  00340A  D753               	goto	l671
 20189  00340C  0A01               	xorlw	1	; case 3
 20190  00340E  B4D8               	btfsc	status,2,c
 20191  003410  D7AB               	goto	l676
 20192  003412  0A07               	xorlw	7	; case 4
 20193  003414  B4D8               	btfsc	status,2,c
 20194  003416  D7B4               	goto	l678
 20195  003418  D7E3               	goto	l680
 20196  00341A                     l668:
 20197                           
 20198                           ;usb_device_msd.c: 1161: return MSDReadState;
 20199                           
 20200                           ; BSR set to: 0
 20201  00341A  0100               	movlb	0	; () banked
 20202  00341C  51E6               	movf	_MSDReadState& (0+255),w,b
 20203  00341E  0012               	return	
 20204  003420                     __end_of_MSDReadHandler:
 20205                           	opt stack 0
 20206                           tosu	equ	0xFFF
 20207                           tosh	equ	0xFFE
 20208                           tosl	equ	0xFFD
 20209                           pclath	equ	0xFFA
 20210                           tblptru	equ	0xFF8
 20211                           tblptrh	equ	0xFF7
 20212                           tblptrl	equ	0xFF6
 20213                           tablat	equ	0xFF5
 20214                           prodh	equ	0xFF4
 20215                           prodl	equ	0xFF3
 20216                           intcon	equ	0xFF2
 20217                           intcon2	equ	0xFF1
 20218                           intcon3	equ	0xFF0
 20219                           indf0	equ	0xFEF
 20220                           postinc0	equ	0xFEE
 20221                           fsr0h	equ	0xFEA
 20222                           fsr0l	equ	0xFE9
 20223                           wreg	equ	0xFE8
 20224                           indf1	equ	0xFE7
 20225                           postdec1	equ	0xFE5
 20226                           plusw1	equ	0xFE3
 20227                           fsr1h	equ	0xFE2
 20228                           fsr1l	equ	0xFE1
 20229                           indf2	equ	0xFDF
 20230                           postinc2	equ	0xFDE
 20231                           postdec2	equ	0xFDD
 20232                           plusw2	equ	0xFDB
 20233                           fsr2h	equ	0xFDA
 20234                           fsr2l	equ	0xFD9
 20235                           status	equ	0xFD8
 20236                           
 20237 ;; *************** function _MSDCheckForErrorCases *****************
 20238 ;; Defined at:
 20239 ;;		line 1434 in file "usb_device_msd.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20242 ;; Auto vars:     Size  Location     Type
 20243 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20244 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20245 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      unsigned char 
 20248 ;; Registers used:
 20249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20256 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20258 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20259 ;;Total ram usage:        7 bytes
 20260 ;; Hardware stack levels used:    1
 20261 ;; Hardware stack levels required when called:    2
 20262 ;; This function calls:
 20263 ;;		_MSDErrorHandler
 20264 ;; This function is called by:
 20265 ;;		_MSDProcessCommandMediaPresent
 20266 ;;		_MSDReadHandler
 20267 ;;		_MSDWriteHandler
 20268 ;; This function uses a non-reentrant model
 20269 ;;
 20270                           
 20271                           	psect	text91
 20272  00536C                     __ptext91:
 20273                           	opt stack 0
 20274  00536C                     _MSDCheckForErrorCases:
 20275                           	opt stack 23
 20276                           
 20277                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;incstack = 0
 20281  00536C  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20282  00536E  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20283  005370  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20284  005372  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20285  005374  A4D8               	btfss	status,2,c
 20286  005376  D002               	goto	l710
 20287                           
 20288                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20289  005378  0E01               	movlw	1
 20290  00537A  D001               	goto	L26
 20291  00537C                     l710:
 20292                           
 20293                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20294  00537C  0E00               	movlw	0
 20295  00537E                     L26:
 20296  00537E  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20297                           
 20298                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20299  005380  0100               	movlb	0	; () banked
 20300  005382  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20301  005384  A4D8               	btfss	status,2,c
 20302  005386  D005               	goto	l712
 20303                           
 20304                           ; BSR set to: 0
 20305  005388  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20306  00538A  A4D8               	btfss	status,2,c
 20307  00538C  D002               	goto	l712
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20311  00538E  0E00               	movlw	0
 20312                           
 20313                           ; BSR set to: 0
 20314  005390  0012               	return	
 20315  005392                     l712:
 20316                           
 20317                           ; BSR set to: 0
 20318                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20319                           
 20320                           ; BSR set to: 0
 20321  005392  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20322  005394  0101               	movlb	1	; () banked
 20323  005396  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20324  005398  E11A               	bnz	l10630
 20325  00539A  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20326  00539C  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20327  00539E  E117               	bnz	l10630
 20328  0053A0  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20329  0053A2  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20330  0053A4  E114               	bnz	l10630
 20331  0053A6  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20332  0053A8  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20333  0053AA  A4D8               	btfss	status,2,c
 20334  0053AC  D010               	goto	l718
 20335                           
 20336                           ; BSR set to: 1
 20337                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20338  0053AE  0100               	movlb	0	; () banked
 20339  0053B0  05E8               	decf	_MSD_State& (0+255),w,b
 20340  0053B2  A4D8               	btfss	status,2,c
 20341  0053B4  D006               	goto	l715
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20345  0053B6  0E2A               	movlw	42
 20346  0053B8  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20347  0053BA  B4D8               	btfsc	status,2,c
 20348  0053BC  D008               	goto	l718
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20352  0053BE  0E00               	movlw	0
 20353                           
 20354                           ; BSR set to: 0
 20355  0053C0  0012               	return	
 20356  0053C2                     l715:
 20357                           
 20358                           ; BSR set to: 0
 20359                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20360                           
 20361                           ; BSR set to: 0
 20362  0053C2  0E2A               	movlw	42
 20363  0053C4  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20364  0053C6  A4D8               	btfss	status,2,c
 20365  0053C8  D002               	goto	l718
 20366                           
 20367                           ; BSR set to: 0
 20368                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20369  0053CA  0E00               	movlw	0
 20370                           
 20371                           ; BSR set to: 0
 20372  0053CC  0012               	return	
 20373  0053CE                     l718:
 20374  0053CE                     l10630:
 20375                           
 20376                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20377  0053CE  0101               	movlb	1	; () banked
 20378  0053D0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20379  0053D2  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20380  0053D4  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20381  0053D6  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20382  0053D8  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20383  0053DA  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20384  0053DC  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20385  0053DE  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20386  0053E0  B0D8               	btfsc	status,0,c
 20387  0053E2  D002               	goto	l719
 20388                           
 20389                           ; BSR set to: 1
 20390                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20391  0053E4  0E01               	movlw	1
 20392  0053E6  D001               	goto	L27
 20393  0053E8                     l719:
 20394                           
 20395                           ; BSR set to: 1
 20396                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20397                           
 20398                           ; BSR set to: 1
 20399  0053E8  0E00               	movlw	0
 20400  0053EA                     L27:
 20401  0053EA  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20402                           
 20403                           ; BSR set to: 1
 20404                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20405                           
 20406                           ; BSR set to: 1
 20407  0053EC  0E02               	movlw	2
 20408  0053EE  0100               	movlb	0	; () banked
 20409  0053F0  19E8               	xorwf	_MSD_State& (0+255),w,b
 20410  0053F2  A4D8               	btfss	status,2,c
 20411  0053F4  D014               	goto	l721
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20415  0053F6  0E2A               	movlw	42
 20416  0053F8  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20417  0053FA  B4D8               	btfsc	status,2,c
 20418  0053FC  D005               	goto	l722
 20419                           
 20420                           ; BSR set to: 0
 20421  0053FE  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20422  005400  A4D8               	btfss	status,2,c
 20423  005402  D002               	goto	l722
 20424  005404                     u7410:
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20428  005404  0E05               	movlw	5
 20429  005406  D01D               	goto	L30
 20430  005408                     l722:
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20434                           
 20435                           ; BSR set to: 0
 20436  005408  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20437  00540A  B4D8               	btfsc	status,2,c
 20438  00540C  D00F               	goto	u7460
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20442                           
 20443                           ; BSR set to: 0
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20447  00540E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20448  005410  B4D8               	btfsc	status,2,c
 20449  005412  D003               	goto	u7440
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20453                           
 20454                           ; BSR set to: 0
 20455                           
 20456                           ; BSR set to: 0
 20457                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 20458  005414  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20459  005416  A4D8               	btfss	status,2,c
 20460  005418  D7F5               	goto	u7410
 20461  00541A                     u7440:
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 20465  00541A  0E04               	movlw	4
 20466  00541C  D012               	goto	L30
 20467  00541E                     l721:
 20468                           
 20469                           ; BSR set to: 0
 20470                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 20471                           
 20472                           ; BSR set to: 0
 20473  00541E  0E2A               	movlw	42
 20474  005420  19E7               	xorwf	_MSDCommandState& (0+255),w,b
 20475  005422  B4D8               	btfsc	status,2,c
 20476  005424  D00D               	goto	l737
 20477                           
 20478                           ; BSR set to: 0
 20479                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 20480                           
 20481                           ; BSR set to: 0
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 20485  005426  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20486  005428  A4D8               	btfss	status,2,c
 20487  00542A  D002               	goto	l733
 20488  00542C                     u7460:
 20489                           
 20490                           ; BSR set to: 0
 20491                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 20492  00542C  0E01               	movlw	1
 20493  00542E  D009               	goto	L30
 20494  005430                     l733:
 20495                           
 20496                           ; BSR set to: 0
 20497                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 20498                           
 20499                           ; BSR set to: 0
 20500  005430  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20501  005432  B4D8               	btfsc	status,2,c
 20502  005434  D003               	goto	u7480
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 20506                           
 20507                           ; BSR set to: 0
 20508                           
 20509                           ; BSR set to: 0
 20510                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 20511  005436  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20512  005438  A4D8               	btfss	status,2,c
 20513  00543A  D002               	goto	l737
 20514  00543C                     u7480:
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 20518  00543C  0E02               	movlw	2
 20519  00543E  D001               	goto	L30
 20520  005440                     l737:
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 20524                           
 20525                           ; BSR set to: 0
 20526  005440  0E03               	movlw	3
 20527  005442                     L30:
 20528  005442  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 20532                           
 20533                           ; BSR set to: 0
 20534                           
 20535                           ; BSR set to: 0
 20536                           
 20537                           ; BSR set to: 0
 20538                           
 20539                           ; BSR set to: 0
 20540                           
 20541                           ; BSR set to: 0
 20542  005444  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20543  005446  EC69  F026         	call	_MSDErrorHandler
 20544                           
 20545                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 20546  00544A  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20547  00544C  0012               	return	
 20548  00544E                     __end_of_MSDCheckForErrorCases:
 20549                           	opt stack 0
 20550                           tosu	equ	0xFFF
 20551                           tosh	equ	0xFFE
 20552                           tosl	equ	0xFFD
 20553                           pclath	equ	0xFFA
 20554                           tblptru	equ	0xFF8
 20555                           tblptrh	equ	0xFF7
 20556                           tblptrl	equ	0xFF6
 20557                           tablat	equ	0xFF5
 20558                           prodh	equ	0xFF4
 20559                           prodl	equ	0xFF3
 20560                           intcon	equ	0xFF2
 20561                           intcon2	equ	0xFF1
 20562                           intcon3	equ	0xFF0
 20563                           indf0	equ	0xFEF
 20564                           postinc0	equ	0xFEE
 20565                           fsr0h	equ	0xFEA
 20566                           fsr0l	equ	0xFE9
 20567                           wreg	equ	0xFE8
 20568                           indf1	equ	0xFE7
 20569                           postdec1	equ	0xFE5
 20570                           plusw1	equ	0xFE3
 20571                           fsr1h	equ	0xFE2
 20572                           fsr1l	equ	0xFE1
 20573                           indf2	equ	0xFDF
 20574                           postinc2	equ	0xFDE
 20575                           postdec2	equ	0xFDD
 20576                           plusw2	equ	0xFDB
 20577                           fsr2h	equ	0xFDA
 20578                           fsr2l	equ	0xFD9
 20579                           status	equ	0xFD8
 20580                           
 20581 ;; *************** function _MSDErrorHandler *****************
 20582 ;; Defined at:
 20583 ;;		line 1577 in file "usb_device_msd.c"
 20584 ;; Parameters:    Size  Location     Type
 20585 ;;  ErrorCase       1    wreg     unsigned char 
 20586 ;; Auto vars:     Size  Location     Type
 20587 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 20588 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 20589 ;; Return value:  Size  Location     Type
 20590 ;;                  1    wreg      void 
 20591 ;; Registers used:
 20592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20593 ;; Tracked objects:
 20594 ;;		On entry : 0/0
 20595 ;;		On exit  : 0/0
 20596 ;;		Unchanged: 0/0
 20597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20602 ;;Total ram usage:        2 bytes
 20603 ;; Hardware stack levels used:    1
 20604 ;; Hardware stack levels required when called:    1
 20605 ;; This function calls:
 20606 ;;		_ResetSenseData
 20607 ;;		_USBStallEndpoint
 20608 ;; This function is called by:
 20609 ;;		_MSDProcessCommandMediaAbsent
 20610 ;;		_MSDProcessCommandMediaPresent
 20611 ;;		_MSDCheckForErrorCases
 20612 ;; This function uses a non-reentrant model
 20613 ;;
 20614                           
 20615                           	psect	text92
 20616  004CD2                     __ptext92:
 20617                           	opt stack 0
 20618  004CD2                     _MSDErrorHandler:
 20619                           	opt stack 23
 20620                           
 20621                           ;incstack = 0
 20622                           ;MSDErrorHandler@ErrorCase stored from wreg
 20623  004CD2  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 20624                           
 20625                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 20626  004CD4  0100               	movlb	0	; () banked
 20627  004CD6  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 20628  004CD8  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20629  004CDA  B4D8               	btfsc	status,2,c
 20630  004CDC  D006               	goto	u6970
 20631                           
 20632                           ; BSR set to: 0
 20633  004CDE  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 20634  004CE2  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20635  004CE6  BEDF               	btfsc	indf2,7,c
 20636  004CE8  0012               	return	
 20637  004CEA                     u6970:
 20638                           
 20639                           ; BSR set to: 0
 20640                           
 20641                           ; BSR set to: 0
 20642  004CEA  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20643  004CEC  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20644  004CEE  B4D8               	btfsc	status,2,c
 20645  004CF0  D006               	goto	l741
 20646                           
 20647                           ; BSR set to: 0
 20648  004CF2  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20649  004CF6  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20650  004CFA  BEDF               	btfsc	indf2,7,c
 20651  004CFC  0012               	return	
 20652  004CFE                     l741:
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 20656  004CFE  C0E8  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 20657                           
 20658                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 20659  004D02  69E7               	setf	_MSDCommandState& (0+255),b
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 20663  004D04  0E00               	movlw	0
 20664  004D06  6FE6               	movwf	_MSDReadState& (0+255),b
 20665                           
 20666                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 20667  004D08  0E00               	movlw	0
 20668  004D0A  6FE5               	movwf	_MSDWriteState& (0+255),b
 20669                           
 20670                           ; BSR set to: 0
 20671                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 20672  004D0C  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 20673  004D10  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 20674  004D14  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 20675  004D18  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 20676                           
 20677                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 20678  004D1C  0E01               	movlw	1
 20679  004D1E  010D               	movlb	13	; () banked
 20680  004D20  6F8C               	movwf	140,b	;volatile
 20681                           
 20682                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 20683  004D22  0E03               	movlw	3
 20684  004D24  0100               	movlb	0	; () banked
 20685  004D26  6FE8               	movwf	_MSD_State& (0+255),b
 20686                           
 20687                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 20688  004D28  D043               	goto	l747
 20689  004D2A                     
 20690                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 20691                           
 20692                           ; BSR set to: 0
 20693  004D2A  0E02               	movlw	2
 20694  004D2C  010D               	movlb	13	; () banked
 20695  004D2E  6F8C               	movwf	140,b	;volatile
 20696                           
 20697                           ;usb_device_msd.c: 1607: break;
 20698  004D30  0012               	return	
 20699  004D32                     
 20700                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 20701                           
 20702                           ; BSR set to: 13
 20703  004D32  0E01               	movlw	1
 20704  004D34  6E01               	movwf	USBStallEndpoint@dir,c
 20705  004D36  0E02               	movlw	2
 20706  004D38  ECDF  F024         	call	_USBStallEndpoint
 20707                           
 20708                           ;usb_device_msd.c: 1611: break;
 20709  004D3C  0012               	return	
 20710  004D3E                     
 20711                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 20712  004D3E  0E02               	movlw	2
 20713  004D40  010D               	movlb	13	; () banked
 20714  004D42  6F8C               	movwf	140,b	;volatile
 20715                           
 20716                           ; BSR set to: 13
 20717                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 20718  004D44  0E01               	movlw	1
 20719  004D46  6E01               	movwf	USBStallEndpoint@dir,c
 20720  004D48  0E02               	movlw	2
 20721  004D4A  ECDF  F024         	call	_USBStallEndpoint
 20722                           
 20723                           ;usb_device_msd.c: 1616: break;
 20724  004D4E  0012               	return	
 20725  004D50                     
 20726                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 20727  004D50  0E00               	movlw	0
 20728  004D52  6E01               	movwf	USBStallEndpoint@dir,c
 20729  004D54  0E02               	movlw	2
 20730  004D56  ECDF  F024         	call	_USBStallEndpoint
 20731                           
 20732                           ;usb_device_msd.c: 1620: break;
 20733  004D5A  0012               	return	
 20734  004D5C                     
 20735                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 20736  004D5C  0E02               	movlw	2
 20737  004D5E  010D               	movlb	13	; () banked
 20738  004D60  6F8C               	movwf	140,b	;volatile
 20739                           
 20740                           ; BSR set to: 13
 20741                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 20742  004D62  0E00               	movlw	0
 20743  004D64  6E01               	movwf	USBStallEndpoint@dir,c
 20744  004D66  0E02               	movlw	2
 20745  004D68  ECDF  F024         	call	_USBStallEndpoint
 20746                           
 20747                           ;usb_device_msd.c: 1625: break;
 20748  004D6C  0012               	return	
 20749  004D6E                     
 20750                           ;usb_device_msd.c: 1628: ResetSenseData();
 20751  004D6E  EC85  F03B         	call	_ResetSenseData	;wreg free
 20752                           
 20753                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 20754  004D72  0101               	movlb	1	; () banked
 20755  004D74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20756  004D76  0BF0               	andlw	-16
 20757  004D78  0905               	iorlw	5
 20758  004D7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20759                           
 20760                           ; BSR set to: 1
 20761                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 20762  004D7C  0E20               	movlw	32
 20763  004D7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20764                           
 20765                           ; BSR set to: 1
 20766                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 20767  004D80  0E00               	movlw	0
 20768  004D82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20769                           
 20770                           ; BSR set to: 1
 20771                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 20772  004D84  0E02               	movlw	2
 20773  004D86  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 20774  004D88  A4D8               	btfss	status,2,c
 20775  004D8A  D00C               	goto	l755
 20776                           
 20777                           ; BSR set to: 1
 20778  004D8C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20779  004D8E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20780  004D90  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20781  004D92  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20782  004D94  B4D8               	btfsc	status,2,c
 20783  004D96  D006               	goto	l755
 20784                           
 20785                           ; BSR set to: 1
 20786                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 20787  004D98  0E00               	movlw	0
 20788  004D9A  6E01               	movwf	USBStallEndpoint@dir,c
 20789  004D9C  0E02               	movlw	2
 20790  004D9E  ECDF  F024         	call	_USBStallEndpoint
 20791                           
 20792                           ;usb_device_msd.c: 1636: }
 20793  004DA2  0012               	return	
 20794  004DA4                     l755:
 20795                           
 20796                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 20797  004DA4  0E01               	movlw	1
 20798  004DA6  6E01               	movwf	USBStallEndpoint@dir,c
 20799  004DA8  0E02               	movlw	2
 20800  004DAA  ECDF  F024         	call	_USBStallEndpoint
 20801                           
 20802                           ;usb_device_msd.c: 1644: }
 20803                           
 20804                           ;usb_device_msd.c: 1643: break;
 20805                           
 20806                           ;usb_device_msd.c: 1642: default:
 20807                           
 20808                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 20809  004DAE  0012               	return	
 20810  004DB0                     l747:
 20811  004DB0  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 20812                           
 20813                           ; Switch size 1, requested type "space"
 20814                           ; Number of cases is 6, Range of values is 1 to 127
 20815                           ; switch strategies available:
 20816                           ; Name         Instructions Cycles
 20817                           ; simple_byte           19    10 (average)
 20818                           ;	Chosen strategy is simple_byte
 20819  004DB2  0A01               	xorlw	1	; case 1
 20820  004DB4  B4D8               	btfsc	status,2,c
 20821  004DB6  D7B9               	goto	l748
 20822  004DB8  0A03               	xorlw	3	; case 2
 20823  004DBA  B4D8               	btfsc	status,2,c
 20824  004DBC  D7BA               	goto	l750
 20825  004DBE  0A01               	xorlw	1	; case 3
 20826  004DC0  B4D8               	btfsc	status,2,c
 20827  004DC2  D7BD               	goto	l751
 20828  004DC4  0A07               	xorlw	7	; case 4
 20829  004DC6  B4D8               	btfsc	status,2,c
 20830  004DC8  D7C3               	goto	l752
 20831  004DCA  0A01               	xorlw	1	; case 5
 20832  004DCC  B4D8               	btfsc	status,2,c
 20833  004DCE  D7C6               	goto	l753
 20834  004DD0  0A7A               	xorlw	122	; case 127
 20835  004DD2  A4D8               	btfss	status,2,c
 20836  004DD4  0012               	return	
 20837  004DD6  D7CB               	goto	l754
 20838  004DD8                     __end_of_MSDErrorHandler:
 20839                           	opt stack 0
 20840                           tosu	equ	0xFFF
 20841                           tosh	equ	0xFFE
 20842                           tosl	equ	0xFFD
 20843                           pclath	equ	0xFFA
 20844                           tblptru	equ	0xFF8
 20845                           tblptrh	equ	0xFF7
 20846                           tblptrl	equ	0xFF6
 20847                           tablat	equ	0xFF5
 20848                           prodh	equ	0xFF4
 20849                           prodl	equ	0xFF3
 20850                           intcon	equ	0xFF2
 20851                           intcon2	equ	0xFF1
 20852                           intcon3	equ	0xFF0
 20853                           indf0	equ	0xFEF
 20854                           postinc0	equ	0xFEE
 20855                           fsr0h	equ	0xFEA
 20856                           fsr0l	equ	0xFE9
 20857                           wreg	equ	0xFE8
 20858                           indf1	equ	0xFE7
 20859                           postdec1	equ	0xFE5
 20860                           plusw1	equ	0xFE3
 20861                           fsr1h	equ	0xFE2
 20862                           fsr1l	equ	0xFE1
 20863                           indf2	equ	0xFDF
 20864                           postinc2	equ	0xFDE
 20865                           postdec2	equ	0xFDD
 20866                           plusw2	equ	0xFDB
 20867                           fsr2h	equ	0xFDA
 20868                           fsr2l	equ	0xFD9
 20869                           status	equ	0xFD8
 20870                           
 20871 ;; *************** function _USBStallEndpoint *****************
 20872 ;; Defined at:
 20873 ;;		line 1073 in file "usb_device.c"
 20874 ;; Parameters:    Size  Location     Type
 20875 ;;  ep              1    wreg     unsigned char 
 20876 ;;  dir             1    0[COMRAM] unsigned char 
 20877 ;; Auto vars:     Size  Location     Type
 20878 ;;  ep              1    5[COMRAM] unsigned char 
 20879 ;;  p               2    6[COMRAM] PTR struct __BDT
 20880 ;;		 -> BDT(48), 
 20881 ;; Return value:  Size  Location     Type
 20882 ;;                  1    wreg      void 
 20883 ;; Registers used:
 20884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20885 ;; Tracked objects:
 20886 ;;		On entry : 0/0
 20887 ;;		On exit  : 0/0
 20888 ;;		Unchanged: 0/0
 20889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20894 ;;Total ram usage:        8 bytes
 20895 ;; Hardware stack levels used:    1
 20896 ;; This function calls:
 20897 ;;		Nothing
 20898 ;; This function is called by:
 20899 ;;		_MSDTasks
 20900 ;;		_MSDReadHandler
 20901 ;;		_MSDWriteHandler
 20902 ;;		_MSDErrorHandler
 20903 ;;		_MSDTransferTerminated
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           	psect	text93
 20908  0049BE                     __ptext93:
 20909                           	opt stack 0
 20910  0049BE                     _USBStallEndpoint:
 20911                           	opt stack 27
 20912                           
 20913                           ;incstack = 0
 20914                           ;USBStallEndpoint@ep stored from wreg
 20915  0049BE  6E06               	movwf	USBStallEndpoint@ep,c
 20916                           
 20917                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 20918  0049C0  5006               	movf	USBStallEndpoint@ep,w,c
 20919  0049C2  A4D8               	btfss	status,2,c
 20920  0049C4  D02C               	goto	l191
 20921                           
 20922                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 20923  0049C6  0100               	movlb	0	; () banked
 20924  0049C8  EE20 F001          	lfsr	2,1
 20925  0049CC  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 20926  0049CE  26D9               	addwf	fsr2l,f,c
 20927  0049D0  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 20928  0049D2  22DA               	addwfc	fsr2h,f,c
 20929  0049D4  0E08               	movlw	8
 20930  0049D6  6EDF               	movwf	indf2,c
 20931                           
 20932                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20933  0049D8  EE20 F002          	lfsr	2,2
 20934  0049DC  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 20935  0049DE  26D9               	addwf	fsr2l,f,c
 20936  0049E0  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 20937  0049E2  22DA               	addwfc	fsr2h,f,c
 20938  0049E4  0E30               	movlw	48
 20939  0049E6  6EDE               	movwf	postinc2,c
 20940  0049E8  0E0D               	movlw	13
 20941  0049EA  6EDD               	movwf	postdec2,c
 20942                           
 20943                           ; BSR set to: 0
 20944                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20945  0049EC  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20946  0049F0  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20947  0049F4  0E0C               	movlw	12
 20948  0049F6  6EDF               	movwf	indf2,c
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20952  0049F8  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20953  0049FC  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20954  004A00  0E00               	movlw	0
 20955  004A02  8EDB               	bsf	plusw2,7,c
 20956                           
 20957                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 20958  004A04  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 20959  004A08  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20960  004A0C  0E04               	movlw	4
 20961  004A0E  6EDF               	movwf	indf2,c
 20962                           
 20963                           ; BSR set to: 0
 20964                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20965  004A10  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 20966  004A14  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20967  004A18  0E00               	movlw	0
 20968  004A1A  8EDB               	bsf	plusw2,7,c
 20969                           
 20970                           ;usb_device.c: 1089: }
 20971  004A1C  0012               	return	
 20972  004A1E                     l191:
 20973                           
 20974                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 20975                           
 20976                           ; BSR set to: 0
 20977  004A1E  5001               	movf	USBStallEndpoint@dir,w,c
 20978  004A20  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 20979  004A22  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 20980  004A24  90D8               	bcf	status,0,c
 20981  004A26  3602               	rlcf	??_USBStallEndpoint,f,c
 20982  004A28  3603               	rlcf	??_USBStallEndpoint+1,f,c
 20983  004A2A  5006               	movf	USBStallEndpoint@ep,w,c
 20984  004A2C  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 20985  004A2E  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 20986  004A30  90D8               	bcf	status,0,c
 20987  004A32  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20988  004A34  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20989  004A36  90D8               	bcf	status,0,c
 20990  004A38  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20991  004A3A  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20992  004A3C  5002               	movf	??_USBStallEndpoint,w,c
 20993  004A3E  2604               	addwf	??_USBStallEndpoint+2,f,c
 20994  004A40  5003               	movf	??_USBStallEndpoint+1,w,c
 20995  004A42  2205               	addwfc	??_USBStallEndpoint+3,f,c
 20996  004A44  90D8               	bcf	status,0,c
 20997  004A46  3604               	rlcf	??_USBStallEndpoint+2,f,c
 20998  004A48  3605               	rlcf	??_USBStallEndpoint+3,f,c
 20999  004A4A  90D8               	bcf	status,0,c
 21000  004A4C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21001  004A4E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21002  004A50  0E00               	movlw	0
 21003  004A52  2404               	addwf	??_USBStallEndpoint+2,w,c
 21004  004A54  6E07               	movwf	USBStallEndpoint@p,c
 21005  004A56  0E0D               	movlw	13
 21006  004A58  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21007  004A5A  6E08               	movwf	USBStallEndpoint@p+1,c
 21008                           
 21009                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21010  004A5C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21011  004A60  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21012  004A64  0E00               	movlw	0
 21013  004A66  84DB               	bsf	plusw2,2,c
 21014                           
 21015                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21016  004A68  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21017  004A6C  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21018  004A70  0E00               	movlw	0
 21019  004A72  8EDB               	bsf	plusw2,7,c
 21020                           
 21021                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21022  004A74  5006               	movf	USBStallEndpoint@ep,w,c
 21023  004A76  0D04               	mullw	4
 21024  004A78  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21025  004A7C  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21026  004A80  5001               	movf	USBStallEndpoint@dir,w,c
 21027  004A82  0D02               	mullw	2
 21028  004A84  50F3               	movf	prodl,w,c
 21029  004A86  2602               	addwf	??_USBStallEndpoint,f,c
 21030  004A88  50F4               	movf	prodh,w,c
 21031  004A8A  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21032  004A8C  90D8               	bcf	status,0,c
 21033  004A8E  3602               	rlcf	??_USBStallEndpoint,f,c
 21034  004A90  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21035  004A92  90D8               	bcf	status,0,c
 21036  004A94  3602               	rlcf	??_USBStallEndpoint,f,c
 21037  004A96  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21038  004A98  0E04               	movlw	4
 21039  004A9A  2602               	addwf	??_USBStallEndpoint,f,c
 21040  004A9C  0E00               	movlw	0
 21041  004A9E  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21042  004AA0  0E00               	movlw	0
 21043  004AA2  2402               	addwf	??_USBStallEndpoint,w,c
 21044  004AA4  6E07               	movwf	USBStallEndpoint@p,c
 21045  004AA6  0E0D               	movlw	13
 21046  004AA8  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21047  004AAA  6E08               	movwf	USBStallEndpoint@p+1,c
 21048                           
 21049                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21050  004AAC  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21051  004AB0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21052  004AB4  0E00               	movlw	0
 21053  004AB6  84DB               	bsf	plusw2,2,c
 21054                           
 21055                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21056  004AB8  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21057  004ABC  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21058  004AC0  0E00               	movlw	0
 21059  004AC2  8EDB               	bsf	plusw2,7,c
 21060  004AC4  0012               	return	
 21061  004AC6                     __end_of_USBStallEndpoint:
 21062                           	opt stack 0
 21063                           tosu	equ	0xFFF
 21064                           tosh	equ	0xFFE
 21065                           tosl	equ	0xFFD
 21066                           pclath	equ	0xFFA
 21067                           tblptru	equ	0xFF8
 21068                           tblptrh	equ	0xFF7
 21069                           tblptrl	equ	0xFF6
 21070                           tablat	equ	0xFF5
 21071                           prodh	equ	0xFF4
 21072                           prodl	equ	0xFF3
 21073                           intcon	equ	0xFF2
 21074                           intcon2	equ	0xFF1
 21075                           intcon3	equ	0xFF0
 21076                           indf0	equ	0xFEF
 21077                           postinc0	equ	0xFEE
 21078                           fsr0h	equ	0xFEA
 21079                           fsr0l	equ	0xFE9
 21080                           wreg	equ	0xFE8
 21081                           indf1	equ	0xFE7
 21082                           postdec1	equ	0xFE5
 21083                           plusw1	equ	0xFE3
 21084                           fsr1h	equ	0xFE2
 21085                           fsr1l	equ	0xFE1
 21086                           indf2	equ	0xFDF
 21087                           postinc2	equ	0xFDE
 21088                           postdec2	equ	0xFDD
 21089                           plusw2	equ	0xFDB
 21090                           fsr2h	equ	0xFDA
 21091                           fsr2l	equ	0xFD9
 21092                           status	equ	0xFD8
 21093                           
 21094 ;; *************** function _ResetSenseData *****************
 21095 ;; Defined at:
 21096 ;;		line 1373 in file "usb_device_msd.c"
 21097 ;; Parameters:    Size  Location     Type
 21098 ;;		None
 21099 ;; Auto vars:     Size  Location     Type
 21100 ;;		None
 21101 ;; Return value:  Size  Location     Type
 21102 ;;                  1    wreg      void 
 21103 ;; Registers used:
 21104 ;;		wreg, status,2
 21105 ;; Tracked objects:
 21106 ;;		On entry : 0/0
 21107 ;;		On exit  : 0/0
 21108 ;;		Unchanged: 0/0
 21109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21114 ;;Total ram usage:        0 bytes
 21115 ;; Hardware stack levels used:    1
 21116 ;; This function calls:
 21117 ;;		Nothing
 21118 ;; This function is called by:
 21119 ;;		_USBMSDInit
 21120 ;;		_MSDProcessCommandMediaAbsent
 21121 ;;		_MSDProcessCommandMediaPresent
 21122 ;;		_MSDErrorHandler
 21123 ;; This function uses a non-reentrant model
 21124 ;;
 21125                           
 21126                           	psect	text94
 21127  00770A                     __ptext94:
 21128                           	opt stack 0
 21129  00770A                     _ResetSenseData:
 21130                           	opt stack 26
 21131                           
 21132                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21133                           
 21134                           ;incstack = 0
 21135  00770A  0101               	movlb	1	; () banked
 21136  00770C  911F               	bcf	_gblSenseData& (0+255),0,b
 21137  00770E  931F               	bcf	_gblSenseData& (0+255),1,b
 21138  007710  951F               	bcf	_gblSenseData& (0+255),2,b
 21139  007712  971F               	bcf	_gblSenseData& (0+255),3,b
 21140  007714  891F               	bsf	_gblSenseData& (0+255),4,b
 21141  007716  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21142  007718  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21143                           
 21144                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21145  00771A  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21146                           
 21147                           ; BSR set to: 1
 21148                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21149  00771C  0E00               	movlw	0
 21150  00771E  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21151                           
 21152                           ; BSR set to: 1
 21153                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21154  007720  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21155  007722  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21156  007724  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21157  007726  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21158                           
 21159                           ; BSR set to: 1
 21160                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21161  007728  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21162                           
 21163                           ; BSR set to: 1
 21164                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21165  00772A  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21166                           
 21167                           ; BSR set to: 1
 21168                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21169  00772C  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21170                           
 21171                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21172  00772E  0E00               	movlw	0
 21173  007730  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21174                           
 21175                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21176  007732  0E00               	movlw	0
 21177  007734  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21178                           
 21179                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21180  007736  0E00               	movlw	0
 21181  007738  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21182                           
 21183                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21184  00773A  0E00               	movlw	0
 21185  00773C  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21186                           
 21187                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21188  00773E  0E0A               	movlw	10
 21189  007740  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21190                           
 21191                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21192  007742  0E00               	movlw	0
 21193  007744  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21194  007746  0E00               	movlw	0
 21195  007748  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21196  00774A  0E00               	movlw	0
 21197  00774C  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21198  00774E  0E00               	movlw	0
 21199  007750  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21200                           
 21201                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21202  007752  0E00               	movlw	0
 21203  007754  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21204                           
 21205                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21206  007756  0E00               	movlw	0
 21207  007758  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21208                           
 21209                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21210  00775A  0E00               	movlw	0
 21211  00775C  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21212                           
 21213                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21214  00775E  0E00               	movlw	0
 21215  007760  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21216                           
 21217                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21218  007762  0E00               	movlw	0
 21219  007764  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21220                           
 21221                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21222  007766  0E00               	movlw	0
 21223  007768  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21224                           
 21225                           ; BSR set to: 1
 21226  00776A  0012               	return		;funcret
 21227  00776C                     __end_of_ResetSenseData:
 21228                           	opt stack 0
 21229                           tosu	equ	0xFFF
 21230                           tosh	equ	0xFFE
 21231                           tosl	equ	0xFFD
 21232                           pclath	equ	0xFFA
 21233                           tblptru	equ	0xFF8
 21234                           tblptrh	equ	0xFF7
 21235                           tblptrl	equ	0xFF6
 21236                           tablat	equ	0xFF5
 21237                           prodh	equ	0xFF4
 21238                           prodl	equ	0xFF3
 21239                           intcon	equ	0xFF2
 21240                           intcon2	equ	0xFF1
 21241                           intcon3	equ	0xFF0
 21242                           indf0	equ	0xFEF
 21243                           postinc0	equ	0xFEE
 21244                           fsr0h	equ	0xFEA
 21245                           fsr0l	equ	0xFE9
 21246                           wreg	equ	0xFE8
 21247                           indf1	equ	0xFE7
 21248                           postdec1	equ	0xFE5
 21249                           plusw1	equ	0xFE3
 21250                           fsr1h	equ	0xFE2
 21251                           fsr1l	equ	0xFE1
 21252                           indf2	equ	0xFDF
 21253                           postinc2	equ	0xFDE
 21254                           postdec2	equ	0xFDD
 21255                           plusw2	equ	0xFDB
 21256                           fsr2h	equ	0xFDA
 21257                           fsr2l	equ	0xFD9
 21258                           status	equ	0xFD8
 21259                           
 21260 ;; *************** function _ExternalFlash_SectorRead *****************
 21261 ;; Defined at:
 21262 ;;		line 40 in file "external_flash.c"
 21263 ;; Parameters:    Size  Location     Type
 21264 ;;  config          2   43[COMRAM] PTR void 
 21265 ;;		 -> NULL(0), 
 21266 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21267 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21268 ;;		 -> msd_buffer(512), 
 21269 ;; Auto vars:     Size  Location     Type
 21270 ;;  page            2   51[COMRAM] unsigned int 
 21271 ;; Return value:  Size  Location     Type
 21272 ;;                  1    wreg      unsigned char 
 21273 ;; Registers used:
 21274 ;;		wreg, status,2, status,0, cstack
 21275 ;; Tracked objects:
 21276 ;;		On entry : 0/0
 21277 ;;		On exit  : 0/0
 21278 ;;		Unchanged: 0/0
 21279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21280 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21283 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21284 ;;Total ram usage:       10 bytes
 21285 ;; Hardware stack levels used:    1
 21286 ;; Hardware stack levels required when called:    5
 21287 ;; This function calls:
 21288 ;;		_flash_page_read
 21289 ;; This function is called by:
 21290 ;;		_MSDReadHandler
 21291 ;; This function uses a non-reentrant model
 21292 ;;
 21293                           
 21294                           	psect	text95
 21295  008362                     __ptext95:
 21296                           	opt stack 0
 21297  008362                     _ExternalFlash_SectorRead:
 21298                           	opt stack 20
 21299                           
 21300                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;incstack = 0
 21304  008362  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21305  008366  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21306                           
 21307                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21308  00836A  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21309  00836C  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21310  00836E  E104               	bnz	u7600
 21311  008370  0E20               	movlw	32
 21312  008372  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21313  008374  A0D8               	btfss	status,0,c
 21314  008376  D002               	goto	l1876
 21315  008378                     u7600:
 21316                           
 21317                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21318  008378  0E00               	movlw	0
 21319  00837A  0012               	return	
 21320  00837C                     l1876:
 21321                           
 21322                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 21323  00837C  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 21324  008380  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 21325  008384  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 21326  008388  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 21327  00838C  ECCA  F041         	call	_flash_page_read	;wreg free
 21328                           
 21329                           ;external_flash.c: 53: return 1;
 21330  008390  0E01               	movlw	1
 21331  008392  0012               	return	
 21332  008394                     __end_of_ExternalFlash_SectorRead:
 21333                           	opt stack 0
 21334                           tosu	equ	0xFFF
 21335                           tosh	equ	0xFFE
 21336                           tosl	equ	0xFFD
 21337                           pclath	equ	0xFFA
 21338                           tblptru	equ	0xFF8
 21339                           tblptrh	equ	0xFF7
 21340                           tblptrl	equ	0xFF6
 21341                           tablat	equ	0xFF5
 21342                           prodh	equ	0xFF4
 21343                           prodl	equ	0xFF3
 21344                           intcon	equ	0xFF2
 21345                           intcon2	equ	0xFF1
 21346                           intcon3	equ	0xFF0
 21347                           indf0	equ	0xFEF
 21348                           postinc0	equ	0xFEE
 21349                           fsr0h	equ	0xFEA
 21350                           fsr0l	equ	0xFE9
 21351                           wreg	equ	0xFE8
 21352                           indf1	equ	0xFE7
 21353                           postdec1	equ	0xFE5
 21354                           plusw1	equ	0xFE3
 21355                           fsr1h	equ	0xFE2
 21356                           fsr1l	equ	0xFE1
 21357                           indf2	equ	0xFDF
 21358                           postinc2	equ	0xFDE
 21359                           postdec2	equ	0xFDD
 21360                           plusw2	equ	0xFDB
 21361                           fsr2h	equ	0xFDA
 21362                           fsr2l	equ	0xFD9
 21363                           status	equ	0xFD8
 21364                           
 21365 ;; *************** function _flash_page_read *****************
 21366 ;; Defined at:
 21367 ;;		line 419 in file "flash.c"
 21368 ;; Parameters:    Size  Location     Type
 21369 ;;  page            2   39[COMRAM] unsigned int 
 21370 ;;  data            2   41[COMRAM] PTR unsigned char 
 21371 ;;		 -> buffer(512), msd_buffer(512), 
 21372 ;; Auto vars:     Size  Location     Type
 21373 ;;		None
 21374 ;; Return value:  Size  Location     Type
 21375 ;;                  1    wreg      void 
 21376 ;; Registers used:
 21377 ;;		wreg, status,2, status,0, cstack
 21378 ;; Tracked objects:
 21379 ;;		On entry : 0/0
 21380 ;;		On exit  : 0/0
 21381 ;;		Unchanged: 0/0
 21382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21386 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21387 ;;Total ram usage:        4 bytes
 21388 ;; Hardware stack levels used:    1
 21389 ;; Hardware stack levels required when called:    4
 21390 ;; This function calls:
 21391 ;;		__flash_partial_read
 21392 ;;		_spi_set_configuration
 21393 ;; This function is called by:
 21394 ;;		_ExternalFlash_SectorRead
 21395 ;;		_fat_get_format_status
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399                           	psect	text96
 21400  008394                     __ptext96:
 21401                           	opt stack 0
 21402  008394                     _flash_page_read:
 21403                           	opt stack 23
 21404                           
 21405                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 21406                           
 21407                           ;incstack = 0
 21408  008394  0E00               	movlw	0
 21409  008396  EC5A  F024         	call	_spi_set_configuration
 21410                           
 21411                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 21412  00839A  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 21413  00839E  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 21414  0083A2  0E00               	movlw	0
 21415  0083A4  6E17               	movwf	__flash_partial_read@start+1,c
 21416  0083A6  0E00               	movlw	0
 21417  0083A8  6E16               	movwf	__flash_partial_read@start,c
 21418  0083AA  0E02               	movlw	2
 21419  0083AC  6E19               	movwf	__flash_partial_read@length+1,c
 21420  0083AE  0E00               	movlw	0
 21421  0083B0  6E18               	movwf	__flash_partial_read@length,c
 21422  0083B2  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 21423  0083B6  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 21424  0083BA  EC58  F038         	call	__flash_partial_read	;wreg free
 21425                           
 21426                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 21427  0083BE  0E01               	movlw	1
 21428  0083C0  EC5A  F024         	call	_spi_set_configuration
 21429  0083C4  0012               	return		;funcret
 21430  0083C6                     __end_of_flash_page_read:
 21431                           	opt stack 0
 21432                           tosu	equ	0xFFF
 21433                           tosh	equ	0xFFE
 21434                           tosl	equ	0xFFD
 21435                           pclath	equ	0xFFA
 21436                           tblptru	equ	0xFF8
 21437                           tblptrh	equ	0xFF7
 21438                           tblptrl	equ	0xFF6
 21439                           tablat	equ	0xFF5
 21440                           prodh	equ	0xFF4
 21441                           prodl	equ	0xFF3
 21442                           intcon	equ	0xFF2
 21443                           intcon2	equ	0xFF1
 21444                           intcon3	equ	0xFF0
 21445                           indf0	equ	0xFEF
 21446                           postinc0	equ	0xFEE
 21447                           fsr0h	equ	0xFEA
 21448                           fsr0l	equ	0xFE9
 21449                           wreg	equ	0xFE8
 21450                           indf1	equ	0xFE7
 21451                           postdec1	equ	0xFE5
 21452                           plusw1	equ	0xFE3
 21453                           fsr1h	equ	0xFE2
 21454                           fsr1l	equ	0xFE1
 21455                           indf2	equ	0xFDF
 21456                           postinc2	equ	0xFDE
 21457                           postdec2	equ	0xFDD
 21458                           plusw2	equ	0xFDB
 21459                           fsr2h	equ	0xFDA
 21460                           fsr2l	equ	0xFD9
 21461                           status	equ	0xFD8
 21462                           
 21463 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21464 ;; Defined at:
 21465 ;;		line 993 in file "usb_device_msd.c"
 21466 ;; Parameters:    Size  Location     Type
 21467 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21468 ;; Auto vars:     Size  Location     Type
 21469 ;;		None
 21470 ;; Return value:  Size  Location     Type
 21471 ;;                  1    wreg      void 
 21472 ;; Registers used:
 21473 ;;		wreg, status,2, status,0
 21474 ;; Tracked objects:
 21475 ;;		On entry : 0/0
 21476 ;;		On exit  : 0/0
 21477 ;;		Unchanged: 0/0
 21478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21481 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21482 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21483 ;;Total ram usage:        6 bytes
 21484 ;; Hardware stack levels used:    1
 21485 ;; This function calls:
 21486 ;;		Nothing
 21487 ;; This function is called by:
 21488 ;;		_MSDProcessCommandMediaPresent
 21489 ;; This function uses a non-reentrant model
 21490 ;;
 21491                           
 21492                           	psect	text97
 21493  006778                     __ptext97:
 21494                           	opt stack 0
 21495  006778                     _MSDComputeDeviceInAndResidue:
 21496                           	opt stack 26
 21497                           
 21498                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21499                           
 21500                           ;incstack = 0
 21501  006778  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21502  00677A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21503  00677C  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21504  00677E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21505  006780  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21506  006782  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21507  006784  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21508  006786  0101               	movlb	1	; () banked
 21509  006788  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21510  00678A  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21511  00678C  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21512  00678E  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21513  006790  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21514  006792  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21515  006794  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21516  006796  B0D8               	btfsc	status,0,c
 21517  006798  D00E               	goto	l659
 21518                           
 21519                           ; BSR set to: 1
 21520                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21521  00679A  0E00               	movlw	0
 21522  00679C  010D               	movlb	13	; () banked
 21523  00679E  6F88               	movwf	136,b	;volatile
 21524  0067A0  0E00               	movlw	0
 21525  0067A2  6F89               	movwf	137,b	;volatile
 21526  0067A4  0E00               	movlw	0
 21527  0067A6  6F8A               	movwf	138,b	;volatile
 21528  0067A8  0E00               	movlw	0
 21529  0067AA  6F8B               	movwf	139,b	;volatile
 21530                           
 21531                           ; BSR set to: 13
 21532                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21533  0067AC  C108  F0D3         	movff	_gblCBW+8,_TransferLength
 21534  0067B0  C109  F0D4         	movff	_gblCBW+9,_TransferLength+1
 21535                           
 21536                           ;usb_device_msd.c: 1002: }
 21537  0067B4  0012               	return	
 21538  0067B6                     l659:
 21539                           
 21540                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21541                           
 21542                           ; BSR set to: 13
 21543  0067B6  0100               	movlb	0	; () banked
 21544  0067B8  51D3               	movf	_TransferLength& (0+255),w,b
 21545  0067BA  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21546  0067BC  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 21547  0067BE  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21548  0067C0  B0D8               	btfsc	status,0,c
 21549  0067C2  D004               	goto	l661
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21553  0067C4  C001  F0D3         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 21554  0067C8  C002  F0D4         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 21555  0067CC                     l661:
 21556                           
 21557                           ; BSR set to: 0
 21558                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 21559                           
 21560                           ; BSR set to: 0
 21561  0067CC  51D3               	movf	_TransferLength& (0+255),w,b
 21562  0067CE  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21563  0067D0  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 21564  0067D2  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21565  0067D4  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21566  0067D6  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21567  0067D8  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 21568  0067DA  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 21569  0067DC  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 21570  0067DE  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 21571  0067E0  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 21572  0067E2  0E00               	movlw	0
 21573  0067E4  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 21574  0067E6  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 21575  0067E8  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 21576  0067EA  0101               	movlb	1	; () banked
 21577  0067EC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21578  0067EE  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 21579  0067F0  010D               	movlb	13	; () banked
 21580  0067F2  6F88               	movwf	136,b	;volatile
 21581  0067F4  0101               	movlb	1	; () banked
 21582  0067F6  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21583  0067F8  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 21584  0067FA  010D               	movlb	13	; () banked
 21585  0067FC  6F89               	movwf	137,b	;volatile
 21586  0067FE  0101               	movlb	1	; () banked
 21587  006800  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21588  006802  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 21589  006804  010D               	movlb	13	; () banked
 21590  006806  6F8A               	movwf	138,b	;volatile
 21591  006808  0101               	movlb	1	; () banked
 21592  00680A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21593  00680C  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 21594  00680E  010D               	movlb	13	; () banked
 21595  006810  6F8B               	movwf	139,b	;volatile
 21596  006812  0012               	return	
 21597  006814                     __end_of_MSDComputeDeviceInAndResidue:
 21598                           	opt stack 0
 21599                           tosu	equ	0xFFF
 21600                           tosh	equ	0xFFE
 21601                           tosl	equ	0xFFD
 21602                           pclath	equ	0xFFA
 21603                           tblptru	equ	0xFF8
 21604                           tblptrh	equ	0xFF7
 21605                           tblptrl	equ	0xFF6
 21606                           tablat	equ	0xFF5
 21607                           prodh	equ	0xFF4
 21608                           prodl	equ	0xFF3
 21609                           intcon	equ	0xFF2
 21610                           intcon2	equ	0xFF1
 21611                           intcon3	equ	0xFF0
 21612                           indf0	equ	0xFEF
 21613                           postinc0	equ	0xFEE
 21614                           fsr0h	equ	0xFEA
 21615                           fsr0l	equ	0xFE9
 21616                           wreg	equ	0xFE8
 21617                           indf1	equ	0xFE7
 21618                           postdec1	equ	0xFE5
 21619                           plusw1	equ	0xFE3
 21620                           fsr1h	equ	0xFE2
 21621                           fsr1l	equ	0xFE1
 21622                           indf2	equ	0xFDF
 21623                           postinc2	equ	0xFDE
 21624                           postdec2	equ	0xFDD
 21625                           plusw2	equ	0xFDB
 21626                           fsr2h	equ	0xFDA
 21627                           fsr2l	equ	0xFD9
 21628                           status	equ	0xFD8
 21629                           
 21630 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 21631 ;; Defined at:
 21632 ;;		line 18 in file "external_flash.c"
 21633 ;; Parameters:    Size  Location     Type
 21634 ;;  config          2    0[COMRAM] PTR void 
 21635 ;;		 -> NULL(0), 
 21636 ;; Auto vars:     Size  Location     Type
 21637 ;;		None
 21638 ;; Return value:  Size  Location     Type
 21639 ;;                  2    0[COMRAM] unsigned int 
 21640 ;; Registers used:
 21641 ;;		wreg, status,2
 21642 ;; Tracked objects:
 21643 ;;		On entry : 0/0
 21644 ;;		On exit  : 0/0
 21645 ;;		Unchanged: 0/0
 21646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21651 ;;Total ram usage:        2 bytes
 21652 ;; Hardware stack levels used:    1
 21653 ;; This function calls:
 21654 ;;		Nothing
 21655 ;; This function is called by:
 21656 ;;		_MSDProcessCommandMediaPresent
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text98
 21661  00893A                     __ptext98:
 21662                           	opt stack 0
 21663  00893A                     _ExternalFlash_SectorSizeRead:
 21664                           	opt stack 26
 21665                           
 21666                           ;external_flash.c: 20: return 512;
 21667                           
 21668                           ; BSR set to: 13
 21669                           ;incstack = 0
 21670  00893A  0E02               	movlw	2
 21671  00893C  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 21672  00893E  0E00               	movlw	0
 21673  008940  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 21674  008942  0012               	return	
 21675  008944                     __end_of_ExternalFlash_SectorSizeRead:
 21676                           	opt stack 0
 21677                           tosu	equ	0xFFF
 21678                           tosh	equ	0xFFE
 21679                           tosl	equ	0xFFD
 21680                           pclath	equ	0xFFA
 21681                           tblptru	equ	0xFF8
 21682                           tblptrh	equ	0xFF7
 21683                           tblptrl	equ	0xFF6
 21684                           tablat	equ	0xFF5
 21685                           prodh	equ	0xFF4
 21686                           prodl	equ	0xFF3
 21687                           intcon	equ	0xFF2
 21688                           intcon2	equ	0xFF1
 21689                           intcon3	equ	0xFF0
 21690                           indf0	equ	0xFEF
 21691                           postinc0	equ	0xFEE
 21692                           fsr0h	equ	0xFEA
 21693                           fsr0l	equ	0xFE9
 21694                           wreg	equ	0xFE8
 21695                           indf1	equ	0xFE7
 21696                           postdec1	equ	0xFE5
 21697                           plusw1	equ	0xFE3
 21698                           fsr1h	equ	0xFE2
 21699                           fsr1l	equ	0xFE1
 21700                           indf2	equ	0xFDF
 21701                           postinc2	equ	0xFDE
 21702                           postdec2	equ	0xFDD
 21703                           plusw2	equ	0xFDB
 21704                           fsr2h	equ	0xFDA
 21705                           fsr2l	equ	0xFD9
 21706                           status	equ	0xFD8
 21707                           
 21708 ;; *************** function _ExternalFlash_CapacityRead *****************
 21709 ;; Defined at:
 21710 ;;		line 23 in file "external_flash.c"
 21711 ;; Parameters:    Size  Location     Type
 21712 ;;  config          2    0[COMRAM] PTR void 
 21713 ;;		 -> NULL(0), 
 21714 ;; Auto vars:     Size  Location     Type
 21715 ;;		None
 21716 ;; Return value:  Size  Location     Type
 21717 ;;                  4    0[COMRAM] unsigned long 
 21718 ;; Registers used:
 21719 ;;		wreg, status,2
 21720 ;; Tracked objects:
 21721 ;;		On entry : 0/0
 21722 ;;		On exit  : 0/0
 21723 ;;		Unchanged: 0/0
 21724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21729 ;;Total ram usage:        4 bytes
 21730 ;; Hardware stack levels used:    1
 21731 ;; This function calls:
 21732 ;;		Nothing
 21733 ;; This function is called by:
 21734 ;;		_MSDProcessCommandMediaPresent
 21735 ;; This function uses a non-reentrant model
 21736 ;;
 21737                           
 21738                           	psect	text99
 21739  008872                     __ptext99:
 21740                           	opt stack 0
 21741  008872                     _ExternalFlash_CapacityRead:
 21742                           	opt stack 26
 21743                           
 21744                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 21745                           
 21746                           ;incstack = 0
 21747  008872  0EFF               	movlw	255
 21748  008874  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 21749  008876  0E1F               	movlw	31
 21750  008878  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 21751  00887A  0E00               	movlw	0
 21752  00887C  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 21753  00887E  0E00               	movlw	0
 21754  008880  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 21755  008882  0012               	return	
 21756  008884                     __end_of_ExternalFlash_CapacityRead:
 21757                           	opt stack 0
 21758                           tosu	equ	0xFFF
 21759                           tosh	equ	0xFFE
 21760                           tosl	equ	0xFFD
 21761                           pclath	equ	0xFFA
 21762                           tblptru	equ	0xFF8
 21763                           tblptrh	equ	0xFF7
 21764                           tblptrl	equ	0xFF6
 21765                           tablat	equ	0xFF5
 21766                           prodh	equ	0xFF4
 21767                           prodl	equ	0xFF3
 21768                           intcon	equ	0xFF2
 21769                           intcon2	equ	0xFF1
 21770                           intcon3	equ	0xFF0
 21771                           indf0	equ	0xFEF
 21772                           postinc0	equ	0xFEE
 21773                           fsr0h	equ	0xFEA
 21774                           fsr0l	equ	0xFE9
 21775                           wreg	equ	0xFE8
 21776                           indf1	equ	0xFE7
 21777                           postdec1	equ	0xFE5
 21778                           plusw1	equ	0xFE3
 21779                           fsr1h	equ	0xFE2
 21780                           fsr1l	equ	0xFE1
 21781                           indf2	equ	0xFDF
 21782                           postinc2	equ	0xFDE
 21783                           postdec2	equ	0xFDD
 21784                           plusw2	equ	0xFDB
 21785                           fsr2h	equ	0xFDA
 21786                           fsr2l	equ	0xFD9
 21787                           status	equ	0xFD8
 21788                           
 21789 ;; *************** function _ExternalFlash_MediaInitialize *****************
 21790 ;; Defined at:
 21791 ;;		line 10 in file "external_flash.c"
 21792 ;; Parameters:    Size  Location     Type
 21793 ;;  config          2    0[COMRAM] PTR void 
 21794 ;;		 -> NULL(0), 
 21795 ;; Auto vars:     Size  Location     Type
 21796 ;;		None
 21797 ;; Return value:  Size  Location     Type
 21798 ;;                  2    0[COMRAM] PTR struct .
 21799 ;; Registers used:
 21800 ;;		wreg, status,2, status,0
 21801 ;; Tracked objects:
 21802 ;;		On entry : 0/0
 21803 ;;		On exit  : 0/0
 21804 ;;		Unchanged: 0/0
 21805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21810 ;;Total ram usage:        2 bytes
 21811 ;; Hardware stack levels used:    1
 21812 ;; This function calls:
 21813 ;;		Nothing
 21814 ;; This function is called by:
 21815 ;;		_USBMSDInit
 21816 ;;		_MSDProcessCommand
 21817 ;; This function uses a non-reentrant model
 21818 ;;
 21819                           
 21820                           	psect	text100
 21821  0087BC                     __ptext100:
 21822                           	opt stack 0
 21823  0087BC                     _ExternalFlash_MediaInitialize:
 21824                           	opt stack 26
 21825                           
 21826                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 21827                           
 21828                           ;incstack = 0
 21829  0087BC  0101               	movlb	1	; () banked
 21830  0087BE  81D3               	bsf	(_mediaInformation+1)& (0+255),0,b
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 21834  0087C0  0E02               	movlw	2
 21835  0087C2  6FD5               	movwf	(_mediaInformation+3)& (0+255),b
 21836  0087C4  0E00               	movlw	0
 21837  0087C6  6FD4               	movwf	(_mediaInformation+2)& (0+255),b
 21838                           
 21839                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 21840  0087C8  0E00               	movlw	0
 21841  0087CA  6FD2               	movwf	_mediaInformation& (0+255),b
 21842                           
 21843                           ; BSR set to: 1
 21844                           ;external_flash.c: 15: return &mediaInformation;
 21845  0087CC  0ED2               	movlw	low _mediaInformation
 21846  0087CE  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 21847  0087D0  0E01               	movlw	high _mediaInformation
 21848  0087D2  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 21849  0087D4  0012               	return	
 21850  0087D6                     __end_of_ExternalFlash_MediaInitialize:
 21851                           	opt stack 0
 21852                           tosu	equ	0xFFF
 21853                           tosh	equ	0xFFE
 21854                           tosl	equ	0xFFD
 21855                           pclath	equ	0xFFA
 21856                           tblptru	equ	0xFF8
 21857                           tblptrh	equ	0xFF7
 21858                           tblptrl	equ	0xFF6
 21859                           tablat	equ	0xFF5
 21860                           prodh	equ	0xFF4
 21861                           prodl	equ	0xFF3
 21862                           intcon	equ	0xFF2
 21863                           intcon2	equ	0xFF1
 21864                           intcon3	equ	0xFF0
 21865                           indf0	equ	0xFEF
 21866                           postinc0	equ	0xFEE
 21867                           fsr0h	equ	0xFEA
 21868                           fsr0l	equ	0xFE9
 21869                           wreg	equ	0xFE8
 21870                           indf1	equ	0xFE7
 21871                           postdec1	equ	0xFE5
 21872                           plusw1	equ	0xFE3
 21873                           fsr1h	equ	0xFE2
 21874                           fsr1l	equ	0xFE1
 21875                           indf2	equ	0xFDF
 21876                           postinc2	equ	0xFDE
 21877                           postdec2	equ	0xFDD
 21878                           plusw2	equ	0xFDB
 21879                           fsr2h	equ	0xFDA
 21880                           fsr2l	equ	0xFD9
 21881                           status	equ	0xFD8
 21882                           
 21883 ;; *************** function _ExternalFlash_MediaDetect *****************
 21884 ;; Defined at:
 21885 ;;		line 29 in file "external_flash.c"
 21886 ;; Parameters:    Size  Location     Type
 21887 ;;  config          2    0[COMRAM] PTR void 
 21888 ;;		 -> NULL(0), 
 21889 ;; Auto vars:     Size  Location     Type
 21890 ;;		None
 21891 ;; Return value:  Size  Location     Type
 21892 ;;                  1    wreg      unsigned char 
 21893 ;; Registers used:
 21894 ;;		wreg
 21895 ;; Tracked objects:
 21896 ;;		On entry : 0/0
 21897 ;;		On exit  : 0/0
 21898 ;;		Unchanged: 0/0
 21899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21904 ;;Total ram usage:        2 bytes
 21905 ;; Hardware stack levels used:    1
 21906 ;; This function calls:
 21907 ;;		Nothing
 21908 ;; This function is called by:
 21909 ;;		_USBMSDInit
 21910 ;;		_MSDProcessCommand
 21911 ;; This function uses a non-reentrant model
 21912 ;;
 21913                           
 21914                           	psect	text101
 21915  0089CA                     __ptext101:
 21916                           	opt stack 0
 21917  0089CA                     _ExternalFlash_MediaDetect:
 21918                           	opt stack 26
 21919                           
 21920                           ;external_flash.c: 31: return 1;
 21921                           
 21922                           ; BSR set to: 1
 21923                           ;incstack = 0
 21924  0089CA  0E01               	movlw	1
 21925  0089CC  0012               	return	
 21926  0089CE                     __end_of_ExternalFlash_MediaDetect:
 21927                           	opt stack 0
 21928                           tosu	equ	0xFFF
 21929                           tosh	equ	0xFFE
 21930                           tosl	equ	0xFFD
 21931                           pclath	equ	0xFFA
 21932                           tblptru	equ	0xFF8
 21933                           tblptrh	equ	0xFF7
 21934                           tblptrl	equ	0xFF6
 21935                           tablat	equ	0xFF5
 21936                           prodh	equ	0xFF4
 21937                           prodl	equ	0xFF3
 21938                           intcon	equ	0xFF2
 21939                           intcon2	equ	0xFF1
 21940                           intcon3	equ	0xFF0
 21941                           indf0	equ	0xFEF
 21942                           postinc0	equ	0xFEE
 21943                           fsr0h	equ	0xFEA
 21944                           fsr0l	equ	0xFE9
 21945                           wreg	equ	0xFE8
 21946                           indf1	equ	0xFE7
 21947                           postdec1	equ	0xFE5
 21948                           plusw1	equ	0xFE3
 21949                           fsr1h	equ	0xFE2
 21950                           fsr1l	equ	0xFE1
 21951                           indf2	equ	0xFDF
 21952                           postinc2	equ	0xFDE
 21953                           postdec2	equ	0xFDD
 21954                           plusw2	equ	0xFDB
 21955                           fsr2h	equ	0xFDA
 21956                           fsr2l	equ	0xFD9
 21957                           status	equ	0xFD8
 21958                           
 21959 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 21960 ;; Defined at:
 21961 ;;		line 74 in file "app_device_custom_hid.c"
 21962 ;; Parameters:    Size  Location     Type
 21963 ;;		None
 21964 ;; Auto vars:     Size  Location     Type
 21965 ;;  idx             1    0        unsigned char 
 21966 ;; Return value:  Size  Location     Type
 21967 ;;                  1    wreg      void 
 21968 ;; Registers used:
 21969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21970 ;; Tracked objects:
 21971 ;;		On entry : 0/0
 21972 ;;		On exit  : 0/0
 21973 ;;		Unchanged: 0/0
 21974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21978 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21979 ;;Total ram usage:        4 bytes
 21980 ;; Hardware stack levels used:    1
 21981 ;; Hardware stack levels required when called:   11
 21982 ;; This function calls:
 21983 ;;		_USBTransferOnePacket
 21984 ;;		_api_parse
 21985 ;;		_api_prepare
 21986 ;; This function is called by:
 21987 ;;		_main
 21988 ;; This function uses a non-reentrant model
 21989 ;;
 21990                           
 21991                           	psect	text102
 21992  006266                     __ptext102:
 21993                           	opt stack 0
 21994  006266                     _APP_DeviceCustomHIDTasks:
 21995                           	opt stack 19
 21996                           
 21997                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 21998                           
 21999                           ;incstack = 0
 22000  006266  0E20               	movlw	32
 22001  006268  0100               	movlb	0	; () banked
 22002  00626A  61F6               	cpfslt	_USBDeviceState& (0+255),b
 22003  00626C  D001               	goto	l966
 22004  00626E  0012               	return	
 22005  006270                     l966:
 22006                           
 22007                           ; BSR set to: 0
 22008                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22009  006270  B265               	btfsc	3941,1,c	;volatile
 22010  006272  0012               	return	
 22011                           
 22012                           ; BSR set to: 0
 22013                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22014                           
 22015                           ; BSR set to: 0
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22019  006274  0101               	movlb	1	; () banked
 22020  006276  517C               	movf	_USBOutHandle& (0+255),w,b
 22021  006278  117D               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22022  00627A  B4D8               	btfsc	status,2,c
 22023  00627C  D006               	goto	u12270
 22024                           
 22025                           ; BSR set to: 1
 22026  00627E  C17C  FFD9         	movff	_USBOutHandle,fsr2l
 22027  006282  C17D  FFDA         	movff	_USBOutHandle+1,fsr2h
 22028  006286  BEDF               	btfsc	indf2,7,c
 22029  006288  0012               	return	
 22030  00628A                     u12270:
 22031                           
 22032                           ; BSR set to: 1
 22033                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22034                           
 22035                           ; BSR set to: 1
 22036  00628A  517A               	movf	_USBInHandle& (0+255),w,b
 22037  00628C  117B               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22038  00628E  B4D8               	btfsc	status,2,c
 22039  006290  D006               	goto	u12290
 22040                           
 22041                           ; BSR set to: 1
 22042  006292  C17A  FFD9         	movff	_USBInHandle,fsr2l
 22043  006296  C17B  FFDA         	movff	_USBInHandle+1,fsr2h
 22044  00629A  BEDF               	btfsc	indf2,7,c
 22045  00629C  D020               	goto	l972
 22046  00629E                     u12290:
 22047                           
 22048                           ; BSR set to: 1
 22049                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22050                           
 22051                           ; BSR set to: 1
 22052  00629E  0E90               	movlw	_ReceivedDataBuffer& (0+255)
 22053  0062A0  0100               	movlb	0	; () banked
 22054  0062A2  6FAB               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22055  0062A4  6BAC               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22056  0062A6  C0AB  F0A7         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22057  0062AA  C0AC  F0A8         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22058  0062AE  0E40               	movlw	_ToSendDataBuffer& (0+255)
 22059  0062B0  6FAD               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22060  0062B2  6BAE               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22061  0062B4  C0AD  F0A9         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22062  0062B8  C0AE  F0AA         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22063  0062BC  ECE6  F020         	call	_api_prepare	;wreg free
 22064                           
 22065                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22066  0062C0  0E01               	movlw	1
 22067  0062C2  6E01               	movwf	USBTransferOnePacket@dir,c
 22068  0062C4  0E40               	movlw	low _ToSendDataBuffer
 22069  0062C6  6E02               	movwf	USBTransferOnePacket@data,c
 22070  0062C8  0E03               	movlw	high _ToSendDataBuffer
 22071  0062CA  6E03               	movwf	USBTransferOnePacket@data+1,c
 22072  0062CC  0E40               	movlw	64
 22073  0062CE  6E04               	movwf	USBTransferOnePacket@len,c
 22074  0062D0  0E01               	movlw	1
 22075  0062D2  ECEC  F026         	call	_USBTransferOnePacket
 22076  0062D6  C001  F17A         	movff	?_USBTransferOnePacket,_USBInHandle
 22077  0062DA  C002  F17B         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22078  0062DE                     l972:
 22079                           
 22080                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 22081  0062DE  0E90               	movlw	low _ReceivedDataBuffer
 22082  0062E0  0100               	movlb	0	; () banked
 22083  0062E2  6F93               	movwf	api_parse@inBuffer& (0+255),b
 22084  0062E4  0E02               	movlw	high _ReceivedDataBuffer
 22085  0062E6  6F94               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22086  0062E8  0E40               	movlw	64
 22087  0062EA  6F95               	movwf	api_parse@receivedDataLength& (0+255),b
 22088  0062EC  EC50  F02C         	call	_api_parse	;wreg free
 22089                           
 22090                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22091  0062F0  0E00               	movlw	0
 22092  0062F2  6E01               	movwf	USBTransferOnePacket@dir,c
 22093  0062F4  0E90               	movlw	low _ReceivedDataBuffer
 22094  0062F6  6E02               	movwf	USBTransferOnePacket@data,c
 22095  0062F8  0E02               	movlw	high _ReceivedDataBuffer
 22096  0062FA  6E03               	movwf	USBTransferOnePacket@data+1,c
 22097  0062FC  0E40               	movlw	64
 22098  0062FE  6E04               	movwf	USBTransferOnePacket@len,c
 22099  006300  0E01               	movlw	1
 22100  006302  ECEC  F026         	call	_USBTransferOnePacket
 22101  006306  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 22102  00630A  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22103  00630E  0012               	return	
 22104  006310                     __end_of_APP_DeviceCustomHIDTasks:
 22105                           	opt stack 0
 22106                           tosu	equ	0xFFF
 22107                           tosh	equ	0xFFE
 22108                           tosl	equ	0xFFD
 22109                           pclath	equ	0xFFA
 22110                           tblptru	equ	0xFF8
 22111                           tblptrh	equ	0xFF7
 22112                           tblptrl	equ	0xFF6
 22113                           tablat	equ	0xFF5
 22114                           prodh	equ	0xFF4
 22115                           prodl	equ	0xFF3
 22116                           intcon	equ	0xFF2
 22117                           intcon2	equ	0xFF1
 22118                           intcon3	equ	0xFF0
 22119                           indf0	equ	0xFEF
 22120                           postinc0	equ	0xFEE
 22121                           fsr0h	equ	0xFEA
 22122                           fsr0l	equ	0xFE9
 22123                           wreg	equ	0xFE8
 22124                           indf1	equ	0xFE7
 22125                           postdec1	equ	0xFE5
 22126                           plusw1	equ	0xFE3
 22127                           fsr1h	equ	0xFE2
 22128                           fsr1l	equ	0xFE1
 22129                           indf2	equ	0xFDF
 22130                           postinc2	equ	0xFDE
 22131                           postdec2	equ	0xFDD
 22132                           plusw2	equ	0xFDB
 22133                           fsr2h	equ	0xFDA
 22134                           fsr2l	equ	0xFD9
 22135                           status	equ	0xFD8
 22136                           
 22137 ;; *************** function _api_prepare *****************
 22138 ;; Defined at:
 22139 ;;		line 53 in file "api.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 22142 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22143 ;;  outBuffer       2   73[BANK0 ] PTR unsigned char 
 22144 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22145 ;; Auto vars:     Size  Location     Type
 22146 ;;  command         1   93[COMRAM] enum E6715
 22147 ;; Return value:  Size  Location     Type
 22148 ;;                  1    wreg      void 
 22149 ;; Registers used:
 22150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22151 ;; Tracked objects:
 22152 ;;		On entry : 0/0
 22153 ;;		On exit  : 0/0
 22154 ;;		Unchanged: 0/0
 22155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22156 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22159 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22160 ;;Total ram usage:        5 bytes
 22161 ;; Hardware stack levels used:    1
 22162 ;; Hardware stack levels required when called:    9
 22163 ;; This function calls:
 22164 ;;		__fill_buffer_find_file
 22165 ;;		__fill_buffer_get_bootloader_details
 22166 ;;		__fill_buffer_get_configuration
 22167 ;;		__fill_buffer_get_display
 22168 ;;		__fill_buffer_get_file_details
 22169 ;;		__fill_buffer_get_status
 22170 ;;		__fill_buffer_read_file
 22171 ;;		_memcpy
 22172 ;; This function is called by:
 22173 ;;		_main
 22174 ;;		_APP_DeviceCustomHIDTasks
 22175 ;; This function uses a non-reentrant model
 22176 ;;
 22177                           
 22178                           	psect	text103
 22179  0041CC                     __ptext103:
 22180                           	opt stack 0
 22181  0041CC                     _api_prepare:
 22182                           	opt stack 21
 22183                           
 22184                           ;api.c: 55: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22185                           
 22186                           ;incstack = 0
 22187  0041CC  C0A7  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22188  0041D0  C0A8  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22189  0041D4  50DF               	movf	indf2,w,c
 22190  0041D6  6E5E               	movwf	api_prepare@command,c
 22191                           
 22192                           ;api.c: 57: if(command>0x7F)
 22193  0041D8  0E7F               	movlw	127
 22194  0041DA  645E               	cpfsgt	api_prepare@command,c
 22195  0041DC  D088               	goto	l2634
 22196  0041DE  D031               	goto	l2627
 22197  0041E0                     
 22198                           ;api.c: 73: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22199  0041E0  C0A7  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22200  0041E4  C0A8  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22201  0041E8  C0A9  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22202  0041EC  C0AA  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22203  0041F0  ECB2  F039         	call	__fill_buffer_get_file_details	;wreg free
 22204                           
 22205                           ;api.c: 74: break;
 22206  0041F4  0012               	return	
 22207  0041F6                     
 22208                           ;api.c: 78: _fill_buffer_find_file(inBuffer, outBuffer);
 22209  0041F6  C0A7  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22210  0041FA  C0A8  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22211  0041FE  C0A9  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22212  004202  C0AA  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22213  004206  EC2C  F032         	call	__fill_buffer_find_file	;wreg free
 22214                           
 22215                           ;api.c: 79: break;
 22216  00420A  0012               	return	
 22217  00420C                     
 22218                           ;api.c: 83: _fill_buffer_read_file(inBuffer, outBuffer);
 22219  00420C  C0A7  F093         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22220  004210  C0A8  F094         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22221  004214  C0A9  F095         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22222  004218  C0AA  F096         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22223  00421C  EC38  F014         	call	__fill_buffer_read_file	;wreg free
 22224                           
 22225                           ;api.c: 84: break;
 22226  004220  0012               	return	
 22227  004222                     
 22228                           ;api.c: 87: outBuffer[0] = 0x99;
 22229  004222  C0A9  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22230  004226  C0AA  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22231  00422A  0E99               	movlw	153
 22232  00422C  6EDF               	movwf	indf2,c
 22233                           
 22234                           ;api.c: 88: outBuffer[1] = 0x99;
 22235  00422E  0100               	movlb	0	; () banked
 22236  004230  EE20 F001          	lfsr	2,1
 22237  004234  51A9               	movf	api_prepare@outBuffer& (0+255),w,b
 22238  004236  26D9               	addwf	fsr2l,f,c
 22239  004238  51AA               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22240  00423A  22DA               	addwfc	fsr2h,f,c
 22241  00423C  0E99               	movlw	153
 22242  00423E  6EDF               	movwf	indf2,c
 22243                           
 22244                           ;api.c: 89: }
 22245  004240  0012               	return	
 22246  004242                     l2627:
 22247                           
 22248                           ; BSR set to: 0
 22249  004242  505E               	movf	api_prepare@command,w,c
 22250                           
 22251                           ; Switch size 1, requested type "space"
 22252                           ; Number of cases is 3, Range of values is 128 to 130
 22253                           ; switch strategies available:
 22254                           ; Name         Instructions Cycles
 22255                           ; simple_byte           10     6 (average)
 22256                           ;	Chosen strategy is simple_byte
 22257  004244  0A80               	xorlw	128	; case 128
 22258  004246  B4D8               	btfsc	status,2,c
 22259  004248  D7CB               	goto	l2628
 22260  00424A  0A01               	xorlw	1	; case 129
 22261  00424C  B4D8               	btfsc	status,2,c
 22262  00424E  D7D3               	goto	l2630
 22263  004250  0A03               	xorlw	3	; case 130
 22264  004252  B4D8               	btfsc	status,2,c
 22265  004254  D7DB               	goto	l2631
 22266  004256  D7E5               	goto	l2632
 22267  004258                     
 22268                           ;api.c: 98: _fill_buffer_get_status(outBuffer);
 22269  004258  C0A9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22270  00425C  C0AA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22271  004260  EC27  F02A         	call	__fill_buffer_get_status	;wreg free
 22272                           
 22273                           ;api.c: 99: break;
 22274  004264  0012               	return	
 22275  004266                     
 22276                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 0);
 22277  004266  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22278  00426A  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22279  00426E  0E00               	movlw	0
 22280  004270  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22281  004272  ECD4  F02F         	call	__fill_buffer_get_display	;wreg free
 22282                           
 22283                           ;api.c: 104: break;
 22284  004276  0012               	return	
 22285  004278                     
 22286                           ;api.c: 108: _fill_buffer_get_display(outBuffer, 1);
 22287  004278  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22288  00427C  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22289  004280  0E01               	movlw	1
 22290  004282  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22291  004284  ECD4  F02F         	call	__fill_buffer_get_display	;wreg free
 22292                           
 22293                           ;api.c: 109: break;
 22294  004288  0012               	return	
 22295  00428A                     
 22296                           ;api.c: 113: _fill_buffer_get_bootloader_details(outBuffer);
 22297  00428A  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22298  00428E  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22299  004292  EC3D  F017         	call	__fill_buffer_get_bootloader_details	;wreg free
 22300                           
 22301                           ;api.c: 114: break;
 22302  004296  0012               	return	
 22303  004298                     
 22304                           ;api.c: 118: _fill_buffer_get_configuration(outBuffer);
 22305  004298  C0A9  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22306  00429C  C0AA  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22307  0042A0  EC6D  F033         	call	__fill_buffer_get_configuration	;wreg free
 22308                           
 22309                           ;api.c: 119: break;
 22310  0042A4  0012               	return	
 22311  0042A6                     
 22312                           ;api.c: 123: memcpy(outBuffer, inBuffer, 64);
 22313  0042A6  C0A9  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22314  0042AA  C0AA  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22315  0042AE  C0A7  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22316  0042B2  C0A8  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22317  0042B6  5003               	movf	memcpy@s1,w,c
 22318  0042B8  1004               	iorwf	memcpy@s1+1,w,c
 22319  0042BA  A4D8               	btfss	status,2,c
 22320  0042BC  0E20               	movlw	32
 22321  0042BE  6E05               	movwf	memcpy@s1+2,c
 22322  0042C0  0E00               	movlw	0
 22323  0042C2  6E07               	movwf	memcpy@n+1,c
 22324  0042C4  0E40               	movlw	64
 22325  0042C6  6E06               	movwf	memcpy@n,c
 22326  0042C8  ECF0  F03A         	call	_memcpy	;wreg free
 22327                           
 22328                           ;api.c: 124: break;
 22329  0042CC  0012               	return	
 22330  0042CE                     
 22331                           ;api.c: 127: outBuffer[0] = 0x99;
 22332  0042CE  C0A9  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22333  0042D2  C0AA  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22334  0042D6  0E99               	movlw	153
 22335  0042D8  6EDF               	movwf	indf2,c
 22336                           
 22337                           ;api.c: 128: outBuffer[1] = 0x99;
 22338  0042DA  0100               	movlb	0	; () banked
 22339  0042DC  EE20 F001          	lfsr	2,1
 22340  0042E0  51A9               	movf	api_prepare@outBuffer& (0+255),w,b
 22341  0042E2  26D9               	addwf	fsr2l,f,c
 22342  0042E4  51AA               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22343  0042E6  22DA               	addwfc	fsr2h,f,c
 22344  0042E8  0E99               	movlw	153
 22345  0042EA  6EDF               	movwf	indf2,c
 22346                           
 22347                           ;api.c: 129: }
 22348  0042EC  0012               	return	
 22349  0042EE                     l2634:
 22350                           
 22351                           ; BSR set to: 0
 22352  0042EE  505E               	movf	api_prepare@command,w,c
 22353                           
 22354                           ; Switch size 1, requested type "space"
 22355                           ; Number of cases is 6, Range of values is 16 to 32
 22356                           ; switch strategies available:
 22357                           ; Name         Instructions Cycles
 22358                           ; simple_byte           19    10 (average)
 22359                           ;	Chosen strategy is simple_byte
 22360  0042F0  0A10               	xorlw	16	; case 16
 22361  0042F2  B4D8               	btfsc	status,2,c
 22362  0042F4  D7B1               	goto	l2635
 22363  0042F6  0A01               	xorlw	1	; case 17
 22364  0042F8  B4D8               	btfsc	status,2,c
 22365  0042FA  D7B5               	goto	l2637
 22366  0042FC  0A03               	xorlw	3	; case 18
 22367  0042FE  B4D8               	btfsc	status,2,c
 22368  004300  D7BB               	goto	l2638
 22369  004302  0A01               	xorlw	1	; case 19
 22370  004304  B4D8               	btfsc	status,2,c
 22371  004306  D7C1               	goto	l2639
 22372  004308  0A07               	xorlw	7	; case 20
 22373  00430A  B4D8               	btfsc	status,2,c
 22374  00430C  D7C5               	goto	l2640
 22375  00430E  0A34               	xorlw	52	; case 32
 22376  004310  B4D8               	btfsc	status,2,c
 22377  004312  D7C9               	goto	l2641
 22378  004314  D7DC               	goto	l2642
 22379  004316                     __end_of_api_prepare:
 22380                           	opt stack 0
 22381                           tosu	equ	0xFFF
 22382                           tosh	equ	0xFFE
 22383                           tosl	equ	0xFFD
 22384                           pclath	equ	0xFFA
 22385                           tblptru	equ	0xFF8
 22386                           tblptrh	equ	0xFF7
 22387                           tblptrl	equ	0xFF6
 22388                           tablat	equ	0xFF5
 22389                           prodh	equ	0xFF4
 22390                           prodl	equ	0xFF3
 22391                           intcon	equ	0xFF2
 22392                           intcon2	equ	0xFF1
 22393                           intcon3	equ	0xFF0
 22394                           indf0	equ	0xFEF
 22395                           postinc0	equ	0xFEE
 22396                           fsr0h	equ	0xFEA
 22397                           fsr0l	equ	0xFE9
 22398                           wreg	equ	0xFE8
 22399                           indf1	equ	0xFE7
 22400                           postdec1	equ	0xFE5
 22401                           plusw1	equ	0xFE3
 22402                           fsr1h	equ	0xFE2
 22403                           fsr1l	equ	0xFE1
 22404                           indf2	equ	0xFDF
 22405                           postinc2	equ	0xFDE
 22406                           postdec2	equ	0xFDD
 22407                           plusw2	equ	0xFDB
 22408                           fsr2h	equ	0xFDA
 22409                           fsr2l	equ	0xFD9
 22410                           status	equ	0xFD8
 22411                           
 22412 ;; *************** function __fill_buffer_read_file *****************
 22413 ;; Defined at:
 22414 ;;		line 384 in file "api.c"
 22415 ;; Parameters:    Size  Location     Type
 22416 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 22417 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22418 ;;  outBuffer       2   53[BANK0 ] PTR unsigned char 
 22419 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22420 ;; Auto vars:     Size  Location     Type
 22421 ;;  start           4   67[BANK0 ] unsigned long 
 22422 ;;  data_length     4   63[BANK0 ] unsigned long 
 22423 ;;  file_size       4   59[BANK0 ] unsigned long 
 22424 ;; Return value:  Size  Location     Type
 22425 ;;                  1    wreg      void 
 22426 ;; Registers used:
 22427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22428 ;; Tracked objects:
 22429 ;;		On entry : 0/0
 22430 ;;		On exit  : 0/0
 22431 ;;		Unchanged: 0/0
 22432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22434 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22435 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22436 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22437 ;;Total ram usage:       20 bytes
 22438 ;; Hardware stack levels used:    1
 22439 ;; Hardware stack levels required when called:    8
 22440 ;; This function calls:
 22441 ;;		_fat_get_file_size
 22442 ;;		_fat_read_from_file
 22443 ;; This function is called by:
 22444 ;;		_api_prepare
 22445 ;; This function uses a non-reentrant model
 22446 ;;
 22447                           
 22448                           	psect	text104
 22449  002870                     __ptext104:
 22450                           	opt stack 0
 22451  002870                     __fill_buffer_read_file:
 22452                           	opt stack 21
 22453                           
 22454                           ;api.c: 386: uint32_t start;;api.c: 387: uint32_t file_size;;api.c: 388: uint32_t data_l
      +                          ength;;api.c: 391: outBuffer[0] = DATAREQUEST_FIND_FILE;
 22455                           
 22456                           ;incstack = 0
 22457  002870  C095  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22458  002874  C096  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22459  002878  0E81               	movlw	129
 22460  00287A  6EDF               	movwf	indf2,c
 22461                           
 22462                           ;api.c: 394: outBuffer[1] = 0xC125 >> 8;
 22463  00287C  0100               	movlb	0	; () banked
 22464  00287E  EE20 F001          	lfsr	2,1
 22465  002882  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22466  002884  26D9               	addwf	fsr2l,f,c
 22467  002886  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22468  002888  22DA               	addwfc	fsr2h,f,c
 22469  00288A  0EC1               	movlw	193
 22470  00288C  6EDF               	movwf	indf2,c
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;api.c: 395: outBuffer[2] = (uint8_t) 0xC125;
 22474  00288E  EE20 F002          	lfsr	2,2
 22475  002892  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22476  002894  26D9               	addwf	fsr2l,f,c
 22477  002896  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22478  002898  22DA               	addwfc	fsr2h,f,c
 22479  00289A  0E25               	movlw	37
 22480  00289C  6EDF               	movwf	indf2,c
 22481                           
 22482                           ; BSR set to: 0
 22483                           ;api.c: 398: outBuffer[3] = inBuffer[1];
 22484  00289E  EE20 F001          	lfsr	2,1
 22485  0028A2  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22486  0028A4  26D9               	addwf	fsr2l,f,c
 22487  0028A6  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22488  0028A8  22DA               	addwfc	fsr2h,f,c
 22489  0028AA  EE10 F003          	lfsr	1,3
 22490  0028AE  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22491  0028B0  26E1               	addwf	fsr1l,f,c
 22492  0028B2  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22493  0028B4  22E2               	addwfc	fsr1h,f,c
 22494  0028B6  CFDF FFE7          	movff	indf2,indf1
 22495                           
 22496                           ; BSR set to: 0
 22497                           ;api.c: 401: outBuffer[4] = inBuffer[1];
 22498  0028BA  EE20 F001          	lfsr	2,1
 22499  0028BE  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22500  0028C0  26D9               	addwf	fsr2l,f,c
 22501  0028C2  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22502  0028C4  22DA               	addwfc	fsr2h,f,c
 22503  0028C6  EE10 F004          	lfsr	1,4
 22504  0028CA  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22505  0028CC  26E1               	addwf	fsr1l,f,c
 22506  0028CE  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22507  0028D0  22E2               	addwfc	fsr1h,f,c
 22508  0028D2  CFDF FFE7          	movff	indf2,indf1
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;api.c: 402: outBuffer[5] = inBuffer[2];
 22512  0028D6  EE20 F002          	lfsr	2,2
 22513  0028DA  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22514  0028DC  26D9               	addwf	fsr2l,f,c
 22515  0028DE  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22516  0028E0  22DA               	addwfc	fsr2h,f,c
 22517  0028E2  EE10 F005          	lfsr	1,5
 22518  0028E6  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22519  0028E8  26E1               	addwf	fsr1l,f,c
 22520  0028EA  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22521  0028EC  22E2               	addwfc	fsr1h,f,c
 22522  0028EE  CFDF FFE7          	movff	indf2,indf1
 22523                           
 22524                           ; BSR set to: 0
 22525                           ;api.c: 403: outBuffer[6] = inBuffer[3];
 22526  0028F2  EE20 F003          	lfsr	2,3
 22527  0028F6  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22528  0028F8  26D9               	addwf	fsr2l,f,c
 22529  0028FA  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22530  0028FC  22DA               	addwfc	fsr2h,f,c
 22531  0028FE  EE10 F006          	lfsr	1,6
 22532  002902  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22533  002904  26E1               	addwf	fsr1l,f,c
 22534  002906  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22535  002908  22E2               	addwfc	fsr1h,f,c
 22536  00290A  CFDF FFE7          	movff	indf2,indf1
 22537                           
 22538                           ; BSR set to: 0
 22539                           ;api.c: 404: outBuffer[7] = inBuffer[4];
 22540  00290E  EE20 F004          	lfsr	2,4
 22541  002912  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22542  002914  26D9               	addwf	fsr2l,f,c
 22543  002916  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22544  002918  22DA               	addwfc	fsr2h,f,c
 22545  00291A  EE10 F007          	lfsr	1,7
 22546  00291E  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22547  002920  26E1               	addwf	fsr1l,f,c
 22548  002922  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22549  002924  22E2               	addwfc	fsr1h,f,c
 22550  002926  CFDF FFE7          	movff	indf2,indf1
 22551                           
 22552                           ; BSR set to: 0
 22553                           ;api.c: 407: start = inBuffer[4];
 22554  00292A  EE20 F004          	lfsr	2,4
 22555  00292E  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22556  002930  26D9               	addwf	fsr2l,f,c
 22557  002932  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22558  002934  22DA               	addwfc	fsr2h,f,c
 22559  002936  50DF               	movf	indf2,w,c
 22560  002938  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22561  00293A  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22562  00293C  6FA3               	movwf	__fill_buffer_read_file@start& (0+255),b
 22563  00293E  6BA4               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 22564  002940  6BA5               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 22565  002942  6BA6               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 22566                           
 22567                           ; BSR set to: 0
 22568                           ;api.c: 408: start <<= 8;
 22569  002944  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22570  002948  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22571  00294C  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22572  002950  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;api.c: 409: start |= inBuffer[3];
 22576  002952  EE20 F003          	lfsr	2,3
 22577  002956  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22578  002958  26D9               	addwf	fsr2l,f,c
 22579  00295A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22580  00295C  22DA               	addwfc	fsr2h,f,c
 22581  00295E  50DF               	movf	indf2,w,c
 22582  002960  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22583  002962  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22584  002964  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;api.c: 410: start <<= 8;
 22588  002966  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22589  00296A  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22590  00296E  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22591  002972  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 22592                           
 22593                           ; BSR set to: 0
 22594                           ;api.c: 411: start |= inBuffer[2];
 22595  002974  EE20 F002          	lfsr	2,2
 22596  002978  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22597  00297A  26D9               	addwf	fsr2l,f,c
 22598  00297C  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22599  00297E  22DA               	addwfc	fsr2h,f,c
 22600  002980  50DF               	movf	indf2,w,c
 22601  002982  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22602  002984  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22603  002986  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22604                           
 22605                           ; BSR set to: 0
 22606                           ;api.c: 412: start <<= 8;
 22607  002988  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22608  00298C  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22609  002990  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22610  002994  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;api.c: 413: start |= inBuffer[1];
 22614  002996  EE20 F001          	lfsr	2,1
 22615  00299A  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22616  00299C  26D9               	addwf	fsr2l,f,c
 22617  00299E  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22618  0029A0  22DA               	addwfc	fsr2h,f,c
 22619  0029A2  50DF               	movf	indf2,w,c
 22620  0029A4  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22621  0029A6  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 22622  0029A8  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22623                           
 22624                           ; BSR set to: 0
 22625                           ;api.c: 416: file_size = fat_get_file_size(inBuffer[1]);
 22626  0029AA  EE20 F001          	lfsr	2,1
 22627  0029AE  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22628  0029B0  26D9               	addwf	fsr2l,f,c
 22629  0029B2  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22630  0029B4  22DA               	addwfc	fsr2h,f,c
 22631  0029B6  50DF               	movf	indf2,w,c
 22632  0029B8  EC09  F039         	call	_fat_get_file_size
 22633  0029BC  C030  F09B         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 22634  0029C0  C031  F09C         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 22635  0029C4  C032  F09D         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 22636  0029C8  C033  F09E         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 22637                           
 22638                           ;api.c: 417: data_length = file_size - start;
 22639  0029CC  C0A3  F097         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 22640  0029D0  C0A4  F098         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 22641  0029D4  C0A5  F099         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 22642  0029D8  C0A6  F09A         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 22643  0029DC  0100               	movlb	0	; () banked
 22644  0029DE  1F97               	comf	??__fill_buffer_read_file& (0+255),f,b
 22645  0029E0  1F98               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 22646  0029E2  1F99               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 22647  0029E4  1F9A               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 22648  0029E6  2B97               	incf	??__fill_buffer_read_file& (0+255),f,b
 22649  0029E8  0E00               	movlw	0
 22650  0029EA  2398               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 22651  0029EC  2399               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 22652  0029EE  239A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 22653  0029F0  519B               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 22654  0029F2  2597               	addwf	??__fill_buffer_read_file& (0+255),w,b
 22655  0029F4  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22656  0029F6  519C               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 22657  0029F8  2198               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 22658  0029FA  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22659  0029FC  519D               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 22660  0029FE  2199               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 22661  002A00  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22662  002A02  519E               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 22663  002A04  219A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 22664  002A06  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;api.c: 418: if(data_length>54)
 22668  002A08  51A2               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 22669  002A0A  11A1               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 22670  002A0C  11A0               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 22671  002A0E  E104               	bnz	u11130
 22672  002A10  0E37               	movlw	55
 22673  002A12  5D9F               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 22674  002A14  A0D8               	btfss	status,0,c
 22675  002A16  D008               	goto	l2694
 22676  002A18                     u11130:
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;api.c: 419: {;api.c: 421: data_length = 54;
 22680  002A18  0E36               	movlw	54
 22681  002A1A  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22682  002A1C  0E00               	movlw	0
 22683  002A1E  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22684  002A20  0E00               	movlw	0
 22685  002A22  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22686  002A24  0E00               	movlw	0
 22687  002A26  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22688  002A28                     l2694:
 22689                           
 22690                           ; BSR set to: 0
 22691                           ;api.c: 422: };api.c: 425: outBuffer[8] = (uint8_t) data_length;
 22692                           
 22693                           ; BSR set to: 0
 22694  002A28  EE20 F008          	lfsr	2,8
 22695  002A2C  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22696  002A2E  26D9               	addwf	fsr2l,f,c
 22697  002A30  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22698  002A32  22DA               	addwfc	fsr2h,f,c
 22699  002A34  C09F  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 22700                           
 22701                           ; BSR set to: 0
 22702                           ;api.c: 428: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 22703  002A38  C0A3  F060         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 22704  002A3C  C0A4  F061         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 22705  002A40  C0A5  F062         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 22706  002A44  C0A6  F063         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 22707  002A48  C09F  F064         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 22708  002A4C  C0A0  F065         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 22709  002A50  C0A1  F066         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 22710  002A54  C0A2  F067         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 22711  002A58  0E0A               	movlw	10
 22712  002A5A  2595               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22713  002A5C  6F68               	movwf	fat_read_from_file@data& (0+255),b
 22714  002A5E  0E00               	movlw	0
 22715  002A60  2196               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22716  002A62  6F69               	movwf	(fat_read_from_file@data+1)& (0+255),b
 22717  002A64  EE20 F001          	lfsr	2,1
 22718  002A68  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22719  002A6A  26D9               	addwf	fsr2l,f,c
 22720  002A6C  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22721  002A6E  22DA               	addwfc	fsr2h,f,c
 22722  002A70  50DF               	movf	indf2,w,c
 22723  002A72  EC9F  F034         	call	_fat_read_from_file
 22724  002A76  0100               	movlb	0	; () banked
 22725  002A78  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 22726  002A7A  EE20 F009          	lfsr	2,9
 22727  002A7E  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22728  002A80  26D9               	addwf	fsr2l,f,c
 22729  002A82  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22730  002A84  22DA               	addwfc	fsr2h,f,c
 22731  002A86  C097  FFDF         	movff	??__fill_buffer_read_file,indf2
 22732                           
 22733                           ; BSR set to: 0
 22734  002A8A  0012               	return		;funcret
 22735  002A8C                     __end_of__fill_buffer_read_file:
 22736                           	opt stack 0
 22737                           tosu	equ	0xFFF
 22738                           tosh	equ	0xFFE
 22739                           tosl	equ	0xFFD
 22740                           pclath	equ	0xFFA
 22741                           tblptru	equ	0xFF8
 22742                           tblptrh	equ	0xFF7
 22743                           tblptrl	equ	0xFF6
 22744                           tablat	equ	0xFF5
 22745                           prodh	equ	0xFF4
 22746                           prodl	equ	0xFF3
 22747                           intcon	equ	0xFF2
 22748                           intcon2	equ	0xFF1
 22749                           intcon3	equ	0xFF0
 22750                           indf0	equ	0xFEF
 22751                           postinc0	equ	0xFEE
 22752                           fsr0h	equ	0xFEA
 22753                           fsr0l	equ	0xFE9
 22754                           wreg	equ	0xFE8
 22755                           indf1	equ	0xFE7
 22756                           postdec1	equ	0xFE5
 22757                           plusw1	equ	0xFE3
 22758                           fsr1h	equ	0xFE2
 22759                           fsr1l	equ	0xFE1
 22760                           indf2	equ	0xFDF
 22761                           postinc2	equ	0xFDE
 22762                           postdec2	equ	0xFDD
 22763                           plusw2	equ	0xFDB
 22764                           fsr2h	equ	0xFDA
 22765                           fsr2l	equ	0xFD9
 22766                           status	equ	0xFD8
 22767                           
 22768 ;; *************** function _fat_read_from_file *****************
 22769 ;; Defined at:
 22770 ;;		line 561 in file "fat16.c"
 22771 ;; Parameters:    Size  Location     Type
 22772 ;;  file_number     1    wreg     unsigned char 
 22773 ;;  start_byte      4    0[BANK0 ] unsigned long 
 22774 ;;  length          4    4[BANK0 ] unsigned long 
 22775 ;;  data            2    8[BANK0 ] PTR unsigned char 
 22776 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22777 ;; Auto vars:     Size  Location     Type
 22778 ;;  file_number     1   14[BANK0 ] unsigned char 
 22779 ;;  root           32   19[BANK0 ] struct .
 22780 ;;  cluster         2   17[BANK0 ] unsigned int 
 22781 ;;  cluster_numb    2   15[BANK0 ] unsigned int 
 22782 ;; Return value:  Size  Location     Type
 22783 ;;                  1    wreg      unsigned char 
 22784 ;; Registers used:
 22785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22786 ;; Tracked objects:
 22787 ;;		On entry : 0/0
 22788 ;;		On exit  : 0/0
 22789 ;;		Unchanged: 0/0
 22790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22791 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22792 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22793 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22794 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22795 ;;Total ram usage:       51 bytes
 22796 ;; Hardware stack levels used:    1
 22797 ;; Hardware stack levels required when called:    7
 22798 ;; This function calls:
 22799 ;;		_fat_get_file_information
 22800 ;;		_fat_read_from_file_fast
 22801 ;; This function is called by:
 22802 ;;		__fill_buffer_read_file
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text105
 22807  00693E                     __ptext105:
 22808                           	opt stack 0
 22809  00693E                     _fat_read_from_file:
 22810                           	opt stack 21
 22811                           
 22812                           ; BSR set to: 0
 22813                           ;incstack = 0
 22814                           ;fat_read_from_file@file_number stored from wreg
 22815  00693E  0100               	movlb	0	; () banked
 22816  006940  6F6E               	movwf	fat_read_from_file@file_number& (0+255),b
 22817                           
 22818                           ;fat16.c: 563: rootEntry_t root;;fat16.c: 564: uint16_t cluster;;fat16.c: 565: uint16_t 
      +                          cluster_number;;fat16.c: 568: fat_get_file_information(file_number, &root);
 22819  006942  0E73               	movlw	low fat_read_from_file@root
 22820  006944  6E37               	movwf	fat_get_file_information@data,c
 22821  006946  0E00               	movlw	high fat_read_from_file@root
 22822  006948  6E38               	movwf	fat_get_file_information@data+1,c
 22823  00694A  0100               	movlb	0	; () banked
 22824  00694C  516E               	movf	fat_read_from_file@file_number& (0+255),w,b
 22825  00694E  ECCF  F038         	call	_fat_get_file_information
 22826                           
 22827                           ;fat16.c: 569: cluster = root.firstCluster;
 22828  006952  C08D  F071         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 22829  006956  C08E  F072         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 22830                           
 22831                           ;fat16.c: 570: cluster_number = 0;
 22832  00695A  0E00               	movlw	0
 22833  00695C  0100               	movlb	0	; () banked
 22834  00695E  6F70               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 22835  006960  0E00               	movlw	0
 22836  006962  6F6F               	movwf	fat_read_from_file@cluster_number& (0+255),b
 22837                           
 22838                           ; BSR set to: 0
 22839                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 22840  006964  5164               	movf	fat_read_from_file@length& (0+255),w,b
 22841  006966  2560               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 22842  006968  6F6A               	movwf	??_fat_read_from_file& (0+255),b
 22843  00696A  5165               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 22844  00696C  2161               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22845  00696E  6F6B               	movwf	(??_fat_read_from_file+1)& (0+255),b
 22846  006970  5166               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 22847  006972  2162               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22848  006974  6F6C               	movwf	(??_fat_read_from_file+2)& (0+255),b
 22849  006976  5167               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 22850  006978  2163               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 22851  00697A  6F6D               	movwf	(??_fat_read_from_file+3)& (0+255),b
 22852  00697C  516A               	movf	??_fat_read_from_file& (0+255),w,b
 22853  00697E  5D8F               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22854  006980  516B               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 22855  006982  5990               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22856  006984  516C               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 22857  006986  5991               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22858  006988  516D               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 22859  00698A  5992               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 22860  00698C  B0D8               	btfsc	status,0,c
 22861  00698E  D002               	goto	l2024
 22862                           
 22863                           ; BSR set to: 0
 22864                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 22865  006990  0EFF               	movlw	255
 22866                           
 22867                           ; BSR set to: 0
 22868  006992  0012               	return	
 22869  006994                     l2024:
 22870                           
 22871                           ; BSR set to: 0
 22872                           ;fat16.c: 577: };fat16.c: 580: return fat_read_from_file_fast(start_byte, length, data, 
      +                          &cluster, &cluster_number);
 22873                           
 22874                           ; BSR set to: 0
 22875  006994  C060  F038         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 22876  006998  C061  F039         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 22877  00699C  C062  F03A         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 22878  0069A0  C063  F03B         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 22879  0069A4  C064  F03C         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 22880  0069A8  C065  F03D         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 22881  0069AC  C066  F03E         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 22882  0069B0  C067  F03F         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 22883  0069B4  C068  F040         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 22884  0069B8  C069  F041         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 22885  0069BC  0E71               	movlw	low fat_read_from_file@cluster
 22886  0069BE  6E42               	movwf	fat_read_from_file_fast@cluster,c
 22887  0069C0  0E00               	movlw	high fat_read_from_file@cluster
 22888  0069C2  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
 22889  0069C4  0E6F               	movlw	low fat_read_from_file@cluster_number
 22890  0069C6  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
 22891  0069C8  0E00               	movlw	high fat_read_from_file@cluster_number
 22892  0069CA  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
 22893  0069CC  EC10  F012         	call	_fat_read_from_file_fast	;wreg free
 22894  0069D0  0012               	return	
 22895  0069D2                     __end_of_fat_read_from_file:
 22896                           	opt stack 0
 22897                           tosu	equ	0xFFF
 22898                           tosh	equ	0xFFE
 22899                           tosl	equ	0xFFD
 22900                           pclath	equ	0xFFA
 22901                           tblptru	equ	0xFF8
 22902                           tblptrh	equ	0xFF7
 22903                           tblptrl	equ	0xFF6
 22904                           tablat	equ	0xFF5
 22905                           prodh	equ	0xFF4
 22906                           prodl	equ	0xFF3
 22907                           intcon	equ	0xFF2
 22908                           intcon2	equ	0xFF1
 22909                           intcon3	equ	0xFF0
 22910                           indf0	equ	0xFEF
 22911                           postinc0	equ	0xFEE
 22912                           fsr0h	equ	0xFEA
 22913                           fsr0l	equ	0xFE9
 22914                           wreg	equ	0xFE8
 22915                           indf1	equ	0xFE7
 22916                           postdec1	equ	0xFE5
 22917                           plusw1	equ	0xFE3
 22918                           fsr1h	equ	0xFE2
 22919                           fsr1l	equ	0xFE1
 22920                           indf2	equ	0xFDF
 22921                           postinc2	equ	0xFDE
 22922                           postdec2	equ	0xFDD
 22923                           plusw2	equ	0xFDB
 22924                           fsr2h	equ	0xFDA
 22925                           fsr2l	equ	0xFD9
 22926                           status	equ	0xFD8
 22927                           
 22928 ;; *************** function _fat_read_from_file_fast *****************
 22929 ;; Defined at:
 22930 ;;		line 583 in file "fat16.c"
 22931 ;; Parameters:    Size  Location     Type
 22932 ;;  start_byte      4   55[COMRAM] unsigned long 
 22933 ;;  length          4   59[COMRAM] unsigned long 
 22934 ;;  data            2   63[COMRAM] PTR unsigned char 
 22935 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 22936 ;;  cluster         2   65[COMRAM] PTR unsigned int 
 22937 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 22938 ;;  cluster_numb    2   67[COMRAM] PTR unsigned int 
 22939 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 22940 ;; Auto vars:     Size  Location     Type
 22941 ;;  position        4   89[COMRAM] unsigned long 
 22942 ;;  read_length     2   87[COMRAM] unsigned int 
 22943 ;;  offset          2   85[COMRAM] unsigned int 
 22944 ;;  working_clus    2   83[COMRAM] unsigned int 
 22945 ;;  sector          2   81[COMRAM] unsigned int 
 22946 ;; Return value:  Size  Location     Type
 22947 ;;                  1    wreg      unsigned char 
 22948 ;; Registers used:
 22949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22950 ;; Tracked objects:
 22951 ;;		On entry : 0/0
 22952 ;;		On exit  : 0/0
 22953 ;;		Unchanged: 0/0
 22954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22955 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22956 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22957 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22958 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22959 ;;Total ram usage:       38 bytes
 22960 ;; Hardware stack levels used:    1
 22961 ;; Hardware stack levels required when called:    6
 22962 ;; This function calls:
 22963 ;;		__read_fat
 22964 ;;		__sector_from_cluster
 22965 ;;		_flash_partial_read
 22966 ;; This function is called by:
 22967 ;;		_fat_read_from_file
 22968 ;;		__bootloader_verify_file
 22969 ;;		__bootloader_program
 22970 ;; This function uses a non-reentrant model
 22971 ;;
 22972                           
 22973                           	psect	text106
 22974  002420                     __ptext106:
 22975                           	opt stack 0
 22976  002420                     _fat_read_from_file_fast:
 22977                           	opt stack 22
 22978                           
 22979                           ;fat16.c: 585: uint32_t position;;fat16.c: 586: uint16_t offset;;fat16.c: 587: uint16_t 
      +                          sector;;fat16.c: 588: uint16_t read_length;;fat16.c: 589: uint16_t working_cluster;;fat1
      +                          6.c: 592: position = (*cluster_number);
 22980                           
 22981                           ;incstack = 0
 22982  002420  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 22983  002424  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 22984  002428  CFDE F046          	movff	postinc2,??_fat_read_from_file_fast
 22985  00242C  CFDD F047          	movff	postdec2,??_fat_read_from_file_fast+1
 22986  002430  C046  F05A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 22987  002434  C047  F05B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 22988  002438  6A5C               	clrf	fat_read_from_file_fast@position+2,c
 22989  00243A  6A5D               	clrf	fat_read_from_file_fast@position+3,c
 22990                           
 22991                           ;fat16.c: 593: position *= 512;
 22992  00243C  0E09               	movlw	9
 22993  00243E                     u9665:
 22994  00243E  90D8               	bcf	status,0,c
 22995  002440  365A               	rlcf	fat_read_from_file_fast@position,f,c
 22996  002442  365B               	rlcf	fat_read_from_file_fast@position+1,f,c
 22997  002444  365C               	rlcf	fat_read_from_file_fast@position+2,f,c
 22998  002446  365D               	rlcf	fat_read_from_file_fast@position+3,f,c
 22999  002448  2EE8               	decfsz	wreg,f,c
 23000  00244A  D7F9               	goto	u9665
 23001                           
 23002                           ;fat16.c: 594: if(position > start_byte)
 23003  00244C  505A               	movf	fat_read_from_file_fast@position,w,c
 23004  00244E  5C38               	subwf	fat_read_from_file_fast@start_byte,w,c
 23005  002450  505B               	movf	fat_read_from_file_fast@position+1,w,c
 23006  002452  5839               	subwfb	fat_read_from_file_fast@start_byte+1,w,c
 23007  002454  505C               	movf	fat_read_from_file_fast@position+2,w,c
 23008  002456  583A               	subwfb	fat_read_from_file_fast@start_byte+2,w,c
 23009  002458  505D               	movf	fat_read_from_file_fast@position+3,w,c
 23010  00245A  583B               	subwfb	fat_read_from_file_fast@start_byte+3,w,c
 23011  00245C  B0D8               	btfsc	status,0,c
 23012  00245E  D023               	goto	l2030
 23013                           
 23014                           ;fat16.c: 595: {;fat16.c: 597: return 0xFF;
 23015  002460  0EFF               	movlw	255
 23016  002462  0012               	return	
 23017  002464                     l12814:
 23018                           
 23019                           ;fat16.c: 600: {;fat16.c: 601: (*cluster) = _read_fat((*cluster));
 23020  002464  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23021  002468  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23022  00246C  CFDE F030          	movff	postinc2,__read_fat@cluster
 23023  002470  CFDD F031          	movff	postdec2,__read_fat@cluster+1
 23024  002474  EC93  F03F         	call	__read_fat	;wreg free
 23025  002478  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23026  00247C  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23027  002480  C030  FFDE         	movff	?__read_fat,postinc2
 23028  002484  C031  FFDD         	movff	?__read_fat+1,postdec2
 23029                           
 23030                           ;fat16.c: 602: ++(*cluster_number);
 23031  002488  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23032  00248C  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23033  002490  2ADE               	incf	postinc2,f,c
 23034  002492  0E00               	movlw	0
 23035  002494  22DD               	addwfc	postdec2,f,c
 23036                           
 23037                           ;fat16.c: 603: position += 512;
 23038  002496  0E00               	movlw	0
 23039  002498  265A               	addwf	fat_read_from_file_fast@position,f,c
 23040  00249A  0E02               	movlw	2
 23041  00249C  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 23042  00249E  0E00               	movlw	0
 23043  0024A0  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 23044  0024A2  0E00               	movlw	0
 23045  0024A4  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 23046  0024A6                     l2030:
 23047  0024A6  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23048  0024AA  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23049  0024AE  C05C  F048         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+2
 23050  0024B2  C05D  F049         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+3
 23051  0024B6  1E46               	comf	??_fat_read_from_file_fast,f,c
 23052  0024B8  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23053  0024BA  1E48               	comf	??_fat_read_from_file_fast+2,f,c
 23054  0024BC  1E49               	comf	??_fat_read_from_file_fast+3,f,c
 23055  0024BE  2A46               	incf	??_fat_read_from_file_fast,f,c
 23056  0024C0  0E00               	movlw	0
 23057  0024C2  2247               	addwfc	??_fat_read_from_file_fast+1,f,c
 23058  0024C4  2248               	addwfc	??_fat_read_from_file_fast+2,f,c
 23059  0024C6  2249               	addwfc	??_fat_read_from_file_fast+3,f,c
 23060  0024C8  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 23061  0024CA  2446               	addwf	??_fat_read_from_file_fast,w,c
 23062  0024CC  6E4A               	movwf	(??_fat_read_from_file_fast+4)& (0+255),c
 23063  0024CE  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23064  0024D0  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23065  0024D2  6E4B               	movwf	(??_fat_read_from_file_fast+5)& (0+255),c
 23066  0024D4  503A               	movf	fat_read_from_file_fast@start_byte+2,w,c
 23067  0024D6  2048               	addwfc	??_fat_read_from_file_fast+2,w,c
 23068  0024D8  6E4C               	movwf	(??_fat_read_from_file_fast+6)& (0+255),c
 23069  0024DA  503B               	movf	fat_read_from_file_fast@start_byte+3,w,c
 23070  0024DC  2049               	addwfc	??_fat_read_from_file_fast+3,w,c
 23071  0024DE  6E4D               	movwf	(??_fat_read_from_file_fast+7)& (0+255),c
 23072  0024E0  504D               	movf	??_fat_read_from_file_fast+7,w,c
 23073  0024E2  104C               	iorwf	??_fat_read_from_file_fast+6,w,c
 23074  0024E4  E1BF               	bnz	l12814
 23075  0024E6  0E02               	movlw	2
 23076  0024E8  5C4B               	subwf	??_fat_read_from_file_fast+5,w,c
 23077  0024EA  B0D8               	btfsc	status,0,c
 23078  0024EC  D7BB               	goto	l2031
 23079                           
 23080                           ;fat16.c: 604: };fat16.c: 608: working_cluster = (*cluster);
 23081  0024EE  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23082  0024F2  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23083  0024F6  CFDE F054          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23084  0024FA  CFDD F055          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23085                           
 23086                           ;fat16.c: 611: offset = start_byte - position;
 23087  0024FE  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23088  002502  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23089  002506  1E46               	comf	??_fat_read_from_file_fast,f,c
 23090  002508  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23091  00250A  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 23092  00250C  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 23093  00250E  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 23094  002510  2446               	addwf	??_fat_read_from_file_fast,w,c
 23095  002512  6E56               	movwf	fat_read_from_file_fast@offset,c
 23096  002514  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23097  002516  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23098  002518  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 23099                           
 23100                           ;fat16.c: 614: position = 0;
 23101  00251A  0E00               	movlw	0
 23102  00251C  6E5A               	movwf	fat_read_from_file_fast@position,c
 23103  00251E  0E00               	movlw	0
 23104  002520  6E5B               	movwf	fat_read_from_file_fast@position+1,c
 23105  002522  0E00               	movlw	0
 23106  002524  6E5C               	movwf	fat_read_from_file_fast@position+2,c
 23107  002526  0E00               	movlw	0
 23108  002528  6E5D               	movwf	fat_read_from_file_fast@position+3,c
 23109                           
 23110                           ;fat16.c: 615: while(position < length)
 23111  00252A  D086               	goto	l2033
 23112  00252C                     
 23113                           ;fat16.c: 616: {;fat16.c: 618: if(offset==512)
 23114  00252C  0E02               	movlw	2
 23115  00252E  1857               	xorwf	fat_read_from_file_fast@offset+1,w,c
 23116  002530  1056               	iorwf	fat_read_from_file_fast@offset,w,c
 23117  002532  A4D8               	btfss	status,2,c
 23118  002534  D00E               	goto	l2035
 23119                           
 23120                           ;fat16.c: 619: {;fat16.c: 621: working_cluster = _read_fat(working_cluster);
 23121  002536  C054  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23122  00253A  C055  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23123  00253E  EC93  F03F         	call	__read_fat	;wreg free
 23124  002542  C030  F054         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23125  002546  C031  F055         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23126                           
 23127                           ;fat16.c: 622: offset = 0;
 23128  00254A  0E00               	movlw	0
 23129  00254C  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 23130  00254E  0E00               	movlw	0
 23131  002550  6E56               	movwf	fat_read_from_file_fast@offset,c
 23132  002552                     l2035:
 23133                           
 23134                           ;fat16.c: 623: };fat16.c: 626: sector = _sector_from_cluster(working_cluster);
 23135  002552  C054  F001         	movff	fat_read_from_file_fast@working_cluster,__sector_from_cluster@fat_cluster
 23136  002556  C055  F002         	movff	fat_read_from_file_fast@working_cluster+1,__sector_from_cluster@fat_cluster+1
 23137  00255A  EC72  F044         	call	__sector_from_cluster	;wreg free
 23138  00255E  C001  F052         	movff	?__sector_from_cluster,fat_read_from_file_fast@sector
 23139  002562  C002  F053         	movff	?__sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23140                           
 23141                           ;fat16.c: 629: read_length = 512 - offset;
 23142  002566  C056  F046         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23143  00256A  C057  F047         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23144  00256E  1E46               	comf	??_fat_read_from_file_fast,f,c
 23145  002570  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23146  002572  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 23147  002574  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 23148  002576  0E00               	movlw	0
 23149  002578  2446               	addwf	??_fat_read_from_file_fast,w,c
 23150  00257A  6E58               	movwf	fat_read_from_file_fast@read_length,c
 23151  00257C  0E02               	movlw	2
 23152  00257E  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23153  002580  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 23154                           
 23155                           ;fat16.c: 630: if(read_length > (length-position))
 23156  002582  5058               	movf	fat_read_from_file_fast@read_length,w,c
 23157  002584  6E46               	movwf	??_fat_read_from_file_fast& (0+255),c
 23158  002586  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 23159  002588  6E47               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23160  00258A  6A48               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23161  00258C  6A49               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23162  00258E  C05A  F04A         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23163  002592  C05B  F04B         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23164  002596  C05C  F04C         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23165  00259A  C05D  F04D         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23166  00259E  1E4A               	comf	??_fat_read_from_file_fast+4,f,c
 23167  0025A0  1E4B               	comf	??_fat_read_from_file_fast+5,f,c
 23168  0025A2  1E4C               	comf	??_fat_read_from_file_fast+6,f,c
 23169  0025A4  1E4D               	comf	??_fat_read_from_file_fast+7,f,c
 23170  0025A6  2A4A               	incf	??_fat_read_from_file_fast+4,f,c
 23171  0025A8  0E00               	movlw	0
 23172  0025AA  224B               	addwfc	??_fat_read_from_file_fast+5,f,c
 23173  0025AC  224C               	addwfc	??_fat_read_from_file_fast+6,f,c
 23174  0025AE  224D               	addwfc	??_fat_read_from_file_fast+7,f,c
 23175  0025B0  503C               	movf	fat_read_from_file_fast@length,w,c
 23176  0025B2  244A               	addwf	??_fat_read_from_file_fast+4,w,c
 23177  0025B4  6E4E               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23178  0025B6  503D               	movf	fat_read_from_file_fast@length+1,w,c
 23179  0025B8  204B               	addwfc	??_fat_read_from_file_fast+5,w,c
 23180  0025BA  6E4F               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23181  0025BC  503E               	movf	fat_read_from_file_fast@length+2,w,c
 23182  0025BE  204C               	addwfc	??_fat_read_from_file_fast+6,w,c
 23183  0025C0  6E50               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23184  0025C2  503F               	movf	fat_read_from_file_fast@length+3,w,c
 23185  0025C4  204D               	addwfc	??_fat_read_from_file_fast+7,w,c
 23186  0025C6  6E51               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23187  0025C8  5046               	movf	??_fat_read_from_file_fast,w,c
 23188  0025CA  5C4E               	subwf	??_fat_read_from_file_fast+8,w,c
 23189  0025CC  5047               	movf	??_fat_read_from_file_fast+1,w,c
 23190  0025CE  584F               	subwfb	??_fat_read_from_file_fast+9,w,c
 23191  0025D0  5048               	movf	??_fat_read_from_file_fast+2,w,c
 23192  0025D2  5850               	subwfb	??_fat_read_from_file_fast+10,w,c
 23193  0025D4  5049               	movf	??_fat_read_from_file_fast+3,w,c
 23194  0025D6  5851               	subwfb	??_fat_read_from_file_fast+11,w,c
 23195  0025D8  B0D8               	btfsc	status,0,c
 23196  0025DA  D00E               	goto	l2036
 23197                           
 23198                           ;fat16.c: 631: {;fat16.c: 633: read_length = length - position;
 23199  0025DC  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23200  0025E0  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23201  0025E4  1E46               	comf	??_fat_read_from_file_fast,f,c
 23202  0025E6  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 23203  0025E8  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 23204  0025EA  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 23205  0025EC  503C               	movf	fat_read_from_file_fast@length,w,c
 23206  0025EE  2446               	addwf	??_fat_read_from_file_fast,w,c
 23207  0025F0  6E58               	movwf	fat_read_from_file_fast@read_length,c
 23208  0025F2  503D               	movf	fat_read_from_file_fast@length+1,w,c
 23209  0025F4  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 23210  0025F6  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 23211  0025F8                     l2036:
 23212                           
 23213                           ;fat16.c: 634: };fat16.c: 637: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23214  0025F8  C052  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23215  0025FC  C053  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23216  002600  C056  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23217  002604  C057  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23218  002608  C058  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23219  00260C  C059  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23220  002610  505A               	movf	fat_read_from_file_fast@position,w,c
 23221  002612  2440               	addwf	fat_read_from_file_fast@data,w,c
 23222  002614  6E2E               	movwf	flash_partial_read@data,c
 23223  002616  505B               	movf	fat_read_from_file_fast@position+1,w,c
 23224  002618  2041               	addwfc	fat_read_from_file_fast@data+1,w,c
 23225  00261A  6E2F               	movwf	flash_partial_read@data+1,c
 23226  00261C  ECFC  F041         	call	_flash_partial_read	;wreg free
 23227                           
 23228                           ;fat16.c: 640: position += read_length;
 23229  002620  5058               	movf	fat_read_from_file_fast@read_length,w,c
 23230  002622  265A               	addwf	fat_read_from_file_fast@position,f,c
 23231  002624  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 23232  002626  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 23233  002628  0E00               	movlw	0
 23234  00262A  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 23235  00262C  0E00               	movlw	0
 23236  00262E  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 23237                           
 23238                           ;fat16.c: 641: offset += read_length;
 23239  002630  5058               	movf	fat_read_from_file_fast@read_length,w,c
 23240  002632  2656               	addwf	fat_read_from_file_fast@offset,f,c
 23241  002634  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 23242  002636  2257               	addwfc	fat_read_from_file_fast@offset+1,f,c
 23243  002638                     l2033:
 23244  002638  503C               	movf	fat_read_from_file_fast@length,w,c
 23245  00263A  5C5A               	subwf	fat_read_from_file_fast@position,w,c
 23246  00263C  503D               	movf	fat_read_from_file_fast@length+1,w,c
 23247  00263E  585B               	subwfb	fat_read_from_file_fast@position+1,w,c
 23248  002640  503E               	movf	fat_read_from_file_fast@length+2,w,c
 23249  002642  585C               	subwfb	fat_read_from_file_fast@position+2,w,c
 23250  002644  503F               	movf	fat_read_from_file_fast@length+3,w,c
 23251  002646  585D               	subwfb	fat_read_from_file_fast@position+3,w,c
 23252  002648  A0D8               	btfss	status,0,c
 23253  00264A  D770               	goto	l2034
 23254                           
 23255                           ;fat16.c: 642: };fat16.c: 645: return 0x00;
 23256  00264C  0E00               	movlw	0
 23257  00264E  0012               	return	
 23258  002650                     __end_of_fat_read_from_file_fast:
 23259                           	opt stack 0
 23260                           tosu	equ	0xFFF
 23261                           tosh	equ	0xFFE
 23262                           tosl	equ	0xFFD
 23263                           pclath	equ	0xFFA
 23264                           tblptru	equ	0xFF8
 23265                           tblptrh	equ	0xFF7
 23266                           tblptrl	equ	0xFF6
 23267                           tablat	equ	0xFF5
 23268                           prodh	equ	0xFF4
 23269                           prodl	equ	0xFF3
 23270                           intcon	equ	0xFF2
 23271                           intcon2	equ	0xFF1
 23272                           intcon3	equ	0xFF0
 23273                           indf0	equ	0xFEF
 23274                           postinc0	equ	0xFEE
 23275                           fsr0h	equ	0xFEA
 23276                           fsr0l	equ	0xFE9
 23277                           wreg	equ	0xFE8
 23278                           indf1	equ	0xFE7
 23279                           postdec1	equ	0xFE5
 23280                           plusw1	equ	0xFE3
 23281                           fsr1h	equ	0xFE2
 23282                           fsr1l	equ	0xFE1
 23283                           indf2	equ	0xFDF
 23284                           postinc2	equ	0xFDE
 23285                           postdec2	equ	0xFDD
 23286                           plusw2	equ	0xFDB
 23287                           fsr2h	equ	0xFDA
 23288                           fsr2l	equ	0xFD9
 23289                           status	equ	0xFD8
 23290                           
 23291 ;; *************** function _fat_get_file_size *****************
 23292 ;; Defined at:
 23293 ;;		line 299 in file "fat16.c"
 23294 ;; Parameters:    Size  Location     Type
 23295 ;;  file_number     1    wreg     unsigned char 
 23296 ;; Auto vars:     Size  Location     Type
 23297 ;;  file_number     1   60[COMRAM] unsigned char 
 23298 ;;  file_size       4   54[COMRAM] unsigned long 
 23299 ;;  offset          2   58[COMRAM] unsigned int 
 23300 ;;  sector          2   52[COMRAM] unsigned int 
 23301 ;; Return value:  Size  Location     Type
 23302 ;;                  4   47[COMRAM] unsigned long 
 23303 ;; Registers used:
 23304 ;;		wreg, status,2, status,0, cstack
 23305 ;; Tracked objects:
 23306 ;;		On entry : 0/0
 23307 ;;		On exit  : 0/0
 23308 ;;		Unchanged: 0/0
 23309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23311 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23313 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23314 ;;Total ram usage:       14 bytes
 23315 ;; Hardware stack levels used:    1
 23316 ;; Hardware stack levels required when called:    5
 23317 ;; This function calls:
 23318 ;;		_flash_partial_read
 23319 ;; This function is called by:
 23320 ;;		__bootloader_find_file
 23321 ;;		__bootloader_verify_file
 23322 ;;		__fill_buffer_read_file
 23323 ;; This function uses a non-reentrant model
 23324 ;;
 23325                           
 23326                           	psect	text107
 23327  007212                     __ptext107:
 23328                           	opt stack 0
 23329  007212                     _fat_get_file_size:
 23330                           	opt stack 23
 23331                           
 23332                           ;incstack = 0
 23333                           ;fat_get_file_size@file_number stored from wreg
 23334  007212  6E3D               	movwf	fat_get_file_size@file_number,c
 23335                           
 23336                           ;fat16.c: 301: uint16_t sector;;fat16.c: 302: uint16_t offset;;fat16.c: 303: uint32_t fi
      +                          le_size;;fat16.c: 304: sector = file_number >> 4;
 23337  007214  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 23338  007218  3A34               	swapf	??_fat_get_file_size,f,c
 23339  00721A  0E0F               	movlw	15
 23340  00721C  1634               	andwf	??_fat_get_file_size,f,c
 23341  00721E  5034               	movf	??_fat_get_file_size,w,c
 23342  007220  6E35               	movwf	fat_get_file_size@sector,c
 23343  007222  6A36               	clrf	fat_get_file_size@sector+1,c
 23344                           
 23345                           ;fat16.c: 305: sector += 34;
 23346  007224  0E22               	movlw	34
 23347  007226  2635               	addwf	fat_get_file_size@sector,f,c
 23348  007228  0E00               	movlw	0
 23349  00722A  2236               	addwfc	fat_get_file_size@sector+1,f,c
 23350                           
 23351                           ;fat16.c: 306: offset = file_number;
 23352  00722C  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 23353  007230  6A3C               	clrf	fat_get_file_size@offset+1,c
 23354                           
 23355                           ;fat16.c: 307: offset <<= 5;
 23356  007232  0E05               	movlw	5
 23357  007234                     u10335:
 23358  007234  90D8               	bcf	status,0,c
 23359  007236  363B               	rlcf	fat_get_file_size@offset,f,c
 23360  007238  363C               	rlcf	fat_get_file_size@offset+1,f,c
 23361  00723A  2EE8               	decfsz	wreg,f,c
 23362  00723C  D7FB               	goto	u10335
 23363                           
 23364                           ;fat16.c: 308: offset &= 0b111111111;
 23365  00723E  0EFF               	movlw	255
 23366  007240  163B               	andwf	fat_get_file_size@offset,f,c
 23367  007242  0E01               	movlw	1
 23368  007244  163C               	andwf	fat_get_file_size@offset+1,f,c
 23369                           
 23370                           ;fat16.c: 309: offset += 28;
 23371  007246  0E1C               	movlw	28
 23372  007248  263B               	addwf	fat_get_file_size@offset,f,c
 23373  00724A  0E00               	movlw	0
 23374  00724C  223C               	addwfc	fat_get_file_size@offset+1,f,c
 23375                           
 23376                           ;fat16.c: 310: flash_partial_read(sector, offset, 4, &file_size);
 23377  00724E  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 23378  007252  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 23379  007256  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 23380  00725A  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 23381  00725E  0E00               	movlw	0
 23382  007260  6E2D               	movwf	flash_partial_read@length+1,c
 23383  007262  0E04               	movlw	4
 23384  007264  6E2C               	movwf	flash_partial_read@length,c
 23385  007266  0E37               	movlw	low fat_get_file_size@file_size
 23386  007268  6E2E               	movwf	flash_partial_read@data,c
 23387  00726A  0E00               	movlw	high fat_get_file_size@file_size
 23388  00726C  6E2F               	movwf	flash_partial_read@data+1,c
 23389  00726E  ECFC  F041         	call	_flash_partial_read	;wreg free
 23390                           
 23391                           ;fat16.c: 311: return file_size;
 23392  007272  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 23393  007276  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 23394  00727A  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 23395  00727E  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 23396  007282  0012               	return	
 23397  007284                     __end_of_fat_get_file_size:
 23398                           	opt stack 0
 23399                           tosu	equ	0xFFF
 23400                           tosh	equ	0xFFE
 23401                           tosl	equ	0xFFD
 23402                           pclath	equ	0xFFA
 23403                           tblptru	equ	0xFF8
 23404                           tblptrh	equ	0xFF7
 23405                           tblptrl	equ	0xFF6
 23406                           tablat	equ	0xFF5
 23407                           prodh	equ	0xFF4
 23408                           prodl	equ	0xFF3
 23409                           intcon	equ	0xFF2
 23410                           intcon2	equ	0xFF1
 23411                           intcon3	equ	0xFF0
 23412                           indf0	equ	0xFEF
 23413                           postinc0	equ	0xFEE
 23414                           fsr0h	equ	0xFEA
 23415                           fsr0l	equ	0xFE9
 23416                           wreg	equ	0xFE8
 23417                           indf1	equ	0xFE7
 23418                           postdec1	equ	0xFE5
 23419                           plusw1	equ	0xFE3
 23420                           fsr1h	equ	0xFE2
 23421                           fsr1l	equ	0xFE1
 23422                           indf2	equ	0xFDF
 23423                           postinc2	equ	0xFDE
 23424                           postdec2	equ	0xFDD
 23425                           plusw2	equ	0xFDB
 23426                           fsr2h	equ	0xFDA
 23427                           fsr2l	equ	0xFD9
 23428                           status	equ	0xFD8
 23429                           
 23430 ;; *************** function __fill_buffer_get_status *****************
 23431 ;; Defined at:
 23432 ;;		line 192 in file "api.c"
 23433 ;; Parameters:    Size  Location     Type
 23434 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23435 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23436 ;; Auto vars:     Size  Location     Type
 23437 ;;		None
 23438 ;; Return value:  Size  Location     Type
 23439 ;;                  1    wreg      void 
 23440 ;; Registers used:
 23441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23442 ;; Tracked objects:
 23443 ;;		On entry : 0/0
 23444 ;;		On exit  : 0/0
 23445 ;;		Unchanged: 0/0
 23446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23451 ;;Total ram usage:        2 bytes
 23452 ;; Hardware stack levels used:    1
 23453 ;; Hardware stack levels required when called:    4
 23454 ;; This function calls:
 23455 ;;		_flash_is_busy
 23456 ;;		_ui_get_status
 23457 ;; This function is called by:
 23458 ;;		_api_prepare
 23459 ;; This function uses a non-reentrant model
 23460 ;;
 23461                           
 23462                           	psect	text108
 23463  00544E                     __ptext108:
 23464                           	opt stack 0
 23465  00544E                     __fill_buffer_get_status:
 23466                           	opt stack 25
 23467                           
 23468                           ;api.c: 195: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23469                           
 23470                           ;incstack = 0
 23471  00544E  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23472  005452  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23473  005456  0E10               	movlw	16
 23474  005458  6EDF               	movwf	indf2,c
 23475                           
 23476                           ;api.c: 198: outBuffer[1] = 0xC125 >> 8;
 23477  00545A  EE20 F001          	lfsr	2,1
 23478  00545E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23479  005460  26D9               	addwf	fsr2l,f,c
 23480  005462  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23481  005464  22DA               	addwfc	fsr2h,f,c
 23482  005466  0EC1               	movlw	193
 23483  005468  6EDF               	movwf	indf2,c
 23484                           
 23485                           ;api.c: 199: outBuffer[2] = (uint8_t) 0xC125;
 23486  00546A  EE20 F002          	lfsr	2,2
 23487  00546E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23488  005470  26D9               	addwf	fsr2l,f,c
 23489  005472  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23490  005474  22DA               	addwfc	fsr2h,f,c
 23491  005476  0E25               	movlw	37
 23492  005478  6EDF               	movwf	indf2,c
 23493                           
 23494                           ;api.c: 203: outBuffer[3] = (uint8_t) flash_is_busy();
 23495  00547A  EE20 F003          	lfsr	2,3
 23496  00547E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23497  005480  26D9               	addwf	fsr2l,f,c
 23498  005482  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23499  005484  22DA               	addwfc	fsr2h,f,c
 23500  005486  EC0F  F044         	call	_flash_is_busy	;wreg free
 23501  00548A  6EDF               	movwf	indf2,c
 23502                           
 23503                           ;api.c: 206: outBuffer[4] = 0x00;
 23504  00548C  EE20 F004          	lfsr	2,4
 23505  005490  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23506  005492  26D9               	addwf	fsr2l,f,c
 23507  005494  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23508  005496  22DA               	addwfc	fsr2h,f,c
 23509  005498  0E00               	movlw	0
 23510  00549A  6EDF               	movwf	indf2,c
 23511                           
 23512                           ;api.c: 207: outBuffer[5] = 0x02;
 23513  00549C  EE20 F005          	lfsr	2,5
 23514  0054A0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23515  0054A2  26D9               	addwf	fsr2l,f,c
 23516  0054A4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23517  0054A6  22DA               	addwfc	fsr2h,f,c
 23518  0054A8  0E02               	movlw	2
 23519  0054AA  6EDF               	movwf	indf2,c
 23520                           
 23521                           ;api.c: 208: outBuffer[6] = 0x01;
 23522  0054AC  EE20 F006          	lfsr	2,6
 23523  0054B0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23524  0054B2  26D9               	addwf	fsr2l,f,c
 23525  0054B4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23526  0054B6  22DA               	addwfc	fsr2h,f,c
 23527  0054B8  0E01               	movlw	1
 23528  0054BA  6EDF               	movwf	indf2,c
 23529                           
 23530                           ;api.c: 211: outBuffer[7] = ui_get_status();
 23531  0054BC  EE20 F007          	lfsr	2,7
 23532  0054C0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23533  0054C2  26D9               	addwf	fsr2l,f,c
 23534  0054C4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23535  0054C6  22DA               	addwfc	fsr2h,f,c
 23536  0054C8  ECDD  F044         	call	_ui_get_status	;wreg free
 23537  0054CC  6EDF               	movwf	indf2,c
 23538                           
 23539                           ;api.c: 214: outBuffer[8] = os.encoderCount;
 23540  0054CE  EE20 F008          	lfsr	2,8
 23541  0054D2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23542  0054D4  26D9               	addwf	fsr2l,f,c
 23543  0054D6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23544  0054D8  22DA               	addwfc	fsr2h,f,c
 23545  0054DA  C0B9  FFDF         	movff	_os,indf2	;volatile
 23546                           
 23547                           ;api.c: 215: outBuffer[9] = os.buttonCount;
 23548  0054DE  EE20 F009          	lfsr	2,9
 23549  0054E2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23550  0054E4  26D9               	addwf	fsr2l,f,c
 23551  0054E6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23552  0054E8  22DA               	addwfc	fsr2h,f,c
 23553  0054EA  C0BA  FFDF         	movff	_os+1,indf2	;volatile
 23554                           
 23555                           ;api.c: 216: outBuffer[10] = os.timeSlot;
 23556  0054EE  EE20 F00A          	lfsr	2,10
 23557  0054F2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23558  0054F4  26D9               	addwf	fsr2l,f,c
 23559  0054F6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23560  0054F8  22DA               	addwfc	fsr2h,f,c
 23561  0054FA  C0BB  FFDF         	movff	_os+2,indf2	;volatile
 23562                           
 23563                           ;api.c: 217: outBuffer[11] = os.done;
 23564  0054FE  EE20 F00B          	lfsr	2,11
 23565  005502  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23566  005504  26D9               	addwf	fsr2l,f,c
 23567  005506  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23568  005508  22DA               	addwfc	fsr2h,f,c
 23569  00550A  C0BC  FFDF         	movff	_os+3,indf2	;volatile
 23570                           
 23571                           ;api.c: 218: outBuffer[12] = os.bootloader_mode;
 23572  00550E  EE20 F00C          	lfsr	2,12
 23573  005512  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23574  005514  26D9               	addwf	fsr2l,f,c
 23575  005516  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23576  005518  22DA               	addwfc	fsr2h,f,c
 23577  00551A  C0BD  FFDF         	movff	_os+4,indf2	;volatile
 23578                           
 23579                           ;api.c: 219: outBuffer[13] = os.display_mode;
 23580  00551E  EE20 F00D          	lfsr	2,13
 23581  005522  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23582  005524  26D9               	addwf	fsr2l,f,c
 23583  005526  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23584  005528  22DA               	addwfc	fsr2h,f,c
 23585  00552A  C0BE  FFDF         	movff	_os+5,indf2	;volatile
 23586  00552E  0012               	return		;funcret
 23587  005530                     __end_of__fill_buffer_get_status:
 23588                           	opt stack 0
 23589                           tosu	equ	0xFFF
 23590                           tosh	equ	0xFFE
 23591                           tosl	equ	0xFFD
 23592                           pclath	equ	0xFFA
 23593                           tblptru	equ	0xFF8
 23594                           tblptrh	equ	0xFF7
 23595                           tblptrl	equ	0xFF6
 23596                           tablat	equ	0xFF5
 23597                           prodh	equ	0xFF4
 23598                           prodl	equ	0xFF3
 23599                           intcon	equ	0xFF2
 23600                           intcon2	equ	0xFF1
 23601                           intcon3	equ	0xFF0
 23602                           indf0	equ	0xFEF
 23603                           postinc0	equ	0xFEE
 23604                           fsr0h	equ	0xFEA
 23605                           fsr0l	equ	0xFE9
 23606                           wreg	equ	0xFE8
 23607                           indf1	equ	0xFE7
 23608                           postdec1	equ	0xFE5
 23609                           plusw1	equ	0xFE3
 23610                           fsr1h	equ	0xFE2
 23611                           fsr1l	equ	0xFE1
 23612                           indf2	equ	0xFDF
 23613                           postinc2	equ	0xFDE
 23614                           postdec2	equ	0xFDD
 23615                           plusw2	equ	0xFDB
 23616                           fsr2h	equ	0xFDA
 23617                           fsr2l	equ	0xFD9
 23618                           status	equ	0xFD8
 23619                           
 23620 ;; *************** function _flash_is_busy *****************
 23621 ;; Defined at:
 23622 ;;		line 354 in file "flash.c"
 23623 ;; Parameters:    Size  Location     Type
 23624 ;;		None
 23625 ;; Auto vars:     Size  Location     Type
 23626 ;;  result          1   19[COMRAM] unsigned char 
 23627 ;; Return value:  Size  Location     Type
 23628 ;;                  1    wreg      unsigned char 
 23629 ;; Registers used:
 23630 ;;		wreg, status,2, status,0, cstack
 23631 ;; Tracked objects:
 23632 ;;		On entry : 0/0
 23633 ;;		On exit  : 0/0
 23634 ;;		Unchanged: 0/0
 23635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23640 ;;Total ram usage:        1 bytes
 23641 ;; Hardware stack levels used:    1
 23642 ;; Hardware stack levels required when called:    3
 23643 ;; This function calls:
 23644 ;;		__flash_is_busy
 23645 ;;		_spi_set_configuration
 23646 ;; This function is called by:
 23647 ;;		__fill_buffer_get_status
 23648 ;; This function uses a non-reentrant model
 23649 ;;
 23650                           
 23651                           	psect	text109
 23652  00881E                     __ptext109:
 23653                           	opt stack 0
 23654  00881E                     _flash_is_busy:
 23655                           	opt stack 25
 23656                           
 23657                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 23658                           
 23659                           ;incstack = 0
 23660  00881E  0E00               	movlw	0
 23661  008820  EC5A  F024         	call	_spi_set_configuration
 23662                           
 23663                           ;flash.c: 362: result = _flash_is_busy();
 23664  008824  EC94  F043         	call	__flash_is_busy	;wreg free
 23665  008828  6E14               	movwf	flash_is_busy@result,c
 23666                           
 23667                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23668  00882A  0E01               	movlw	1
 23669  00882C  EC5A  F024         	call	_spi_set_configuration
 23670                           
 23671                           ;flash.c: 368: return result;
 23672  008830  5014               	movf	flash_is_busy@result,w,c
 23673  008832  0012               	return	
 23674  008834                     __end_of_flash_is_busy:
 23675                           	opt stack 0
 23676                           tosu	equ	0xFFF
 23677                           tosh	equ	0xFFE
 23678                           tosl	equ	0xFFD
 23679                           pclath	equ	0xFFA
 23680                           tblptru	equ	0xFF8
 23681                           tblptrh	equ	0xFF7
 23682                           tblptrl	equ	0xFF6
 23683                           tablat	equ	0xFF5
 23684                           prodh	equ	0xFF4
 23685                           prodl	equ	0xFF3
 23686                           intcon	equ	0xFF2
 23687                           intcon2	equ	0xFF1
 23688                           intcon3	equ	0xFF0
 23689                           indf0	equ	0xFEF
 23690                           postinc0	equ	0xFEE
 23691                           fsr0h	equ	0xFEA
 23692                           fsr0l	equ	0xFE9
 23693                           wreg	equ	0xFE8
 23694                           indf1	equ	0xFE7
 23695                           postdec1	equ	0xFE5
 23696                           plusw1	equ	0xFE3
 23697                           fsr1h	equ	0xFE2
 23698                           fsr1l	equ	0xFE1
 23699                           indf2	equ	0xFDF
 23700                           postinc2	equ	0xFDE
 23701                           postdec2	equ	0xFDD
 23702                           plusw2	equ	0xFDB
 23703                           fsr2h	equ	0xFDA
 23704                           fsr2l	equ	0xFD9
 23705                           status	equ	0xFD8
 23706                           
 23707 ;; *************** function __fill_buffer_get_file_details *****************
 23708 ;; Defined at:
 23709 ;;		line 345 in file "api.c"
 23710 ;; Parameters:    Size  Location     Type
 23711 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 23712 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23713 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 23714 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23715 ;; Auto vars:     Size  Location     Type
 23716 ;;  file_number     1   66[COMRAM] unsigned char 
 23717 ;; Return value:  Size  Location     Type
 23718 ;;                  1    wreg      void 
 23719 ;; Registers used:
 23720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23721 ;; Tracked objects:
 23722 ;;		On entry : 0/0
 23723 ;;		On exit  : 0/0
 23724 ;;		Unchanged: 0/0
 23725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23729 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23730 ;;Total ram usage:        5 bytes
 23731 ;; Hardware stack levels used:    1
 23732 ;; Hardware stack levels required when called:    7
 23733 ;; This function calls:
 23734 ;;		_fat_get_file_information
 23735 ;; This function is called by:
 23736 ;;		_api_prepare
 23737 ;; This function uses a non-reentrant model
 23738 ;;
 23739                           
 23740                           	psect	text110
 23741  007364                     __ptext110:
 23742                           	opt stack 0
 23743  007364                     __fill_buffer_get_file_details:
 23744                           	opt stack 22
 23745                           
 23746                           ;api.c: 347: uint8_t file_number = inBuffer[1];
 23747                           
 23748                           ;incstack = 0
 23749  007364  EE20 F001          	lfsr	2,1
 23750  007368  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 23751  00736A  26D9               	addwf	fsr2l,f,c
 23752  00736C  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 23753  00736E  22DA               	addwfc	fsr2h,f,c
 23754  007370  50DF               	movf	indf2,w,c
 23755  007372  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 23756                           
 23757                           ;api.c: 350: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 23758  007374  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 23759  007378  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 23760  00737C  0E80               	movlw	128
 23761  00737E  6EDF               	movwf	indf2,c
 23762                           
 23763                           ;api.c: 353: outBuffer[1] = 0xC125 >> 8;
 23764  007380  EE20 F001          	lfsr	2,1
 23765  007384  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23766  007386  26D9               	addwf	fsr2l,f,c
 23767  007388  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23768  00738A  22DA               	addwfc	fsr2h,f,c
 23769  00738C  0EC1               	movlw	193
 23770  00738E  6EDF               	movwf	indf2,c
 23771                           
 23772                           ;api.c: 354: outBuffer[2] = (uint8_t) 0xC125;
 23773  007390  EE20 F002          	lfsr	2,2
 23774  007394  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23775  007396  26D9               	addwf	fsr2l,f,c
 23776  007398  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23777  00739A  22DA               	addwfc	fsr2h,f,c
 23778  00739C  0E25               	movlw	37
 23779  00739E  6EDF               	movwf	indf2,c
 23780                           
 23781                           ;api.c: 357: outBuffer[3] = file_number;
 23782  0073A0  EE20 F003          	lfsr	2,3
 23783  0073A4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23784  0073A6  26D9               	addwf	fsr2l,f,c
 23785  0073A8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23786  0073AA  22DA               	addwfc	fsr2h,f,c
 23787  0073AC  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 23788                           
 23789                           ;api.c: 360: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 23790  0073B0  EE20 F004          	lfsr	2,4
 23791  0073B4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 23792  0073B6  26D9               	addwf	fsr2l,f,c
 23793  0073B8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 23794  0073BA  22DA               	addwfc	fsr2h,f,c
 23795  0073BC  0E05               	movlw	5
 23796  0073BE  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 23797  0073C0  6E37               	movwf	fat_get_file_information@data,c
 23798  0073C2  0E00               	movlw	0
 23799  0073C4  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 23800  0073C6  6E38               	movwf	fat_get_file_information@data+1,c
 23801  0073C8  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 23802  0073CA  ECCF  F038         	call	_fat_get_file_information
 23803  0073CE  6EDF               	movwf	indf2,c
 23804  0073D0  0012               	return		;funcret
 23805  0073D2                     __end_of__fill_buffer_get_file_details:
 23806                           	opt stack 0
 23807                           tosu	equ	0xFFF
 23808                           tosh	equ	0xFFE
 23809                           tosl	equ	0xFFD
 23810                           pclath	equ	0xFFA
 23811                           tblptru	equ	0xFF8
 23812                           tblptrh	equ	0xFF7
 23813                           tblptrl	equ	0xFF6
 23814                           tablat	equ	0xFF5
 23815                           prodh	equ	0xFF4
 23816                           prodl	equ	0xFF3
 23817                           intcon	equ	0xFF2
 23818                           intcon2	equ	0xFF1
 23819                           intcon3	equ	0xFF0
 23820                           indf0	equ	0xFEF
 23821                           postinc0	equ	0xFEE
 23822                           fsr0h	equ	0xFEA
 23823                           fsr0l	equ	0xFE9
 23824                           wreg	equ	0xFE8
 23825                           indf1	equ	0xFE7
 23826                           postdec1	equ	0xFE5
 23827                           plusw1	equ	0xFE3
 23828                           fsr1h	equ	0xFE2
 23829                           fsr1l	equ	0xFE1
 23830                           indf2	equ	0xFDF
 23831                           postinc2	equ	0xFDE
 23832                           postdec2	equ	0xFDD
 23833                           plusw2	equ	0xFDB
 23834                           fsr2h	equ	0xFDA
 23835                           fsr2l	equ	0xFD9
 23836                           status	equ	0xFD8
 23837                           
 23838 ;; *************** function __fill_buffer_get_display *****************
 23839 ;; Defined at:
 23840 ;;		line 223 in file "api.c"
 23841 ;; Parameters:    Size  Location     Type
 23842 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 23843 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23844 ;;  secondHalf      1    6[COMRAM] unsigned char 
 23845 ;; Auto vars:     Size  Location     Type
 23846 ;;  position        1   15[COMRAM] unsigned char 
 23847 ;;  start_line      1   14[COMRAM] unsigned char 
 23848 ;;  line            1   13[COMRAM] unsigned char 
 23849 ;;  cntr            1   12[COMRAM] unsigned char 
 23850 ;; Return value:  Size  Location     Type
 23851 ;;                  1    wreg      void 
 23852 ;; Registers used:
 23853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23854 ;; Tracked objects:
 23855 ;;		On entry : 0/0
 23856 ;;		On exit  : 0/0
 23857 ;;		Unchanged: 0/0
 23858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23859 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23860 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23861 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23862 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23863 ;;Total ram usage:       12 bytes
 23864 ;; Hardware stack levels used:    1
 23865 ;; Hardware stack levels required when called:    1
 23866 ;; This function calls:
 23867 ;;		_display_get_character
 23868 ;; This function is called by:
 23869 ;;		_api_prepare
 23870 ;; This function uses a non-reentrant model
 23871 ;;
 23872                           
 23873                           	psect	text111
 23874  005FA8                     __ptext111:
 23875                           	opt stack 0
 23876  005FA8                     __fill_buffer_get_display:
 23877                           	opt stack 28
 23878                           
 23879                           ;api.c: 225: uint8_t cntr;;api.c: 226: uint8_t line;;api.c: 227: uint8_t start_line;;api
      +                          .c: 228: uint8_t position;;api.c: 231: if(secondHalf)
 23880                           
 23881                           ;incstack = 0
 23882  005FA8  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 23883  005FAA  B4D8               	btfsc	status,2,c
 23884  005FAC  D006               	goto	l2664
 23885                           
 23886                           ;api.c: 232: {;api.c: 233: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 23887  005FAE  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 23888  005FB2  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 23889  005FB6  0E12               	movlw	18
 23890  005FB8  D005               	goto	L31
 23891  005FBA                     l2664:
 23892                           
 23893                           ;api.c: 235: else;api.c: 236: {;api.c: 237: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 23894  005FBA  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 23895  005FBE  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 23896  005FC2  0E11               	movlw	17
 23897  005FC4                     L31:
 23898  005FC4  6EDF               	movwf	indf2,c
 23899                           
 23900                           ;api.c: 238: };api.c: 241: outBuffer[1] = 0xC125 >> 8;
 23901  005FC6  EE20 F001          	lfsr	2,1
 23902  005FCA  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 23903  005FCC  26D9               	addwf	fsr2l,f,c
 23904  005FCE  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 23905  005FD0  22DA               	addwfc	fsr2h,f,c
 23906  005FD2  0EC1               	movlw	193
 23907  005FD4  6EDF               	movwf	indf2,c
 23908                           
 23909                           ;api.c: 242: outBuffer[2] = (uint8_t) 0xC125;
 23910  005FD6  EE20 F002          	lfsr	2,2
 23911  005FDA  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 23912  005FDC  26D9               	addwf	fsr2l,f,c
 23913  005FDE  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 23914  005FE0  22DA               	addwfc	fsr2h,f,c
 23915  005FE2  0E25               	movlw	37
 23916  005FE4  6EDF               	movwf	indf2,c
 23917                           
 23918                           ;api.c: 245: cntr = 3;
 23919  005FE6  0E03               	movlw	3
 23920  005FE8  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 23921                           
 23922                           ;api.c: 246: if(secondHalf)
 23923  005FEA  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 23924  005FEC  B4D8               	btfsc	status,2,c
 23925  005FEE  D002               	goto	l2666
 23926                           
 23927                           ;api.c: 247: {;api.c: 248: start_line = 2;
 23928  005FF0  0E02               	movlw	2
 23929  005FF2  D001               	goto	L32
 23930  005FF4                     l2666:
 23931                           
 23932                           ;api.c: 250: else;api.c: 251: {;api.c: 252: start_line = 0;
 23933  005FF4  0E00               	movlw	0
 23934  005FF6                     L32:
 23935  005FF6  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 23936                           
 23937                           ;api.c: 253: };api.c: 254: for(line=start_line; line<start_line+2; ++line)
 23938  005FF8  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 23939  005FFC  D01A               	goto	l2668
 23940  005FFE                     
 23941                           ;api.c: 255: {;api.c: 256: for(position=0; position<20; ++position)
 23942  005FFE  0E00               	movlw	0
 23943  006000  6E10               	movwf	__fill_buffer_get_display@position,c
 23944  006002                     l14084:
 23945  006002  0E13               	movlw	19
 23946  006004  6410               	cpfsgt	__fill_buffer_get_display@position,c
 23947  006006  D001               	goto	l2670
 23948  006008  D013               	goto	u11170
 23949  00600A                     l2670:
 23950                           
 23951                           ;api.c: 257: {;api.c: 258: outBuffer[cntr] = display_get_character(line, position);
 23952  00600A  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 23953  00600E  500E               	movf	__fill_buffer_get_display@line,w,c
 23954  006010  ECB5  F042         	call	_display_get_character
 23955  006014  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 23956  006016  500D               	movf	__fill_buffer_get_display@cntr,w,c
 23957  006018  0D01               	mullw	1
 23958  00601A  50F3               	movf	prodl,w,c
 23959  00601C  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 23960  00601E  6ED9               	movwf	fsr2l,c
 23961  006020  50F4               	movf	prodh,w,c
 23962  006022  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 23963  006024  6EDA               	movwf	fsr2h,c
 23964  006026  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 23965                           
 23966                           ;api.c: 259: ++cntr;
 23967  00602A  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 23968  00602C  2A10               	incf	__fill_buffer_get_display@position,f,c
 23969  00602E  D7E9               	goto	l14084
 23970  006030                     u11170:
 23971  006030  2A0E               	incf	__fill_buffer_get_display@line,f,c
 23972  006032                     l2668:
 23973  006032  500F               	movf	__fill_buffer_get_display@start_line,w,c
 23974  006034  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 23975  006036  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 23976  006038  0E02               	movlw	2
 23977  00603A  2608               	addwf	??__fill_buffer_get_display,f,c
 23978  00603C  0E00               	movlw	0
 23979  00603E  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 23980  006040  500E               	movf	__fill_buffer_get_display@line,w,c
 23981  006042  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 23982  006044  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 23983  006046  5008               	movf	??__fill_buffer_get_display,w,c
 23984  006048  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 23985  00604A  500B               	movf	??__fill_buffer_get_display+3,w,c
 23986  00604C  0A80               	xorlw	128
 23987  00604E  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 23988  006050  5009               	movf	??__fill_buffer_get_display+1,w,c
 23989  006052  0A80               	xorlw	128
 23990  006054  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 23991  006056  B0D8               	btfsc	status,0,c
 23992  006058  0012               	return	
 23993  00605A  D7D1               	goto	l2669
 23994  00605C                     __end_of__fill_buffer_get_display:
 23995                           	opt stack 0
 23996                           tosu	equ	0xFFF
 23997                           tosh	equ	0xFFE
 23998                           tosl	equ	0xFFD
 23999                           pclath	equ	0xFFA
 24000                           tblptru	equ	0xFF8
 24001                           tblptrh	equ	0xFF7
 24002                           tblptrl	equ	0xFF6
 24003                           tablat	equ	0xFF5
 24004                           prodh	equ	0xFF4
 24005                           prodl	equ	0xFF3
 24006                           intcon	equ	0xFF2
 24007                           intcon2	equ	0xFF1
 24008                           intcon3	equ	0xFF0
 24009                           indf0	equ	0xFEF
 24010                           postinc0	equ	0xFEE
 24011                           fsr0h	equ	0xFEA
 24012                           fsr0l	equ	0xFE9
 24013                           wreg	equ	0xFE8
 24014                           indf1	equ	0xFE7
 24015                           postdec1	equ	0xFE5
 24016                           plusw1	equ	0xFE3
 24017                           fsr1h	equ	0xFE2
 24018                           fsr1l	equ	0xFE1
 24019                           indf2	equ	0xFDF
 24020                           postinc2	equ	0xFDE
 24021                           postdec2	equ	0xFDD
 24022                           plusw2	equ	0xFDB
 24023                           fsr2h	equ	0xFDA
 24024                           fsr2l	equ	0xFD9
 24025                           status	equ	0xFD8
 24026                           
 24027 ;; *************** function _display_get_character *****************
 24028 ;; Defined at:
 24029 ;;		line 70 in file "display.c"
 24030 ;; Parameters:    Size  Location     Type
 24031 ;;  line            1    wreg     unsigned char 
 24032 ;;  position        1    0[COMRAM] unsigned char 
 24033 ;; Auto vars:     Size  Location     Type
 24034 ;;  line            1    3[COMRAM] unsigned char 
 24035 ;; Return value:  Size  Location     Type
 24036 ;;                  1    wreg      unsigned char 
 24037 ;; Registers used:
 24038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24039 ;; Tracked objects:
 24040 ;;		On entry : 0/0
 24041 ;;		On exit  : 0/0
 24042 ;;		Unchanged: 0/0
 24043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24044 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24048 ;;Total ram usage:        4 bytes
 24049 ;; Hardware stack levels used:    1
 24050 ;; This function calls:
 24051 ;;		Nothing
 24052 ;; This function is called by:
 24053 ;;		__fill_buffer_get_display
 24054 ;; This function uses a non-reentrant model
 24055 ;;
 24056                           
 24057                           	psect	text112
 24058  00856A                     __ptext112:
 24059                           	opt stack 0
 24060  00856A                     _display_get_character:
 24061                           	opt stack 28
 24062                           
 24063                           ;incstack = 0
 24064                           ;display_get_character@line stored from wreg
 24065  00856A  6E04               	movwf	display_get_character@line,c
 24066                           
 24067                           ;display.c: 72: return display_content[line][position];
 24068  00856C  5004               	movf	display_get_character@line,w,c
 24069  00856E  0D14               	mullw	20
 24070  008570  0E00               	movlw	low _display_content
 24071  008572  6E02               	movwf	??_display_get_character& (0+255),c
 24072  008574  0E02               	movlw	high _display_content
 24073  008576  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24074  008578  50F3               	movf	prodl,w,c
 24075  00857A  2602               	addwf	??_display_get_character,f,c
 24076  00857C  50F4               	movf	prodh,w,c
 24077  00857E  2203               	addwfc	??_display_get_character+1,f,c
 24078  008580  5001               	movf	display_get_character@position,w,c
 24079  008582  0D01               	mullw	1
 24080  008584  50F3               	movf	prodl,w,c
 24081  008586  2402               	addwf	??_display_get_character,w,c
 24082  008588  6ED9               	movwf	fsr2l,c
 24083  00858A  50F4               	movf	prodh,w,c
 24084  00858C  2003               	addwfc	??_display_get_character+1,w,c
 24085  00858E  6EDA               	movwf	fsr2h,c
 24086  008590  50DF               	movf	indf2,w,c
 24087  008592  0012               	return	
 24088  008594                     __end_of_display_get_character:
 24089                           	opt stack 0
 24090                           tosu	equ	0xFFF
 24091                           tosh	equ	0xFFE
 24092                           tosl	equ	0xFFD
 24093                           pclath	equ	0xFFA
 24094                           tblptru	equ	0xFF8
 24095                           tblptrh	equ	0xFF7
 24096                           tblptrl	equ	0xFF6
 24097                           tablat	equ	0xFF5
 24098                           prodh	equ	0xFF4
 24099                           prodl	equ	0xFF3
 24100                           intcon	equ	0xFF2
 24101                           intcon2	equ	0xFF1
 24102                           intcon3	equ	0xFF0
 24103                           indf0	equ	0xFEF
 24104                           postinc0	equ	0xFEE
 24105                           fsr0h	equ	0xFEA
 24106                           fsr0l	equ	0xFE9
 24107                           wreg	equ	0xFE8
 24108                           indf1	equ	0xFE7
 24109                           postdec1	equ	0xFE5
 24110                           plusw1	equ	0xFE3
 24111                           fsr1h	equ	0xFE2
 24112                           fsr1l	equ	0xFE1
 24113                           indf2	equ	0xFDF
 24114                           postinc2	equ	0xFDE
 24115                           postdec2	equ	0xFDD
 24116                           plusw2	equ	0xFDB
 24117                           fsr2h	equ	0xFDA
 24118                           fsr2l	equ	0xFD9
 24119                           status	equ	0xFD8
 24120                           
 24121 ;; *************** function __fill_buffer_get_configuration *****************
 24122 ;; Defined at:
 24123 ;;		line 324 in file "api.c"
 24124 ;; Parameters:    Size  Location     Type
 24125 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 24126 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24127 ;; Auto vars:     Size  Location     Type
 24128 ;;		None
 24129 ;; Return value:  Size  Location     Type
 24130 ;;                  1    wreg      void 
 24131 ;; Registers used:
 24132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24133 ;; Tracked objects:
 24134 ;;		On entry : 0/0
 24135 ;;		On exit  : 0/0
 24136 ;;		Unchanged: 0/0
 24137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24142 ;;Total ram usage:        2 bytes
 24143 ;; Hardware stack levels used:    1
 24144 ;; This function calls:
 24145 ;;		Nothing
 24146 ;; This function is called by:
 24147 ;;		_api_prepare
 24148 ;; This function uses a non-reentrant model
 24149 ;;
 24150                           
 24151                           	psect	text113
 24152  0066DA                     __ptext113:
 24153                           	opt stack 0
 24154  0066DA                     __fill_buffer_get_configuration:
 24155                           	opt stack 29
 24156                           
 24157                           ;api.c: 327: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24158                           
 24159                           ;incstack = 0
 24160  0066DA  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 24161  0066DE  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 24162  0066E2  0E10               	movlw	16
 24163  0066E4  6EDF               	movwf	indf2,c
 24164                           
 24165                           ;api.c: 330: outBuffer[1] = 0xC125 >> 8;
 24166  0066E6  EE20 F001          	lfsr	2,1
 24167  0066EA  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24168  0066EC  26D9               	addwf	fsr2l,f,c
 24169  0066EE  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24170  0066F0  22DA               	addwfc	fsr2h,f,c
 24171  0066F2  0EC1               	movlw	193
 24172  0066F4  6EDF               	movwf	indf2,c
 24173                           
 24174                           ;api.c: 331: outBuffer[2] = (uint8_t) 0xC125;
 24175  0066F6  EE20 F002          	lfsr	2,2
 24176  0066FA  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24177  0066FC  26D9               	addwf	fsr2l,f,c
 24178  0066FE  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24179  006700  22DA               	addwfc	fsr2h,f,c
 24180  006702  0E25               	movlw	37
 24181  006704  6EDF               	movwf	indf2,c
 24182                           
 24183                           ;api.c: 334: outBuffer[3] = communicationSettings.spiMode;
 24184  006706  EE20 F003          	lfsr	2,3
 24185  00670A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24186  00670C  26D9               	addwf	fsr2l,f,c
 24187  00670E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24188  006710  22DA               	addwfc	fsr2h,f,c
 24189  006712  C139  FFDF         	movff	_communicationSettings,indf2
 24190                           
 24191                           ;api.c: 335: outBuffer[4] = communicationSettings.spiFrequency;
 24192  006716  EE20 F004          	lfsr	2,4
 24193  00671A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24194  00671C  26D9               	addwf	fsr2l,f,c
 24195  00671E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24196  006720  22DA               	addwfc	fsr2h,f,c
 24197  006722  C13A  FFDF         	movff	_communicationSettings+1,indf2
 24198                           
 24199                           ;api.c: 336: outBuffer[5] = communicationSettings.spiPolarity;
 24200  006726  EE20 F005          	lfsr	2,5
 24201  00672A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24202  00672C  26D9               	addwf	fsr2l,f,c
 24203  00672E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24204  006730  22DA               	addwfc	fsr2h,f,c
 24205  006732  C13B  FFDF         	movff	_communicationSettings+2,indf2
 24206                           
 24207                           ;api.c: 339: outBuffer[6] = communicationSettings.i2cMode;
 24208  006736  EE20 F006          	lfsr	2,6
 24209  00673A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24210  00673C  26D9               	addwf	fsr2l,f,c
 24211  00673E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24212  006740  22DA               	addwfc	fsr2h,f,c
 24213  006742  C13C  FFDF         	movff	_communicationSettings+3,indf2
 24214                           
 24215                           ;api.c: 340: outBuffer[7] = communicationSettings.i2cFrequency;
 24216  006746  EE20 F007          	lfsr	2,7
 24217  00674A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24218  00674C  26D9               	addwf	fsr2l,f,c
 24219  00674E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24220  006750  22DA               	addwfc	fsr2h,f,c
 24221  006752  C13D  FFDF         	movff	_communicationSettings+4,indf2
 24222                           
 24223                           ;api.c: 341: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 24224  006756  EE20 F008          	lfsr	2,8
 24225  00675A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24226  00675C  26D9               	addwf	fsr2l,f,c
 24227  00675E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24228  006760  22DA               	addwfc	fsr2h,f,c
 24229  006762  C13E  FFDF         	movff	_communicationSettings+5,indf2
 24230                           
 24231                           ;api.c: 342: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 24232  006766  EE20 F009          	lfsr	2,9
 24233  00676A  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24234  00676C  26D9               	addwf	fsr2l,f,c
 24235  00676E  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24236  006770  22DA               	addwfc	fsr2h,f,c
 24237  006772  C13F  FFDF         	movff	_communicationSettings+6,indf2
 24238  006776  0012               	return		;funcret
 24239  006778                     __end_of__fill_buffer_get_configuration:
 24240                           	opt stack 0
 24241                           tosu	equ	0xFFF
 24242                           tosh	equ	0xFFE
 24243                           tosl	equ	0xFFD
 24244                           pclath	equ	0xFFA
 24245                           tblptru	equ	0xFF8
 24246                           tblptrh	equ	0xFF7
 24247                           tblptrl	equ	0xFF6
 24248                           tablat	equ	0xFF5
 24249                           prodh	equ	0xFF4
 24250                           prodl	equ	0xFF3
 24251                           intcon	equ	0xFF2
 24252                           intcon2	equ	0xFF1
 24253                           intcon3	equ	0xFF0
 24254                           indf0	equ	0xFEF
 24255                           postinc0	equ	0xFEE
 24256                           fsr0h	equ	0xFEA
 24257                           fsr0l	equ	0xFE9
 24258                           wreg	equ	0xFE8
 24259                           indf1	equ	0xFE7
 24260                           postdec1	equ	0xFE5
 24261                           plusw1	equ	0xFE3
 24262                           fsr1h	equ	0xFE2
 24263                           fsr1l	equ	0xFE1
 24264                           indf2	equ	0xFDF
 24265                           postinc2	equ	0xFDE
 24266                           postdec2	equ	0xFDD
 24267                           plusw2	equ	0xFDB
 24268                           fsr2h	equ	0xFDA
 24269                           fsr2l	equ	0xFD9
 24270                           status	equ	0xFD8
 24271                           
 24272 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24273 ;; Defined at:
 24274 ;;		line 264 in file "api.c"
 24275 ;; Parameters:    Size  Location     Type
 24276 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24277 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24278 ;; Auto vars:     Size  Location     Type
 24279 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24280 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24281 ;;  cntr            1   10[COMRAM] unsigned char 
 24282 ;;  data_length     1    9[COMRAM] unsigned char 
 24283 ;; Return value:  Size  Location     Type
 24284 ;;                  1    wreg      void 
 24285 ;; Registers used:
 24286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24287 ;; Tracked objects:
 24288 ;;		On entry : 0/0
 24289 ;;		On exit  : 0/0
 24290 ;;		Unchanged: 0/0
 24291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24293 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24294 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24295 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24296 ;;Total ram usage:       13 bytes
 24297 ;; Hardware stack levels used:    1
 24298 ;; Hardware stack levels required when called:    1
 24299 ;; This function calls:
 24300 ;;		_bootloader_get_entries
 24301 ;;		_bootloader_get_error
 24302 ;;		_bootloader_get_file_size
 24303 ;;		_bootloader_get_flashPagesWritten
 24304 ;;		_bootloader_get_rec_address
 24305 ;;		_bootloader_get_rec_checksum
 24306 ;;		_bootloader_get_rec_checksumCheck
 24307 ;;		_bootloader_get_rec_data
 24308 ;;		_bootloader_get_rec_dataLength
 24309 ;;		_bootloader_get_rec_recordType
 24310 ;;		_bootloader_get_total_entries
 24311 ;; This function is called by:
 24312 ;;		_api_prepare
 24313 ;; This function uses a non-reentrant model
 24314 ;;
 24315                           
 24316                           	psect	text114
 24317  002E7A                     __ptext114:
 24318                           	opt stack 0
 24319  002E7A                     __fill_buffer_get_bootloader_details:
 24320                           	opt stack 28
 24321                           
 24322                           ;api.c: 266: uint8_t cntr;;api.c: 267: uint8_t data_length;;api.c: 268: uint16_t buffer_
      +                          small;;api.c: 269: uint32_t buffer_large;;api.c: 272: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24323                           
 24324                           ;incstack = 0
 24325  002E7A  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24326  002E7E  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24327  002E82  0E13               	movlw	19
 24328  002E84  6EDF               	movwf	indf2,c
 24329                           
 24330                           ;api.c: 275: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 24331  002E86  EE20 F001          	lfsr	2,1
 24332  002E8A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24333  002E8C  26D9               	addwf	fsr2l,f,c
 24334  002E8E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24335  002E90  22DA               	addwfc	fsr2h,f,c
 24336  002E92  0EC1               	movlw	193
 24337  002E94  6EDF               	movwf	indf2,c
 24338                           
 24339                           ;api.c: 276: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 24340  002E96  EE20 F002          	lfsr	2,2
 24341  002E9A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24342  002E9C  26D9               	addwf	fsr2l,f,c
 24343  002E9E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24344  002EA0  22DA               	addwfc	fsr2h,f,c
 24345  002EA2  0E25               	movlw	37
 24346  002EA4  6EDF               	movwf	indf2,c
 24347                           
 24348                           ;api.c: 279: buffer_large = bootloader_get_file_size();
 24349  002EA6  EC42  F044         	call	_bootloader_get_file_size	;wreg free
 24350  002EAA  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24351  002EAE  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24352  002EB2  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24353  002EB6  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24354                           
 24355                           ;api.c: 280: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24356  002EBA  EE20 F003          	lfsr	2,3
 24357  002EBE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24358  002EC0  26D9               	addwf	fsr2l,f,c
 24359  002EC2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24360  002EC4  22DA               	addwfc	fsr2h,f,c
 24361  002EC6  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24362  002EC8  6EDF               	movwf	indf2,c
 24363                           
 24364                           ;api.c: 281: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24365  002ECA  EE20 F004          	lfsr	2,4
 24366  002ECE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24367  002ED0  26D9               	addwf	fsr2l,f,c
 24368  002ED2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24369  002ED4  22DA               	addwfc	fsr2h,f,c
 24370  002ED6  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24371                           
 24372                           ;api.c: 282: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24373  002EDA  EE20 F005          	lfsr	2,5
 24374  002EDE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24375  002EE0  26D9               	addwf	fsr2l,f,c
 24376  002EE2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24377  002EE4  22DA               	addwfc	fsr2h,f,c
 24378  002EE6  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24379  002EE8  6EDF               	movwf	indf2,c
 24380                           
 24381                           ;api.c: 283: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24382  002EEA  EE20 F006          	lfsr	2,6
 24383  002EEE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24384  002EF0  26D9               	addwf	fsr2l,f,c
 24385  002EF2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24386  002EF4  22DA               	addwfc	fsr2h,f,c
 24387  002EF6  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24388                           
 24389                           ;api.c: 285: buffer_small = bootloader_get_entries();
 24390  002EFA  ECAC  F044         	call	_bootloader_get_entries	;wreg free
 24391  002EFE  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24392  002F02  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24393                           
 24394                           ;api.c: 286: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24395  002F06  EE20 F007          	lfsr	2,7
 24396  002F0A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24397  002F0C  26D9               	addwf	fsr2l,f,c
 24398  002F0E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24399  002F10  22DA               	addwfc	fsr2h,f,c
 24400  002F12  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24401  002F14  6EDF               	movwf	indf2,c
 24402                           
 24403                           ;api.c: 287: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24404  002F16  EE20 F008          	lfsr	2,8
 24405  002F1A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24406  002F1C  26D9               	addwf	fsr2l,f,c
 24407  002F1E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24408  002F20  22DA               	addwfc	fsr2h,f,c
 24409  002F22  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24410                           
 24411                           ;api.c: 289: buffer_small = bootloader_get_total_entries();
 24412  002F26  ECB6  F044         	call	_bootloader_get_total_entries	;wreg free
 24413  002F2A  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24414  002F2E  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24415                           
 24416                           ;api.c: 290: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24417  002F32  EE20 F009          	lfsr	2,9
 24418  002F36  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24419  002F38  26D9               	addwf	fsr2l,f,c
 24420  002F3A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24421  002F3C  22DA               	addwfc	fsr2h,f,c
 24422  002F3E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24423  002F40  6EDF               	movwf	indf2,c
 24424                           
 24425                           ;api.c: 291: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24426  002F42  EE20 F00A          	lfsr	2,10
 24427  002F46  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24428  002F48  26D9               	addwf	fsr2l,f,c
 24429  002F4A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24430  002F4C  22DA               	addwfc	fsr2h,f,c
 24431  002F4E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24432                           
 24433                           ;api.c: 293: outBuffer[11] = (uint8_t) bootloader_get_error();
 24434  002F52  EE20 F00B          	lfsr	2,11
 24435  002F56  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24436  002F58  26D9               	addwf	fsr2l,f,c
 24437  002F5A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24438  002F5C  22DA               	addwfc	fsr2h,f,c
 24439  002F5E  ECE0  F044         	call	_bootloader_get_error	;wreg free
 24440  002F62  6EDF               	movwf	indf2,c
 24441                           
 24442                           ;api.c: 295: buffer_small = bootloader_get_flashPagesWritten();
 24443  002F64  ECB1  F044         	call	_bootloader_get_flashPagesWritten	;wreg free
 24444  002F68  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24445  002F6C  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24446                           
 24447                           ;api.c: 296: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24448  002F70  EE20 F00C          	lfsr	2,12
 24449  002F74  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24450  002F76  26D9               	addwf	fsr2l,f,c
 24451  002F78  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24452  002F7A  22DA               	addwfc	fsr2h,f,c
 24453  002F7C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24454  002F7E  6EDF               	movwf	indf2,c
 24455                           
 24456                           ;api.c: 297: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24457  002F80  EE20 F00D          	lfsr	2,13
 24458  002F84  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24459  002F86  26D9               	addwf	fsr2l,f,c
 24460  002F88  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24461  002F8A  22DA               	addwfc	fsr2h,f,c
 24462  002F8C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24463                           
 24464                           ;api.c: 300: buffer_small = bootloader_get_rec_dataLength();
 24465  002F90  ECA2  F044         	call	_bootloader_get_rec_dataLength	;wreg free
 24466  002F94  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24467  002F98  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24468                           
 24469                           ;api.c: 301: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24470  002F9C  EE20 F00E          	lfsr	2,14
 24471  002FA0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24472  002FA2  26D9               	addwf	fsr2l,f,c
 24473  002FA4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24474  002FA6  22DA               	addwfc	fsr2h,f,c
 24475  002FA8  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24476  002FAA  6EDF               	movwf	indf2,c
 24477                           
 24478                           ;api.c: 302: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24479  002FAC  EE20 F00F          	lfsr	2,15
 24480  002FB0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24481  002FB2  26D9               	addwf	fsr2l,f,c
 24482  002FB4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24483  002FB6  22DA               	addwfc	fsr2h,f,c
 24484  002FB8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24485                           
 24486                           ;api.c: 304: buffer_small = bootloader_get_rec_address();
 24487  002FBC  ECA7  F044         	call	_bootloader_get_rec_address	;wreg free
 24488  002FC0  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24489  002FC4  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24490                           
 24491                           ;api.c: 305: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24492  002FC8  EE20 F010          	lfsr	2,16
 24493  002FCC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24494  002FCE  26D9               	addwf	fsr2l,f,c
 24495  002FD0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24496  002FD2  22DA               	addwfc	fsr2h,f,c
 24497  002FD4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24498  002FD6  6EDF               	movwf	indf2,c
 24499                           
 24500                           ;api.c: 306: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24501  002FD8  EE20 F011          	lfsr	2,17
 24502  002FDC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24503  002FDE  26D9               	addwf	fsr2l,f,c
 24504  002FE0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24505  002FE2  22DA               	addwfc	fsr2h,f,c
 24506  002FE4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24507                           
 24508                           ;api.c: 308: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24509  002FE8  EE20 F012          	lfsr	2,18
 24510  002FEC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24511  002FEE  26D9               	addwf	fsr2l,f,c
 24512  002FF0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24513  002FF2  22DA               	addwfc	fsr2h,f,c
 24514  002FF4  ECD4  F044         	call	_bootloader_get_rec_recordType	;wreg free
 24515  002FF8  6EDF               	movwf	indf2,c
 24516                           
 24517                           ;api.c: 309: outBuffer[19] = bootloader_get_rec_checksum();
 24518  002FFA  EE20 F013          	lfsr	2,19
 24519  002FFE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24520  003000  26D9               	addwf	fsr2l,f,c
 24521  003002  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24522  003004  22DA               	addwfc	fsr2h,f,c
 24523  003006  ECDA  F044         	call	_bootloader_get_rec_checksum	;wreg free
 24524  00300A  6EDF               	movwf	indf2,c
 24525                           
 24526                           ;api.c: 310: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24527  00300C  EE20 F014          	lfsr	2,20
 24528  003010  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24529  003012  26D9               	addwf	fsr2l,f,c
 24530  003014  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24531  003016  22DA               	addwfc	fsr2h,f,c
 24532  003018  ECD7  F044         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24533  00301C  6EDF               	movwf	indf2,c
 24534                           
 24535                           ;api.c: 312: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24536  00301E  ECA2  F044         	call	_bootloader_get_rec_dataLength	;wreg free
 24537  003022  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24538  003024  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24539                           
 24540                           ;api.c: 313: if(data_length>43)
 24541  003026  0E2B               	movlw	43
 24542  003028  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24543  00302A  D002               	goto	l2676
 24544                           
 24545                           ;api.c: 314: {;api.c: 316: data_length = 43;
 24546  00302C  0E2B               	movlw	43
 24547  00302E  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24548  003030                     l2676:
 24549                           
 24550                           ;api.c: 317: };api.c: 318: for(cntr=0; cntr<data_length; ++cntr)
 24551  003030  0E00               	movlw	0
 24552  003032  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24553  003034  D014               	goto	l2677
 24554  003036                     
 24555                           ;api.c: 319: {;api.c: 320: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24556  003036  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24557  003038  EC1A  F044         	call	_bootloader_get_rec_data
 24558  00303C  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24559  00303E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24560  003040  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24561  003042  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24562  003044  0E15               	movlw	21
 24563  003046  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24564  003048  0E00               	movlw	0
 24565  00304A  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 24566  00304C  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 24567  00304E  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24568  003050  6ED9               	movwf	fsr2l,c
 24569  003052  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 24570  003054  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24571  003056  6EDA               	movwf	fsr2h,c
 24572  003058  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 24573  00305C  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 24574  00305E                     l2677:
 24575  00305E  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 24576  003060  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 24577  003062  B0D8               	btfsc	status,0,c
 24578  003064  0012               	return	
 24579  003066  D7E7               	goto	l2678
 24580  003068                     __end_of__fill_buffer_get_bootloader_details:
 24581                           	opt stack 0
 24582                           tosu	equ	0xFFF
 24583                           tosh	equ	0xFFE
 24584                           tosl	equ	0xFFD
 24585                           pclath	equ	0xFFA
 24586                           tblptru	equ	0xFF8
 24587                           tblptrh	equ	0xFF7
 24588                           tblptrl	equ	0xFF6
 24589                           tablat	equ	0xFF5
 24590                           prodh	equ	0xFF4
 24591                           prodl	equ	0xFF3
 24592                           intcon	equ	0xFF2
 24593                           intcon2	equ	0xFF1
 24594                           intcon3	equ	0xFF0
 24595                           indf0	equ	0xFEF
 24596                           postinc0	equ	0xFEE
 24597                           fsr0h	equ	0xFEA
 24598                           fsr0l	equ	0xFE9
 24599                           wreg	equ	0xFE8
 24600                           indf1	equ	0xFE7
 24601                           postdec1	equ	0xFE5
 24602                           plusw1	equ	0xFE3
 24603                           fsr1h	equ	0xFE2
 24604                           fsr1l	equ	0xFE1
 24605                           indf2	equ	0xFDF
 24606                           postinc2	equ	0xFDE
 24607                           postdec2	equ	0xFDD
 24608                           plusw2	equ	0xFDB
 24609                           fsr2h	equ	0xFDA
 24610                           fsr2l	equ	0xFD9
 24611                           status	equ	0xFD8
 24612                           
 24613 ;; *************** function _bootloader_get_rec_recordType *****************
 24614 ;; Defined at:
 24615 ;;		line 491 in file "bootloader.c"
 24616 ;; Parameters:    Size  Location     Type
 24617 ;;		None
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      enum E6772
 24622 ;; Registers used:
 24623 ;;		wreg, status,2
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 0/0
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24633 ;;Total ram usage:        0 bytes
 24634 ;; Hardware stack levels used:    1
 24635 ;; This function calls:
 24636 ;;		Nothing
 24637 ;; This function is called by:
 24638 ;;		__fill_buffer_get_bootloader_details
 24639 ;; This function uses a non-reentrant model
 24640 ;;
 24641                           
 24642                           	psect	text115
 24643  0089A8                     __ptext115:
 24644                           	opt stack 0
 24645  0089A8                     _bootloader_get_rec_recordType:
 24646                           	opt stack 28
 24647                           
 24648                           ;bootloader.c: 493: return hex_file_entry.recordType;
 24649                           
 24650                           ;incstack = 0
 24651  0089A8  0101               	movlb	1	; () banked
 24652  0089AA  51BF               	movf	(_hex_file_entry+4)& (0+255),w,b
 24653  0089AC  0012               	return	
 24654  0089AE                     __end_of_bootloader_get_rec_recordType:
 24655                           	opt stack 0
 24656                           tosu	equ	0xFFF
 24657                           tosh	equ	0xFFE
 24658                           tosl	equ	0xFFD
 24659                           pclath	equ	0xFFA
 24660                           tblptru	equ	0xFF8
 24661                           tblptrh	equ	0xFF7
 24662                           tblptrl	equ	0xFF6
 24663                           tablat	equ	0xFF5
 24664                           prodh	equ	0xFF4
 24665                           prodl	equ	0xFF3
 24666                           intcon	equ	0xFF2
 24667                           intcon2	equ	0xFF1
 24668                           intcon3	equ	0xFF0
 24669                           indf0	equ	0xFEF
 24670                           postinc0	equ	0xFEE
 24671                           fsr0h	equ	0xFEA
 24672                           fsr0l	equ	0xFE9
 24673                           wreg	equ	0xFE8
 24674                           indf1	equ	0xFE7
 24675                           postdec1	equ	0xFE5
 24676                           plusw1	equ	0xFE3
 24677                           fsr1h	equ	0xFE2
 24678                           fsr1l	equ	0xFE1
 24679                           indf2	equ	0xFDF
 24680                           postinc2	equ	0xFDE
 24681                           postdec2	equ	0xFDD
 24682                           plusw2	equ	0xFDB
 24683                           fsr2h	equ	0xFDA
 24684                           fsr2l	equ	0xFD9
 24685                           status	equ	0xFD8
 24686                           
 24687 ;; *************** function _bootloader_get_rec_dataLength *****************
 24688 ;; Defined at:
 24689 ;;		line 480 in file "bootloader.c"
 24690 ;; Parameters:    Size  Location     Type
 24691 ;;		None
 24692 ;; Auto vars:     Size  Location     Type
 24693 ;;		None
 24694 ;; Return value:  Size  Location     Type
 24695 ;;                  2    0[COMRAM] unsigned int 
 24696 ;; Registers used:
 24697 ;;		None
 24698 ;; Tracked objects:
 24699 ;;		On entry : 0/0
 24700 ;;		On exit  : 0/0
 24701 ;;		Unchanged: 0/0
 24702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24707 ;;Total ram usage:        2 bytes
 24708 ;; Hardware stack levels used:    1
 24709 ;; This function calls:
 24710 ;;		Nothing
 24711 ;; This function is called by:
 24712 ;;		__fill_buffer_get_bootloader_details
 24713 ;; This function uses a non-reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text116
 24717  008944                     __ptext116:
 24718                           	opt stack 0
 24719  008944                     _bootloader_get_rec_dataLength:
 24720                           	opt stack 28
 24721                           
 24722                           ;bootloader.c: 482: return hex_file_entry.dataLength;
 24723                           
 24724                           ; BSR set to: 1
 24725                           ;incstack = 0
 24726  008944  C1BB  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 24727  008948  C1BC  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 24728  00894C  0012               	return		;funcret
 24729  00894E                     __end_of_bootloader_get_rec_dataLength:
 24730                           	opt stack 0
 24731                           tosu	equ	0xFFF
 24732                           tosh	equ	0xFFE
 24733                           tosl	equ	0xFFD
 24734                           pclath	equ	0xFFA
 24735                           tblptru	equ	0xFF8
 24736                           tblptrh	equ	0xFF7
 24737                           tblptrl	equ	0xFF6
 24738                           tablat	equ	0xFF5
 24739                           prodh	equ	0xFF4
 24740                           prodl	equ	0xFF3
 24741                           intcon	equ	0xFF2
 24742                           intcon2	equ	0xFF1
 24743                           intcon3	equ	0xFF0
 24744                           indf0	equ	0xFEF
 24745                           postinc0	equ	0xFEE
 24746                           fsr0h	equ	0xFEA
 24747                           fsr0l	equ	0xFE9
 24748                           wreg	equ	0xFE8
 24749                           indf1	equ	0xFE7
 24750                           postdec1	equ	0xFE5
 24751                           plusw1	equ	0xFE3
 24752                           fsr1h	equ	0xFE2
 24753                           fsr1l	equ	0xFE1
 24754                           indf2	equ	0xFDF
 24755                           postinc2	equ	0xFDE
 24756                           postdec2	equ	0xFDD
 24757                           plusw2	equ	0xFDB
 24758                           fsr2h	equ	0xFDA
 24759                           fsr2l	equ	0xFD9
 24760                           status	equ	0xFD8
 24761                           
 24762 ;; *************** function _bootloader_get_rec_data *****************
 24763 ;; Defined at:
 24764 ;;		line 496 in file "bootloader.c"
 24765 ;; Parameters:    Size  Location     Type
 24766 ;;  index           1    wreg     unsigned char 
 24767 ;; Auto vars:     Size  Location     Type
 24768 ;;  index           1    0[COMRAM] unsigned char 
 24769 ;; Return value:  Size  Location     Type
 24770 ;;                  1    wreg      unsigned char 
 24771 ;; Registers used:
 24772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24773 ;; Tracked objects:
 24774 ;;		On entry : 0/0
 24775 ;;		On exit  : 0/0
 24776 ;;		Unchanged: 0/0
 24777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24782 ;;Total ram usage:        1 bytes
 24783 ;; Hardware stack levels used:    1
 24784 ;; This function calls:
 24785 ;;		Nothing
 24786 ;; This function is called by:
 24787 ;;		__fill_buffer_get_bootloader_details
 24788 ;; This function uses a non-reentrant model
 24789 ;;
 24790                           
 24791                           	psect	text117
 24792  008834                     __ptext117:
 24793                           	opt stack 0
 24794  008834                     _bootloader_get_rec_data:
 24795                           	opt stack 28
 24796                           
 24797                           ;incstack = 0
 24798                           ;bootloader_get_rec_data@index stored from wreg
 24799  008834  6E01               	movwf	bootloader_get_rec_data@index,c
 24800                           
 24801                           ;bootloader.c: 498: return hex_file_entry.data[index];
 24802  008836  5001               	movf	bootloader_get_rec_data@index,w,c
 24803  008838  0D01               	mullw	1
 24804  00883A  0EC0               	movlw	low (_hex_file_entry+5)
 24805  00883C  24F3               	addwf	prodl,w,c
 24806  00883E  6ED9               	movwf	fsr2l,c
 24807  008840  0E01               	movlw	high (_hex_file_entry+5)
 24808  008842  20F4               	addwfc	prodh,w,c
 24809  008844  6EDA               	movwf	fsr2h,c
 24810  008846  50DF               	movf	indf2,w,c
 24811  008848  0012               	return	
 24812  00884A                     __end_of_bootloader_get_rec_data:
 24813                           	opt stack 0
 24814                           tosu	equ	0xFFF
 24815                           tosh	equ	0xFFE
 24816                           tosl	equ	0xFFD
 24817                           pclath	equ	0xFFA
 24818                           tblptru	equ	0xFF8
 24819                           tblptrh	equ	0xFF7
 24820                           tblptrl	equ	0xFF6
 24821                           tablat	equ	0xFF5
 24822                           prodh	equ	0xFF4
 24823                           prodl	equ	0xFF3
 24824                           intcon	equ	0xFF2
 24825                           intcon2	equ	0xFF1
 24826                           intcon3	equ	0xFF0
 24827                           indf0	equ	0xFEF
 24828                           postinc0	equ	0xFEE
 24829                           fsr0h	equ	0xFEA
 24830                           fsr0l	equ	0xFE9
 24831                           wreg	equ	0xFE8
 24832                           indf1	equ	0xFE7
 24833                           postdec1	equ	0xFE5
 24834                           plusw1	equ	0xFE3
 24835                           fsr1h	equ	0xFE2
 24836                           fsr1l	equ	0xFE1
 24837                           indf2	equ	0xFDF
 24838                           postinc2	equ	0xFDE
 24839                           postdec2	equ	0xFDD
 24840                           plusw2	equ	0xFDB
 24841                           fsr2h	equ	0xFDA
 24842                           fsr2l	equ	0xFD9
 24843                           status	equ	0xFD8
 24844                           
 24845 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 24846 ;; Defined at:
 24847 ;;		line 506 in file "bootloader.c"
 24848 ;; Parameters:    Size  Location     Type
 24849 ;;		None
 24850 ;; Auto vars:     Size  Location     Type
 24851 ;;		None
 24852 ;; Return value:  Size  Location     Type
 24853 ;;                  1    wreg      unsigned char 
 24854 ;; Registers used:
 24855 ;;		wreg, status,2
 24856 ;; Tracked objects:
 24857 ;;		On entry : 0/0
 24858 ;;		On exit  : 0/0
 24859 ;;		Unchanged: 0/0
 24860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24865 ;;Total ram usage:        0 bytes
 24866 ;; Hardware stack levels used:    1
 24867 ;; This function calls:
 24868 ;;		Nothing
 24869 ;; This function is called by:
 24870 ;;		__fill_buffer_get_bootloader_details
 24871 ;; This function uses a non-reentrant model
 24872 ;;
 24873                           
 24874                           	psect	text118
 24875  0089AE                     __ptext118:
 24876                           	opt stack 0
 24877  0089AE                     _bootloader_get_rec_checksumCheck:
 24878                           	opt stack 28
 24879                           
 24880                           ;bootloader.c: 508: return hex_file_entry.checksumCheck;
 24881                           
 24882                           ;incstack = 0
 24883  0089AE  0101               	movlb	1	; () banked
 24884  0089B0  51D1               	movf	(_hex_file_entry+22)& (0+255),w,b
 24885  0089B2  0012               	return	
 24886  0089B4                     __end_of_bootloader_get_rec_checksumCheck:
 24887                           	opt stack 0
 24888                           tosu	equ	0xFFF
 24889                           tosh	equ	0xFFE
 24890                           tosl	equ	0xFFD
 24891                           pclath	equ	0xFFA
 24892                           tblptru	equ	0xFF8
 24893                           tblptrh	equ	0xFF7
 24894                           tblptrl	equ	0xFF6
 24895                           tablat	equ	0xFF5
 24896                           prodh	equ	0xFF4
 24897                           prodl	equ	0xFF3
 24898                           intcon	equ	0xFF2
 24899                           intcon2	equ	0xFF1
 24900                           intcon3	equ	0xFF0
 24901                           indf0	equ	0xFEF
 24902                           postinc0	equ	0xFEE
 24903                           fsr0h	equ	0xFEA
 24904                           fsr0l	equ	0xFE9
 24905                           wreg	equ	0xFE8
 24906                           indf1	equ	0xFE7
 24907                           postdec1	equ	0xFE5
 24908                           plusw1	equ	0xFE3
 24909                           fsr1h	equ	0xFE2
 24910                           fsr1l	equ	0xFE1
 24911                           indf2	equ	0xFDF
 24912                           postinc2	equ	0xFDE
 24913                           postdec2	equ	0xFDD
 24914                           plusw2	equ	0xFDB
 24915                           fsr2h	equ	0xFDA
 24916                           fsr2l	equ	0xFD9
 24917                           status	equ	0xFD8
 24918                           
 24919 ;; *************** function _bootloader_get_rec_checksum *****************
 24920 ;; Defined at:
 24921 ;;		line 501 in file "bootloader.c"
 24922 ;; Parameters:    Size  Location     Type
 24923 ;;		None
 24924 ;; Auto vars:     Size  Location     Type
 24925 ;;		None
 24926 ;; Return value:  Size  Location     Type
 24927 ;;                  1    wreg      unsigned char 
 24928 ;; Registers used:
 24929 ;;		wreg, status,2
 24930 ;; Tracked objects:
 24931 ;;		On entry : 0/0
 24932 ;;		On exit  : 0/0
 24933 ;;		Unchanged: 0/0
 24934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24939 ;;Total ram usage:        0 bytes
 24940 ;; Hardware stack levels used:    1
 24941 ;; This function calls:
 24942 ;;		Nothing
 24943 ;; This function is called by:
 24944 ;;		__fill_buffer_get_bootloader_details
 24945 ;; This function uses a non-reentrant model
 24946 ;;
 24947                           
 24948                           	psect	text119
 24949  0089B4                     __ptext119:
 24950                           	opt stack 0
 24951  0089B4                     _bootloader_get_rec_checksum:
 24952                           	opt stack 28
 24953                           
 24954                           ;bootloader.c: 503: return hex_file_entry.checksum;
 24955                           
 24956                           ; BSR set to: 1
 24957                           ;incstack = 0
 24958  0089B4  0101               	movlb	1	; () banked
 24959  0089B6  51D0               	movf	(_hex_file_entry+21)& (0+255),w,b
 24960  0089B8  0012               	return	
 24961  0089BA                     __end_of_bootloader_get_rec_checksum:
 24962                           	opt stack 0
 24963                           tosu	equ	0xFFF
 24964                           tosh	equ	0xFFE
 24965                           tosl	equ	0xFFD
 24966                           pclath	equ	0xFFA
 24967                           tblptru	equ	0xFF8
 24968                           tblptrh	equ	0xFF7
 24969                           tblptrl	equ	0xFF6
 24970                           tablat	equ	0xFF5
 24971                           prodh	equ	0xFF4
 24972                           prodl	equ	0xFF3
 24973                           intcon	equ	0xFF2
 24974                           intcon2	equ	0xFF1
 24975                           intcon3	equ	0xFF0
 24976                           indf0	equ	0xFEF
 24977                           postinc0	equ	0xFEE
 24978                           fsr0h	equ	0xFEA
 24979                           fsr0l	equ	0xFE9
 24980                           wreg	equ	0xFE8
 24981                           indf1	equ	0xFE7
 24982                           postdec1	equ	0xFE5
 24983                           plusw1	equ	0xFE3
 24984                           fsr1h	equ	0xFE2
 24985                           fsr1l	equ	0xFE1
 24986                           indf2	equ	0xFDF
 24987                           postinc2	equ	0xFDE
 24988                           postdec2	equ	0xFDD
 24989                           plusw2	equ	0xFDB
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function __fill_buffer_find_file *****************
 24995 ;; Defined at:
 24996 ;;		line 363 in file "api.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 24999 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25000 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 25001 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25002 ;; Auto vars:     Size  Location     Type
 25003 ;;  cntr            1   75[COMRAM] unsigned char 
 25004 ;; Return value:  Size  Location     Type
 25005 ;;                  1    wreg      void 
 25006 ;; Registers used:
 25007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25008 ;; Tracked objects:
 25009 ;;		On entry : 0/0
 25010 ;;		On exit  : 0/0
 25011 ;;		Unchanged: 0/0
 25012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25016 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25017 ;;Total ram usage:        9 bytes
 25018 ;; Hardware stack levels used:    1
 25019 ;; Hardware stack levels required when called:    6
 25020 ;; This function calls:
 25021 ;;		_fat_find_file
 25022 ;; This function is called by:
 25023 ;;		_api_prepare
 25024 ;; This function uses a non-reentrant model
 25025 ;;
 25026                           
 25027                           	psect	text120
 25028  006458                     __ptext120:
 25029                           	opt stack 0
 25030  006458                     __fill_buffer_find_file:
 25031                           	opt stack 23
 25032                           
 25033                           ;api.c: 365: uint8_t cntr;;api.c: 368: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25034                           
 25035                           ; BSR set to: 1
 25036                           ;incstack = 0
 25037  006458  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25038  00645C  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25039  006460  0E81               	movlw	129
 25040  006462  6EDF               	movwf	indf2,c
 25041                           
 25042                           ;api.c: 371: outBuffer[1] = 0xC125 >> 8;
 25043  006464  EE20 F001          	lfsr	2,1
 25044  006468  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 25045  00646A  26D9               	addwf	fsr2l,f,c
 25046  00646C  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25047  00646E  22DA               	addwfc	fsr2h,f,c
 25048  006470  0EC1               	movlw	193
 25049  006472  6EDF               	movwf	indf2,c
 25050                           
 25051                           ;api.c: 372: outBuffer[2] = (uint8_t) 0xC125;
 25052  006474  EE20 F002          	lfsr	2,2
 25053  006478  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 25054  00647A  26D9               	addwf	fsr2l,f,c
 25055  00647C  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25056  00647E  22DA               	addwfc	fsr2h,f,c
 25057  006480  0E25               	movlw	37
 25058  006482  6EDF               	movwf	indf2,c
 25059                           
 25060                           ;api.c: 375: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25061  006484  0E01               	movlw	1
 25062  006486  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25063  006488  6E30               	movwf	fat_find_file@name,c
 25064  00648A  0E00               	movlw	0
 25065  00648C  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25066  00648E  6E31               	movwf	fat_find_file@name+1,c
 25067  006490  0E09               	movlw	9
 25068  006492  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25069  006494  6E32               	movwf	fat_find_file@extension,c
 25070  006496  0E00               	movlw	0
 25071  006498  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25072  00649A  6E33               	movwf	fat_find_file@extension+1,c
 25073  00649C  EC74  F02F         	call	_fat_find_file	;wreg free
 25074  0064A0  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 25075  0064A2  EE20 F003          	lfsr	2,3
 25076  0064A6  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 25077  0064A8  26D9               	addwf	fsr2l,f,c
 25078  0064AA  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25079  0064AC  22DA               	addwfc	fsr2h,f,c
 25080  0064AE  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 25081                           
 25082                           ;api.c: 378: for(cntr=0; cntr<11; ++cntr)
 25083  0064B2  0E00               	movlw	0
 25084  0064B4  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 25085  0064B6                     l13982:
 25086  0064B6  0E0A               	movlw	10
 25087  0064B8  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 25088  0064BA  D001               	goto	l2689
 25089  0064BC  0012               	return	
 25090  0064BE                     l2689:
 25091                           
 25092                           ;api.c: 379: {;api.c: 380: outBuffer[cntr+12] = inBuffer[cntr+1];
 25093  0064BE  504C               	movf	__fill_buffer_find_file@cntr,w,c
 25094  0064C0  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 25095  0064C2  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 25096  0064C4  0E01               	movlw	1
 25097  0064C6  2648               	addwf	??__fill_buffer_find_file,f,c
 25098  0064C8  0E00               	movlw	0
 25099  0064CA  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 25100  0064CC  5048               	movf	??__fill_buffer_find_file,w,c
 25101  0064CE  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25102  0064D0  6ED9               	movwf	fsr2l,c
 25103  0064D2  5049               	movf	??__fill_buffer_find_file+1,w,c
 25104  0064D4  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25105  0064D6  6EDA               	movwf	fsr2h,c
 25106  0064D8  504C               	movf	__fill_buffer_find_file@cntr,w,c
 25107  0064DA  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 25108  0064DC  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 25109  0064DE  0E0C               	movlw	12
 25110  0064E0  264A               	addwf	??__fill_buffer_find_file+2,f,c
 25111  0064E2  0E00               	movlw	0
 25112  0064E4  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 25113  0064E6  504A               	movf	??__fill_buffer_find_file+2,w,c
 25114  0064E8  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 25115  0064EA  6EE1               	movwf	fsr1l,c
 25116  0064EC  504B               	movf	??__fill_buffer_find_file+3,w,c
 25117  0064EE  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 25118  0064F0  6EE2               	movwf	fsr1h,c
 25119  0064F2  CFDF FFE7          	movff	indf2,indf1
 25120  0064F6  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 25121  0064F8  D7DE               	goto	l13982
 25122  0064FA                     __end_of__fill_buffer_find_file:
 25123                           	opt stack 0
 25124                           tosu	equ	0xFFF
 25125                           tosh	equ	0xFFE
 25126                           tosl	equ	0xFFD
 25127                           pclath	equ	0xFFA
 25128                           tblptru	equ	0xFF8
 25129                           tblptrh	equ	0xFF7
 25130                           tblptrl	equ	0xFF6
 25131                           tablat	equ	0xFF5
 25132                           prodh	equ	0xFF4
 25133                           prodl	equ	0xFF3
 25134                           intcon	equ	0xFF2
 25135                           intcon2	equ	0xFF1
 25136                           intcon3	equ	0xFF0
 25137                           indf0	equ	0xFEF
 25138                           postinc0	equ	0xFEE
 25139                           fsr0h	equ	0xFEA
 25140                           fsr0l	equ	0xFE9
 25141                           wreg	equ	0xFE8
 25142                           indf1	equ	0xFE7
 25143                           postdec1	equ	0xFE5
 25144                           plusw1	equ	0xFE3
 25145                           fsr1h	equ	0xFE2
 25146                           fsr1l	equ	0xFE1
 25147                           indf2	equ	0xFDF
 25148                           postinc2	equ	0xFDE
 25149                           postdec2	equ	0xFDD
 25150                           plusw2	equ	0xFDB
 25151                           fsr2h	equ	0xFDA
 25152                           fsr2l	equ	0xFD9
 25153                           status	equ	0xFD8
 25154                           
 25155 ;; *************** function _api_parse *****************
 25156 ;; Defined at:
 25157 ;;		line 133 in file "api.c"
 25158 ;; Parameters:    Size  Location     Type
 25159 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 25160 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25161 ;;  receivedData    1   53[BANK0 ] unsigned char 
 25162 ;; Auto vars:     Size  Location     Type
 25163 ;;  idx             1   94[COMRAM] unsigned char 
 25164 ;; Return value:  Size  Location     Type
 25165 ;;                  1    wreg      void 
 25166 ;; Registers used:
 25167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25168 ;; Tracked objects:
 25169 ;;		On entry : 0/0
 25170 ;;		On exit  : 0/0
 25171 ;;		Unchanged: 0/0
 25172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25173 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25176 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25177 ;;Total ram usage:        6 bytes
 25178 ;; Hardware stack levels used:    1
 25179 ;; Hardware stack levels required when called:   10
 25180 ;; This function calls:
 25181 ;;		__parse_command_long
 25182 ;;		__parse_command_short
 25183 ;; This function is called by:
 25184 ;;		_main
 25185 ;;		_APP_DeviceCustomHIDTasks
 25186 ;; This function uses a non-reentrant model
 25187 ;;
 25188                           
 25189                           	psect	text121
 25190  0058A0                     __ptext121:
 25191                           	opt stack 0
 25192  0058A0                     _api_parse:
 25193                           	opt stack 20
 25194                           
 25195                           ;api.c: 137: uint8_t idx;;api.c: 139: if(inBuffer[0]>0x7F)
 25196                           
 25197                           ;incstack = 0
 25198  0058A0  C093  FFD9         	movff	api_parse@inBuffer,fsr2l
 25199  0058A4  C094  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25200  0058A8  0E7F               	movlw	127
 25201  0058AA  64DF               	cpfsgt	indf2,c
 25202  0058AC  D001               	goto	l2646
 25203  0058AE  0012               	return	
 25204  0058B0                     l2646:
 25205                           
 25206                           ;api.c: 144: };api.c: 146: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25207  0058B0  C093  FFD9         	movff	api_parse@inBuffer,fsr2l
 25208  0058B4  C094  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25209  0058B8  0E20               	movlw	32
 25210  0058BA  18DE               	xorwf	postinc2,w,c
 25211  0058BC  B4D8               	btfsc	status,2,c
 25212  0058BE  0012               	return	
 25213                           
 25214                           ;api.c: 151: };api.c: 153: idx = 1;
 25215                           
 25216                           ;api.c: 147: {;api.c: 150: return;
 25217  0058C0  0E01               	movlw	1
 25218  0058C2  6E5F               	movwf	api_parse@idx,c
 25219                           
 25220                           ;api.c: 154: while(idx<receivedDataLength)
 25221  0058C4  D051               	goto	l2654
 25222  0058C6                     
 25223                           ;api.c: 155: {;api.c: 157: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 25224  0058C6  505F               	movf	api_parse@idx,w,c
 25225  0058C8  0D01               	mullw	1
 25226  0058CA  50F3               	movf	prodl,w,c
 25227  0058CC  0100               	movlb	0	; () banked
 25228  0058CE  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25229  0058D0  6ED9               	movwf	fsr2l,c
 25230  0058D2  50F4               	movf	prodh,w,c
 25231  0058D4  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25232  0058D6  6EDA               	movwf	fsr2h,c
 25233  0058D8  0E99               	movlw	153
 25234  0058DA  18DE               	xorwf	postinc2,w,c
 25235  0058DC  B4D8               	btfsc	status,2,c
 25236  0058DE  0012               	return	
 25237  0058E0  D027               	goto	l2652
 25238  0058E2                     
 25239                           ; BSR set to: 0
 25240                           ;api.c: 165: _parse_command_short(inBuffer[idx]);
 25241                           
 25242                           ; BSR set to: 0
 25243  0058E2  505F               	movf	api_parse@idx,w,c
 25244  0058E4  0D01               	mullw	1
 25245  0058E6  50F3               	movf	prodl,w,c
 25246  0058E8  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25247  0058EA  6ED9               	movwf	fsr2l,c
 25248  0058EC  50F4               	movf	prodh,w,c
 25249  0058EE  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25250  0058F0  6EDA               	movwf	fsr2h,c
 25251  0058F2  50DF               	movf	indf2,w,c
 25252  0058F4  EC2E  F030         	call	__parse_command_short
 25253  0058F8  D00C               	goto	l14548
 25254  0058FA                     
 25255                           ;api.c: 170: _parse_command_short(inBuffer[idx]);
 25256  0058FA  505F               	movf	api_parse@idx,w,c
 25257  0058FC  0D01               	mullw	1
 25258  0058FE  50F3               	movf	prodl,w,c
 25259  005900  0100               	movlb	0	; () banked
 25260  005902  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25261  005904  6ED9               	movwf	fsr2l,c
 25262  005906  50F4               	movf	prodh,w,c
 25263  005908  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25264  00590A  6EDA               	movwf	fsr2h,c
 25265  00590C  50DF               	movf	indf2,w,c
 25266  00590E  EC2E  F030         	call	__parse_command_short
 25267  005912                     l14548:
 25268                           
 25269                           ;api.c: 171: ++idx;
 25270  005912  2A5F               	incf	api_parse@idx,f,c
 25271                           
 25272                           ;api.c: 172: break;
 25273  005914  D029               	goto	l2654
 25274  005916                     
 25275                           ;api.c: 175: idx += _parse_command_long(&inBuffer[idx]);
 25276  005916  505F               	movf	api_parse@idx,w,c
 25277  005918  0D01               	mullw	1
 25278  00591A  50F3               	movf	prodl,w,c
 25279  00591C  0100               	movlb	0	; () banked
 25280  00591E  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25281  005920  6E5C               	movwf	__parse_command_long@data,c
 25282  005922  50F4               	movf	prodh,w,c
 25283  005924  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25284  005926  6E5D               	movwf	__parse_command_long@data+1,c
 25285  005928  EC7D  F032         	call	__parse_command_long	;wreg free
 25286  00592C  265F               	addwf	api_parse@idx,f,c
 25287                           
 25288                           ;api.c: 176: break;
 25289  00592E  D01C               	goto	l2654
 25290  005930                     l2652:
 25291  005930  505F               	movf	api_parse@idx,w,c
 25292  005932  0D01               	mullw	1
 25293  005934  50F3               	movf	prodl,w,c
 25294  005936  0100               	movlb	0	; () banked
 25295  005938  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 25296  00593A  6ED9               	movwf	fsr2l,c
 25297  00593C  50F4               	movf	prodh,w,c
 25298  00593E  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25299  005940  6EDA               	movwf	fsr2h,c
 25300  005942  50DF               	movf	indf2,w,c
 25301  005944  0BF0               	andlw	240
 25302  005946  6F96               	movwf	??_api_parse& (0+255),b
 25303  005948  6B97               	clrf	(??_api_parse+1)& (0+255),b
 25304                           
 25305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25306                           ; Switch size 1, requested type "space"
 25307                           ; Number of cases is 1, Range of values is 0 to 0
 25308                           ; switch strategies available:
 25309                           ; Name         Instructions Cycles
 25310                           ; simple_byte            4     3 (average)
 25311                           ;	Chosen strategy is simple_byte
 25312  00594A  5197               	movf	(??_api_parse+1)& (0+255),w,b
 25313  00594C  0A00               	xorlw	0	; case 0
 25314  00594E  A4D8               	btfss	status,2,c
 25315  005950  0012               	return	
 25316                           
 25317                           ; BSR set to: 0
 25318                           ; Switch size 1, requested type "space"
 25319                           ; Number of cases is 3, Range of values is 32 to 80
 25320                           ; switch strategies available:
 25321                           ; Name         Instructions Cycles
 25322                           ; simple_byte           10     6 (average)
 25323                           ;	Chosen strategy is simple_byte
 25324  005952  5196               	movf	??_api_parse& (0+255),w,b
 25325  005954  0A20               	xorlw	32	; case 32
 25326  005956  B4D8               	btfsc	status,2,c
 25327  005958  D7C4               	goto	l2653
 25328  00595A  0A10               	xorlw	16	; case 48
 25329  00595C  B4D8               	btfsc	status,2,c
 25330  00595E  D7CD               	goto	l2655
 25331  005960  0A60               	xorlw	96	; case 80
 25332  005962  A4D8               	btfss	status,2,c
 25333  005964  0012               	return	
 25334  005966  D7D7               	goto	l2656
 25335  005968                     l2654:
 25336                           
 25337                           ; BSR set to: 0
 25338                           
 25339                           ; BSR set to: 0
 25340  005968  0100               	movlb	0	; () banked
 25341  00596A  5195               	movf	api_parse@receivedDataLength& (0+255),w,b
 25342  00596C  5C5F               	subwf	api_parse@idx,w,c
 25343  00596E  B0D8               	btfsc	status,0,c
 25344  005970  0012               	return	
 25345  005972  D7A9               	goto	l2650
 25346  005974                     __end_of_api_parse:
 25347                           	opt stack 0
 25348                           tosu	equ	0xFFF
 25349                           tosh	equ	0xFFE
 25350                           tosl	equ	0xFFD
 25351                           pclath	equ	0xFFA
 25352                           tblptru	equ	0xFF8
 25353                           tblptrh	equ	0xFF7
 25354                           tblptrl	equ	0xFF6
 25355                           tablat	equ	0xFF5
 25356                           prodh	equ	0xFF4
 25357                           prodl	equ	0xFF3
 25358                           intcon	equ	0xFF2
 25359                           intcon2	equ	0xFF1
 25360                           intcon3	equ	0xFF0
 25361                           indf0	equ	0xFEF
 25362                           postinc0	equ	0xFEE
 25363                           fsr0h	equ	0xFEA
 25364                           fsr0l	equ	0xFE9
 25365                           wreg	equ	0xFE8
 25366                           indf1	equ	0xFE7
 25367                           postdec1	equ	0xFE5
 25368                           plusw1	equ	0xFE3
 25369                           fsr1h	equ	0xFE2
 25370                           fsr1l	equ	0xFE1
 25371                           indf2	equ	0xFDF
 25372                           postinc2	equ	0xFDE
 25373                           postdec2	equ	0xFDD
 25374                           plusw2	equ	0xFDB
 25375                           fsr2h	equ	0xFDA
 25376                           fsr2l	equ	0xFD9
 25377                           status	equ	0xFD8
 25378                           
 25379 ;; *************** function __parse_command_short *****************
 25380 ;; Defined at:
 25381 ;;		line 432 in file "api.c"
 25382 ;; Parameters:    Size  Location     Type
 25383 ;;  cmd             1    wreg     unsigned char 
 25384 ;; Auto vars:     Size  Location     Type
 25385 ;;  cmd             1   43[COMRAM] unsigned char 
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  1    wreg      void 
 25388 ;; Registers used:
 25389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25399 ;;Total ram usage:        1 bytes
 25400 ;; Hardware stack levels used:    1
 25401 ;; Hardware stack levels required when called:    8
 25402 ;; This function calls:
 25403 ;;		_i2c_eeprom_writeByte
 25404 ;;		_reboot
 25405 ;;		_system_delay_ms
 25406 ;; This function is called by:
 25407 ;;		_api_parse
 25408 ;; This function uses a non-reentrant model
 25409 ;;
 25410                           
 25411                           	psect	text122
 25412  00605C                     __ptext122:
 25413                           	opt stack 0
 25414  00605C                     __parse_command_short:
 25415                           	opt stack 21
 25416                           
 25417                           ;incstack = 0
 25418                           ;__parse_command_short@cmd stored from wreg
 25419  00605C  6E2C               	movwf	__parse_command_short@cmd,c
 25420                           
 25421                           ;api.c: 434: switch(cmd)
 25422  00605E  D041               	goto	l2698
 25423  006060                     
 25424                           ;api.c: 437: i2c_eeprom_writeByte(0x100, 0x00);
 25425  006060  0E01               	movlw	1
 25426  006062  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25427  006064  0E00               	movlw	0
 25428  006066  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25429  006068  0E00               	movlw	0
 25430  00606A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25431  00606C  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25432                           
 25433                           ;api.c: 438: system_delay_ms(10);
 25434  006070  0E0A               	movlw	10
 25435  006072  EC2B  F043         	call	_system_delay_ms
 25436                           
 25437                           ;api.c: 439: reboot();
 25438  006076  ECEB  F043         	call	_reboot	;wreg free
 25439                           
 25440                           ;api.c: 440: break;
 25441  00607A  0012               	return	
 25442  00607C                     
 25443                           ;api.c: 443: i2c_eeprom_writeByte(0x100, 0x94);
 25444  00607C  0E01               	movlw	1
 25445  00607E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25446  006080  0E00               	movlw	0
 25447  006082  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25448  006084  0E94               	movlw	148
 25449  006086  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25450  006088  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25451                           
 25452                           ;api.c: 444: system_delay_ms(10);
 25453  00608C  0E0A               	movlw	10
 25454  00608E  EC2B  F043         	call	_system_delay_ms
 25455                           
 25456                           ;api.c: 445: reboot();
 25457  006092  ECEB  F043         	call	_reboot	;wreg free
 25458                           
 25459                           ;api.c: 446: break;
 25460  006096  0012               	return	
 25461  006098                     
 25462                           ;api.c: 449: i2c_eeprom_writeByte(0x100, 0x78);
 25463  006098  0E01               	movlw	1
 25464  00609A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25465  00609C  0E00               	movlw	0
 25466  00609E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25467  0060A0  0E78               	movlw	120
 25468  0060A2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25469  0060A4  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25470                           
 25471                           ;api.c: 450: system_delay_ms(10);
 25472  0060A8  0E0A               	movlw	10
 25473  0060AA  EC2B  F043         	call	_system_delay_ms
 25474                           
 25475                           ;api.c: 451: reboot();
 25476  0060AE  ECEB  F043         	call	_reboot	;wreg free
 25477                           
 25478                           ;api.c: 452: break;
 25479  0060B2  0012               	return	
 25480  0060B4                     
 25481                           ;api.c: 456: i2c_eeprom_writeByte(0x100, 0x78);
 25482  0060B4  0E01               	movlw	1
 25483  0060B6  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25484  0060B8  0E00               	movlw	0
 25485  0060BA  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25486  0060BC  0E78               	movlw	120
 25487  0060BE  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25488  0060C0  EC5E  F040         	call	_i2c_eeprom_writeByte	;wreg free
 25489                           
 25490                           ;api.c: 457: system_delay_ms(10);
 25491  0060C4  0E0A               	movlw	10
 25492  0060C6  EC2B  F043         	call	_system_delay_ms
 25493                           
 25494                           ;api.c: 458: reboot();
 25495  0060CA  ECEB  F043         	call	_reboot	;wreg free
 25496                           
 25497                           ;api.c: 459: break;
 25498  0060CE  0012               	return	
 25499  0060D0                     
 25500                           ;api.c: 462: --os.encoderCount;
 25501  0060D0  0100               	movlb	0	; () banked
 25502  0060D2  07B9               	decf	_os& (0+255),f,b	;volatile
 25503                           
 25504                           ;api.c: 463: break;
 25505  0060D4  0012               	return	
 25506  0060D6                     
 25507                           ;api.c: 466: ++os.encoderCount;
 25508                           
 25509                           ; BSR set to: 0
 25510  0060D6  0100               	movlb	0	; () banked
 25511  0060D8  2BB9               	incf	_os& (0+255),f,b	;volatile
 25512                           
 25513                           ;api.c: 467: break;
 25514  0060DA  0012               	return	
 25515  0060DC                     
 25516                           ;api.c: 470: ++os.buttonCount;
 25517                           
 25518                           ; BSR set to: 0
 25519  0060DC  0100               	movlb	0	; () banked
 25520  0060DE  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
 25521                           
 25522                           ; BSR set to: 0
 25523                           ;api.c: 472: }
 25524                           
 25525                           ;api.c: 471: break;
 25526  0060E0  0012               	return	
 25527  0060E2                     l2698:
 25528                           
 25529                           ; BSR set to: 0
 25530  0060E2  502C               	movf	__parse_command_short@cmd,w,c
 25531                           
 25532                           ; Switch size 1, requested type "space"
 25533                           ; Number of cases is 7, Range of values is 32 to 62
 25534                           ; switch strategies available:
 25535                           ; Name         Instructions Cycles
 25536                           ; simple_byte           22    12 (average)
 25537                           ;	Chosen strategy is simple_byte
 25538  0060E4  0A20               	xorlw	32	; case 32
 25539  0060E6  B4D8               	btfsc	status,2,c
 25540  0060E8  D7BB               	goto	l2699
 25541  0060EA  0A01               	xorlw	1	; case 33
 25542  0060EC  B4D8               	btfsc	status,2,c
 25543  0060EE  D7C6               	goto	l2701
 25544  0060F0  0A03               	xorlw	3	; case 34
 25545  0060F2  B4D8               	btfsc	status,2,c
 25546  0060F4  D7D1               	goto	l2702
 25547  0060F6  0A01               	xorlw	1	; case 35
 25548  0060F8  B4D8               	btfsc	status,2,c
 25549  0060FA  D7DC               	goto	l2703
 25550  0060FC  0A1F               	xorlw	31	; case 60
 25551  0060FE  B4D8               	btfsc	status,2,c
 25552  006100  D7E7               	goto	l2704
 25553  006102  0A01               	xorlw	1	; case 61
 25554  006104  B4D8               	btfsc	status,2,c
 25555  006106  D7E7               	goto	l2705
 25556  006108  0A03               	xorlw	3	; case 62
 25557  00610A  A4D8               	btfss	status,2,c
 25558  00610C  0012               	return	
 25559  00610E  D7E6               	goto	l2706
 25560  006110                     __end_of__parse_command_short:
 25561                           	opt stack 0
 25562                           tosu	equ	0xFFF
 25563                           tosh	equ	0xFFE
 25564                           tosl	equ	0xFFD
 25565                           pclath	equ	0xFFA
 25566                           tblptru	equ	0xFF8
 25567                           tblptrh	equ	0xFF7
 25568                           tblptrl	equ	0xFF6
 25569                           tablat	equ	0xFF5
 25570                           prodh	equ	0xFF4
 25571                           prodl	equ	0xFF3
 25572                           intcon	equ	0xFF2
 25573                           intcon2	equ	0xFF1
 25574                           intcon3	equ	0xFF0
 25575                           indf0	equ	0xFEF
 25576                           postinc0	equ	0xFEE
 25577                           fsr0h	equ	0xFEA
 25578                           fsr0l	equ	0xFE9
 25579                           wreg	equ	0xFE8
 25580                           indf1	equ	0xFE7
 25581                           postdec1	equ	0xFE5
 25582                           plusw1	equ	0xFE3
 25583                           fsr1h	equ	0xFE2
 25584                           fsr1l	equ	0xFE1
 25585                           indf2	equ	0xFDF
 25586                           postinc2	equ	0xFDE
 25587                           postdec2	equ	0xFDD
 25588                           plusw2	equ	0xFDB
 25589                           fsr2h	equ	0xFDA
 25590                           fsr2l	equ	0xFD9
 25591                           status	equ	0xFD8
 25592                           
 25593 ;; *************** function _system_delay_ms *****************
 25594 ;; Defined at:
 25595 ;;		line 63 in file "os.c"
 25596 ;; Parameters:    Size  Location     Type
 25597 ;;  ms              1    wreg     unsigned char 
 25598 ;; Auto vars:     Size  Location     Type
 25599 ;;  ms              1    1[COMRAM] unsigned char 
 25600 ;;  cntr            1    2[COMRAM] unsigned char 
 25601 ;; Return value:  Size  Location     Type
 25602 ;;                  1    wreg      void 
 25603 ;; Registers used:
 25604 ;;		wreg, status,2, status,0, cstack
 25605 ;; Tracked objects:
 25606 ;;		On entry : 0/0
 25607 ;;		On exit  : 0/0
 25608 ;;		Unchanged: 0/0
 25609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25613 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25614 ;;Total ram usage:        3 bytes
 25615 ;; Hardware stack levels used:    1
 25616 ;; This function calls:
 25617 ;;		Nothing
 25618 ;; This function is called by:
 25619 ;;		_system_minimal_init
 25620 ;;		__ui_encoder
 25621 ;;		__parse_command_short
 25622 ;; This function uses a non-reentrant model
 25623 ;;
 25624                           
 25625                           	psect	text123
 25626  008656                     __ptext123:
 25627                           	opt stack 0
 25628  008656                     _system_delay_ms:
 25629                           	opt stack 28
 25630                           
 25631                           ;incstack = 0
 25632                           ;system_delay_ms@ms stored from wreg
 25633  008656  6E02               	movwf	system_delay_ms@ms,c
 25634                           
 25635                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 25636  008658  0E00               	movlw	0
 25637  00865A  6E03               	movwf	system_delay_ms@cntr,c
 25638  00865C  D009               	goto	l1090
 25639  00865E                     
 25640                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 25641  00865E  0E10               	movlw	16
 25642  008660  6E01               	movwf	??_system_delay_ms& (0+255),c
 25643  008662  0E94               	movlw	148
 25644  008664                     u12797:
 25645  008664  2EE8               	decfsz	wreg,f,c
 25646  008666  D7FE               	bra	u12797
 25647  008668  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 25648  00866A  D7FC               	bra	u12797
 25649  00866C  D000               	nop2	
 25650  00866E  2A03               	incf	system_delay_ms@cntr,f,c
 25651  008670                     l1090:
 25652  008670  5002               	movf	system_delay_ms@ms,w,c
 25653  008672  5C03               	subwf	system_delay_ms@cntr,w,c
 25654  008674  B0D8               	btfsc	status,0,c
 25655  008676  0012               	return	
 25656  008678  D7F2               	goto	l1091
 25657  00867A                     __end_of_system_delay_ms:
 25658                           	opt stack 0
 25659                           tosu	equ	0xFFF
 25660                           tosh	equ	0xFFE
 25661                           tosl	equ	0xFFD
 25662                           pclath	equ	0xFFA
 25663                           tblptru	equ	0xFF8
 25664                           tblptrh	equ	0xFF7
 25665                           tblptrl	equ	0xFF6
 25666                           tablat	equ	0xFF5
 25667                           prodh	equ	0xFF4
 25668                           prodl	equ	0xFF3
 25669                           intcon	equ	0xFF2
 25670                           intcon2	equ	0xFF1
 25671                           intcon3	equ	0xFF0
 25672                           indf0	equ	0xFEF
 25673                           postinc0	equ	0xFEE
 25674                           fsr0h	equ	0xFEA
 25675                           fsr0l	equ	0xFE9
 25676                           wreg	equ	0xFE8
 25677                           indf1	equ	0xFE7
 25678                           postdec1	equ	0xFE5
 25679                           plusw1	equ	0xFE3
 25680                           fsr1h	equ	0xFE2
 25681                           fsr1l	equ	0xFE1
 25682                           indf2	equ	0xFDF
 25683                           postinc2	equ	0xFDE
 25684                           postdec2	equ	0xFDD
 25685                           plusw2	equ	0xFDB
 25686                           fsr2h	equ	0xFDA
 25687                           fsr2l	equ	0xFD9
 25688                           status	equ	0xFD8
 25689                           
 25690 ;; *************** function _reboot *****************
 25691 ;; Defined at:
 25692 ;;		line 259 in file "os.c"
 25693 ;; Parameters:    Size  Location     Type
 25694 ;;		None
 25695 ;; Auto vars:     Size  Location     Type
 25696 ;;		None
 25697 ;; Return value:  Size  Location     Type
 25698 ;;                  1    wreg      void 
 25699 ;; Registers used:
 25700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25701 ;; Tracked objects:
 25702 ;;		On entry : 0/0
 25703 ;;		On exit  : 0/0
 25704 ;;		Unchanged: 0/0
 25705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25710 ;;Total ram usage:        0 bytes
 25711 ;; Hardware stack levels used:    1
 25712 ;; Hardware stack levels required when called:    7
 25713 ;; This function calls:
 25714 ;;		_display_prepare
 25715 ;;		_display_update
 25716 ;;		_ui_get_status
 25717 ;; This function is called by:
 25718 ;;		__ui_encoder
 25719 ;;		__parse_command_short
 25720 ;; This function uses a non-reentrant model
 25721 ;;
 25722                           
 25723                           	psect	text124
 25724  0087D6                     __ptext124:
 25725                           	opt stack 0
 25726  0087D6                     _reboot:
 25727                           	opt stack 21
 25728                           
 25729                           ;os.c: 262: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 25730                           
 25731                           ;incstack = 0
 25732  0087D6  0E80               	movlw	128
 25733  0087D8  0100               	movlb	0	; () banked
 25734  0087DA  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 25735                           
 25736                           ; BSR set to: 0
 25737                           ;os.c: 263: display_prepare(os.display_mode);
 25738  0087DC  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 25739  0087DE  ECBA  F02C         	call	_display_prepare
 25740                           
 25741                           ;os.c: 264: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 25742  0087E2  ECDD  F044         	call	_ui_get_status	;wreg free
 25743  0087E6  0A05               	xorlw	5
 25744  0087E8  B4D8               	btfsc	status,2,c
 25745                           
 25746                           ;os.c: 265: {;os.c: 266: display_update();
 25747  0087EA  ECE9  F039         	call	_display_update	;wreg free
 25748  0087EE                     
 25749                           ;os.c: 267: };os.c: 270: while(1);
 25750  0087EE  D7FF               	goto	l1117
 25751  0087F0                     __end_of_reboot:
 25752                           	opt stack 0
 25753                           tosu	equ	0xFFF
 25754                           tosh	equ	0xFFE
 25755                           tosl	equ	0xFFD
 25756                           pclath	equ	0xFFA
 25757                           tblptru	equ	0xFF8
 25758                           tblptrh	equ	0xFF7
 25759                           tblptrl	equ	0xFF6
 25760                           tablat	equ	0xFF5
 25761                           prodh	equ	0xFF4
 25762                           prodl	equ	0xFF3
 25763                           intcon	equ	0xFF2
 25764                           intcon2	equ	0xFF1
 25765                           intcon3	equ	0xFF0
 25766                           indf0	equ	0xFEF
 25767                           postinc0	equ	0xFEE
 25768                           fsr0h	equ	0xFEA
 25769                           fsr0l	equ	0xFE9
 25770                           wreg	equ	0xFE8
 25771                           indf1	equ	0xFE7
 25772                           postdec1	equ	0xFE5
 25773                           plusw1	equ	0xFE3
 25774                           fsr1h	equ	0xFE2
 25775                           fsr1l	equ	0xFE1
 25776                           indf2	equ	0xFDF
 25777                           postinc2	equ	0xFDE
 25778                           postdec2	equ	0xFDD
 25779                           plusw2	equ	0xFDB
 25780                           fsr2h	equ	0xFDA
 25781                           fsr2l	equ	0xFD9
 25782                           status	equ	0xFD8
 25783                           
 25784 ;; *************** function _ui_get_status *****************
 25785 ;; Defined at:
 25786 ;;		line 95 in file "ui.c"
 25787 ;; Parameters:    Size  Location     Type
 25788 ;;		None
 25789 ;; Auto vars:     Size  Location     Type
 25790 ;;		None
 25791 ;; Return value:  Size  Location     Type
 25792 ;;                  1    wreg      enum E7928
 25793 ;; Registers used:
 25794 ;;		wreg, status,2
 25795 ;; Tracked objects:
 25796 ;;		On entry : 0/0
 25797 ;;		On exit  : 0/0
 25798 ;;		Unchanged: 0/0
 25799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25804 ;;Total ram usage:        0 bytes
 25805 ;; Hardware stack levels used:    1
 25806 ;; This function calls:
 25807 ;;		Nothing
 25808 ;; This function is called by:
 25809 ;;		_main
 25810 ;;		_reboot
 25811 ;;		__fill_buffer_get_status
 25812 ;; This function uses a non-reentrant model
 25813 ;;
 25814                           
 25815                           	psect	text125
 25816  0089BA                     __ptext125:
 25817                           	opt stack 0
 25818  0089BA                     _ui_get_status:
 25819                           	opt stack 27
 25820                           
 25821                           ;ui.c: 97: return userInterfaceStatus;
 25822                           
 25823                           ;incstack = 0
 25824  0089BA  0100               	movlb	0	; () banked
 25825  0089BC  51E0               	movf	_userInterfaceStatus& (0+255),w,b
 25826  0089BE  0012               	return	
 25827  0089C0                     __end_of_ui_get_status:
 25828                           	opt stack 0
 25829                           tosu	equ	0xFFF
 25830                           tosh	equ	0xFFE
 25831                           tosl	equ	0xFFD
 25832                           pclath	equ	0xFFA
 25833                           tblptru	equ	0xFF8
 25834                           tblptrh	equ	0xFF7
 25835                           tblptrl	equ	0xFF6
 25836                           tablat	equ	0xFF5
 25837                           prodh	equ	0xFF4
 25838                           prodl	equ	0xFF3
 25839                           intcon	equ	0xFF2
 25840                           intcon2	equ	0xFF1
 25841                           intcon3	equ	0xFF0
 25842                           indf0	equ	0xFEF
 25843                           postinc0	equ	0xFEE
 25844                           fsr0h	equ	0xFEA
 25845                           fsr0l	equ	0xFE9
 25846                           wreg	equ	0xFE8
 25847                           indf1	equ	0xFE7
 25848                           postdec1	equ	0xFE5
 25849                           plusw1	equ	0xFE3
 25850                           fsr1h	equ	0xFE2
 25851                           fsr1l	equ	0xFE1
 25852                           indf2	equ	0xFDF
 25853                           postinc2	equ	0xFDE
 25854                           postdec2	equ	0xFDD
 25855                           plusw2	equ	0xFDB
 25856                           fsr2h	equ	0xFDA
 25857                           fsr2l	equ	0xFD9
 25858                           status	equ	0xFD8
 25859                           
 25860 ;; *************** function _display_update *****************
 25861 ;; Defined at:
 25862 ;;		line 555 in file "display.c"
 25863 ;; Parameters:    Size  Location     Type
 25864 ;;		None
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;		None
 25867 ;; Return value:  Size  Location     Type
 25868 ;;                  1    wreg      void 
 25869 ;; Registers used:
 25870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25871 ;; Tracked objects:
 25872 ;;		On entry : 0/0
 25873 ;;		On exit  : 0/0
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25880 ;;Total ram usage:        0 bytes
 25881 ;; Hardware stack levels used:    1
 25882 ;; Hardware stack levels required when called:    4
 25883 ;; This function calls:
 25884 ;;		_i2c_display_cursor
 25885 ;;		_i2c_display_write_fixed
 25886 ;; This function is called by:
 25887 ;;		_main
 25888 ;;		_reboot
 25889 ;; This function uses a non-reentrant model
 25890 ;;
 25891                           
 25892                           	psect	text126
 25893  0073D2                     __ptext126:
 25894                           	opt stack 0
 25895  0073D2                     _display_update:
 25896                           	opt stack 23
 25897                           
 25898                           ;display.c: 557: i2c_display_cursor(0, 0);
 25899                           
 25900                           ; BSR set to: 0
 25901                           ;incstack = 0
 25902  0073D2  0E00               	movlw	0
 25903  0073D4  6E0E               	movwf	i2c_display_cursor@position,c
 25904  0073D6  0E00               	movlw	0
 25905  0073D8  EC3D  F043         	call	_i2c_display_cursor
 25906                           
 25907                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 25908  0073DC  0E00               	movlw	low _display_content
 25909  0073DE  6E06               	movwf	i2c_display_write_fixed@data,c
 25910  0073E0  0E02               	movlw	high _display_content
 25911  0073E2  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25912  0073E4  0E14               	movlw	20
 25913  0073E6  6E08               	movwf	i2c_display_write_fixed@length,c
 25914  0073E8  ECA8  F03D         	call	_i2c_display_write_fixed	;wreg free
 25915                           
 25916                           ;display.c: 559: i2c_display_cursor(1, 0);
 25917  0073EC  0E00               	movlw	0
 25918  0073EE  6E0E               	movwf	i2c_display_cursor@position,c
 25919  0073F0  0E01               	movlw	1
 25920  0073F2  EC3D  F043         	call	_i2c_display_cursor
 25921                           
 25922                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 25923  0073F6  0E14               	movlw	low (_display_content+20)
 25924  0073F8  6E06               	movwf	i2c_display_write_fixed@data,c
 25925  0073FA  0E02               	movlw	high (_display_content+20)
 25926  0073FC  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25927  0073FE  0E14               	movlw	20
 25928  007400  6E08               	movwf	i2c_display_write_fixed@length,c
 25929  007402  ECA8  F03D         	call	_i2c_display_write_fixed	;wreg free
 25930                           
 25931                           ;display.c: 561: i2c_display_cursor(2, 0);
 25932  007406  0E00               	movlw	0
 25933  007408  6E0E               	movwf	i2c_display_cursor@position,c
 25934  00740A  0E02               	movlw	2
 25935  00740C  EC3D  F043         	call	_i2c_display_cursor
 25936                           
 25937                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 25938  007410  0E28               	movlw	low (_display_content+40)
 25939  007412  6E06               	movwf	i2c_display_write_fixed@data,c
 25940  007414  0E02               	movlw	high (_display_content+40)
 25941  007416  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25942  007418  0E14               	movlw	20
 25943  00741A  6E08               	movwf	i2c_display_write_fixed@length,c
 25944  00741C  ECA8  F03D         	call	_i2c_display_write_fixed	;wreg free
 25945                           
 25946                           ;display.c: 563: i2c_display_cursor(3, 0);
 25947  007420  0E00               	movlw	0
 25948  007422  6E0E               	movwf	i2c_display_cursor@position,c
 25949  007424  0E03               	movlw	3
 25950  007426  EC3D  F043         	call	_i2c_display_cursor
 25951                           
 25952                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 25953  00742A  0E3C               	movlw	low (_display_content+60)
 25954  00742C  6E06               	movwf	i2c_display_write_fixed@data,c
 25955  00742E  0E02               	movlw	high (_display_content+60)
 25956  007430  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25957  007432  0E14               	movlw	20
 25958  007434  6E08               	movwf	i2c_display_write_fixed@length,c
 25959  007436  ECA8  F03D         	call	_i2c_display_write_fixed	;wreg free
 25960  00743A  0012               	return		;funcret
 25961  00743C                     __end_of_display_update:
 25962                           	opt stack 0
 25963                           tosu	equ	0xFFF
 25964                           tosh	equ	0xFFE
 25965                           tosl	equ	0xFFD
 25966                           pclath	equ	0xFFA
 25967                           tblptru	equ	0xFF8
 25968                           tblptrh	equ	0xFF7
 25969                           tblptrl	equ	0xFF6
 25970                           tablat	equ	0xFF5
 25971                           prodh	equ	0xFF4
 25972                           prodl	equ	0xFF3
 25973                           intcon	equ	0xFF2
 25974                           intcon2	equ	0xFF1
 25975                           intcon3	equ	0xFF0
 25976                           indf0	equ	0xFEF
 25977                           postinc0	equ	0xFEE
 25978                           fsr0h	equ	0xFEA
 25979                           fsr0l	equ	0xFE9
 25980                           wreg	equ	0xFE8
 25981                           indf1	equ	0xFE7
 25982                           postdec1	equ	0xFE5
 25983                           plusw1	equ	0xFE3
 25984                           fsr1h	equ	0xFE2
 25985                           fsr1l	equ	0xFE1
 25986                           indf2	equ	0xFDF
 25987                           postinc2	equ	0xFDE
 25988                           postdec2	equ	0xFDD
 25989                           plusw2	equ	0xFDB
 25990                           fsr2h	equ	0xFDA
 25991                           fsr2l	equ	0xFD9
 25992                           status	equ	0xFD8
 25993                           
 25994 ;; *************** function _i2c_display_write_fixed *****************
 25995 ;; Defined at:
 25996 ;;		line 270 in file "i2c.c"
 25997 ;; Parameters:    Size  Location     Type
 25998 ;;  data            2    5[COMRAM] PTR unsigned char 
 25999 ;;		 -> display_content(80), 
 26000 ;;  length          1    7[COMRAM] unsigned char 
 26001 ;; Auto vars:     Size  Location     Type
 26002 ;;  pos             1    8[COMRAM] unsigned char 
 26003 ;; Return value:  Size  Location     Type
 26004 ;;                  1    wreg      void 
 26005 ;; Registers used:
 26006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26007 ;; Tracked objects:
 26008 ;;		On entry : 0/0
 26009 ;;		On exit  : 0/0
 26010 ;;		Unchanged: 0/0
 26011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26012 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26016 ;;Total ram usage:        4 bytes
 26017 ;; Hardware stack levels used:    1
 26018 ;; Hardware stack levels required when called:    1
 26019 ;; This function calls:
 26020 ;;		__i2c_send
 26021 ;;		__i2c_start
 26022 ;;		__i2c_stop
 26023 ;;		__i2c_wait_idle
 26024 ;;		_i2c_set_frequency
 26025 ;; This function is called by:
 26026 ;;		_display_update
 26027 ;; This function uses a non-reentrant model
 26028 ;;
 26029                           
 26030                           	psect	text127
 26031  007B50                     __ptext127:
 26032                           	opt stack 0
 26033  007B50                     _i2c_display_write_fixed:
 26034                           	opt stack 25
 26035                           
 26036                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26037                           
 26038                           ;incstack = 0
 26039  007B50  0E02               	movlw	2
 26040  007B52  EC9F  F042         	call	_i2c_set_frequency
 26041                           
 26042                           ;i2c.c: 277: _i2c_wait_idle();
 26043  007B56  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 26044                           
 26045                           ;i2c.c: 278: _i2c_start();
 26046  007B5A  ECC9  F044         	call	__i2c_start	;wreg free
 26047                           
 26048                           ;i2c.c: 279: _i2c_wait_idle();
 26049  007B5E  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 26050                           
 26051                           ;i2c.c: 280: _i2c_send(0b01111000);
 26052  007B62  0E78               	movlw	120
 26053  007B64  ECCD  F044         	call	__i2c_send
 26054                           
 26055                           ;i2c.c: 281: _i2c_wait_idle();
 26056  007B68  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 26057                           
 26058                           ;i2c.c: 282: _i2c_send(0b01000000);
 26059  007B6C  0E40               	movlw	64
 26060  007B6E  ECCD  F044         	call	__i2c_send
 26061                           
 26062                           ;i2c.c: 283: _i2c_wait_idle();
 26063  007B72  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 26064                           
 26065                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 26066  007B76  0E00               	movlw	0
 26067  007B78  6E09               	movwf	i2c_display_write_fixed@pos,c
 26068  007B7A  D00E               	goto	l1232
 26069  007B7C                     
 26070                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 26071  007B7C  5009               	movf	i2c_display_write_fixed@pos,w,c
 26072  007B7E  0D01               	mullw	1
 26073  007B80  50F3               	movf	prodl,w,c
 26074  007B82  2406               	addwf	i2c_display_write_fixed@data,w,c
 26075  007B84  6ED9               	movwf	fsr2l,c
 26076  007B86  50F4               	movf	prodh,w,c
 26077  007B88  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26078  007B8A  6EDA               	movwf	fsr2h,c
 26079  007B8C  50DF               	movf	indf2,w,c
 26080  007B8E  ECCD  F044         	call	__i2c_send
 26081                           
 26082                           ;i2c.c: 289: _i2c_wait_idle();
 26083  007B92  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 26084  007B96  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26085  007B98                     l1232:
 26086  007B98  5008               	movf	i2c_display_write_fixed@length,w,c
 26087  007B9A  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26088  007B9C  A0D8               	btfss	status,0,c
 26089  007B9E  D7EE               	goto	l1233
 26090                           
 26091                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 26092  007BA0  ECC5  F044         	call	__i2c_stop	;wreg free
 26093  007BA4  0012               	return		;funcret
 26094  007BA6                     __end_of_i2c_display_write_fixed:
 26095                           	opt stack 0
 26096                           tosu	equ	0xFFF
 26097                           tosh	equ	0xFFE
 26098                           tosl	equ	0xFFD
 26099                           pclath	equ	0xFFA
 26100                           tblptru	equ	0xFF8
 26101                           tblptrh	equ	0xFF7
 26102                           tblptrl	equ	0xFF6
 26103                           tablat	equ	0xFF5
 26104                           prodh	equ	0xFF4
 26105                           prodl	equ	0xFF3
 26106                           intcon	equ	0xFF2
 26107                           intcon2	equ	0xFF1
 26108                           intcon3	equ	0xFF0
 26109                           indf0	equ	0xFEF
 26110                           postinc0	equ	0xFEE
 26111                           fsr0h	equ	0xFEA
 26112                           fsr0l	equ	0xFE9
 26113                           wreg	equ	0xFE8
 26114                           indf1	equ	0xFE7
 26115                           postdec1	equ	0xFE5
 26116                           plusw1	equ	0xFE3
 26117                           fsr1h	equ	0xFE2
 26118                           fsr1l	equ	0xFE1
 26119                           indf2	equ	0xFDF
 26120                           postinc2	equ	0xFDE
 26121                           postdec2	equ	0xFDD
 26122                           plusw2	equ	0xFDB
 26123                           fsr2h	equ	0xFDA
 26124                           fsr2l	equ	0xFD9
 26125                           status	equ	0xFD8
 26126                           
 26127 ;; *************** function _i2c_display_cursor *****************
 26128 ;; Defined at:
 26129 ;;		line 230 in file "i2c.c"
 26130 ;; Parameters:    Size  Location     Type
 26131 ;;  line            1    wreg     unsigned char 
 26132 ;;  position        1   13[COMRAM] unsigned char 
 26133 ;; Auto vars:     Size  Location     Type
 26134 ;;  line            1   14[COMRAM] unsigned char 
 26135 ;;  address         1   15[COMRAM] unsigned char 
 26136 ;; Return value:  Size  Location     Type
 26137 ;;                  1    wreg      void 
 26138 ;; Registers used:
 26139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26140 ;; Tracked objects:
 26141 ;;		On entry : 0/0
 26142 ;;		On exit  : 0/0
 26143 ;;		Unchanged: 0/0
 26144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26145 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26149 ;;Total ram usage:        3 bytes
 26150 ;; Hardware stack levels used:    1
 26151 ;; Hardware stack levels required when called:    3
 26152 ;; This function calls:
 26153 ;;		__ic2_display_set_address
 26154 ;;		_i2c_set_frequency
 26155 ;; This function is called by:
 26156 ;;		_display_update
 26157 ;; This function uses a non-reentrant model
 26158 ;;
 26159                           
 26160                           	psect	text128
 26161  00867A                     __ptext128:
 26162                           	opt stack 0
 26163  00867A                     _i2c_display_cursor:
 26164                           	opt stack 23
 26165                           
 26166                           ;incstack = 0
 26167                           ;i2c_display_cursor@line stored from wreg
 26168  00867A  6E0F               	movwf	i2c_display_cursor@line,c
 26169                           
 26170                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 26171  00867C  0E03               	movlw	3
 26172  00867E  160F               	andwf	i2c_display_cursor@line,f,c
 26173                           
 26174                           ;i2c.c: 236: address = line<<5;
 26175  008680  380F               	swapf	i2c_display_cursor@line,w,c
 26176  008682  46E8               	rlncf	wreg,f,c
 26177  008684  0BE0               	andlw	224
 26178  008686  6E10               	movwf	i2c_display_cursor@address,c
 26179                           
 26180                           ;i2c.c: 237: position &= 0b11111;
 26181  008688  0E1F               	movlw	31
 26182  00868A  160E               	andwf	i2c_display_cursor@position,f,c
 26183                           
 26184                           ;i2c.c: 238: address |= position;
 26185  00868C  500E               	movf	i2c_display_cursor@position,w,c
 26186  00868E  1210               	iorwf	i2c_display_cursor@address,f,c
 26187                           
 26188                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26189  008690  0E02               	movlw	2
 26190  008692  EC9F  F042         	call	_i2c_set_frequency
 26191                           
 26192                           ;i2c.c: 244: _ic2_display_set_address(address);
 26193  008696  5010               	movf	i2c_display_cursor@address,w,c
 26194  008698  EC05  F043         	call	__ic2_display_set_address
 26195  00869C  0012               	return		;funcret
 26196  00869E                     __end_of_i2c_display_cursor:
 26197                           	opt stack 0
 26198                           tosu	equ	0xFFF
 26199                           tosh	equ	0xFFE
 26200                           tosl	equ	0xFFD
 26201                           pclath	equ	0xFFA
 26202                           tblptru	equ	0xFF8
 26203                           tblptrh	equ	0xFF7
 26204                           tblptrl	equ	0xFF6
 26205                           tablat	equ	0xFF5
 26206                           prodh	equ	0xFF4
 26207                           prodl	equ	0xFF3
 26208                           intcon	equ	0xFF2
 26209                           intcon2	equ	0xFF1
 26210                           intcon3	equ	0xFF0
 26211                           indf0	equ	0xFEF
 26212                           postinc0	equ	0xFEE
 26213                           fsr0h	equ	0xFEA
 26214                           fsr0l	equ	0xFE9
 26215                           wreg	equ	0xFE8
 26216                           indf1	equ	0xFE7
 26217                           postdec1	equ	0xFE5
 26218                           plusw1	equ	0xFE3
 26219                           fsr1h	equ	0xFE2
 26220                           fsr1l	equ	0xFE1
 26221                           indf2	equ	0xFDF
 26222                           postinc2	equ	0xFDE
 26223                           postdec2	equ	0xFDD
 26224                           plusw2	equ	0xFDB
 26225                           fsr2h	equ	0xFDA
 26226                           fsr2l	equ	0xFD9
 26227                           status	equ	0xFD8
 26228                           
 26229 ;; *************** function __ic2_display_set_address *****************
 26230 ;; Defined at:
 26231 ;;		line 194 in file "i2c.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;  address         1    wreg     unsigned char 
 26234 ;; Auto vars:     Size  Location     Type
 26235 ;;  address         1   10[COMRAM] unsigned char 
 26236 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26237 ;; Return value:  Size  Location     Type
 26238 ;;                  1    wreg      void 
 26239 ;; Registers used:
 26240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26241 ;; Tracked objects:
 26242 ;;		On entry : 0/0
 26243 ;;		On exit  : 0/0
 26244 ;;		Unchanged: 0/0
 26245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26247 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26249 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26250 ;;Total ram usage:        3 bytes
 26251 ;; Hardware stack levels used:    1
 26252 ;; Hardware stack levels required when called:    2
 26253 ;; This function calls:
 26254 ;;		__i2c_write
 26255 ;;		_i2c_set_frequency
 26256 ;; This function is called by:
 26257 ;;		_i2c_display_cursor
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text129
 26262  00860A                     __ptext129:
 26263                           	opt stack 0
 26264  00860A                     __ic2_display_set_address:
 26265                           	opt stack 23
 26266                           
 26267                           ;incstack = 0
 26268                           ;__ic2_display_set_address@address stored from wreg
 26269  00860A  6E0B               	movwf	__ic2_display_set_address@address,c
 26270                           
 26271                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 26272  00860C  0E00               	movlw	0
 26273  00860E  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26274                           
 26275                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 26276  008610  500B               	movf	__ic2_display_set_address@address,w,c
 26277  008612  0980               	iorlw	128
 26278  008614  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26279                           
 26280                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26281  008616  0E02               	movlw	2
 26282  008618  EC9F  F042         	call	_i2c_set_frequency
 26283                           
 26284                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 26285  00861C  0E0C               	movlw	low __ic2_display_set_address@data_array
 26286  00861E  6E06               	movwf	__i2c_write@data,c
 26287  008620  0E00               	movlw	high __ic2_display_set_address@data_array
 26288  008622  6E07               	movwf	__i2c_write@data+1,c
 26289  008624  0E02               	movlw	2
 26290  008626  6E08               	movwf	__i2c_write@length,c
 26291  008628  0E78               	movlw	120
 26292  00862A  EC6F  F03F         	call	__i2c_write
 26293  00862E  0012               	return		;funcret
 26294  008630                     __end_of__ic2_display_set_address:
 26295                           	opt stack 0
 26296                           tosu	equ	0xFFF
 26297                           tosh	equ	0xFFE
 26298                           tosl	equ	0xFFD
 26299                           pclath	equ	0xFFA
 26300                           tblptru	equ	0xFF8
 26301                           tblptrh	equ	0xFF7
 26302                           tblptrl	equ	0xFF6
 26303                           tablat	equ	0xFF5
 26304                           prodh	equ	0xFF4
 26305                           prodl	equ	0xFF3
 26306                           intcon	equ	0xFF2
 26307                           intcon2	equ	0xFF1
 26308                           intcon3	equ	0xFF0
 26309                           indf0	equ	0xFEF
 26310                           postinc0	equ	0xFEE
 26311                           fsr0h	equ	0xFEA
 26312                           fsr0l	equ	0xFE9
 26313                           wreg	equ	0xFE8
 26314                           indf1	equ	0xFE7
 26315                           postdec1	equ	0xFE5
 26316                           plusw1	equ	0xFE3
 26317                           fsr1h	equ	0xFE2
 26318                           fsr1l	equ	0xFE1
 26319                           indf2	equ	0xFDF
 26320                           postinc2	equ	0xFDE
 26321                           postdec2	equ	0xFDD
 26322                           plusw2	equ	0xFDB
 26323                           fsr2h	equ	0xFDA
 26324                           fsr2l	equ	0xFD9
 26325                           status	equ	0xFD8
 26326                           
 26327 ;; *************** function _display_prepare *****************
 26328 ;; Defined at:
 26329 ;;		line 286 in file "display.c"
 26330 ;; Parameters:    Size  Location     Type
 26331 ;;  mode            1    wreg     unsigned char 
 26332 ;; Auto vars:     Size  Location     Type
 26333 ;;  mode            1   42[COMRAM] unsigned char 
 26334 ;; Return value:  Size  Location     Type
 26335 ;;                  1    wreg      void 
 26336 ;; Registers used:
 26337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26338 ;; Tracked objects:
 26339 ;;		On entry : 0/0
 26340 ;;		On exit  : 0/0
 26341 ;;		Unchanged: 0/0
 26342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26347 ;;Total ram usage:        3 bytes
 26348 ;; Hardware stack levels used:    1
 26349 ;; Hardware stack levels required when called:    6
 26350 ;; This function calls:
 26351 ;;		__display_checked
 26352 ;;		__display_clear
 26353 ;;		__display_done
 26354 ;;		__display_failed
 26355 ;;		__display_found
 26356 ;;		__display_programming
 26357 ;;		__display_rebooting
 26358 ;;		__display_search
 26359 ;;		__display_start
 26360 ;;		__display_verify
 26361 ;; This function is called by:
 26362 ;;		_main
 26363 ;;		_reboot
 26364 ;; This function uses a non-reentrant model
 26365 ;;
 26366                           
 26367                           	psect	text130
 26368  005974                     __ptext130:
 26369                           	opt stack 0
 26370  005974                     _display_prepare:
 26371                           	opt stack 21
 26372                           
 26373                           ;incstack = 0
 26374                           ;display_prepare@mode stored from wreg
 26375  005974  6E2B               	movwf	display_prepare@mode,c
 26376                           
 26377                           ;display.c: 288: _display_clear();
 26378  005976  EC4B  F03F         	call	__display_clear	;wreg free
 26379                           
 26380                           ;display.c: 290: switch(mode&0xF0)
 26381  00597A  D01B               	goto	l1542
 26382  00597C                     
 26383                           ;display.c: 293: _display_start();
 26384  00597C  EC45  F016         	call	__display_start	;wreg free
 26385                           
 26386                           ;display.c: 294: break;
 26387  005980  D047               	goto	l1553
 26388  005982                     
 26389                           ;display.c: 297: _display_search();
 26390  005982  EC96  F01F         	call	__display_search	;wreg free
 26391                           
 26392                           ;display.c: 298: break;
 26393  005986  D044               	goto	l1553
 26394  005988                     
 26395                           ;display.c: 301: _display_found();
 26396  005988  EC34  F018         	call	__display_found	;wreg free
 26397                           
 26398                           ;display.c: 302: break;
 26399  00598C  D041               	goto	l1553
 26400  00598E                     
 26401                           ;display.c: 305: _display_verify();
 26402  00598E  EC28  F022         	call	__display_verify	;wreg free
 26403                           
 26404                           ;display.c: 306: break;
 26405  005992  D03E               	goto	l1553
 26406  005994                     
 26407                           ;display.c: 309: _display_checked();
 26408  005994  EC64  F01D         	call	__display_checked	;wreg free
 26409                           
 26410                           ;display.c: 310: break;
 26411  005998  D03B               	goto	l1553
 26412  00599A                     
 26413                           ;display.c: 313: _display_failed();
 26414  00599A  EC4D  F009         	call	__display_failed	;wreg free
 26415                           
 26416                           ;display.c: 314: break;
 26417  00599E  D038               	goto	l1553
 26418  0059A0                     
 26419                           ;display.c: 317: _display_programming();
 26420  0059A0  EC10  F01A         	call	__display_programming	;wreg free
 26421                           
 26422                           ;display.c: 318: break;
 26423  0059A4  D035               	goto	l1553
 26424  0059A6                     
 26425                           ;display.c: 321: _display_done();
 26426  0059A6  EC22  F01E         	call	__display_done	;wreg free
 26427                           
 26428                           ;display.c: 322: break;
 26429  0059AA  D032               	goto	l1553
 26430  0059AC                     
 26431                           ;display.c: 325: _display_rebooting();
 26432  0059AC  ECD3  F03D         	call	__display_rebooting	;wreg free
 26433                           
 26434                           ;display.c: 327: }
 26435                           
 26436                           ;display.c: 326: break;
 26437  0059B0  D02F               	goto	l1553
 26438  0059B2                     l1542:
 26439  0059B2  502B               	movf	display_prepare@mode,w,c
 26440  0059B4  0BF0               	andlw	240
 26441  0059B6  6E29               	movwf	??_display_prepare& (0+255),c
 26442  0059B8  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26443                           
 26444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26445                           ; Switch size 1, requested type "space"
 26446                           ; Number of cases is 1, Range of values is 0 to 0
 26447                           ; switch strategies available:
 26448                           ; Name         Instructions Cycles
 26449                           ; simple_byte            4     3 (average)
 26450                           ;	Chosen strategy is simple_byte
 26451  0059BA  502A               	movf	??_display_prepare+1,w,c
 26452  0059BC  0A00               	xorlw	0	; case 0
 26453  0059BE  A4D8               	btfss	status,2,c
 26454  0059C0  D027               	goto	l1553
 26455                           
 26456                           ; Switch size 1, requested type "space"
 26457                           ; Number of cases is 9, Range of values is 0 to 128
 26458                           ; switch strategies available:
 26459                           ; Name         Instructions Cycles
 26460                           ; simple_byte           28    15 (average)
 26461                           ;	Chosen strategy is simple_byte
 26462  0059C2  5029               	movf	??_display_prepare,w,c
 26463  0059C4  0A00               	xorlw	0	; case 0
 26464  0059C6  B4D8               	btfsc	status,2,c
 26465  0059C8  D7D9               	goto	l1543
 26466  0059CA  0A10               	xorlw	16	; case 16
 26467  0059CC  B4D8               	btfsc	status,2,c
 26468  0059CE  D7D9               	goto	l1545
 26469  0059D0  0A30               	xorlw	48	; case 32
 26470  0059D2  B4D8               	btfsc	status,2,c
 26471  0059D4  D7D9               	goto	l1546
 26472  0059D6  0A10               	xorlw	16	; case 48
 26473  0059D8  B4D8               	btfsc	status,2,c
 26474  0059DA  D7D9               	goto	l1547
 26475  0059DC  0A70               	xorlw	112	; case 64
 26476  0059DE  B4D8               	btfsc	status,2,c
 26477  0059E0  D7D9               	goto	l1548
 26478  0059E2  0A10               	xorlw	16	; case 80
 26479  0059E4  B4D8               	btfsc	status,2,c
 26480  0059E6  D7D9               	goto	l1549
 26481  0059E8  0A30               	xorlw	48	; case 96
 26482  0059EA  B4D8               	btfsc	status,2,c
 26483  0059EC  D7D9               	goto	l1550
 26484  0059EE  0A10               	xorlw	16	; case 112
 26485  0059F0  B4D8               	btfsc	status,2,c
 26486  0059F2  D7D9               	goto	l1551
 26487  0059F4  0AF0               	xorlw	240	; case 128
 26488  0059F6  B4D8               	btfsc	status,2,c
 26489  0059F8  D7D9               	goto	l1552
 26490                           
 26491                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 26492  0059FA  D00A               	goto	l1553
 26493  0059FC                     
 26494                           ;display.c: 333: display_content[0][17] = '.';
 26495  0059FC  0E2E               	movlw	46
 26496  0059FE  0102               	movlb	2	; () banked
 26497  005A00  6F11               	movwf	(_display_content+17)& (0+255),b
 26498  005A02                     l1555:
 26499                           
 26500                           ;display.c: 336: display_content[0][16] = '.';
 26501  005A02  0E2E               	movlw	46
 26502  005A04  0102               	movlb	2	; () banked
 26503  005A06  6F10               	movwf	(_display_content+16)& (0+255),b
 26504  005A08                     l1556:
 26505                           
 26506                           ;display.c: 339: display_content[0][15] = '.';
 26507  005A08  0E2E               	movlw	46
 26508  005A0A  0102               	movlb	2	; () banked
 26509  005A0C  6F0F               	movwf	(_display_content+15)& (0+255),b
 26510                           
 26511                           ;display.c: 341: }
 26512  005A0E  D015               	goto	l1557
 26513  005A10                     l1553:
 26514                           
 26515                           ; BSR set to: 2
 26516  005A10  0100               	movlb	0	; () banked
 26517  005A12  39BB               	swapf	(_os+2)& (0+255),w,b	;volatile
 26518  005A14  42E8               	rrncf	wreg,f,c
 26519  005A16  0B07               	andlw	7
 26520  005A18  0B03               	andlw	3
 26521  005A1A  6E29               	movwf	??_display_prepare& (0+255),c
 26522  005A1C  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26523                           
 26524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26525                           ; Switch size 1, requested type "space"
 26526                           ; Number of cases is 1, Range of values is 0 to 0
 26527                           ; switch strategies available:
 26528                           ; Name         Instructions Cycles
 26529                           ; simple_byte            4     3 (average)
 26530                           ;	Chosen strategy is simple_byte
 26531  005A1E  502A               	movf	??_display_prepare+1,w,c
 26532  005A20  0A00               	xorlw	0	; case 0
 26533  005A22  A4D8               	btfss	status,2,c
 26534  005A24  D00A               	goto	l1557
 26535                           
 26536                           ; BSR set to: 0
 26537                           ; Switch size 1, requested type "space"
 26538                           ; Number of cases is 3, Range of values is 1 to 3
 26539                           ; switch strategies available:
 26540                           ; Name         Instructions Cycles
 26541                           ; simple_byte           10     6 (average)
 26542                           ;	Chosen strategy is simple_byte
 26543  005A26  5029               	movf	??_display_prepare,w,c
 26544  005A28  0A01               	xorlw	1	; case 1
 26545  005A2A  B4D8               	btfsc	status,2,c
 26546  005A2C  D7ED               	goto	l1556
 26547  005A2E  0A03               	xorlw	3	; case 2
 26548  005A30  B4D8               	btfsc	status,2,c
 26549  005A32  D7E7               	goto	l1555
 26550  005A34  0A01               	xorlw	1	; case 3
 26551  005A36  B4D8               	btfsc	status,2,c
 26552  005A38  D7E1               	goto	l1554
 26553  005A3A                     l1557:
 26554                           
 26555                           ;display.c: 345: if(INTCONbits.GIE)
 26556  005A3A  AEF2               	btfss	intcon,7,c	;volatile
 26557  005A3C  0012               	return	
 26558                           
 26559                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 26560  005A3E  0E49               	movlw	73
 26561  005A40  0102               	movlb	2	; () banked
 26562  005A42  6F12               	movwf	(_display_content+18)& (0+255),b
 26563  005A44  0012               	return	
 26564  005A46                     __end_of_display_prepare:
 26565                           	opt stack 0
 26566                           tosu	equ	0xFFF
 26567                           tosh	equ	0xFFE
 26568                           tosl	equ	0xFFD
 26569                           pclath	equ	0xFFA
 26570                           tblptru	equ	0xFF8
 26571                           tblptrh	equ	0xFF7
 26572                           tblptrl	equ	0xFF6
 26573                           tablat	equ	0xFF5
 26574                           prodh	equ	0xFF4
 26575                           prodl	equ	0xFF3
 26576                           intcon	equ	0xFF2
 26577                           intcon2	equ	0xFF1
 26578                           intcon3	equ	0xFF0
 26579                           indf0	equ	0xFEF
 26580                           postinc0	equ	0xFEE
 26581                           fsr0h	equ	0xFEA
 26582                           fsr0l	equ	0xFE9
 26583                           wreg	equ	0xFE8
 26584                           indf1	equ	0xFE7
 26585                           postdec1	equ	0xFE5
 26586                           plusw1	equ	0xFE3
 26587                           fsr1h	equ	0xFE2
 26588                           fsr1l	equ	0xFE1
 26589                           indf2	equ	0xFDF
 26590                           postinc2	equ	0xFDE
 26591                           postdec2	equ	0xFDD
 26592                           plusw2	equ	0xFDB
 26593                           fsr2h	equ	0xFDA
 26594                           fsr2l	equ	0xFD9
 26595                           status	equ	0xFD8
 26596                           
 26597 ;; *************** function __display_verify *****************
 26598 ;; Defined at:
 26599 ;;		line 417 in file "display.c"
 26600 ;; Parameters:    Size  Location     Type
 26601 ;;		None
 26602 ;; Auto vars:     Size  Location     Type
 26603 ;;  cntr            1   32[COMRAM] unsigned char 
 26604 ;;  start           1    0        unsigned char 
 26605 ;; Return value:  Size  Location     Type
 26606 ;;                  1    wreg      void 
 26607 ;; Registers used:
 26608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26609 ;; Tracked objects:
 26610 ;;		On entry : 0/0
 26611 ;;		On exit  : 0/0
 26612 ;;		Unchanged: 0/0
 26613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26617 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26618 ;;Total ram usage:        3 bytes
 26619 ;; Hardware stack levels used:    1
 26620 ;; Hardware stack levels required when called:    4
 26621 ;; This function calls:
 26622 ;;		__display_itoa_u16
 26623 ;;		_bootloader_get_entries
 26624 ;; This function is called by:
 26625 ;;		_display_prepare
 26626 ;; This function uses a non-reentrant model
 26627 ;;
 26628                           
 26629                           	psect	text131
 26630  004450                     __ptext131:
 26631                           	opt stack 0
 26632  004450                     __display_verify:
 26633                           	opt stack 22
 26634                           
 26635                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 26636                           
 26637                           ;incstack = 0
 26638  004450  0E00               	movlw	0
 26639  004452  6E21               	movwf	__display_verify@cntr,c
 26640                           
 26641                           ;display.c: 422: while(verify_line1[cntr])
 26642  004454  D017               	goto	l1610
 26643  004456                     
 26644                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 26645  004456  5021               	movf	__display_verify@cntr,w,c
 26646  004458  0D01               	mullw	1
 26647  00445A  0EC4               	movlw	low _verify_line1
 26648  00445C  24F3               	addwf	prodl,w,c
 26649  00445E  6EF6               	movwf	tblptrl,c
 26650  004460  0E8D               	movlw	high _verify_line1
 26651  004462  20F4               	addwfc	prodh,w,c
 26652  004464  6EF7               	movwf	tblptrh,c
 26653  004466                     	if	1	;There are 3 active tblptr bytes
 26654  004466  6AF8               	clrf	tblptru,c
 26655  004468  0E00               	movlw	low (__mediumconst shr (0+16))
 26656  00446A  22F8               	addwfc	tblptru,f,c
 26657  00446C                     	endif
 26658  00446C  5021               	movf	__display_verify@cntr,w,c
 26659  00446E  0D01               	mullw	1
 26660  004470  0E00               	movlw	low _display_content
 26661  004472  24F3               	addwf	prodl,w,c
 26662  004474  6ED9               	movwf	fsr2l,c
 26663  004476  0E02               	movlw	high _display_content
 26664  004478  20F4               	addwfc	prodh,w,c
 26665  00447A  6EDA               	movwf	fsr2h,c
 26666  00447C  0008               	tblrd		*
 26667  00447E  CFF5 FFDF          	movff	tablat,indf2
 26668  004482  2A21               	incf	__display_verify@cntr,f,c
 26669  004484                     l1610:
 26670  004484  5021               	movf	__display_verify@cntr,w,c
 26671  004486  0D01               	mullw	1
 26672  004488  0EC4               	movlw	low _verify_line1
 26673  00448A  24F3               	addwf	prodl,w,c
 26674  00448C  6EF6               	movwf	tblptrl,c
 26675  00448E  0E8D               	movlw	high _verify_line1
 26676  004490  20F4               	addwfc	prodh,w,c
 26677  004492  6EF7               	movwf	tblptrh,c
 26678  004494                     	if	1	;There are 3 active tblptr bytes
 26679  004494  6AF8               	clrf	tblptru,c
 26680  004496  0E00               	movlw	low (__mediumconst shr (0+16))
 26681  004498  22F8               	addwfc	tblptru,f,c
 26682  00449A                     	endif
 26683  00449A  0008               	tblrd		*
 26684  00449C  50F5               	movf	tablat,w,c
 26685  00449E  0900               	iorlw	0
 26686  0044A0  A4D8               	btfss	status,2,c
 26687  0044A2  D7D9               	goto	l1611
 26688                           
 26689                           ;display.c: 424: cntr = 0;
 26690  0044A4  0E00               	movlw	0
 26691  0044A6  6E21               	movwf	__display_verify@cntr,c
 26692                           
 26693                           ;display.c: 425: while(verify_line2[cntr])
 26694  0044A8  D017               	goto	l1613
 26695  0044AA                     
 26696                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 26697  0044AA  5021               	movf	__display_verify@cntr,w,c
 26698  0044AC  0D01               	mullw	1
 26699  0044AE  0E4C               	movlw	low _verify_line2
 26700  0044B0  24F3               	addwf	prodl,w,c
 26701  0044B2  6EF6               	movwf	tblptrl,c
 26702  0044B4  0E8E               	movlw	high _verify_line2
 26703  0044B6  20F4               	addwfc	prodh,w,c
 26704  0044B8  6EF7               	movwf	tblptrh,c
 26705  0044BA                     	if	1	;There are 3 active tblptr bytes
 26706  0044BA  6AF8               	clrf	tblptru,c
 26707  0044BC  0E00               	movlw	low (__mediumconst shr (0+16))
 26708  0044BE  22F8               	addwfc	tblptru,f,c
 26709  0044C0                     	endif
 26710  0044C0  5021               	movf	__display_verify@cntr,w,c
 26711  0044C2  0D01               	mullw	1
 26712  0044C4  0E14               	movlw	low (_display_content+20)
 26713  0044C6  24F3               	addwf	prodl,w,c
 26714  0044C8  6ED9               	movwf	fsr2l,c
 26715  0044CA  0E02               	movlw	high (_display_content+20)
 26716  0044CC  20F4               	addwfc	prodh,w,c
 26717  0044CE  6EDA               	movwf	fsr2h,c
 26718  0044D0  0008               	tblrd		*
 26719  0044D2  CFF5 FFDF          	movff	tablat,indf2
 26720  0044D6  2A21               	incf	__display_verify@cntr,f,c
 26721  0044D8                     l1613:
 26722  0044D8  5021               	movf	__display_verify@cntr,w,c
 26723  0044DA  0D01               	mullw	1
 26724  0044DC  0E4C               	movlw	low _verify_line2
 26725  0044DE  24F3               	addwf	prodl,w,c
 26726  0044E0  6EF6               	movwf	tblptrl,c
 26727  0044E2  0E8E               	movlw	high _verify_line2
 26728  0044E4  20F4               	addwfc	prodh,w,c
 26729  0044E6  6EF7               	movwf	tblptrh,c
 26730  0044E8                     	if	1	;There are 3 active tblptr bytes
 26731  0044E8  6AF8               	clrf	tblptru,c
 26732  0044EA  0E00               	movlw	low (__mediumconst shr (0+16))
 26733  0044EC  22F8               	addwfc	tblptru,f,c
 26734  0044EE                     	endif
 26735  0044EE  0008               	tblrd		*
 26736  0044F0  50F5               	movf	tablat,w,c
 26737  0044F2  0900               	iorlw	0
 26738  0044F4  A4D8               	btfss	status,2,c
 26739  0044F6  D7D9               	goto	l1614
 26740                           
 26741                           ;display.c: 427: cntr = 0;
 26742  0044F8  0E00               	movlw	0
 26743  0044FA  6E21               	movwf	__display_verify@cntr,c
 26744                           
 26745                           ;display.c: 428: while(verify_line3[cntr])
 26746  0044FC  D017               	goto	l1616
 26747  0044FE                     
 26748                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 26749  0044FE  5021               	movf	__display_verify@cntr,w,c
 26750  004500  0D01               	mullw	1
 26751  004502  0E8A               	movlw	low _verify_line3
 26752  004504  24F3               	addwf	prodl,w,c
 26753  004506  6EF6               	movwf	tblptrl,c
 26754  004508  0E8E               	movlw	high _verify_line3
 26755  00450A  20F4               	addwfc	prodh,w,c
 26756  00450C  6EF7               	movwf	tblptrh,c
 26757  00450E                     	if	1	;There are 3 active tblptr bytes
 26758  00450E  6AF8               	clrf	tblptru,c
 26759  004510  0E00               	movlw	low (__mediumconst shr (0+16))
 26760  004512  22F8               	addwfc	tblptru,f,c
 26761  004514                     	endif
 26762  004514  5021               	movf	__display_verify@cntr,w,c
 26763  004516  0D01               	mullw	1
 26764  004518  0E28               	movlw	low (_display_content+40)
 26765  00451A  24F3               	addwf	prodl,w,c
 26766  00451C  6ED9               	movwf	fsr2l,c
 26767  00451E  0E02               	movlw	high (_display_content+40)
 26768  004520  20F4               	addwfc	prodh,w,c
 26769  004522  6EDA               	movwf	fsr2h,c
 26770  004524  0008               	tblrd		*
 26771  004526  CFF5 FFDF          	movff	tablat,indf2
 26772  00452A  2A21               	incf	__display_verify@cntr,f,c
 26773  00452C                     l1616:
 26774  00452C  5021               	movf	__display_verify@cntr,w,c
 26775  00452E  0D01               	mullw	1
 26776  004530  0E8A               	movlw	low _verify_line3
 26777  004532  24F3               	addwf	prodl,w,c
 26778  004534  6EF6               	movwf	tblptrl,c
 26779  004536  0E8E               	movlw	high _verify_line3
 26780  004538  20F4               	addwfc	prodh,w,c
 26781  00453A  6EF7               	movwf	tblptrh,c
 26782  00453C                     	if	1	;There are 3 active tblptr bytes
 26783  00453C  6AF8               	clrf	tblptru,c
 26784  00453E  0E00               	movlw	low (__mediumconst shr (0+16))
 26785  004540  22F8               	addwfc	tblptru,f,c
 26786  004542                     	endif
 26787  004542  0008               	tblrd		*
 26788  004544  50F5               	movf	tablat,w,c
 26789  004546  0900               	iorlw	0
 26790  004548  A4D8               	btfss	status,2,c
 26791  00454A  D7D9               	goto	l1617
 26792                           
 26793                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 26794  00454C  ECAC  F044         	call	_bootloader_get_entries	;wreg free
 26795  004550  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 26796  004554  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 26797  004558  6A1B               	clrf	__display_itoa_u16@value+2,c
 26798  00455A  6A1C               	clrf	__display_itoa_u16@value+3,c
 26799  00455C  5021               	movf	__display_verify@cntr,w,c
 26800  00455E  6E1F               	movwf	??__display_verify& (0+255),c
 26801  004560  6A20               	clrf	(??__display_verify+1)& (0+255),c
 26802  004562  0E01               	movlw	1
 26803  004564  261F               	addwf	??__display_verify,f,c
 26804  004566  0E00               	movlw	0
 26805  004568  2220               	addwfc	??__display_verify+1,f,c
 26806  00456A  0E28               	movlw	low (_display_content+40)
 26807  00456C  241F               	addwf	??__display_verify,w,c
 26808  00456E  6E1D               	movwf	__display_itoa_u16@text,c
 26809  004570  0E02               	movlw	high (_display_content+40)
 26810  004572  2020               	addwfc	??__display_verify+1,w,c
 26811  004574  6E1E               	movwf	__display_itoa_u16@text+1,c
 26812  004576  EC50  F02E         	call	__display_itoa_u16	;wreg free
 26813  00457A  0012               	return		;funcret
 26814  00457C                     __end_of__display_verify:
 26815                           	opt stack 0
 26816                           tosu	equ	0xFFF
 26817                           tosh	equ	0xFFE
 26818                           tosl	equ	0xFFD
 26819                           pclath	equ	0xFFA
 26820                           tblptru	equ	0xFF8
 26821                           tblptrh	equ	0xFF7
 26822                           tblptrl	equ	0xFF6
 26823                           tablat	equ	0xFF5
 26824                           prodh	equ	0xFF4
 26825                           prodl	equ	0xFF3
 26826                           intcon	equ	0xFF2
 26827                           intcon2	equ	0xFF1
 26828                           intcon3	equ	0xFF0
 26829                           indf0	equ	0xFEF
 26830                           postinc0	equ	0xFEE
 26831                           fsr0h	equ	0xFEA
 26832                           fsr0l	equ	0xFE9
 26833                           wreg	equ	0xFE8
 26834                           indf1	equ	0xFE7
 26835                           postdec1	equ	0xFE5
 26836                           plusw1	equ	0xFE3
 26837                           fsr1h	equ	0xFE2
 26838                           fsr1l	equ	0xFE1
 26839                           indf2	equ	0xFDF
 26840                           postinc2	equ	0xFDE
 26841                           postdec2	equ	0xFDD
 26842                           plusw2	equ	0xFDB
 26843                           fsr2h	equ	0xFDA
 26844                           fsr2l	equ	0xFD9
 26845                           status	equ	0xFD8
 26846                           
 26847 ;; *************** function __display_start *****************
 26848 ;; Defined at:
 26849 ;;		line 351 in file "display.c"
 26850 ;; Parameters:    Size  Location     Type
 26851 ;;		None
 26852 ;; Auto vars:     Size  Location     Type
 26853 ;;  cntr            1   36[COMRAM] unsigned char 
 26854 ;; Return value:  Size  Location     Type
 26855 ;;                  1    wreg      void 
 26856 ;; Registers used:
 26857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26858 ;; Tracked objects:
 26859 ;;		On entry : 0/0
 26860 ;;		On exit  : 0/0
 26861 ;;		Unchanged: 0/0
 26862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26867 ;;Total ram usage:        1 bytes
 26868 ;; Hardware stack levels used:    1
 26869 ;; Hardware stack levels required when called:    5
 26870 ;; This function calls:
 26871 ;;		__display_itoa_u32
 26872 ;; This function is called by:
 26873 ;;		_display_prepare
 26874 ;; This function uses a non-reentrant model
 26875 ;;
 26876                           
 26877                           	psect	text132
 26878  002C8A                     __ptext132:
 26879                           	opt stack 0
 26880  002C8A                     __display_start:
 26881                           	opt stack 21
 26882                           
 26883                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 26884                           
 26885                           ;incstack = 0
 26886  002C8A  0E00               	movlw	0
 26887  002C8C  6E25               	movwf	__display_start@cntr,c
 26888                           
 26889                           ;display.c: 355: while(start_line1[cntr])
 26890  002C8E  D017               	goto	l1562
 26891  002C90                     
 26892                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 26893  002C90  5025               	movf	__display_start@cntr,w,c
 26894  002C92  0D01               	mullw	1
 26895  002C94  0EF4               	movlw	low _start_line1
 26896  002C96  24F3               	addwf	prodl,w,c
 26897  002C98  6EF6               	movwf	tblptrl,c
 26898  002C9A  0E8D               	movlw	high _start_line1
 26899  002C9C  20F4               	addwfc	prodh,w,c
 26900  002C9E  6EF7               	movwf	tblptrh,c
 26901  002CA0                     	if	1	;There are 3 active tblptr bytes
 26902  002CA0  6AF8               	clrf	tblptru,c
 26903  002CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 26904  002CA4  22F8               	addwfc	tblptru,f,c
 26905  002CA6                     	endif
 26906  002CA6  5025               	movf	__display_start@cntr,w,c
 26907  002CA8  0D01               	mullw	1
 26908  002CAA  0E00               	movlw	low _display_content
 26909  002CAC  24F3               	addwf	prodl,w,c
 26910  002CAE  6ED9               	movwf	fsr2l,c
 26911  002CB0  0E02               	movlw	high _display_content
 26912  002CB2  20F4               	addwfc	prodh,w,c
 26913  002CB4  6EDA               	movwf	fsr2h,c
 26914  002CB6  0008               	tblrd		*
 26915  002CB8  CFF5 FFDF          	movff	tablat,indf2
 26916  002CBC  2A25               	incf	__display_start@cntr,f,c
 26917  002CBE                     l1562:
 26918  002CBE  5025               	movf	__display_start@cntr,w,c
 26919  002CC0  0D01               	mullw	1
 26920  002CC2  0EF4               	movlw	low _start_line1
 26921  002CC4  24F3               	addwf	prodl,w,c
 26922  002CC6  6EF6               	movwf	tblptrl,c
 26923  002CC8  0E8D               	movlw	high _start_line1
 26924  002CCA  20F4               	addwfc	prodh,w,c
 26925  002CCC  6EF7               	movwf	tblptrh,c
 26926  002CCE                     	if	1	;There are 3 active tblptr bytes
 26927  002CCE  6AF8               	clrf	tblptru,c
 26928  002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 26929  002CD2  22F8               	addwfc	tblptru,f,c
 26930  002CD4                     	endif
 26931  002CD4  0008               	tblrd		*
 26932  002CD6  50F5               	movf	tablat,w,c
 26933  002CD8  0900               	iorlw	0
 26934  002CDA  A4D8               	btfss	status,2,c
 26935  002CDC  D7D9               	goto	l1563
 26936                           
 26937                           ;display.c: 357: cntr = 0;
 26938  002CDE  0E00               	movlw	0
 26939  002CE0  6E25               	movwf	__display_start@cntr,c
 26940                           
 26941                           ;display.c: 358: while(start_line2[cntr])
 26942  002CE2  D017               	goto	l1565
 26943  002CE4                     
 26944                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 26945  002CE4  5025               	movf	__display_start@cntr,w,c
 26946  002CE6  0D01               	mullw	1
 26947  002CE8  0E62               	movlw	low _start_line2
 26948  002CEA  24F3               	addwf	prodl,w,c
 26949  002CEC  6EF6               	movwf	tblptrl,c
 26950  002CEE  0E8E               	movlw	high _start_line2
 26951  002CF0  20F4               	addwfc	prodh,w,c
 26952  002CF2  6EF7               	movwf	tblptrh,c
 26953  002CF4                     	if	1	;There are 3 active tblptr bytes
 26954  002CF4  6AF8               	clrf	tblptru,c
 26955  002CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 26956  002CF8  22F8               	addwfc	tblptru,f,c
 26957  002CFA                     	endif
 26958  002CFA  5025               	movf	__display_start@cntr,w,c
 26959  002CFC  0D01               	mullw	1
 26960  002CFE  0E14               	movlw	low (_display_content+20)
 26961  002D00  24F3               	addwf	prodl,w,c
 26962  002D02  6ED9               	movwf	fsr2l,c
 26963  002D04  0E02               	movlw	high (_display_content+20)
 26964  002D06  20F4               	addwfc	prodh,w,c
 26965  002D08  6EDA               	movwf	fsr2h,c
 26966  002D0A  0008               	tblrd		*
 26967  002D0C  CFF5 FFDF          	movff	tablat,indf2
 26968  002D10  2A25               	incf	__display_start@cntr,f,c
 26969  002D12                     l1565:
 26970  002D12  5025               	movf	__display_start@cntr,w,c
 26971  002D14  0D01               	mullw	1
 26972  002D16  0E62               	movlw	low _start_line2
 26973  002D18  24F3               	addwf	prodl,w,c
 26974  002D1A  6EF6               	movwf	tblptrl,c
 26975  002D1C  0E8E               	movlw	high _start_line2
 26976  002D1E  20F4               	addwfc	prodh,w,c
 26977  002D20  6EF7               	movwf	tblptrh,c
 26978  002D22                     	if	1	;There are 3 active tblptr bytes
 26979  002D22  6AF8               	clrf	tblptru,c
 26980  002D24  0E00               	movlw	low (__mediumconst shr (0+16))
 26981  002D26  22F8               	addwfc	tblptru,f,c
 26982  002D28                     	endif
 26983  002D28  0008               	tblrd		*
 26984  002D2A  50F5               	movf	tablat,w,c
 26985  002D2C  0900               	iorlw	0
 26986  002D2E  A4D8               	btfss	status,2,c
 26987  002D30  D7D9               	goto	l1566
 26988                           
 26989                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 26990  002D32  0E00               	movlw	0
 26991  002D34  6E1F               	movwf	__display_itoa_u32@value,c
 26992  002D36  0E00               	movlw	0
 26993  002D38  6E20               	movwf	__display_itoa_u32@value+1,c
 26994  002D3A  0E00               	movlw	0
 26995  002D3C  6E21               	movwf	__display_itoa_u32@value+2,c
 26996  002D3E  0E00               	movlw	0
 26997  002D40  6E22               	movwf	__display_itoa_u32@value+3,c
 26998  002D42  5025               	movf	__display_start@cntr,w,c
 26999  002D44  0D01               	mullw	1
 27000  002D46  0E14               	movlw	low (_display_content+20)
 27001  002D48  24F3               	addwf	prodl,w,c
 27002  002D4A  6E23               	movwf	__display_itoa_u32@text,c
 27003  002D4C  0E02               	movlw	high (_display_content+20)
 27004  002D4E  20F4               	addwfc	prodh,w,c
 27005  002D50  6E24               	movwf	__display_itoa_u32@text+1,c
 27006  002D52  EC07  F006         	call	__display_itoa_u32	;wreg free
 27007  002D56  2625               	addwf	__display_start@cntr,f,c
 27008                           
 27009                           ;display.c: 361: display_content[1][cntr++] = '.';
 27010  002D58  5025               	movf	__display_start@cntr,w,c
 27011  002D5A  0D01               	mullw	1
 27012  002D5C  0E14               	movlw	low (_display_content+20)
 27013  002D5E  24F3               	addwf	prodl,w,c
 27014  002D60  6ED9               	movwf	fsr2l,c
 27015  002D62  0E02               	movlw	high (_display_content+20)
 27016  002D64  20F4               	addwfc	prodh,w,c
 27017  002D66  6EDA               	movwf	fsr2h,c
 27018  002D68  0E2E               	movlw	46
 27019  002D6A  6EDF               	movwf	indf2,c
 27020  002D6C  2A25               	incf	__display_start@cntr,f,c
 27021                           
 27022                           ;display.c: 362: cntr += _display_itoa_u32(0x02, &display_content[1][cntr]);
 27023  002D6E  0E02               	movlw	2
 27024  002D70  6E1F               	movwf	__display_itoa_u32@value,c
 27025  002D72  0E00               	movlw	0
 27026  002D74  6E20               	movwf	__display_itoa_u32@value+1,c
 27027  002D76  0E00               	movlw	0
 27028  002D78  6E21               	movwf	__display_itoa_u32@value+2,c
 27029  002D7A  0E00               	movlw	0
 27030  002D7C  6E22               	movwf	__display_itoa_u32@value+3,c
 27031  002D7E  5025               	movf	__display_start@cntr,w,c
 27032  002D80  0D01               	mullw	1
 27033  002D82  0E14               	movlw	low (_display_content+20)
 27034  002D84  24F3               	addwf	prodl,w,c
 27035  002D86  6E23               	movwf	__display_itoa_u32@text,c
 27036  002D88  0E02               	movlw	high (_display_content+20)
 27037  002D8A  20F4               	addwfc	prodh,w,c
 27038  002D8C  6E24               	movwf	__display_itoa_u32@text+1,c
 27039  002D8E  EC07  F006         	call	__display_itoa_u32	;wreg free
 27040  002D92  2625               	addwf	__display_start@cntr,f,c
 27041                           
 27042                           ;display.c: 363: display_content[1][cntr++] = '.';
 27043  002D94  5025               	movf	__display_start@cntr,w,c
 27044  002D96  0D01               	mullw	1
 27045  002D98  0E14               	movlw	low (_display_content+20)
 27046  002D9A  24F3               	addwf	prodl,w,c
 27047  002D9C  6ED9               	movwf	fsr2l,c
 27048  002D9E  0E02               	movlw	high (_display_content+20)
 27049  002DA0  20F4               	addwfc	prodh,w,c
 27050  002DA2  6EDA               	movwf	fsr2h,c
 27051  002DA4  0E2E               	movlw	46
 27052  002DA6  6EDF               	movwf	indf2,c
 27053  002DA8  2A25               	incf	__display_start@cntr,f,c
 27054                           
 27055                           ;display.c: 364: cntr += _display_itoa_u32(0x01, &display_content[1][cntr]);
 27056  002DAA  0E01               	movlw	1
 27057  002DAC  6E1F               	movwf	__display_itoa_u32@value,c
 27058  002DAE  0E00               	movlw	0
 27059  002DB0  6E20               	movwf	__display_itoa_u32@value+1,c
 27060  002DB2  0E00               	movlw	0
 27061  002DB4  6E21               	movwf	__display_itoa_u32@value+2,c
 27062  002DB6  0E00               	movlw	0
 27063  002DB8  6E22               	movwf	__display_itoa_u32@value+3,c
 27064  002DBA  5025               	movf	__display_start@cntr,w,c
 27065  002DBC  0D01               	mullw	1
 27066  002DBE  0E14               	movlw	low (_display_content+20)
 27067  002DC0  24F3               	addwf	prodl,w,c
 27068  002DC2  6E23               	movwf	__display_itoa_u32@text,c
 27069  002DC4  0E02               	movlw	high (_display_content+20)
 27070  002DC6  20F4               	addwfc	prodh,w,c
 27071  002DC8  6E24               	movwf	__display_itoa_u32@text+1,c
 27072  002DCA  EC07  F006         	call	__display_itoa_u32	;wreg free
 27073  002DCE  2625               	addwf	__display_start@cntr,f,c
 27074                           
 27075                           ;display.c: 365: cntr = 0;
 27076  002DD0  0E00               	movlw	0
 27077  002DD2  6E25               	movwf	__display_start@cntr,c
 27078                           
 27079                           ;display.c: 366: while(start_line3[cntr])
 27080  002DD4  D017               	goto	l1568
 27081  002DD6                     
 27082                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 27083  002DD6  5025               	movf	__display_start@cntr,w,c
 27084  002DD8  0D01               	mullw	1
 27085  002DDA  0EA7               	movlw	low _start_line3
 27086  002DDC  24F3               	addwf	prodl,w,c
 27087  002DDE  6EF6               	movwf	tblptrl,c
 27088  002DE0  0E8E               	movlw	high _start_line3
 27089  002DE2  20F4               	addwfc	prodh,w,c
 27090  002DE4  6EF7               	movwf	tblptrh,c
 27091  002DE6                     	if	1	;There are 3 active tblptr bytes
 27092  002DE6  6AF8               	clrf	tblptru,c
 27093  002DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 27094  002DEA  22F8               	addwfc	tblptru,f,c
 27095  002DEC                     	endif
 27096  002DEC  5025               	movf	__display_start@cntr,w,c
 27097  002DEE  0D01               	mullw	1
 27098  002DF0  0E28               	movlw	low (_display_content+40)
 27099  002DF2  24F3               	addwf	prodl,w,c
 27100  002DF4  6ED9               	movwf	fsr2l,c
 27101  002DF6  0E02               	movlw	high (_display_content+40)
 27102  002DF8  20F4               	addwfc	prodh,w,c
 27103  002DFA  6EDA               	movwf	fsr2h,c
 27104  002DFC  0008               	tblrd		*
 27105  002DFE  CFF5 FFDF          	movff	tablat,indf2
 27106  002E02  2A25               	incf	__display_start@cntr,f,c
 27107  002E04                     l1568:
 27108  002E04  5025               	movf	__display_start@cntr,w,c
 27109  002E06  0D01               	mullw	1
 27110  002E08  0EA7               	movlw	low _start_line3
 27111  002E0A  24F3               	addwf	prodl,w,c
 27112  002E0C  6EF6               	movwf	tblptrl,c
 27113  002E0E  0E8E               	movlw	high _start_line3
 27114  002E10  20F4               	addwfc	prodh,w,c
 27115  002E12  6EF7               	movwf	tblptrh,c
 27116  002E14                     	if	1	;There are 3 active tblptr bytes
 27117  002E14  6AF8               	clrf	tblptru,c
 27118  002E16  0E00               	movlw	low (__mediumconst shr (0+16))
 27119  002E18  22F8               	addwfc	tblptru,f,c
 27120  002E1A                     	endif
 27121  002E1A  0008               	tblrd		*
 27122  002E1C  50F5               	movf	tablat,w,c
 27123  002E1E  0900               	iorlw	0
 27124  002E20  A4D8               	btfss	status,2,c
 27125  002E22  D7D9               	goto	l1569
 27126                           
 27127                           ;display.c: 368: cntr = 0;
 27128  002E24  0E00               	movlw	0
 27129  002E26  6E25               	movwf	__display_start@cntr,c
 27130                           
 27131                           ;display.c: 369: while(start_line4[cntr])
 27132  002E28  D017               	goto	l1571
 27133  002E2A                     
 27134                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 27135  002E2A  5025               	movf	__display_start@cntr,w,c
 27136  002E2C  0D01               	mullw	1
 27137  002E2E  0E22               	movlw	low _start_line4
 27138  002E30  24F3               	addwf	prodl,w,c
 27139  002E32  6EF6               	movwf	tblptrl,c
 27140  002E34  0E8E               	movlw	high _start_line4
 27141  002E36  20F4               	addwfc	prodh,w,c
 27142  002E38  6EF7               	movwf	tblptrh,c
 27143  002E3A                     	if	1	;There are 3 active tblptr bytes
 27144  002E3A  6AF8               	clrf	tblptru,c
 27145  002E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 27146  002E3E  22F8               	addwfc	tblptru,f,c
 27147  002E40                     	endif
 27148  002E40  5025               	movf	__display_start@cntr,w,c
 27149  002E42  0D01               	mullw	1
 27150  002E44  0E3C               	movlw	low (_display_content+60)
 27151  002E46  24F3               	addwf	prodl,w,c
 27152  002E48  6ED9               	movwf	fsr2l,c
 27153  002E4A  0E02               	movlw	high (_display_content+60)
 27154  002E4C  20F4               	addwfc	prodh,w,c
 27155  002E4E  6EDA               	movwf	fsr2h,c
 27156  002E50  0008               	tblrd		*
 27157  002E52  CFF5 FFDF          	movff	tablat,indf2
 27158  002E56  2A25               	incf	__display_start@cntr,f,c
 27159  002E58                     l1571:
 27160  002E58  5025               	movf	__display_start@cntr,w,c
 27161  002E5A  0D01               	mullw	1
 27162  002E5C  0E22               	movlw	low _start_line4
 27163  002E5E  24F3               	addwf	prodl,w,c
 27164  002E60  6EF6               	movwf	tblptrl,c
 27165  002E62  0E8E               	movlw	high _start_line4
 27166  002E64  20F4               	addwfc	prodh,w,c
 27167  002E66  6EF7               	movwf	tblptrh,c
 27168  002E68                     	if	1	;There are 3 active tblptr bytes
 27169  002E68  6AF8               	clrf	tblptru,c
 27170  002E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 27171  002E6C  22F8               	addwfc	tblptru,f,c
 27172  002E6E                     	endif
 27173  002E6E  0008               	tblrd		*
 27174  002E70  50F5               	movf	tablat,w,c
 27175  002E72  0900               	iorlw	0
 27176  002E74  B4D8               	btfsc	status,2,c
 27177  002E76  0012               	return	
 27178  002E78  D7D8               	goto	l1572
 27179  002E7A                     __end_of__display_start:
 27180                           	opt stack 0
 27181                           tosu	equ	0xFFF
 27182                           tosh	equ	0xFFE
 27183                           tosl	equ	0xFFD
 27184                           pclath	equ	0xFFA
 27185                           tblptru	equ	0xFF8
 27186                           tblptrh	equ	0xFF7
 27187                           tblptrl	equ	0xFF6
 27188                           tablat	equ	0xFF5
 27189                           prodh	equ	0xFF4
 27190                           prodl	equ	0xFF3
 27191                           intcon	equ	0xFF2
 27192                           intcon2	equ	0xFF1
 27193                           intcon3	equ	0xFF0
 27194                           indf0	equ	0xFEF
 27195                           postinc0	equ	0xFEE
 27196                           fsr0h	equ	0xFEA
 27197                           fsr0l	equ	0xFE9
 27198                           wreg	equ	0xFE8
 27199                           indf1	equ	0xFE7
 27200                           postdec1	equ	0xFE5
 27201                           plusw1	equ	0xFE3
 27202                           fsr1h	equ	0xFE2
 27203                           fsr1l	equ	0xFE1
 27204                           indf2	equ	0xFDF
 27205                           postinc2	equ	0xFDE
 27206                           postdec2	equ	0xFDD
 27207                           plusw2	equ	0xFDB
 27208                           fsr2h	equ	0xFDA
 27209                           fsr2l	equ	0xFD9
 27210                           status	equ	0xFD8
 27211                           
 27212 ;; *************** function __display_search *****************
 27213 ;; Defined at:
 27214 ;;		line 373 in file "display.c"
 27215 ;; Parameters:    Size  Location     Type
 27216 ;;		None
 27217 ;; Auto vars:     Size  Location     Type
 27218 ;;  cntr            1    0[COMRAM] unsigned char 
 27219 ;; Return value:  Size  Location     Type
 27220 ;;                  1    wreg      void 
 27221 ;; Registers used:
 27222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27223 ;; Tracked objects:
 27224 ;;		On entry : 0/0
 27225 ;;		On exit  : 0/0
 27226 ;;		Unchanged: 0/0
 27227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27232 ;;Total ram usage:        1 bytes
 27233 ;; Hardware stack levels used:    1
 27234 ;; This function calls:
 27235 ;;		Nothing
 27236 ;; This function is called by:
 27237 ;;		_display_prepare
 27238 ;; This function uses a non-reentrant model
 27239 ;;
 27240                           
 27241                           	psect	text133
 27242  003F2C                     __ptext133:
 27243                           	opt stack 0
 27244  003F2C                     __display_search:
 27245                           	opt stack 26
 27246                           
 27247                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 27248                           
 27249                           ;incstack = 0
 27250  003F2C  0E00               	movlw	0
 27251  003F2E  6E01               	movwf	__display_search@cntr,c
 27252                           
 27253                           ;display.c: 377: while(search_line1[cntr])
 27254  003F30  D017               	goto	l1577
 27255  003F32                     
 27256                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 27257  003F32  5001               	movf	__display_search@cntr,w,c
 27258  003F34  0D01               	mullw	1
 27259  003F36  0EE4               	movlw	low _search_line1
 27260  003F38  24F3               	addwf	prodl,w,c
 27261  003F3A  6EF6               	movwf	tblptrl,c
 27262  003F3C  0E8D               	movlw	high _search_line1
 27263  003F3E  20F4               	addwfc	prodh,w,c
 27264  003F40  6EF7               	movwf	tblptrh,c
 27265  003F42                     	if	1	;There are 3 active tblptr bytes
 27266  003F42  6AF8               	clrf	tblptru,c
 27267  003F44  0E00               	movlw	low (__mediumconst shr (0+16))
 27268  003F46  22F8               	addwfc	tblptru,f,c
 27269  003F48                     	endif
 27270  003F48  5001               	movf	__display_search@cntr,w,c
 27271  003F4A  0D01               	mullw	1
 27272  003F4C  0E00               	movlw	low _display_content
 27273  003F4E  24F3               	addwf	prodl,w,c
 27274  003F50  6ED9               	movwf	fsr2l,c
 27275  003F52  0E02               	movlw	high _display_content
 27276  003F54  20F4               	addwfc	prodh,w,c
 27277  003F56  6EDA               	movwf	fsr2h,c
 27278  003F58  0008               	tblrd		*
 27279  003F5A  CFF5 FFDF          	movff	tablat,indf2
 27280  003F5E  2A01               	incf	__display_search@cntr,f,c
 27281  003F60                     l1577:
 27282  003F60  5001               	movf	__display_search@cntr,w,c
 27283  003F62  0D01               	mullw	1
 27284  003F64  0EE4               	movlw	low _search_line1
 27285  003F66  24F3               	addwf	prodl,w,c
 27286  003F68  6EF6               	movwf	tblptrl,c
 27287  003F6A  0E8D               	movlw	high _search_line1
 27288  003F6C  20F4               	addwfc	prodh,w,c
 27289  003F6E  6EF7               	movwf	tblptrh,c
 27290  003F70                     	if	1	;There are 3 active tblptr bytes
 27291  003F70  6AF8               	clrf	tblptru,c
 27292  003F72  0E00               	movlw	low (__mediumconst shr (0+16))
 27293  003F74  22F8               	addwfc	tblptru,f,c
 27294  003F76                     	endif
 27295  003F76  0008               	tblrd		*
 27296  003F78  50F5               	movf	tablat,w,c
 27297  003F7A  0900               	iorlw	0
 27298  003F7C  A4D8               	btfss	status,2,c
 27299  003F7E  D7D9               	goto	l1578
 27300                           
 27301                           ;display.c: 379: cntr = 0;
 27302  003F80  0E00               	movlw	0
 27303  003F82  6E01               	movwf	__display_search@cntr,c
 27304                           
 27305                           ;display.c: 380: while(search_line2[cntr])
 27306  003F84  D017               	goto	l1580
 27307  003F86                     
 27308                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 27309  003F86  5001               	movf	__display_search@cntr,w,c
 27310  003F88  0D01               	mullw	1
 27311  003F8A  0E43               	movlw	low _search_line2
 27312  003F8C  24F3               	addwf	prodl,w,c
 27313  003F8E  6EF6               	movwf	tblptrl,c
 27314  003F90  0E8D               	movlw	high _search_line2
 27315  003F92  20F4               	addwfc	prodh,w,c
 27316  003F94  6EF7               	movwf	tblptrh,c
 27317  003F96                     	if	1	;There are 3 active tblptr bytes
 27318  003F96  6AF8               	clrf	tblptru,c
 27319  003F98  0E00               	movlw	low (__mediumconst shr (0+16))
 27320  003F9A  22F8               	addwfc	tblptru,f,c
 27321  003F9C                     	endif
 27322  003F9C  5001               	movf	__display_search@cntr,w,c
 27323  003F9E  0D01               	mullw	1
 27324  003FA0  0E14               	movlw	low (_display_content+20)
 27325  003FA2  24F3               	addwf	prodl,w,c
 27326  003FA4  6ED9               	movwf	fsr2l,c
 27327  003FA6  0E02               	movlw	high (_display_content+20)
 27328  003FA8  20F4               	addwfc	prodh,w,c
 27329  003FAA  6EDA               	movwf	fsr2h,c
 27330  003FAC  0008               	tblrd		*
 27331  003FAE  CFF5 FFDF          	movff	tablat,indf2
 27332  003FB2  2A01               	incf	__display_search@cntr,f,c
 27333  003FB4                     l1580:
 27334  003FB4  5001               	movf	__display_search@cntr,w,c
 27335  003FB6  0D01               	mullw	1
 27336  003FB8  0E43               	movlw	low _search_line2
 27337  003FBA  24F3               	addwf	prodl,w,c
 27338  003FBC  6EF6               	movwf	tblptrl,c
 27339  003FBE  0E8D               	movlw	high _search_line2
 27340  003FC0  20F4               	addwfc	prodh,w,c
 27341  003FC2  6EF7               	movwf	tblptrh,c
 27342  003FC4                     	if	1	;There are 3 active tblptr bytes
 27343  003FC4  6AF8               	clrf	tblptru,c
 27344  003FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 27345  003FC8  22F8               	addwfc	tblptru,f,c
 27346  003FCA                     	endif
 27347  003FCA  0008               	tblrd		*
 27348  003FCC  50F5               	movf	tablat,w,c
 27349  003FCE  0900               	iorlw	0
 27350  003FD0  A4D8               	btfss	status,2,c
 27351  003FD2  D7D9               	goto	l1581
 27352                           
 27353                           ;display.c: 382: cntr = 0;
 27354  003FD4  0E00               	movlw	0
 27355  003FD6  6E01               	movwf	__display_search@cntr,c
 27356                           
 27357                           ;display.c: 383: while(search_line3[cntr])
 27358  003FD8  D017               	goto	l1583
 27359  003FDA                     
 27360                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 27361  003FDA  5001               	movf	__display_search@cntr,w,c
 27362  003FDC  0D01               	mullw	1
 27363  003FDE  0EC2               	movlw	low _search_line3
 27364  003FE0  24F3               	addwf	prodl,w,c
 27365  003FE2  6EF6               	movwf	tblptrl,c
 27366  003FE4  0E8C               	movlw	high _search_line3
 27367  003FE6  20F4               	addwfc	prodh,w,c
 27368  003FE8  6EF7               	movwf	tblptrh,c
 27369  003FEA                     	if	1	;There are 3 active tblptr bytes
 27370  003FEA  6AF8               	clrf	tblptru,c
 27371  003FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 27372  003FEE  22F8               	addwfc	tblptru,f,c
 27373  003FF0                     	endif
 27374  003FF0  5001               	movf	__display_search@cntr,w,c
 27375  003FF2  0D01               	mullw	1
 27376  003FF4  0E28               	movlw	low (_display_content+40)
 27377  003FF6  24F3               	addwf	prodl,w,c
 27378  003FF8  6ED9               	movwf	fsr2l,c
 27379  003FFA  0E02               	movlw	high (_display_content+40)
 27380  003FFC  20F4               	addwfc	prodh,w,c
 27381  003FFE  6EDA               	movwf	fsr2h,c
 27382  004000  0008               	tblrd		*
 27383  004002  CFF5 FFDF          	movff	tablat,indf2
 27384  004006  2A01               	incf	__display_search@cntr,f,c
 27385  004008                     l1583:
 27386  004008  5001               	movf	__display_search@cntr,w,c
 27387  00400A  0D01               	mullw	1
 27388  00400C  0EC2               	movlw	low _search_line3
 27389  00400E  24F3               	addwf	prodl,w,c
 27390  004010  6EF6               	movwf	tblptrl,c
 27391  004012  0E8C               	movlw	high _search_line3
 27392  004014  20F4               	addwfc	prodh,w,c
 27393  004016  6EF7               	movwf	tblptrh,c
 27394  004018                     	if	1	;There are 3 active tblptr bytes
 27395  004018  6AF8               	clrf	tblptru,c
 27396  00401A  0E00               	movlw	low (__mediumconst shr (0+16))
 27397  00401C  22F8               	addwfc	tblptru,f,c
 27398  00401E                     	endif
 27399  00401E  0008               	tblrd		*
 27400  004020  50F5               	movf	tablat,w,c
 27401  004022  0900               	iorlw	0
 27402  004024  A4D8               	btfss	status,2,c
 27403  004026  D7D9               	goto	l1584
 27404                           
 27405                           ;display.c: 385: cntr = 0;
 27406  004028  0E00               	movlw	0
 27407  00402A  6E01               	movwf	__display_search@cntr,c
 27408                           
 27409                           ;display.c: 386: while(search_line4[cntr])
 27410  00402C  D017               	goto	l1586
 27411  00402E                     
 27412                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 27413  00402E  5001               	movf	__display_search@cntr,w,c
 27414  004030  0D01               	mullw	1
 27415  004032  0E59               	movlw	low _search_line4
 27416  004034  24F3               	addwf	prodl,w,c
 27417  004036  6EF6               	movwf	tblptrl,c
 27418  004038  0E8E               	movlw	high _search_line4
 27419  00403A  20F4               	addwfc	prodh,w,c
 27420  00403C  6EF7               	movwf	tblptrh,c
 27421  00403E                     	if	1	;There are 3 active tblptr bytes
 27422  00403E  6AF8               	clrf	tblptru,c
 27423  004040  0E00               	movlw	low (__mediumconst shr (0+16))
 27424  004042  22F8               	addwfc	tblptru,f,c
 27425  004044                     	endif
 27426  004044  5001               	movf	__display_search@cntr,w,c
 27427  004046  0D01               	mullw	1
 27428  004048  0E3C               	movlw	low (_display_content+60)
 27429  00404A  24F3               	addwf	prodl,w,c
 27430  00404C  6ED9               	movwf	fsr2l,c
 27431  00404E  0E02               	movlw	high (_display_content+60)
 27432  004050  20F4               	addwfc	prodh,w,c
 27433  004052  6EDA               	movwf	fsr2h,c
 27434  004054  0008               	tblrd		*
 27435  004056  CFF5 FFDF          	movff	tablat,indf2
 27436  00405A  2A01               	incf	__display_search@cntr,f,c
 27437  00405C                     l1586:
 27438  00405C  5001               	movf	__display_search@cntr,w,c
 27439  00405E  0D01               	mullw	1
 27440  004060  0E59               	movlw	low _search_line4
 27441  004062  24F3               	addwf	prodl,w,c
 27442  004064  6EF6               	movwf	tblptrl,c
 27443  004066  0E8E               	movlw	high _search_line4
 27444  004068  20F4               	addwfc	prodh,w,c
 27445  00406A  6EF7               	movwf	tblptrh,c
 27446  00406C                     	if	1	;There are 3 active tblptr bytes
 27447  00406C  6AF8               	clrf	tblptru,c
 27448  00406E  0E00               	movlw	low (__mediumconst shr (0+16))
 27449  004070  22F8               	addwfc	tblptru,f,c
 27450  004072                     	endif
 27451  004072  0008               	tblrd		*
 27452  004074  50F5               	movf	tablat,w,c
 27453  004076  0900               	iorlw	0
 27454  004078  B4D8               	btfsc	status,2,c
 27455  00407A  0012               	return	
 27456  00407C  D7D8               	goto	l1587
 27457  00407E                     __end_of__display_search:
 27458                           	opt stack 0
 27459                           tosu	equ	0xFFF
 27460                           tosh	equ	0xFFE
 27461                           tosl	equ	0xFFD
 27462                           pclath	equ	0xFFA
 27463                           tblptru	equ	0xFF8
 27464                           tblptrh	equ	0xFF7
 27465                           tblptrl	equ	0xFF6
 27466                           tablat	equ	0xFF5
 27467                           prodh	equ	0xFF4
 27468                           prodl	equ	0xFF3
 27469                           intcon	equ	0xFF2
 27470                           intcon2	equ	0xFF1
 27471                           intcon3	equ	0xFF0
 27472                           indf0	equ	0xFEF
 27473                           postinc0	equ	0xFEE
 27474                           fsr0h	equ	0xFEA
 27475                           fsr0l	equ	0xFE9
 27476                           wreg	equ	0xFE8
 27477                           indf1	equ	0xFE7
 27478                           postdec1	equ	0xFE5
 27479                           plusw1	equ	0xFE3
 27480                           fsr1h	equ	0xFE2
 27481                           fsr1l	equ	0xFE1
 27482                           indf2	equ	0xFDF
 27483                           postinc2	equ	0xFDE
 27484                           postdec2	equ	0xFDD
 27485                           plusw2	equ	0xFDB
 27486                           fsr2h	equ	0xFDA
 27487                           fsr2l	equ	0xFD9
 27488                           status	equ	0xFD8
 27489                           
 27490 ;; *************** function __display_rebooting *****************
 27491 ;; Defined at:
 27492 ;;		line 547 in file "display.c"
 27493 ;; Parameters:    Size  Location     Type
 27494 ;;		None
 27495 ;; Auto vars:     Size  Location     Type
 27496 ;;  cntr            1    0[COMRAM] unsigned char 
 27497 ;; Return value:  Size  Location     Type
 27498 ;;                  1    wreg      void 
 27499 ;; Registers used:
 27500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27501 ;; Tracked objects:
 27502 ;;		On entry : 0/0
 27503 ;;		On exit  : 0/0
 27504 ;;		Unchanged: 0/0
 27505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27510 ;;Total ram usage:        1 bytes
 27511 ;; Hardware stack levels used:    1
 27512 ;; This function calls:
 27513 ;;		Nothing
 27514 ;; This function is called by:
 27515 ;;		_display_prepare
 27516 ;; This function uses a non-reentrant model
 27517 ;;
 27518                           
 27519                           	psect	text134
 27520  007BA6                     __ptext134:
 27521                           	opt stack 0
 27522  007BA6                     __display_rebooting:
 27523                           	opt stack 26
 27524                           
 27525                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 27526                           
 27527                           ;incstack = 0
 27528  007BA6  0E00               	movlw	0
 27529  007BA8  6E01               	movwf	__display_rebooting@cntr,c
 27530                           
 27531                           ;display.c: 551: while(reboot_line1[cntr])
 27532  007BAA  D017               	goto	l1701
 27533  007BAC                     
 27534                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 27535  007BAC  5001               	movf	__display_rebooting@cntr,w,c
 27536  007BAE  0D01               	mullw	1
 27537  007BB0  0E3F               	movlw	low _reboot_line1
 27538  007BB2  24F3               	addwf	prodl,w,c
 27539  007BB4  6EF6               	movwf	tblptrl,c
 27540  007BB6  0E8E               	movlw	high _reboot_line1
 27541  007BB8  20F4               	addwfc	prodh,w,c
 27542  007BBA  6EF7               	movwf	tblptrh,c
 27543  007BBC                     	if	1	;There are 3 active tblptr bytes
 27544  007BBC  6AF8               	clrf	tblptru,c
 27545  007BBE  0E00               	movlw	low (__mediumconst shr (0+16))
 27546  007BC0  22F8               	addwfc	tblptru,f,c
 27547  007BC2                     	endif
 27548  007BC2  5001               	movf	__display_rebooting@cntr,w,c
 27549  007BC4  0D01               	mullw	1
 27550  007BC6  0E00               	movlw	low _display_content
 27551  007BC8  24F3               	addwf	prodl,w,c
 27552  007BCA  6ED9               	movwf	fsr2l,c
 27553  007BCC  0E02               	movlw	high _display_content
 27554  007BCE  20F4               	addwfc	prodh,w,c
 27555  007BD0  6EDA               	movwf	fsr2h,c
 27556  007BD2  0008               	tblrd		*
 27557  007BD4  CFF5 FFDF          	movff	tablat,indf2
 27558  007BD8  2A01               	incf	__display_rebooting@cntr,f,c
 27559  007BDA                     l1701:
 27560  007BDA  5001               	movf	__display_rebooting@cntr,w,c
 27561  007BDC  0D01               	mullw	1
 27562  007BDE  0E3F               	movlw	low _reboot_line1
 27563  007BE0  24F3               	addwf	prodl,w,c
 27564  007BE2  6EF6               	movwf	tblptrl,c
 27565  007BE4  0E8E               	movlw	high _reboot_line1
 27566  007BE6  20F4               	addwfc	prodh,w,c
 27567  007BE8  6EF7               	movwf	tblptrh,c
 27568  007BEA                     	if	1	;There are 3 active tblptr bytes
 27569  007BEA  6AF8               	clrf	tblptru,c
 27570  007BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 27571  007BEE  22F8               	addwfc	tblptru,f,c
 27572  007BF0                     	endif
 27573  007BF0  0008               	tblrd		*
 27574  007BF2  50F5               	movf	tablat,w,c
 27575  007BF4  0900               	iorlw	0
 27576  007BF6  B4D8               	btfsc	status,2,c
 27577  007BF8  0012               	return	
 27578  007BFA  D7D8               	goto	l1702
 27579  007BFC                     __end_of__display_rebooting:
 27580                           	opt stack 0
 27581                           tosu	equ	0xFFF
 27582                           tosh	equ	0xFFE
 27583                           tosl	equ	0xFFD
 27584                           pclath	equ	0xFFA
 27585                           tblptru	equ	0xFF8
 27586                           tblptrh	equ	0xFF7
 27587                           tblptrl	equ	0xFF6
 27588                           tablat	equ	0xFF5
 27589                           prodh	equ	0xFF4
 27590                           prodl	equ	0xFF3
 27591                           intcon	equ	0xFF2
 27592                           intcon2	equ	0xFF1
 27593                           intcon3	equ	0xFF0
 27594                           indf0	equ	0xFEF
 27595                           postinc0	equ	0xFEE
 27596                           fsr0h	equ	0xFEA
 27597                           fsr0l	equ	0xFE9
 27598                           wreg	equ	0xFE8
 27599                           indf1	equ	0xFE7
 27600                           postdec1	equ	0xFE5
 27601                           plusw1	equ	0xFE3
 27602                           fsr1h	equ	0xFE2
 27603                           fsr1l	equ	0xFE1
 27604                           indf2	equ	0xFDF
 27605                           postinc2	equ	0xFDE
 27606                           postdec2	equ	0xFDD
 27607                           plusw2	equ	0xFDB
 27608                           fsr2h	equ	0xFDA
 27609                           fsr2l	equ	0xFD9
 27610                           status	equ	0xFD8
 27611                           
 27612 ;; *************** function __display_programming *****************
 27613 ;; Defined at:
 27614 ;;		line 505 in file "display.c"
 27615 ;; Parameters:    Size  Location     Type
 27616 ;;		None
 27617 ;; Auto vars:     Size  Location     Type
 27618 ;;  cntr            1   30[COMRAM] unsigned char 
 27619 ;; Return value:  Size  Location     Type
 27620 ;;                  1    wreg      void 
 27621 ;; Registers used:
 27622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27623 ;; Tracked objects:
 27624 ;;		On entry : 0/0
 27625 ;;		On exit  : 0/0
 27626 ;;		Unchanged: 0/0
 27627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27632 ;;Total ram usage:        1 bytes
 27633 ;; Hardware stack levels used:    1
 27634 ;; Hardware stack levels required when called:    4
 27635 ;; This function calls:
 27636 ;;		__display_itoa_u16
 27637 ;;		_bootloader_get_entries
 27638 ;;		_bootloader_get_flashPagesWritten
 27639 ;;		_bootloader_get_total_entries
 27640 ;; This function is called by:
 27641 ;;		_display_prepare
 27642 ;; This function uses a non-reentrant model
 27643 ;;
 27644                           
 27645                           	psect	text135
 27646  003420                     __ptext135:
 27647                           	opt stack 0
 27648  003420                     __display_programming:
 27649                           	opt stack 22
 27650                           
 27651                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 27652                           
 27653                           ;incstack = 0
 27654  003420  0E00               	movlw	0
 27655  003422  6E1F               	movwf	__display_programming@cntr,c
 27656                           
 27657                           ;display.c: 509: while(programming_line1[cntr])
 27658  003424  D017               	goto	l1671
 27659  003426                     
 27660                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 27661  003426  501F               	movf	__display_programming@cntr,w,c
 27662  003428  0D01               	mullw	1
 27663  00342A  0E94               	movlw	low _programming_line1
 27664  00342C  24F3               	addwf	prodl,w,c
 27665  00342E  6EF6               	movwf	tblptrl,c
 27666  003430  0E8D               	movlw	high _programming_line1
 27667  003432  20F4               	addwfc	prodh,w,c
 27668  003434  6EF7               	movwf	tblptrh,c
 27669  003436                     	if	1	;There are 3 active tblptr bytes
 27670  003436  6AF8               	clrf	tblptru,c
 27671  003438  0E00               	movlw	low (__mediumconst shr (0+16))
 27672  00343A  22F8               	addwfc	tblptru,f,c
 27673  00343C                     	endif
 27674  00343C  501F               	movf	__display_programming@cntr,w,c
 27675  00343E  0D01               	mullw	1
 27676  003440  0E00               	movlw	low _display_content
 27677  003442  24F3               	addwf	prodl,w,c
 27678  003444  6ED9               	movwf	fsr2l,c
 27679  003446  0E02               	movlw	high _display_content
 27680  003448  20F4               	addwfc	prodh,w,c
 27681  00344A  6EDA               	movwf	fsr2h,c
 27682  00344C  0008               	tblrd		*
 27683  00344E  CFF5 FFDF          	movff	tablat,indf2
 27684  003452  2A1F               	incf	__display_programming@cntr,f,c
 27685  003454                     l1671:
 27686  003454  501F               	movf	__display_programming@cntr,w,c
 27687  003456  0D01               	mullw	1
 27688  003458  0E94               	movlw	low _programming_line1
 27689  00345A  24F3               	addwf	prodl,w,c
 27690  00345C  6EF6               	movwf	tblptrl,c
 27691  00345E  0E8D               	movlw	high _programming_line1
 27692  003460  20F4               	addwfc	prodh,w,c
 27693  003462  6EF7               	movwf	tblptrh,c
 27694  003464                     	if	1	;There are 3 active tblptr bytes
 27695  003464  6AF8               	clrf	tblptru,c
 27696  003466  0E00               	movlw	low (__mediumconst shr (0+16))
 27697  003468  22F8               	addwfc	tblptru,f,c
 27698  00346A                     	endif
 27699  00346A  0008               	tblrd		*
 27700  00346C  50F5               	movf	tablat,w,c
 27701  00346E  0900               	iorlw	0
 27702  003470  A4D8               	btfss	status,2,c
 27703  003472  D7D9               	goto	l1672
 27704                           
 27705                           ;display.c: 512: cntr = 0;
 27706  003474  0E00               	movlw	0
 27707  003476  6E1F               	movwf	__display_programming@cntr,c
 27708                           
 27709                           ;display.c: 513: while(programming_line2[cntr])
 27710  003478  D017               	goto	l1674
 27711  00347A                     
 27712                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 27713  00347A  501F               	movf	__display_programming@cntr,w,c
 27714  00347C  0D01               	mullw	1
 27715  00347E  0EFC               	movlw	low _programming_line2
 27716  003480  24F3               	addwf	prodl,w,c
 27717  003482  6EF6               	movwf	tblptrl,c
 27718  003484  0E8C               	movlw	high _programming_line2
 27719  003486  20F4               	addwfc	prodh,w,c
 27720  003488  6EF7               	movwf	tblptrh,c
 27721  00348A                     	if	1	;There are 3 active tblptr bytes
 27722  00348A  6AF8               	clrf	tblptru,c
 27723  00348C  0E00               	movlw	low (__mediumconst shr (0+16))
 27724  00348E  22F8               	addwfc	tblptru,f,c
 27725  003490                     	endif
 27726  003490  501F               	movf	__display_programming@cntr,w,c
 27727  003492  0D01               	mullw	1
 27728  003494  0E14               	movlw	low (_display_content+20)
 27729  003496  24F3               	addwf	prodl,w,c
 27730  003498  6ED9               	movwf	fsr2l,c
 27731  00349A  0E02               	movlw	high (_display_content+20)
 27732  00349C  20F4               	addwfc	prodh,w,c
 27733  00349E  6EDA               	movwf	fsr2h,c
 27734  0034A0  0008               	tblrd		*
 27735  0034A2  CFF5 FFDF          	movff	tablat,indf2
 27736  0034A6  2A1F               	incf	__display_programming@cntr,f,c
 27737  0034A8                     l1674:
 27738  0034A8  501F               	movf	__display_programming@cntr,w,c
 27739  0034AA  0D01               	mullw	1
 27740  0034AC  0EFC               	movlw	low _programming_line2
 27741  0034AE  24F3               	addwf	prodl,w,c
 27742  0034B0  6EF6               	movwf	tblptrl,c
 27743  0034B2  0E8C               	movlw	high _programming_line2
 27744  0034B4  20F4               	addwfc	prodh,w,c
 27745  0034B6  6EF7               	movwf	tblptrh,c
 27746  0034B8                     	if	1	;There are 3 active tblptr bytes
 27747  0034B8  6AF8               	clrf	tblptru,c
 27748  0034BA  0E00               	movlw	low (__mediumconst shr (0+16))
 27749  0034BC  22F8               	addwfc	tblptru,f,c
 27750  0034BE                     	endif
 27751  0034BE  0008               	tblrd		*
 27752  0034C0  50F5               	movf	tablat,w,c
 27753  0034C2  0900               	iorlw	0
 27754  0034C4  A4D8               	btfss	status,2,c
 27755  0034C6  D7D9               	goto	l1675
 27756                           
 27757                           ;display.c: 516: cntr = 0;
 27758  0034C8  0E00               	movlw	0
 27759  0034CA  6E1F               	movwf	__display_programming@cntr,c
 27760                           
 27761                           ;display.c: 517: while(programming_line3[cntr])
 27762  0034CC  D017               	goto	l1677
 27763  0034CE                     
 27764                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 27765  0034CE  501F               	movf	__display_programming@cntr,w,c
 27766  0034D0  0D01               	mullw	1
 27767  0034D2  0E83               	movlw	low _programming_line3
 27768  0034D4  24F3               	addwf	prodl,w,c
 27769  0034D6  6EF6               	movwf	tblptrl,c
 27770  0034D8  0E8E               	movlw	high _programming_line3
 27771  0034DA  20F4               	addwfc	prodh,w,c
 27772  0034DC  6EF7               	movwf	tblptrh,c
 27773  0034DE                     	if	1	;There are 3 active tblptr bytes
 27774  0034DE  6AF8               	clrf	tblptru,c
 27775  0034E0  0E00               	movlw	low (__mediumconst shr (0+16))
 27776  0034E2  22F8               	addwfc	tblptru,f,c
 27777  0034E4                     	endif
 27778  0034E4  501F               	movf	__display_programming@cntr,w,c
 27779  0034E6  0D01               	mullw	1
 27780  0034E8  0E28               	movlw	low (_display_content+40)
 27781  0034EA  24F3               	addwf	prodl,w,c
 27782  0034EC  6ED9               	movwf	fsr2l,c
 27783  0034EE  0E02               	movlw	high (_display_content+40)
 27784  0034F0  20F4               	addwfc	prodh,w,c
 27785  0034F2  6EDA               	movwf	fsr2h,c
 27786  0034F4  0008               	tblrd		*
 27787  0034F6  CFF5 FFDF          	movff	tablat,indf2
 27788  0034FA  2A1F               	incf	__display_programming@cntr,f,c
 27789  0034FC                     l1677:
 27790  0034FC  501F               	movf	__display_programming@cntr,w,c
 27791  0034FE  0D01               	mullw	1
 27792  003500  0E83               	movlw	low _programming_line3
 27793  003502  24F3               	addwf	prodl,w,c
 27794  003504  6EF6               	movwf	tblptrl,c
 27795  003506  0E8E               	movlw	high _programming_line3
 27796  003508  20F4               	addwfc	prodh,w,c
 27797  00350A  6EF7               	movwf	tblptrh,c
 27798  00350C                     	if	1	;There are 3 active tblptr bytes
 27799  00350C  6AF8               	clrf	tblptru,c
 27800  00350E  0E00               	movlw	low (__mediumconst shr (0+16))
 27801  003510  22F8               	addwfc	tblptru,f,c
 27802  003512                     	endif
 27803  003512  0008               	tblrd		*
 27804  003514  50F5               	movf	tablat,w,c
 27805  003516  0900               	iorlw	0
 27806  003518  A4D8               	btfss	status,2,c
 27807  00351A  D7D9               	goto	l1678
 27808                           
 27809                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 27810  00351C  ECAC  F044         	call	_bootloader_get_entries	;wreg free
 27811  003520  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27812  003524  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27813  003528  6A1B               	clrf	__display_itoa_u16@value+2,c
 27814  00352A  6A1C               	clrf	__display_itoa_u16@value+3,c
 27815  00352C  501F               	movf	__display_programming@cntr,w,c
 27816  00352E  0D01               	mullw	1
 27817  003530  0E28               	movlw	low (_display_content+40)
 27818  003532  24F3               	addwf	prodl,w,c
 27819  003534  6E1D               	movwf	__display_itoa_u16@text,c
 27820  003536  0E02               	movlw	high (_display_content+40)
 27821  003538  20F4               	addwfc	prodh,w,c
 27822  00353A  6E1E               	movwf	__display_itoa_u16@text+1,c
 27823  00353C  EC50  F02E         	call	__display_itoa_u16	;wreg free
 27824  003540  261F               	addwf	__display_programming@cntr,f,c
 27825                           
 27826                           ;display.c: 520: display_content[2][cntr++] = '/';
 27827  003542  501F               	movf	__display_programming@cntr,w,c
 27828  003544  0D01               	mullw	1
 27829  003546  0E28               	movlw	low (_display_content+40)
 27830  003548  24F3               	addwf	prodl,w,c
 27831  00354A  6ED9               	movwf	fsr2l,c
 27832  00354C  0E02               	movlw	high (_display_content+40)
 27833  00354E  20F4               	addwfc	prodh,w,c
 27834  003550  6EDA               	movwf	fsr2h,c
 27835  003552  0E2F               	movlw	47
 27836  003554  6EDF               	movwf	indf2,c
 27837  003556  2A1F               	incf	__display_programming@cntr,f,c
 27838                           
 27839                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 27840  003558  ECB6  F044         	call	_bootloader_get_total_entries	;wreg free
 27841  00355C  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 27842  003560  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 27843  003564  6A1B               	clrf	__display_itoa_u16@value+2,c
 27844  003566  6A1C               	clrf	__display_itoa_u16@value+3,c
 27845  003568  501F               	movf	__display_programming@cntr,w,c
 27846  00356A  0D01               	mullw	1
 27847  00356C  0E28               	movlw	low (_display_content+40)
 27848  00356E  24F3               	addwf	prodl,w,c
 27849  003570  6E1D               	movwf	__display_itoa_u16@text,c
 27850  003572  0E02               	movlw	high (_display_content+40)
 27851  003574  20F4               	addwfc	prodh,w,c
 27852  003576  6E1E               	movwf	__display_itoa_u16@text+1,c
 27853  003578  EC50  F02E         	call	__display_itoa_u16	;wreg free
 27854                           
 27855                           ;display.c: 523: cntr = 0;
 27856  00357C  0E00               	movlw	0
 27857  00357E  6E1F               	movwf	__display_programming@cntr,c
 27858                           
 27859                           ;display.c: 524: while(programming_line4[cntr])
 27860  003580  D017               	goto	l1680
 27861  003582                     
 27862                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 27863  003582  501F               	movf	__display_programming@cntr,w,c
 27864  003584  0D01               	mullw	1
 27865  003586  0E84               	movlw	low _programming_line4
 27866  003588  24F3               	addwf	prodl,w,c
 27867  00358A  6EF6               	movwf	tblptrl,c
 27868  00358C  0E8D               	movlw	high _programming_line4
 27869  00358E  20F4               	addwfc	prodh,w,c
 27870  003590  6EF7               	movwf	tblptrh,c
 27871  003592                     	if	1	;There are 3 active tblptr bytes
 27872  003592  6AF8               	clrf	tblptru,c
 27873  003594  0E00               	movlw	low (__mediumconst shr (0+16))
 27874  003596  22F8               	addwfc	tblptru,f,c
 27875  003598                     	endif
 27876  003598  501F               	movf	__display_programming@cntr,w,c
 27877  00359A  0D01               	mullw	1
 27878  00359C  0E3C               	movlw	low (_display_content+60)
 27879  00359E  24F3               	addwf	prodl,w,c
 27880  0035A0  6ED9               	movwf	fsr2l,c
 27881  0035A2  0E02               	movlw	high (_display_content+60)
 27882  0035A4  20F4               	addwfc	prodh,w,c
 27883  0035A6  6EDA               	movwf	fsr2h,c
 27884  0035A8  0008               	tblrd		*
 27885  0035AA  CFF5 FFDF          	movff	tablat,indf2
 27886  0035AE  2A1F               	incf	__display_programming@cntr,f,c
 27887  0035B0                     l1680:
 27888  0035B0  501F               	movf	__display_programming@cntr,w,c
 27889  0035B2  0D01               	mullw	1
 27890  0035B4  0E84               	movlw	low _programming_line4
 27891  0035B6  24F3               	addwf	prodl,w,c
 27892  0035B8  6EF6               	movwf	tblptrl,c
 27893  0035BA  0E8D               	movlw	high _programming_line4
 27894  0035BC  20F4               	addwfc	prodh,w,c
 27895  0035BE  6EF7               	movwf	tblptrh,c
 27896  0035C0                     	if	1	;There are 3 active tblptr bytes
 27897  0035C0  6AF8               	clrf	tblptru,c
 27898  0035C2  0E00               	movlw	low (__mediumconst shr (0+16))
 27899  0035C4  22F8               	addwfc	tblptru,f,c
 27900  0035C6                     	endif
 27901  0035C6  0008               	tblrd		*
 27902  0035C8  50F5               	movf	tablat,w,c
 27903  0035CA  0900               	iorlw	0
 27904  0035CC  A4D8               	btfss	status,2,c
 27905  0035CE  D7D9               	goto	l1681
 27906                           
 27907                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 27908  0035D0  ECB1  F044         	call	_bootloader_get_flashPagesWritten	;wreg free
 27909  0035D4  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 27910  0035D8  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 27911  0035DC  6A1B               	clrf	__display_itoa_u16@value+2,c
 27912  0035DE  6A1C               	clrf	__display_itoa_u16@value+3,c
 27913  0035E0  501F               	movf	__display_programming@cntr,w,c
 27914  0035E2  0D01               	mullw	1
 27915  0035E4  0E3C               	movlw	low (_display_content+60)
 27916  0035E6  24F3               	addwf	prodl,w,c
 27917  0035E8  6E1D               	movwf	__display_itoa_u16@text,c
 27918  0035EA  0E02               	movlw	high (_display_content+60)
 27919  0035EC  20F4               	addwfc	prodh,w,c
 27920  0035EE  6E1E               	movwf	__display_itoa_u16@text+1,c
 27921  0035F0  EC50  F02E         	call	__display_itoa_u16	;wreg free
 27922  0035F4  0012               	return		;funcret
 27923  0035F6                     __end_of__display_programming:
 27924                           	opt stack 0
 27925                           tosu	equ	0xFFF
 27926                           tosh	equ	0xFFE
 27927                           tosl	equ	0xFFD
 27928                           pclath	equ	0xFFA
 27929                           tblptru	equ	0xFF8
 27930                           tblptrh	equ	0xFF7
 27931                           tblptrl	equ	0xFF6
 27932                           tablat	equ	0xFF5
 27933                           prodh	equ	0xFF4
 27934                           prodl	equ	0xFF3
 27935                           intcon	equ	0xFF2
 27936                           intcon2	equ	0xFF1
 27937                           intcon3	equ	0xFF0
 27938                           indf0	equ	0xFEF
 27939                           postinc0	equ	0xFEE
 27940                           fsr0h	equ	0xFEA
 27941                           fsr0l	equ	0xFE9
 27942                           wreg	equ	0xFE8
 27943                           indf1	equ	0xFE7
 27944                           postdec1	equ	0xFE5
 27945                           plusw1	equ	0xFE3
 27946                           fsr1h	equ	0xFE2
 27947                           fsr1l	equ	0xFE1
 27948                           indf2	equ	0xFDF
 27949                           postinc2	equ	0xFDE
 27950                           postdec2	equ	0xFDD
 27951                           plusw2	equ	0xFDB
 27952                           fsr2h	equ	0xFDA
 27953                           fsr2l	equ	0xFD9
 27954                           status	equ	0xFD8
 27955                           
 27956 ;; *************** function __display_found *****************
 27957 ;; Defined at:
 27958 ;;		line 390 in file "display.c"
 27959 ;; Parameters:    Size  Location     Type
 27960 ;;		None
 27961 ;; Auto vars:     Size  Location     Type
 27962 ;;  cntr            1   39[COMRAM] unsigned char 
 27963 ;;  start           1   38[COMRAM] unsigned char 
 27964 ;; Return value:  Size  Location     Type
 27965 ;;                  1    wreg      void 
 27966 ;; Registers used:
 27967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27968 ;; Tracked objects:
 27969 ;;		On entry : 0/0
 27970 ;;		On exit  : 0/0
 27971 ;;		Unchanged: 0/0
 27972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27976 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27977 ;;Total ram usage:        4 bytes
 27978 ;; Hardware stack levels used:    1
 27979 ;; Hardware stack levels required when called:    5
 27980 ;; This function calls:
 27981 ;;		__display_itoa_u32
 27982 ;;		_bootloader_get_file_size
 27983 ;; This function is called by:
 27984 ;;		_display_prepare
 27985 ;; This function uses a non-reentrant model
 27986 ;;
 27987                           
 27988                           	psect	text136
 27989  003068                     __ptext136:
 27990                           	opt stack 0
 27991  003068                     __display_found:
 27992                           	opt stack 21
 27993                           
 27994                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 27995                           
 27996                           ;incstack = 0
 27997  003068  0E00               	movlw	0
 27998  00306A  6E28               	movwf	__display_found@cntr,c
 27999                           
 28000                           ;display.c: 396: while(found_line1[cntr])
 28001  00306C  D017               	goto	l1592
 28002  00306E                     
 28003                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 28004  00306E  5028               	movf	__display_found@cntr,w,c
 28005  003070  0D01               	mullw	1
 28006  003072  0ED4               	movlw	low _found_line1
 28007  003074  24F3               	addwf	prodl,w,c
 28008  003076  6EF6               	movwf	tblptrl,c
 28009  003078  0E8D               	movlw	high _found_line1
 28010  00307A  20F4               	addwfc	prodh,w,c
 28011  00307C  6EF7               	movwf	tblptrh,c
 28012  00307E                     	if	1	;There are 3 active tblptr bytes
 28013  00307E  6AF8               	clrf	tblptru,c
 28014  003080  0E00               	movlw	low (__mediumconst shr (0+16))
 28015  003082  22F8               	addwfc	tblptru,f,c
 28016  003084                     	endif
 28017  003084  5028               	movf	__display_found@cntr,w,c
 28018  003086  0D01               	mullw	1
 28019  003088  0E00               	movlw	low _display_content
 28020  00308A  24F3               	addwf	prodl,w,c
 28021  00308C  6ED9               	movwf	fsr2l,c
 28022  00308E  0E02               	movlw	high _display_content
 28023  003090  20F4               	addwfc	prodh,w,c
 28024  003092  6EDA               	movwf	fsr2h,c
 28025  003094  0008               	tblrd		*
 28026  003096  CFF5 FFDF          	movff	tablat,indf2
 28027  00309A  2A28               	incf	__display_found@cntr,f,c
 28028  00309C                     l1592:
 28029  00309C  5028               	movf	__display_found@cntr,w,c
 28030  00309E  0D01               	mullw	1
 28031  0030A0  0ED4               	movlw	low _found_line1
 28032  0030A2  24F3               	addwf	prodl,w,c
 28033  0030A4  6EF6               	movwf	tblptrl,c
 28034  0030A6  0E8D               	movlw	high _found_line1
 28035  0030A8  20F4               	addwfc	prodh,w,c
 28036  0030AA  6EF7               	movwf	tblptrh,c
 28037  0030AC                     	if	1	;There are 3 active tblptr bytes
 28038  0030AC  6AF8               	clrf	tblptru,c
 28039  0030AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28040  0030B0  22F8               	addwfc	tblptru,f,c
 28041  0030B2                     	endif
 28042  0030B2  0008               	tblrd		*
 28043  0030B4  50F5               	movf	tablat,w,c
 28044  0030B6  0900               	iorlw	0
 28045  0030B8  A4D8               	btfss	status,2,c
 28046  0030BA  D7D9               	goto	l1593
 28047                           
 28048                           ;display.c: 399: cntr = 0;
 28049  0030BC  0E00               	movlw	0
 28050  0030BE  6E28               	movwf	__display_found@cntr,c
 28051                           
 28052                           ;display.c: 400: while(found_line2[cntr])
 28053  0030C0  D017               	goto	l1595
 28054  0030C2                     
 28055                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 28056  0030C2  5028               	movf	__display_found@cntr,w,c
 28057  0030C4  0D01               	mullw	1
 28058  0030C6  0EE9               	movlw	low _found_line2
 28059  0030C8  24F3               	addwf	prodl,w,c
 28060  0030CA  6EF6               	movwf	tblptrl,c
 28061  0030CC  0E8C               	movlw	high _found_line2
 28062  0030CE  20F4               	addwfc	prodh,w,c
 28063  0030D0  6EF7               	movwf	tblptrh,c
 28064  0030D2                     	if	1	;There are 3 active tblptr bytes
 28065  0030D2  6AF8               	clrf	tblptru,c
 28066  0030D4  0E00               	movlw	low (__mediumconst shr (0+16))
 28067  0030D6  22F8               	addwfc	tblptru,f,c
 28068  0030D8                     	endif
 28069  0030D8  5028               	movf	__display_found@cntr,w,c
 28070  0030DA  0D01               	mullw	1
 28071  0030DC  0E14               	movlw	low (_display_content+20)
 28072  0030DE  24F3               	addwf	prodl,w,c
 28073  0030E0  6ED9               	movwf	fsr2l,c
 28074  0030E2  0E02               	movlw	high (_display_content+20)
 28075  0030E4  20F4               	addwfc	prodh,w,c
 28076  0030E6  6EDA               	movwf	fsr2h,c
 28077  0030E8  0008               	tblrd		*
 28078  0030EA  CFF5 FFDF          	movff	tablat,indf2
 28079  0030EE  2A28               	incf	__display_found@cntr,f,c
 28080  0030F0                     l1595:
 28081  0030F0  5028               	movf	__display_found@cntr,w,c
 28082  0030F2  0D01               	mullw	1
 28083  0030F4  0EE9               	movlw	low _found_line2
 28084  0030F6  24F3               	addwf	prodl,w,c
 28085  0030F8  6EF6               	movwf	tblptrl,c
 28086  0030FA  0E8C               	movlw	high _found_line2
 28087  0030FC  20F4               	addwfc	prodh,w,c
 28088  0030FE  6EF7               	movwf	tblptrh,c
 28089  003100                     	if	1	;There are 3 active tblptr bytes
 28090  003100  6AF8               	clrf	tblptru,c
 28091  003102  0E00               	movlw	low (__mediumconst shr (0+16))
 28092  003104  22F8               	addwfc	tblptru,f,c
 28093  003106                     	endif
 28094  003106  0008               	tblrd		*
 28095  003108  50F5               	movf	tablat,w,c
 28096  00310A  0900               	iorlw	0
 28097  00310C  A4D8               	btfss	status,2,c
 28098  00310E  D7D9               	goto	l1596
 28099                           
 28100                           ;display.c: 403: cntr = 0;
 28101  003110  0E00               	movlw	0
 28102  003112  6E28               	movwf	__display_found@cntr,c
 28103                           
 28104                           ;display.c: 404: while(found_line3[cntr])
 28105  003114  D017               	goto	l1598
 28106  003116                     
 28107                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 28108  003116  5028               	movf	__display_found@cntr,w,c
 28109  003118  0D01               	mullw	1
 28110  00311A  0E98               	movlw	low _found_line3
 28111  00311C  24F3               	addwf	prodl,w,c
 28112  00311E  6EF6               	movwf	tblptrl,c
 28113  003120  0E8E               	movlw	high _found_line3
 28114  003122  20F4               	addwfc	prodh,w,c
 28115  003124  6EF7               	movwf	tblptrh,c
 28116  003126                     	if	1	;There are 3 active tblptr bytes
 28117  003126  6AF8               	clrf	tblptru,c
 28118  003128  0E00               	movlw	low (__mediumconst shr (0+16))
 28119  00312A  22F8               	addwfc	tblptru,f,c
 28120  00312C                     	endif
 28121  00312C  5028               	movf	__display_found@cntr,w,c
 28122  00312E  0D01               	mullw	1
 28123  003130  0E28               	movlw	low (_display_content+40)
 28124  003132  24F3               	addwf	prodl,w,c
 28125  003134  6ED9               	movwf	fsr2l,c
 28126  003136  0E02               	movlw	high (_display_content+40)
 28127  003138  20F4               	addwfc	prodh,w,c
 28128  00313A  6EDA               	movwf	fsr2h,c
 28129  00313C  0008               	tblrd		*
 28130  00313E  CFF5 FFDF          	movff	tablat,indf2
 28131  003142  2A28               	incf	__display_found@cntr,f,c
 28132  003144                     l1598:
 28133  003144  5028               	movf	__display_found@cntr,w,c
 28134  003146  0D01               	mullw	1
 28135  003148  0E98               	movlw	low _found_line3
 28136  00314A  24F3               	addwf	prodl,w,c
 28137  00314C  6EF6               	movwf	tblptrl,c
 28138  00314E  0E8E               	movlw	high _found_line3
 28139  003150  20F4               	addwfc	prodh,w,c
 28140  003152  6EF7               	movwf	tblptrh,c
 28141  003154                     	if	1	;There are 3 active tblptr bytes
 28142  003154  6AF8               	clrf	tblptru,c
 28143  003156  0E00               	movlw	low (__mediumconst shr (0+16))
 28144  003158  22F8               	addwfc	tblptru,f,c
 28145  00315A                     	endif
 28146  00315A  0008               	tblrd		*
 28147  00315C  50F5               	movf	tablat,w,c
 28148  00315E  0900               	iorlw	0
 28149  003160  A4D8               	btfss	status,2,c
 28150  003162  D7D9               	goto	l1599
 28151                           
 28152                           ;display.c: 406: start = cntr;
 28153  003164  C028  F027         	movff	__display_found@cntr,__display_found@start
 28154                           
 28155                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28156  003168  EC42  F044         	call	_bootloader_get_file_size	;wreg free
 28157  00316C  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28158  003170  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28159  003174  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28160  003178  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28161  00317C  5028               	movf	__display_found@cntr,w,c
 28162  00317E  0D01               	mullw	1
 28163  003180  0E28               	movlw	low (_display_content+40)
 28164  003182  24F3               	addwf	prodl,w,c
 28165  003184  6E23               	movwf	__display_itoa_u32@text,c
 28166  003186  0E02               	movlw	high (_display_content+40)
 28167  003188  20F4               	addwfc	prodh,w,c
 28168  00318A  6E24               	movwf	__display_itoa_u32@text+1,c
 28169  00318C  EC07  F006         	call	__display_itoa_u32	;wreg free
 28170  003190  2627               	addwf	__display_found@start,f,c
 28171                           
 28172                           ;display.c: 408: cntr = 0;
 28173  003192  0E00               	movlw	0
 28174  003194  6E28               	movwf	__display_found@cntr,c
 28175                           
 28176                           ;display.c: 409: while(found_line3b[cntr])
 28177  003196  D01C               	goto	l1601
 28178  003198                     
 28179                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 28180  003198  5028               	movf	__display_found@cntr,w,c
 28181  00319A  0D01               	mullw	1
 28182  00319C  0E91               	movlw	low _found_line3b
 28183  00319E  24F3               	addwf	prodl,w,c
 28184  0031A0  6EF6               	movwf	tblptrl,c
 28185  0031A2  0E8E               	movlw	high _found_line3b
 28186  0031A4  20F4               	addwfc	prodh,w,c
 28187  0031A6  6EF7               	movwf	tblptrh,c
 28188  0031A8                     	if	1	;There are 3 active tblptr bytes
 28189  0031A8  6AF8               	clrf	tblptru,c
 28190  0031AA  0E00               	movlw	low (__mediumconst shr (0+16))
 28191  0031AC  22F8               	addwfc	tblptru,f,c
 28192  0031AE                     	endif
 28193  0031AE  5028               	movf	__display_found@cntr,w,c
 28194  0031B0  C027  F025         	movff	__display_found@start,??__display_found
 28195  0031B4  6A26               	clrf	(??__display_found+1)& (0+255),c
 28196  0031B6  2625               	addwf	??__display_found,f,c
 28197  0031B8  0E00               	movlw	0
 28198  0031BA  2226               	addwfc	??__display_found+1,f,c
 28199  0031BC  0E28               	movlw	low (_display_content+40)
 28200  0031BE  2425               	addwf	??__display_found,w,c
 28201  0031C0  6ED9               	movwf	fsr2l,c
 28202  0031C2  0E02               	movlw	high (_display_content+40)
 28203  0031C4  2026               	addwfc	??__display_found+1,w,c
 28204  0031C6  6EDA               	movwf	fsr2h,c
 28205  0031C8  0008               	tblrd		*
 28206  0031CA  CFF5 FFDF          	movff	tablat,indf2
 28207  0031CE  2A28               	incf	__display_found@cntr,f,c
 28208  0031D0                     l1601:
 28209  0031D0  5028               	movf	__display_found@cntr,w,c
 28210  0031D2  0D01               	mullw	1
 28211  0031D4  0E91               	movlw	low _found_line3b
 28212  0031D6  24F3               	addwf	prodl,w,c
 28213  0031D8  6EF6               	movwf	tblptrl,c
 28214  0031DA  0E8E               	movlw	high _found_line3b
 28215  0031DC  20F4               	addwfc	prodh,w,c
 28216  0031DE  6EF7               	movwf	tblptrh,c
 28217  0031E0                     	if	1	;There are 3 active tblptr bytes
 28218  0031E0  6AF8               	clrf	tblptru,c
 28219  0031E2  0E00               	movlw	low (__mediumconst shr (0+16))
 28220  0031E4  22F8               	addwfc	tblptru,f,c
 28221  0031E6                     	endif
 28222  0031E6  0008               	tblrd		*
 28223  0031E8  50F5               	movf	tablat,w,c
 28224  0031EA  0900               	iorlw	0
 28225  0031EC  A4D8               	btfss	status,2,c
 28226  0031EE  D7D4               	goto	l1602
 28227                           
 28228                           ;display.c: 412: cntr = 0;
 28229  0031F0  0E00               	movlw	0
 28230  0031F2  6E28               	movwf	__display_found@cntr,c
 28231                           
 28232                           ;display.c: 413: while(found_line4[cntr])
 28233  0031F4  D017               	goto	l1604
 28234  0031F6                     
 28235                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 28236  0031F6  5028               	movf	__display_found@cntr,w,c
 28237  0031F8  0D01               	mullw	1
 28238  0031FA  0E20               	movlw	low _found_line4
 28239  0031FC  24F3               	addwf	prodl,w,c
 28240  0031FE  6EF6               	movwf	tblptrl,c
 28241  003200  0E8D               	movlw	high _found_line4
 28242  003202  20F4               	addwfc	prodh,w,c
 28243  003204  6EF7               	movwf	tblptrh,c
 28244  003206                     	if	1	;There are 3 active tblptr bytes
 28245  003206  6AF8               	clrf	tblptru,c
 28246  003208  0E00               	movlw	low (__mediumconst shr (0+16))
 28247  00320A  22F8               	addwfc	tblptru,f,c
 28248  00320C                     	endif
 28249  00320C  5028               	movf	__display_found@cntr,w,c
 28250  00320E  0D01               	mullw	1
 28251  003210  0E3C               	movlw	low (_display_content+60)
 28252  003212  24F3               	addwf	prodl,w,c
 28253  003214  6ED9               	movwf	fsr2l,c
 28254  003216  0E02               	movlw	high (_display_content+60)
 28255  003218  20F4               	addwfc	prodh,w,c
 28256  00321A  6EDA               	movwf	fsr2h,c
 28257  00321C  0008               	tblrd		*
 28258  00321E  CFF5 FFDF          	movff	tablat,indf2
 28259  003222  2A28               	incf	__display_found@cntr,f,c
 28260  003224                     l1604:
 28261  003224  5028               	movf	__display_found@cntr,w,c
 28262  003226  0D01               	mullw	1
 28263  003228  0E20               	movlw	low _found_line4
 28264  00322A  24F3               	addwf	prodl,w,c
 28265  00322C  6EF6               	movwf	tblptrl,c
 28266  00322E  0E8D               	movlw	high _found_line4
 28267  003230  20F4               	addwfc	prodh,w,c
 28268  003232  6EF7               	movwf	tblptrh,c
 28269  003234                     	if	1	;There are 3 active tblptr bytes
 28270  003234  6AF8               	clrf	tblptru,c
 28271  003236  0E00               	movlw	low (__mediumconst shr (0+16))
 28272  003238  22F8               	addwfc	tblptru,f,c
 28273  00323A                     	endif
 28274  00323A  0008               	tblrd		*
 28275  00323C  50F5               	movf	tablat,w,c
 28276  00323E  0900               	iorlw	0
 28277  003240  B4D8               	btfsc	status,2,c
 28278  003242  0012               	return	
 28279  003244  D7D8               	goto	l1605
 28280  003246                     __end_of__display_found:
 28281                           	opt stack 0
 28282                           tosu	equ	0xFFF
 28283                           tosh	equ	0xFFE
 28284                           tosl	equ	0xFFD
 28285                           pclath	equ	0xFFA
 28286                           tblptru	equ	0xFF8
 28287                           tblptrh	equ	0xFF7
 28288                           tblptrl	equ	0xFF6
 28289                           tablat	equ	0xFF5
 28290                           prodh	equ	0xFF4
 28291                           prodl	equ	0xFF3
 28292                           intcon	equ	0xFF2
 28293                           intcon2	equ	0xFF1
 28294                           intcon3	equ	0xFF0
 28295                           indf0	equ	0xFEF
 28296                           postinc0	equ	0xFEE
 28297                           fsr0h	equ	0xFEA
 28298                           fsr0l	equ	0xFE9
 28299                           wreg	equ	0xFE8
 28300                           indf1	equ	0xFE7
 28301                           postdec1	equ	0xFE5
 28302                           plusw1	equ	0xFE3
 28303                           fsr1h	equ	0xFE2
 28304                           fsr1l	equ	0xFE1
 28305                           indf2	equ	0xFDF
 28306                           postinc2	equ	0xFDE
 28307                           postdec2	equ	0xFDD
 28308                           plusw2	equ	0xFDB
 28309                           fsr2h	equ	0xFDA
 28310                           fsr2l	equ	0xFD9
 28311                           status	equ	0xFD8
 28312                           
 28313 ;; *************** function _bootloader_get_file_size *****************
 28314 ;; Defined at:
 28315 ;;		line 460 in file "bootloader.c"
 28316 ;; Parameters:    Size  Location     Type
 28317 ;;		None
 28318 ;; Auto vars:     Size  Location     Type
 28319 ;;		None
 28320 ;; Return value:  Size  Location     Type
 28321 ;;                  4    0[COMRAM] unsigned long 
 28322 ;; Registers used:
 28323 ;;		None
 28324 ;; Tracked objects:
 28325 ;;		On entry : 0/0
 28326 ;;		On exit  : 0/0
 28327 ;;		Unchanged: 0/0
 28328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28333 ;;Total ram usage:        4 bytes
 28334 ;; Hardware stack levels used:    1
 28335 ;; This function calls:
 28336 ;;		Nothing
 28337 ;; This function is called by:
 28338 ;;		__display_found
 28339 ;;		__fill_buffer_get_bootloader_details
 28340 ;; This function uses a non-reentrant model
 28341 ;;
 28342                           
 28343                           	psect	text137
 28344  008884                     __ptext137:
 28345                           	opt stack 0
 28346  008884                     _bootloader_get_file_size:
 28347                           	opt stack 25
 28348                           
 28349                           ;bootloader.c: 462: return hex_file_size;
 28350                           
 28351                           ;incstack = 0
 28352  008884  C0CB  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28353  008888  C0CC  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28354  00888C  C0CD  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28355  008890  C0CE  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28356  008894  0012               	return		;funcret
 28357  008896                     __end_of_bootloader_get_file_size:
 28358                           	opt stack 0
 28359                           tosu	equ	0xFFF
 28360                           tosh	equ	0xFFE
 28361                           tosl	equ	0xFFD
 28362                           pclath	equ	0xFFA
 28363                           tblptru	equ	0xFF8
 28364                           tblptrh	equ	0xFF7
 28365                           tblptrl	equ	0xFF6
 28366                           tablat	equ	0xFF5
 28367                           prodh	equ	0xFF4
 28368                           prodl	equ	0xFF3
 28369                           intcon	equ	0xFF2
 28370                           intcon2	equ	0xFF1
 28371                           intcon3	equ	0xFF0
 28372                           indf0	equ	0xFEF
 28373                           postinc0	equ	0xFEE
 28374                           fsr0h	equ	0xFEA
 28375                           fsr0l	equ	0xFE9
 28376                           wreg	equ	0xFE8
 28377                           indf1	equ	0xFE7
 28378                           postdec1	equ	0xFE5
 28379                           plusw1	equ	0xFE3
 28380                           fsr1h	equ	0xFE2
 28381                           fsr1l	equ	0xFE1
 28382                           indf2	equ	0xFDF
 28383                           postinc2	equ	0xFDE
 28384                           postdec2	equ	0xFDD
 28385                           plusw2	equ	0xFDB
 28386                           fsr2h	equ	0xFDA
 28387                           fsr2l	equ	0xFD9
 28388                           status	equ	0xFD8
 28389                           
 28390 ;; *************** function __display_failed *****************
 28391 ;; Defined at:
 28392 ;;		line 455 in file "display.c"
 28393 ;; Parameters:    Size  Location     Type
 28394 ;;		None
 28395 ;; Auto vars:     Size  Location     Type
 28396 ;;  cntr            1   36[COMRAM] unsigned char 
 28397 ;;  start           1    0        unsigned char 
 28398 ;; Return value:  Size  Location     Type
 28399 ;;                  1    wreg      void 
 28400 ;; Registers used:
 28401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28402 ;; Tracked objects:
 28403 ;;		On entry : 0/0
 28404 ;;		On exit  : 0/0
 28405 ;;		Unchanged: 0/0
 28406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28411 ;;Total ram usage:        1 bytes
 28412 ;; Hardware stack levels used:    1
 28413 ;; Hardware stack levels required when called:    5
 28414 ;; This function calls:
 28415 ;;		__display_itoa_u16
 28416 ;;		__display_itoa_u32
 28417 ;;		_bootloader_get_entries
 28418 ;;		_bootloader_get_error
 28419 ;;		_bootloader_get_rec_address
 28420 ;; This function is called by:
 28421 ;;		_display_prepare
 28422 ;; This function uses a non-reentrant model
 28423 ;;
 28424                           
 28425                           	psect	text138
 28426  00129A                     __ptext138:
 28427                           	opt stack 0
 28428  00129A                     __display_failed:
 28429                           	opt stack 21
 28430                           
 28431                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 28432                           
 28433                           ;incstack = 0
 28434  00129A  0E00               	movlw	0
 28435  00129C  6E25               	movwf	__display_failed@cntr,c
 28436                           
 28437                           ;display.c: 460: while(failed_line1[cntr])
 28438  00129E  D017               	goto	l1637
 28439  0012A0                     
 28440                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 28441  0012A0  5025               	movf	__display_failed@cntr,w,c
 28442  0012A2  0D01               	mullw	1
 28443  0012A4  0EA4               	movlw	low _failed_line1
 28444  0012A6  24F3               	addwf	prodl,w,c
 28445  0012A8  6EF6               	movwf	tblptrl,c
 28446  0012AA  0E8D               	movlw	high _failed_line1
 28447  0012AC  20F4               	addwfc	prodh,w,c
 28448  0012AE  6EF7               	movwf	tblptrh,c
 28449  0012B0                     	if	1	;There are 3 active tblptr bytes
 28450  0012B0  6AF8               	clrf	tblptru,c
 28451  0012B2  0E00               	movlw	low (__mediumconst shr (0+16))
 28452  0012B4  22F8               	addwfc	tblptru,f,c
 28453  0012B6                     	endif
 28454  0012B6  5025               	movf	__display_failed@cntr,w,c
 28455  0012B8  0D01               	mullw	1
 28456  0012BA  0E00               	movlw	low _display_content
 28457  0012BC  24F3               	addwf	prodl,w,c
 28458  0012BE  6ED9               	movwf	fsr2l,c
 28459  0012C0  0E02               	movlw	high _display_content
 28460  0012C2  20F4               	addwfc	prodh,w,c
 28461  0012C4  6EDA               	movwf	fsr2h,c
 28462  0012C6  0008               	tblrd		*
 28463  0012C8  CFF5 FFDF          	movff	tablat,indf2
 28464  0012CC  2A25               	incf	__display_failed@cntr,f,c
 28465  0012CE                     l1637:
 28466  0012CE  5025               	movf	__display_failed@cntr,w,c
 28467  0012D0  0D01               	mullw	1
 28468  0012D2  0EA4               	movlw	low _failed_line1
 28469  0012D4  24F3               	addwf	prodl,w,c
 28470  0012D6  6EF6               	movwf	tblptrl,c
 28471  0012D8  0E8D               	movlw	high _failed_line1
 28472  0012DA  20F4               	addwfc	prodh,w,c
 28473  0012DC  6EF7               	movwf	tblptrh,c
 28474  0012DE                     	if	1	;There are 3 active tblptr bytes
 28475  0012DE  6AF8               	clrf	tblptru,c
 28476  0012E0  0E00               	movlw	low (__mediumconst shr (0+16))
 28477  0012E2  22F8               	addwfc	tblptru,f,c
 28478  0012E4                     	endif
 28479  0012E4  0008               	tblrd		*
 28480  0012E6  50F5               	movf	tablat,w,c
 28481  0012E8  0900               	iorlw	0
 28482  0012EA  A4D8               	btfss	status,2,c
 28483  0012EC  D7D9               	goto	l1638
 28484                           
 28485                           ;display.c: 462: cntr = 0;
 28486  0012EE  0E00               	movlw	0
 28487  0012F0  6E25               	movwf	__display_failed@cntr,c
 28488                           
 28489                           ;display.c: 463: while(failed_line2[cntr])
 28490  0012F2  D017               	goto	l1640
 28491  0012F4                     
 28492                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 28493  0012F4  5025               	movf	__display_failed@cntr,w,c
 28494  0012F6  0D01               	mullw	1
 28495  0012F8  0E0E               	movlw	low _failed_line2
 28496  0012FA  24F3               	addwf	prodl,w,c
 28497  0012FC  6EF6               	movwf	tblptrl,c
 28498  0012FE  0E8D               	movlw	high _failed_line2
 28499  001300  20F4               	addwfc	prodh,w,c
 28500  001302  6EF7               	movwf	tblptrh,c
 28501  001304                     	if	1	;There are 3 active tblptr bytes
 28502  001304  6AF8               	clrf	tblptru,c
 28503  001306  0E00               	movlw	low (__mediumconst shr (0+16))
 28504  001308  22F8               	addwfc	tblptru,f,c
 28505  00130A                     	endif
 28506  00130A  5025               	movf	__display_failed@cntr,w,c
 28507  00130C  0D01               	mullw	1
 28508  00130E  0E14               	movlw	low (_display_content+20)
 28509  001310  24F3               	addwf	prodl,w,c
 28510  001312  6ED9               	movwf	fsr2l,c
 28511  001314  0E02               	movlw	high (_display_content+20)
 28512  001316  20F4               	addwfc	prodh,w,c
 28513  001318  6EDA               	movwf	fsr2h,c
 28514  00131A  0008               	tblrd		*
 28515  00131C  CFF5 FFDF          	movff	tablat,indf2
 28516  001320  2A25               	incf	__display_failed@cntr,f,c
 28517  001322                     l1640:
 28518  001322  5025               	movf	__display_failed@cntr,w,c
 28519  001324  0D01               	mullw	1
 28520  001326  0E0E               	movlw	low _failed_line2
 28521  001328  24F3               	addwf	prodl,w,c
 28522  00132A  6EF6               	movwf	tblptrl,c
 28523  00132C  0E8D               	movlw	high _failed_line2
 28524  00132E  20F4               	addwfc	prodh,w,c
 28525  001330  6EF7               	movwf	tblptrh,c
 28526  001332                     	if	1	;There are 3 active tblptr bytes
 28527  001332  6AF8               	clrf	tblptru,c
 28528  001334  0E00               	movlw	low (__mediumconst shr (0+16))
 28529  001336  22F8               	addwfc	tblptru,f,c
 28530  001338                     	endif
 28531  001338  0008               	tblrd		*
 28532  00133A  50F5               	movf	tablat,w,c
 28533  00133C  0900               	iorlw	0
 28534  00133E  A4D8               	btfss	status,2,c
 28535  001340  D7D9               	goto	l1641
 28536                           
 28537                           ;display.c: 466: cntr = 0;
 28538  001342  0E00               	movlw	0
 28539  001344  6E25               	movwf	__display_failed@cntr,c
 28540                           
 28541                           ;display.c: 467: switch(bootloader_get_error())
 28542  001346  D0D6               	goto	l1643
 28543  001348                     
 28544                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28545  001348  5025               	movf	__display_failed@cntr,w,c
 28546  00134A  0D01               	mullw	1
 28547  00134C  0ED6               	movlw	low _failed_line3_startCode
 28548  00134E  24F3               	addwf	prodl,w,c
 28549  001350  6EF6               	movwf	tblptrl,c
 28550  001352  0E8C               	movlw	high _failed_line3_startCode
 28551  001354  20F4               	addwfc	prodh,w,c
 28552  001356  6EF7               	movwf	tblptrh,c
 28553  001358                     	if	1	;There are 3 active tblptr bytes
 28554  001358  6AF8               	clrf	tblptru,c
 28555  00135A  0E00               	movlw	low (__mediumconst shr (0+16))
 28556  00135C  22F8               	addwfc	tblptru,f,c
 28557  00135E                     	endif
 28558  00135E  5025               	movf	__display_failed@cntr,w,c
 28559  001360  0D01               	mullw	1
 28560  001362  0E28               	movlw	low (_display_content+40)
 28561  001364  24F3               	addwf	prodl,w,c
 28562  001366  6ED9               	movwf	fsr2l,c
 28563  001368  0E02               	movlw	high (_display_content+40)
 28564  00136A  20F4               	addwfc	prodh,w,c
 28565  00136C  6EDA               	movwf	fsr2h,c
 28566  00136E  0008               	tblrd		*
 28567  001370  CFF5 FFDF          	movff	tablat,indf2
 28568  001374  2A25               	incf	__display_failed@cntr,f,c
 28569  001376  5025               	movf	__display_failed@cntr,w,c
 28570  001378  0D01               	mullw	1
 28571  00137A  0ED6               	movlw	low _failed_line3_startCode
 28572  00137C  24F3               	addwf	prodl,w,c
 28573  00137E  6EF6               	movwf	tblptrl,c
 28574  001380  0E8C               	movlw	high _failed_line3_startCode
 28575  001382  20F4               	addwfc	prodh,w,c
 28576  001384  6EF7               	movwf	tblptrh,c
 28577  001386                     	if	1	;There are 3 active tblptr bytes
 28578  001386  6AF8               	clrf	tblptru,c
 28579  001388  0E00               	movlw	low (__mediumconst shr (0+16))
 28580  00138A  22F8               	addwfc	tblptru,f,c
 28581  00138C                     	endif
 28582  00138C  0008               	tblrd		*
 28583  00138E  50F5               	movf	tablat,w,c
 28584  001390  0900               	iorlw	0
 28585  001392  B4D8               	btfsc	status,2,c
 28586  001394  D0C0               	goto	l1648
 28587  001396  D7D8               	goto	l1646
 28588  001398                     
 28589                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 28590  001398  5025               	movf	__display_failed@cntr,w,c
 28591  00139A  0D01               	mullw	1
 28592  00139C  0E04               	movlw	low _failed_line3_checksum
 28593  00139E  24F3               	addwf	prodl,w,c
 28594  0013A0  6EF6               	movwf	tblptrl,c
 28595  0013A2  0E8E               	movlw	high _failed_line3_checksum
 28596  0013A4  20F4               	addwfc	prodh,w,c
 28597  0013A6  6EF7               	movwf	tblptrh,c
 28598  0013A8                     	if	1	;There are 3 active tblptr bytes
 28599  0013A8  6AF8               	clrf	tblptru,c
 28600  0013AA  0E00               	movlw	low (__mediumconst shr (0+16))
 28601  0013AC  22F8               	addwfc	tblptru,f,c
 28602  0013AE                     	endif
 28603  0013AE  5025               	movf	__display_failed@cntr,w,c
 28604  0013B0  0D01               	mullw	1
 28605  0013B2  0E28               	movlw	low (_display_content+40)
 28606  0013B4  24F3               	addwf	prodl,w,c
 28607  0013B6  6ED9               	movwf	fsr2l,c
 28608  0013B8  0E02               	movlw	high (_display_content+40)
 28609  0013BA  20F4               	addwfc	prodh,w,c
 28610  0013BC  6EDA               	movwf	fsr2h,c
 28611  0013BE  0008               	tblrd		*
 28612  0013C0  CFF5 FFDF          	movff	tablat,indf2
 28613  0013C4  2A25               	incf	__display_failed@cntr,f,c
 28614  0013C6  5025               	movf	__display_failed@cntr,w,c
 28615  0013C8  0D01               	mullw	1
 28616  0013CA  0E04               	movlw	low _failed_line3_checksum
 28617  0013CC  24F3               	addwf	prodl,w,c
 28618  0013CE  6EF6               	movwf	tblptrl,c
 28619  0013D0  0E8E               	movlw	high _failed_line3_checksum
 28620  0013D2  20F4               	addwfc	prodh,w,c
 28621  0013D4  6EF7               	movwf	tblptrh,c
 28622  0013D6                     	if	1	;There are 3 active tblptr bytes
 28623  0013D6  6AF8               	clrf	tblptru,c
 28624  0013D8  0E00               	movlw	low (__mediumconst shr (0+16))
 28625  0013DA  22F8               	addwfc	tblptru,f,c
 28626  0013DC                     	endif
 28627  0013DC  0008               	tblrd		*
 28628  0013DE  50F5               	movf	tablat,w,c
 28629  0013E0  0900               	iorlw	0
 28630  0013E2  B4D8               	btfsc	status,2,c
 28631  0013E4  D098               	goto	l1648
 28632  0013E6  D7D8               	goto	l1651
 28633  0013E8                     
 28634                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 28635  0013E8  5025               	movf	__display_failed@cntr,w,c
 28636  0013EA  0D01               	mullw	1
 28637  0013EC  0E13               	movlw	low _failed_line3_noNextRecord
 28638  0013EE  24F3               	addwf	prodl,w,c
 28639  0013F0  6EF6               	movwf	tblptrl,c
 28640  0013F2  0E8E               	movlw	high _failed_line3_noNextRecord
 28641  0013F4  20F4               	addwfc	prodh,w,c
 28642  0013F6  6EF7               	movwf	tblptrh,c
 28643  0013F8                     	if	1	;There are 3 active tblptr bytes
 28644  0013F8  6AF8               	clrf	tblptru,c
 28645  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 28646  0013FC  22F8               	addwfc	tblptru,f,c
 28647  0013FE                     	endif
 28648  0013FE  5025               	movf	__display_failed@cntr,w,c
 28649  001400  0D01               	mullw	1
 28650  001402  0E28               	movlw	low (_display_content+40)
 28651  001404  24F3               	addwf	prodl,w,c
 28652  001406  6ED9               	movwf	fsr2l,c
 28653  001408  0E02               	movlw	high (_display_content+40)
 28654  00140A  20F4               	addwfc	prodh,w,c
 28655  00140C  6EDA               	movwf	fsr2h,c
 28656  00140E  0008               	tblrd		*
 28657  001410  CFF5 FFDF          	movff	tablat,indf2
 28658  001414  2A25               	incf	__display_failed@cntr,f,c
 28659  001416  5025               	movf	__display_failed@cntr,w,c
 28660  001418  0D01               	mullw	1
 28661  00141A  0E13               	movlw	low _failed_line3_noNextRecord
 28662  00141C  24F3               	addwf	prodl,w,c
 28663  00141E  6EF6               	movwf	tblptrl,c
 28664  001420  0E8E               	movlw	high _failed_line3_noNextRecord
 28665  001422  20F4               	addwfc	prodh,w,c
 28666  001424  6EF7               	movwf	tblptrh,c
 28667  001426                     	if	1	;There are 3 active tblptr bytes
 28668  001426  6AF8               	clrf	tblptru,c
 28669  001428  0E00               	movlw	low (__mediumconst shr (0+16))
 28670  00142A  22F8               	addwfc	tblptru,f,c
 28671  00142C                     	endif
 28672  00142C  0008               	tblrd		*
 28673  00142E  50F5               	movf	tablat,w,c
 28674  001430  0900               	iorlw	0
 28675  001432  B4D8               	btfsc	status,2,c
 28676  001434  D070               	goto	l1648
 28677  001436  D7D8               	goto	l1655
 28678  001438                     
 28679                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 28680  001438  5025               	movf	__display_failed@cntr,w,c
 28681  00143A  0D01               	mullw	1
 28682  00143C  0E31               	movlw	low _failed_line3_dataTooLong
 28683  00143E  24F3               	addwf	prodl,w,c
 28684  001440  6EF6               	movwf	tblptrl,c
 28685  001442  0E8E               	movlw	high _failed_line3_dataTooLong
 28686  001444  20F4               	addwfc	prodh,w,c
 28687  001446  6EF7               	movwf	tblptrh,c
 28688  001448                     	if	1	;There are 3 active tblptr bytes
 28689  001448  6AF8               	clrf	tblptru,c
 28690  00144A  0E00               	movlw	low (__mediumconst shr (0+16))
 28691  00144C  22F8               	addwfc	tblptru,f,c
 28692  00144E                     	endif
 28693  00144E  5025               	movf	__display_failed@cntr,w,c
 28694  001450  0D01               	mullw	1
 28695  001452  0E28               	movlw	low (_display_content+40)
 28696  001454  24F3               	addwf	prodl,w,c
 28697  001456  6ED9               	movwf	fsr2l,c
 28698  001458  0E02               	movlw	high (_display_content+40)
 28699  00145A  20F4               	addwfc	prodh,w,c
 28700  00145C  6EDA               	movwf	fsr2h,c
 28701  00145E  0008               	tblrd		*
 28702  001460  CFF5 FFDF          	movff	tablat,indf2
 28703  001464  2A25               	incf	__display_failed@cntr,f,c
 28704  001466  5025               	movf	__display_failed@cntr,w,c
 28705  001468  0D01               	mullw	1
 28706  00146A  0E31               	movlw	low _failed_line3_dataTooLong
 28707  00146C  24F3               	addwf	prodl,w,c
 28708  00146E  6EF6               	movwf	tblptrl,c
 28709  001470  0E8E               	movlw	high _failed_line3_dataTooLong
 28710  001472  20F4               	addwfc	prodh,w,c
 28711  001474  6EF7               	movwf	tblptrh,c
 28712  001476                     	if	1	;There are 3 active tblptr bytes
 28713  001476  6AF8               	clrf	tblptru,c
 28714  001478  0E00               	movlw	low (__mediumconst shr (0+16))
 28715  00147A  22F8               	addwfc	tblptru,f,c
 28716  00147C                     	endif
 28717  00147C  0008               	tblrd		*
 28718  00147E  50F5               	movf	tablat,w,c
 28719  001480  0900               	iorlw	0
 28720  001482  B4D8               	btfsc	status,2,c
 28721  001484  D048               	goto	l1648
 28722  001486  D7D8               	goto	l1659
 28723  001488                     
 28724                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 28725  001488  5025               	movf	__display_failed@cntr,w,c
 28726  00148A  0D01               	mullw	1
 28727  00148C  0EAE               	movlw	low _failed_line3_addressRange
 28728  00148E  24F3               	addwf	prodl,w,c
 28729  001490  6EF6               	movwf	tblptrl,c
 28730  001492  0E8C               	movlw	high _failed_line3_addressRange
 28731  001494  20F4               	addwfc	prodh,w,c
 28732  001496  6EF7               	movwf	tblptrh,c
 28733  001498                     	if	1	;There are 3 active tblptr bytes
 28734  001498  6AF8               	clrf	tblptru,c
 28735  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
 28736  00149C  22F8               	addwfc	tblptru,f,c
 28737  00149E                     	endif
 28738  00149E  5025               	movf	__display_failed@cntr,w,c
 28739  0014A0  0D01               	mullw	1
 28740  0014A2  0E28               	movlw	low (_display_content+40)
 28741  0014A4  24F3               	addwf	prodl,w,c
 28742  0014A6  6ED9               	movwf	fsr2l,c
 28743  0014A8  0E02               	movlw	high (_display_content+40)
 28744  0014AA  20F4               	addwfc	prodh,w,c
 28745  0014AC  6EDA               	movwf	fsr2h,c
 28746  0014AE  0008               	tblrd		*
 28747  0014B0  CFF5 FFDF          	movff	tablat,indf2
 28748  0014B4  2A25               	incf	__display_failed@cntr,f,c
 28749  0014B6  5025               	movf	__display_failed@cntr,w,c
 28750  0014B8  0D01               	mullw	1
 28751  0014BA  0EAE               	movlw	low _failed_line3_addressRange
 28752  0014BC  24F3               	addwf	prodl,w,c
 28753  0014BE  6EF6               	movwf	tblptrl,c
 28754  0014C0  0E8C               	movlw	high _failed_line3_addressRange
 28755  0014C2  20F4               	addwfc	prodh,w,c
 28756  0014C4  6EF7               	movwf	tblptrh,c
 28757  0014C6                     	if	1	;There are 3 active tblptr bytes
 28758  0014C6  6AF8               	clrf	tblptru,c
 28759  0014C8  0E00               	movlw	low (__mediumconst shr (0+16))
 28760  0014CA  22F8               	addwfc	tblptru,f,c
 28761  0014CC                     	endif
 28762  0014CC  0008               	tblrd		*
 28763  0014CE  50F5               	movf	tablat,w,c
 28764  0014D0  0900               	iorlw	0
 28765  0014D2  A4D8               	btfss	status,2,c
 28766  0014D4  D7D9               	goto	l1663
 28767                           
 28768                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 28769  0014D6  ECA7  F044         	call	_bootloader_get_rec_address	;wreg free
 28770  0014DA  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 28771  0014DE  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 28772  0014E2  6A21               	clrf	__display_itoa_u32@value+2,c
 28773  0014E4  6A22               	clrf	__display_itoa_u32@value+3,c
 28774  0014E6  0E4A               	movlw	low (_display_content+74)
 28775  0014E8  6E23               	movwf	__display_itoa_u32@text,c
 28776  0014EA  0E02               	movlw	high (_display_content+74)
 28777  0014EC  6E24               	movwf	__display_itoa_u32@text+1,c
 28778  0014EE  EC07  F006         	call	__display_itoa_u32	;wreg free
 28779                           
 28780                           ;display.c: 497: }
 28781                           
 28782                           ;display.c: 495: break;
 28783  0014F2  D011               	goto	l1648
 28784  0014F4                     l1643:
 28785  0014F4  ECE0  F044         	call	_bootloader_get_error	;wreg free
 28786                           
 28787                           ; Switch size 1, requested type "space"
 28788                           ; Number of cases is 5, Range of values is 11 to 15
 28789                           ; switch strategies available:
 28790                           ; Name         Instructions Cycles
 28791                           ; simple_byte           16     9 (average)
 28792                           ;	Chosen strategy is simple_byte
 28793  0014F8  0A0B               	xorlw	11	; case 11
 28794  0014FA  B4D8               	btfsc	status,2,c
 28795  0014FC  D7DC               	goto	l1662
 28796  0014FE  0A07               	xorlw	7	; case 12
 28797  001500  B4D8               	btfsc	status,2,c
 28798  001502  D7B1               	goto	l1658
 28799  001504  0A01               	xorlw	1	; case 13
 28800  001506  B4D8               	btfsc	status,2,c
 28801  001508  D786               	goto	l1654
 28802  00150A  0A03               	xorlw	3	; case 14
 28803  00150C  B4D8               	btfsc	status,2,c
 28804  00150E  D75B               	goto	l1650
 28805  001510  0A01               	xorlw	1	; case 15
 28806  001512  B4D8               	btfsc	status,2,c
 28807  001514  D730               	goto	l1645
 28808  001516                     l1648:
 28809                           
 28810                           ;display.c: 499: cntr = 0;
 28811  001516  0E00               	movlw	0
 28812  001518  6E25               	movwf	__display_failed@cntr,c
 28813                           
 28814                           ;display.c: 500: while(failed_line4[cntr])
 28815  00151A  D017               	goto	l1665
 28816  00151C                     
 28817                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 28818  00151C  5025               	movf	__display_failed@cntr,w,c
 28819  00151E  0D01               	mullw	1
 28820  001520  0E6B               	movlw	low _failed_line4
 28821  001522  24F3               	addwf	prodl,w,c
 28822  001524  6EF6               	movwf	tblptrl,c
 28823  001526  0E8E               	movlw	high _failed_line4
 28824  001528  20F4               	addwfc	prodh,w,c
 28825  00152A  6EF7               	movwf	tblptrh,c
 28826  00152C                     	if	1	;There are 3 active tblptr bytes
 28827  00152C  6AF8               	clrf	tblptru,c
 28828  00152E  0E00               	movlw	low (__mediumconst shr (0+16))
 28829  001530  22F8               	addwfc	tblptru,f,c
 28830  001532                     	endif
 28831  001532  5025               	movf	__display_failed@cntr,w,c
 28832  001534  0D01               	mullw	1
 28833  001536  0E3C               	movlw	low (_display_content+60)
 28834  001538  24F3               	addwf	prodl,w,c
 28835  00153A  6ED9               	movwf	fsr2l,c
 28836  00153C  0E02               	movlw	high (_display_content+60)
 28837  00153E  20F4               	addwfc	prodh,w,c
 28838  001540  6EDA               	movwf	fsr2h,c
 28839  001542  0008               	tblrd		*
 28840  001544  CFF5 FFDF          	movff	tablat,indf2
 28841  001548  2A25               	incf	__display_failed@cntr,f,c
 28842  00154A                     l1665:
 28843  00154A  5025               	movf	__display_failed@cntr,w,c
 28844  00154C  0D01               	mullw	1
 28845  00154E  0E6B               	movlw	low _failed_line4
 28846  001550  24F3               	addwf	prodl,w,c
 28847  001552  6EF6               	movwf	tblptrl,c
 28848  001554  0E8E               	movlw	high _failed_line4
 28849  001556  20F4               	addwfc	prodh,w,c
 28850  001558  6EF7               	movwf	tblptrh,c
 28851  00155A                     	if	1	;There are 3 active tblptr bytes
 28852  00155A  6AF8               	clrf	tblptru,c
 28853  00155C  0E00               	movlw	low (__mediumconst shr (0+16))
 28854  00155E  22F8               	addwfc	tblptru,f,c
 28855  001560                     	endif
 28856  001560  0008               	tblrd		*
 28857  001562  50F5               	movf	tablat,w,c
 28858  001564  0900               	iorlw	0
 28859  001566  A4D8               	btfss	status,2,c
 28860  001568  D7D9               	goto	l1666
 28861                           
 28862                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 28863  00156A  ECAC  F044         	call	_bootloader_get_entries	;wreg free
 28864  00156E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28865  001572  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28866  001576  6A1B               	clrf	__display_itoa_u16@value+2,c
 28867  001578  6A1C               	clrf	__display_itoa_u16@value+3,c
 28868  00157A  5025               	movf	__display_failed@cntr,w,c
 28869  00157C  0D01               	mullw	1
 28870  00157E  0E3C               	movlw	low (_display_content+60)
 28871  001580  24F3               	addwf	prodl,w,c
 28872  001582  6E1D               	movwf	__display_itoa_u16@text,c
 28873  001584  0E02               	movlw	high (_display_content+60)
 28874  001586  20F4               	addwfc	prodh,w,c
 28875  001588  6E1E               	movwf	__display_itoa_u16@text+1,c
 28876  00158A  EC50  F02E         	call	__display_itoa_u16	;wreg free
 28877  00158E  0012               	return		;funcret
 28878  001590                     __end_of__display_failed:
 28879                           	opt stack 0
 28880                           tosu	equ	0xFFF
 28881                           tosh	equ	0xFFE
 28882                           tosl	equ	0xFFD
 28883                           pclath	equ	0xFFA
 28884                           tblptru	equ	0xFF8
 28885                           tblptrh	equ	0xFF7
 28886                           tblptrl	equ	0xFF6
 28887                           tablat	equ	0xFF5
 28888                           prodh	equ	0xFF4
 28889                           prodl	equ	0xFF3
 28890                           intcon	equ	0xFF2
 28891                           intcon2	equ	0xFF1
 28892                           intcon3	equ	0xFF0
 28893                           indf0	equ	0xFEF
 28894                           postinc0	equ	0xFEE
 28895                           fsr0h	equ	0xFEA
 28896                           fsr0l	equ	0xFE9
 28897                           wreg	equ	0xFE8
 28898                           indf1	equ	0xFE7
 28899                           postdec1	equ	0xFE5
 28900                           plusw1	equ	0xFE3
 28901                           fsr1h	equ	0xFE2
 28902                           fsr1l	equ	0xFE1
 28903                           indf2	equ	0xFDF
 28904                           postinc2	equ	0xFDE
 28905                           postdec2	equ	0xFDD
 28906                           plusw2	equ	0xFDB
 28907                           fsr2h	equ	0xFDA
 28908                           fsr2l	equ	0xFD9
 28909                           status	equ	0xFD8
 28910                           
 28911 ;; *************** function _bootloader_get_rec_address *****************
 28912 ;; Defined at:
 28913 ;;		line 485 in file "bootloader.c"
 28914 ;; Parameters:    Size  Location     Type
 28915 ;;		None
 28916 ;; Auto vars:     Size  Location     Type
 28917 ;;		None
 28918 ;; Return value:  Size  Location     Type
 28919 ;;                  2    0[COMRAM] unsigned int 
 28920 ;; Registers used:
 28921 ;;		None
 28922 ;; Tracked objects:
 28923 ;;		On entry : 0/0
 28924 ;;		On exit  : 0/0
 28925 ;;		Unchanged: 0/0
 28926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28931 ;;Total ram usage:        2 bytes
 28932 ;; Hardware stack levels used:    1
 28933 ;; This function calls:
 28934 ;;		Nothing
 28935 ;; This function is called by:
 28936 ;;		__display_failed
 28937 ;;		__fill_buffer_get_bootloader_details
 28938 ;; This function uses a non-reentrant model
 28939 ;;
 28940                           
 28941                           	psect	text139
 28942  00894E                     __ptext139:
 28943                           	opt stack 0
 28944  00894E                     _bootloader_get_rec_address:
 28945                           	opt stack 25
 28946                           
 28947                           ;bootloader.c: 488: return hex_file_entry.address;
 28948                           
 28949                           ;incstack = 0
 28950  00894E  C1BD  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 28951  008952  C1BE  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 28952  008956  0012               	return		;funcret
 28953  008958                     __end_of_bootloader_get_rec_address:
 28954                           	opt stack 0
 28955                           tosu	equ	0xFFF
 28956                           tosh	equ	0xFFE
 28957                           tosl	equ	0xFFD
 28958                           pclath	equ	0xFFA
 28959                           tblptru	equ	0xFF8
 28960                           tblptrh	equ	0xFF7
 28961                           tblptrl	equ	0xFF6
 28962                           tablat	equ	0xFF5
 28963                           prodh	equ	0xFF4
 28964                           prodl	equ	0xFF3
 28965                           intcon	equ	0xFF2
 28966                           intcon2	equ	0xFF1
 28967                           intcon3	equ	0xFF0
 28968                           indf0	equ	0xFEF
 28969                           postinc0	equ	0xFEE
 28970                           fsr0h	equ	0xFEA
 28971                           fsr0l	equ	0xFE9
 28972                           wreg	equ	0xFE8
 28973                           indf1	equ	0xFE7
 28974                           postdec1	equ	0xFE5
 28975                           plusw1	equ	0xFE3
 28976                           fsr1h	equ	0xFE2
 28977                           fsr1l	equ	0xFE1
 28978                           indf2	equ	0xFDF
 28979                           postinc2	equ	0xFDE
 28980                           postdec2	equ	0xFDD
 28981                           plusw2	equ	0xFDB
 28982                           fsr2h	equ	0xFDA
 28983                           fsr2l	equ	0xFD9
 28984                           status	equ	0xFD8
 28985                           
 28986 ;; *************** function _bootloader_get_error *****************
 28987 ;; Defined at:
 28988 ;;		line 475 in file "bootloader.c"
 28989 ;; Parameters:    Size  Location     Type
 28990 ;;		None
 28991 ;; Auto vars:     Size  Location     Type
 28992 ;;		None
 28993 ;; Return value:  Size  Location     Type
 28994 ;;                  1    wreg      enum E7014
 28995 ;; Registers used:
 28996 ;;		wreg, status,2
 28997 ;; Tracked objects:
 28998 ;;		On entry : 0/0
 28999 ;;		On exit  : 0/0
 29000 ;;		Unchanged: 0/0
 29001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29006 ;;Total ram usage:        0 bytes
 29007 ;; Hardware stack levels used:    1
 29008 ;; This function calls:
 29009 ;;		Nothing
 29010 ;; This function is called by:
 29011 ;;		__display_failed
 29012 ;;		__fill_buffer_get_bootloader_details
 29013 ;; This function uses a non-reentrant model
 29014 ;;
 29015                           
 29016                           	psect	text140
 29017  0089C0                     __ptext140:
 29018                           	opt stack 0
 29019  0089C0                     _bootloader_get_error:
 29020                           	opt stack 25
 29021                           
 29022                           ;bootloader.c: 477: return last_error;
 29023                           
 29024                           ;incstack = 0
 29025  0089C0  0100               	movlb	0	; () banked
 29026  0089C2  51DE               	movf	_last_error& (0+255),w,b
 29027  0089C4  0012               	return	
 29028  0089C6                     __end_of_bootloader_get_error:
 29029                           	opt stack 0
 29030                           tosu	equ	0xFFF
 29031                           tosh	equ	0xFFE
 29032                           tosl	equ	0xFFD
 29033                           pclath	equ	0xFFA
 29034                           tblptru	equ	0xFF8
 29035                           tblptrh	equ	0xFF7
 29036                           tblptrl	equ	0xFF6
 29037                           tablat	equ	0xFF5
 29038                           prodh	equ	0xFF4
 29039                           prodl	equ	0xFF3
 29040                           intcon	equ	0xFF2
 29041                           intcon2	equ	0xFF1
 29042                           intcon3	equ	0xFF0
 29043                           indf0	equ	0xFEF
 29044                           postinc0	equ	0xFEE
 29045                           fsr0h	equ	0xFEA
 29046                           fsr0l	equ	0xFE9
 29047                           wreg	equ	0xFE8
 29048                           indf1	equ	0xFE7
 29049                           postdec1	equ	0xFE5
 29050                           plusw1	equ	0xFE3
 29051                           fsr1h	equ	0xFE2
 29052                           fsr1l	equ	0xFE1
 29053                           indf2	equ	0xFDF
 29054                           postinc2	equ	0xFDE
 29055                           postdec2	equ	0xFDD
 29056                           plusw2	equ	0xFDB
 29057                           fsr2h	equ	0xFDA
 29058                           fsr2l	equ	0xFD9
 29059                           status	equ	0xFD8
 29060                           
 29061 ;; *************** function _bootloader_get_entries *****************
 29062 ;; Defined at:
 29063 ;;		line 465 in file "bootloader.c"
 29064 ;; Parameters:    Size  Location     Type
 29065 ;;		None
 29066 ;; Auto vars:     Size  Location     Type
 29067 ;;		None
 29068 ;; Return value:  Size  Location     Type
 29069 ;;                  2    0[COMRAM] unsigned int 
 29070 ;; Registers used:
 29071 ;;		None
 29072 ;; Tracked objects:
 29073 ;;		On entry : 0/0
 29074 ;;		On exit  : 0/0
 29075 ;;		Unchanged: 0/0
 29076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29081 ;;Total ram usage:        2 bytes
 29082 ;; Hardware stack levels used:    1
 29083 ;; This function calls:
 29084 ;;		Nothing
 29085 ;; This function is called by:
 29086 ;;		__display_verify
 29087 ;;		__display_failed
 29088 ;;		__display_programming
 29089 ;;		__fill_buffer_get_bootloader_details
 29090 ;; This function uses a non-reentrant model
 29091 ;;
 29092                           
 29093                           	psect	text141
 29094  008958                     __ptext141:
 29095                           	opt stack 0
 29096  008958                     _bootloader_get_entries:
 29097                           	opt stack 25
 29098                           
 29099                           ;bootloader.c: 467: return hex_file_entries;
 29100                           
 29101                           ; BSR set to: 0
 29102                           ;incstack = 0
 29103  008958  C174  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29104  00895C  C175  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29105  008960  0012               	return		;funcret
 29106  008962                     __end_of_bootloader_get_entries:
 29107                           	opt stack 0
 29108                           tosu	equ	0xFFF
 29109                           tosh	equ	0xFFE
 29110                           tosl	equ	0xFFD
 29111                           pclath	equ	0xFFA
 29112                           tblptru	equ	0xFF8
 29113                           tblptrh	equ	0xFF7
 29114                           tblptrl	equ	0xFF6
 29115                           tablat	equ	0xFF5
 29116                           prodh	equ	0xFF4
 29117                           prodl	equ	0xFF3
 29118                           intcon	equ	0xFF2
 29119                           intcon2	equ	0xFF1
 29120                           intcon3	equ	0xFF0
 29121                           indf0	equ	0xFEF
 29122                           postinc0	equ	0xFEE
 29123                           fsr0h	equ	0xFEA
 29124                           fsr0l	equ	0xFE9
 29125                           wreg	equ	0xFE8
 29126                           indf1	equ	0xFE7
 29127                           postdec1	equ	0xFE5
 29128                           plusw1	equ	0xFE3
 29129                           fsr1h	equ	0xFE2
 29130                           fsr1l	equ	0xFE1
 29131                           indf2	equ	0xFDF
 29132                           postinc2	equ	0xFDE
 29133                           postdec2	equ	0xFDD
 29134                           plusw2	equ	0xFDB
 29135                           fsr2h	equ	0xFDA
 29136                           fsr2l	equ	0xFD9
 29137                           status	equ	0xFD8
 29138                           
 29139 ;; *************** function __display_itoa_u32 *****************
 29140 ;; Defined at:
 29141 ;;		line 172 in file "display.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;  value           4   30[COMRAM] unsigned long 
 29144 ;;  text            2   34[COMRAM] PTR unsigned char 
 29145 ;;		 -> display_content(80), 
 29146 ;; Auto vars:     Size  Location     Type
 29147 ;;		None
 29148 ;; Return value:  Size  Location     Type
 29149 ;;                  1    wreg      unsigned char 
 29150 ;; Registers used:
 29151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29152 ;; Tracked objects:
 29153 ;;		On entry : 0/0
 29154 ;;		On exit  : 0/0
 29155 ;;		Unchanged: 0/0
 29156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29157 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29161 ;;Total ram usage:        6 bytes
 29162 ;; Hardware stack levels used:    1
 29163 ;; Hardware stack levels required when called:    4
 29164 ;; This function calls:
 29165 ;;		___lldiv
 29166 ;;		___llmod
 29167 ;;		__display_itoa_u16
 29168 ;;		_itoa
 29169 ;; This function is called by:
 29170 ;;		__display_start
 29171 ;;		__display_found
 29172 ;;		__display_failed
 29173 ;; This function uses a non-reentrant model
 29174 ;;
 29175                           
 29176                           	psect	text142
 29177  000C0E                     __ptext142:
 29178                           	opt stack 0
 29179  000C0E                     __display_itoa_u32:
 29180                           	opt stack 21
 29181                           
 29182                           ;display.c: 175: if(value<=0x7FFF)
 29183                           
 29184                           ;incstack = 0
 29185  000C0E  5022               	movf	__display_itoa_u32@value+3,w,c
 29186  000C10  1021               	iorwf	__display_itoa_u32@value+2,w,c
 29187  000C12  E111               	bnz	l10732
 29188  000C14  0E80               	movlw	128
 29189  000C16  5C20               	subwf	__display_itoa_u32@value+1,w,c
 29190  000C18  B0D8               	btfsc	status,0,c
 29191  000C1A  D00D               	goto	l1508
 29192                           
 29193                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 29194  000C1C  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 29195  000C20  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 29196  000C24  6A1B               	clrf	__display_itoa_u16@value+2,c
 29197  000C26  6A1C               	clrf	__display_itoa_u16@value+3,c
 29198  000C28  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 29199  000C2C  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 29200  000C30  EC50  F02E         	call	__display_itoa_u16	;wreg free
 29201  000C34  0012               	return	
 29202  000C36                     l1508:
 29203  000C36                     l10732:
 29204                           
 29205                           ;display.c: 178: };display.c: 181: if(value>100000000)
 29206  000C36  041F               	decf	__display_itoa_u32@value,w,c
 29207  000C38  0EE1               	movlw	225
 29208  000C3A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29209  000C3C  0EF5               	movlw	245
 29210  000C3E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29211  000C40  0E05               	movlw	5
 29212  000C42  5822               	subwfb	__display_itoa_u32@value+3,w,c
 29213  000C44  A0D8               	btfss	status,0,c
 29214  000C46  D04C               	goto	l1510
 29215                           
 29216                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 29217  000C48  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29218  000C4C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29219  000C50  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29220  000C54  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29221  000C58  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29222  000C5C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29223  000C60  0E10               	movlw	16
 29224  000C62  6E05               	movwf	___lldiv@divisor,c
 29225  000C64  0E27               	movlw	39
 29226  000C66  6E06               	movwf	___lldiv@divisor+1,c
 29227  000C68  0E00               	movlw	0
 29228  000C6A  6E07               	movwf	___lldiv@divisor+2,c
 29229  000C6C  0E00               	movlw	0
 29230  000C6E  6E08               	movwf	___lldiv@divisor+3,c
 29231  000C70  EC1E  F037         	call	___lldiv	;wreg free
 29232  000C74  C001  F013         	movff	?___lldiv,itoa@val
 29233  000C78  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29234  000C7C  0E00               	movlw	0
 29235  000C7E  6E16               	movwf	itoa@base+1,c
 29236  000C80  0E0A               	movlw	10
 29237  000C82  6E15               	movwf	itoa@base,c
 29238  000C84  EC1C  F040         	call	_itoa	;wreg free
 29239                           
 29240                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 29241  000C88  0E05               	movlw	5
 29242  000C8A  2423               	addwf	__display_itoa_u32@text,w,c
 29243  000C8C  6E11               	movwf	itoa@buf,c
 29244  000C8E  0E00               	movlw	0
 29245  000C90  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29246  000C92  6E12               	movwf	itoa@buf+1,c
 29247  000C94  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29248  000C98  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29249  000C9C  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29250  000CA0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29251  000CA4  0E10               	movlw	16
 29252  000CA6  6E05               	movwf	___llmod@divisor,c
 29253  000CA8  0E27               	movlw	39
 29254  000CAA  6E06               	movwf	___llmod@divisor+1,c
 29255  000CAC  0E00               	movlw	0
 29256  000CAE  6E07               	movwf	___llmod@divisor+2,c
 29257  000CB0  0E00               	movlw	0
 29258  000CB2  6E08               	movwf	___llmod@divisor+3,c
 29259  000CB4  ECBD  F03A         	call	___llmod	;wreg free
 29260  000CB8  C001  F013         	movff	?___llmod,itoa@val
 29261  000CBC  C002  F014         	movff	?___llmod+1,itoa@val+1
 29262  000CC0  0E00               	movlw	0
 29263  000CC2  6E16               	movwf	itoa@base+1,c
 29264  000CC4  0E0A               	movlw	10
 29265  000CC6  6E15               	movwf	itoa@base,c
 29266  000CC8  EC1C  F040         	call	_itoa	;wreg free
 29267                           
 29268                           ;display.c: 185: *(text+9) = ' ';
 29269  000CCC  EE20 F009          	lfsr	2,9
 29270  000CD0  5023               	movf	__display_itoa_u32@text,w,c
 29271  000CD2  26D9               	addwf	fsr2l,f,c
 29272  000CD4  5024               	movf	__display_itoa_u32@text+1,w,c
 29273  000CD6  22DA               	addwfc	fsr2h,f,c
 29274  000CD8  0E20               	movlw	32
 29275  000CDA  6EDF               	movwf	indf2,c
 29276                           
 29277                           ;display.c: 186: return 9;
 29278  000CDC  0E09               	movlw	9
 29279                           
 29280                           ;display.c: 187: }
 29281  000CDE  0012               	return	
 29282  000CE0                     l1510:
 29283                           
 29284                           ;display.c: 188: else if(value>10000000)
 29285  000CE0  5022               	movf	__display_itoa_u32@value+3,w,c
 29286  000CE2  E108               	bnz	u7550
 29287  000CE4  0E81               	movlw	129
 29288  000CE6  5C1F               	subwf	__display_itoa_u32@value,w,c
 29289  000CE8  0E96               	movlw	150
 29290  000CEA  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29291  000CEC  0E98               	movlw	152
 29292  000CEE  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29293  000CF0  A0D8               	btfss	status,0,c
 29294  000CF2  D04C               	goto	l1512
 29295  000CF4                     u7550:
 29296                           
 29297                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 29298  000CF4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29299  000CF8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29300  000CFC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29301  000D00  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29302  000D04  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29303  000D08  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29304  000D0C  0E10               	movlw	16
 29305  000D0E  6E05               	movwf	___lldiv@divisor,c
 29306  000D10  0E27               	movlw	39
 29307  000D12  6E06               	movwf	___lldiv@divisor+1,c
 29308  000D14  0E00               	movlw	0
 29309  000D16  6E07               	movwf	___lldiv@divisor+2,c
 29310  000D18  0E00               	movlw	0
 29311  000D1A  6E08               	movwf	___lldiv@divisor+3,c
 29312  000D1C  EC1E  F037         	call	___lldiv	;wreg free
 29313  000D20  C001  F013         	movff	?___lldiv,itoa@val
 29314  000D24  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29315  000D28  0E00               	movlw	0
 29316  000D2A  6E16               	movwf	itoa@base+1,c
 29317  000D2C  0E0A               	movlw	10
 29318  000D2E  6E15               	movwf	itoa@base,c
 29319  000D30  EC1C  F040         	call	_itoa	;wreg free
 29320                           
 29321                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 29322  000D34  0E04               	movlw	4
 29323  000D36  2423               	addwf	__display_itoa_u32@text,w,c
 29324  000D38  6E11               	movwf	itoa@buf,c
 29325  000D3A  0E00               	movlw	0
 29326  000D3C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29327  000D3E  6E12               	movwf	itoa@buf+1,c
 29328  000D40  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29329  000D44  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29330  000D48  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29331  000D4C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29332  000D50  0E10               	movlw	16
 29333  000D52  6E05               	movwf	___llmod@divisor,c
 29334  000D54  0E27               	movlw	39
 29335  000D56  6E06               	movwf	___llmod@divisor+1,c
 29336  000D58  0E00               	movlw	0
 29337  000D5A  6E07               	movwf	___llmod@divisor+2,c
 29338  000D5C  0E00               	movlw	0
 29339  000D5E  6E08               	movwf	___llmod@divisor+3,c
 29340  000D60  ECBD  F03A         	call	___llmod	;wreg free
 29341  000D64  C001  F013         	movff	?___llmod,itoa@val
 29342  000D68  C002  F014         	movff	?___llmod+1,itoa@val+1
 29343  000D6C  0E00               	movlw	0
 29344  000D6E  6E16               	movwf	itoa@base+1,c
 29345  000D70  0E0A               	movlw	10
 29346  000D72  6E15               	movwf	itoa@base,c
 29347  000D74  EC1C  F040         	call	_itoa	;wreg free
 29348                           
 29349                           ;display.c: 192: *(text+8) = ' ';
 29350  000D78  EE20 F008          	lfsr	2,8
 29351  000D7C  5023               	movf	__display_itoa_u32@text,w,c
 29352  000D7E  26D9               	addwf	fsr2l,f,c
 29353  000D80  5024               	movf	__display_itoa_u32@text+1,w,c
 29354  000D82  22DA               	addwfc	fsr2h,f,c
 29355  000D84  0E20               	movlw	32
 29356  000D86  6EDF               	movwf	indf2,c
 29357                           
 29358                           ;display.c: 193: return 8;
 29359  000D88  0E08               	movlw	8
 29360                           
 29361                           ;display.c: 194: }
 29362  000D8A  0012               	return	
 29363  000D8C                     l1512:
 29364                           
 29365                           ;display.c: 195: else if(value>1000000)
 29366  000D8C  5022               	movf	__display_itoa_u32@value+3,w,c
 29367  000D8E  E108               	bnz	u7560
 29368  000D90  0E41               	movlw	65
 29369  000D92  5C1F               	subwf	__display_itoa_u32@value,w,c
 29370  000D94  0E42               	movlw	66
 29371  000D96  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29372  000D98  0E0F               	movlw	15
 29373  000D9A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29374  000D9C  A0D8               	btfss	status,0,c
 29375  000D9E  D04C               	goto	l1514
 29376  000DA0                     u7560:
 29377                           
 29378                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 29379  000DA0  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29380  000DA4  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29381  000DA8  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29382  000DAC  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29383  000DB0  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29384  000DB4  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29385  000DB8  0E10               	movlw	16
 29386  000DBA  6E05               	movwf	___lldiv@divisor,c
 29387  000DBC  0E27               	movlw	39
 29388  000DBE  6E06               	movwf	___lldiv@divisor+1,c
 29389  000DC0  0E00               	movlw	0
 29390  000DC2  6E07               	movwf	___lldiv@divisor+2,c
 29391  000DC4  0E00               	movlw	0
 29392  000DC6  6E08               	movwf	___lldiv@divisor+3,c
 29393  000DC8  EC1E  F037         	call	___lldiv	;wreg free
 29394  000DCC  C001  F013         	movff	?___lldiv,itoa@val
 29395  000DD0  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29396  000DD4  0E00               	movlw	0
 29397  000DD6  6E16               	movwf	itoa@base+1,c
 29398  000DD8  0E0A               	movlw	10
 29399  000DDA  6E15               	movwf	itoa@base,c
 29400  000DDC  EC1C  F040         	call	_itoa	;wreg free
 29401                           
 29402                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 29403  000DE0  0E03               	movlw	3
 29404  000DE2  2423               	addwf	__display_itoa_u32@text,w,c
 29405  000DE4  6E11               	movwf	itoa@buf,c
 29406  000DE6  0E00               	movlw	0
 29407  000DE8  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29408  000DEA  6E12               	movwf	itoa@buf+1,c
 29409  000DEC  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29410  000DF0  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29411  000DF4  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29412  000DF8  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29413  000DFC  0E10               	movlw	16
 29414  000DFE  6E05               	movwf	___llmod@divisor,c
 29415  000E00  0E27               	movlw	39
 29416  000E02  6E06               	movwf	___llmod@divisor+1,c
 29417  000E04  0E00               	movlw	0
 29418  000E06  6E07               	movwf	___llmod@divisor+2,c
 29419  000E08  0E00               	movlw	0
 29420  000E0A  6E08               	movwf	___llmod@divisor+3,c
 29421  000E0C  ECBD  F03A         	call	___llmod	;wreg free
 29422  000E10  C001  F013         	movff	?___llmod,itoa@val
 29423  000E14  C002  F014         	movff	?___llmod+1,itoa@val+1
 29424  000E18  0E00               	movlw	0
 29425  000E1A  6E16               	movwf	itoa@base+1,c
 29426  000E1C  0E0A               	movlw	10
 29427  000E1E  6E15               	movwf	itoa@base,c
 29428  000E20  EC1C  F040         	call	_itoa	;wreg free
 29429                           
 29430                           ;display.c: 199: *(text+7) = ' ';
 29431  000E24  EE20 F007          	lfsr	2,7
 29432  000E28  5023               	movf	__display_itoa_u32@text,w,c
 29433  000E2A  26D9               	addwf	fsr2l,f,c
 29434  000E2C  5024               	movf	__display_itoa_u32@text+1,w,c
 29435  000E2E  22DA               	addwfc	fsr2h,f,c
 29436  000E30  0E20               	movlw	32
 29437  000E32  6EDF               	movwf	indf2,c
 29438                           
 29439                           ;display.c: 200: return 7;
 29440  000E34  0E07               	movlw	7
 29441                           
 29442                           ;display.c: 201: }
 29443  000E36  0012               	return	
 29444  000E38                     l1514:
 29445                           
 29446                           ;display.c: 202: else if(value>100000)
 29447  000E38  5022               	movf	__display_itoa_u32@value+3,w,c
 29448  000E3A  E108               	bnz	u7570
 29449  000E3C  0EA1               	movlw	161
 29450  000E3E  5C1F               	subwf	__display_itoa_u32@value,w,c
 29451  000E40  0E86               	movlw	134
 29452  000E42  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29453  000E44  0E01               	movlw	1
 29454  000E46  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29455  000E48  A0D8               	btfss	status,0,c
 29456  000E4A  D04C               	goto	l1516
 29457  000E4C                     u7570:
 29458                           
 29459                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 29460  000E4C  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29461  000E50  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29462  000E54  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29463  000E58  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29464  000E5C  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29465  000E60  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29466  000E64  0E10               	movlw	16
 29467  000E66  6E05               	movwf	___lldiv@divisor,c
 29468  000E68  0E27               	movlw	39
 29469  000E6A  6E06               	movwf	___lldiv@divisor+1,c
 29470  000E6C  0E00               	movlw	0
 29471  000E6E  6E07               	movwf	___lldiv@divisor+2,c
 29472  000E70  0E00               	movlw	0
 29473  000E72  6E08               	movwf	___lldiv@divisor+3,c
 29474  000E74  EC1E  F037         	call	___lldiv	;wreg free
 29475  000E78  C001  F013         	movff	?___lldiv,itoa@val
 29476  000E7C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29477  000E80  0E00               	movlw	0
 29478  000E82  6E16               	movwf	itoa@base+1,c
 29479  000E84  0E0A               	movlw	10
 29480  000E86  6E15               	movwf	itoa@base,c
 29481  000E88  EC1C  F040         	call	_itoa	;wreg free
 29482                           
 29483                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 29484  000E8C  0E02               	movlw	2
 29485  000E8E  2423               	addwf	__display_itoa_u32@text,w,c
 29486  000E90  6E11               	movwf	itoa@buf,c
 29487  000E92  0E00               	movlw	0
 29488  000E94  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29489  000E96  6E12               	movwf	itoa@buf+1,c
 29490  000E98  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29491  000E9C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29492  000EA0  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29493  000EA4  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29494  000EA8  0E10               	movlw	16
 29495  000EAA  6E05               	movwf	___llmod@divisor,c
 29496  000EAC  0E27               	movlw	39
 29497  000EAE  6E06               	movwf	___llmod@divisor+1,c
 29498  000EB0  0E00               	movlw	0
 29499  000EB2  6E07               	movwf	___llmod@divisor+2,c
 29500  000EB4  0E00               	movlw	0
 29501  000EB6  6E08               	movwf	___llmod@divisor+3,c
 29502  000EB8  ECBD  F03A         	call	___llmod	;wreg free
 29503  000EBC  C001  F013         	movff	?___llmod,itoa@val
 29504  000EC0  C002  F014         	movff	?___llmod+1,itoa@val+1
 29505  000EC4  0E00               	movlw	0
 29506  000EC6  6E16               	movwf	itoa@base+1,c
 29507  000EC8  0E0A               	movlw	10
 29508  000ECA  6E15               	movwf	itoa@base,c
 29509  000ECC  EC1C  F040         	call	_itoa	;wreg free
 29510                           
 29511                           ;display.c: 206: *(text+6) = ' ';
 29512  000ED0  EE20 F006          	lfsr	2,6
 29513  000ED4  5023               	movf	__display_itoa_u32@text,w,c
 29514  000ED6  26D9               	addwf	fsr2l,f,c
 29515  000ED8  5024               	movf	__display_itoa_u32@text+1,w,c
 29516  000EDA  22DA               	addwfc	fsr2h,f,c
 29517  000EDC  0E20               	movlw	32
 29518  000EDE  6EDF               	movwf	indf2,c
 29519                           
 29520                           ;display.c: 207: return 6;
 29521  000EE0  0E06               	movlw	6
 29522                           
 29523                           ;display.c: 208: }
 29524  000EE2  0012               	return	
 29525  000EE4                     l1516:
 29526                           
 29527                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 29528  000EE4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29529  000EE8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29530  000EEC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29531  000EF0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29532  000EF4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29533  000EF8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29534  000EFC  0E10               	movlw	16
 29535  000EFE  6E05               	movwf	___lldiv@divisor,c
 29536  000F00  0E27               	movlw	39
 29537  000F02  6E06               	movwf	___lldiv@divisor+1,c
 29538  000F04  0E00               	movlw	0
 29539  000F06  6E07               	movwf	___lldiv@divisor+2,c
 29540  000F08  0E00               	movlw	0
 29541  000F0A  6E08               	movwf	___lldiv@divisor+3,c
 29542  000F0C  EC1E  F037         	call	___lldiv	;wreg free
 29543  000F10  C001  F013         	movff	?___lldiv,itoa@val
 29544  000F14  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29545  000F18  0E00               	movlw	0
 29546  000F1A  6E16               	movwf	itoa@base+1,c
 29547  000F1C  0E0A               	movlw	10
 29548  000F1E  6E15               	movwf	itoa@base,c
 29549  000F20  EC1C  F040         	call	_itoa	;wreg free
 29550                           
 29551                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 29552  000F24  0E01               	movlw	1
 29553  000F26  2423               	addwf	__display_itoa_u32@text,w,c
 29554  000F28  6E11               	movwf	itoa@buf,c
 29555  000F2A  0E00               	movlw	0
 29556  000F2C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29557  000F2E  6E12               	movwf	itoa@buf+1,c
 29558  000F30  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29559  000F34  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29560  000F38  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29561  000F3C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29562  000F40  0E10               	movlw	16
 29563  000F42  6E05               	movwf	___llmod@divisor,c
 29564  000F44  0E27               	movlw	39
 29565  000F46  6E06               	movwf	___llmod@divisor+1,c
 29566  000F48  0E00               	movlw	0
 29567  000F4A  6E07               	movwf	___llmod@divisor+2,c
 29568  000F4C  0E00               	movlw	0
 29569  000F4E  6E08               	movwf	___llmod@divisor+3,c
 29570  000F50  ECBD  F03A         	call	___llmod	;wreg free
 29571  000F54  C001  F013         	movff	?___llmod,itoa@val
 29572  000F58  C002  F014         	movff	?___llmod+1,itoa@val+1
 29573  000F5C  0E00               	movlw	0
 29574  000F5E  6E16               	movwf	itoa@base+1,c
 29575  000F60  0E0A               	movlw	10
 29576  000F62  6E15               	movwf	itoa@base,c
 29577  000F64  EC1C  F040         	call	_itoa	;wreg free
 29578                           
 29579                           ;display.c: 213: *(text+5) = ' ';
 29580  000F68  EE20 F005          	lfsr	2,5
 29581  000F6C  5023               	movf	__display_itoa_u32@text,w,c
 29582  000F6E  26D9               	addwf	fsr2l,f,c
 29583  000F70  5024               	movf	__display_itoa_u32@text+1,w,c
 29584  000F72  22DA               	addwfc	fsr2h,f,c
 29585  000F74  0E20               	movlw	32
 29586  000F76  6EDF               	movwf	indf2,c
 29587                           
 29588                           ;display.c: 214: return 5;
 29589  000F78  0E05               	movlw	5
 29590  000F7A  0012               	return	
 29591  000F7C                     __end_of__display_itoa_u32:
 29592                           	opt stack 0
 29593                           tosu	equ	0xFFF
 29594                           tosh	equ	0xFFE
 29595                           tosl	equ	0xFFD
 29596                           pclath	equ	0xFFA
 29597                           tblptru	equ	0xFF8
 29598                           tblptrh	equ	0xFF7
 29599                           tblptrl	equ	0xFF6
 29600                           tablat	equ	0xFF5
 29601                           prodh	equ	0xFF4
 29602                           prodl	equ	0xFF3
 29603                           intcon	equ	0xFF2
 29604                           intcon2	equ	0xFF1
 29605                           intcon3	equ	0xFF0
 29606                           indf0	equ	0xFEF
 29607                           postinc0	equ	0xFEE
 29608                           fsr0h	equ	0xFEA
 29609                           fsr0l	equ	0xFE9
 29610                           wreg	equ	0xFE8
 29611                           indf1	equ	0xFE7
 29612                           postdec1	equ	0xFE5
 29613                           plusw1	equ	0xFE3
 29614                           fsr1h	equ	0xFE2
 29615                           fsr1l	equ	0xFE1
 29616                           indf2	equ	0xFDF
 29617                           postinc2	equ	0xFDE
 29618                           postdec2	equ	0xFDD
 29619                           plusw2	equ	0xFDB
 29620                           fsr2h	equ	0xFDA
 29621                           fsr2l	equ	0xFD9
 29622                           status	equ	0xFD8
 29623                           
 29624 ;; *************** function ___llmod *****************
 29625 ;; Defined at:
 29626 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 29627 ;; Parameters:    Size  Location     Type
 29628 ;;  dividend        4    0[COMRAM] unsigned long 
 29629 ;;  divisor         4    4[COMRAM] unsigned long 
 29630 ;; Auto vars:     Size  Location     Type
 29631 ;;  counter         1    8[COMRAM] unsigned char 
 29632 ;; Return value:  Size  Location     Type
 29633 ;;                  4    0[COMRAM] unsigned long 
 29634 ;; Registers used:
 29635 ;;		wreg, status,2, status,0
 29636 ;; Tracked objects:
 29637 ;;		On entry : 0/0
 29638 ;;		On exit  : 0/0
 29639 ;;		Unchanged: 0/0
 29640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29641 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29644 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29645 ;;Total ram usage:        9 bytes
 29646 ;; Hardware stack levels used:    1
 29647 ;; This function calls:
 29648 ;;		Nothing
 29649 ;; This function is called by:
 29650 ;;		__display_itoa_u32
 29651 ;; This function uses a non-reentrant model
 29652 ;;
 29653                           
 29654                           	psect	text143
 29655  00757A                     __ptext143:
 29656                           	opt stack 0
 29657  00757A                     ___llmod:
 29658                           	opt stack 24
 29659                           
 29660                           ;incstack = 0
 29661  00757A  5005               	movf	___llmod@divisor,w,c
 29662  00757C  1006               	iorwf	___llmod@divisor+1,w,c
 29663  00757E  1007               	iorwf	___llmod@divisor+2,w,c
 29664  007580  1008               	iorwf	___llmod@divisor+3,w,c
 29665  007582  B4D8               	btfsc	status,2,c
 29666  007584  D024               	goto	l3328
 29667  007586  0E01               	movlw	1
 29668  007588  6E09               	movwf	___llmod@counter,c
 29669  00758A  D006               	goto	l3323
 29670  00758C  90D8               	bcf	status,0,c
 29671  00758E  3605               	rlcf	___llmod@divisor,f,c
 29672  007590  3606               	rlcf	___llmod@divisor+1,f,c
 29673  007592  3607               	rlcf	___llmod@divisor+2,f,c
 29674  007594  3608               	rlcf	___llmod@divisor+3,f,c
 29675  007596  2A09               	incf	___llmod@counter,f,c
 29676  007598                     l3323:
 29677  007598  AE08               	btfss	___llmod@divisor+3,7,c
 29678  00759A  D7F8               	goto	l3324
 29679  00759C                     u7160:
 29680  00759C  5005               	movf	___llmod@divisor,w,c
 29681  00759E  5C01               	subwf	___llmod@dividend,w,c
 29682  0075A0  5006               	movf	___llmod@divisor+1,w,c
 29683  0075A2  5802               	subwfb	___llmod@dividend+1,w,c
 29684  0075A4  5007               	movf	___llmod@divisor+2,w,c
 29685  0075A6  5803               	subwfb	___llmod@dividend+2,w,c
 29686  0075A8  5008               	movf	___llmod@divisor+3,w,c
 29687  0075AA  5804               	subwfb	___llmod@dividend+3,w,c
 29688  0075AC  A0D8               	btfss	status,0,c
 29689  0075AE  D008               	goto	l3327
 29690  0075B0  5005               	movf	___llmod@divisor,w,c
 29691  0075B2  5E01               	subwf	___llmod@dividend,f,c
 29692  0075B4  5006               	movf	___llmod@divisor+1,w,c
 29693  0075B6  5A02               	subwfb	___llmod@dividend+1,f,c
 29694  0075B8  5007               	movf	___llmod@divisor+2,w,c
 29695  0075BA  5A03               	subwfb	___llmod@dividend+2,f,c
 29696  0075BC  5008               	movf	___llmod@divisor+3,w,c
 29697  0075BE  5A04               	subwfb	___llmod@dividend+3,f,c
 29698  0075C0                     l3327:
 29699  0075C0  90D8               	bcf	status,0,c
 29700  0075C2  3208               	rrcf	___llmod@divisor+3,f,c
 29701  0075C4  3207               	rrcf	___llmod@divisor+2,f,c
 29702  0075C6  3206               	rrcf	___llmod@divisor+1,f,c
 29703  0075C8  3205               	rrcf	___llmod@divisor,f,c
 29704  0075CA  2E09               	decfsz	___llmod@counter,f,c
 29705  0075CC  D7E7               	goto	u7160
 29706  0075CE                     l3328:
 29707  0075CE  C001  F001         	movff	___llmod@dividend,?___llmod
 29708  0075D2  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 29709  0075D6  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 29710  0075DA  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 29711  0075DE  0012               	return		;funcret
 29712  0075E0                     __end_of___llmod:
 29713                           	opt stack 0
 29714                           tosu	equ	0xFFF
 29715                           tosh	equ	0xFFE
 29716                           tosl	equ	0xFFD
 29717                           pclath	equ	0xFFA
 29718                           tblptru	equ	0xFF8
 29719                           tblptrh	equ	0xFF7
 29720                           tblptrl	equ	0xFF6
 29721                           tablat	equ	0xFF5
 29722                           prodh	equ	0xFF4
 29723                           prodl	equ	0xFF3
 29724                           intcon	equ	0xFF2
 29725                           intcon2	equ	0xFF1
 29726                           intcon3	equ	0xFF0
 29727                           indf0	equ	0xFEF
 29728                           postinc0	equ	0xFEE
 29729                           fsr0h	equ	0xFEA
 29730                           fsr0l	equ	0xFE9
 29731                           wreg	equ	0xFE8
 29732                           indf1	equ	0xFE7
 29733                           postdec1	equ	0xFE5
 29734                           plusw1	equ	0xFE3
 29735                           fsr1h	equ	0xFE2
 29736                           fsr1l	equ	0xFE1
 29737                           indf2	equ	0xFDF
 29738                           postinc2	equ	0xFDE
 29739                           postdec2	equ	0xFDD
 29740                           plusw2	equ	0xFDB
 29741                           fsr2h	equ	0xFDA
 29742                           fsr2l	equ	0xFD9
 29743                           status	equ	0xFD8
 29744                           
 29745 ;; *************** function ___lldiv *****************
 29746 ;; Defined at:
 29747 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 29748 ;; Parameters:    Size  Location     Type
 29749 ;;  dividend        4    0[COMRAM] unsigned long 
 29750 ;;  divisor         4    4[COMRAM] unsigned long 
 29751 ;; Auto vars:     Size  Location     Type
 29752 ;;  quotient        4    8[COMRAM] unsigned long 
 29753 ;;  counter         1   12[COMRAM] unsigned char 
 29754 ;; Return value:  Size  Location     Type
 29755 ;;                  4    0[COMRAM] unsigned long 
 29756 ;; Registers used:
 29757 ;;		wreg, status,2, status,0
 29758 ;; Tracked objects:
 29759 ;;		On entry : 0/0
 29760 ;;		On exit  : 0/0
 29761 ;;		Unchanged: 0/0
 29762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29763 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29764 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29766 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29767 ;;Total ram usage:       13 bytes
 29768 ;; Hardware stack levels used:    1
 29769 ;; This function calls:
 29770 ;;		Nothing
 29771 ;; This function is called by:
 29772 ;;		__display_itoa_u32
 29773 ;; This function uses a non-reentrant model
 29774 ;;
 29775                           
 29776                           	psect	text144
 29777  006E3C                     __ptext144:
 29778                           	opt stack 0
 29779  006E3C                     ___lldiv:
 29780                           	opt stack 24
 29781                           
 29782                           ;incstack = 0
 29783  006E3C  0E00               	movlw	0
 29784  006E3E  6E09               	movwf	___lldiv@quotient,c
 29785  006E40  0E00               	movlw	0
 29786  006E42  6E0A               	movwf	___lldiv@quotient+1,c
 29787  006E44  0E00               	movlw	0
 29788  006E46  6E0B               	movwf	___lldiv@quotient+2,c
 29789  006E48  0E00               	movlw	0
 29790  006E4A  6E0C               	movwf	___lldiv@quotient+3,c
 29791  006E4C  5005               	movf	___lldiv@divisor,w,c
 29792  006E4E  1006               	iorwf	___lldiv@divisor+1,w,c
 29793  006E50  1007               	iorwf	___lldiv@divisor+2,w,c
 29794  006E52  1008               	iorwf	___lldiv@divisor+3,w,c
 29795  006E54  B4D8               	btfsc	status,2,c
 29796  006E56  D02A               	goto	l2947
 29797  006E58  0E01               	movlw	1
 29798  006E5A  6E0D               	movwf	___lldiv@counter,c
 29799  006E5C  D006               	goto	l2942
 29800  006E5E  90D8               	bcf	status,0,c
 29801  006E60  3605               	rlcf	___lldiv@divisor,f,c
 29802  006E62  3606               	rlcf	___lldiv@divisor+1,f,c
 29803  006E64  3607               	rlcf	___lldiv@divisor+2,f,c
 29804  006E66  3608               	rlcf	___lldiv@divisor+3,f,c
 29805  006E68  2A0D               	incf	___lldiv@counter,f,c
 29806  006E6A                     l2942:
 29807  006E6A  AE08               	btfss	___lldiv@divisor+3,7,c
 29808  006E6C  D7F8               	goto	l2943
 29809  006E6E                     u7130:
 29810  006E6E  90D8               	bcf	status,0,c
 29811  006E70  3609               	rlcf	___lldiv@quotient,f,c
 29812  006E72  360A               	rlcf	___lldiv@quotient+1,f,c
 29813  006E74  360B               	rlcf	___lldiv@quotient+2,f,c
 29814  006E76  360C               	rlcf	___lldiv@quotient+3,f,c
 29815  006E78  5005               	movf	___lldiv@divisor,w,c
 29816  006E7A  5C01               	subwf	___lldiv@dividend,w,c
 29817  006E7C  5006               	movf	___lldiv@divisor+1,w,c
 29818  006E7E  5802               	subwfb	___lldiv@dividend+1,w,c
 29819  006E80  5007               	movf	___lldiv@divisor+2,w,c
 29820  006E82  5803               	subwfb	___lldiv@dividend+2,w,c
 29821  006E84  5008               	movf	___lldiv@divisor+3,w,c
 29822  006E86  5804               	subwfb	___lldiv@dividend+3,w,c
 29823  006E88  A0D8               	btfss	status,0,c
 29824  006E8A  D009               	goto	l2946
 29825  006E8C  5005               	movf	___lldiv@divisor,w,c
 29826  006E8E  5E01               	subwf	___lldiv@dividend,f,c
 29827  006E90  5006               	movf	___lldiv@divisor+1,w,c
 29828  006E92  5A02               	subwfb	___lldiv@dividend+1,f,c
 29829  006E94  5007               	movf	___lldiv@divisor+2,w,c
 29830  006E96  5A03               	subwfb	___lldiv@dividend+2,f,c
 29831  006E98  5008               	movf	___lldiv@divisor+3,w,c
 29832  006E9A  5A04               	subwfb	___lldiv@dividend+3,f,c
 29833  006E9C  8009               	bsf	___lldiv@quotient,0,c
 29834  006E9E                     l2946:
 29835  006E9E  90D8               	bcf	status,0,c
 29836  006EA0  3208               	rrcf	___lldiv@divisor+3,f,c
 29837  006EA2  3207               	rrcf	___lldiv@divisor+2,f,c
 29838  006EA4  3206               	rrcf	___lldiv@divisor+1,f,c
 29839  006EA6  3205               	rrcf	___lldiv@divisor,f,c
 29840  006EA8  2E0D               	decfsz	___lldiv@counter,f,c
 29841  006EAA  D7E1               	goto	u7130
 29842  006EAC                     l2947:
 29843  006EAC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 29844  006EB0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 29845  006EB4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 29846  006EB8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 29847  006EBC  0012               	return		;funcret
 29848  006EBE                     __end_of___lldiv:
 29849                           	opt stack 0
 29850                           tosu	equ	0xFFF
 29851                           tosh	equ	0xFFE
 29852                           tosl	equ	0xFFD
 29853                           pclath	equ	0xFFA
 29854                           tblptru	equ	0xFF8
 29855                           tblptrh	equ	0xFF7
 29856                           tblptrl	equ	0xFF6
 29857                           tablat	equ	0xFF5
 29858                           prodh	equ	0xFF4
 29859                           prodl	equ	0xFF3
 29860                           intcon	equ	0xFF2
 29861                           intcon2	equ	0xFF1
 29862                           intcon3	equ	0xFF0
 29863                           indf0	equ	0xFEF
 29864                           postinc0	equ	0xFEE
 29865                           fsr0h	equ	0xFEA
 29866                           fsr0l	equ	0xFE9
 29867                           wreg	equ	0xFE8
 29868                           indf1	equ	0xFE7
 29869                           postdec1	equ	0xFE5
 29870                           plusw1	equ	0xFE3
 29871                           fsr1h	equ	0xFE2
 29872                           fsr1l	equ	0xFE1
 29873                           indf2	equ	0xFDF
 29874                           postinc2	equ	0xFDE
 29875                           postdec2	equ	0xFDD
 29876                           plusw2	equ	0xFDB
 29877                           fsr2h	equ	0xFDA
 29878                           fsr2l	equ	0xFD9
 29879                           status	equ	0xFD8
 29880                           
 29881 ;; *************** function __display_done *****************
 29882 ;; Defined at:
 29883 ;;		line 529 in file "display.c"
 29884 ;; Parameters:    Size  Location     Type
 29885 ;;		None
 29886 ;; Auto vars:     Size  Location     Type
 29887 ;;  cntr            1   30[COMRAM] unsigned char 
 29888 ;; Return value:  Size  Location     Type
 29889 ;;                  1    wreg      void 
 29890 ;; Registers used:
 29891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29892 ;; Tracked objects:
 29893 ;;		On entry : 0/0
 29894 ;;		On exit  : 0/0
 29895 ;;		Unchanged: 0/0
 29896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29901 ;;Total ram usage:        1 bytes
 29902 ;; Hardware stack levels used:    1
 29903 ;; Hardware stack levels required when called:    4
 29904 ;; This function calls:
 29905 ;;		__display_itoa_u16
 29906 ;;		_bootloader_get_flashPagesWritten
 29907 ;; This function is called by:
 29908 ;;		_display_prepare
 29909 ;; This function uses a non-reentrant model
 29910 ;;
 29911                           
 29912                           	psect	text145
 29913  003C44                     __ptext145:
 29914                           	opt stack 0
 29915  003C44                     __display_done:
 29916                           	opt stack 22
 29917                           
 29918                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 29919                           
 29920                           ;incstack = 0
 29921  003C44  0E00               	movlw	0
 29922  003C46  6E1F               	movwf	__display_done@cntr,c
 29923                           
 29924                           ;display.c: 533: while(done_line1[cntr])
 29925  003C48  D017               	goto	l1686
 29926  003C4A                     
 29927                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 29928  003C4A  501F               	movf	__display_done@cntr,w,c
 29929  003C4C  0D01               	mullw	1
 29930  003C4E  0E74               	movlw	low _done_line1
 29931  003C50  24F3               	addwf	prodl,w,c
 29932  003C52  6EF6               	movwf	tblptrl,c
 29933  003C54  0E8D               	movlw	high _done_line1
 29934  003C56  20F4               	addwfc	prodh,w,c
 29935  003C58  6EF7               	movwf	tblptrh,c
 29936  003C5A                     	if	1	;There are 3 active tblptr bytes
 29937  003C5A  6AF8               	clrf	tblptru,c
 29938  003C5C  0E00               	movlw	low (__mediumconst shr (0+16))
 29939  003C5E  22F8               	addwfc	tblptru,f,c
 29940  003C60                     	endif
 29941  003C60  501F               	movf	__display_done@cntr,w,c
 29942  003C62  0D01               	mullw	1
 29943  003C64  0E00               	movlw	low _display_content
 29944  003C66  24F3               	addwf	prodl,w,c
 29945  003C68  6ED9               	movwf	fsr2l,c
 29946  003C6A  0E02               	movlw	high _display_content
 29947  003C6C  20F4               	addwfc	prodh,w,c
 29948  003C6E  6EDA               	movwf	fsr2h,c
 29949  003C70  0008               	tblrd		*
 29950  003C72  CFF5 FFDF          	movff	tablat,indf2
 29951  003C76  2A1F               	incf	__display_done@cntr,f,c
 29952  003C78                     l1686:
 29953  003C78  501F               	movf	__display_done@cntr,w,c
 29954  003C7A  0D01               	mullw	1
 29955  003C7C  0E74               	movlw	low _done_line1
 29956  003C7E  24F3               	addwf	prodl,w,c
 29957  003C80  6EF6               	movwf	tblptrl,c
 29958  003C82  0E8D               	movlw	high _done_line1
 29959  003C84  20F4               	addwfc	prodh,w,c
 29960  003C86  6EF7               	movwf	tblptrh,c
 29961  003C88                     	if	1	;There are 3 active tblptr bytes
 29962  003C88  6AF8               	clrf	tblptru,c
 29963  003C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 29964  003C8C  22F8               	addwfc	tblptru,f,c
 29965  003C8E                     	endif
 29966  003C8E  0008               	tblrd		*
 29967  003C90  50F5               	movf	tablat,w,c
 29968  003C92  0900               	iorlw	0
 29969  003C94  A4D8               	btfss	status,2,c
 29970  003C96  D7D9               	goto	l1687
 29971                           
 29972                           ;display.c: 535: cntr = 0;
 29973  003C98  0E00               	movlw	0
 29974  003C9A  6E1F               	movwf	__display_done@cntr,c
 29975                           
 29976                           ;display.c: 536: while(done_line2[cntr])
 29977  003C9C  D017               	goto	l1689
 29978  003C9E                     
 29979                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 29980  003C9E  501F               	movf	__display_done@cntr,w,c
 29981  003CA0  0D01               	mullw	1
 29982  003CA2  0E9F               	movlw	low _done_line2
 29983  003CA4  24F3               	addwf	prodl,w,c
 29984  003CA6  6EF6               	movwf	tblptrl,c
 29985  003CA8  0E8E               	movlw	high _done_line2
 29986  003CAA  20F4               	addwfc	prodh,w,c
 29987  003CAC  6EF7               	movwf	tblptrh,c
 29988  003CAE                     	if	1	;There are 3 active tblptr bytes
 29989  003CAE  6AF8               	clrf	tblptru,c
 29990  003CB0  0E00               	movlw	low (__mediumconst shr (0+16))
 29991  003CB2  22F8               	addwfc	tblptru,f,c
 29992  003CB4                     	endif
 29993  003CB4  501F               	movf	__display_done@cntr,w,c
 29994  003CB6  0D01               	mullw	1
 29995  003CB8  0E14               	movlw	low (_display_content+20)
 29996  003CBA  24F3               	addwf	prodl,w,c
 29997  003CBC  6ED9               	movwf	fsr2l,c
 29998  003CBE  0E02               	movlw	high (_display_content+20)
 29999  003CC0  20F4               	addwfc	prodh,w,c
 30000  003CC2  6EDA               	movwf	fsr2h,c
 30001  003CC4  0008               	tblrd		*
 30002  003CC6  CFF5 FFDF          	movff	tablat,indf2
 30003  003CCA  2A1F               	incf	__display_done@cntr,f,c
 30004  003CCC                     l1689:
 30005  003CCC  501F               	movf	__display_done@cntr,w,c
 30006  003CCE  0D01               	mullw	1
 30007  003CD0  0E9F               	movlw	low _done_line2
 30008  003CD2  24F3               	addwf	prodl,w,c
 30009  003CD4  6EF6               	movwf	tblptrl,c
 30010  003CD6  0E8E               	movlw	high _done_line2
 30011  003CD8  20F4               	addwfc	prodh,w,c
 30012  003CDA  6EF7               	movwf	tblptrh,c
 30013  003CDC                     	if	1	;There are 3 active tblptr bytes
 30014  003CDC  6AF8               	clrf	tblptru,c
 30015  003CDE  0E00               	movlw	low (__mediumconst shr (0+16))
 30016  003CE0  22F8               	addwfc	tblptru,f,c
 30017  003CE2                     	endif
 30018  003CE2  0008               	tblrd		*
 30019  003CE4  50F5               	movf	tablat,w,c
 30020  003CE6  0900               	iorlw	0
 30021  003CE8  A4D8               	btfss	status,2,c
 30022  003CEA  D7D9               	goto	l1690
 30023                           
 30024                           ;display.c: 538: cntr = 0;
 30025  003CEC  0E00               	movlw	0
 30026  003CEE  6E1F               	movwf	__display_done@cntr,c
 30027                           
 30028                           ;display.c: 539: while(done_line3[cntr])
 30029  003CF0  D017               	goto	l1692
 30030  003CF2                     
 30031                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 30032  003CF2  501F               	movf	__display_done@cntr,w,c
 30033  003CF4  0D01               	mullw	1
 30034  003CF6  0E64               	movlw	low _done_line3
 30035  003CF8  24F3               	addwf	prodl,w,c
 30036  003CFA  6EF6               	movwf	tblptrl,c
 30037  003CFC  0E8D               	movlw	high _done_line3
 30038  003CFE  20F4               	addwfc	prodh,w,c
 30039  003D00  6EF7               	movwf	tblptrh,c
 30040  003D02                     	if	1	;There are 3 active tblptr bytes
 30041  003D02  6AF8               	clrf	tblptru,c
 30042  003D04  0E00               	movlw	low (__mediumconst shr (0+16))
 30043  003D06  22F8               	addwfc	tblptru,f,c
 30044  003D08                     	endif
 30045  003D08  501F               	movf	__display_done@cntr,w,c
 30046  003D0A  0D01               	mullw	1
 30047  003D0C  0E28               	movlw	low (_display_content+40)
 30048  003D0E  24F3               	addwf	prodl,w,c
 30049  003D10  6ED9               	movwf	fsr2l,c
 30050  003D12  0E02               	movlw	high (_display_content+40)
 30051  003D14  20F4               	addwfc	prodh,w,c
 30052  003D16  6EDA               	movwf	fsr2h,c
 30053  003D18  0008               	tblrd		*
 30054  003D1A  CFF5 FFDF          	movff	tablat,indf2
 30055  003D1E  2A1F               	incf	__display_done@cntr,f,c
 30056  003D20                     l1692:
 30057  003D20  501F               	movf	__display_done@cntr,w,c
 30058  003D22  0D01               	mullw	1
 30059  003D24  0E64               	movlw	low _done_line3
 30060  003D26  24F3               	addwf	prodl,w,c
 30061  003D28  6EF6               	movwf	tblptrl,c
 30062  003D2A  0E8D               	movlw	high _done_line3
 30063  003D2C  20F4               	addwfc	prodh,w,c
 30064  003D2E  6EF7               	movwf	tblptrh,c
 30065  003D30                     	if	1	;There are 3 active tblptr bytes
 30066  003D30  6AF8               	clrf	tblptru,c
 30067  003D32  0E00               	movlw	low (__mediumconst shr (0+16))
 30068  003D34  22F8               	addwfc	tblptru,f,c
 30069  003D36                     	endif
 30070  003D36  0008               	tblrd		*
 30071  003D38  50F5               	movf	tablat,w,c
 30072  003D3A  0900               	iorlw	0
 30073  003D3C  A4D8               	btfss	status,2,c
 30074  003D3E  D7D9               	goto	l1693
 30075                           
 30076                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30077  003D40  ECB1  F044         	call	_bootloader_get_flashPagesWritten	;wreg free
 30078  003D44  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30079  003D48  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30080  003D4C  6A1B               	clrf	__display_itoa_u16@value+2,c
 30081  003D4E  6A1C               	clrf	__display_itoa_u16@value+3,c
 30082  003D50  501F               	movf	__display_done@cntr,w,c
 30083  003D52  0D01               	mullw	1
 30084  003D54  0E28               	movlw	low (_display_content+40)
 30085  003D56  24F3               	addwf	prodl,w,c
 30086  003D58  6E1D               	movwf	__display_itoa_u16@text,c
 30087  003D5A  0E02               	movlw	high (_display_content+40)
 30088  003D5C  20F4               	addwfc	prodh,w,c
 30089  003D5E  6E1E               	movwf	__display_itoa_u16@text+1,c
 30090  003D60  EC50  F02E         	call	__display_itoa_u16	;wreg free
 30091                           
 30092                           ;display.c: 542: cntr = 0;
 30093  003D64  0E00               	movlw	0
 30094  003D66  6E1F               	movwf	__display_done@cntr,c
 30095                           
 30096                           ;display.c: 543: while(done_line4[cntr])
 30097  003D68  D017               	goto	l1695
 30098  003D6A                     
 30099                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 30100  003D6A  501F               	movf	__display_done@cntr,w,c
 30101  003D6C  0D01               	mullw	1
 30102  003D6E  0E54               	movlw	low _done_line4
 30103  003D70  24F3               	addwf	prodl,w,c
 30104  003D72  6EF6               	movwf	tblptrl,c
 30105  003D74  0E8D               	movlw	high _done_line4
 30106  003D76  20F4               	addwfc	prodh,w,c
 30107  003D78  6EF7               	movwf	tblptrh,c
 30108  003D7A                     	if	1	;There are 3 active tblptr bytes
 30109  003D7A  6AF8               	clrf	tblptru,c
 30110  003D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 30111  003D7E  22F8               	addwfc	tblptru,f,c
 30112  003D80                     	endif
 30113  003D80  501F               	movf	__display_done@cntr,w,c
 30114  003D82  0D01               	mullw	1
 30115  003D84  0E3C               	movlw	low (_display_content+60)
 30116  003D86  24F3               	addwf	prodl,w,c
 30117  003D88  6ED9               	movwf	fsr2l,c
 30118  003D8A  0E02               	movlw	high (_display_content+60)
 30119  003D8C  20F4               	addwfc	prodh,w,c
 30120  003D8E  6EDA               	movwf	fsr2h,c
 30121  003D90  0008               	tblrd		*
 30122  003D92  CFF5 FFDF          	movff	tablat,indf2
 30123  003D96  2A1F               	incf	__display_done@cntr,f,c
 30124  003D98                     l1695:
 30125  003D98  501F               	movf	__display_done@cntr,w,c
 30126  003D9A  0D01               	mullw	1
 30127  003D9C  0E54               	movlw	low _done_line4
 30128  003D9E  24F3               	addwf	prodl,w,c
 30129  003DA0  6EF6               	movwf	tblptrl,c
 30130  003DA2  0E8D               	movlw	high _done_line4
 30131  003DA4  20F4               	addwfc	prodh,w,c
 30132  003DA6  6EF7               	movwf	tblptrh,c
 30133  003DA8                     	if	1	;There are 3 active tblptr bytes
 30134  003DA8  6AF8               	clrf	tblptru,c
 30135  003DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 30136  003DAC  22F8               	addwfc	tblptru,f,c
 30137  003DAE                     	endif
 30138  003DAE  0008               	tblrd		*
 30139  003DB0  50F5               	movf	tablat,w,c
 30140  003DB2  0900               	iorlw	0
 30141  003DB4  B4D8               	btfsc	status,2,c
 30142  003DB6  0012               	return	
 30143  003DB8  D7D8               	goto	l1696
 30144  003DBA                     __end_of__display_done:
 30145                           	opt stack 0
 30146                           tosu	equ	0xFFF
 30147                           tosh	equ	0xFFE
 30148                           tosl	equ	0xFFD
 30149                           pclath	equ	0xFFA
 30150                           tblptru	equ	0xFF8
 30151                           tblptrh	equ	0xFF7
 30152                           tblptrl	equ	0xFF6
 30153                           tablat	equ	0xFF5
 30154                           prodh	equ	0xFF4
 30155                           prodl	equ	0xFF3
 30156                           intcon	equ	0xFF2
 30157                           intcon2	equ	0xFF1
 30158                           intcon3	equ	0xFF0
 30159                           indf0	equ	0xFEF
 30160                           postinc0	equ	0xFEE
 30161                           fsr0h	equ	0xFEA
 30162                           fsr0l	equ	0xFE9
 30163                           wreg	equ	0xFE8
 30164                           indf1	equ	0xFE7
 30165                           postdec1	equ	0xFE5
 30166                           plusw1	equ	0xFE3
 30167                           fsr1h	equ	0xFE2
 30168                           fsr1l	equ	0xFE1
 30169                           indf2	equ	0xFDF
 30170                           postinc2	equ	0xFDE
 30171                           postdec2	equ	0xFDD
 30172                           plusw2	equ	0xFDB
 30173                           fsr2h	equ	0xFDA
 30174                           fsr2l	equ	0xFD9
 30175                           status	equ	0xFD8
 30176                           
 30177 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30178 ;; Defined at:
 30179 ;;		line 511 in file "bootloader.c"
 30180 ;; Parameters:    Size  Location     Type
 30181 ;;		None
 30182 ;; Auto vars:     Size  Location     Type
 30183 ;;		None
 30184 ;; Return value:  Size  Location     Type
 30185 ;;                  2    0[COMRAM] unsigned int 
 30186 ;; Registers used:
 30187 ;;		None
 30188 ;; Tracked objects:
 30189 ;;		On entry : 0/0
 30190 ;;		On exit  : 0/0
 30191 ;;		Unchanged: 0/0
 30192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30197 ;;Total ram usage:        2 bytes
 30198 ;; Hardware stack levels used:    1
 30199 ;; This function calls:
 30200 ;;		Nothing
 30201 ;; This function is called by:
 30202 ;;		__display_programming
 30203 ;;		__display_done
 30204 ;;		__fill_buffer_get_bootloader_details
 30205 ;; This function uses a non-reentrant model
 30206 ;;
 30207                           
 30208                           	psect	text146
 30209  008962                     __ptext146:
 30210                           	opt stack 0
 30211  008962                     _bootloader_get_flashPagesWritten:
 30212                           	opt stack 25
 30213                           
 30214                           ;bootloader.c: 513: return flash_pages_written;
 30215                           
 30216                           ;incstack = 0
 30217  008962  C170  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30218  008966  C171  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30219  00896A  0012               	return		;funcret
 30220  00896C                     __end_of_bootloader_get_flashPagesWritten:
 30221                           	opt stack 0
 30222                           tosu	equ	0xFFF
 30223                           tosh	equ	0xFFE
 30224                           tosl	equ	0xFFD
 30225                           pclath	equ	0xFFA
 30226                           tblptru	equ	0xFF8
 30227                           tblptrh	equ	0xFF7
 30228                           tblptrl	equ	0xFF6
 30229                           tablat	equ	0xFF5
 30230                           prodh	equ	0xFF4
 30231                           prodl	equ	0xFF3
 30232                           intcon	equ	0xFF2
 30233                           intcon2	equ	0xFF1
 30234                           intcon3	equ	0xFF0
 30235                           indf0	equ	0xFEF
 30236                           postinc0	equ	0xFEE
 30237                           fsr0h	equ	0xFEA
 30238                           fsr0l	equ	0xFE9
 30239                           wreg	equ	0xFE8
 30240                           indf1	equ	0xFE7
 30241                           postdec1	equ	0xFE5
 30242                           plusw1	equ	0xFE3
 30243                           fsr1h	equ	0xFE2
 30244                           fsr1l	equ	0xFE1
 30245                           indf2	equ	0xFDF
 30246                           postinc2	equ	0xFDE
 30247                           postdec2	equ	0xFDD
 30248                           plusw2	equ	0xFDB
 30249                           fsr2h	equ	0xFDA
 30250                           fsr2l	equ	0xFD9
 30251                           status	equ	0xFD8
 30252                           
 30253 ;; *************** function __display_clear *****************
 30254 ;; Defined at:
 30255 ;;		line 75 in file "display.c"
 30256 ;; Parameters:    Size  Location     Type
 30257 ;;		None
 30258 ;; Auto vars:     Size  Location     Type
 30259 ;;  col             1    3[COMRAM] unsigned char 
 30260 ;;  row             1    2[COMRAM] unsigned char 
 30261 ;; Return value:  Size  Location     Type
 30262 ;;                  1    wreg      void 
 30263 ;; Registers used:
 30264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30265 ;; Tracked objects:
 30266 ;;		On entry : 0/0
 30267 ;;		On exit  : 0/0
 30268 ;;		Unchanged: 0/0
 30269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30274 ;;Total ram usage:        4 bytes
 30275 ;; Hardware stack levels used:    1
 30276 ;; This function calls:
 30277 ;;		Nothing
 30278 ;; This function is called by:
 30279 ;;		_display_prepare
 30280 ;; This function uses a non-reentrant model
 30281 ;;
 30282                           
 30283                           	psect	text147
 30284  007E96                     __ptext147:
 30285                           	opt stack 0
 30286  007E96                     __display_clear:
 30287                           	opt stack 26
 30288                           
 30289                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 30290                           
 30291                           ;incstack = 0
 30292  007E96  0E00               	movlw	0
 30293  007E98  6E03               	movwf	__display_clear@row,c
 30294  007E9A                     l11194:
 30295  007E9A  0E03               	movlw	3
 30296  007E9C  6403               	cpfsgt	__display_clear@row,c
 30297  007E9E  D001               	goto	l1464
 30298  007EA0  0012               	return	
 30299  007EA2                     l1464:
 30300                           
 30301                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 30302  007EA2  0E00               	movlw	0
 30303  007EA4  6E04               	movwf	__display_clear@col,c
 30304  007EA6                     l11200:
 30305  007EA6  0E13               	movlw	19
 30306  007EA8  6404               	cpfsgt	__display_clear@col,c
 30307  007EAA  D001               	goto	l1466
 30308  007EAC  D016               	goto	u8160
 30309  007EAE                     l1466:
 30310                           
 30311                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 30312  007EAE  5003               	movf	__display_clear@row,w,c
 30313  007EB0  0D14               	mullw	20
 30314  007EB2  0E00               	movlw	low _display_content
 30315  007EB4  6E01               	movwf	??__display_clear& (0+255),c
 30316  007EB6  0E02               	movlw	high _display_content
 30317  007EB8  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30318  007EBA  50F3               	movf	prodl,w,c
 30319  007EBC  2601               	addwf	??__display_clear,f,c
 30320  007EBE  50F4               	movf	prodh,w,c
 30321  007EC0  2202               	addwfc	??__display_clear+1,f,c
 30322  007EC2  5004               	movf	__display_clear@col,w,c
 30323  007EC4  0D01               	mullw	1
 30324  007EC6  50F3               	movf	prodl,w,c
 30325  007EC8  2401               	addwf	??__display_clear,w,c
 30326  007ECA  6ED9               	movwf	fsr2l,c
 30327  007ECC  50F4               	movf	prodh,w,c
 30328  007ECE  2002               	addwfc	??__display_clear+1,w,c
 30329  007ED0  6EDA               	movwf	fsr2h,c
 30330  007ED2  0E20               	movlw	32
 30331  007ED4  6EDF               	movwf	indf2,c
 30332  007ED6  2A04               	incf	__display_clear@col,f,c
 30333  007ED8  D7E6               	goto	l11200
 30334  007EDA                     u8160:
 30335  007EDA  2A03               	incf	__display_clear@row,f,c
 30336  007EDC  D7DE               	goto	l11194
 30337  007EDE                     __end_of__display_clear:
 30338                           	opt stack 0
 30339                           tosu	equ	0xFFF
 30340                           tosh	equ	0xFFE
 30341                           tosl	equ	0xFFD
 30342                           pclath	equ	0xFFA
 30343                           tblptru	equ	0xFF8
 30344                           tblptrh	equ	0xFF7
 30345                           tblptrl	equ	0xFF6
 30346                           tablat	equ	0xFF5
 30347                           prodh	equ	0xFF4
 30348                           prodl	equ	0xFF3
 30349                           intcon	equ	0xFF2
 30350                           intcon2	equ	0xFF1
 30351                           intcon3	equ	0xFF0
 30352                           indf0	equ	0xFEF
 30353                           postinc0	equ	0xFEE
 30354                           fsr0h	equ	0xFEA
 30355                           fsr0l	equ	0xFE9
 30356                           wreg	equ	0xFE8
 30357                           indf1	equ	0xFE7
 30358                           postdec1	equ	0xFE5
 30359                           plusw1	equ	0xFE3
 30360                           fsr1h	equ	0xFE2
 30361                           fsr1l	equ	0xFE1
 30362                           indf2	equ	0xFDF
 30363                           postinc2	equ	0xFDE
 30364                           postdec2	equ	0xFDD
 30365                           plusw2	equ	0xFDB
 30366                           fsr2h	equ	0xFDA
 30367                           fsr2l	equ	0xFD9
 30368                           status	equ	0xFD8
 30369                           
 30370 ;; *************** function __display_checked *****************
 30371 ;; Defined at:
 30372 ;;		line 433 in file "display.c"
 30373 ;; Parameters:    Size  Location     Type
 30374 ;;		None
 30375 ;; Auto vars:     Size  Location     Type
 30376 ;;  cntr            1   33[COMRAM] unsigned char 
 30377 ;;  start           1   32[COMRAM] unsigned char 
 30378 ;; Return value:  Size  Location     Type
 30379 ;;                  1    wreg      void 
 30380 ;; Registers used:
 30381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30382 ;; Tracked objects:
 30383 ;;		On entry : 0/0
 30384 ;;		On exit  : 0/0
 30385 ;;		Unchanged: 0/0
 30386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30391 ;;Total ram usage:        4 bytes
 30392 ;; Hardware stack levels used:    1
 30393 ;; Hardware stack levels required when called:    4
 30394 ;; This function calls:
 30395 ;;		__display_itoa_u16
 30396 ;;		_bootloader_get_total_entries
 30397 ;; This function is called by:
 30398 ;;		_display_prepare
 30399 ;; This function uses a non-reentrant model
 30400 ;;
 30401                           
 30402                           	psect	text148
 30403  003AC8                     __ptext148:
 30404                           	opt stack 0
 30405  003AC8                     __display_checked:
 30406                           	opt stack 22
 30407                           
 30408                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 30409                           
 30410                           ;incstack = 0
 30411  003AC8  0E00               	movlw	0
 30412  003ACA  6E22               	movwf	__display_checked@cntr,c
 30413                           
 30414                           ;display.c: 438: while(checked_line1[cntr])
 30415  003ACC  D017               	goto	l1622
 30416  003ACE                     
 30417                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 30418  003ACE  5022               	movf	__display_checked@cntr,w,c
 30419  003AD0  0D01               	mullw	1
 30420  003AD2  0EB4               	movlw	low _checked_line1
 30421  003AD4  24F3               	addwf	prodl,w,c
 30422  003AD6  6EF6               	movwf	tblptrl,c
 30423  003AD8  0E8D               	movlw	high _checked_line1
 30424  003ADA  20F4               	addwfc	prodh,w,c
 30425  003ADC  6EF7               	movwf	tblptrh,c
 30426  003ADE                     	if	1	;There are 3 active tblptr bytes
 30427  003ADE  6AF8               	clrf	tblptru,c
 30428  003AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 30429  003AE2  22F8               	addwfc	tblptru,f,c
 30430  003AE4                     	endif
 30431  003AE4  5022               	movf	__display_checked@cntr,w,c
 30432  003AE6  0D01               	mullw	1
 30433  003AE8  0E00               	movlw	low _display_content
 30434  003AEA  24F3               	addwf	prodl,w,c
 30435  003AEC  6ED9               	movwf	fsr2l,c
 30436  003AEE  0E02               	movlw	high _display_content
 30437  003AF0  20F4               	addwfc	prodh,w,c
 30438  003AF2  6EDA               	movwf	fsr2h,c
 30439  003AF4  0008               	tblrd		*
 30440  003AF6  CFF5 FFDF          	movff	tablat,indf2
 30441  003AFA  2A22               	incf	__display_checked@cntr,f,c
 30442  003AFC                     l1622:
 30443  003AFC  5022               	movf	__display_checked@cntr,w,c
 30444  003AFE  0D01               	mullw	1
 30445  003B00  0EB4               	movlw	low _checked_line1
 30446  003B02  24F3               	addwf	prodl,w,c
 30447  003B04  6EF6               	movwf	tblptrl,c
 30448  003B06  0E8D               	movlw	high _checked_line1
 30449  003B08  20F4               	addwfc	prodh,w,c
 30450  003B0A  6EF7               	movwf	tblptrh,c
 30451  003B0C                     	if	1	;There are 3 active tblptr bytes
 30452  003B0C  6AF8               	clrf	tblptru,c
 30453  003B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 30454  003B10  22F8               	addwfc	tblptru,f,c
 30455  003B12                     	endif
 30456  003B12  0008               	tblrd		*
 30457  003B14  50F5               	movf	tablat,w,c
 30458  003B16  0900               	iorlw	0
 30459  003B18  A4D8               	btfss	status,2,c
 30460  003B1A  D7D9               	goto	l1623
 30461                           
 30462                           ;display.c: 440: cntr = 0;
 30463  003B1C  0E00               	movlw	0
 30464  003B1E  6E22               	movwf	__display_checked@cntr,c
 30465                           
 30466                           ;display.c: 441: while(checked_line2[cntr])
 30467  003B20  D017               	goto	l1625
 30468  003B22                     
 30469                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 30470  003B22  5022               	movf	__display_checked@cntr,w,c
 30471  003B24  0D01               	mullw	1
 30472  003B26  0E99               	movlw	low _checked_line2
 30473  003B28  24F3               	addwf	prodl,w,c
 30474  003B2A  6EF6               	movwf	tblptrl,c
 30475  003B2C  0E8C               	movlw	high _checked_line2
 30476  003B2E  20F4               	addwfc	prodh,w,c
 30477  003B30  6EF7               	movwf	tblptrh,c
 30478  003B32                     	if	1	;There are 3 active tblptr bytes
 30479  003B32  6AF8               	clrf	tblptru,c
 30480  003B34  0E00               	movlw	low (__mediumconst shr (0+16))
 30481  003B36  22F8               	addwfc	tblptru,f,c
 30482  003B38                     	endif
 30483  003B38  5022               	movf	__display_checked@cntr,w,c
 30484  003B3A  0D01               	mullw	1
 30485  003B3C  0E14               	movlw	low (_display_content+20)
 30486  003B3E  24F3               	addwf	prodl,w,c
 30487  003B40  6ED9               	movwf	fsr2l,c
 30488  003B42  0E02               	movlw	high (_display_content+20)
 30489  003B44  20F4               	addwfc	prodh,w,c
 30490  003B46  6EDA               	movwf	fsr2h,c
 30491  003B48  0008               	tblrd		*
 30492  003B4A  CFF5 FFDF          	movff	tablat,indf2
 30493  003B4E  2A22               	incf	__display_checked@cntr,f,c
 30494  003B50                     l1625:
 30495  003B50  5022               	movf	__display_checked@cntr,w,c
 30496  003B52  0D01               	mullw	1
 30497  003B54  0E99               	movlw	low _checked_line2
 30498  003B56  24F3               	addwf	prodl,w,c
 30499  003B58  6EF6               	movwf	tblptrl,c
 30500  003B5A  0E8C               	movlw	high _checked_line2
 30501  003B5C  20F4               	addwfc	prodh,w,c
 30502  003B5E  6EF7               	movwf	tblptrh,c
 30503  003B60                     	if	1	;There are 3 active tblptr bytes
 30504  003B60  6AF8               	clrf	tblptru,c
 30505  003B62  0E00               	movlw	low (__mediumconst shr (0+16))
 30506  003B64  22F8               	addwfc	tblptru,f,c
 30507  003B66                     	endif
 30508  003B66  0008               	tblrd		*
 30509  003B68  50F5               	movf	tablat,w,c
 30510  003B6A  0900               	iorlw	0
 30511  003B6C  A4D8               	btfss	status,2,c
 30512  003B6E  D7D9               	goto	l1626
 30513                           
 30514                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30515  003B70  ECB6  F044         	call	_bootloader_get_total_entries	;wreg free
 30516  003B74  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30517  003B78  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30518  003B7C  6A1B               	clrf	__display_itoa_u16@value+2,c
 30519  003B7E  6A1C               	clrf	__display_itoa_u16@value+3,c
 30520  003B80  0E28               	movlw	low (_display_content+40)
 30521  003B82  6E1D               	movwf	__display_itoa_u16@text,c
 30522  003B84  0E02               	movlw	high (_display_content+40)
 30523  003B86  6E1E               	movwf	__display_itoa_u16@text+1,c
 30524  003B88  EC50  F02E         	call	__display_itoa_u16	;wreg free
 30525  003B8C  6E21               	movwf	__display_checked@start,c
 30526                           
 30527                           ;display.c: 445: start++;
 30528  003B8E  2A21               	incf	__display_checked@start,f,c
 30529                           
 30530                           ;display.c: 446: cntr = 0;
 30531  003B90  0E00               	movlw	0
 30532  003B92  6E22               	movwf	__display_checked@cntr,c
 30533                           
 30534                           ;display.c: 447: while(checked_line3[cntr])
 30535  003B94  D01C               	goto	l1628
 30536  003B96                     
 30537                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 30538  003B96  5022               	movf	__display_checked@cntr,w,c
 30539  003B98  0D01               	mullw	1
 30540  003B9A  0E73               	movlw	low _checked_line3
 30541  003B9C  24F3               	addwf	prodl,w,c
 30542  003B9E  6EF6               	movwf	tblptrl,c
 30543  003BA0  0E8E               	movlw	high _checked_line3
 30544  003BA2  20F4               	addwfc	prodh,w,c
 30545  003BA4  6EF7               	movwf	tblptrh,c
 30546  003BA6                     	if	1	;There are 3 active tblptr bytes
 30547  003BA6  6AF8               	clrf	tblptru,c
 30548  003BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 30549  003BAA  22F8               	addwfc	tblptru,f,c
 30550  003BAC                     	endif
 30551  003BAC  5022               	movf	__display_checked@cntr,w,c
 30552  003BAE  C021  F01F         	movff	__display_checked@start,??__display_checked
 30553  003BB2  6A20               	clrf	(??__display_checked+1)& (0+255),c
 30554  003BB4  261F               	addwf	??__display_checked,f,c
 30555  003BB6  0E00               	movlw	0
 30556  003BB8  2220               	addwfc	??__display_checked+1,f,c
 30557  003BBA  0E28               	movlw	low (_display_content+40)
 30558  003BBC  241F               	addwf	??__display_checked,w,c
 30559  003BBE  6ED9               	movwf	fsr2l,c
 30560  003BC0  0E02               	movlw	high (_display_content+40)
 30561  003BC2  2020               	addwfc	??__display_checked+1,w,c
 30562  003BC4  6EDA               	movwf	fsr2h,c
 30563  003BC6  0008               	tblrd		*
 30564  003BC8  CFF5 FFDF          	movff	tablat,indf2
 30565  003BCC  2A22               	incf	__display_checked@cntr,f,c
 30566  003BCE                     l1628:
 30567  003BCE  5022               	movf	__display_checked@cntr,w,c
 30568  003BD0  0D01               	mullw	1
 30569  003BD2  0E73               	movlw	low _checked_line3
 30570  003BD4  24F3               	addwf	prodl,w,c
 30571  003BD6  6EF6               	movwf	tblptrl,c
 30572  003BD8  0E8E               	movlw	high _checked_line3
 30573  003BDA  20F4               	addwfc	prodh,w,c
 30574  003BDC  6EF7               	movwf	tblptrh,c
 30575  003BDE                     	if	1	;There are 3 active tblptr bytes
 30576  003BDE  6AF8               	clrf	tblptru,c
 30577  003BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 30578  003BE2  22F8               	addwfc	tblptru,f,c
 30579  003BE4                     	endif
 30580  003BE4  0008               	tblrd		*
 30581  003BE6  50F5               	movf	tablat,w,c
 30582  003BE8  0900               	iorlw	0
 30583  003BEA  A4D8               	btfss	status,2,c
 30584  003BEC  D7D4               	goto	l1629
 30585                           
 30586                           ;display.c: 450: cntr = 0;
 30587  003BEE  0E00               	movlw	0
 30588  003BF0  6E22               	movwf	__display_checked@cntr,c
 30589                           
 30590                           ;display.c: 451: while(checked_line4[cntr])
 30591  003BF2  D017               	goto	l1631
 30592  003BF4                     
 30593                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 30594  003BF4  5022               	movf	__display_checked@cntr,w,c
 30595  003BF6  0D01               	mullw	1
 30596  003BF8  0E32               	movlw	low _checked_line4
 30597  003BFA  24F3               	addwf	prodl,w,c
 30598  003BFC  6EF6               	movwf	tblptrl,c
 30599  003BFE  0E8D               	movlw	high _checked_line4
 30600  003C00  20F4               	addwfc	prodh,w,c
 30601  003C02  6EF7               	movwf	tblptrh,c
 30602  003C04                     	if	1	;There are 3 active tblptr bytes
 30603  003C04  6AF8               	clrf	tblptru,c
 30604  003C06  0E00               	movlw	low (__mediumconst shr (0+16))
 30605  003C08  22F8               	addwfc	tblptru,f,c
 30606  003C0A                     	endif
 30607  003C0A  5022               	movf	__display_checked@cntr,w,c
 30608  003C0C  0D01               	mullw	1
 30609  003C0E  0E3C               	movlw	low (_display_content+60)
 30610  003C10  24F3               	addwf	prodl,w,c
 30611  003C12  6ED9               	movwf	fsr2l,c
 30612  003C14  0E02               	movlw	high (_display_content+60)
 30613  003C16  20F4               	addwfc	prodh,w,c
 30614  003C18  6EDA               	movwf	fsr2h,c
 30615  003C1A  0008               	tblrd		*
 30616  003C1C  CFF5 FFDF          	movff	tablat,indf2
 30617  003C20  2A22               	incf	__display_checked@cntr,f,c
 30618  003C22                     l1631:
 30619  003C22  5022               	movf	__display_checked@cntr,w,c
 30620  003C24  0D01               	mullw	1
 30621  003C26  0E32               	movlw	low _checked_line4
 30622  003C28  24F3               	addwf	prodl,w,c
 30623  003C2A  6EF6               	movwf	tblptrl,c
 30624  003C2C  0E8D               	movlw	high _checked_line4
 30625  003C2E  20F4               	addwfc	prodh,w,c
 30626  003C30  6EF7               	movwf	tblptrh,c
 30627  003C32                     	if	1	;There are 3 active tblptr bytes
 30628  003C32  6AF8               	clrf	tblptru,c
 30629  003C34  0E00               	movlw	low (__mediumconst shr (0+16))
 30630  003C36  22F8               	addwfc	tblptru,f,c
 30631  003C38                     	endif
 30632  003C38  0008               	tblrd		*
 30633  003C3A  50F5               	movf	tablat,w,c
 30634  003C3C  0900               	iorlw	0
 30635  003C3E  B4D8               	btfsc	status,2,c
 30636  003C40  0012               	return	
 30637  003C42  D7D8               	goto	l1632
 30638  003C44                     __end_of__display_checked:
 30639                           	opt stack 0
 30640                           tosu	equ	0xFFF
 30641                           tosh	equ	0xFFE
 30642                           tosl	equ	0xFFD
 30643                           pclath	equ	0xFFA
 30644                           tblptru	equ	0xFF8
 30645                           tblptrh	equ	0xFF7
 30646                           tblptrl	equ	0xFF6
 30647                           tablat	equ	0xFF5
 30648                           prodh	equ	0xFF4
 30649                           prodl	equ	0xFF3
 30650                           intcon	equ	0xFF2
 30651                           intcon2	equ	0xFF1
 30652                           intcon3	equ	0xFF0
 30653                           indf0	equ	0xFEF
 30654                           postinc0	equ	0xFEE
 30655                           fsr0h	equ	0xFEA
 30656                           fsr0l	equ	0xFE9
 30657                           wreg	equ	0xFE8
 30658                           indf1	equ	0xFE7
 30659                           postdec1	equ	0xFE5
 30660                           plusw1	equ	0xFE3
 30661                           fsr1h	equ	0xFE2
 30662                           fsr1l	equ	0xFE1
 30663                           indf2	equ	0xFDF
 30664                           postinc2	equ	0xFDE
 30665                           postdec2	equ	0xFDD
 30666                           plusw2	equ	0xFDB
 30667                           fsr2h	equ	0xFDA
 30668                           fsr2l	equ	0xFD9
 30669                           status	equ	0xFD8
 30670                           
 30671 ;; *************** function _bootloader_get_total_entries *****************
 30672 ;; Defined at:
 30673 ;;		line 470 in file "bootloader.c"
 30674 ;; Parameters:    Size  Location     Type
 30675 ;;		None
 30676 ;; Auto vars:     Size  Location     Type
 30677 ;;		None
 30678 ;; Return value:  Size  Location     Type
 30679 ;;                  2    0[COMRAM] unsigned int 
 30680 ;; Registers used:
 30681 ;;		None
 30682 ;; Tracked objects:
 30683 ;;		On entry : 0/0
 30684 ;;		On exit  : 0/0
 30685 ;;		Unchanged: 0/0
 30686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30691 ;;Total ram usage:        2 bytes
 30692 ;; Hardware stack levels used:    1
 30693 ;; This function calls:
 30694 ;;		Nothing
 30695 ;; This function is called by:
 30696 ;;		__display_checked
 30697 ;;		__display_programming
 30698 ;;		__fill_buffer_get_bootloader_details
 30699 ;; This function uses a non-reentrant model
 30700 ;;
 30701                           
 30702                           	psect	text149
 30703  00896C                     __ptext149:
 30704                           	opt stack 0
 30705  00896C                     _bootloader_get_total_entries:
 30706                           	opt stack 25
 30707                           
 30708                           ;bootloader.c: 472: return total_hex_file_entries;
 30709                           
 30710                           ;incstack = 0
 30711  00896C  C172  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30712  008970  C173  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30713  008974  0012               	return		;funcret
 30714  008976                     __end_of_bootloader_get_total_entries:
 30715                           	opt stack 0
 30716                           tosu	equ	0xFFF
 30717                           tosh	equ	0xFFE
 30718                           tosl	equ	0xFFD
 30719                           pclath	equ	0xFFA
 30720                           tblptru	equ	0xFF8
 30721                           tblptrh	equ	0xFF7
 30722                           tblptrl	equ	0xFF6
 30723                           tablat	equ	0xFF5
 30724                           prodh	equ	0xFF4
 30725                           prodl	equ	0xFF3
 30726                           intcon	equ	0xFF2
 30727                           intcon2	equ	0xFF1
 30728                           intcon3	equ	0xFF0
 30729                           indf0	equ	0xFEF
 30730                           postinc0	equ	0xFEE
 30731                           fsr0h	equ	0xFEA
 30732                           fsr0l	equ	0xFE9
 30733                           wreg	equ	0xFE8
 30734                           indf1	equ	0xFE7
 30735                           postdec1	equ	0xFE5
 30736                           plusw1	equ	0xFE3
 30737                           fsr1h	equ	0xFE2
 30738                           fsr1l	equ	0xFE1
 30739                           indf2	equ	0xFDF
 30740                           postinc2	equ	0xFDE
 30741                           postdec2	equ	0xFDD
 30742                           plusw2	equ	0xFDB
 30743                           fsr2h	equ	0xFDA
 30744                           fsr2l	equ	0xFD9
 30745                           status	equ	0xFD8
 30746                           
 30747 ;; *************** function __display_itoa_u16 *****************
 30748 ;; Defined at:
 30749 ;;		line 88 in file "display.c"
 30750 ;; Parameters:    Size  Location     Type
 30751 ;;  value           4   24[COMRAM] unsigned long 
 30752 ;;  text            2   28[COMRAM] PTR unsigned char 
 30753 ;;		 -> display_content(80), 
 30754 ;; Auto vars:     Size  Location     Type
 30755 ;;		None
 30756 ;; Return value:  Size  Location     Type
 30757 ;;                  1    wreg      unsigned char 
 30758 ;; Registers used:
 30759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30760 ;; Tracked objects:
 30761 ;;		On entry : 0/0
 30762 ;;		On exit  : 0/0
 30763 ;;		Unchanged: 0/0
 30764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30765 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30769 ;;Total ram usage:        6 bytes
 30770 ;; Hardware stack levels used:    1
 30771 ;; Hardware stack levels required when called:    3
 30772 ;; This function calls:
 30773 ;;		_itoa
 30774 ;; This function is called by:
 30775 ;;		__display_itoa_u32
 30776 ;;		__display_verify
 30777 ;;		__display_checked
 30778 ;;		__display_failed
 30779 ;;		__display_programming
 30780 ;;		__display_done
 30781 ;; This function uses a non-reentrant model
 30782 ;;
 30783                           
 30784                           	psect	text150
 30785  005CA0                     __ptext150:
 30786                           	opt stack 0
 30787  005CA0                     __display_itoa_u16:
 30788                           	opt stack 22
 30789                           
 30790                           ;display.c: 90: itoa(text, value, 10);
 30791                           
 30792                           ;incstack = 0
 30793  005CA0  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 30794  005CA4  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 30795  005CA8  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 30796  005CAC  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 30797  005CB0  0E00               	movlw	0
 30798  005CB2  6E16               	movwf	itoa@base+1,c
 30799  005CB4  0E0A               	movlw	10
 30800  005CB6  6E15               	movwf	itoa@base,c
 30801  005CB8  EC1C  F040         	call	_itoa	;wreg free
 30802                           
 30803                           ;display.c: 91: if(value>9999)
 30804  005CBC  501C               	movf	__display_itoa_u16@value+3,w,c
 30805  005CBE  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30806  005CC0  E106               	bnz	u7030
 30807  005CC2  0E10               	movlw	16
 30808  005CC4  5C19               	subwf	__display_itoa_u16@value,w,c
 30809  005CC6  0E27               	movlw	39
 30810  005CC8  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30811  005CCA  A0D8               	btfss	status,0,c
 30812  005CCC  D00A               	goto	l1471
 30813  005CCE                     u7030:
 30814                           
 30815                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 30816  005CCE  EE20 F005          	lfsr	2,5
 30817  005CD2  501D               	movf	__display_itoa_u16@text,w,c
 30818  005CD4  26D9               	addwf	fsr2l,f,c
 30819  005CD6  501E               	movf	__display_itoa_u16@text+1,w,c
 30820  005CD8  22DA               	addwfc	fsr2h,f,c
 30821  005CDA  0E20               	movlw	32
 30822  005CDC  6EDF               	movwf	indf2,c
 30823                           
 30824                           ;display.c: 94: return 5;
 30825  005CDE  0E05               	movlw	5
 30826                           
 30827                           ;display.c: 95: }
 30828  005CE0  0012               	return	
 30829  005CE2                     l1471:
 30830                           
 30831                           ;display.c: 96: else if (value>999)
 30832  005CE2  501C               	movf	__display_itoa_u16@value+3,w,c
 30833  005CE4  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30834  005CE6  E106               	bnz	u7040
 30835  005CE8  0EE8               	movlw	232
 30836  005CEA  5C19               	subwf	__display_itoa_u16@value,w,c
 30837  005CEC  0E03               	movlw	3
 30838  005CEE  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30839  005CF0  A0D8               	btfss	status,0,c
 30840  005CF2  D00A               	goto	l1474
 30841  005CF4                     u7040:
 30842                           
 30843                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 30844  005CF4  EE20 F004          	lfsr	2,4
 30845  005CF8  501D               	movf	__display_itoa_u16@text,w,c
 30846  005CFA  26D9               	addwf	fsr2l,f,c
 30847  005CFC  501E               	movf	__display_itoa_u16@text+1,w,c
 30848  005CFE  22DA               	addwfc	fsr2h,f,c
 30849  005D00  0E20               	movlw	32
 30850  005D02  6EDF               	movwf	indf2,c
 30851                           
 30852                           ;display.c: 99: return 4;
 30853  005D04  0E04               	movlw	4
 30854                           
 30855                           ;display.c: 100: }
 30856  005D06  0012               	return	
 30857  005D08                     l1474:
 30858                           
 30859                           ;display.c: 101: else if (value>99)
 30860  005D08  501C               	movf	__display_itoa_u16@value+3,w,c
 30861  005D0A  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30862  005D0C  101A               	iorwf	__display_itoa_u16@value+1,w,c
 30863  005D0E  E104               	bnz	u7050
 30864  005D10  0E64               	movlw	100
 30865  005D12  5C19               	subwf	__display_itoa_u16@value,w,c
 30866  005D14  A0D8               	btfss	status,0,c
 30867  005D16  D00A               	goto	l1476
 30868  005D18                     u7050:
 30869                           
 30870                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 30871  005D18  EE20 F003          	lfsr	2,3
 30872  005D1C  501D               	movf	__display_itoa_u16@text,w,c
 30873  005D1E  26D9               	addwf	fsr2l,f,c
 30874  005D20  501E               	movf	__display_itoa_u16@text+1,w,c
 30875  005D22  22DA               	addwfc	fsr2h,f,c
 30876  005D24  0E20               	movlw	32
 30877  005D26  6EDF               	movwf	indf2,c
 30878                           
 30879                           ;display.c: 104: return 3;
 30880  005D28  0E03               	movlw	3
 30881                           
 30882                           ;display.c: 105: }
 30883  005D2A  0012               	return	
 30884  005D2C                     l1476:
 30885                           
 30886                           ;display.c: 106: else if (value>9)
 30887  005D2C  501C               	movf	__display_itoa_u16@value+3,w,c
 30888  005D2E  101B               	iorwf	__display_itoa_u16@value+2,w,c
 30889  005D30  101A               	iorwf	__display_itoa_u16@value+1,w,c
 30890  005D32  E104               	bnz	u7060
 30891  005D34  0E0A               	movlw	10
 30892  005D36  5C19               	subwf	__display_itoa_u16@value,w,c
 30893  005D38  A0D8               	btfss	status,0,c
 30894  005D3A  D00A               	goto	l1478
 30895  005D3C                     u7060:
 30896                           
 30897                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 30898  005D3C  EE20 F002          	lfsr	2,2
 30899  005D40  501D               	movf	__display_itoa_u16@text,w,c
 30900  005D42  26D9               	addwf	fsr2l,f,c
 30901  005D44  501E               	movf	__display_itoa_u16@text+1,w,c
 30902  005D46  22DA               	addwfc	fsr2h,f,c
 30903  005D48  0E20               	movlw	32
 30904  005D4A  6EDF               	movwf	indf2,c
 30905                           
 30906                           ;display.c: 109: return 2;
 30907  005D4C  0E02               	movlw	2
 30908                           
 30909                           ;display.c: 110: }
 30910  005D4E  0012               	return	
 30911  005D50                     l1478:
 30912                           
 30913                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 30914  005D50  EE20 F001          	lfsr	2,1
 30915  005D54  501D               	movf	__display_itoa_u16@text,w,c
 30916  005D56  26D9               	addwf	fsr2l,f,c
 30917  005D58  501E               	movf	__display_itoa_u16@text+1,w,c
 30918  005D5A  22DA               	addwfc	fsr2h,f,c
 30919  005D5C  0E20               	movlw	32
 30920  005D5E  6EDF               	movwf	indf2,c
 30921                           
 30922                           ;display.c: 114: return 1;
 30923  005D60  0E01               	movlw	1
 30924  005D62  0012               	return	
 30925  005D64                     __end_of__display_itoa_u16:
 30926                           	opt stack 0
 30927                           tosu	equ	0xFFF
 30928                           tosh	equ	0xFFE
 30929                           tosl	equ	0xFFD
 30930                           pclath	equ	0xFFA
 30931                           tblptru	equ	0xFF8
 30932                           tblptrh	equ	0xFF7
 30933                           tblptrl	equ	0xFF6
 30934                           tablat	equ	0xFF5
 30935                           prodh	equ	0xFF4
 30936                           prodl	equ	0xFF3
 30937                           intcon	equ	0xFF2
 30938                           intcon2	equ	0xFF1
 30939                           intcon3	equ	0xFF0
 30940                           indf0	equ	0xFEF
 30941                           postinc0	equ	0xFEE
 30942                           fsr0h	equ	0xFEA
 30943                           fsr0l	equ	0xFE9
 30944                           wreg	equ	0xFE8
 30945                           indf1	equ	0xFE7
 30946                           postdec1	equ	0xFE5
 30947                           plusw1	equ	0xFE3
 30948                           fsr1h	equ	0xFE2
 30949                           fsr1l	equ	0xFE1
 30950                           indf2	equ	0xFDF
 30951                           postinc2	equ	0xFDE
 30952                           postdec2	equ	0xFDD
 30953                           plusw2	equ	0xFDB
 30954                           fsr2h	equ	0xFDA
 30955                           fsr2l	equ	0xFD9
 30956                           status	equ	0xFD8
 30957                           
 30958 ;; *************** function _itoa *****************
 30959 ;; Defined at:
 30960 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30961 ;; Parameters:    Size  Location     Type
 30962 ;;  buf             2   16[COMRAM] PTR unsigned char 
 30963 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30964 ;;  val             2   18[COMRAM] int 
 30965 ;;  base            2   20[COMRAM] int 
 30966 ;; Auto vars:     Size  Location     Type
 30967 ;;  cp              2   22[COMRAM] PTR unsigned char 
 30968 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30969 ;; Return value:  Size  Location     Type
 30970 ;;                  2   16[COMRAM] PTR unsigned char 
 30971 ;; Registers used:
 30972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30973 ;; Tracked objects:
 30974 ;;		On entry : 0/0
 30975 ;;		On exit  : 0/0
 30976 ;;		Unchanged: 0/0
 30977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30978 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30981 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30982 ;;Total ram usage:        8 bytes
 30983 ;; Hardware stack levels used:    1
 30984 ;; Hardware stack levels required when called:    2
 30985 ;; This function calls:
 30986 ;;		_utoa
 30987 ;; This function is called by:
 30988 ;;		__display_itoa_u16
 30989 ;;		__display_itoa_u32
 30990 ;;		__display_itoa
 30991 ;; This function uses a non-reentrant model
 30992 ;;
 30993                           
 30994                           	psect	text151
 30995  008038                     __ptext151:
 30996                           	opt stack 0
 30997  008038                     _itoa:
 30998                           	opt stack 22
 30999                           
 31000                           ;incstack = 0
 31001  008038  C011  F017         	movff	itoa@buf,itoa@cp
 31002  00803C  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31003  008040  AE14               	btfss	itoa@val+1,7,c
 31004  008042  D00C               	goto	l3578
 31005  008044  C011  FFD9         	movff	itoa@buf,fsr2l
 31006  008048  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31007  00804C  0E2D               	movlw	45
 31008  00804E  6EDF               	movwf	indf2,c
 31009  008050  4A11               	infsnz	itoa@buf,f,c
 31010  008052  2A12               	incf	itoa@buf+1,f,c
 31011  008054  6C13               	negf	itoa@val,c
 31012  008056  1E14               	comf	itoa@val+1,f,c
 31013  008058  B0D8               	btfsc	status,0,c
 31014  00805A  2A14               	incf	itoa@val+1,f,c
 31015  00805C                     l3578:
 31016  00805C  C011  F008         	movff	itoa@buf,utoa@buf
 31017  008060  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31018  008064  C013  F00A         	movff	itoa@val,utoa@val
 31019  008068  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31020  00806C  C015  F00C         	movff	itoa@base,utoa@base
 31021  008070  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31022  008074  ECDA  F031         	call	_utoa	;wreg free
 31023  008078  0012               	return	
 31024  00807A                     __end_of_itoa:
 31025                           	opt stack 0
 31026                           tosu	equ	0xFFF
 31027                           tosh	equ	0xFFE
 31028                           tosl	equ	0xFFD
 31029                           pclath	equ	0xFFA
 31030                           tblptru	equ	0xFF8
 31031                           tblptrh	equ	0xFF7
 31032                           tblptrl	equ	0xFF6
 31033                           tablat	equ	0xFF5
 31034                           prodh	equ	0xFF4
 31035                           prodl	equ	0xFF3
 31036                           intcon	equ	0xFF2
 31037                           intcon2	equ	0xFF1
 31038                           intcon3	equ	0xFF0
 31039                           indf0	equ	0xFEF
 31040                           postinc0	equ	0xFEE
 31041                           fsr0h	equ	0xFEA
 31042                           fsr0l	equ	0xFE9
 31043                           wreg	equ	0xFE8
 31044                           indf1	equ	0xFE7
 31045                           postdec1	equ	0xFE5
 31046                           plusw1	equ	0xFE3
 31047                           fsr1h	equ	0xFE2
 31048                           fsr1l	equ	0xFE1
 31049                           indf2	equ	0xFDF
 31050                           postinc2	equ	0xFDE
 31051                           postdec2	equ	0xFDD
 31052                           plusw2	equ	0xFDB
 31053                           fsr2h	equ	0xFDA
 31054                           fsr2l	equ	0xFD9
 31055                           status	equ	0xFD8
 31056                           
 31057 ;; *************** function _utoa *****************
 31058 ;; Defined at:
 31059 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31060 ;; Parameters:    Size  Location     Type
 31061 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31062 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31063 ;;  val             2    9[COMRAM] unsigned int 
 31064 ;;  base            2   11[COMRAM] int 
 31065 ;; Auto vars:     Size  Location     Type
 31066 ;;  v               2   13[COMRAM] unsigned int 
 31067 ;;  c               1   15[COMRAM] unsigned char 
 31068 ;; Return value:  Size  Location     Type
 31069 ;;                  2    7[COMRAM] PTR unsigned char 
 31070 ;; Registers used:
 31071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31072 ;; Tracked objects:
 31073 ;;		On entry : 0/0
 31074 ;;		On exit  : 0/0
 31075 ;;		Unchanged: 0/0
 31076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31077 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31078 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31080 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31081 ;;Total ram usage:        9 bytes
 31082 ;; Hardware stack levels used:    1
 31083 ;; Hardware stack levels required when called:    1
 31084 ;; This function calls:
 31085 ;;		___lwdiv
 31086 ;;		___lwmod
 31087 ;; This function is called by:
 31088 ;;		_itoa
 31089 ;; This function uses a non-reentrant model
 31090 ;;
 31091                           
 31092                           	psect	text152
 31093  0063B4                     __ptext152:
 31094                           	opt stack 0
 31095  0063B4                     _utoa:
 31096                           	opt stack 22
 31097                           
 31098                           ;incstack = 0
 31099  0063B4  C00A  F00E         	movff	utoa@val,utoa@v
 31100  0063B8  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31101  0063BC  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31102  0063C0  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31103  0063C4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31104  0063C8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31105  0063CC  ECA9  F03E         	call	___lwdiv	;wreg free
 31106  0063D0  C001  F00E         	movff	?___lwdiv,utoa@v
 31107  0063D4  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31108  0063D8  4A08               	infsnz	utoa@buf,f,c
 31109  0063DA  2A09               	incf	utoa@buf+1,f,c
 31110  0063DC  500E               	movf	utoa@v,w,c
 31111  0063DE  100F               	iorwf	utoa@v+1,w,c
 31112  0063E0  A4D8               	btfss	status,2,c
 31113  0063E2  D7EC               	goto	l3582
 31114  0063E4  C008  FFD9         	movff	utoa@buf,fsr2l
 31115  0063E8  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31116  0063EC  0E00               	movlw	0
 31117  0063EE  6EDF               	movwf	indf2,c
 31118  0063F0  0608               	decf	utoa@buf,f,c
 31119  0063F2  A0D8               	btfss	status,0,c
 31120  0063F4  0609               	decf	utoa@buf+1,f,c
 31121  0063F6  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31122  0063FA  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31123  0063FE  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31124  006402  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31125  006406  EC3D  F040         	call	___lwmod	;wreg free
 31126  00640A  5001               	movf	?___lwmod,w,c
 31127  00640C  6E10               	movwf	utoa@c,c
 31128  00640E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31129  006412  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31130  006416  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31131  00641A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31132  00641E  ECA9  F03E         	call	___lwdiv	;wreg free
 31133  006422  C001  F00A         	movff	?___lwdiv,utoa@val
 31134  006426  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31135  00642A  0E09               	movlw	9
 31136  00642C  6410               	cpfsgt	utoa@c,c
 31137  00642E  D002               	goto	l3585
 31138  006430  0E07               	movlw	7
 31139  006432  2610               	addwf	utoa@c,f,c
 31140  006434                     l3585:
 31141  006434  0E30               	movlw	48
 31142  006436  2610               	addwf	utoa@c,f,c
 31143  006438  C008  FFD9         	movff	utoa@buf,fsr2l
 31144  00643C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31145  006440  C010  FFDF         	movff	utoa@c,indf2
 31146  006444  0608               	decf	utoa@buf,f,c
 31147  006446  A0D8               	btfss	status,0,c
 31148  006448  0609               	decf	utoa@buf+1,f,c
 31149  00644A  500A               	movf	utoa@val,w,c
 31150  00644C  100B               	iorwf	utoa@val+1,w,c
 31151  00644E  A4D8               	btfss	status,2,c
 31152  006450  D7D2               	goto	l3584
 31153                           
 31154                           ;	Return value of _utoa is never used
 31155  006452  4A08               	infsnz	utoa@buf,f,c
 31156  006454  2A09               	incf	utoa@buf+1,f,c
 31157  006456  0012               	return	
 31158  006458                     __end_of_utoa:
 31159                           	opt stack 0
 31160                           tosu	equ	0xFFF
 31161                           tosh	equ	0xFFE
 31162                           tosl	equ	0xFFD
 31163                           pclath	equ	0xFFA
 31164                           tblptru	equ	0xFF8
 31165                           tblptrh	equ	0xFF7
 31166                           tblptrl	equ	0xFF6
 31167                           tablat	equ	0xFF5
 31168                           prodh	equ	0xFF4
 31169                           prodl	equ	0xFF3
 31170                           intcon	equ	0xFF2
 31171                           intcon2	equ	0xFF1
 31172                           intcon3	equ	0xFF0
 31173                           indf0	equ	0xFEF
 31174                           postinc0	equ	0xFEE
 31175                           fsr0h	equ	0xFEA
 31176                           fsr0l	equ	0xFE9
 31177                           wreg	equ	0xFE8
 31178                           indf1	equ	0xFE7
 31179                           postdec1	equ	0xFE5
 31180                           plusw1	equ	0xFE3
 31181                           fsr1h	equ	0xFE2
 31182                           fsr1l	equ	0xFE1
 31183                           indf2	equ	0xFDF
 31184                           postinc2	equ	0xFDE
 31185                           postdec2	equ	0xFDD
 31186                           plusw2	equ	0xFDB
 31187                           fsr2h	equ	0xFDA
 31188                           fsr2l	equ	0xFD9
 31189                           status	equ	0xFD8
 31190                           
 31191 ;; *************** function ___lwmod *****************
 31192 ;; Defined at:
 31193 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31194 ;; Parameters:    Size  Location     Type
 31195 ;;  dividend        2    0[COMRAM] unsigned int 
 31196 ;;  divisor         2    2[COMRAM] unsigned int 
 31197 ;; Auto vars:     Size  Location     Type
 31198 ;;  counter         1    4[COMRAM] unsigned char 
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  2    0[COMRAM] unsigned int 
 31201 ;; Registers used:
 31202 ;;		wreg, status,2, status,0
 31203 ;; Tracked objects:
 31204 ;;		On entry : 0/0
 31205 ;;		On exit  : 0/0
 31206 ;;		Unchanged: 0/0
 31207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31211 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31212 ;;Total ram usage:        5 bytes
 31213 ;; Hardware stack levels used:    1
 31214 ;; This function calls:
 31215 ;;		Nothing
 31216 ;; This function is called by:
 31217 ;;		_utoa
 31218 ;; This function uses a non-reentrant model
 31219 ;;
 31220                           
 31221                           	psect	text153
 31222  00807A                     __ptext153:
 31223                           	opt stack 0
 31224  00807A                     ___lwmod:
 31225                           	opt stack 22
 31226                           
 31227                           ;incstack = 0
 31228  00807A  5003               	movf	___lwmod@divisor,w,c
 31229  00807C  1004               	iorwf	___lwmod@divisor+1,w,c
 31230  00807E  B4D8               	btfsc	status,2,c
 31231  008080  D018               	goto	l3409
 31232  008082  0E01               	movlw	1
 31233  008084  6E05               	movwf	___lwmod@counter,c
 31234  008086  D004               	goto	l3404
 31235  008088  90D8               	bcf	status,0,c
 31236  00808A  3603               	rlcf	___lwmod@divisor,f,c
 31237  00808C  3604               	rlcf	___lwmod@divisor+1,f,c
 31238  00808E  2A05               	incf	___lwmod@counter,f,c
 31239  008090                     l3404:
 31240  008090  AE04               	btfss	___lwmod@divisor+1,7,c
 31241  008092  D7FA               	goto	l3405
 31242  008094                     u6480:
 31243  008094  5003               	movf	___lwmod@divisor,w,c
 31244  008096  5C01               	subwf	___lwmod@dividend,w,c
 31245  008098  5004               	movf	___lwmod@divisor+1,w,c
 31246  00809A  5802               	subwfb	___lwmod@dividend+1,w,c
 31247  00809C  A0D8               	btfss	status,0,c
 31248  00809E  D004               	goto	l3408
 31249  0080A0  5003               	movf	___lwmod@divisor,w,c
 31250  0080A2  5E01               	subwf	___lwmod@dividend,f,c
 31251  0080A4  5004               	movf	___lwmod@divisor+1,w,c
 31252  0080A6  5A02               	subwfb	___lwmod@dividend+1,f,c
 31253  0080A8                     l3408:
 31254  0080A8  90D8               	bcf	status,0,c
 31255  0080AA  3204               	rrcf	___lwmod@divisor+1,f,c
 31256  0080AC  3203               	rrcf	___lwmod@divisor,f,c
 31257  0080AE  2E05               	decfsz	___lwmod@counter,f,c
 31258  0080B0  D7F1               	goto	u6480
 31259  0080B2                     l3409:
 31260  0080B2  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31261  0080B6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31262  0080BA  0012               	return		;funcret
 31263  0080BC                     __end_of___lwmod:
 31264                           	opt stack 0
 31265                           tosu	equ	0xFFF
 31266                           tosh	equ	0xFFE
 31267                           tosl	equ	0xFFD
 31268                           pclath	equ	0xFFA
 31269                           tblptru	equ	0xFF8
 31270                           tblptrh	equ	0xFF7
 31271                           tblptrl	equ	0xFF6
 31272                           tablat	equ	0xFF5
 31273                           prodh	equ	0xFF4
 31274                           prodl	equ	0xFF3
 31275                           intcon	equ	0xFF2
 31276                           intcon2	equ	0xFF1
 31277                           intcon3	equ	0xFF0
 31278                           indf0	equ	0xFEF
 31279                           postinc0	equ	0xFEE
 31280                           fsr0h	equ	0xFEA
 31281                           fsr0l	equ	0xFE9
 31282                           wreg	equ	0xFE8
 31283                           indf1	equ	0xFE7
 31284                           postdec1	equ	0xFE5
 31285                           plusw1	equ	0xFE3
 31286                           fsr1h	equ	0xFE2
 31287                           fsr1l	equ	0xFE1
 31288                           indf2	equ	0xFDF
 31289                           postinc2	equ	0xFDE
 31290                           postdec2	equ	0xFDD
 31291                           plusw2	equ	0xFDB
 31292                           fsr2h	equ	0xFDA
 31293                           fsr2l	equ	0xFD9
 31294                           status	equ	0xFD8
 31295                           
 31296 ;; *************** function ___lwdiv *****************
 31297 ;; Defined at:
 31298 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;  dividend        2    0[COMRAM] unsigned int 
 31301 ;;  divisor         2    2[COMRAM] unsigned int 
 31302 ;; Auto vars:     Size  Location     Type
 31303 ;;  quotient        2    4[COMRAM] unsigned int 
 31304 ;;  counter         1    6[COMRAM] unsigned char 
 31305 ;; Return value:  Size  Location     Type
 31306 ;;                  2    0[COMRAM] unsigned int 
 31307 ;; Registers used:
 31308 ;;		wreg, status,2, status,0
 31309 ;; Tracked objects:
 31310 ;;		On entry : 0/0
 31311 ;;		On exit  : 0/0
 31312 ;;		Unchanged: 0/0
 31313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31317 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31318 ;;Total ram usage:        7 bytes
 31319 ;; Hardware stack levels used:    1
 31320 ;; This function calls:
 31321 ;;		Nothing
 31322 ;; This function is called by:
 31323 ;;		_utoa
 31324 ;; This function uses a non-reentrant model
 31325 ;;
 31326                           
 31327                           	psect	text154
 31328  007D52                     __ptext154:
 31329                           	opt stack 0
 31330  007D52                     ___lwdiv:
 31331                           	opt stack 22
 31332                           
 31333                           ;incstack = 0
 31334  007D52  0E00               	movlw	0
 31335  007D54  6E06               	movwf	___lwdiv@quotient+1,c
 31336  007D56  0E00               	movlw	0
 31337  007D58  6E05               	movwf	___lwdiv@quotient,c
 31338  007D5A  5003               	movf	___lwdiv@divisor,w,c
 31339  007D5C  1004               	iorwf	___lwdiv@divisor+1,w,c
 31340  007D5E  B4D8               	btfsc	status,2,c
 31341  007D60  D01C               	goto	l3399
 31342  007D62  0E01               	movlw	1
 31343  007D64  6E07               	movwf	___lwdiv@counter,c
 31344  007D66  D004               	goto	l3394
 31345  007D68  90D8               	bcf	status,0,c
 31346  007D6A  3603               	rlcf	___lwdiv@divisor,f,c
 31347  007D6C  3604               	rlcf	___lwdiv@divisor+1,f,c
 31348  007D6E  2A07               	incf	___lwdiv@counter,f,c
 31349  007D70                     l3394:
 31350  007D70  AE04               	btfss	___lwdiv@divisor+1,7,c
 31351  007D72  D7FA               	goto	l3395
 31352  007D74                     u6450:
 31353  007D74  90D8               	bcf	status,0,c
 31354  007D76  3605               	rlcf	___lwdiv@quotient,f,c
 31355  007D78  3606               	rlcf	___lwdiv@quotient+1,f,c
 31356  007D7A  5003               	movf	___lwdiv@divisor,w,c
 31357  007D7C  5C01               	subwf	___lwdiv@dividend,w,c
 31358  007D7E  5004               	movf	___lwdiv@divisor+1,w,c
 31359  007D80  5802               	subwfb	___lwdiv@dividend+1,w,c
 31360  007D82  A0D8               	btfss	status,0,c
 31361  007D84  D005               	goto	l3398
 31362  007D86  5003               	movf	___lwdiv@divisor,w,c
 31363  007D88  5E01               	subwf	___lwdiv@dividend,f,c
 31364  007D8A  5004               	movf	___lwdiv@divisor+1,w,c
 31365  007D8C  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31366  007D8E  8005               	bsf	___lwdiv@quotient,0,c
 31367  007D90                     l3398:
 31368  007D90  90D8               	bcf	status,0,c
 31369  007D92  3204               	rrcf	___lwdiv@divisor+1,f,c
 31370  007D94  3203               	rrcf	___lwdiv@divisor,f,c
 31371  007D96  2E07               	decfsz	___lwdiv@counter,f,c
 31372  007D98  D7ED               	goto	u6450
 31373  007D9A                     l3399:
 31374  007D9A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31375  007D9E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31376  007DA2  0012               	return		;funcret
 31377  007DA4                     __end_of___lwdiv:
 31378                           	opt stack 0
 31379                           tosu	equ	0xFFF
 31380                           tosh	equ	0xFFE
 31381                           tosl	equ	0xFFD
 31382                           pclath	equ	0xFFA
 31383                           tblptru	equ	0xFF8
 31384                           tblptrh	equ	0xFF7
 31385                           tblptrl	equ	0xFF6
 31386                           tablat	equ	0xFF5
 31387                           prodh	equ	0xFF4
 31388                           prodl	equ	0xFF3
 31389                           intcon	equ	0xFF2
 31390                           intcon2	equ	0xFF1
 31391                           intcon3	equ	0xFF0
 31392                           indf0	equ	0xFEF
 31393                           postinc0	equ	0xFEE
 31394                           fsr0h	equ	0xFEA
 31395                           fsr0l	equ	0xFE9
 31396                           wreg	equ	0xFE8
 31397                           indf1	equ	0xFE7
 31398                           postdec1	equ	0xFE5
 31399                           plusw1	equ	0xFE3
 31400                           fsr1h	equ	0xFE2
 31401                           fsr1l	equ	0xFE1
 31402                           indf2	equ	0xFDF
 31403                           postinc2	equ	0xFDE
 31404                           postdec2	equ	0xFDD
 31405                           plusw2	equ	0xFDB
 31406                           fsr2h	equ	0xFDA
 31407                           fsr2l	equ	0xFD9
 31408                           status	equ	0xFD8
 31409                           
 31410 ;; *************** function _i2c_eeprom_writeByte *****************
 31411 ;; Defined at:
 31412 ;;		line 352 in file "i2c.c"
 31413 ;; Parameters:    Size  Location     Type
 31414 ;;  address         2   10[COMRAM] unsigned int 
 31415 ;;  data            1   12[COMRAM] unsigned char 
 31416 ;; Auto vars:     Size  Location     Type
 31417 ;;  dat             2   16[COMRAM] unsigned char [2]
 31418 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31419 ;; Return value:  Size  Location     Type
 31420 ;;                  1    wreg      void 
 31421 ;; Registers used:
 31422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31423 ;; Tracked objects:
 31424 ;;		On entry : 0/0
 31425 ;;		On exit  : 0/0
 31426 ;;		Unchanged: 0/0
 31427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31430 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31431 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31432 ;;Total ram usage:        9 bytes
 31433 ;; Hardware stack levels used:    1
 31434 ;; Hardware stack levels required when called:    2
 31435 ;; This function calls:
 31436 ;;		__i2c_write
 31437 ;;		_i2c_set_frequency
 31438 ;; This function is called by:
 31439 ;;		__normal_mode
 31440 ;;		__ui_encoder
 31441 ;;		__parse_command_short
 31442 ;; This function uses a non-reentrant model
 31443 ;;
 31444                           
 31445                           	psect	text155
 31446  0080BC                     __ptext155:
 31447                           	opt stack 0
 31448  0080BC                     _i2c_eeprom_writeByte:
 31449                           	opt stack 26
 31450                           
 31451                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31452                           
 31453                           ;incstack = 0
 31454  0080BC  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31455  0080C0  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31456  0080C4  0E07               	movlw	7
 31457  0080C6  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31458  0080C8                     u10275:
 31459  0080C8  90D8               	bcf	status,0,c
 31460  0080CA  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31461  0080CC  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31462  0080CE  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31463  0080D0  D7FB               	goto	u10275
 31464  0080D2  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31465  0080D4  0B0E               	andlw	14
 31466  0080D6  09A0               	iorlw	160
 31467  0080D8  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31468                           
 31469                           ;i2c.c: 358: dat[0] = address & 0xFF;
 31470  0080DA  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31471                           
 31472                           ;i2c.c: 359: dat[1] = data;
 31473  0080DE  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31474                           
 31475                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31476  0080E2  0E02               	movlw	2
 31477  0080E4  EC9F  F042         	call	_i2c_set_frequency
 31478                           
 31479                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 31480  0080E8  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31481  0080EA  6E06               	movwf	__i2c_write@data,c
 31482  0080EC  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31483  0080EE  6E07               	movwf	__i2c_write@data+1,c
 31484  0080F0  0E02               	movlw	2
 31485  0080F2  6E08               	movwf	__i2c_write@length,c
 31486  0080F4  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31487  0080F6  EC6F  F03F         	call	__i2c_write
 31488  0080FA  0012               	return		;funcret
 31489  0080FC                     __end_of_i2c_eeprom_writeByte:
 31490                           	opt stack 0
 31491                           tosu	equ	0xFFF
 31492                           tosh	equ	0xFFE
 31493                           tosl	equ	0xFFD
 31494                           pclath	equ	0xFFA
 31495                           tblptru	equ	0xFF8
 31496                           tblptrh	equ	0xFF7
 31497                           tblptrl	equ	0xFF6
 31498                           tablat	equ	0xFF5
 31499                           prodh	equ	0xFF4
 31500                           prodl	equ	0xFF3
 31501                           intcon	equ	0xFF2
 31502                           intcon2	equ	0xFF1
 31503                           intcon3	equ	0xFF0
 31504                           indf0	equ	0xFEF
 31505                           postinc0	equ	0xFEE
 31506                           fsr0h	equ	0xFEA
 31507                           fsr0l	equ	0xFE9
 31508                           wreg	equ	0xFE8
 31509                           indf1	equ	0xFE7
 31510                           postdec1	equ	0xFE5
 31511                           plusw1	equ	0xFE3
 31512                           fsr1h	equ	0xFE2
 31513                           fsr1l	equ	0xFE1
 31514                           indf2	equ	0xFDF
 31515                           postinc2	equ	0xFDE
 31516                           postdec2	equ	0xFDD
 31517                           plusw2	equ	0xFDB
 31518                           fsr2h	equ	0xFDA
 31519                           fsr2l	equ	0xFD9
 31520                           status	equ	0xFD8
 31521                           
 31522 ;; *************** function _i2c_set_frequency *****************
 31523 ;; Defined at:
 31524 ;;		line 123 in file "i2c.c"
 31525 ;; Parameters:    Size  Location     Type
 31526 ;;  frequency       1    wreg     enum E6622
 31527 ;; Auto vars:     Size  Location     Type
 31528 ;;  frequency       1    0[COMRAM] enum E6622
 31529 ;; Return value:  Size  Location     Type
 31530 ;;                  1    wreg      void 
 31531 ;; Registers used:
 31532 ;;		wreg, status,2, status,0
 31533 ;; Tracked objects:
 31534 ;;		On entry : 0/0
 31535 ;;		On exit  : 0/0
 31536 ;;		Unchanged: 0/0
 31537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31542 ;;Total ram usage:        1 bytes
 31543 ;; Hardware stack levels used:    1
 31544 ;; This function calls:
 31545 ;;		Nothing
 31546 ;; This function is called by:
 31547 ;;		_i2c_init
 31548 ;;		__ic2_display_set_address
 31549 ;;		_i2c_display_send_init_sequence
 31550 ;;		_i2c_display_cursor
 31551 ;;		_i2c_display_write_fixed
 31552 ;;		_i2c_digipot_reset_on
 31553 ;;		_i2c_digipot_reset_off
 31554 ;;		_i2c_digipot_backlight
 31555 ;;		_i2c_eeprom_writeByte
 31556 ;;		_i2c_eeprom_readByte
 31557 ;;		_i2c_display_write
 31558 ;;		_i2c_eeprom_write
 31559 ;;		_i2c_eeprom_read
 31560 ;; This function uses a non-reentrant model
 31561 ;;
 31562                           
 31563                           	psect	text156
 31564  00853E                     __ptext156:
 31565                           	opt stack 0
 31566  00853E                     _i2c_set_frequency:
 31567                           	opt stack 28
 31568                           
 31569                           ;incstack = 0
 31570                           ;i2c_set_frequency@frequency stored from wreg
 31571  00853E  6E01               	movwf	i2c_set_frequency@frequency,c
 31572                           
 31573                           ;i2c.c: 125: switch(frequency)
 31574  008540  D007               	goto	l1195
 31575  008542                     
 31576                           ;i2c.c: 128: SSP1ADD = 119;
 31577  008542  0E77               	movlw	119
 31578  008544  D003               	goto	L34
 31579  008546                     
 31580                           ;i2c.c: 131: SSP1ADD = 59;
 31581  008546  0E3B               	movlw	59
 31582  008548  D001               	goto	L34
 31583  00854A                     
 31584                           ;i2c.c: 134: SSP1ADD = 29;
 31585  00854A  0E1D               	movlw	29
 31586  00854C                     L34:
 31587  00854C  6EC8               	movwf	4040,c	;volatile
 31588                           
 31589                           ;i2c.c: 136: }
 31590                           
 31591                           ;i2c.c: 135: break;
 31592  00854E  D00A               	goto	l1197
 31593  008550                     l1195:
 31594  008550  5001               	movf	i2c_set_frequency@frequency,w,c
 31595                           
 31596                           ; Switch size 1, requested type "space"
 31597                           ; Number of cases is 3, Range of values is 0 to 2
 31598                           ; switch strategies available:
 31599                           ; Name         Instructions Cycles
 31600                           ; simple_byte           10     6 (average)
 31601                           ;	Chosen strategy is simple_byte
 31602  008552  0A00               	xorlw	0	; case 0
 31603  008554  B4D8               	btfsc	status,2,c
 31604  008556  D7F5               	goto	l1196
 31605  008558  0A01               	xorlw	1	; case 1
 31606  00855A  B4D8               	btfsc	status,2,c
 31607  00855C  D7F4               	goto	l1198
 31608  00855E  0A03               	xorlw	3	; case 2
 31609  008560  B4D8               	btfsc	status,2,c
 31610  008562  D7F3               	goto	l1199
 31611  008564                     l1197:
 31612                           
 31613                           ;i2c.c: 138: i2c_frequency = frequency;
 31614  008564  C001  F187         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31615  008568  0012               	return		;funcret
 31616  00856A                     __end_of_i2c_set_frequency:
 31617                           	opt stack 0
 31618                           tosu	equ	0xFFF
 31619                           tosh	equ	0xFFE
 31620                           tosl	equ	0xFFD
 31621                           pclath	equ	0xFFA
 31622                           tblptru	equ	0xFF8
 31623                           tblptrh	equ	0xFF7
 31624                           tblptrl	equ	0xFF6
 31625                           tablat	equ	0xFF5
 31626                           prodh	equ	0xFF4
 31627                           prodl	equ	0xFF3
 31628                           intcon	equ	0xFF2
 31629                           intcon2	equ	0xFF1
 31630                           intcon3	equ	0xFF0
 31631                           indf0	equ	0xFEF
 31632                           postinc0	equ	0xFEE
 31633                           fsr0h	equ	0xFEA
 31634                           fsr0l	equ	0xFE9
 31635                           wreg	equ	0xFE8
 31636                           indf1	equ	0xFE7
 31637                           postdec1	equ	0xFE5
 31638                           plusw1	equ	0xFE3
 31639                           fsr1h	equ	0xFE2
 31640                           fsr1l	equ	0xFE1
 31641                           indf2	equ	0xFDF
 31642                           postinc2	equ	0xFDE
 31643                           postdec2	equ	0xFDD
 31644                           plusw2	equ	0xFDB
 31645                           fsr2h	equ	0xFDA
 31646                           fsr2l	equ	0xFD9
 31647                           status	equ	0xFD8
 31648                           
 31649 ;; *************** function __i2c_write *****************
 31650 ;; Defined at:
 31651 ;;		line 142 in file "i2c.c"
 31652 ;; Parameters:    Size  Location     Type
 31653 ;;  slave_addres    1    wreg     unsigned char 
 31654 ;;  data            2    5[COMRAM] PTR unsigned char 
 31655 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31656 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 31657 ;;		 -> _ic2_display_set_address@data_array(2), 
 31658 ;;  length          1    7[COMRAM] unsigned char 
 31659 ;; Auto vars:     Size  Location     Type
 31660 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31661 ;;  cntr            1    9[COMRAM] unsigned char 
 31662 ;; Return value:  Size  Location     Type
 31663 ;;                  1    wreg      void 
 31664 ;; Registers used:
 31665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31666 ;; Tracked objects:
 31667 ;;		On entry : 0/0
 31668 ;;		On exit  : 0/0
 31669 ;;		Unchanged: 0/0
 31670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31674 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31675 ;;Total ram usage:        5 bytes
 31676 ;; Hardware stack levels used:    1
 31677 ;; Hardware stack levels required when called:    1
 31678 ;; This function calls:
 31679 ;;		__i2c_send
 31680 ;;		__i2c_start
 31681 ;;		__i2c_stop
 31682 ;;		__i2c_wait_idle
 31683 ;; This function is called by:
 31684 ;;		__ic2_display_set_address
 31685 ;;		_i2c_display_send_init_sequence
 31686 ;;		_i2c_digipot_reset_on
 31687 ;;		_i2c_digipot_reset_off
 31688 ;;		_i2c_digipot_backlight
 31689 ;;		_i2c_eeprom_writeByte
 31690 ;;		_i2c_eeprom_readByte
 31691 ;;		_i2c_eeprom_write
 31692 ;;		_i2c_eeprom_read
 31693 ;; This function uses a non-reentrant model
 31694 ;;
 31695                           
 31696                           	psect	text157
 31697  007EDE                     __ptext157:
 31698                           	opt stack 0
 31699  007EDE                     __i2c_write:
 31700                           	opt stack 27
 31701                           
 31702                           ;incstack = 0
 31703                           ;__i2c_write@slave_address stored from wreg
 31704  007EDE  6E09               	movwf	__i2c_write@slave_address,c
 31705                           
 31706                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 31707  007EE0  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 31708                           
 31709                           ;i2c.c: 147: _i2c_start();
 31710  007EE4  ECC9  F044         	call	__i2c_start	;wreg free
 31711                           
 31712                           ;i2c.c: 148: _i2c_wait_idle();
 31713  007EE8  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 31714                           
 31715                           ;i2c.c: 149: _i2c_send(slave_address);
 31716  007EEC  5009               	movf	__i2c_write@slave_address,w,c
 31717  007EEE  ECCD  F044         	call	__i2c_send
 31718                           
 31719                           ;i2c.c: 150: _i2c_wait_idle();
 31720  007EF2  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 31721                           
 31722                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 31723  007EF6  0E00               	movlw	0
 31724  007EF8  6E0A               	movwf	__i2c_write@cntr,c
 31725  007EFA  D00E               	goto	l1203
 31726  007EFC                     
 31727                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 31728  007EFC  500A               	movf	__i2c_write@cntr,w,c
 31729  007EFE  0D01               	mullw	1
 31730  007F00  50F3               	movf	prodl,w,c
 31731  007F02  2406               	addwf	__i2c_write@data,w,c
 31732  007F04  6ED9               	movwf	fsr2l,c
 31733  007F06  50F4               	movf	prodh,w,c
 31734  007F08  2007               	addwfc	__i2c_write@data+1,w,c
 31735  007F0A  6EDA               	movwf	fsr2h,c
 31736  007F0C  50DF               	movf	indf2,w,c
 31737  007F0E  ECCD  F044         	call	__i2c_send
 31738                           
 31739                           ;i2c.c: 155: _i2c_wait_idle();
 31740  007F12  ECA1  F03C         	call	__i2c_wait_idle	;wreg free
 31741  007F16  2A0A               	incf	__i2c_write@cntr,f,c
 31742  007F18                     l1203:
 31743  007F18  5008               	movf	__i2c_write@length,w,c
 31744  007F1A  5C0A               	subwf	__i2c_write@cntr,w,c
 31745  007F1C  A0D8               	btfss	status,0,c
 31746  007F1E  D7EE               	goto	l1204
 31747                           
 31748                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 31749  007F20  ECC5  F044         	call	__i2c_stop	;wreg free
 31750  007F24  0012               	return		;funcret
 31751  007F26                     __end_of__i2c_write:
 31752                           	opt stack 0
 31753                           tosu	equ	0xFFF
 31754                           tosh	equ	0xFFE
 31755                           tosl	equ	0xFFD
 31756                           pclath	equ	0xFFA
 31757                           tblptru	equ	0xFF8
 31758                           tblptrh	equ	0xFF7
 31759                           tblptrl	equ	0xFF6
 31760                           tablat	equ	0xFF5
 31761                           prodh	equ	0xFF4
 31762                           prodl	equ	0xFF3
 31763                           intcon	equ	0xFF2
 31764                           intcon2	equ	0xFF1
 31765                           intcon3	equ	0xFF0
 31766                           indf0	equ	0xFEF
 31767                           postinc0	equ	0xFEE
 31768                           fsr0h	equ	0xFEA
 31769                           fsr0l	equ	0xFE9
 31770                           wreg	equ	0xFE8
 31771                           indf1	equ	0xFE7
 31772                           postdec1	equ	0xFE5
 31773                           plusw1	equ	0xFE3
 31774                           fsr1h	equ	0xFE2
 31775                           fsr1l	equ	0xFE1
 31776                           indf2	equ	0xFDF
 31777                           postinc2	equ	0xFDE
 31778                           postdec2	equ	0xFDD
 31779                           plusw2	equ	0xFDB
 31780                           fsr2h	equ	0xFDA
 31781                           fsr2l	equ	0xFD9
 31782                           status	equ	0xFD8
 31783                           
 31784 ;; *************** function __i2c_wait_idle *****************
 31785 ;; Defined at:
 31786 ;;		line 48 in file "i2c.c"
 31787 ;; Parameters:    Size  Location     Type
 31788 ;;		None
 31789 ;; Auto vars:     Size  Location     Type
 31790 ;;		None
 31791 ;; Return value:  Size  Location     Type
 31792 ;;                  1    wreg      void 
 31793 ;; Registers used:
 31794 ;;		wreg, status,2, status,0
 31795 ;; Tracked objects:
 31796 ;;		On entry : 0/0
 31797 ;;		On exit  : 0/0
 31798 ;;		Unchanged: 0/0
 31799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31802 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31803 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31804 ;;Total ram usage:        5 bytes
 31805 ;; Hardware stack levels used:    1
 31806 ;; This function calls:
 31807 ;;		Nothing
 31808 ;; This function is called by:
 31809 ;;		__i2c_write
 31810 ;;		__i2c_read
 31811 ;;		_i2c_display_write_fixed
 31812 ;;		_i2c_display_write
 31813 ;; This function uses a non-reentrant model
 31814 ;;
 31815                           
 31816                           	psect	text158
 31817  007942                     __ptext158:
 31818                           	opt stack 0
 31819  007942                     __i2c_wait_idle:
 31820                           	opt stack 27
 31821                           
 31822                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31823                           
 31824                           ;incstack = 0
 31825  007942  A4C7               	btfss	4039,2,c	;volatile
 31826  007944  D003               	goto	u6620
 31827  007946  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31828  007948  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31829  00794A  D001               	goto	u6628
 31830  00794C                     u6620:
 31831  00794C  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31832  00794E                     u6628:
 31833  00794E  A0C5               	btfss	4037,0,c	;volatile
 31834  007950  D003               	goto	u6630
 31835  007952  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31836  007954  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31837  007956  D001               	goto	u6638
 31838  007958                     u6630:
 31839  007958  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31840  00795A                     u6638:
 31841  00795A  A2C5               	btfss	4037,1,c	;volatile
 31842  00795C  D003               	goto	u6640
 31843  00795E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31844  007960  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31845  007962  D001               	goto	u6648
 31846  007964                     u6640:
 31847  007964  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31848  007966                     u6648:
 31849  007966  A4C5               	btfss	4037,2,c	;volatile
 31850  007968  D003               	goto	u6650
 31851  00796A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31852  00796C  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31853  00796E  D001               	goto	u6658
 31854  007970                     u6650:
 31855  007970  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31856  007972                     u6658:
 31857  007972  A6C5               	btfss	4037,3,c	;volatile
 31858  007974  D003               	goto	u6660
 31859  007976  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31860  007978  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31861  00797A  D001               	goto	u6668
 31862  00797C                     u6660:
 31863  00797C  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31864  00797E                     u6668:
 31865  00797E  A8C5               	btfss	4037,4,c	;volatile
 31866  007980  D002               	goto	u6670
 31867  007982  0E01               	movlw	1
 31868  007984  D001               	goto	u6676
 31869  007986                     u6670:
 31870  007986  0E00               	movlw	0
 31871  007988                     u6676:
 31872  007988  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31873  00798A  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31874  00798C  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31875  00798E  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31876  007990  1001               	iorwf	??__i2c_wait_idle,w,c
 31877  007992  0900               	iorlw	0
 31878  007994  B4D8               	btfsc	status,2,c
 31879  007996  0012               	return	
 31880  007998  D7D4               	goto	__i2c_wait_idle
 31881  00799A                     __end_of__i2c_wait_idle:
 31882                           	opt stack 0
 31883                           tosu	equ	0xFFF
 31884                           tosh	equ	0xFFE
 31885                           tosl	equ	0xFFD
 31886                           pclath	equ	0xFFA
 31887                           tblptru	equ	0xFF8
 31888                           tblptrh	equ	0xFF7
 31889                           tblptrl	equ	0xFF6
 31890                           tablat	equ	0xFF5
 31891                           prodh	equ	0xFF4
 31892                           prodl	equ	0xFF3
 31893                           intcon	equ	0xFF2
 31894                           intcon2	equ	0xFF1
 31895                           intcon3	equ	0xFF0
 31896                           indf0	equ	0xFEF
 31897                           postinc0	equ	0xFEE
 31898                           fsr0h	equ	0xFEA
 31899                           fsr0l	equ	0xFE9
 31900                           wreg	equ	0xFE8
 31901                           indf1	equ	0xFE7
 31902                           postdec1	equ	0xFE5
 31903                           plusw1	equ	0xFE3
 31904                           fsr1h	equ	0xFE2
 31905                           fsr1l	equ	0xFE1
 31906                           indf2	equ	0xFDF
 31907                           postinc2	equ	0xFDE
 31908                           postdec2	equ	0xFDD
 31909                           plusw2	equ	0xFDB
 31910                           fsr2h	equ	0xFDA
 31911                           fsr2l	equ	0xFD9
 31912                           status	equ	0xFD8
 31913                           
 31914 ;; *************** function __i2c_stop *****************
 31915 ;; Defined at:
 31916 ;;		line 75 in file "i2c.c"
 31917 ;; Parameters:    Size  Location     Type
 31918 ;;		None
 31919 ;; Auto vars:     Size  Location     Type
 31920 ;;		None
 31921 ;; Return value:  Size  Location     Type
 31922 ;;                  1    wreg      void 
 31923 ;; Registers used:
 31924 ;;		None
 31925 ;; Tracked objects:
 31926 ;;		On entry : 0/0
 31927 ;;		On exit  : 0/0
 31928 ;;		Unchanged: 0/0
 31929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31934 ;;Total ram usage:        0 bytes
 31935 ;; Hardware stack levels used:    1
 31936 ;; This function calls:
 31937 ;;		Nothing
 31938 ;; This function is called by:
 31939 ;;		__i2c_write
 31940 ;;		__i2c_read
 31941 ;;		_i2c_display_write_fixed
 31942 ;;		_i2c_display_write
 31943 ;; This function uses a non-reentrant model
 31944 ;;
 31945                           
 31946                           	psect	text159
 31947  00898A                     __ptext159:
 31948                           	opt stack 0
 31949  00898A                     __i2c_stop:
 31950                           	opt stack 27
 31951                           
 31952                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 31953                           
 31954                           ;incstack = 0
 31955  00898A  84C5               	bsf	4037,2,c	;volatile
 31956  00898C  A4C5               	btfss	4037,2,c	;volatile
 31957  00898E  0012               	return	
 31958  008990  D7FD               	goto	l1169
 31959  008992                     __end_of__i2c_stop:
 31960                           	opt stack 0
 31961                           tosu	equ	0xFFF
 31962                           tosh	equ	0xFFE
 31963                           tosl	equ	0xFFD
 31964                           pclath	equ	0xFFA
 31965                           tblptru	equ	0xFF8
 31966                           tblptrh	equ	0xFF7
 31967                           tblptrl	equ	0xFF6
 31968                           tablat	equ	0xFF5
 31969                           prodh	equ	0xFF4
 31970                           prodl	equ	0xFF3
 31971                           intcon	equ	0xFF2
 31972                           intcon2	equ	0xFF1
 31973                           intcon3	equ	0xFF0
 31974                           indf0	equ	0xFEF
 31975                           postinc0	equ	0xFEE
 31976                           fsr0h	equ	0xFEA
 31977                           fsr0l	equ	0xFE9
 31978                           wreg	equ	0xFE8
 31979                           indf1	equ	0xFE7
 31980                           postdec1	equ	0xFE5
 31981                           plusw1	equ	0xFE3
 31982                           fsr1h	equ	0xFE2
 31983                           fsr1l	equ	0xFE1
 31984                           indf2	equ	0xFDF
 31985                           postinc2	equ	0xFDE
 31986                           postdec2	equ	0xFDD
 31987                           plusw2	equ	0xFDB
 31988                           fsr2h	equ	0xFDA
 31989                           fsr2l	equ	0xFD9
 31990                           status	equ	0xFD8
 31991                           
 31992 ;; *************** function __i2c_start *****************
 31993 ;; Defined at:
 31994 ;;		line 54 in file "i2c.c"
 31995 ;; Parameters:    Size  Location     Type
 31996 ;;		None
 31997 ;; Auto vars:     Size  Location     Type
 31998 ;;		None
 31999 ;; Return value:  Size  Location     Type
 32000 ;;                  1    wreg      void 
 32001 ;; Registers used:
 32002 ;;		None
 32003 ;; Tracked objects:
 32004 ;;		On entry : 0/0
 32005 ;;		On exit  : 0/0
 32006 ;;		Unchanged: 0/0
 32007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32012 ;;Total ram usage:        0 bytes
 32013 ;; Hardware stack levels used:    1
 32014 ;; This function calls:
 32015 ;;		Nothing
 32016 ;; This function is called by:
 32017 ;;		__i2c_write
 32018 ;;		__i2c_read
 32019 ;;		_i2c_display_write_fixed
 32020 ;;		_i2c_display_write
 32021 ;; This function uses a non-reentrant model
 32022 ;;
 32023                           
 32024                           	psect	text160
 32025  008992                     __ptext160:
 32026                           	opt stack 0
 32027  008992                     __i2c_start:
 32028                           	opt stack 27
 32029                           
 32030                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32031                           
 32032                           ;incstack = 0
 32033  008992  80C5               	bsf	4037,0,c	;volatile
 32034  008994  A0C5               	btfss	4037,0,c	;volatile
 32035  008996  0012               	return	
 32036  008998  D7FD               	goto	l1154
 32037  00899A                     __end_of__i2c_start:
 32038                           	opt stack 0
 32039                           tosu	equ	0xFFF
 32040                           tosh	equ	0xFFE
 32041                           tosl	equ	0xFFD
 32042                           pclath	equ	0xFFA
 32043                           tblptru	equ	0xFF8
 32044                           tblptrh	equ	0xFF7
 32045                           tblptrl	equ	0xFF6
 32046                           tablat	equ	0xFF5
 32047                           prodh	equ	0xFF4
 32048                           prodl	equ	0xFF3
 32049                           intcon	equ	0xFF2
 32050                           intcon2	equ	0xFF1
 32051                           intcon3	equ	0xFF0
 32052                           indf0	equ	0xFEF
 32053                           postinc0	equ	0xFEE
 32054                           fsr0h	equ	0xFEA
 32055                           fsr0l	equ	0xFE9
 32056                           wreg	equ	0xFE8
 32057                           indf1	equ	0xFE7
 32058                           postdec1	equ	0xFE5
 32059                           plusw1	equ	0xFE3
 32060                           fsr1h	equ	0xFE2
 32061                           fsr1l	equ	0xFE1
 32062                           indf2	equ	0xFDF
 32063                           postinc2	equ	0xFDE
 32064                           postdec2	equ	0xFDD
 32065                           plusw2	equ	0xFDB
 32066                           fsr2h	equ	0xFDA
 32067                           fsr2l	equ	0xFD9
 32068                           status	equ	0xFD8
 32069                           
 32070 ;; *************** function __i2c_send *****************
 32071 ;; Defined at:
 32072 ;;		line 61 in file "i2c.c"
 32073 ;; Parameters:    Size  Location     Type
 32074 ;;  dat             1    wreg     unsigned char 
 32075 ;; Auto vars:     Size  Location     Type
 32076 ;;  dat             1    0[COMRAM] unsigned char 
 32077 ;; Return value:  Size  Location     Type
 32078 ;;                  1    wreg      void 
 32079 ;; Registers used:
 32080 ;;		wreg
 32081 ;; Tracked objects:
 32082 ;;		On entry : 0/0
 32083 ;;		On exit  : 0/0
 32084 ;;		Unchanged: 0/0
 32085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32090 ;;Total ram usage:        1 bytes
 32091 ;; Hardware stack levels used:    1
 32092 ;; This function calls:
 32093 ;;		Nothing
 32094 ;; This function is called by:
 32095 ;;		__i2c_write
 32096 ;;		__i2c_read
 32097 ;;		_i2c_display_write_fixed
 32098 ;;		_i2c_display_write
 32099 ;; This function uses a non-reentrant model
 32100 ;;
 32101                           
 32102                           	psect	text161
 32103  00899A                     __ptext161:
 32104                           	opt stack 0
 32105  00899A                     __i2c_send:
 32106                           	opt stack 27
 32107                           
 32108                           ;incstack = 0
 32109                           ;__i2c_send@dat stored from wreg
 32110  00899A  6E01               	movwf	__i2c_send@dat,c
 32111                           
 32112                           ;i2c.c: 63: SSP1BUF = dat;
 32113  00899C  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32114  0089A0  0012               	return		;funcret
 32115  0089A2                     __end_of__i2c_send:
 32116                           	opt stack 0
 32117                           tosu	equ	0xFFF
 32118                           tosh	equ	0xFFE
 32119                           tosl	equ	0xFFD
 32120                           pclath	equ	0xFFA
 32121                           tblptru	equ	0xFF8
 32122                           tblptrh	equ	0xFF7
 32123                           tblptrl	equ	0xFF6
 32124                           tablat	equ	0xFF5
 32125                           prodh	equ	0xFF4
 32126                           prodl	equ	0xFF3
 32127                           intcon	equ	0xFF2
 32128                           intcon2	equ	0xFF1
 32129                           intcon3	equ	0xFF0
 32130                           indf0	equ	0xFEF
 32131                           postinc0	equ	0xFEE
 32132                           fsr0h	equ	0xFEA
 32133                           fsr0l	equ	0xFE9
 32134                           wreg	equ	0xFE8
 32135                           indf1	equ	0xFE7
 32136                           postdec1	equ	0xFE5
 32137                           plusw1	equ	0xFE3
 32138                           fsr1h	equ	0xFE2
 32139                           fsr1l	equ	0xFE1
 32140                           indf2	equ	0xFDF
 32141                           postinc2	equ	0xFDE
 32142                           postdec2	equ	0xFDD
 32143                           plusw2	equ	0xFDB
 32144                           fsr2h	equ	0xFDA
 32145                           fsr2l	equ	0xFD9
 32146                           status	equ	0xFD8
 32147                           
 32148 ;; *************** function __parse_command_long *****************
 32149 ;; Defined at:
 32150 ;;		line 475 in file "api.c"
 32151 ;; Parameters:    Size  Location     Type
 32152 ;;  data            2   91[COMRAM] PTR unsigned char 
 32153 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32154 ;; Auto vars:     Size  Location     Type
 32155 ;;  length          1   93[COMRAM] unsigned char 
 32156 ;; Return value:  Size  Location     Type
 32157 ;;                  1    wreg      unsigned char 
 32158 ;; Registers used:
 32159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32160 ;; Tracked objects:
 32161 ;;		On entry : 0/0
 32162 ;;		On exit  : 0/0
 32163 ;;		Unchanged: 0/0
 32164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32169 ;;Total ram usage:        3 bytes
 32170 ;; Hardware stack levels used:    1
 32171 ;; Hardware stack levels required when called:    9
 32172 ;; This function calls:
 32173 ;;		__parse_file_append
 32174 ;;		__parse_file_create
 32175 ;;		__parse_file_delete
 32176 ;;		__parse_file_modify
 32177 ;;		__parse_file_rename
 32178 ;;		__parse_file_resize
 32179 ;;		__parse_format_drive
 32180 ;; This function is called by:
 32181 ;;		_api_parse
 32182 ;; This function uses a non-reentrant model
 32183 ;;
 32184                           
 32185                           	psect	text162
 32186  0064FA                     __ptext162:
 32187                           	opt stack 0
 32188  0064FA                     __parse_command_long:
 32189                           	opt stack 20
 32190                           
 32191                           ;api.c: 477: uint8_t length = 65;
 32192                           
 32193                           ;incstack = 0
 32194  0064FA  0E41               	movlw	65
 32195  0064FC  6E5E               	movwf	__parse_command_long@length,c
 32196                           
 32197                           ;api.c: 479: switch(data[0])
 32198  0064FE  D032               	goto	l2710
 32199  006500                     
 32200                           ;api.c: 482: length = _parse_file_resize(data);
 32201  006500  C05C  F047         	movff	__parse_command_long@data,__parse_file_resize@data
 32202  006504  C05D  F048         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 32203  006508  EC98  F02A         	call	__parse_file_resize	;wreg free
 32204  00650C  D029               	goto	L40
 32205  00650E                     
 32206                           ;api.c: 486: length = _parse_file_delete(data);
 32207  00650E  C05C  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 32208  006512  C05D  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32209  006516  ECD2  F03E         	call	__parse_file_delete	;wreg free
 32210  00651A  D022               	goto	L40
 32211  00651C                     
 32212                           ;api.c: 490: length = _parse_file_create(data);
 32213  00651C  C05C  F050         	movff	__parse_command_long@data,__parse_file_create@data
 32214  006520  C05D  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32215  006524  ECED  F027         	call	__parse_file_create	;wreg free
 32216  006528  D01B               	goto	L40
 32217  00652A                     
 32218                           ;api.c: 494: length = _parse_file_rename(data);
 32219  00652A  C05C  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 32220  00652E  C05D  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32221  006532  EC1E  F03A         	call	__parse_file_rename	;wreg free
 32222  006536  D014               	goto	L40
 32223  006538                     
 32224                           ;api.c: 498: length = _parse_file_append(data);
 32225  006538  C05C  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 32226  00653C  C05D  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32227  006540  EC5F  F037         	call	__parse_file_append	;wreg free
 32228  006544  D00D               	goto	L40
 32229  006546                     
 32230                           ;api.c: 502: length = _parse_file_modify(data);
 32231  006546  C05C  F053         	movff	__parse_command_long@data,__parse_file_modify@data
 32232  00654A  C05D  F054         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32233  00654E  ECD3  F023         	call	__parse_file_modify	;wreg free
 32234  006552  D006               	goto	L40
 32235  006554                     
 32236                           ;api.c: 506: length = _parse_format_drive(data);
 32237  006554  C05C  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32238  006558  C05D  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32239  00655C  ECD9  F03F         	call	__parse_format_drive	;wreg free
 32240  006560                     L40:
 32241  006560  6E5E               	movwf	__parse_command_long@length,c
 32242                           
 32243                           ;api.c: 508: }
 32244                           
 32245                           ;api.c: 507: break;
 32246  006562  D01A               	goto	l2712
 32247  006564                     l2710:
 32248  006564  C05C  FFD9         	movff	__parse_command_long@data,fsr2l
 32249  006568  C05D  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32250  00656C  50DF               	movf	indf2,w,c
 32251                           
 32252                           ; Switch size 1, requested type "space"
 32253                           ; Number of cases is 7, Range of values is 80 to 86
 32254                           ; switch strategies available:
 32255                           ; Name         Instructions Cycles
 32256                           ; simple_byte           22    12 (average)
 32257                           ;	Chosen strategy is simple_byte
 32258  00656E  0A50               	xorlw	80	; case 80
 32259  006570  B4D8               	btfsc	status,2,c
 32260  006572  D7C6               	goto	l2711
 32261  006574  0A01               	xorlw	1	; case 81
 32262  006576  B4D8               	btfsc	status,2,c
 32263  006578  D7CA               	goto	l2713
 32264  00657A  0A03               	xorlw	3	; case 82
 32265  00657C  B4D8               	btfsc	status,2,c
 32266  00657E  D7CE               	goto	l2714
 32267  006580  0A01               	xorlw	1	; case 83
 32268  006582  B4D8               	btfsc	status,2,c
 32269  006584  D7D2               	goto	l2715
 32270  006586  0A07               	xorlw	7	; case 84
 32271  006588  B4D8               	btfsc	status,2,c
 32272  00658A  D7D6               	goto	l2716
 32273  00658C  0A01               	xorlw	1	; case 85
 32274  00658E  B4D8               	btfsc	status,2,c
 32275  006590  D7DA               	goto	l2717
 32276  006592  0A03               	xorlw	3	; case 86
 32277  006594  B4D8               	btfsc	status,2,c
 32278  006596  D7DE               	goto	l2718
 32279  006598                     l2712:
 32280                           
 32281                           ;api.c: 510: return length;
 32282  006598  505E               	movf	__parse_command_long@length,w,c
 32283  00659A  0012               	return	
 32284  00659C                     __end_of__parse_command_long:
 32285                           	opt stack 0
 32286                           tosu	equ	0xFFF
 32287                           tosh	equ	0xFFE
 32288                           tosl	equ	0xFFD
 32289                           pclath	equ	0xFFA
 32290                           tblptru	equ	0xFF8
 32291                           tblptrh	equ	0xFF7
 32292                           tblptrl	equ	0xFF6
 32293                           tablat	equ	0xFF5
 32294                           prodh	equ	0xFF4
 32295                           prodl	equ	0xFF3
 32296                           intcon	equ	0xFF2
 32297                           intcon2	equ	0xFF1
 32298                           intcon3	equ	0xFF0
 32299                           indf0	equ	0xFEF
 32300                           postinc0	equ	0xFEE
 32301                           fsr0h	equ	0xFEA
 32302                           fsr0l	equ	0xFE9
 32303                           wreg	equ	0xFE8
 32304                           indf1	equ	0xFE7
 32305                           postdec1	equ	0xFE5
 32306                           plusw1	equ	0xFE3
 32307                           fsr1h	equ	0xFE2
 32308                           fsr1l	equ	0xFE1
 32309                           indf2	equ	0xFDF
 32310                           postinc2	equ	0xFDE
 32311                           postdec2	equ	0xFDD
 32312                           plusw2	equ	0xFDB
 32313                           fsr2h	equ	0xFDA
 32314                           fsr2l	equ	0xFD9
 32315                           status	equ	0xFD8
 32316                           
 32317 ;; *************** function __parse_format_drive *****************
 32318 ;; Defined at:
 32319 ;;		line 629 in file "api.c"
 32320 ;; Parameters:    Size  Location     Type
 32321 ;;  data            2   38[COMRAM] PTR unsigned char 
 32322 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32323 ;; Auto vars:     Size  Location     Type
 32324 ;;		None
 32325 ;; Return value:  Size  Location     Type
 32326 ;;                  1    wreg      unsigned char 
 32327 ;; Registers used:
 32328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32329 ;; Tracked objects:
 32330 ;;		On entry : 0/0
 32331 ;;		On exit  : 0/0
 32332 ;;		Unchanged: 0/0
 32333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32337 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32338 ;;Total ram usage:        3 bytes
 32339 ;; Hardware stack levels used:    1
 32340 ;; Hardware stack levels required when called:    6
 32341 ;; This function calls:
 32342 ;;		_fat_format
 32343 ;; This function is called by:
 32344 ;;		__parse_command_long
 32345 ;; This function uses a non-reentrant model
 32346 ;;
 32347                           
 32348                           	psect	text163
 32349  007FB2                     __ptext163:
 32350                           	opt stack 0
 32351  007FB2                     __parse_format_drive:
 32352                           	opt stack 22
 32353                           
 32354                           ;api.c: 632: if((data[0]!=COMMAND_FORMAT_DRIVE) || (data[1]!=0xDA) || (data[2]!=0x22))
 32355                           
 32356                           ;incstack = 0
 32357  007FB2  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 32358  007FB6  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 32359  007FBA  0E56               	movlw	86
 32360  007FBC  18DE               	xorwf	postinc2,w,c
 32361  007FBE  A4D8               	btfss	status,2,c
 32362  007FC0  D014               	goto	u10600
 32363  007FC2  EE20 F001          	lfsr	2,1
 32364  007FC6  5027               	movf	__parse_format_drive@data,w,c
 32365  007FC8  26D9               	addwf	fsr2l,f,c
 32366  007FCA  5028               	movf	__parse_format_drive@data+1,w,c
 32367  007FCC  22DA               	addwfc	fsr2h,f,c
 32368  007FCE  0EDA               	movlw	218
 32369  007FD0  18DE               	xorwf	postinc2,w,c
 32370  007FD2  A4D8               	btfss	status,2,c
 32371  007FD4  D00A               	goto	u10600
 32372  007FD6  EE20 F002          	lfsr	2,2
 32373  007FDA  5027               	movf	__parse_format_drive@data,w,c
 32374  007FDC  26D9               	addwf	fsr2l,f,c
 32375  007FDE  5028               	movf	__parse_format_drive@data+1,w,c
 32376  007FE0  22DA               	addwfc	fsr2h,f,c
 32377  007FE2  0E22               	movlw	34
 32378  007FE4  18DE               	xorwf	postinc2,w,c
 32379  007FE6  B4D8               	btfsc	status,2,c
 32380  007FE8  D002               	goto	l2758
 32381  007FEA                     u10600:
 32382                           
 32383                           ;api.c: 633: {;api.c: 634: return 3;
 32384  007FEA  0E03               	movlw	3
 32385  007FEC  0012               	return	
 32386  007FEE                     l2758:
 32387                           
 32388                           ;api.c: 635: };api.c: 636: fat_format();
 32389  007FEE  EC46  F015         	call	_fat_format	;wreg free
 32390                           
 32391                           ;api.c: 637: return 3;
 32392  007FF2  0E03               	movlw	3
 32393  007FF4  0012               	return	
 32394  007FF6                     __end_of__parse_format_drive:
 32395                           	opt stack 0
 32396                           tosu	equ	0xFFF
 32397                           tosh	equ	0xFFE
 32398                           tosl	equ	0xFFD
 32399                           pclath	equ	0xFFA
 32400                           tblptru	equ	0xFF8
 32401                           tblptrh	equ	0xFF7
 32402                           tblptrl	equ	0xFF6
 32403                           tablat	equ	0xFF5
 32404                           prodh	equ	0xFF4
 32405                           prodl	equ	0xFF3
 32406                           intcon	equ	0xFF2
 32407                           intcon2	equ	0xFF1
 32408                           intcon3	equ	0xFF0
 32409                           indf0	equ	0xFEF
 32410                           postinc0	equ	0xFEE
 32411                           fsr0h	equ	0xFEA
 32412                           fsr0l	equ	0xFE9
 32413                           wreg	equ	0xFE8
 32414                           indf1	equ	0xFE7
 32415                           postdec1	equ	0xFE5
 32416                           plusw1	equ	0xFE3
 32417                           fsr1h	equ	0xFE2
 32418                           fsr1l	equ	0xFE1
 32419                           indf2	equ	0xFDF
 32420                           postinc2	equ	0xFDE
 32421                           postdec2	equ	0xFDD
 32422                           plusw2	equ	0xFDB
 32423                           fsr2h	equ	0xFDA
 32424                           fsr2l	equ	0xFD9
 32425                           status	equ	0xFD8
 32426                           
 32427 ;; *************** function _fat_format *****************
 32428 ;; Defined at:
 32429 ;;		line 1127 in file "fat16.c"
 32430 ;; Parameters:    Size  Location     Type
 32431 ;;		None
 32432 ;; Auto vars:     Size  Location     Type
 32433 ;;  cntr            2   36[COMRAM] unsigned int 
 32434 ;; Return value:  Size  Location     Type
 32435 ;;                  1    wreg      void 
 32436 ;; Registers used:
 32437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32438 ;; Tracked objects:
 32439 ;;		On entry : 0/0
 32440 ;;		On exit  : 0/0
 32441 ;;		Unchanged: 0/0
 32442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32447 ;;Total ram usage:        2 bytes
 32448 ;; Hardware stack levels used:    1
 32449 ;; Hardware stack levels required when called:    5
 32450 ;; This function calls:
 32451 ;;		__get_data
 32452 ;;		__get_fat
 32453 ;;		__get_fbr
 32454 ;;		__get_mbr
 32455 ;;		__get_root
 32456 ;;		_flash_page_write
 32457 ;; This function is called by:
 32458 ;;		_fat_init
 32459 ;;		__parse_format_drive
 32460 ;; This function uses a non-reentrant model
 32461 ;;
 32462                           
 32463                           	psect	text164
 32464  002A8C                     __ptext164:
 32465                           	opt stack 0
 32466  002A8C                     _fat_format:
 32467                           	opt stack 23
 32468                           
 32469                           ;fat16.c: 1129: uint16_t cntr;;fat16.c: 1132: for(cntr=0; cntr<512; ++cntr)
 32470                           
 32471                           ;incstack = 0
 32472  002A8C  0E00               	movlw	0
 32473  002A8E  6E26               	movwf	fat_format@cntr+1,c
 32474  002A90  0E00               	movlw	0
 32475  002A92  6E25               	movwf	fat_format@cntr,c
 32476  002A94                     l12978:
 32477  002A94  0E02               	movlw	2
 32478  002A96  5C26               	subwf	fat_format@cntr+1,w,c
 32479  002A98  B0D8               	btfsc	status,0,c
 32480  002A9A  D010               	goto	u9940
 32481                           
 32482                           ;fat16.c: 1133: {;fat16.c: 1134: buffer[cntr] = _get_mbr(cntr);
 32483  002A9C  0E80               	movlw	low _buffer
 32484  002A9E  2425               	addwf	fat_format@cntr,w,c
 32485  002AA0  6ED9               	movwf	fsr2l,c
 32486  002AA2  0E03               	movlw	high _buffer
 32487  002AA4  2026               	addwfc	fat_format@cntr+1,w,c
 32488  002AA6  6EDA               	movwf	fsr2h,c
 32489  002AA8  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 32490  002AAC  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 32491  002AB0  EC23  F02D         	call	__get_mbr	;wreg free
 32492  002AB4  6EDF               	movwf	indf2,c
 32493  002AB6  4A25               	infsnz	fat_format@cntr,f,c
 32494  002AB8  2A26               	incf	fat_format@cntr+1,f,c
 32495  002ABA  D7EC               	goto	l12978
 32496  002ABC                     u9940:
 32497                           
 32498                           ;fat16.c: 1135: };fat16.c: 1136: flash_page_write(0, buffer);
 32499  002ABC  0E00               	movlw	0
 32500  002ABE  6E21               	movwf	flash_page_write@page+1,c
 32501  002AC0  0E00               	movlw	0
 32502  002AC2  6E20               	movwf	flash_page_write@page,c
 32503  002AC4  0E80               	movlw	low _buffer
 32504  002AC6  6E22               	movwf	flash_page_write@data,c
 32505  002AC8  0E03               	movlw	high _buffer
 32506  002ACA  6E23               	movwf	flash_page_write@data+1,c
 32507  002ACC  ECFE  F03D         	call	_flash_page_write	;wreg free
 32508                           
 32509                           ;fat16.c: 1139: for(cntr=0; cntr<512; ++cntr)
 32510  002AD0  0E00               	movlw	0
 32511  002AD2  6E26               	movwf	fat_format@cntr+1,c
 32512  002AD4  0E00               	movlw	0
 32513  002AD6  6E25               	movwf	fat_format@cntr,c
 32514  002AD8                     l12992:
 32515  002AD8  0E02               	movlw	2
 32516  002ADA  5C26               	subwf	fat_format@cntr+1,w,c
 32517  002ADC  B0D8               	btfsc	status,0,c
 32518  002ADE  D010               	goto	u9960
 32519                           
 32520                           ;fat16.c: 1140: {;fat16.c: 1141: buffer[cntr] = _get_fbr(cntr);
 32521  002AE0  0E80               	movlw	low _buffer
 32522  002AE2  2425               	addwf	fat_format@cntr,w,c
 32523  002AE4  6ED9               	movwf	fsr2l,c
 32524  002AE6  0E03               	movlw	high _buffer
 32525  002AE8  2026               	addwfc	fat_format@cntr+1,w,c
 32526  002AEA  6EDA               	movwf	fsr2h,c
 32527  002AEC  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 32528  002AF0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 32529  002AF4  EC66  F00D         	call	__get_fbr	;wreg free
 32530  002AF8  6EDF               	movwf	indf2,c
 32531  002AFA  4A25               	infsnz	fat_format@cntr,f,c
 32532  002AFC  2A26               	incf	fat_format@cntr+1,f,c
 32533  002AFE  D7EC               	goto	l12992
 32534  002B00                     u9960:
 32535                           
 32536                           ;fat16.c: 1142: };fat16.c: 1143: flash_page_write(1, buffer);
 32537  002B00  0E00               	movlw	0
 32538  002B02  6E21               	movwf	flash_page_write@page+1,c
 32539  002B04  0E01               	movlw	1
 32540  002B06  6E20               	movwf	flash_page_write@page,c
 32541  002B08  0E80               	movlw	low _buffer
 32542  002B0A  6E22               	movwf	flash_page_write@data,c
 32543  002B0C  0E03               	movlw	high _buffer
 32544  002B0E  6E23               	movwf	flash_page_write@data+1,c
 32545  002B10  ECFE  F03D         	call	_flash_page_write	;wreg free
 32546                           
 32547                           ;fat16.c: 1146: for(cntr=0; cntr<512; ++cntr)
 32548  002B14  0E00               	movlw	0
 32549  002B16  6E26               	movwf	fat_format@cntr+1,c
 32550  002B18  0E00               	movlw	0
 32551  002B1A  6E25               	movwf	fat_format@cntr,c
 32552  002B1C                     l13006:
 32553  002B1C  0E02               	movlw	2
 32554  002B1E  5C26               	subwf	fat_format@cntr+1,w,c
 32555  002B20  B0D8               	btfsc	status,0,c
 32556  002B22  D010               	goto	u9980
 32557                           
 32558                           ;fat16.c: 1147: {;fat16.c: 1148: buffer[cntr] = _get_fat(cntr);
 32559  002B24  0E80               	movlw	low _buffer
 32560  002B26  2425               	addwf	fat_format@cntr,w,c
 32561  002B28  6ED9               	movwf	fsr2l,c
 32562  002B2A  0E03               	movlw	high _buffer
 32563  002B2C  2026               	addwfc	fat_format@cntr+1,w,c
 32564  002B2E  6EDA               	movwf	fsr2h,c
 32565  002B30  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 32566  002B34  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 32567  002B38  EC29  F03E         	call	__get_fat	;wreg free
 32568  002B3C  6EDF               	movwf	indf2,c
 32569  002B3E  4A25               	infsnz	fat_format@cntr,f,c
 32570  002B40  2A26               	incf	fat_format@cntr+1,f,c
 32571  002B42  D7EC               	goto	l13006
 32572  002B44                     u9980:
 32573                           
 32574                           ;fat16.c: 1149: };fat16.c: 1150: flash_page_write(2, buffer);
 32575  002B44  0E00               	movlw	0
 32576  002B46  6E21               	movwf	flash_page_write@page+1,c
 32577  002B48  0E02               	movlw	2
 32578  002B4A  6E20               	movwf	flash_page_write@page,c
 32579  002B4C  0E80               	movlw	low _buffer
 32580  002B4E  6E22               	movwf	flash_page_write@data,c
 32581  002B50  0E03               	movlw	high _buffer
 32582  002B52  6E23               	movwf	flash_page_write@data+1,c
 32583  002B54  ECFE  F03D         	call	_flash_page_write	;wreg free
 32584                           
 32585                           ;fat16.c: 1153: for(cntr=0; cntr<512; ++cntr)
 32586  002B58  0E00               	movlw	0
 32587  002B5A  6E26               	movwf	fat_format@cntr+1,c
 32588  002B5C  0E00               	movlw	0
 32589  002B5E  6E25               	movwf	fat_format@cntr,c
 32590  002B60                     l13020:
 32591  002B60  0E02               	movlw	2
 32592  002B62  5C26               	subwf	fat_format@cntr+1,w,c
 32593  002B64  B0D8               	btfsc	status,0,c
 32594  002B66  D00B               	goto	u10000
 32595                           
 32596                           ;fat16.c: 1154: {;fat16.c: 1155: buffer[cntr] = 0x00;
 32597  002B68  0E80               	movlw	low _buffer
 32598  002B6A  2425               	addwf	fat_format@cntr,w,c
 32599  002B6C  6ED9               	movwf	fsr2l,c
 32600  002B6E  0E03               	movlw	high _buffer
 32601  002B70  2026               	addwfc	fat_format@cntr+1,w,c
 32602  002B72  6EDA               	movwf	fsr2h,c
 32603  002B74  0E00               	movlw	0
 32604  002B76  6EDF               	movwf	indf2,c
 32605  002B78  4A25               	infsnz	fat_format@cntr,f,c
 32606  002B7A  2A26               	incf	fat_format@cntr+1,f,c
 32607  002B7C  D7F1               	goto	l13020
 32608  002B7E                     u10000:
 32609                           
 32610                           ;fat16.c: 1156: };fat16.c: 1157: for(cntr=2+1; cntr<=33; ++cntr)
 32611  002B7E  0E00               	movlw	0
 32612  002B80  6E26               	movwf	fat_format@cntr+1,c
 32613  002B82  0E03               	movlw	3
 32614  002B84  6E25               	movwf	fat_format@cntr,c
 32615  002B86                     l13032:
 32616  002B86  5026               	movf	fat_format@cntr+1,w,c
 32617  002B88  E111               	bnz	l13042
 32618  002B8A  0E22               	movlw	34
 32619  002B8C  5C25               	subwf	fat_format@cntr,w,c
 32620  002B8E  B0D8               	btfsc	status,0,c
 32621  002B90  D00D               	goto	u10020
 32622                           
 32623                           ;fat16.c: 1158: {;fat16.c: 1159: flash_page_write(cntr, buffer);
 32624  002B92  C025  F020         	movff	fat_format@cntr,flash_page_write@page
 32625  002B96  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
 32626  002B9A  0E80               	movlw	low _buffer
 32627  002B9C  6E22               	movwf	flash_page_write@data,c
 32628  002B9E  0E03               	movlw	high _buffer
 32629  002BA0  6E23               	movwf	flash_page_write@data+1,c
 32630  002BA2  ECFE  F03D         	call	_flash_page_write	;wreg free
 32631  002BA6  4A25               	infsnz	fat_format@cntr,f,c
 32632  002BA8  2A26               	incf	fat_format@cntr+1,f,c
 32633  002BAA  D7ED               	goto	l13032
 32634  002BAC                     u10020:
 32635  002BAC                     l13042:
 32636                           
 32637                           ;fat16.c: 1160: };fat16.c: 1163: for(cntr=0; cntr<512; ++cntr)
 32638  002BAC  0E00               	movlw	0
 32639  002BAE  6E26               	movwf	fat_format@cntr+1,c
 32640  002BB0  0E00               	movlw	0
 32641  002BB2  6E25               	movwf	fat_format@cntr,c
 32642  002BB4                     l13044:
 32643  002BB4  0E02               	movlw	2
 32644  002BB6  5C26               	subwf	fat_format@cntr+1,w,c
 32645  002BB8  B0D8               	btfsc	status,0,c
 32646  002BBA  D010               	goto	u10040
 32647                           
 32648                           ;fat16.c: 1164: {;fat16.c: 1165: buffer[cntr] = _get_root(cntr);
 32649  002BBC  0E80               	movlw	low _buffer
 32650  002BBE  2425               	addwf	fat_format@cntr,w,c
 32651  002BC0  6ED9               	movwf	fsr2l,c
 32652  002BC2  0E03               	movlw	high _buffer
 32653  002BC4  2026               	addwfc	fat_format@cntr+1,w,c
 32654  002BC6  6EDA               	movwf	fsr2h,c
 32655  002BC8  C025  F001         	movff	fat_format@cntr,__get_root@idx
 32656  002BCC  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 32657  002BD0  ECD9  F01B         	call	__get_root	;wreg free
 32658  002BD4  6EDF               	movwf	indf2,c
 32659  002BD6  4A25               	infsnz	fat_format@cntr,f,c
 32660  002BD8  2A26               	incf	fat_format@cntr+1,f,c
 32661  002BDA  D7EC               	goto	l13044
 32662  002BDC                     u10040:
 32663                           
 32664                           ;fat16.c: 1166: };fat16.c: 1167: flash_page_write(34, buffer);
 32665  002BDC  0E00               	movlw	0
 32666  002BDE  6E21               	movwf	flash_page_write@page+1,c
 32667  002BE0  0E22               	movlw	34
 32668  002BE2  6E20               	movwf	flash_page_write@page,c
 32669  002BE4  0E80               	movlw	low _buffer
 32670  002BE6  6E22               	movwf	flash_page_write@data,c
 32671  002BE8  0E03               	movlw	high _buffer
 32672  002BEA  6E23               	movwf	flash_page_write@data+1,c
 32673  002BEC  ECFE  F03D         	call	_flash_page_write	;wreg free
 32674                           
 32675                           ;fat16.c: 1170: for(cntr=0; cntr<512; ++cntr)
 32676  002BF0  0E00               	movlw	0
 32677  002BF2  6E26               	movwf	fat_format@cntr+1,c
 32678  002BF4  0E00               	movlw	0
 32679  002BF6  6E25               	movwf	fat_format@cntr,c
 32680  002BF8                     l13058:
 32681  002BF8  0E02               	movlw	2
 32682  002BFA  5C26               	subwf	fat_format@cntr+1,w,c
 32683  002BFC  B0D8               	btfsc	status,0,c
 32684  002BFE  D00B               	goto	u10060
 32685                           
 32686                           ;fat16.c: 1171: {;fat16.c: 1172: buffer[cntr] = 0x00;
 32687  002C00  0E80               	movlw	low _buffer
 32688  002C02  2425               	addwf	fat_format@cntr,w,c
 32689  002C04  6ED9               	movwf	fsr2l,c
 32690  002C06  0E03               	movlw	high _buffer
 32691  002C08  2026               	addwfc	fat_format@cntr+1,w,c
 32692  002C0A  6EDA               	movwf	fsr2h,c
 32693  002C0C  0E00               	movlw	0
 32694  002C0E  6EDF               	movwf	indf2,c
 32695  002C10  4A25               	infsnz	fat_format@cntr,f,c
 32696  002C12  2A26               	incf	fat_format@cntr+1,f,c
 32697  002C14  D7F1               	goto	l13058
 32698  002C16                     u10060:
 32699                           
 32700                           ;fat16.c: 1173: };fat16.c: 1174: for(cntr=34+1; cntr<=37; ++cntr)
 32701  002C16  0E00               	movlw	0
 32702  002C18  6E26               	movwf	fat_format@cntr+1,c
 32703  002C1A  0E23               	movlw	35
 32704  002C1C  6E25               	movwf	fat_format@cntr,c
 32705  002C1E                     l13070:
 32706  002C1E  5026               	movf	fat_format@cntr+1,w,c
 32707  002C20  E111               	bnz	l13080
 32708  002C22  0E26               	movlw	38
 32709  002C24  5C25               	subwf	fat_format@cntr,w,c
 32710  002C26  B0D8               	btfsc	status,0,c
 32711  002C28  D00D               	goto	u10080
 32712                           
 32713                           ;fat16.c: 1175: {;fat16.c: 1176: flash_page_write(cntr, buffer);
 32714  002C2A  C025  F020         	movff	fat_format@cntr,flash_page_write@page
 32715  002C2E  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
 32716  002C32  0E80               	movlw	low _buffer
 32717  002C34  6E22               	movwf	flash_page_write@data,c
 32718  002C36  0E03               	movlw	high _buffer
 32719  002C38  6E23               	movwf	flash_page_write@data+1,c
 32720  002C3A  ECFE  F03D         	call	_flash_page_write	;wreg free
 32721  002C3E  4A25               	infsnz	fat_format@cntr,f,c
 32722  002C40  2A26               	incf	fat_format@cntr+1,f,c
 32723  002C42  D7ED               	goto	l13070
 32724  002C44                     u10080:
 32725  002C44                     l13080:
 32726                           
 32727                           ;fat16.c: 1177: };fat16.c: 1180: for(cntr=0; cntr<512; ++cntr)
 32728  002C44  0E00               	movlw	0
 32729  002C46  6E26               	movwf	fat_format@cntr+1,c
 32730  002C48  0E00               	movlw	0
 32731  002C4A  6E25               	movwf	fat_format@cntr,c
 32732  002C4C                     l13082:
 32733  002C4C  0E02               	movlw	2
 32734  002C4E  5C26               	subwf	fat_format@cntr+1,w,c
 32735  002C50  B0D8               	btfsc	status,0,c
 32736  002C52  D010               	goto	u10100
 32737                           
 32738                           ;fat16.c: 1181: {;fat16.c: 1182: buffer[cntr] = _get_data(cntr);
 32739  002C54  0E80               	movlw	low _buffer
 32740  002C56  2425               	addwf	fat_format@cntr,w,c
 32741  002C58  6ED9               	movwf	fsr2l,c
 32742  002C5A  0E03               	movlw	high _buffer
 32743  002C5C  2026               	addwfc	fat_format@cntr+1,w,c
 32744  002C5E  6EDA               	movwf	fsr2h,c
 32745  002C60  C025  F001         	movff	fat_format@cntr,__get_data@idx
 32746  002C64  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 32747  002C68  ECDE  F042         	call	__get_data	;wreg free
 32748  002C6C  6EDF               	movwf	indf2,c
 32749  002C6E  4A25               	infsnz	fat_format@cntr,f,c
 32750  002C70  2A26               	incf	fat_format@cntr+1,f,c
 32751  002C72  D7EC               	goto	l13082
 32752  002C74                     u10100:
 32753                           
 32754                           ;fat16.c: 1183: };fat16.c: 1184: flash_page_write(38, buffer);
 32755  002C74  0E00               	movlw	0
 32756  002C76  6E21               	movwf	flash_page_write@page+1,c
 32757  002C78  0E26               	movlw	38
 32758  002C7A  6E20               	movwf	flash_page_write@page,c
 32759  002C7C  0E80               	movlw	low _buffer
 32760  002C7E  6E22               	movwf	flash_page_write@data,c
 32761  002C80  0E03               	movlw	high _buffer
 32762  002C82  6E23               	movwf	flash_page_write@data+1,c
 32763  002C84  ECFE  F03D         	call	_flash_page_write	;wreg free
 32764  002C88  0012               	return		;funcret
 32765  002C8A                     __end_of_fat_format:
 32766                           	opt stack 0
 32767                           tosu	equ	0xFFF
 32768                           tosh	equ	0xFFE
 32769                           tosl	equ	0xFFD
 32770                           pclath	equ	0xFFA
 32771                           tblptru	equ	0xFF8
 32772                           tblptrh	equ	0xFF7
 32773                           tblptrl	equ	0xFF6
 32774                           tablat	equ	0xFF5
 32775                           prodh	equ	0xFF4
 32776                           prodl	equ	0xFF3
 32777                           intcon	equ	0xFF2
 32778                           intcon2	equ	0xFF1
 32779                           intcon3	equ	0xFF0
 32780                           indf0	equ	0xFEF
 32781                           postinc0	equ	0xFEE
 32782                           fsr0h	equ	0xFEA
 32783                           fsr0l	equ	0xFE9
 32784                           wreg	equ	0xFE8
 32785                           indf1	equ	0xFE7
 32786                           postdec1	equ	0xFE5
 32787                           plusw1	equ	0xFE3
 32788                           fsr1h	equ	0xFE2
 32789                           fsr1l	equ	0xFE1
 32790                           indf2	equ	0xFDF
 32791                           postinc2	equ	0xFDE
 32792                           postdec2	equ	0xFDD
 32793                           plusw2	equ	0xFDB
 32794                           fsr2h	equ	0xFDA
 32795                           fsr2l	equ	0xFD9
 32796                           status	equ	0xFD8
 32797                           
 32798 ;; *************** function _flash_page_write *****************
 32799 ;; Defined at:
 32800 ;;		line 433 in file "flash.c"
 32801 ;; Parameters:    Size  Location     Type
 32802 ;;  page            2   31[COMRAM] unsigned int 
 32803 ;;  data            2   33[COMRAM] PTR unsigned char 
 32804 ;;		 -> buffer(512), msd_buffer(512), 
 32805 ;; Auto vars:     Size  Location     Type
 32806 ;;  match           1   35[COMRAM] enum E6894
 32807 ;; Return value:  Size  Location     Type
 32808 ;;                  1    wreg      void 
 32809 ;; Registers used:
 32810 ;;		wreg, status,2, status,0, cstack
 32811 ;; Tracked objects:
 32812 ;;		On entry : 0/0
 32813 ;;		On exit  : 0/0
 32814 ;;		Unchanged: 0/0
 32815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32819 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32820 ;;Total ram usage:        5 bytes
 32821 ;; Hardware stack levels used:    1
 32822 ;; Hardware stack levels required when called:    4
 32823 ;; This function calls:
 32824 ;;		__flash_compare_page_to_buffer
 32825 ;;		__flash_write_page_from_buffer
 32826 ;;		__flash_write_to_buffer
 32827 ;;		_spi_set_configuration
 32828 ;; This function is called by:
 32829 ;;		_ExternalFlash_SectorWrite
 32830 ;;		_fat_format
 32831 ;; This function uses a non-reentrant model
 32832 ;;
 32833                           
 32834                           	psect	text165
 32835  007BFC                     __ptext165:
 32836                           	opt stack 0
 32837  007BFC                     _flash_page_write:
 32838                           	opt stack 23
 32839                           
 32840                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 32841                           
 32842                           ;incstack = 0
 32843  007BFC  0E00               	movlw	0
 32844  007BFE  EC5A  F024         	call	_spi_set_configuration
 32845                           
 32846                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 32847  007C02  0E00               	movlw	0
 32848  007C04  6E15               	movwf	__flash_write_to_buffer@start+1,c
 32849  007C06  0E00               	movlw	0
 32850  007C08  6E14               	movwf	__flash_write_to_buffer@start,c
 32851  007C0A  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 32852  007C0E  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 32853  007C12  0E02               	movlw	2
 32854  007C14  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 32855  007C16  0E00               	movlw	0
 32856  007C18  6E18               	movwf	__flash_write_to_buffer@data_length,c
 32857  007C1A  0E00               	movlw	0
 32858  007C1C  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 32859  007C1E  EC23  F03F         	call	__flash_write_to_buffer	;wreg free
 32860                           
 32861                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 32862  007C22  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 32863  007C26  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 32864  007C2A  0E00               	movlw	0
 32865  007C2C  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 32866  007C2E  EC1C  F038         	call	__flash_compare_page_to_buffer	;wreg free
 32867  007C32  6E24               	movwf	flash_page_write@match,c
 32868                           
 32869                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 32870  007C34  0424               	decf	flash_page_write@match,w,c
 32871  007C36  A4D8               	btfss	status,2,c
 32872  007C38  D008               	goto	l1837
 32873                           
 32874                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 32875  007C3A  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 32876  007C3E  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 32877  007C42  0E00               	movlw	0
 32878  007C44  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 32879  007C46  ECF9  F03C         	call	__flash_write_page_from_buffer	;wreg free
 32880  007C4A                     l1837:
 32881                           
 32882                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 32883  007C4A  0E01               	movlw	1
 32884  007C4C  EC5A  F024         	call	_spi_set_configuration
 32885  007C50  0012               	return		;funcret
 32886  007C52                     __end_of_flash_page_write:
 32887                           	opt stack 0
 32888                           tosu	equ	0xFFF
 32889                           tosh	equ	0xFFE
 32890                           tosl	equ	0xFFD
 32891                           pclath	equ	0xFFA
 32892                           tblptru	equ	0xFF8
 32893                           tblptrh	equ	0xFF7
 32894                           tblptrl	equ	0xFF6
 32895                           tablat	equ	0xFF5
 32896                           prodh	equ	0xFF4
 32897                           prodl	equ	0xFF3
 32898                           intcon	equ	0xFF2
 32899                           intcon2	equ	0xFF1
 32900                           intcon3	equ	0xFF0
 32901                           indf0	equ	0xFEF
 32902                           postinc0	equ	0xFEE
 32903                           fsr0h	equ	0xFEA
 32904                           fsr0l	equ	0xFE9
 32905                           wreg	equ	0xFE8
 32906                           indf1	equ	0xFE7
 32907                           postdec1	equ	0xFE5
 32908                           plusw1	equ	0xFE3
 32909                           fsr1h	equ	0xFE2
 32910                           fsr1l	equ	0xFE1
 32911                           indf2	equ	0xFDF
 32912                           postinc2	equ	0xFDE
 32913                           postdec2	equ	0xFDD
 32914                           plusw2	equ	0xFDB
 32915                           fsr2h	equ	0xFDA
 32916                           fsr2l	equ	0xFD9
 32917                           status	equ	0xFD8
 32918                           
 32919 ;; *************** function __get_root *****************
 32920 ;; Defined at:
 32921 ;;		line 1013 in file "fat16.c"
 32922 ;; Parameters:    Size  Location     Type
 32923 ;;  idx             2    0[COMRAM] unsigned int 
 32924 ;; Auto vars:     Size  Location     Type
 32925 ;;		None
 32926 ;; Return value:  Size  Location     Type
 32927 ;;                  1    wreg      unsigned char 
 32928 ;; Registers used:
 32929 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 32930 ;; Tracked objects:
 32931 ;;		On entry : 0/0
 32932 ;;		On exit  : 0/0
 32933 ;;		Unchanged: 0/0
 32934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32938 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32939 ;;Total ram usage:        6 bytes
 32940 ;; Hardware stack levels used:    1
 32941 ;; This function calls:
 32942 ;;		Nothing
 32943 ;; This function is called by:
 32944 ;;		_fat_format
 32945 ;; This function uses a non-reentrant model
 32946 ;;
 32947                           
 32948                           	psect	text166
 32949  0037B2                     __ptext166:
 32950                           	opt stack 0
 32951  0037B2                     __get_root:
 32952                           	opt stack 27
 32953                           
 32954                           ;fat16.c: 1015: if (idx < 0x20)
 32955                           
 32956                           ;incstack = 0
 32957  0037B2  5002               	movf	__get_root@idx+1,w,c
 32958  0037B4  E11D               	bnz	l12090
 32959  0037B6  0E20               	movlw	32
 32960  0037B8  5C01               	subwf	__get_root@idx,w,c
 32961  0037BA  B0D8               	btfsc	status,0,c
 32962  0037BC  D019               	goto	l2172
 32963                           
 32964                           ;fat16.c: 1016: {;fat16.c: 1017: if (idx < 11)
 32965  0037BE  5002               	movf	__get_root@idx+1,w,c
 32966  0037C0  E110               	bnz	l12084
 32967  0037C2  0E0B               	movlw	11
 32968  0037C4  5C01               	subwf	__get_root@idx,w,c
 32969  0037C6  B0D8               	btfsc	status,0,c
 32970  0037C8  D00C               	goto	l2170
 32971                           
 32972                           ;fat16.c: 1018: {;fat16.c: 1019: return "SolarChargr"[idx];
 32973  0037CA  0EDD               	movlw	low STR_9
 32974  0037CC  2401               	addwf	__get_root@idx,w,c
 32975  0037CE  6EF6               	movwf	tblptrl,c
 32976  0037D0  0E8F               	movlw	high STR_9
 32977  0037D2  2002               	addwfc	__get_root@idx+1,w,c
 32978  0037D4  6EF7               	movwf	tblptrh,c
 32979  0037D6                     	if	1	;There are 3 active tblptr bytes
 32980  0037D6  6AF8               	clrf	tblptru,c
 32981  0037D8  0E00               	movlw	low (__mediumconst shr (0+16))
 32982  0037DA  22F8               	addwfc	tblptru,f,c
 32983  0037DC                     	endif
 32984  0037DC  0008               	tblrd		*
 32985  0037DE  50F5               	movf	tablat,w,c
 32986  0037E0  0012               	return	
 32987  0037E2                     l2170:
 32988  0037E2                     l12084:
 32989                           
 32990                           ;fat16.c: 1020: };fat16.c: 1021: if(idx==11)
 32991  0037E2  0E0B               	movlw	11
 32992  0037E4  1801               	xorwf	__get_root@idx,w,c
 32993  0037E6  1002               	iorwf	__get_root@idx+1,w,c
 32994  0037E8  A4D8               	btfss	status,2,c
 32995  0037EA  D002               	goto	l2172
 32996                           
 32997                           ;fat16.c: 1022: {;fat16.c: 1023: return 0x08;
 32998  0037EC  0E08               	movlw	8
 32999  0037EE  0012               	return	
 33000  0037F0                     l2172:
 33001  0037F0                     l12090:
 33002                           
 33003                           ;fat16.c: 1024: };fat16.c: 1025: };fat16.c: 1026: if (idx < 0x40)
 33004  0037F0  5002               	movf	__get_root@idx+1,w,c
 33005  0037F2  E103               	bnz	u8831
 33006  0037F4  0E40               	movlw	64
 33007  0037F6  5C01               	subwf	__get_root@idx,w,c
 33008  0037F8  B0D8               	btfsc	status,0,c
 33009  0037FA                     u8831:
 33010  0037FA  D0A4               	goto	l2198
 33011                           
 33012                           ;fat16.c: 1027: {;fat16.c: 1028: idx -= 0x20;
 33013  0037FC  0E20               	movlw	32
 33014  0037FE  5E01               	subwf	__get_root@idx,f,c
 33015  003800  0E00               	movlw	0
 33016  003802  5A02               	subwfb	__get_root@idx+1,f,c
 33017                           
 33018                           ;fat16.c: 1029: if (idx < 0+8)
 33019  003804  5002               	movf	__get_root@idx+1,w,c
 33020  003806  E110               	bnz	l12098
 33021  003808  0E08               	movlw	8
 33022  00380A  5C01               	subwf	__get_root@idx,w,c
 33023  00380C  B0D8               	btfsc	status,0,c
 33024  00380E  D00C               	goto	l2174
 33025                           
 33026                           ;fat16.c: 1030: {;fat16.c: 1031: return "FILE    "[idx];
 33027  003810  0EE9               	movlw	low STR_10
 33028  003812  2401               	addwf	__get_root@idx,w,c
 33029  003814  6EF6               	movwf	tblptrl,c
 33030  003816  0E8F               	movlw	high STR_10
 33031  003818  2002               	addwfc	__get_root@idx+1,w,c
 33032  00381A  6EF7               	movwf	tblptrh,c
 33033  00381C                     	if	1	;There are 3 active tblptr bytes
 33034  00381C  6AF8               	clrf	tblptru,c
 33035  00381E  0E00               	movlw	low (__mediumconst shr (0+16))
 33036  003820  22F8               	addwfc	tblptru,f,c
 33037  003822                     	endif
 33038  003822  0008               	tblrd		*
 33039  003824  50F5               	movf	tablat,w,c
 33040  003826  0012               	return	
 33041  003828                     l2174:
 33042  003828                     l12098:
 33043                           
 33044                           ;fat16.c: 1032: };fat16.c: 1033: if (idx < 11)
 33045  003828  5002               	movf	__get_root@idx+1,w,c
 33046  00382A  E146               	bnz	l12190
 33047  00382C  0E0B               	movlw	11
 33048  00382E  5C01               	subwf	__get_root@idx,w,c
 33049  003830  B0D8               	btfsc	status,0,c
 33050  003832  D042               	goto	l2176
 33051                           
 33052                           ;fat16.c: 1034: {;fat16.c: 1035: return "TXT"[idx-8];
 33053  003834  0EF8               	movlw	248
 33054  003836  6E03               	movwf	??__get_root& (0+255),c
 33055  003838  0EFF               	movlw	255
 33056  00383A  6E04               	movwf	(??__get_root+1)& (0+255),c
 33057  00383C  C001  F005         	movff	__get_root@idx,??__get_root+2
 33058  003840  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 33059  003844  5003               	movf	??__get_root,w,c
 33060  003846  2605               	addwf	??__get_root+2,f,c
 33061  003848  5004               	movf	??__get_root+1,w,c
 33062  00384A  2206               	addwfc	??__get_root+3,f,c
 33063  00384C  0EFB               	movlw	low STR_11
 33064  00384E  2405               	addwf	??__get_root+2,w,c
 33065  003850  6EF6               	movwf	tblptrl,c
 33066  003852  0E8F               	movlw	high STR_11
 33067  003854  2006               	addwfc	??__get_root+3,w,c
 33068  003856  6EF7               	movwf	tblptrh,c
 33069  003858                     	if	1	;There are 3 active tblptr bytes
 33070  003858  6AF8               	clrf	tblptru,c
 33071  00385A  0E00               	movlw	low (__mediumconst shr (0+16))
 33072  00385C  22F8               	addwfc	tblptru,f,c
 33073  00385E                     	endif
 33074  00385E  0008               	tblrd		*
 33075  003860  50F5               	movf	tablat,w,c
 33076  003862  0012               	return	
 33077  003864                     
 33078                           ;fat16.c: 1040: return 0x20;
 33079  003864  0E20               	movlw	32
 33080  003866  0012               	return	
 33081  003868                     
 33082                           ;fat16.c: 1042: return 0x06;
 33083  003868  0E06               	movlw	6
 33084  00386A  0012               	return	
 33085  00386C                     
 33086                           ;fat16.c: 1044: return 0x28;
 33087  00386C  0E28               	movlw	40
 33088  00386E  0012               	return	
 33089  003870                     
 33090                           ;fat16.c: 1046: return 0x78;
 33091  003870  0E78               	movlw	120
 33092  003872  0012               	return	
 33093  003874                     
 33094                           ;fat16.c: 1048: return 0xDE;
 33095  003874  0EDE               	movlw	222
 33096  003876  0012               	return	
 33097  003878                     
 33098                           ;fat16.c: 1050: return 0x38;
 33099  003878  0E38               	movlw	56
 33100  00387A  0012               	return	
 33101  00387C                     
 33102                           ;fat16.c: 1052: return 0x5F;
 33103  00387C  0E5F               	movlw	95
 33104  00387E  0012               	return	
 33105  003880                     
 33106                           ;fat16.c: 1054: return 0x4B;
 33107  003880  0E4B               	movlw	75
 33108  003882  0012               	return	
 33109  003884                     
 33110                           ;fat16.c: 1056: return 0x00;
 33111  003884  0E00               	movlw	0
 33112  003886  0012               	return	
 33113  003888                     
 33114                           ;fat16.c: 1058: return 0x00;
 33115  003888  0E00               	movlw	0
 33116  00388A  0012               	return	
 33117  00388C                     
 33118                           ;fat16.c: 1060: return 0x04;
 33119  00388C  0E04               	movlw	4
 33120  00388E  0012               	return	
 33121  003890                     
 33122                           ;fat16.c: 1062: return 0x77;
 33123  003890  0E77               	movlw	119
 33124  003892  0012               	return	
 33125  003894                     
 33126                           ;fat16.c: 1064: return 0xDE;
 33127  003894  0EDE               	movlw	222
 33128  003896  0012               	return	
 33129  003898                     
 33130                           ;fat16.c: 1066: return 0x38;
 33131  003898  0E38               	movlw	56
 33132  00389A  0012               	return	
 33133  00389C                     
 33134                           ;fat16.c: 1068: return ((unsigned char)((((uint16_t)2))&0xFF));
 33135  00389C  0E02               	movlw	2
 33136  00389E  0012               	return	
 33137  0038A0                     
 33138                           ;fat16.c: 1070: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 33139  0038A0  0E00               	movlw	0
 33140  0038A2  0012               	return	
 33141  0038A4                     
 33142                           ;fat16.c: 1072: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 33143  0038A4  0E0C               	movlw	12
 33144  0038A6  0012               	return	
 33145  0038A8                     
 33146                           ;fat16.c: 1075: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 33147  0038A8  0E00               	movlw	0
 33148  0038AA  0012               	return	
 33149  0038AC                     
 33150                           ;fat16.c: 1078: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 33151  0038AC  0E00               	movlw	0
 33152  0038AE  0012               	return	
 33153  0038B0                     
 33154                           ;fat16.c: 1081: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 33155  0038B0  0E00               	movlw	0
 33156  0038B2  0012               	return	
 33157  0038B4                     
 33158                           ;fat16.c: 1084: return 0x00;
 33159  0038B4  0E00               	movlw	0
 33160  0038B6  0012               	return	
 33161  0038B8                     l2176:
 33162  0038B8                     l12190:
 33163  0038B8  C001  F003         	movff	__get_root@idx,??__get_root
 33164  0038BC  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 33165                           
 33166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33167                           ; Switch size 1, requested type "space"
 33168                           ; Number of cases is 1, Range of values is 0 to 0
 33169                           ; switch strategies available:
 33170                           ; Name         Instructions Cycles
 33171                           ; simple_byte            4     3 (average)
 33172                           ;	Chosen strategy is simple_byte
 33173  0038C0  5004               	movf	??__get_root+1,w,c
 33174  0038C2  0A00               	xorlw	0	; case 0
 33175  0038C4  A4D8               	btfss	status,2,c
 33176  0038C6  D7F6               	goto	l2197
 33177                           
 33178                           ; Switch size 1, requested type "space"
 33179                           ; Number of cases is 20, Range of values is 11 to 31
 33180                           ; switch strategies available:
 33181                           ; Name         Instructions Cycles
 33182                           ; simple_byte           61    31 (average)
 33183                           ;	Chosen strategy is simple_byte
 33184  0038C8  5003               	movf	??__get_root,w,c
 33185  0038CA  0A0B               	xorlw	11	; case 11
 33186  0038CC  B4D8               	btfsc	status,2,c
 33187  0038CE  D7CA               	goto	l2177
 33188  0038D0  0A06               	xorlw	6	; case 13
 33189  0038D2  B4D8               	btfsc	status,2,c
 33190  0038D4  D7C9               	goto	l2178
 33191  0038D6  0A03               	xorlw	3	; case 14
 33192  0038D8  B4D8               	btfsc	status,2,c
 33193  0038DA  D7C8               	goto	l2179
 33194  0038DC  0A01               	xorlw	1	; case 15
 33195  0038DE  B4D8               	btfsc	status,2,c
 33196  0038E0  D7C7               	goto	l2180
 33197  0038E2  0A1F               	xorlw	31	; case 16
 33198  0038E4  B4D8               	btfsc	status,2,c
 33199  0038E6  D7C6               	goto	l2181
 33200  0038E8  0A01               	xorlw	1	; case 17
 33201  0038EA  B4D8               	btfsc	status,2,c
 33202  0038EC  D7C5               	goto	l2182
 33203  0038EE  0A03               	xorlw	3	; case 18
 33204  0038F0  B4D8               	btfsc	status,2,c
 33205  0038F2  D7C4               	goto	l2183
 33206  0038F4  0A01               	xorlw	1	; case 19
 33207  0038F6  B4D8               	btfsc	status,2,c
 33208  0038F8  D7C3               	goto	l2184
 33209  0038FA  0A07               	xorlw	7	; case 20
 33210  0038FC  B4D8               	btfsc	status,2,c
 33211  0038FE  D7C2               	goto	l2185
 33212  003900  0A01               	xorlw	1	; case 21
 33213  003902  B4D8               	btfsc	status,2,c
 33214  003904  D7C1               	goto	l2186
 33215  003906  0A03               	xorlw	3	; case 22
 33216  003908  B4D8               	btfsc	status,2,c
 33217  00390A  D7C0               	goto	l2187
 33218  00390C  0A01               	xorlw	1	; case 23
 33219  00390E  B4D8               	btfsc	status,2,c
 33220  003910  D7BF               	goto	l2188
 33221  003912  0A0F               	xorlw	15	; case 24
 33222  003914  B4D8               	btfsc	status,2,c
 33223  003916  D7BE               	goto	l2189
 33224  003918  0A01               	xorlw	1	; case 25
 33225  00391A  B4D8               	btfsc	status,2,c
 33226  00391C  D7BD               	goto	l2190
 33227  00391E  0A03               	xorlw	3	; case 26
 33228  003920  B4D8               	btfsc	status,2,c
 33229  003922  D7BC               	goto	l2191
 33230  003924  0A01               	xorlw	1	; case 27
 33231  003926  B4D8               	btfsc	status,2,c
 33232  003928  D7BB               	goto	l2192
 33233  00392A  0A07               	xorlw	7	; case 28
 33234  00392C  B4D8               	btfsc	status,2,c
 33235  00392E  D7BA               	goto	l2193
 33236  003930  0A01               	xorlw	1	; case 29
 33237  003932  B4D8               	btfsc	status,2,c
 33238  003934  D7B9               	goto	l2194
 33239  003936  0A03               	xorlw	3	; case 30
 33240  003938  B4D8               	btfsc	status,2,c
 33241  00393A  D7B8               	goto	l2195
 33242  00393C  0A01               	xorlw	1	; case 31
 33243  00393E  B4D8               	btfsc	status,2,c
 33244  003940  D7B7               	goto	l2196
 33245  003942  D7B8               	goto	l2197
 33246  003944                     l2198:
 33247                           
 33248                           ;fat16.c: 1086: };fat16.c: 1087: return 0X00;
 33249  003944  0E00               	movlw	0
 33250  003946  0012               	return	
 33251  003948                     __end_of__get_root:
 33252                           	opt stack 0
 33253                           tosu	equ	0xFFF
 33254                           tosh	equ	0xFFE
 33255                           tosl	equ	0xFFD
 33256                           pclath	equ	0xFFA
 33257                           tblptru	equ	0xFF8
 33258                           tblptrh	equ	0xFF7
 33259                           tblptrl	equ	0xFF6
 33260                           tablat	equ	0xFF5
 33261                           prodh	equ	0xFF4
 33262                           prodl	equ	0xFF3
 33263                           intcon	equ	0xFF2
 33264                           intcon2	equ	0xFF1
 33265                           intcon3	equ	0xFF0
 33266                           indf0	equ	0xFEF
 33267                           postinc0	equ	0xFEE
 33268                           fsr0h	equ	0xFEA
 33269                           fsr0l	equ	0xFE9
 33270                           wreg	equ	0xFE8
 33271                           indf1	equ	0xFE7
 33272                           postdec1	equ	0xFE5
 33273                           plusw1	equ	0xFE3
 33274                           fsr1h	equ	0xFE2
 33275                           fsr1l	equ	0xFE1
 33276                           indf2	equ	0xFDF
 33277                           postinc2	equ	0xFDE
 33278                           postdec2	equ	0xFDD
 33279                           plusw2	equ	0xFDB
 33280                           fsr2h	equ	0xFDA
 33281                           fsr2l	equ	0xFD9
 33282                           status	equ	0xFD8
 33283                           
 33284 ;; *************** function __get_mbr *****************
 33285 ;; Defined at:
 33286 ;;		line 840 in file "fat16.c"
 33287 ;; Parameters:    Size  Location     Type
 33288 ;;  idx             2    0[COMRAM] unsigned int 
 33289 ;; Auto vars:     Size  Location     Type
 33290 ;;		None
 33291 ;; Return value:  Size  Location     Type
 33292 ;;                  1    wreg      unsigned char 
 33293 ;; Registers used:
 33294 ;;		wreg, status,2, status,0
 33295 ;; Tracked objects:
 33296 ;;		On entry : 0/0
 33297 ;;		On exit  : 0/0
 33298 ;;		Unchanged: 0/0
 33299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33304 ;;Total ram usage:        4 bytes
 33305 ;; Hardware stack levels used:    1
 33306 ;; This function calls:
 33307 ;;		Nothing
 33308 ;; This function is called by:
 33309 ;;		_fat_get_format_status
 33310 ;;		_fat_format
 33311 ;; This function uses a non-reentrant model
 33312 ;;
 33313                           
 33314                           	psect	text167
 33315  005A46                     __ptext167:
 33316                           	opt stack 0
 33317  005A46                     __get_mbr:
 33318                           	opt stack 27
 33319                           
 33320                           ;fat16.c: 842: switch (idx)
 33321                           
 33322                           ;incstack = 0
 33323  005A46  D026               	goto	l2079
 33324  005A48                     
 33325                           ;fat16.c: 845: return 0x80;
 33326  005A48  0E80               	movlw	128
 33327  005A4A  0012               	return	
 33328  005A4C                     
 33329                           ;fat16.c: 847: return 0;
 33330  005A4C  0E00               	movlw	0
 33331  005A4E  0012               	return	
 33332  005A50                     
 33333                           ;fat16.c: 849: return 2;
 33334  005A50  0E02               	movlw	2
 33335  005A52  0012               	return	
 33336  005A54                     
 33337                           ;fat16.c: 851: return 0;
 33338  005A54  0E00               	movlw	0
 33339  005A56  0012               	return	
 33340  005A58                     
 33341                           ;fat16.c: 853: return 0x04;
 33342  005A58  0E04               	movlw	4
 33343  005A5A  0012               	return	
 33344  005A5C                     
 33345                           ;fat16.c: 855: return 2;
 33346  005A5C  0E02               	movlw	2
 33347  005A5E  0012               	return	
 33348  005A60                     
 33349                           ;fat16.c: 857: return 3;
 33350  005A60  0E03               	movlw	3
 33351  005A62  0012               	return	
 33352  005A64                     
 33353                           ;fat16.c: 859: return 8;
 33354  005A64  0E08               	movlw	8
 33355  005A66  0012               	return	
 33356  005A68                     
 33357                           ;fat16.c: 861: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
 33358  005A68  0E01               	movlw	1
 33359  005A6A  0012               	return	
 33360  005A6C                     
 33361                           ;fat16.c: 863: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
 33362  005A6C  0E00               	movlw	0
 33363  005A6E  0012               	return	
 33364  005A70                     
 33365                           ;fat16.c: 865: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
 33366  005A70  0E00               	movlw	0
 33367  005A72  0012               	return	
 33368  005A74                     
 33369                           ;fat16.c: 867: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
 33370  005A74  0E00               	movlw	0
 33371  005A76  0012               	return	
 33372  005A78                     
 33373                           ;fat16.c: 869: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
 33374  005A78  0EFF               	movlw	255
 33375  005A7A  0012               	return	
 33376  005A7C                     
 33377                           ;fat16.c: 871: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
 33378  005A7C  0E1F               	movlw	31
 33379  005A7E  0012               	return	
 33380  005A80                     
 33381                           ;fat16.c: 873: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
 33382  005A80  0E00               	movlw	0
 33383  005A82  0012               	return	
 33384  005A84                     
 33385                           ;fat16.c: 875: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
 33386  005A84  0E00               	movlw	0
 33387  005A86  0012               	return	
 33388  005A88                     
 33389                           ;fat16.c: 877: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 33390  005A88  0E55               	movlw	85
 33391  005A8A  0012               	return	
 33392  005A8C                     
 33393                           ;fat16.c: 879: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 33394  005A8C  0EAA               	movlw	170
 33395  005A8E  0012               	return	
 33396  005A90                     
 33397                           ;fat16.c: 881: return 0X00;
 33398  005A90  0E00               	movlw	0
 33399                           
 33400                           ;fat16.c: 882: }
 33401  005A92  0012               	return	
 33402  005A94                     l2079:
 33403  005A94  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 33404  005A98  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 33405                           
 33406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33407                           ; Switch size 1, requested type "space"
 33408                           ; Number of cases is 1, Range of values is 1 to 1
 33409                           ; switch strategies available:
 33410                           ; Name         Instructions Cycles
 33411                           ; simple_byte            4     3 (average)
 33412                           ;	Chosen strategy is simple_byte
 33413  005A9C  5004               	movf	??__get_mbr+1,w,c
 33414  005A9E  0A01               	xorlw	1	; case 1
 33415  005AA0  A4D8               	btfss	status,2,c
 33416  005AA2  D7F6               	goto	l2099
 33417                           
 33418                           ; Switch size 1, requested type "space"
 33419                           ; Number of cases is 18, Range of values is 190 to 255
 33420                           ; switch strategies available:
 33421                           ; Name         Instructions Cycles
 33422                           ; simple_byte           55    28 (average)
 33423                           ;	Chosen strategy is simple_byte
 33424  005AA4  5003               	movf	??__get_mbr,w,c
 33425  005AA6  0ABE               	xorlw	190	; case 190
 33426  005AA8  B4D8               	btfsc	status,2,c
 33427  005AAA  D7CE               	goto	l2080
 33428  005AAC  0A01               	xorlw	1	; case 191
 33429  005AAE  B4D8               	btfsc	status,2,c
 33430  005AB0  D7CD               	goto	l2082
 33431  005AB2  0A7F               	xorlw	127	; case 192
 33432  005AB4  B4D8               	btfsc	status,2,c
 33433  005AB6  D7CC               	goto	l2083
 33434  005AB8  0A01               	xorlw	1	; case 193
 33435  005ABA  B4D8               	btfsc	status,2,c
 33436  005ABC  D7CB               	goto	l2084
 33437  005ABE  0A03               	xorlw	3	; case 194
 33438  005AC0  B4D8               	btfsc	status,2,c
 33439  005AC2  D7CA               	goto	l2085
 33440  005AC4  0A01               	xorlw	1	; case 195
 33441  005AC6  B4D8               	btfsc	status,2,c
 33442  005AC8  D7C9               	goto	l2086
 33443  005ACA  0A07               	xorlw	7	; case 196
 33444  005ACC  B4D8               	btfsc	status,2,c
 33445  005ACE  D7C8               	goto	l2087
 33446  005AD0  0A01               	xorlw	1	; case 197
 33447  005AD2  B4D8               	btfsc	status,2,c
 33448  005AD4  D7C7               	goto	l2088
 33449  005AD6  0A03               	xorlw	3	; case 198
 33450  005AD8  B4D8               	btfsc	status,2,c
 33451  005ADA  D7C6               	goto	l2089
 33452  005ADC  0A01               	xorlw	1	; case 199
 33453  005ADE  B4D8               	btfsc	status,2,c
 33454  005AE0  D7C5               	goto	l2090
 33455  005AE2  0A0F               	xorlw	15	; case 200
 33456  005AE4  B4D8               	btfsc	status,2,c
 33457  005AE6  D7C4               	goto	l2091
 33458  005AE8  0A01               	xorlw	1	; case 201
 33459  005AEA  B4D8               	btfsc	status,2,c
 33460  005AEC  D7C3               	goto	l2092
 33461  005AEE  0A03               	xorlw	3	; case 202
 33462  005AF0  B4D8               	btfsc	status,2,c
 33463  005AF2  D7C2               	goto	l2093
 33464  005AF4  0A01               	xorlw	1	; case 203
 33465  005AF6  B4D8               	btfsc	status,2,c
 33466  005AF8  D7C1               	goto	l2094
 33467  005AFA  0A07               	xorlw	7	; case 204
 33468  005AFC  B4D8               	btfsc	status,2,c
 33469  005AFE  D7C0               	goto	l2095
 33470  005B00  0A01               	xorlw	1	; case 205
 33471  005B02  B4D8               	btfsc	status,2,c
 33472  005B04  D7BF               	goto	l2096
 33473  005B06  0A33               	xorlw	51	; case 254
 33474  005B08  B4D8               	btfsc	status,2,c
 33475  005B0A  D7BE               	goto	l2097
 33476  005B0C  0A01               	xorlw	1	; case 255
 33477  005B0E  B4D8               	btfsc	status,2,c
 33478  005B10  D7BD               	goto	l2098
 33479  005B12  D7BE               	goto	l2099
 33480  005B14                     __end_of__get_mbr:
 33481                           	opt stack 0
 33482                           tosu	equ	0xFFF
 33483                           tosh	equ	0xFFE
 33484                           tosl	equ	0xFFD
 33485                           pclath	equ	0xFFA
 33486                           tblptru	equ	0xFF8
 33487                           tblptrh	equ	0xFF7
 33488                           tblptrl	equ	0xFF6
 33489                           tablat	equ	0xFF5
 33490                           prodh	equ	0xFF4
 33491                           prodl	equ	0xFF3
 33492                           intcon	equ	0xFF2
 33493                           intcon2	equ	0xFF1
 33494                           intcon3	equ	0xFF0
 33495                           indf0	equ	0xFEF
 33496                           postinc0	equ	0xFEE
 33497                           fsr0h	equ	0xFEA
 33498                           fsr0l	equ	0xFE9
 33499                           wreg	equ	0xFE8
 33500                           indf1	equ	0xFE7
 33501                           postdec1	equ	0xFE5
 33502                           plusw1	equ	0xFE3
 33503                           fsr1h	equ	0xFE2
 33504                           fsr1l	equ	0xFE1
 33505                           indf2	equ	0xFDF
 33506                           postinc2	equ	0xFDE
 33507                           postdec2	equ	0xFDD
 33508                           plusw2	equ	0xFDB
 33509                           fsr2h	equ	0xFDA
 33510                           fsr2l	equ	0xFD9
 33511                           status	equ	0xFD8
 33512                           
 33513 ;; *************** function __get_fbr *****************
 33514 ;; Defined at:
 33515 ;;		line 885 in file "fat16.c"
 33516 ;; Parameters:    Size  Location     Type
 33517 ;;  idx             2    0[COMRAM] unsigned int 
 33518 ;; Auto vars:     Size  Location     Type
 33519 ;;		None
 33520 ;; Return value:  Size  Location     Type
 33521 ;;                  1    wreg      unsigned char 
 33522 ;; Registers used:
 33523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 33524 ;; Tracked objects:
 33525 ;;		On entry : 0/0
 33526 ;;		On exit  : 0/0
 33527 ;;		Unchanged: 0/0
 33528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33533 ;;Total ram usage:        4 bytes
 33534 ;; Hardware stack levels used:    1
 33535 ;; This function calls:
 33536 ;;		Nothing
 33537 ;; This function is called by:
 33538 ;;		_fat_get_format_status
 33539 ;;		_fat_format
 33540 ;; This function uses a non-reentrant model
 33541 ;;
 33542                           
 33543                           	psect	text168
 33544  001ACC                     __ptext168:
 33545                           	opt stack 0
 33546  001ACC                     __get_fbr:
 33547                           	opt stack 27
 33548                           
 33549                           ;fat16.c: 887: switch (idx)
 33550                           
 33551                           ;incstack = 0
 33552  001ACC  D091               	goto	l2103
 33553  001ACE                     
 33554                           ;fat16.c: 890: return 0xEB;
 33555  001ACE  0EEB               	movlw	235
 33556  001AD0  0012               	return	
 33557  001AD2                     
 33558                           ;fat16.c: 892: return 0x3C;
 33559  001AD2  0E3C               	movlw	60
 33560  001AD4  0012               	return	
 33561  001AD6                     
 33562                           ;fat16.c: 894: return 0x90;
 33563  001AD6  0E90               	movlw	144
 33564  001AD8  0012               	return	
 33565  001ADA                     
 33566                           ;fat16.c: 896: return "MSDOS5.0"[0];
 33567  001ADA  0EF2               	movlw	low STR_1
 33568  001ADC  6EF6               	movwf	tblptrl,c
 33569  001ADE                     	if	1	;There is more than 1 active tblptr byte
 33570  001ADE  0E8F               	movlw	high STR_1
 33571  001AE0  6EF7               	movwf	tblptrh,c
 33572  001AE2                     	endif
 33573  001AE2                     	if	1	;There are 3 active tblptr bytes
 33574  001AE2  0E00               	movlw	low (STR_1 shr (0+16))
 33575  001AE4  6EF8               	movwf	tblptru,c
 33576  001AE6                     	endif
 33577  001AE6  0008               	tblrd		*
 33578  001AE8  50F5               	movf	tablat,w,c
 33579  001AEA  0012               	return	
 33580  001AEC                     
 33581                           ;fat16.c: 898: return "MSDOS5.0"[1];
 33582  001AEC  0EF3               	movlw	low (STR_1+1)
 33583  001AEE  6EF6               	movwf	tblptrl,c
 33584  001AF0  0E8F               	movlw	high (STR_1+1)
 33585  001AF2  6EF7               	movwf	tblptrh,c
 33586  001AF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33587  001AF4  6AF8               	clrf	tblptru,c
 33588  001AF6                     	endif
 33589  001AF6                     	if	0	;tblptru may be non-zero
 33590  001AF6                     	endif
 33591  001AF6  0008               	tblrd		*
 33592  001AF8  50F5               	movf	tablat,w,c
 33593  001AFA  0012               	return	
 33594  001AFC                     
 33595                           ;fat16.c: 900: return "MSDOS5.0"[2];
 33596  001AFC  0EF4               	movlw	low (STR_1+2)
 33597  001AFE  6EF6               	movwf	tblptrl,c
 33598  001B00  0E8F               	movlw	high (STR_1+2)
 33599  001B02  6EF7               	movwf	tblptrh,c
 33600  001B04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33601  001B04  6AF8               	clrf	tblptru,c
 33602  001B06                     	endif
 33603  001B06                     	if	0	;tblptru may be non-zero
 33604  001B06                     	endif
 33605  001B06  0008               	tblrd		*
 33606  001B08  50F5               	movf	tablat,w,c
 33607  001B0A  0012               	return	
 33608  001B0C                     
 33609                           ;fat16.c: 902: return "MSDOS5.0"[3];
 33610  001B0C  0EF5               	movlw	low (STR_1+3)
 33611  001B0E  6EF6               	movwf	tblptrl,c
 33612  001B10  0E8F               	movlw	high (STR_1+3)
 33613  001B12  6EF7               	movwf	tblptrh,c
 33614  001B14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33615  001B14  6AF8               	clrf	tblptru,c
 33616  001B16                     	endif
 33617  001B16                     	if	0	;tblptru may be non-zero
 33618  001B16                     	endif
 33619  001B16  0008               	tblrd		*
 33620  001B18  50F5               	movf	tablat,w,c
 33621  001B1A  0012               	return	
 33622  001B1C                     
 33623                           ;fat16.c: 904: return "MSDOS5.0"[4];
 33624  001B1C  0EF6               	movlw	low (STR_1+4)
 33625  001B1E  6EF6               	movwf	tblptrl,c
 33626  001B20  0E8F               	movlw	high (STR_1+4)
 33627  001B22  6EF7               	movwf	tblptrh,c
 33628  001B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33629  001B24  6AF8               	clrf	tblptru,c
 33630  001B26                     	endif
 33631  001B26                     	if	0	;tblptru may be non-zero
 33632  001B26                     	endif
 33633  001B26  0008               	tblrd		*
 33634  001B28  50F5               	movf	tablat,w,c
 33635  001B2A  0012               	return	
 33636  001B2C                     
 33637                           ;fat16.c: 906: return "MSDOS5.0"[5];
 33638  001B2C  0EF7               	movlw	low (STR_1+5)
 33639  001B2E  6EF6               	movwf	tblptrl,c
 33640  001B30  0E8F               	movlw	high (STR_1+5)
 33641  001B32  6EF7               	movwf	tblptrh,c
 33642  001B34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33643  001B34  6AF8               	clrf	tblptru,c
 33644  001B36                     	endif
 33645  001B36                     	if	0	;tblptru may be non-zero
 33646  001B36                     	endif
 33647  001B36  0008               	tblrd		*
 33648  001B38  50F5               	movf	tablat,w,c
 33649  001B3A  0012               	return	
 33650  001B3C                     
 33651                           ;fat16.c: 908: return "MSDOS5.0"[6];
 33652  001B3C  0EF8               	movlw	low (STR_1+6)
 33653  001B3E  6EF6               	movwf	tblptrl,c
 33654  001B40  0E8F               	movlw	high (STR_1+6)
 33655  001B42  6EF7               	movwf	tblptrh,c
 33656  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33657  001B44  6AF8               	clrf	tblptru,c
 33658  001B46                     	endif
 33659  001B46                     	if	0	;tblptru may be non-zero
 33660  001B46                     	endif
 33661  001B46  0008               	tblrd		*
 33662  001B48  50F5               	movf	tablat,w,c
 33663  001B4A  0012               	return	
 33664  001B4C                     
 33665                           ;fat16.c: 910: return "MSDOS5.0"[7];
 33666  001B4C  0EF9               	movlw	low (STR_1+7)
 33667  001B4E  6EF6               	movwf	tblptrl,c
 33668  001B50  0E8F               	movlw	high (STR_1+7)
 33669  001B52  6EF7               	movwf	tblptrh,c
 33670  001B54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33671  001B54  6AF8               	clrf	tblptru,c
 33672  001B56                     	endif
 33673  001B56                     	if	0	;tblptru may be non-zero
 33674  001B56                     	endif
 33675  001B56  0008               	tblrd		*
 33676  001B58  50F5               	movf	tablat,w,c
 33677  001B5A  0012               	return	
 33678  001B5C                     
 33679                           ;fat16.c: 912: return ((unsigned char)((((uint16_t)512))&0xFF));
 33680  001B5C  0E00               	movlw	0
 33681  001B5E  0012               	return	
 33682  001B60                     
 33683                           ;fat16.c: 914: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 33684  001B60  0E02               	movlw	2
 33685  001B62  0012               	return	
 33686  001B64                     
 33687                           ;fat16.c: 916: return 1;
 33688  001B64  0E01               	movlw	1
 33689  001B66  0012               	return	
 33690  001B68                     
 33691                           ;fat16.c: 918: return ((unsigned char)((((uint16_t)1))&0xFF));
 33692  001B68  0E01               	movlw	1
 33693  001B6A  0012               	return	
 33694  001B6C                     
 33695                           ;fat16.c: 920: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 33696  001B6C  0E00               	movlw	0
 33697  001B6E  0012               	return	
 33698  001B70                     
 33699                           ;fat16.c: 922: return 1;
 33700  001B70  0E01               	movlw	1
 33701  001B72  0012               	return	
 33702  001B74                     
 33703                           ;fat16.c: 924: return ((unsigned char)((((uint16_t)64))&0xFF));
 33704  001B74  0E40               	movlw	64
 33705  001B76  0012               	return	
 33706  001B78                     
 33707                           ;fat16.c: 926: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 33708  001B78  0E00               	movlw	0
 33709  001B7A  0012               	return	
 33710  001B7C                     
 33711                           ;fat16.c: 928: return ((unsigned char)((((uint16_t)8191))&0xFF));
 33712  001B7C  0EFF               	movlw	255
 33713  001B7E  0012               	return	
 33714  001B80                     
 33715                           ;fat16.c: 930: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 33716  001B80  0E1F               	movlw	31
 33717  001B82  0012               	return	
 33718  001B84                     
 33719                           ;fat16.c: 932: return 0XF8;
 33720  001B84  0EF8               	movlw	248
 33721  001B86  0012               	return	
 33722  001B88                     
 33723                           ;fat16.c: 934: return ((unsigned char)((((uint16_t)32))&0xFF));
 33724  001B88  0E20               	movlw	32
 33725  001B8A  0012               	return	
 33726  001B8C                     
 33727                           ;fat16.c: 936: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 33728  001B8C  0E00               	movlw	0
 33729  001B8E  0012               	return	
 33730  001B90                     
 33731                           ;fat16.c: 938: return ((unsigned char)((((uint16_t)63))&0xFF));
 33732  001B90  0E3F               	movlw	63
 33733  001B92  0012               	return	
 33734  001B94                     
 33735                           ;fat16.c: 940: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 33736  001B94  0E00               	movlw	0
 33737  001B96  0012               	return	
 33738  001B98                     
 33739                           ;fat16.c: 942: return ((unsigned char)((((uint16_t)16))&0xFF));
 33740  001B98  0E10               	movlw	16
 33741  001B9A  0012               	return	
 33742  001B9C                     
 33743                           ;fat16.c: 944: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 33744  001B9C  0E00               	movlw	0
 33745  001B9E  0012               	return	
 33746  001BA0                     
 33747                           ;fat16.c: 946: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
 33748  001BA0  0E00               	movlw	0
 33749  001BA2  0012               	return	
 33750  001BA4                     
 33751                           ;fat16.c: 948: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
 33752  001BA4  0E00               	movlw	0
 33753  001BA6  0012               	return	
 33754  001BA8                     
 33755                           ;fat16.c: 950: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
 33756  001BA8  0E00               	movlw	0
 33757  001BAA  0012               	return	
 33758  001BAC                     
 33759                           ;fat16.c: 952: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
 33760  001BAC  0E00               	movlw	0
 33761  001BAE  0012               	return	
 33762  001BB0                     
 33763                           ;fat16.c: 954: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 33764  001BB0  0E01               	movlw	1
 33765  001BB2  0012               	return	
 33766  001BB4                     
 33767                           ;fat16.c: 956: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 33768  001BB4  0E00               	movlw	0
 33769  001BB6  0012               	return	
 33770  001BB8                     
 33771                           ;fat16.c: 958: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
 33772  001BB8  0E22               	movlw	34
 33773  001BBA  0012               	return	
 33774  001BBC                     
 33775                           ;fat16.c: 960: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
 33776  001BBC  0E00               	movlw	0
 33777  001BBE  0012               	return	
 33778  001BC0                     
 33779                           ;fat16.c: 964: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 33780                           
 33781                           ;fat16.c: 963: case 0x2F:
 33782  001BC0  0E00               	movlw	0
 33783  001BC2  0012               	return	
 33784  001BC4                     
 33785                           ;fat16.c: 966: return 'F';
 33786  001BC4  0E46               	movlw	70
 33787  001BC6  0012               	return	
 33788  001BC8                     
 33789                           ;fat16.c: 968: return 'A';
 33790  001BC8  0E41               	movlw	65
 33791  001BCA  0012               	return	
 33792  001BCC                     
 33793                           ;fat16.c: 970: return 'T';
 33794  001BCC  0E54               	movlw	84
 33795  001BCE  0012               	return	
 33796  001BD0                     
 33797                           ;fat16.c: 972: return '1';
 33798  001BD0  0E31               	movlw	49
 33799  001BD2  0012               	return	
 33800  001BD4                     
 33801                           ;fat16.c: 974: return '6';
 33802  001BD4  0E36               	movlw	54
 33803  001BD6  0012               	return	
 33804  001BD8                     
 33805                           ;fat16.c: 976: return ' ';
 33806  001BD8  0E20               	movlw	32
 33807  001BDA  0012               	return	
 33808  001BDC                     
 33809                           ;fat16.c: 978: return ' ';
 33810  001BDC  0E20               	movlw	32
 33811  001BDE  0012               	return	
 33812  001BE0                     
 33813                           ;fat16.c: 980: return ' ';
 33814  001BE0  0E20               	movlw	32
 33815  001BE2  0012               	return	
 33816  001BE4                     
 33817                           ;fat16.c: 982: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 33818  001BE4  0E55               	movlw	85
 33819  001BE6  0012               	return	
 33820  001BE8                     
 33821                           ;fat16.c: 984: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 33822  001BE8  0EAA               	movlw	170
 33823  001BEA  0012               	return	
 33824  001BEC                     
 33825                           ;fat16.c: 986: return 0X00;
 33826  001BEC  0E00               	movlw	0
 33827                           
 33828                           ;fat16.c: 987: }
 33829  001BEE  0012               	return	
 33830  001BF0                     l2103:
 33831  001BF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 33832  001BF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 33833                           
 33834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 33835                           ; Switch size 1, requested type "space"
 33836                           ; Number of cases is 2, Range of values is 0 to 1
 33837                           ; switch strategies available:
 33838                           ; Name         Instructions Cycles
 33839                           ; simple_byte            7     4 (average)
 33840                           ;	Chosen strategy is simple_byte
 33841  001BF8  5004               	movf	??__get_fbr+1,w,c
 33842  001BFA  0A00               	xorlw	0	; case 0
 33843  001BFC  B4D8               	btfsc	status,2,c
 33844  001BFE  D004               	goto	l15750
 33845  001C00  0A01               	xorlw	1	; case 1
 33846  001C02  B4D8               	btfsc	status,2,c
 33847  001C04  D08D               	goto	l15752
 33848  001C06  D7F2               	goto	l2153
 33849  001C08                     l15750:
 33850                           
 33851                           ; Switch size 1, requested type "space"
 33852                           ; Number of cases is 46, Range of values is 0 to 61
 33853                           ; switch strategies available:
 33854                           ; Name         Instructions Cycles
 33855                           ; simple_byte          139    70 (average)
 33856                           ;	Chosen strategy is simple_byte
 33857  001C08  5003               	movf	??__get_fbr,w,c
 33858  001C0A  0A00               	xorlw	0	; case 0
 33859  001C0C  B4D8               	btfsc	status,2,c
 33860  001C0E  D75F               	goto	l2104
 33861  001C10  0A01               	xorlw	1	; case 1
 33862  001C12  B4D8               	btfsc	status,2,c
 33863  001C14  D75E               	goto	l2106
 33864  001C16  0A03               	xorlw	3	; case 2
 33865  001C18  B4D8               	btfsc	status,2,c
 33866  001C1A  D75D               	goto	l2107
 33867  001C1C  0A01               	xorlw	1	; case 3
 33868  001C1E  B4D8               	btfsc	status,2,c
 33869  001C20  D75C               	goto	l2108
 33870  001C22  0A07               	xorlw	7	; case 4
 33871  001C24  B4D8               	btfsc	status,2,c
 33872  001C26  D762               	goto	l2109
 33873  001C28  0A01               	xorlw	1	; case 5
 33874  001C2A  B4D8               	btfsc	status,2,c
 33875  001C2C  D767               	goto	l2110
 33876  001C2E  0A03               	xorlw	3	; case 6
 33877  001C30  B4D8               	btfsc	status,2,c
 33878  001C32  D76C               	goto	l2111
 33879  001C34  0A01               	xorlw	1	; case 7
 33880  001C36  B4D8               	btfsc	status,2,c
 33881  001C38  D771               	goto	l2112
 33882  001C3A  0A0F               	xorlw	15	; case 8
 33883  001C3C  B4D8               	btfsc	status,2,c
 33884  001C3E  D776               	goto	l2113
 33885  001C40  0A01               	xorlw	1	; case 9
 33886  001C42  B4D8               	btfsc	status,2,c
 33887  001C44  D77B               	goto	l2114
 33888  001C46  0A03               	xorlw	3	; case 10
 33889  001C48  B4D8               	btfsc	status,2,c
 33890  001C4A  D780               	goto	l2115
 33891  001C4C  0A01               	xorlw	1	; case 11
 33892  001C4E  B4D8               	btfsc	status,2,c
 33893  001C50  D785               	goto	l2116
 33894  001C52  0A07               	xorlw	7	; case 12
 33895  001C54  B4D8               	btfsc	status,2,c
 33896  001C56  D784               	goto	l2117
 33897  001C58  0A01               	xorlw	1	; case 13
 33898  001C5A  B4D8               	btfsc	status,2,c
 33899  001C5C  D783               	goto	l2118
 33900  001C5E  0A03               	xorlw	3	; case 14
 33901  001C60  B4D8               	btfsc	status,2,c
 33902  001C62  D782               	goto	l2119
 33903  001C64  0A01               	xorlw	1	; case 15
 33904  001C66  B4D8               	btfsc	status,2,c
 33905  001C68  D781               	goto	l2120
 33906  001C6A  0A1F               	xorlw	31	; case 16
 33907  001C6C  B4D8               	btfsc	status,2,c
 33908  001C6E  D780               	goto	l2121
 33909  001C70  0A01               	xorlw	1	; case 17
 33910  001C72  B4D8               	btfsc	status,2,c
 33911  001C74  D77F               	goto	l2122
 33912  001C76  0A03               	xorlw	3	; case 18
 33913  001C78  B4D8               	btfsc	status,2,c
 33914  001C7A  D77E               	goto	l2123
 33915  001C7C  0A01               	xorlw	1	; case 19
 33916  001C7E  B4D8               	btfsc	status,2,c
 33917  001C80  D77D               	goto	l2124
 33918  001C82  0A07               	xorlw	7	; case 20
 33919  001C84  B4D8               	btfsc	status,2,c
 33920  001C86  D77C               	goto	l2125
 33921  001C88  0A01               	xorlw	1	; case 21
 33922  001C8A  B4D8               	btfsc	status,2,c
 33923  001C8C  D77B               	goto	l2126
 33924  001C8E  0A03               	xorlw	3	; case 22
 33925  001C90  B4D8               	btfsc	status,2,c
 33926  001C92  D77A               	goto	l2127
 33927  001C94  0A01               	xorlw	1	; case 23
 33928  001C96  B4D8               	btfsc	status,2,c
 33929  001C98  D779               	goto	l2128
 33930  001C9A  0A0F               	xorlw	15	; case 24
 33931  001C9C  B4D8               	btfsc	status,2,c
 33932  001C9E  D778               	goto	l2129
 33933  001CA0  0A01               	xorlw	1	; case 25
 33934  001CA2  B4D8               	btfsc	status,2,c
 33935  001CA4  D777               	goto	l2130
 33936  001CA6  0A03               	xorlw	3	; case 26
 33937  001CA8  B4D8               	btfsc	status,2,c
 33938  001CAA  D776               	goto	l2131
 33939  001CAC  0A01               	xorlw	1	; case 27
 33940  001CAE  B4D8               	btfsc	status,2,c
 33941  001CB0  D775               	goto	l2132
 33942  001CB2  0A07               	xorlw	7	; case 28
 33943  001CB4  B4D8               	btfsc	status,2,c
 33944  001CB6  D774               	goto	l2133
 33945  001CB8  0A01               	xorlw	1	; case 29
 33946  001CBA  B4D8               	btfsc	status,2,c
 33947  001CBC  D773               	goto	l2134
 33948  001CBE  0A03               	xorlw	3	; case 30
 33949  001CC0  B4D8               	btfsc	status,2,c
 33950  001CC2  D772               	goto	l2135
 33951  001CC4  0A01               	xorlw	1	; case 31
 33952  001CC6  B4D8               	btfsc	status,2,c
 33953  001CC8  D771               	goto	l2136
 33954  001CCA  0A37               	xorlw	55	; case 40
 33955  001CCC  B4D8               	btfsc	status,2,c
 33956  001CCE  D770               	goto	l2137
 33957  001CD0  0A01               	xorlw	1	; case 41
 33958  001CD2  B4D8               	btfsc	status,2,c
 33959  001CD4  D76F               	goto	l2138
 33960  001CD6  0A05               	xorlw	5	; case 44
 33961  001CD8  B4D8               	btfsc	status,2,c
 33962  001CDA  D76E               	goto	l2139
 33963  001CDC  0A01               	xorlw	1	; case 45
 33964  001CDE  B4D8               	btfsc	status,2,c
 33965  001CE0  D76D               	goto	l2140
 33966  001CE2  0A03               	xorlw	3	; case 46
 33967  001CE4  B4D8               	btfsc	status,2,c
 33968  001CE6  D76C               	goto	l2141
 33969  001CE8  0A01               	xorlw	1	; case 47
 33970  001CEA  B4D8               	btfsc	status,2,c
 33971  001CEC  D769               	goto	l2141
 33972  001CEE  0A19               	xorlw	25	; case 54
 33973  001CF0  B4D8               	btfsc	status,2,c
 33974  001CF2  D768               	goto	l2143
 33975  001CF4  0A01               	xorlw	1	; case 55
 33976  001CF6  B4D8               	btfsc	status,2,c
 33977  001CF8  D767               	goto	l2144
 33978  001CFA  0A0F               	xorlw	15	; case 56
 33979  001CFC  B4D8               	btfsc	status,2,c
 33980  001CFE  D766               	goto	l2145
 33981  001D00  0A01               	xorlw	1	; case 57
 33982  001D02  B4D8               	btfsc	status,2,c
 33983  001D04  D765               	goto	l2146
 33984  001D06  0A03               	xorlw	3	; case 58
 33985  001D08  B4D8               	btfsc	status,2,c
 33986  001D0A  D764               	goto	l2147
 33987  001D0C  0A01               	xorlw	1	; case 59
 33988  001D0E  B4D8               	btfsc	status,2,c
 33989  001D10  D763               	goto	l2148
 33990  001D12  0A07               	xorlw	7	; case 60
 33991  001D14  B4D8               	btfsc	status,2,c
 33992  001D16  D762               	goto	l2149
 33993  001D18  0A01               	xorlw	1	; case 61
 33994  001D1A  B4D8               	btfsc	status,2,c
 33995  001D1C  D761               	goto	l2150
 33996  001D1E  D766               	goto	l2153
 33997  001D20                     l15752:
 33998                           
 33999                           ; Switch size 1, requested type "space"
 34000                           ; Number of cases is 2, Range of values is 254 to 255
 34001                           ; switch strategies available:
 34002                           ; Name         Instructions Cycles
 34003                           ; simple_byte            7     4 (average)
 34004                           ;	Chosen strategy is simple_byte
 34005  001D20  5003               	movf	??__get_fbr,w,c
 34006  001D22  0AFE               	xorlw	254	; case 254
 34007  001D24  B4D8               	btfsc	status,2,c
 34008  001D26  D75E               	goto	l2151
 34009  001D28  0A01               	xorlw	1	; case 255
 34010  001D2A  B4D8               	btfsc	status,2,c
 34011  001D2C  D75D               	goto	l2152
 34012  001D2E  D75E               	goto	l2153
 34013  001D30                     __end_of__get_fbr:
 34014                           	opt stack 0
 34015                           tosu	equ	0xFFF
 34016                           tosh	equ	0xFFE
 34017                           tosl	equ	0xFFD
 34018                           pclath	equ	0xFFA
 34019                           tblptru	equ	0xFF8
 34020                           tblptrh	equ	0xFF7
 34021                           tblptrl	equ	0xFF6
 34022                           tablat	equ	0xFF5
 34023                           prodh	equ	0xFF4
 34024                           prodl	equ	0xFF3
 34025                           intcon	equ	0xFF2
 34026                           intcon2	equ	0xFF1
 34027                           intcon3	equ	0xFF0
 34028                           indf0	equ	0xFEF
 34029                           postinc0	equ	0xFEE
 34030                           fsr0h	equ	0xFEA
 34031                           fsr0l	equ	0xFE9
 34032                           wreg	equ	0xFE8
 34033                           indf1	equ	0xFE7
 34034                           postdec1	equ	0xFE5
 34035                           plusw1	equ	0xFE3
 34036                           fsr1h	equ	0xFE2
 34037                           fsr1l	equ	0xFE1
 34038                           indf2	equ	0xFDF
 34039                           postinc2	equ	0xFDE
 34040                           postdec2	equ	0xFDD
 34041                           plusw2	equ	0xFDB
 34042                           fsr2h	equ	0xFDA
 34043                           fsr2l	equ	0xFD9
 34044                           status	equ	0xFD8
 34045                           
 34046 ;; *************** function __get_fat *****************
 34047 ;; Defined at:
 34048 ;;		line 990 in file "fat16.c"
 34049 ;; Parameters:    Size  Location     Type
 34050 ;;  idx             2    0[COMRAM] unsigned int 
 34051 ;; Auto vars:     Size  Location     Type
 34052 ;;		None
 34053 ;; Return value:  Size  Location     Type
 34054 ;;                  1    wreg      unsigned char 
 34055 ;; Registers used:
 34056 ;;		wreg, status,2, status,0
 34057 ;; Tracked objects:
 34058 ;;		On entry : 0/0
 34059 ;;		On exit  : 0/0
 34060 ;;		Unchanged: 0/0
 34061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34066 ;;Total ram usage:        4 bytes
 34067 ;; Hardware stack levels used:    1
 34068 ;; This function calls:
 34069 ;;		Nothing
 34070 ;; This function is called by:
 34071 ;;		_fat_format
 34072 ;; This function uses a non-reentrant model
 34073 ;;
 34074                           
 34075                           	psect	text169
 34076  007C52                     __ptext169:
 34077                           	opt stack 0
 34078  007C52                     __get_fat:
 34079                           	opt stack 27
 34080                           
 34081                           ;fat16.c: 992: switch (idx)
 34082                           
 34083                           ;incstack = 0
 34084  007C52  D00E               	goto	l2157
 34085  007C54                     
 34086                           ;fat16.c: 996: return 0xF8;
 34087  007C54  0EF8               	movlw	248
 34088  007C56  0012               	return	
 34089  007C58                     
 34090                           ;fat16.c: 998: return 0xFF;
 34091  007C58  0EFF               	movlw	255
 34092  007C5A  0012               	return	
 34093  007C5C                     
 34094                           ;fat16.c: 1000: return 0xFF;
 34095  007C5C  0EFF               	movlw	255
 34096  007C5E  0012               	return	
 34097  007C60                     
 34098                           ;fat16.c: 1002: return 0xFF;
 34099  007C60  0EFF               	movlw	255
 34100  007C62  0012               	return	
 34101  007C64                     
 34102                           ;fat16.c: 1005: return 0xFF;
 34103  007C64  0EFF               	movlw	255
 34104  007C66  0012               	return	
 34105  007C68                     
 34106                           ;fat16.c: 1007: return 0xFF;
 34107  007C68  0EFF               	movlw	255
 34108  007C6A  0012               	return	
 34109  007C6C                     
 34110                           ;fat16.c: 1009: return 0X00;
 34111  007C6C  0E00               	movlw	0
 34112                           
 34113                           ;fat16.c: 1010: }
 34114  007C6E  0012               	return	
 34115  007C70                     l2157:
 34116  007C70  C001  F003         	movff	__get_fat@idx,??__get_fat
 34117  007C74  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 34118                           
 34119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34120                           ; Switch size 1, requested type "space"
 34121                           ; Number of cases is 1, Range of values is 0 to 0
 34122                           ; switch strategies available:
 34123                           ; Name         Instructions Cycles
 34124                           ; simple_byte            4     3 (average)
 34125                           ;	Chosen strategy is simple_byte
 34126  007C78  5004               	movf	??__get_fat+1,w,c
 34127  007C7A  0A00               	xorlw	0	; case 0
 34128  007C7C  A4D8               	btfss	status,2,c
 34129  007C7E  D7F6               	goto	l2165
 34130                           
 34131                           ; Switch size 1, requested type "space"
 34132                           ; Number of cases is 6, Range of values is 0 to 5
 34133                           ; switch strategies available:
 34134                           ; Name         Instructions Cycles
 34135                           ; simple_byte           19    10 (average)
 34136                           ;	Chosen strategy is simple_byte
 34137  007C80  5003               	movf	??__get_fat,w,c
 34138  007C82  0A00               	xorlw	0	; case 0
 34139  007C84  B4D8               	btfsc	status,2,c
 34140  007C86  D7E6               	goto	l2158
 34141  007C88  0A01               	xorlw	1	; case 1
 34142  007C8A  B4D8               	btfsc	status,2,c
 34143  007C8C  D7E5               	goto	l2160
 34144  007C8E  0A03               	xorlw	3	; case 2
 34145  007C90  B4D8               	btfsc	status,2,c
 34146  007C92  D7E4               	goto	l2161
 34147  007C94  0A01               	xorlw	1	; case 3
 34148  007C96  B4D8               	btfsc	status,2,c
 34149  007C98  D7E3               	goto	l2162
 34150  007C9A  0A07               	xorlw	7	; case 4
 34151  007C9C  B4D8               	btfsc	status,2,c
 34152  007C9E  D7E2               	goto	l2163
 34153  007CA0  0A01               	xorlw	1	; case 5
 34154  007CA2  B4D8               	btfsc	status,2,c
 34155  007CA4  D7E1               	goto	l2164
 34156  007CA6  D7E2               	goto	l2165
 34157  007CA8                     __end_of__get_fat:
 34158                           	opt stack 0
 34159                           tosu	equ	0xFFF
 34160                           tosh	equ	0xFFE
 34161                           tosl	equ	0xFFD
 34162                           pclath	equ	0xFFA
 34163                           tblptru	equ	0xFF8
 34164                           tblptrh	equ	0xFF7
 34165                           tblptrl	equ	0xFF6
 34166                           tablat	equ	0xFF5
 34167                           prodh	equ	0xFF4
 34168                           prodl	equ	0xFF3
 34169                           intcon	equ	0xFF2
 34170                           intcon2	equ	0xFF1
 34171                           intcon3	equ	0xFF0
 34172                           indf0	equ	0xFEF
 34173                           postinc0	equ	0xFEE
 34174                           fsr0h	equ	0xFEA
 34175                           fsr0l	equ	0xFE9
 34176                           wreg	equ	0xFE8
 34177                           indf1	equ	0xFE7
 34178                           postdec1	equ	0xFE5
 34179                           plusw1	equ	0xFE3
 34180                           fsr1h	equ	0xFE2
 34181                           fsr1l	equ	0xFE1
 34182                           indf2	equ	0xFDF
 34183                           postinc2	equ	0xFDE
 34184                           postdec2	equ	0xFDD
 34185                           plusw2	equ	0xFDB
 34186                           fsr2h	equ	0xFDA
 34187                           fsr2l	equ	0xFD9
 34188                           status	equ	0xFD8
 34189                           
 34190 ;; *************** function __get_data *****************
 34191 ;; Defined at:
 34192 ;;		line 1090 in file "fat16.c"
 34193 ;; Parameters:    Size  Location     Type
 34194 ;;  idx             2    0[COMRAM] unsigned int 
 34195 ;; Auto vars:     Size  Location     Type
 34196 ;;		None
 34197 ;; Return value:  Size  Location     Type
 34198 ;;                  1    wreg      unsigned char 
 34199 ;; Registers used:
 34200 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34201 ;; Tracked objects:
 34202 ;;		On entry : 0/0
 34203 ;;		On exit  : 0/0
 34204 ;;		Unchanged: 0/0
 34205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34210 ;;Total ram usage:        2 bytes
 34211 ;; Hardware stack levels used:    1
 34212 ;; This function calls:
 34213 ;;		Nothing
 34214 ;; This function is called by:
 34215 ;;		_fat_format
 34216 ;; This function uses a non-reentrant model
 34217 ;;
 34218                           
 34219                           	psect	text170
 34220  0085BC                     __ptext170:
 34221                           	opt stack 0
 34222  0085BC                     __get_data:
 34223                           	opt stack 27
 34224                           
 34225                           ;fat16.c: 1092: if (idx < 12)
 34226                           
 34227                           ;incstack = 0
 34228  0085BC  5002               	movf	__get_data@idx+1,w,c
 34229  0085BE  E110               	bnz	l12206
 34230  0085C0  0E0C               	movlw	12
 34231  0085C2  5C01               	subwf	__get_data@idx,w,c
 34232  0085C4  B0D8               	btfsc	status,0,c
 34233  0085C6  D00C               	goto	l2201
 34234                           
 34235                           ;fat16.c: 1093: {;fat16.c: 1094: return "hello world!"[idx];
 34236  0085C8  0ED0               	movlw	low STR_12
 34237  0085CA  2401               	addwf	__get_data@idx,w,c
 34238  0085CC  6EF6               	movwf	tblptrl,c
 34239  0085CE  0E8F               	movlw	high STR_12
 34240  0085D0  2002               	addwfc	__get_data@idx+1,w,c
 34241  0085D2  6EF7               	movwf	tblptrh,c
 34242  0085D4                     	if	1	;There are 3 active tblptr bytes
 34243  0085D4  6AF8               	clrf	tblptru,c
 34244  0085D6  0E00               	movlw	low (__mediumconst shr (0+16))
 34245  0085D8  22F8               	addwfc	tblptru,f,c
 34246  0085DA                     	endif
 34247  0085DA  0008               	tblrd		*
 34248  0085DC  50F5               	movf	tablat,w,c
 34249  0085DE  0012               	return	
 34250  0085E0                     l2201:
 34251  0085E0                     l12206:
 34252                           
 34253                           ;fat16.c: 1095: };fat16.c: 1096: return 0X00;
 34254  0085E0  0E00               	movlw	0
 34255  0085E2  0012               	return	
 34256  0085E4                     __end_of__get_data:
 34257                           	opt stack 0
 34258                           tosu	equ	0xFFF
 34259                           tosh	equ	0xFFE
 34260                           tosl	equ	0xFFD
 34261                           pclath	equ	0xFFA
 34262                           tblptru	equ	0xFF8
 34263                           tblptrh	equ	0xFF7
 34264                           tblptrl	equ	0xFF6
 34265                           tablat	equ	0xFF5
 34266                           prodh	equ	0xFF4
 34267                           prodl	equ	0xFF3
 34268                           intcon	equ	0xFF2
 34269                           intcon2	equ	0xFF1
 34270                           intcon3	equ	0xFF0
 34271                           indf0	equ	0xFEF
 34272                           postinc0	equ	0xFEE
 34273                           fsr0h	equ	0xFEA
 34274                           fsr0l	equ	0xFE9
 34275                           wreg	equ	0xFE8
 34276                           indf1	equ	0xFE7
 34277                           postdec1	equ	0xFE5
 34278                           plusw1	equ	0xFE3
 34279                           fsr1h	equ	0xFE2
 34280                           fsr1l	equ	0xFE1
 34281                           indf2	equ	0xFDF
 34282                           postinc2	equ	0xFDE
 34283                           postdec2	equ	0xFDD
 34284                           plusw2	equ	0xFDB
 34285                           fsr2h	equ	0xFDA
 34286                           fsr2l	equ	0xFD9
 34287                           status	equ	0xFD8
 34288                           
 34289 ;; *************** function __parse_file_resize *****************
 34290 ;; Defined at:
 34291 ;;		line 513 in file "api.c"
 34292 ;; Parameters:    Size  Location     Type
 34293 ;;  data            2   70[COMRAM] PTR unsigned char 
 34294 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34295 ;; Auto vars:     Size  Location     Type
 34296 ;;  file_size       4   73[COMRAM] unsigned long 
 34297 ;; Return value:  Size  Location     Type
 34298 ;;                  1    wreg      unsigned char 
 34299 ;; Registers used:
 34300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34301 ;; Tracked objects:
 34302 ;;		On entry : 0/0
 34303 ;;		On exit  : 0/0
 34304 ;;		Unchanged: 0/0
 34305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34307 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34309 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34310 ;;Total ram usage:        7 bytes
 34311 ;; Hardware stack levels used:    1
 34312 ;; Hardware stack levels required when called:    8
 34313 ;; This function calls:
 34314 ;;		_fat_resize_file
 34315 ;; This function is called by:
 34316 ;;		__parse_command_long
 34317 ;; This function uses a non-reentrant model
 34318 ;;
 34319                           
 34320                           	psect	text171
 34321  005530                     __ptext171:
 34322                           	opt stack 0
 34323  005530                     __parse_file_resize:
 34324                           	opt stack 20
 34325                           
 34326                           ;api.c: 516: uint32_t file_size;;api.c: 517: if((data[0]!=COMMAND_FILE_RESIZE) || (data[
      +                          6]!=0x4C) || (data[7]!=0xEA))
 34327                           
 34328                           ;incstack = 0
 34329  005530  C047  FFD9         	movff	__parse_file_resize@data,fsr2l
 34330  005534  C048  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 34331  005538  0E50               	movlw	80
 34332  00553A  18DE               	xorwf	postinc2,w,c
 34333  00553C  A4D8               	btfss	status,2,c
 34334  00553E  D014               	goto	u10420
 34335  005540  EE20 F006          	lfsr	2,6
 34336  005544  5047               	movf	__parse_file_resize@data,w,c
 34337  005546  26D9               	addwf	fsr2l,f,c
 34338  005548  5048               	movf	__parse_file_resize@data+1,w,c
 34339  00554A  22DA               	addwfc	fsr2h,f,c
 34340  00554C  0E4C               	movlw	76
 34341  00554E  18DE               	xorwf	postinc2,w,c
 34342  005550  A4D8               	btfss	status,2,c
 34343  005552  D00A               	goto	u10420
 34344  005554  EE20 F007          	lfsr	2,7
 34345  005558  5047               	movf	__parse_file_resize@data,w,c
 34346  00555A  26D9               	addwf	fsr2l,f,c
 34347  00555C  5048               	movf	__parse_file_resize@data+1,w,c
 34348  00555E  22DA               	addwfc	fsr2h,f,c
 34349  005560  0EEA               	movlw	234
 34350  005562  18DE               	xorwf	postinc2,w,c
 34351  005564  B4D8               	btfsc	status,2,c
 34352  005566  D002               	goto	l2722
 34353  005568                     u10420:
 34354                           
 34355                           ;api.c: 518: {;api.c: 519: return 8;
 34356  005568  0E08               	movlw	8
 34357  00556A  0012               	return	
 34358  00556C                     l2722:
 34359                           
 34360                           ;api.c: 520: };api.c: 523: file_size = data[2];
 34361  00556C  EE20 F002          	lfsr	2,2
 34362  005570  5047               	movf	__parse_file_resize@data,w,c
 34363  005572  26D9               	addwf	fsr2l,f,c
 34364  005574  5048               	movf	__parse_file_resize@data+1,w,c
 34365  005576  22DA               	addwfc	fsr2h,f,c
 34366  005578  50DF               	movf	indf2,w,c
 34367  00557A  6E49               	movwf	??__parse_file_resize& (0+255),c
 34368  00557C  5049               	movf	??__parse_file_resize,w,c
 34369  00557E  6E4A               	movwf	__parse_file_resize@file_size,c
 34370  005580  6A4B               	clrf	__parse_file_resize@file_size+1,c
 34371  005582  6A4C               	clrf	__parse_file_resize@file_size+2,c
 34372  005584  6A4D               	clrf	__parse_file_resize@file_size+3,c
 34373                           
 34374                           ;api.c: 524: file_size <<= 8;
 34375  005586  C04C  F04D         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34376  00558A  C04B  F04C         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34377  00558E  C04A  F04B         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34378  005592  6A4A               	clrf	__parse_file_resize@file_size,c
 34379                           
 34380                           ;api.c: 525: file_size |= data[3];
 34381  005594  EE20 F003          	lfsr	2,3
 34382  005598  5047               	movf	__parse_file_resize@data,w,c
 34383  00559A  26D9               	addwf	fsr2l,f,c
 34384  00559C  5048               	movf	__parse_file_resize@data+1,w,c
 34385  00559E  22DA               	addwfc	fsr2h,f,c
 34386  0055A0  50DF               	movf	indf2,w,c
 34387  0055A2  6E49               	movwf	??__parse_file_resize& (0+255),c
 34388  0055A4  5049               	movf	??__parse_file_resize,w,c
 34389  0055A6  124A               	iorwf	__parse_file_resize@file_size,f,c
 34390                           
 34391                           ;api.c: 526: file_size <<= 8;
 34392  0055A8  C04C  F04D         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34393  0055AC  C04B  F04C         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34394  0055B0  C04A  F04B         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34395  0055B4  6A4A               	clrf	__parse_file_resize@file_size,c
 34396                           
 34397                           ;api.c: 527: file_size |= data[4];
 34398  0055B6  EE20 F004          	lfsr	2,4
 34399  0055BA  5047               	movf	__parse_file_resize@data,w,c
 34400  0055BC  26D9               	addwf	fsr2l,f,c
 34401  0055BE  5048               	movf	__parse_file_resize@data+1,w,c
 34402  0055C0  22DA               	addwfc	fsr2h,f,c
 34403  0055C2  50DF               	movf	indf2,w,c
 34404  0055C4  6E49               	movwf	??__parse_file_resize& (0+255),c
 34405  0055C6  5049               	movf	??__parse_file_resize,w,c
 34406  0055C8  124A               	iorwf	__parse_file_resize@file_size,f,c
 34407                           
 34408                           ;api.c: 528: file_size <<= 8;
 34409  0055CA  C04C  F04D         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 34410  0055CE  C04B  F04C         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 34411  0055D2  C04A  F04B         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 34412  0055D6  6A4A               	clrf	__parse_file_resize@file_size,c
 34413                           
 34414                           ;api.c: 529: file_size |= data[5];
 34415  0055D8  EE20 F005          	lfsr	2,5
 34416  0055DC  5047               	movf	__parse_file_resize@data,w,c
 34417  0055DE  26D9               	addwf	fsr2l,f,c
 34418  0055E0  5048               	movf	__parse_file_resize@data+1,w,c
 34419  0055E2  22DA               	addwfc	fsr2h,f,c
 34420  0055E4  50DF               	movf	indf2,w,c
 34421  0055E6  6E49               	movwf	??__parse_file_resize& (0+255),c
 34422  0055E8  5049               	movf	??__parse_file_resize,w,c
 34423  0055EA  124A               	iorwf	__parse_file_resize@file_size,f,c
 34424                           
 34425                           ;api.c: 532: fat_resize_file(data[1], file_size);
 34426  0055EC  C04A  F03F         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 34427  0055F0  C04B  F040         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 34428  0055F4  C04C  F041         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 34429  0055F8  C04D  F042         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 34430  0055FC  EE20 F001          	lfsr	2,1
 34431  005600  5047               	movf	__parse_file_resize@data,w,c
 34432  005602  26D9               	addwf	fsr2l,f,c
 34433  005604  5048               	movf	__parse_file_resize@data+1,w,c
 34434  005606  22DA               	addwfc	fsr2h,f,c
 34435  005608  50DF               	movf	indf2,w,c
 34436  00560A  ECF2  F010         	call	_fat_resize_file
 34437                           
 34438                           ;api.c: 533: return 8;
 34439  00560E  0E08               	movlw	8
 34440  005610  0012               	return	
 34441  005612                     __end_of__parse_file_resize:
 34442                           	opt stack 0
 34443                           tosu	equ	0xFFF
 34444                           tosh	equ	0xFFE
 34445                           tosl	equ	0xFFD
 34446                           pclath	equ	0xFFA
 34447                           tblptru	equ	0xFF8
 34448                           tblptrh	equ	0xFF7
 34449                           tblptrl	equ	0xFF6
 34450                           tablat	equ	0xFF5
 34451                           prodh	equ	0xFF4
 34452                           prodl	equ	0xFF3
 34453                           intcon	equ	0xFF2
 34454                           intcon2	equ	0xFF1
 34455                           intcon3	equ	0xFF0
 34456                           indf0	equ	0xFEF
 34457                           postinc0	equ	0xFEE
 34458                           fsr0h	equ	0xFEA
 34459                           fsr0l	equ	0xFE9
 34460                           wreg	equ	0xFE8
 34461                           indf1	equ	0xFE7
 34462                           postdec1	equ	0xFE5
 34463                           plusw1	equ	0xFE3
 34464                           fsr1h	equ	0xFE2
 34465                           fsr1l	equ	0xFE1
 34466                           indf2	equ	0xFDF
 34467                           postinc2	equ	0xFDE
 34468                           postdec2	equ	0xFDD
 34469                           plusw2	equ	0xFDB
 34470                           fsr2h	equ	0xFDA
 34471                           fsr2l	equ	0xFD9
 34472                           status	equ	0xFD8
 34473                           
 34474 ;; *************** function _fat_resize_file *****************
 34475 ;; Defined at:
 34476 ;;		line 648 in file "fat16.c"
 34477 ;; Parameters:    Size  Location     Type
 34478 ;;  file_number     1    wreg     unsigned char 
 34479 ;;  new_file_siz    4   62[COMRAM] unsigned long 
 34480 ;; Auto vars:     Size  Location     Type
 34481 ;;  file_number     1    6[BANK0 ] unsigned char 
 34482 ;;  root           32   11[BANK0 ] struct .
 34483 ;;  old_file_siz    4    0[BANK0 ] unsigned long 
 34484 ;;  cluster         2   45[BANK0 ] unsigned int 
 34485 ;;  next_cluster    2   43[BANK0 ] unsigned int 
 34486 ;;  new_number_o    2    9[BANK0 ] unsigned int 
 34487 ;;  cntr            2    7[BANK0 ] unsigned int 
 34488 ;;  old_number_o    2    4[BANK0 ] unsigned int 
 34489 ;; Return value:  Size  Location     Type
 34490 ;;                  1    wreg      unsigned char 
 34491 ;; Registers used:
 34492 ;;		wreg, status,2, status,0, cstack
 34493 ;; Tracked objects:
 34494 ;;		On entry : 0/0
 34495 ;;		On exit  : 0/0
 34496 ;;		Unchanged: 0/0
 34497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34499 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34500 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34501 ;;      Totals:         8      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34502 ;;Total ram usage:       55 bytes
 34503 ;; Hardware stack levels used:    1
 34504 ;; Hardware stack levels required when called:    7
 34505 ;; This function calls:
 34506 ;;		__get_empty_cluster
 34507 ;;		__read_fat
 34508 ;;		__root_is_available
 34509 ;;		__write_fat
 34510 ;;		__write_root
 34511 ;;		_fat_get_file_information
 34512 ;; This function is called by:
 34513 ;;		__parse_file_resize
 34514 ;; This function uses a non-reentrant model
 34515 ;;
 34516                           
 34517                           	psect	text172
 34518  0021E4                     __ptext172:
 34519                           	opt stack 0
 34520  0021E4                     _fat_resize_file:
 34521                           	opt stack 20
 34522                           
 34523                           ;incstack = 0
 34524                           ;fat_resize_file@file_number stored from wreg
 34525  0021E4  0100               	movlb	0	; () banked
 34526  0021E6  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 34527                           
 34528                           ;fat16.c: 650: rootEntry_t root;;fat16.c: 651: uint32_t old_file_size;;fat16.c: 652: uin
      +                          t16_t cluster;;fat16.c: 653: uint16_t next_cluster;;fat16.c: 654: uint16_t old_number_of
      +                          _clusters;;fat16.c: 655: uint16_t new_number_of_clusters;;fat16.c: 656: uint16_t cntr;;f
      +                          at16.c: 659: if(file_number>=64)
 34529  0021E8  0E3F               	movlw	63
 34530  0021EA  0100               	movlb	0	; () banked
 34531  0021EC  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 34532  0021EE  D001               	goto	l2040
 34533  0021F0  0012               	return	
 34534  0021F2                     l2040:
 34535                           
 34536                           ; BSR set to: 0
 34537                           ;fat16.c: 663: };fat16.c: 666: if(_root_is_available(file_number))
 34538                           
 34539                           ; BSR set to: 0
 34540  0021F2  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 34541  0021F4  EC94  F038         	call	__root_is_available
 34542  0021F8  0900               	iorlw	0
 34543  0021FA  A4D8               	btfss	status,2,c
 34544  0021FC  0012               	return	
 34545                           
 34546                           ;fat16.c: 670: };fat16.c: 673: fat_get_file_information(file_number, &root);
 34547                           
 34548                           ;fat16.c: 667: {;fat16.c: 669: return 0xFE;;	Return value of _fat_resize_file is never u
      +                          sed
 34549  0021FE  0E6B               	movlw	low fat_resize_file@root
 34550  002200  6E37               	movwf	fat_get_file_information@data,c
 34551  002202  0E00               	movlw	high fat_resize_file@root
 34552  002204  6E38               	movwf	fat_get_file_information@data+1,c
 34553  002206  0100               	movlb	0	; () banked
 34554  002208  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 34555  00220A  ECCF  F038         	call	_fat_get_file_information
 34556                           
 34557                           ;fat16.c: 674: old_file_size = root.fileSize;
 34558  00220E  C087  F060         	movff	fat_resize_file@root+28,fat_resize_file@old_file_size
 34559  002212  C088  F061         	movff	fat_resize_file@root+29,fat_resize_file@old_file_size+1
 34560  002216  C089  F062         	movff	fat_resize_file@root+30,fat_resize_file@old_file_size+2
 34561  00221A  C08A  F063         	movff	fat_resize_file@root+31,fat_resize_file@old_file_size+3
 34562                           
 34563                           ;fat16.c: 676: if(new_file_size==old_file_size)
 34564  00221E  0100               	movlb	0	; () banked
 34565  002220  5160               	movf	fat_resize_file@old_file_size& (0+255),w,b
 34566  002222  183F               	xorwf	fat_resize_file@new_file_size,w,c
 34567  002224  E10A               	bnz	l2043
 34568  002226  5161               	movf	(fat_resize_file@old_file_size+1)& (0+255),w,b
 34569  002228  1840               	xorwf	fat_resize_file@new_file_size+1,w,c
 34570  00222A  E107               	bnz	l2043
 34571  00222C  5162               	movf	(fat_resize_file@old_file_size+2)& (0+255),w,b
 34572  00222E  1841               	xorwf	fat_resize_file@new_file_size+2,w,c
 34573  002230  E104               	bnz	l2043
 34574  002232  5163               	movf	(fat_resize_file@old_file_size+3)& (0+255),w,b
 34575  002234  1842               	xorwf	fat_resize_file@new_file_size+3,w,c
 34576  002236  B4D8               	btfsc	status,2,c
 34577  002238  0012               	return	
 34578  00223A                     l2043:
 34579                           
 34580                           ; BSR set to: 0
 34581                           ;fat16.c: 680: };fat16.c: 683: cluster = root.firstCluster;
 34582  00223A  C085  F08D         	movff	fat_resize_file@root+26,fat_resize_file@cluster
 34583  00223E  C086  F08E         	movff	fat_resize_file@root+27,fat_resize_file@cluster+1
 34584                           
 34585                           ; BSR set to: 0
 34586                           ;fat16.c: 684: if(cluster==0)
 34587  002242  518D               	movf	fat_resize_file@cluster& (0+255),w,b
 34588  002244  118E               	iorwf	(fat_resize_file@cluster+1)& (0+255),w,b
 34589  002246  A4D8               	btfss	status,2,c
 34590  002248  D00E               	goto	l2044
 34591                           
 34592                           ; BSR set to: 0
 34593                           ;fat16.c: 685: {;fat16.c: 687: cluster = _get_empty_cluster(0x0000);
 34594  00224A  0E00               	movlw	0
 34595  00224C  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34596  00224E  0E00               	movlw	0
 34597  002250  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34598  002252  EC97  F036         	call	__get_empty_cluster	;wreg free
 34599  002256  C030  F08D         	movff	?__get_empty_cluster,fat_resize_file@cluster
 34600  00225A  C031  F08E         	movff	?__get_empty_cluster+1,fat_resize_file@cluster+1
 34601                           
 34602                           ;fat16.c: 688: root.firstCluster = cluster;
 34603  00225E  C08D  F085         	movff	fat_resize_file@cluster,fat_resize_file@root+26
 34604  002262  C08E  F086         	movff	fat_resize_file@cluster+1,fat_resize_file@root+27
 34605  002266                     l2044:
 34606                           
 34607                           ;fat16.c: 689: };fat16.c: 692: old_number_of_clusters = (old_file_size+511)>>9;
 34608  002266  0EFF               	movlw	255
 34609  002268  0100               	movlb	0	; () banked
 34610  00226A  2560               	addwf	fat_resize_file@old_file_size& (0+255),w,b
 34611  00226C  6E43               	movwf	??_fat_resize_file& (0+255),c
 34612  00226E  0E01               	movlw	1
 34613  002270  2161               	addwfc	(fat_resize_file@old_file_size+1)& (0+255),w,b
 34614  002272  6E44               	movwf	(??_fat_resize_file+1)& (0+255),c
 34615  002274  0E00               	movlw	0
 34616  002276  2162               	addwfc	(fat_resize_file@old_file_size+2)& (0+255),w,b
 34617  002278  6E45               	movwf	(??_fat_resize_file+2)& (0+255),c
 34618  00227A  0E00               	movlw	0
 34619  00227C  2163               	addwfc	(fat_resize_file@old_file_size+3)& (0+255),w,b
 34620  00227E  6E46               	movwf	(??_fat_resize_file+3)& (0+255),c
 34621  002280  0E0A               	movlw	10
 34622  002282  D005               	goto	u9760
 34623  002284                     u9765:
 34624  002284  90D8               	bcf	status,0,c
 34625  002286  3246               	rrcf	??_fat_resize_file+3,f,c
 34626  002288  3245               	rrcf	??_fat_resize_file+2,f,c
 34627  00228A  3244               	rrcf	??_fat_resize_file+1,f,c
 34628  00228C  3243               	rrcf	??_fat_resize_file,f,c
 34629  00228E                     u9760:
 34630  00228E  2EE8               	decfsz	wreg,f,c
 34631  002290  D7F9               	goto	u9765
 34632  002292  C043  F064         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 34633  002296  C044  F065         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 34634                           
 34635                           ; BSR set to: 0
 34636                           ;fat16.c: 693: new_number_of_clusters = (new_file_size+511)>>9;
 34637  00229A  0EFF               	movlw	255
 34638  00229C  243F               	addwf	fat_resize_file@new_file_size,w,c
 34639  00229E  6E43               	movwf	??_fat_resize_file& (0+255),c
 34640  0022A0  0E01               	movlw	1
 34641  0022A2  2040               	addwfc	fat_resize_file@new_file_size+1,w,c
 34642  0022A4  6E44               	movwf	(??_fat_resize_file+1)& (0+255),c
 34643  0022A6  0E00               	movlw	0
 34644  0022A8  2041               	addwfc	fat_resize_file@new_file_size+2,w,c
 34645  0022AA  6E45               	movwf	(??_fat_resize_file+2)& (0+255),c
 34646  0022AC  0E00               	movlw	0
 34647  0022AE  2042               	addwfc	fat_resize_file@new_file_size+3,w,c
 34648  0022B0  6E46               	movwf	(??_fat_resize_file+3)& (0+255),c
 34649  0022B2  0E0A               	movlw	10
 34650  0022B4  D005               	goto	u9770
 34651  0022B6                     u9775:
 34652  0022B6  90D8               	bcf	status,0,c
 34653  0022B8  3246               	rrcf	??_fat_resize_file+3,f,c
 34654  0022BA  3245               	rrcf	??_fat_resize_file+2,f,c
 34655  0022BC  3244               	rrcf	??_fat_resize_file+1,f,c
 34656  0022BE  3243               	rrcf	??_fat_resize_file,f,c
 34657  0022C0                     u9770:
 34658  0022C0  2EE8               	decfsz	wreg,f,c
 34659  0022C2  D7F9               	goto	u9775
 34660  0022C4  C043  F069         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 34661  0022C8  C044  F06A         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 34662                           
 34663                           ; BSR set to: 0
 34664                           ;fat16.c: 699: if(old_number_of_clusters<new_number_of_clusters)
 34665  0022CC  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34666  0022CE  5D64               	subwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 34667  0022D0  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34668  0022D2  5965               	subwfb	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 34669  0022D4  B0D8               	btfsc	status,0,c
 34670  0022D6  D050               	goto	l2045
 34671                           
 34672                           ; BSR set to: 0
 34673                           ;fat16.c: 700: {;fat16.c: 701: for(cntr=1; cntr<=new_number_of_clusters; ++cntr)
 34674  0022D8  0E00               	movlw	0
 34675  0022DA  6F68               	movwf	(fat_resize_file@cntr+1)& (0+255),b
 34676  0022DC  0E01               	movlw	1
 34677  0022DE  6F67               	movwf	fat_resize_file@cntr& (0+255),b
 34678  0022E0  D044               	goto	l2046
 34679  0022E2                     
 34680                           ; BSR set to: 0
 34681                           ;fat16.c: 702: {;fat16.c: 703: next_cluster = _read_fat(cluster);
 34682                           
 34683                           ; BSR set to: 0
 34684  0022E2  C08D  F030         	movff	fat_resize_file@cluster,__read_fat@cluster
 34685  0022E6  C08E  F031         	movff	fat_resize_file@cluster+1,__read_fat@cluster+1
 34686  0022EA  EC93  F03F         	call	__read_fat	;wreg free
 34687  0022EE  C030  F08B         	movff	?__read_fat,fat_resize_file@next_cluster
 34688  0022F2  C031  F08C         	movff	?__read_fat+1,fat_resize_file@next_cluster+1
 34689                           
 34690                           ;fat16.c: 705: if(cntr==new_number_of_clusters)
 34691  0022F6  0100               	movlb	0	; () banked
 34692  0022F8  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34693  0022FA  1967               	xorwf	fat_resize_file@cntr& (0+255),w,b
 34694  0022FC  E10E               	bnz	l12890
 34695  0022FE  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34696  002300  1968               	xorwf	(fat_resize_file@cntr+1)& (0+255),w,b
 34697  002302  A4D8               	btfss	status,2,c
 34698  002304  D00A               	goto	l2048
 34699                           
 34700                           ; BSR set to: 0
 34701                           ;fat16.c: 706: {;fat16.c: 708: _write_fat(cluster, 0xFFFF);
 34702  002306  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34703  00230A  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34704  00230E  0EFF               	movlw	255
 34705  002310  6E2C               	movwf	__write_fat@value+1,c
 34706  002312  682B               	setf	__write_fat@value,c
 34707  002314  EC7E  F040         	call	__write_fat	;wreg free
 34708                           
 34709                           ;fat16.c: 709: }
 34710  002318  D025               	goto	l2053
 34711  00231A                     l2048:
 34712  00231A                     l12890:
 34713                           
 34714                           ;fat16.c: 710: else;fat16.c: 711: {;fat16.c: 713: if((next_cluster>=0xFFF0) || (next_clu
      +                          ster==0))
 34715  00231A  0EF0               	movlw	240
 34716  00231C  0100               	movlb	0	; () banked
 34717  00231E  5D8B               	subwf	fat_resize_file@next_cluster& (0+255),w,b
 34718  002320  0EFF               	movlw	255
 34719  002322  598C               	subwfb	(fat_resize_file@next_cluster+1)& (0+255),w,b
 34720  002324  B0D8               	btfsc	status,0,c
 34721  002326  D004               	goto	u9810
 34722                           
 34723                           ; BSR set to: 0
 34724  002328  518B               	movf	fat_resize_file@next_cluster& (0+255),w,b
 34725  00232A  118C               	iorwf	(fat_resize_file@next_cluster+1)& (0+255),w,b
 34726  00232C  A4D8               	btfss	status,2,c
 34727  00232E  D016               	goto	l12896
 34728  002330                     u9810:
 34729                           
 34730                           ; BSR set to: 0
 34731                           ;fat16.c: 714: {;fat16.c: 716: next_cluster = _get_empty_cluster(cluster+1);
 34732                           
 34733                           ; BSR set to: 0
 34734  002330  0E01               	movlw	1
 34735  002332  258D               	addwf	fat_resize_file@cluster& (0+255),w,b
 34736  002334  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34737  002336  0E00               	movlw	0
 34738  002338  218E               	addwfc	(fat_resize_file@cluster+1)& (0+255),w,b
 34739  00233A  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34740  00233C  EC97  F036         	call	__get_empty_cluster	;wreg free
 34741  002340  C030  F08B         	movff	?__get_empty_cluster,fat_resize_file@next_cluster
 34742  002344  C031  F08C         	movff	?__get_empty_cluster+1,fat_resize_file@next_cluster+1
 34743                           
 34744                           ;fat16.c: 718: _write_fat(cluster, next_cluster);
 34745  002348  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34746  00234C  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34747  002350  C08B  F02B         	movff	fat_resize_file@next_cluster,__write_fat@value
 34748  002354  C08C  F02C         	movff	fat_resize_file@next_cluster+1,__write_fat@value+1
 34749  002358  EC7E  F040         	call	__write_fat	;wreg free
 34750  00235C                     l12896:
 34751                           
 34752                           ; BSR set to: 0
 34753                           ;fat16.c: 722: else;fat16.c: 723: {;fat16.c: 726: cluster = next_cluster;
 34754                           
 34755                           ;fat16.c: 721: }
 34756                           
 34757                           ;fat16.c: 720: cluster = next_cluster;
 34758  00235C  C08B  F08D         	movff	fat_resize_file@next_cluster,fat_resize_file@cluster
 34759  002360  C08C  F08E         	movff	fat_resize_file@next_cluster+1,fat_resize_file@cluster+1
 34760  002364                     l2053:
 34761                           
 34762                           ; BSR set to: 0
 34763                           
 34764                           ; BSR set to: 0
 34765  002364  0100               	movlb	0	; () banked
 34766  002366  4B67               	infsnz	fat_resize_file@cntr& (0+255),f,b
 34767  002368  2B68               	incf	(fat_resize_file@cntr+1)& (0+255),f,b
 34768  00236A                     l2046:
 34769                           
 34770                           ; BSR set to: 0
 34771                           
 34772                           ; BSR set to: 0
 34773  00236A  5167               	movf	fat_resize_file@cntr& (0+255),w,b
 34774  00236C  5D69               	subwf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34775  00236E  5168               	movf	(fat_resize_file@cntr+1)& (0+255),w,b
 34776  002370  596A               	subwfb	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34777  002372  A0D8               	btfss	status,0,c
 34778  002374  D045               	goto	u9860
 34779  002376  D7B5               	goto	l2047
 34780  002378                     l2045:
 34781                           
 34782                           ; BSR set to: 0
 34783                           ;fat16.c: 733: else if(old_number_of_clusters>new_number_of_clusters)
 34784                           
 34785                           ; BSR set to: 0
 34786  002378  5164               	movf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 34787  00237A  5D69               	subwf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34788  00237C  5165               	movf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 34789  00237E  596A               	subwfb	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34790  002380  B0D8               	btfsc	status,0,c
 34791  002382  D03E               	goto	u9860
 34792                           
 34793                           ; BSR set to: 0
 34794                           ;fat16.c: 734: {;fat16.c: 735: for(cntr=1; cntr<=old_number_of_clusters; ++cntr)
 34795  002384  0E00               	movlw	0
 34796  002386  6F68               	movwf	(fat_resize_file@cntr+1)& (0+255),b
 34797  002388  0E01               	movlw	1
 34798  00238A  6F67               	movwf	fat_resize_file@cntr& (0+255),b
 34799  00238C  D033               	goto	l2057
 34800  00238E                     
 34801                           ; BSR set to: 0
 34802                           ;fat16.c: 736: {;fat16.c: 737: next_cluster = _read_fat(cluster);
 34803                           
 34804                           ; BSR set to: 0
 34805  00238E  C08D  F030         	movff	fat_resize_file@cluster,__read_fat@cluster
 34806  002392  C08E  F031         	movff	fat_resize_file@cluster+1,__read_fat@cluster+1
 34807  002396  EC93  F03F         	call	__read_fat	;wreg free
 34808  00239A  C030  F08B         	movff	?__read_fat,fat_resize_file@next_cluster
 34809  00239E  C031  F08C         	movff	?__read_fat+1,fat_resize_file@next_cluster+1
 34810                           
 34811                           ;fat16.c: 739: if(cntr<new_number_of_clusters)
 34812  0023A2  0100               	movlb	0	; () banked
 34813  0023A4  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34814  0023A6  5D67               	subwf	fat_resize_file@cntr& (0+255),w,b
 34815  0023A8  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34816  0023AA  5968               	subwfb	(fat_resize_file@cntr+1)& (0+255),w,b
 34817  0023AC  A0D8               	btfss	status,0,c
 34818  0023AE  D01B               	goto	l12920
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;fat16.c: 744: else if(cntr==new_number_of_clusters)
 34822                           
 34823                           ; BSR set to: 0
 34824                           
 34825                           ;fat16.c: 743: }
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;fat16.c: 740: {;fat16.c: 742: cluster = next_cluster;
 34829  0023B0  5169               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 34830  0023B2  1967               	xorwf	fat_resize_file@cntr& (0+255),w,b
 34831  0023B4  E10E               	bnz	l12918
 34832  0023B6  516A               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 34833  0023B8  1968               	xorwf	(fat_resize_file@cntr+1)& (0+255),w,b
 34834  0023BA  A4D8               	btfss	status,2,c
 34835  0023BC  D00A               	goto	l2061
 34836                           
 34837                           ; BSR set to: 0
 34838                           ;fat16.c: 745: {;fat16.c: 747: _write_fat(cluster, 0xFFFF);
 34839  0023BE  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34840  0023C2  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34841  0023C6  0EFF               	movlw	255
 34842  0023C8  6E2C               	movwf	__write_fat@value+1,c
 34843  0023CA  682B               	setf	__write_fat@value,c
 34844  0023CC  EC7E  F040         	call	__write_fat	;wreg free
 34845  0023D0  D00A               	goto	l12920
 34846  0023D2                     l2061:
 34847  0023D2                     l12918:
 34848                           
 34849                           ;fat16.c: 751: else;fat16.c: 752: {;fat16.c: 754: _write_fat(cluster, 0x0000);
 34850  0023D2  C08D  F029         	movff	fat_resize_file@cluster,__write_fat@cluster
 34851  0023D6  C08E  F02A         	movff	fat_resize_file@cluster+1,__write_fat@cluster+1
 34852  0023DA  0E00               	movlw	0
 34853  0023DC  6E2C               	movwf	__write_fat@value+1,c
 34854  0023DE  0E00               	movlw	0
 34855  0023E0  6E2B               	movwf	__write_fat@value,c
 34856  0023E2  EC7E  F040         	call	__write_fat	;wreg free
 34857  0023E6                     l12920:
 34858                           
 34859                           ;fat16.c: 756: cluster = next_cluster;
 34860  0023E6  C08B  F08D         	movff	fat_resize_file@next_cluster,fat_resize_file@cluster
 34861  0023EA  C08C  F08E         	movff	fat_resize_file@next_cluster+1,fat_resize_file@cluster+1
 34862  0023EE  0100               	movlb	0	; () banked
 34863  0023F0  4B67               	infsnz	fat_resize_file@cntr& (0+255),f,b
 34864  0023F2  2B68               	incf	(fat_resize_file@cntr+1)& (0+255),f,b
 34865  0023F4                     l2057:
 34866                           
 34867                           ; BSR set to: 0
 34868                           
 34869                           ; BSR set to: 0
 34870  0023F4  5167               	movf	fat_resize_file@cntr& (0+255),w,b
 34871  0023F6  5D64               	subwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 34872  0023F8  5168               	movf	(fat_resize_file@cntr+1)& (0+255),w,b
 34873  0023FA  5965               	subwfb	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 34874  0023FC  B0D8               	btfsc	status,0,c
 34875  0023FE  D7C7               	goto	l2058
 34876  002400                     u9860:
 34877                           
 34878                           ; BSR set to: 0
 34879                           ;fat16.c: 757: };fat16.c: 758: };fat16.c: 759: };fat16.c: 763: root.fileSize = new_file_
      +                          size;
 34880                           
 34881                           ; BSR set to: 0
 34882                           
 34883                           ; BSR set to: 0
 34884  002400  C03F  F087         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 34885  002404  C040  F088         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 34886  002408  C041  F089         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 34887  00240C  C042  F08A         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 34888                           
 34889                           ; BSR set to: 0
 34890                           ;fat16.c: 764: _write_root(file_number, &root);
 34891  002410  0E6B               	movlw	low fat_resize_file@root
 34892  002412  6E29               	movwf	__write_root@data,c
 34893  002414  0E00               	movlw	high fat_resize_file@root
 34894  002416  6E2A               	movwf	__write_root@data+1,c
 34895  002418  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 34896  00241A  ECCD  F03C         	call	__write_root
 34897  00241E  0012               	return	
 34898  002420                     __end_of_fat_resize_file:
 34899                           	opt stack 0
 34900                           tosu	equ	0xFFF
 34901                           tosh	equ	0xFFE
 34902                           tosl	equ	0xFFD
 34903                           pclath	equ	0xFFA
 34904                           tblptru	equ	0xFF8
 34905                           tblptrh	equ	0xFF7
 34906                           tblptrl	equ	0xFF6
 34907                           tablat	equ	0xFF5
 34908                           prodh	equ	0xFF4
 34909                           prodl	equ	0xFF3
 34910                           intcon	equ	0xFF2
 34911                           intcon2	equ	0xFF1
 34912                           intcon3	equ	0xFF0
 34913                           indf0	equ	0xFEF
 34914                           postinc0	equ	0xFEE
 34915                           fsr0h	equ	0xFEA
 34916                           fsr0l	equ	0xFE9
 34917                           wreg	equ	0xFE8
 34918                           indf1	equ	0xFE7
 34919                           postdec1	equ	0xFE5
 34920                           plusw1	equ	0xFE3
 34921                           fsr1h	equ	0xFE2
 34922                           fsr1l	equ	0xFE1
 34923                           indf2	equ	0xFDF
 34924                           postinc2	equ	0xFDE
 34925                           postdec2	equ	0xFDD
 34926                           plusw2	equ	0xFDB
 34927                           fsr2h	equ	0xFDA
 34928                           fsr2l	equ	0xFD9
 34929                           status	equ	0xFD8
 34930                           
 34931 ;; *************** function __parse_file_rename *****************
 34932 ;; Defined at:
 34933 ;;		line 574 in file "api.c"
 34934 ;; Parameters:    Size  Location     Type
 34935 ;;  data            2   66[COMRAM] PTR unsigned char 
 34936 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34937 ;; Auto vars:     Size  Location     Type
 34938 ;;		None
 34939 ;; Return value:  Size  Location     Type
 34940 ;;                  1    wreg      unsigned char 
 34941 ;; Registers used:
 34942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34943 ;; Tracked objects:
 34944 ;;		On entry : 0/0
 34945 ;;		On exit  : 0/0
 34946 ;;		Unchanged: 0/0
 34947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34952 ;;Total ram usage:        3 bytes
 34953 ;; Hardware stack levels used:    1
 34954 ;; Hardware stack levels required when called:    8
 34955 ;; This function calls:
 34956 ;;		_fat_rename_file
 34957 ;; This function is called by:
 34958 ;;		__parse_command_long
 34959 ;; This function uses a non-reentrant model
 34960 ;;
 34961                           
 34962                           	psect	text173
 34963  00743C                     __ptext173:
 34964                           	opt stack 0
 34965  00743C                     __parse_file_rename:
 34966                           	opt stack 20
 34967                           
 34968                           ;api.c: 577: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 34969                           
 34970                           ;incstack = 0
 34971  00743C  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 34972  007440  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 34973  007444  0E53               	movlw	83
 34974  007446  18DE               	xorwf	postinc2,w,c
 34975  007448  A4D8               	btfss	status,2,c
 34976  00744A  D014               	goto	u10510
 34977  00744C  EE20 F00D          	lfsr	2,13
 34978  007450  5043               	movf	__parse_file_rename@data,w,c
 34979  007452  26D9               	addwf	fsr2l,f,c
 34980  007454  5044               	movf	__parse_file_rename@data+1,w,c
 34981  007456  22DA               	addwfc	fsr2h,f,c
 34982  007458  0E7E               	movlw	126
 34983  00745A  18DE               	xorwf	postinc2,w,c
 34984  00745C  A4D8               	btfss	status,2,c
 34985  00745E  D00A               	goto	u10510
 34986  007460  EE20 F00E          	lfsr	2,14
 34987  007464  5043               	movf	__parse_file_rename@data,w,c
 34988  007466  26D9               	addwf	fsr2l,f,c
 34989  007468  5044               	movf	__parse_file_rename@data+1,w,c
 34990  00746A  22DA               	addwfc	fsr2h,f,c
 34991  00746C  0E18               	movlw	24
 34992  00746E  18DE               	xorwf	postinc2,w,c
 34993  007470  B4D8               	btfsc	status,2,c
 34994  007472  D002               	goto	l2740
 34995  007474                     u10510:
 34996                           
 34997                           ;api.c: 578: {;api.c: 579: return 15;
 34998  007474  0E0F               	movlw	15
 34999  007476  0012               	return	
 35000  007478                     l2740:
 35001                           
 35002                           ;api.c: 580: };api.c: 583: fat_rename_file(data[1], &data[2], &data[10]);
 35003  007478  0E02               	movlw	2
 35004  00747A  2443               	addwf	__parse_file_rename@data,w,c
 35005  00747C  6E3F               	movwf	fat_rename_file@name,c
 35006  00747E  0E00               	movlw	0
 35007  007480  2044               	addwfc	__parse_file_rename@data+1,w,c
 35008  007482  6E40               	movwf	fat_rename_file@name+1,c
 35009  007484  0E0A               	movlw	10
 35010  007486  2443               	addwf	__parse_file_rename@data,w,c
 35011  007488  6E41               	movwf	fat_rename_file@extension,c
 35012  00748A  0E00               	movlw	0
 35013  00748C  2044               	addwfc	__parse_file_rename@data+1,w,c
 35014  00748E  6E42               	movwf	fat_rename_file@extension+1,c
 35015  007490  EE20 F001          	lfsr	2,1
 35016  007494  5043               	movf	__parse_file_rename@data,w,c
 35017  007496  26D9               	addwf	fsr2l,f,c
 35018  007498  5044               	movf	__parse_file_rename@data+1,w,c
 35019  00749A  22DA               	addwfc	fsr2h,f,c
 35020  00749C  50DF               	movf	indf2,w,c
 35021  00749E  EC0A  F034         	call	_fat_rename_file
 35022                           
 35023                           ;api.c: 584: return 15;
 35024  0074A2  0E0F               	movlw	15
 35025  0074A4  0012               	return	
 35026  0074A6                     __end_of__parse_file_rename:
 35027                           	opt stack 0
 35028                           tosu	equ	0xFFF
 35029                           tosh	equ	0xFFE
 35030                           tosl	equ	0xFFD
 35031                           pclath	equ	0xFFA
 35032                           tblptru	equ	0xFF8
 35033                           tblptrh	equ	0xFF7
 35034                           tblptrl	equ	0xFF6
 35035                           tablat	equ	0xFF5
 35036                           prodh	equ	0xFF4
 35037                           prodl	equ	0xFF3
 35038                           intcon	equ	0xFF2
 35039                           intcon2	equ	0xFF1
 35040                           intcon3	equ	0xFF0
 35041                           indf0	equ	0xFEF
 35042                           postinc0	equ	0xFEE
 35043                           fsr0h	equ	0xFEA
 35044                           fsr0l	equ	0xFE9
 35045                           wreg	equ	0xFE8
 35046                           indf1	equ	0xFE7
 35047                           postdec1	equ	0xFE5
 35048                           plusw1	equ	0xFE3
 35049                           fsr1h	equ	0xFE2
 35050                           fsr1l	equ	0xFE1
 35051                           indf2	equ	0xFDF
 35052                           postinc2	equ	0xFDE
 35053                           postdec2	equ	0xFDD
 35054                           plusw2	equ	0xFDB
 35055                           fsr2h	equ	0xFDA
 35056                           fsr2l	equ	0xFD9
 35057                           status	equ	0xFD8
 35058                           
 35059 ;; *************** function _fat_rename_file *****************
 35060 ;; Defined at:
 35061 ;;		line 538 in file "fat16.c"
 35062 ;; Parameters:    Size  Location     Type
 35063 ;;  file_number     1    wreg     unsigned char 
 35064 ;;  name            2   62[COMRAM] PTR unsigned char 
 35065 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35066 ;;  extension       2   64[COMRAM] PTR unsigned char 
 35067 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35068 ;; Auto vars:     Size  Location     Type
 35069 ;;  file_number     1    0[BANK0 ] unsigned char 
 35070 ;;  root           32    1[BANK0 ] struct .
 35071 ;;  cntr            1   33[BANK0 ] unsigned char 
 35072 ;; Return value:  Size  Location     Type
 35073 ;;                  1    wreg      void 
 35074 ;; Registers used:
 35075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35076 ;; Tracked objects:
 35077 ;;		On entry : 0/0
 35078 ;;		On exit  : 0/0
 35079 ;;		Unchanged: 0/0
 35080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35082 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35084 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35085 ;;Total ram usage:       38 bytes
 35086 ;; Hardware stack levels used:    1
 35087 ;; Hardware stack levels required when called:    7
 35088 ;; This function calls:
 35089 ;;		__write_root
 35090 ;;		_fat_get_file_information
 35091 ;; This function is called by:
 35092 ;;		__parse_file_rename
 35093 ;; This function uses a non-reentrant model
 35094 ;;
 35095                           
 35096                           	psect	text174
 35097  006814                     __ptext174:
 35098                           	opt stack 0
 35099  006814                     _fat_rename_file:
 35100                           	opt stack 20
 35101                           
 35102                           ;incstack = 0
 35103                           ;fat_rename_file@file_number stored from wreg
 35104  006814  0100               	movlb	0	; () banked
 35105  006816  6F60               	movwf	fat_rename_file@file_number& (0+255),b
 35106                           
 35107                           ;fat16.c: 540: rootEntry_t root;;fat16.c: 541: uint8_t cntr;;fat16.c: 544: fat_get_file_
      +                          information(file_number, &root);
 35108  006818  0E61               	movlw	low fat_rename_file@root
 35109  00681A  6E37               	movwf	fat_get_file_information@data,c
 35110  00681C  0E00               	movlw	high fat_rename_file@root
 35111  00681E  6E38               	movwf	fat_get_file_information@data+1,c
 35112  006820  0100               	movlb	0	; () banked
 35113  006822  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 35114  006824  ECCF  F038         	call	_fat_get_file_information
 35115                           
 35116                           ;fat16.c: 547: for(cntr=0; cntr<8; ++cntr)
 35117  006828  0E00               	movlw	0
 35118  00682A  0100               	movlb	0	; () banked
 35119  00682C  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 35120  00682E                     l12780:
 35121                           
 35122                           ; BSR set to: 0
 35123  00682E  0E07               	movlw	7
 35124  006830  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 35125  006832  D001               	goto	l2017
 35126  006834  D014               	goto	u9630
 35127  006836                     l2017:
 35128                           
 35129                           ; BSR set to: 0
 35130                           ;fat16.c: 548: {;fat16.c: 549: root.fileName[cntr] = name[cntr];
 35131                           
 35132                           ; BSR set to: 0
 35133  006836  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35134  006838  0D01               	mullw	1
 35135  00683A  50F3               	movf	prodl,w,c
 35136  00683C  243F               	addwf	fat_rename_file@name,w,c
 35137  00683E  6ED9               	movwf	fsr2l,c
 35138  006840  50F4               	movf	prodh,w,c
 35139  006842  2040               	addwfc	fat_rename_file@name+1,w,c
 35140  006844  6EDA               	movwf	fsr2h,c
 35141  006846  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35142  006848  0D01               	mullw	1
 35143  00684A  0E61               	movlw	low fat_rename_file@root
 35144  00684C  24F3               	addwf	prodl,w,c
 35145  00684E  6EE1               	movwf	fsr1l,c
 35146  006850  0E00               	movlw	high fat_rename_file@root
 35147  006852  20F4               	addwfc	prodh,w,c
 35148  006854  6EE2               	movwf	fsr1h,c
 35149  006856  CFDF FFE7          	movff	indf2,indf1
 35150                           
 35151                           ; BSR set to: 0
 35152  00685A  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 35153  00685C  D7E8               	goto	l12780
 35154  00685E                     u9630:
 35155                           
 35156                           ; BSR set to: 0
 35157                           ;fat16.c: 550: };fat16.c: 553: for(cntr=0; cntr<3; ++cntr)
 35158                           
 35159                           ; BSR set to: 0
 35160  00685E  0E00               	movlw	0
 35161  006860  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 35162  006862                     l12792:
 35163                           
 35164                           ; BSR set to: 0
 35165  006862  0E02               	movlw	2
 35166  006864  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 35167  006866  D001               	goto	l2019
 35168  006868  D018               	goto	u9650
 35169  00686A                     l2019:
 35170                           
 35171                           ; BSR set to: 0
 35172                           ;fat16.c: 554: {;fat16.c: 555: root.fileExtension[cntr] = extension[cntr];
 35173                           
 35174                           ; BSR set to: 0
 35175  00686A  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35176  00686C  0D01               	mullw	1
 35177  00686E  50F3               	movf	prodl,w,c
 35178  006870  2441               	addwf	fat_rename_file@extension,w,c
 35179  006872  6ED9               	movwf	fsr2l,c
 35180  006874  50F4               	movf	prodh,w,c
 35181  006876  2042               	addwfc	fat_rename_file@extension+1,w,c
 35182  006878  6EDA               	movwf	fsr2h,c
 35183  00687A  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 35184  00687C  0D01               	mullw	1
 35185  00687E  0E08               	movlw	8
 35186  006880  26F3               	addwf	prodl,f,c
 35187  006882  0E00               	movlw	0
 35188  006884  22F4               	addwfc	prodh,f,c
 35189  006886  0E61               	movlw	low fat_rename_file@root
 35190  006888  24F3               	addwf	prodl,w,c
 35191  00688A  6EE1               	movwf	fsr1l,c
 35192  00688C  0E00               	movlw	high fat_rename_file@root
 35193  00688E  20F4               	addwfc	prodh,w,c
 35194  006890  6EE2               	movwf	fsr1h,c
 35195  006892  CFDF FFE7          	movff	indf2,indf1
 35196                           
 35197                           ; BSR set to: 0
 35198  006896  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 35199  006898  D7E4               	goto	l12792
 35200  00689A                     u9650:
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;fat16.c: 556: };fat16.c: 558: _write_root(file_number, &root);
 35204                           
 35205                           ; BSR set to: 0
 35206  00689A  0E61               	movlw	low fat_rename_file@root
 35207  00689C  6E29               	movwf	__write_root@data,c
 35208  00689E  0E00               	movlw	high fat_rename_file@root
 35209  0068A0  6E2A               	movwf	__write_root@data+1,c
 35210  0068A2  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 35211  0068A4  ECCD  F03C         	call	__write_root
 35212  0068A8  0012               	return		;funcret
 35213  0068AA                     __end_of_fat_rename_file:
 35214                           	opt stack 0
 35215                           tosu	equ	0xFFF
 35216                           tosh	equ	0xFFE
 35217                           tosl	equ	0xFFD
 35218                           pclath	equ	0xFFA
 35219                           tblptru	equ	0xFF8
 35220                           tblptrh	equ	0xFF7
 35221                           tblptrl	equ	0xFF6
 35222                           tablat	equ	0xFF5
 35223                           prodh	equ	0xFF4
 35224                           prodl	equ	0xFF3
 35225                           intcon	equ	0xFF2
 35226                           intcon2	equ	0xFF1
 35227                           intcon3	equ	0xFF0
 35228                           indf0	equ	0xFEF
 35229                           postinc0	equ	0xFEE
 35230                           fsr0h	equ	0xFEA
 35231                           fsr0l	equ	0xFE9
 35232                           wreg	equ	0xFE8
 35233                           indf1	equ	0xFE7
 35234                           postdec1	equ	0xFE5
 35235                           plusw1	equ	0xFE3
 35236                           fsr1h	equ	0xFE2
 35237                           fsr1l	equ	0xFE1
 35238                           indf2	equ	0xFDF
 35239                           postinc2	equ	0xFDE
 35240                           postdec2	equ	0xFDD
 35241                           plusw2	equ	0xFDB
 35242                           fsr2h	equ	0xFDA
 35243                           fsr2l	equ	0xFD9
 35244                           status	equ	0xFD8
 35245                           
 35246 ;; *************** function __parse_file_modify *****************
 35247 ;; Defined at:
 35248 ;;		line 601 in file "api.c"
 35249 ;; Parameters:    Size  Location     Type
 35250 ;;  data            2   82[COMRAM] PTR unsigned char 
 35251 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35252 ;; Auto vars:     Size  Location     Type
 35253 ;;  start_byte      4   87[COMRAM] unsigned long 
 35254 ;;  number_of_by    2   85[COMRAM] unsigned int 
 35255 ;; Return value:  Size  Location     Type
 35256 ;;                  1    wreg      unsigned char 
 35257 ;; Registers used:
 35258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35259 ;; Tracked objects:
 35260 ;;		On entry : 0/0
 35261 ;;		On exit  : 0/0
 35262 ;;		Unchanged: 0/0
 35263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35265 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35267 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35268 ;;Total ram usage:        9 bytes
 35269 ;; Hardware stack levels used:    1
 35270 ;; Hardware stack levels required when called:    8
 35271 ;; This function calls:
 35272 ;;		_fat_modify_file
 35273 ;; This function is called by:
 35274 ;;		__parse_command_long
 35275 ;; This function uses a non-reentrant model
 35276 ;;
 35277                           
 35278                           	psect	text175
 35279  0047A6                     __ptext175:
 35280                           	opt stack 0
 35281  0047A6                     __parse_file_modify:
 35282                           	opt stack 20
 35283                           
 35284                           ;api.c: 603: uint16_t number_of_bytes;;api.c: 604: uint32_t start_byte;;api.c: 607: if((
      +                          data[0]!=COMMAND_FILE_MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 35285                           
 35286                           ;incstack = 0
 35287  0047A6  C053  FFD9         	movff	__parse_file_modify@data,fsr2l
 35288  0047AA  C054  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 35289  0047AE  0E55               	movlw	85
 35290  0047B0  18DE               	xorwf	postinc2,w,c
 35291  0047B2  A4D8               	btfss	status,2,c
 35292  0047B4  D014               	goto	u10570
 35293  0047B6  EE20 F007          	lfsr	2,7
 35294  0047BA  5053               	movf	__parse_file_modify@data,w,c
 35295  0047BC  26D9               	addwf	fsr2l,f,c
 35296  0047BE  5054               	movf	__parse_file_modify@data+1,w,c
 35297  0047C0  22DA               	addwfc	fsr2h,f,c
 35298  0047C2  0E0F               	movlw	15
 35299  0047C4  18DE               	xorwf	postinc2,w,c
 35300  0047C6  A4D8               	btfss	status,2,c
 35301  0047C8  D00A               	goto	u10570
 35302  0047CA  EE20 F008          	lfsr	2,8
 35303  0047CE  5053               	movf	__parse_file_modify@data,w,c
 35304  0047D0  26D9               	addwf	fsr2l,f,c
 35305  0047D2  5054               	movf	__parse_file_modify@data+1,w,c
 35306  0047D4  22DA               	addwfc	fsr2h,f,c
 35307  0047D6  0E9B               	movlw	155
 35308  0047D8  18DE               	xorwf	postinc2,w,c
 35309  0047DA  B4D8               	btfsc	status,2,c
 35310  0047DC  D002               	goto	l2752
 35311  0047DE                     u10570:
 35312                           
 35313                           ;api.c: 608: {;api.c: 610: return 65;
 35314  0047DE  0E41               	movlw	65
 35315  0047E0  0012               	return	
 35316  0047E2                     l2752:
 35317                           
 35318                           ;api.c: 611: };api.c: 614: number_of_bytes = data[6];
 35319  0047E2  EE20 F006          	lfsr	2,6
 35320  0047E6  5053               	movf	__parse_file_modify@data,w,c
 35321  0047E8  26D9               	addwf	fsr2l,f,c
 35322  0047EA  5054               	movf	__parse_file_modify@data+1,w,c
 35323  0047EC  22DA               	addwfc	fsr2h,f,c
 35324  0047EE  50DF               	movf	indf2,w,c
 35325  0047F0  6E55               	movwf	??__parse_file_modify& (0+255),c
 35326  0047F2  5055               	movf	??__parse_file_modify,w,c
 35327  0047F4  6E56               	movwf	__parse_file_modify@number_of_bytes,c
 35328  0047F6  6A57               	clrf	__parse_file_modify@number_of_bytes+1,c
 35329                           
 35330                           ;api.c: 617: start_byte = data[2];
 35331  0047F8  EE20 F002          	lfsr	2,2
 35332  0047FC  5053               	movf	__parse_file_modify@data,w,c
 35333  0047FE  26D9               	addwf	fsr2l,f,c
 35334  004800  5054               	movf	__parse_file_modify@data+1,w,c
 35335  004802  22DA               	addwfc	fsr2h,f,c
 35336  004804  50DF               	movf	indf2,w,c
 35337  004806  6E55               	movwf	??__parse_file_modify& (0+255),c
 35338  004808  5055               	movf	??__parse_file_modify,w,c
 35339  00480A  6E58               	movwf	__parse_file_modify@start_byte,c
 35340  00480C  6A59               	clrf	__parse_file_modify@start_byte+1,c
 35341  00480E  6A5A               	clrf	__parse_file_modify@start_byte+2,c
 35342  004810  6A5B               	clrf	__parse_file_modify@start_byte+3,c
 35343                           
 35344                           ;api.c: 618: start_byte <<= 8;
 35345  004812  C05A  F05B         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35346  004816  C059  F05A         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35347  00481A  C058  F059         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35348  00481E  6A58               	clrf	__parse_file_modify@start_byte,c
 35349                           
 35350                           ;api.c: 619: start_byte |= data[3];
 35351  004820  EE20 F003          	lfsr	2,3
 35352  004824  5053               	movf	__parse_file_modify@data,w,c
 35353  004826  26D9               	addwf	fsr2l,f,c
 35354  004828  5054               	movf	__parse_file_modify@data+1,w,c
 35355  00482A  22DA               	addwfc	fsr2h,f,c
 35356  00482C  50DF               	movf	indf2,w,c
 35357  00482E  6E55               	movwf	??__parse_file_modify& (0+255),c
 35358  004830  5055               	movf	??__parse_file_modify,w,c
 35359  004832  1258               	iorwf	__parse_file_modify@start_byte,f,c
 35360                           
 35361                           ;api.c: 620: start_byte <<= 8;
 35362  004834  C05A  F05B         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35363  004838  C059  F05A         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35364  00483C  C058  F059         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35365  004840  6A58               	clrf	__parse_file_modify@start_byte,c
 35366                           
 35367                           ;api.c: 621: start_byte |= data[4];
 35368  004842  EE20 F004          	lfsr	2,4
 35369  004846  5053               	movf	__parse_file_modify@data,w,c
 35370  004848  26D9               	addwf	fsr2l,f,c
 35371  00484A  5054               	movf	__parse_file_modify@data+1,w,c
 35372  00484C  22DA               	addwfc	fsr2h,f,c
 35373  00484E  50DF               	movf	indf2,w,c
 35374  004850  6E55               	movwf	??__parse_file_modify& (0+255),c
 35375  004852  5055               	movf	??__parse_file_modify,w,c
 35376  004854  1258               	iorwf	__parse_file_modify@start_byte,f,c
 35377                           
 35378                           ;api.c: 622: start_byte <<= 8;
 35379  004856  C05A  F05B         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35380  00485A  C059  F05A         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35381  00485E  C058  F059         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35382  004862  6A58               	clrf	__parse_file_modify@start_byte,c
 35383                           
 35384                           ;api.c: 623: start_byte |= data[5];
 35385  004864  EE20 F005          	lfsr	2,5
 35386  004868  5053               	movf	__parse_file_modify@data,w,c
 35387  00486A  26D9               	addwf	fsr2l,f,c
 35388  00486C  5054               	movf	__parse_file_modify@data+1,w,c
 35389  00486E  22DA               	addwfc	fsr2h,f,c
 35390  004870  50DF               	movf	indf2,w,c
 35391  004872  6E55               	movwf	??__parse_file_modify& (0+255),c
 35392  004874  5055               	movf	??__parse_file_modify,w,c
 35393  004876  1258               	iorwf	__parse_file_modify@start_byte,f,c
 35394                           
 35395                           ;api.c: 625: fat_modify_file(data[1], start_byte, number_of_bytes, &data[9]);
 35396  004878  C058  F03F         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 35397  00487C  C059  F040         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 35398  004880  C05A  F041         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 35399  004884  C05B  F042         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 35400  004888  C056  F043         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 35401  00488C  C057  F044         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 35402  004890  0E09               	movlw	9
 35403  004892  2453               	addwf	__parse_file_modify@data,w,c
 35404  004894  6E45               	movwf	fat_modify_file@data,c
 35405  004896  0E00               	movlw	0
 35406  004898  2054               	addwfc	__parse_file_modify@data+1,w,c
 35407  00489A  6E46               	movwf	fat_modify_file@data+1,c
 35408  00489C  EE20 F001          	lfsr	2,1
 35409  0048A0  5053               	movf	__parse_file_modify@data,w,c
 35410  0048A2  26D9               	addwf	fsr2l,f,c
 35411  0048A4  5054               	movf	__parse_file_modify@data+1,w,c
 35412  0048A6  22DA               	addwfc	fsr2h,f,c
 35413  0048A8  50DF               	movf	indf2,w,c
 35414  0048AA  EC98  F00E         	call	_fat_modify_file
 35415                           
 35416                           ;api.c: 626: return number_of_bytes + 9;
 35417  0048AE  5056               	movf	__parse_file_modify@number_of_bytes,w,c
 35418  0048B0  0F09               	addlw	9
 35419  0048B2  0012               	return	
 35420  0048B4                     __end_of__parse_file_modify:
 35421                           	opt stack 0
 35422                           tosu	equ	0xFFF
 35423                           tosh	equ	0xFFE
 35424                           tosl	equ	0xFFD
 35425                           pclath	equ	0xFFA
 35426                           tblptru	equ	0xFF8
 35427                           tblptrh	equ	0xFF7
 35428                           tblptrl	equ	0xFF6
 35429                           tablat	equ	0xFF5
 35430                           prodh	equ	0xFF4
 35431                           prodl	equ	0xFF3
 35432                           intcon	equ	0xFF2
 35433                           intcon2	equ	0xFF1
 35434                           intcon3	equ	0xFF0
 35435                           indf0	equ	0xFEF
 35436                           postinc0	equ	0xFEE
 35437                           fsr0h	equ	0xFEA
 35438                           fsr0l	equ	0xFE9
 35439                           wreg	equ	0xFE8
 35440                           indf1	equ	0xFE7
 35441                           postdec1	equ	0xFE5
 35442                           plusw1	equ	0xFE3
 35443                           fsr1h	equ	0xFE2
 35444                           fsr1l	equ	0xFE1
 35445                           indf2	equ	0xFDF
 35446                           postinc2	equ	0xFDE
 35447                           postdec2	equ	0xFDD
 35448                           plusw2	equ	0xFDB
 35449                           fsr2h	equ	0xFDA
 35450                           fsr2l	equ	0xFD9
 35451                           status	equ	0xFD8
 35452                           
 35453 ;; *************** function _fat_modify_file *****************
 35454 ;; Defined at:
 35455 ;;		line 770 in file "fat16.c"
 35456 ;; Parameters:    Size  Location     Type
 35457 ;;  file_number     1    wreg     unsigned char 
 35458 ;;  start_byte      4   62[COMRAM] unsigned long 
 35459 ;;  length          2   66[COMRAM] unsigned int 
 35460 ;;  data            2   68[COMRAM] PTR unsigned char 
 35461 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35462 ;; Auto vars:     Size  Location     Type
 35463 ;;  file_number     1    2[BANK0 ] unsigned char 
 35464 ;;  root           32    9[BANK0 ] struct .
 35465 ;;  position        4   41[BANK0 ] unsigned long 
 35466 ;;  number_of_by    2    7[BANK0 ] unsigned int 
 35467 ;;  offset          2    5[BANK0 ] unsigned int 
 35468 ;;  cluster         2    3[BANK0 ] unsigned int 
 35469 ;;  sector          2    0[BANK0 ] unsigned int 
 35470 ;; Return value:  Size  Location     Type
 35471 ;;                  1    wreg      void 
 35472 ;; Registers used:
 35473 ;;		wreg, status,2, status,0, cstack
 35474 ;; Tracked objects:
 35475 ;;		On entry : 0/0
 35476 ;;		On exit  : 0/0
 35477 ;;		Unchanged: 0/0
 35478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35479 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35480 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35481 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35482 ;;      Totals:        20      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35483 ;;Total ram usage:       65 bytes
 35484 ;; Hardware stack levels used:    1
 35485 ;; Hardware stack levels required when called:    7
 35486 ;; This function calls:
 35487 ;;		__read_fat
 35488 ;;		__sector_from_cluster
 35489 ;;		_fat_get_file_information
 35490 ;;		_flash_partial_write
 35491 ;; This function is called by:
 35492 ;;		__parse_file_modify
 35493 ;; This function uses a non-reentrant model
 35494 ;;
 35495                           
 35496                           	psect	text176
 35497  001D30                     __ptext176:
 35498                           	opt stack 0
 35499  001D30                     _fat_modify_file:
 35500                           	opt stack 20
 35501                           
 35502                           ;incstack = 0
 35503                           ;fat_modify_file@file_number stored from wreg
 35504  001D30  0100               	movlb	0	; () banked
 35505  001D32  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 35506                           
 35507                           ;fat16.c: 772: rootEntry_t root;;fat16.c: 773: uint16_t cluster;;fat16.c: 774: uint32_t 
      +                          position;;fat16.c: 775: uint16_t offset;;fat16.c: 776: uint16_t sector;;fat16.c: 777: ui
      +                          nt16_t number_of_bytes;;fat16.c: 780: fat_get_file_information(file_number, &root);
 35508  001D34  0E69               	movlw	low fat_modify_file@root
 35509  001D36  6E37               	movwf	fat_get_file_information@data,c
 35510  001D38  0E00               	movlw	high fat_modify_file@root
 35511  001D3A  6E38               	movwf	fat_get_file_information@data+1,c
 35512  001D3C  0100               	movlb	0	; () banked
 35513  001D3E  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 35514  001D40  ECCF  F038         	call	_fat_get_file_information
 35515                           
 35516                           ;fat16.c: 781: cluster = root.firstCluster;
 35517  001D44  C083  F063         	movff	fat_modify_file@root+26,fat_modify_file@cluster
 35518  001D48  C084  F064         	movff	fat_modify_file@root+27,fat_modify_file@cluster+1
 35519                           
 35520                           ;fat16.c: 784: if(start_byte>root.fileSize)
 35521  001D4C  503F               	movf	fat_modify_file@start_byte,w,c
 35522  001D4E  0100               	movlb	0	; () banked
 35523  001D50  5D85               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 35524  001D52  5040               	movf	fat_modify_file@start_byte+1,w,c
 35525  001D54  5986               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 35526  001D56  5041               	movf	fat_modify_file@start_byte+2,w,c
 35527  001D58  5987               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 35528  001D5A  5042               	movf	fat_modify_file@start_byte+3,w,c
 35529  001D5C  5988               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 35530  001D5E  A0D8               	btfss	status,0,c
 35531  001D60  0012               	return	
 35532                           
 35533                           ; BSR set to: 0
 35534                           ;fat16.c: 788: };fat16.c: 790: if((start_byte+length) > root.fileSize)
 35535                           
 35536                           ; BSR set to: 0
 35537                           
 35538                           ; BSR set to: 0
 35539                           ;fat16.c: 785: {;fat16.c: 787: return;
 35540  001D62  5043               	movf	fat_modify_file@length,w,c
 35541  001D64  243F               	addwf	fat_modify_file@start_byte,w,c
 35542  001D66  6E47               	movwf	??_fat_modify_file& (0+255),c
 35543  001D68  5044               	movf	fat_modify_file@length+1,w,c
 35544  001D6A  2040               	addwfc	fat_modify_file@start_byte+1,w,c
 35545  001D6C  6E48               	movwf	(??_fat_modify_file+1)& (0+255),c
 35546  001D6E  0E00               	movlw	0
 35547  001D70  2041               	addwfc	fat_modify_file@start_byte+2,w,c
 35548  001D72  6E49               	movwf	(??_fat_modify_file+2)& (0+255),c
 35549  001D74  0E00               	movlw	0
 35550  001D76  2042               	addwfc	fat_modify_file@start_byte+3,w,c
 35551  001D78  6E4A               	movwf	(??_fat_modify_file+3)& (0+255),c
 35552  001D7A  5047               	movf	??_fat_modify_file,w,c
 35553  001D7C  5D85               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 35554  001D7E  5048               	movf	??_fat_modify_file+1,w,c
 35555  001D80  5986               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 35556  001D82  5049               	movf	??_fat_modify_file+2,w,c
 35557  001D84  5987               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 35558  001D86  504A               	movf	??_fat_modify_file+3,w,c
 35559  001D88  5988               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 35560  001D8A  B0D8               	btfsc	status,0,c
 35561  001D8C  D00E               	goto	l2068
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;fat16.c: 791: {;fat16.c: 793: length = root.fileSize - start_byte;
 35565  001D8E  C03F  F047         	movff	fat_modify_file@start_byte,??_fat_modify_file
 35566  001D92  C040  F048         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 35567  001D96  1E47               	comf	??_fat_modify_file,f,c
 35568  001D98  1E48               	comf	??_fat_modify_file+1,f,c
 35569  001D9A  4A47               	infsnz	??_fat_modify_file,f,c
 35570  001D9C  2A48               	incf	??_fat_modify_file+1,f,c
 35571  001D9E  5185               	movf	(fat_modify_file@root+28)& (0+255),w,b
 35572  001DA0  2447               	addwf	??_fat_modify_file,w,c
 35573  001DA2  6E43               	movwf	fat_modify_file@length,c
 35574  001DA4  5186               	movf	(fat_modify_file@root+29)& (0+255),w,b
 35575  001DA6  2048               	addwfc	??_fat_modify_file+1,w,c
 35576  001DA8  6E44               	movwf	fat_modify_file@length+1,c
 35577  001DAA                     l2068:
 35578                           
 35579                           ; BSR set to: 0
 35580                           ;fat16.c: 794: };fat16.c: 797: position = 0;
 35581                           
 35582                           ; BSR set to: 0
 35583  001DAA  0E00               	movlw	0
 35584  001DAC  6F89               	movwf	fat_modify_file@position& (0+255),b
 35585  001DAE  0E00               	movlw	0
 35586  001DB0  6F8A               	movwf	(fat_modify_file@position+1)& (0+255),b
 35587  001DB2  0E00               	movlw	0
 35588  001DB4  6F8B               	movwf	(fat_modify_file@position+2)& (0+255),b
 35589  001DB6  0E00               	movlw	0
 35590  001DB8  6F8C               	movwf	(fat_modify_file@position+3)& (0+255),b
 35591                           
 35592                           ;fat16.c: 798: while((start_byte-position) >= 512)
 35593  001DBA  D013               	goto	l2069
 35594  001DBC                     l12944:
 35595                           
 35596                           ; BSR set to: 0
 35597                           ;fat16.c: 799: {;fat16.c: 800: cluster = _read_fat(cluster);
 35598  001DBC  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 35599  001DC0  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 35600  001DC4  EC93  F03F         	call	__read_fat	;wreg free
 35601  001DC8  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 35602  001DCC  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 35603                           
 35604                           ;fat16.c: 801: position += 512;
 35605  001DD0  0E00               	movlw	0
 35606  001DD2  0100               	movlb	0	; () banked
 35607  001DD4  2789               	addwf	fat_modify_file@position& (0+255),f,b
 35608  001DD6  0E02               	movlw	2
 35609  001DD8  238A               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 35610  001DDA  0E00               	movlw	0
 35611  001DDC  238B               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 35612  001DDE  0E00               	movlw	0
 35613  001DE0  238C               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 35614  001DE2                     l2069:
 35615                           
 35616                           ; BSR set to: 0
 35617                           
 35618                           ; BSR set to: 0
 35619  001DE2  C089  F047         	movff	fat_modify_file@position,??_fat_modify_file
 35620  001DE6  C08A  F048         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 35621  001DEA  C08B  F049         	movff	fat_modify_file@position+2,??_fat_modify_file+2
 35622  001DEE  C08C  F04A         	movff	fat_modify_file@position+3,??_fat_modify_file+3
 35623  001DF2  1E47               	comf	??_fat_modify_file,f,c
 35624  001DF4  1E48               	comf	??_fat_modify_file+1,f,c
 35625  001DF6  1E49               	comf	??_fat_modify_file+2,f,c
 35626  001DF8  1E4A               	comf	??_fat_modify_file+3,f,c
 35627  001DFA  2A47               	incf	??_fat_modify_file,f,c
 35628  001DFC  0E00               	movlw	0
 35629  001DFE  2248               	addwfc	??_fat_modify_file+1,f,c
 35630  001E00  2249               	addwfc	??_fat_modify_file+2,f,c
 35631  001E02  224A               	addwfc	??_fat_modify_file+3,f,c
 35632  001E04  503F               	movf	fat_modify_file@start_byte,w,c
 35633  001E06  2447               	addwf	??_fat_modify_file,w,c
 35634  001E08  6E4B               	movwf	(??_fat_modify_file+4)& (0+255),c
 35635  001E0A  5040               	movf	fat_modify_file@start_byte+1,w,c
 35636  001E0C  2048               	addwfc	??_fat_modify_file+1,w,c
 35637  001E0E  6E4C               	movwf	(??_fat_modify_file+5)& (0+255),c
 35638  001E10  5041               	movf	fat_modify_file@start_byte+2,w,c
 35639  001E12  2049               	addwfc	??_fat_modify_file+2,w,c
 35640  001E14  6E4D               	movwf	(??_fat_modify_file+6)& (0+255),c
 35641  001E16  5042               	movf	fat_modify_file@start_byte+3,w,c
 35642  001E18  204A               	addwfc	??_fat_modify_file+3,w,c
 35643  001E1A  6E4E               	movwf	(??_fat_modify_file+7)& (0+255),c
 35644  001E1C  504E               	movf	??_fat_modify_file+7,w,c
 35645  001E1E  104D               	iorwf	??_fat_modify_file+6,w,c
 35646  001E20  E1CD               	bnz	l12944
 35647  001E22  0E02               	movlw	2
 35648  001E24  5C4C               	subwf	??_fat_modify_file+5,w,c
 35649  001E26  B0D8               	btfsc	status,0,c
 35650  001E28  D7C9               	goto	l2070
 35651                           
 35652                           ; BSR set to: 0
 35653                           ;fat16.c: 802: };fat16.c: 805: offset = (uint16_t) (start_byte-position);
 35654                           
 35655                           ; BSR set to: 0
 35656  001E2A  C089  F047         	movff	fat_modify_file@position,??_fat_modify_file
 35657  001E2E  C08A  F048         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 35658  001E32  1E47               	comf	??_fat_modify_file,f,c
 35659  001E34  1E48               	comf	??_fat_modify_file+1,f,c
 35660  001E36  4A47               	infsnz	??_fat_modify_file,f,c
 35661  001E38  2A48               	incf	??_fat_modify_file+1,f,c
 35662  001E3A  503F               	movf	fat_modify_file@start_byte,w,c
 35663  001E3C  2447               	addwf	??_fat_modify_file,w,c
 35664  001E3E  6F65               	movwf	fat_modify_file@offset& (0+255),b
 35665  001E40  5040               	movf	fat_modify_file@start_byte+1,w,c
 35666  001E42  2048               	addwfc	??_fat_modify_file+1,w,c
 35667  001E44  6F66               	movwf	(fat_modify_file@offset+1)& (0+255),b
 35668                           
 35669                           ; BSR set to: 0
 35670                           ;fat16.c: 808: position = 0;
 35671  001E46  0E00               	movlw	0
 35672  001E48  6F89               	movwf	fat_modify_file@position& (0+255),b
 35673  001E4A  0E00               	movlw	0
 35674  001E4C  6F8A               	movwf	(fat_modify_file@position+1)& (0+255),b
 35675  001E4E  0E00               	movlw	0
 35676  001E50  6F8B               	movwf	(fat_modify_file@position+2)& (0+255),b
 35677  001E52  0E00               	movlw	0
 35678  001E54  6F8C               	movwf	(fat_modify_file@position+3)& (0+255),b
 35679                           
 35680                           ;fat16.c: 809: while(position < length)
 35681  001E56  D089               	goto	l2072
 35682  001E58                     
 35683                           ; BSR set to: 0
 35684                           ;fat16.c: 810: {;fat16.c: 812: if(offset==512)
 35685                           
 35686                           ; BSR set to: 0
 35687  001E58  0E02               	movlw	2
 35688  001E5A  1966               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 35689  001E5C  1165               	iorwf	fat_modify_file@offset& (0+255),w,b
 35690  001E5E  A4D8               	btfss	status,2,c
 35691  001E60  D00F               	goto	l2074
 35692                           
 35693                           ; BSR set to: 0
 35694                           ;fat16.c: 813: {;fat16.c: 815: cluster = _read_fat(cluster);
 35695  001E62  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 35696  001E66  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 35697  001E6A  EC93  F03F         	call	__read_fat	;wreg free
 35698  001E6E  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 35699  001E72  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 35700                           
 35701                           ;fat16.c: 817: offset = 0;
 35702  001E76  0E00               	movlw	0
 35703  001E78  0100               	movlb	0	; () banked
 35704  001E7A  6F66               	movwf	(fat_modify_file@offset+1)& (0+255),b
 35705  001E7C  0E00               	movlw	0
 35706  001E7E  6F65               	movwf	fat_modify_file@offset& (0+255),b
 35707  001E80                     l2074:
 35708                           
 35709                           ; BSR set to: 0
 35710                           ;fat16.c: 818: };fat16.c: 821: sector = _sector_from_cluster(cluster);
 35711                           
 35712                           ; BSR set to: 0
 35713  001E80  C063  F001         	movff	fat_modify_file@cluster,__sector_from_cluster@fat_cluster
 35714  001E84  C064  F002         	movff	fat_modify_file@cluster+1,__sector_from_cluster@fat_cluster+1
 35715  001E88  EC72  F044         	call	__sector_from_cluster	;wreg free
 35716  001E8C  C001  F060         	movff	?__sector_from_cluster,fat_modify_file@sector
 35717  001E90  C002  F061         	movff	?__sector_from_cluster+1,fat_modify_file@sector+1
 35718                           
 35719                           ;fat16.c: 824: number_of_bytes = 512 - offset;
 35720  001E94  C065  F047         	movff	fat_modify_file@offset,??_fat_modify_file
 35721  001E98  C066  F048         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 35722  001E9C  1E47               	comf	??_fat_modify_file,f,c
 35723  001E9E  1E48               	comf	??_fat_modify_file+1,f,c
 35724  001EA0  4A47               	infsnz	??_fat_modify_file,f,c
 35725  001EA2  2A48               	incf	??_fat_modify_file+1,f,c
 35726  001EA4  0E00               	movlw	0
 35727  001EA6  2447               	addwf	??_fat_modify_file,w,c
 35728  001EA8  0100               	movlb	0	; () banked
 35729  001EAA  6F67               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 35730  001EAC  0E02               	movlw	2
 35731  001EAE  2048               	addwfc	??_fat_modify_file+1,w,c
 35732  001EB0  6F68               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 35733                           
 35734                           ; BSR set to: 0
 35735                           ;fat16.c: 825: if(number_of_bytes > (length-position))
 35736  001EB2  5167               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 35737  001EB4  6E47               	movwf	??_fat_modify_file& (0+255),c
 35738  001EB6  5168               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 35739  001EB8  6E48               	movwf	(??_fat_modify_file+1)& (0+255),c
 35740  001EBA  6A49               	clrf	(??_fat_modify_file+2)& (0+255),c
 35741  001EBC  6A4A               	clrf	(??_fat_modify_file+3)& (0+255),c
 35742  001EBE  C089  F04B         	movff	fat_modify_file@position,??_fat_modify_file+4
 35743  001EC2  C08A  F04C         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 35744  001EC6  C08B  F04D         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 35745  001ECA  C08C  F04E         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 35746  001ECE  1E4B               	comf	??_fat_modify_file+4,f,c
 35747  001ED0  1E4C               	comf	??_fat_modify_file+5,f,c
 35748  001ED2  1E4D               	comf	??_fat_modify_file+6,f,c
 35749  001ED4  1E4E               	comf	??_fat_modify_file+7,f,c
 35750  001ED6  2A4B               	incf	??_fat_modify_file+4,f,c
 35751  001ED8  0E00               	movlw	0
 35752  001EDA  224C               	addwfc	??_fat_modify_file+5,f,c
 35753  001EDC  224D               	addwfc	??_fat_modify_file+6,f,c
 35754  001EDE  224E               	addwfc	??_fat_modify_file+7,f,c
 35755  001EE0  5043               	movf	fat_modify_file@length,w,c
 35756  001EE2  244B               	addwf	??_fat_modify_file+4,w,c
 35757  001EE4  6E4F               	movwf	(??_fat_modify_file+8)& (0+255),c
 35758  001EE6  5044               	movf	fat_modify_file@length+1,w,c
 35759  001EE8  204C               	addwfc	??_fat_modify_file+5,w,c
 35760  001EEA  6E50               	movwf	(??_fat_modify_file+9)& (0+255),c
 35761  001EEC  0E00               	movlw	0
 35762  001EEE  204D               	addwfc	??_fat_modify_file+6,w,c
 35763  001EF0  6E51               	movwf	(??_fat_modify_file+10)& (0+255),c
 35764  001EF2  0E00               	movlw	0
 35765  001EF4  204E               	addwfc	??_fat_modify_file+7,w,c
 35766  001EF6  6E52               	movwf	(??_fat_modify_file+11)& (0+255),c
 35767  001EF8  5047               	movf	??_fat_modify_file,w,c
 35768  001EFA  5C4F               	subwf	??_fat_modify_file+8,w,c
 35769  001EFC  5048               	movf	??_fat_modify_file+1,w,c
 35770  001EFE  5850               	subwfb	??_fat_modify_file+9,w,c
 35771  001F00  5049               	movf	??_fat_modify_file+2,w,c
 35772  001F02  5851               	subwfb	??_fat_modify_file+10,w,c
 35773  001F04  504A               	movf	??_fat_modify_file+3,w,c
 35774  001F06  5852               	subwfb	??_fat_modify_file+11,w,c
 35775  001F08  B0D8               	btfsc	status,0,c
 35776  001F0A  D00E               	goto	l2075
 35777                           
 35778                           ; BSR set to: 0
 35779                           ;fat16.c: 826: {;fat16.c: 827: number_of_bytes = length - position;
 35780  001F0C  C089  F047         	movff	fat_modify_file@position,??_fat_modify_file
 35781  001F10  C08A  F048         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 35782  001F14  1E47               	comf	??_fat_modify_file,f,c
 35783  001F16  1E48               	comf	??_fat_modify_file+1,f,c
 35784  001F18  4A47               	infsnz	??_fat_modify_file,f,c
 35785  001F1A  2A48               	incf	??_fat_modify_file+1,f,c
 35786  001F1C  5043               	movf	fat_modify_file@length,w,c
 35787  001F1E  2447               	addwf	??_fat_modify_file,w,c
 35788  001F20  6F67               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 35789  001F22  5044               	movf	fat_modify_file@length+1,w,c
 35790  001F24  2048               	addwfc	??_fat_modify_file+1,w,c
 35791  001F26  6F68               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 35792  001F28                     l2075:
 35793                           
 35794                           ; BSR set to: 0
 35795                           ;fat16.c: 828: };fat16.c: 831: flash_partial_write(sector, offset, number_of_bytes, &dat
      +                          a[position]);
 35796                           
 35797                           ; BSR set to: 0
 35798  001F28  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 35799  001F2C  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 35800  001F30  C065  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 35801  001F34  C066  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 35802  001F38  C067  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 35803  001F3C  C068  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 35804  001F40  5189               	movf	fat_modify_file@position& (0+255),w,b
 35805  001F42  2445               	addwf	fat_modify_file@data,w,c
 35806  001F44  6E26               	movwf	flash_partial_write@data,c
 35807  001F46  518A               	movf	(fat_modify_file@position+1)& (0+255),w,b
 35808  001F48  2046               	addwfc	fat_modify_file@data+1,w,c
 35809  001F4A  6E27               	movwf	flash_partial_write@data+1,c
 35810  001F4C  EC7A  F039         	call	_flash_partial_write	;wreg free
 35811                           
 35812                           ;fat16.c: 834: position += number_of_bytes;
 35813  001F50  0100               	movlb	0	; () banked
 35814  001F52  5167               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 35815  001F54  2789               	addwf	fat_modify_file@position& (0+255),f,b
 35816  001F56  5168               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 35817  001F58  238A               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 35818  001F5A  0E00               	movlw	0
 35819  001F5C  238B               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 35820  001F5E  0E00               	movlw	0
 35821  001F60  238C               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 35822                           
 35823                           ; BSR set to: 0
 35824                           ;fat16.c: 835: offset += number_of_bytes;
 35825  001F62  5167               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 35826  001F64  2765               	addwf	fat_modify_file@offset& (0+255),f,b
 35827  001F66  5168               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 35828  001F68  2366               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 35829  001F6A                     l2072:
 35830                           
 35831                           ; BSR set to: 0
 35832                           
 35833                           ; BSR set to: 0
 35834  001F6A  5043               	movf	fat_modify_file@length,w,c
 35835  001F6C  6E47               	movwf	??_fat_modify_file& (0+255),c
 35836  001F6E  5044               	movf	fat_modify_file@length+1,w,c
 35837  001F70  6E48               	movwf	(??_fat_modify_file+1)& (0+255),c
 35838  001F72  6A49               	clrf	(??_fat_modify_file+2)& (0+255),c
 35839  001F74  6A4A               	clrf	(??_fat_modify_file+3)& (0+255),c
 35840  001F76  5047               	movf	??_fat_modify_file,w,c
 35841  001F78  5D89               	subwf	fat_modify_file@position& (0+255),w,b
 35842  001F7A  5048               	movf	??_fat_modify_file+1,w,c
 35843  001F7C  598A               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 35844  001F7E  5049               	movf	??_fat_modify_file+2,w,c
 35845  001F80  598B               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 35846  001F82  504A               	movf	??_fat_modify_file+3,w,c
 35847  001F84  598C               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 35848  001F86  B0D8               	btfsc	status,0,c
 35849  001F88  0012               	return	
 35850  001F8A  D766               	goto	l2073
 35851  001F8C                     __end_of_fat_modify_file:
 35852                           	opt stack 0
 35853                           tosu	equ	0xFFF
 35854                           tosh	equ	0xFFE
 35855                           tosl	equ	0xFFD
 35856                           pclath	equ	0xFFA
 35857                           tblptru	equ	0xFF8
 35858                           tblptrh	equ	0xFF7
 35859                           tblptrl	equ	0xFF6
 35860                           tablat	equ	0xFF5
 35861                           prodh	equ	0xFF4
 35862                           prodl	equ	0xFF3
 35863                           intcon	equ	0xFF2
 35864                           intcon2	equ	0xFF1
 35865                           intcon3	equ	0xFF0
 35866                           indf0	equ	0xFEF
 35867                           postinc0	equ	0xFEE
 35868                           fsr0h	equ	0xFEA
 35869                           fsr0l	equ	0xFE9
 35870                           wreg	equ	0xFE8
 35871                           indf1	equ	0xFE7
 35872                           postdec1	equ	0xFE5
 35873                           plusw1	equ	0xFE3
 35874                           fsr1h	equ	0xFE2
 35875                           fsr1l	equ	0xFE1
 35876                           indf2	equ	0xFDF
 35877                           postinc2	equ	0xFDE
 35878                           postdec2	equ	0xFDD
 35879                           plusw2	equ	0xFDB
 35880                           fsr2h	equ	0xFDA
 35881                           fsr2l	equ	0xFD9
 35882                           status	equ	0xFD8
 35883                           
 35884 ;; *************** function __parse_file_delete *****************
 35885 ;; Defined at:
 35886 ;;		line 537 in file "api.c"
 35887 ;; Parameters:    Size  Location     Type
 35888 ;;  data            2   62[COMRAM] PTR unsigned char 
 35889 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35890 ;; Auto vars:     Size  Location     Type
 35891 ;;		None
 35892 ;; Return value:  Size  Location     Type
 35893 ;;                  1    wreg      unsigned char 
 35894 ;; Registers used:
 35895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35896 ;; Tracked objects:
 35897 ;;		On entry : 0/0
 35898 ;;		On exit  : 0/0
 35899 ;;		Unchanged: 0/0
 35900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35905 ;;Total ram usage:        3 bytes
 35906 ;; Hardware stack levels used:    1
 35907 ;; Hardware stack levels required when called:    7
 35908 ;; This function calls:
 35909 ;;		_fat_delete_file
 35910 ;; This function is called by:
 35911 ;;		__parse_command_long
 35912 ;; This function uses a non-reentrant model
 35913 ;;
 35914                           
 35915                           	psect	text177
 35916  007DA4                     __ptext177:
 35917                           	opt stack 0
 35918  007DA4                     __parse_file_delete:
 35919                           	opt stack 21
 35920                           
 35921                           ;api.c: 540: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 35922                           
 35923                           ; BSR set to: 0
 35924                           ;incstack = 0
 35925  007DA4  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 35926  007DA8  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 35927  007DAC  0E51               	movlw	81
 35928  007DAE  18DE               	xorwf	postinc2,w,c
 35929  007DB0  A4D8               	btfss	status,2,c
 35930  007DB2  D014               	goto	u10450
 35931  007DB4  EE20 F002          	lfsr	2,2
 35932  007DB8  503F               	movf	__parse_file_delete@data,w,c
 35933  007DBA  26D9               	addwf	fsr2l,f,c
 35934  007DBC  5040               	movf	__parse_file_delete@data+1,w,c
 35935  007DBE  22DA               	addwfc	fsr2h,f,c
 35936  007DC0  0E66               	movlw	102
 35937  007DC2  18DE               	xorwf	postinc2,w,c
 35938  007DC4  A4D8               	btfss	status,2,c
 35939  007DC6  D00A               	goto	u10450
 35940  007DC8  EE20 F003          	lfsr	2,3
 35941  007DCC  503F               	movf	__parse_file_delete@data,w,c
 35942  007DCE  26D9               	addwf	fsr2l,f,c
 35943  007DD0  5040               	movf	__parse_file_delete@data+1,w,c
 35944  007DD2  22DA               	addwfc	fsr2h,f,c
 35945  007DD4  0EA0               	movlw	160
 35946  007DD6  18DE               	xorwf	postinc2,w,c
 35947  007DD8  B4D8               	btfsc	status,2,c
 35948  007DDA  D002               	goto	l2728
 35949  007DDC                     u10450:
 35950                           
 35951                           ;api.c: 541: {;api.c: 542: return 4;
 35952  007DDC  0E04               	movlw	4
 35953  007DDE  0012               	return	
 35954  007DE0                     l2728:
 35955                           
 35956                           ;api.c: 543: };api.c: 546: fat_delete_file(data[1]);
 35957  007DE0  EE20 F001          	lfsr	2,1
 35958  007DE4  503F               	movf	__parse_file_delete@data,w,c
 35959  007DE6  26D9               	addwf	fsr2l,f,c
 35960  007DE8  5040               	movf	__parse_file_delete@data+1,w,c
 35961  007DEA  22DA               	addwfc	fsr2h,f,c
 35962  007DEC  50DF               	movf	indf2,w,c
 35963  007DEE  EC53  F03A         	call	_fat_delete_file
 35964                           
 35965                           ;api.c: 547: return 4;
 35966  007DF2  0E04               	movlw	4
 35967  007DF4  0012               	return	
 35968  007DF6                     __end_of__parse_file_delete:
 35969                           	opt stack 0
 35970                           tosu	equ	0xFFF
 35971                           tosh	equ	0xFFE
 35972                           tosl	equ	0xFFD
 35973                           pclath	equ	0xFFA
 35974                           tblptru	equ	0xFF8
 35975                           tblptrh	equ	0xFF7
 35976                           tblptrl	equ	0xFF6
 35977                           tablat	equ	0xFF5
 35978                           prodh	equ	0xFF4
 35979                           prodl	equ	0xFF3
 35980                           intcon	equ	0xFF2
 35981                           intcon2	equ	0xFF1
 35982                           intcon3	equ	0xFF0
 35983                           indf0	equ	0xFEF
 35984                           postinc0	equ	0xFEE
 35985                           fsr0h	equ	0xFEA
 35986                           fsr0l	equ	0xFE9
 35987                           wreg	equ	0xFE8
 35988                           indf1	equ	0xFE7
 35989                           postdec1	equ	0xFE5
 35990                           plusw1	equ	0xFE3
 35991                           fsr1h	equ	0xFE2
 35992                           fsr1l	equ	0xFE1
 35993                           indf2	equ	0xFDF
 35994                           postinc2	equ	0xFDE
 35995                           postdec2	equ	0xFDD
 35996                           plusw2	equ	0xFDB
 35997                           fsr2h	equ	0xFDA
 35998                           fsr2l	equ	0xFD9
 35999                           status	equ	0xFD8
 36000                           
 36001 ;; *************** function _fat_delete_file *****************
 36002 ;; Defined at:
 36003 ;;		line 396 in file "fat16.c"
 36004 ;; Parameters:    Size  Location     Type
 36005 ;;  file_number     1    wreg     unsigned char 
 36006 ;; Auto vars:     Size  Location     Type
 36007 ;;  file_number     1   61[COMRAM] unsigned char 
 36008 ;;  first_cluste    2   59[COMRAM] unsigned int 
 36009 ;;  next_cluster    2   57[COMRAM] unsigned int 
 36010 ;; Return value:  Size  Location     Type
 36011 ;;                  1    wreg      void 
 36012 ;; Registers used:
 36013 ;;		wreg, status,2, status,0, cstack
 36014 ;; Tracked objects:
 36015 ;;		On entry : 0/0
 36016 ;;		On exit  : 0/0
 36017 ;;		Unchanged: 0/0
 36018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36020 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36022 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36023 ;;Total ram usage:        5 bytes
 36024 ;; Hardware stack levels used:    1
 36025 ;; Hardware stack levels required when called:    6
 36026 ;; This function calls:
 36027 ;;		__delete_root
 36028 ;;		__get_first_cluster
 36029 ;;		__read_fat
 36030 ;;		__root_is_available
 36031 ;;		__write_fat
 36032 ;; This function is called by:
 36033 ;;		__parse_file_delete
 36034 ;; This function uses a non-reentrant model
 36035 ;;
 36036                           
 36037                           	psect	text178
 36038  0074A6                     __ptext178:
 36039                           	opt stack 0
 36040  0074A6                     _fat_delete_file:
 36041                           	opt stack 21
 36042                           
 36043                           ;incstack = 0
 36044                           ;fat_delete_file@file_number stored from wreg
 36045  0074A6  6E3E               	movwf	fat_delete_file@file_number,c
 36046                           
 36047                           ;fat16.c: 398: uint16_t first_cluster;;fat16.c: 399: uint16_t next_cluster;;fat16.c: 402
      +                          : if(file_number>=64)
 36048  0074A8  0E3F               	movlw	63
 36049  0074AA  643E               	cpfsgt	fat_delete_file@file_number,c
 36050  0074AC  D001               	goto	l1991
 36051  0074AE  0012               	return	
 36052  0074B0                     l1991:
 36053                           
 36054                           ;fat16.c: 406: };fat16.c: 409: if(_root_is_available(file_number))
 36055  0074B0  503E               	movf	fat_delete_file@file_number,w,c
 36056  0074B2  EC94  F038         	call	__root_is_available
 36057  0074B6  0900               	iorlw	0
 36058  0074B8  A4D8               	btfss	status,2,c
 36059  0074BA  0012               	return	
 36060                           
 36061                           ;fat16.c: 413: };fat16.c: 416: first_cluster = _get_first_cluster(file_number);
 36062                           
 36063                           ;fat16.c: 410: {;fat16.c: 412: return;
 36064  0074BC  503E               	movf	fat_delete_file@file_number,w,c
 36065  0074BE  EC88  F03A         	call	__get_first_cluster
 36066  0074C2  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 36067  0074C6  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 36068  0074CA                     l1994:
 36069                           
 36070                           ;fat16.c: 420: {;fat16.c: 423: next_cluster = _read_fat(first_cluster);
 36071  0074CA  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 36072  0074CE  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 36073  0074D2  EC93  F03F         	call	__read_fat	;wreg free
 36074  0074D6  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 36075  0074DA  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 36076                           
 36077                           ;fat16.c: 426: _write_fat(first_cluster, 0x0000);
 36078  0074DE  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 36079  0074E2  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 36080  0074E6  0E00               	movlw	0
 36081  0074E8  6E2C               	movwf	__write_fat@value+1,c
 36082  0074EA  0E00               	movlw	0
 36083  0074EC  6E2B               	movwf	__write_fat@value,c
 36084  0074EE  EC7E  F040         	call	__write_fat	;wreg free
 36085                           
 36086                           ;fat16.c: 429: if(next_cluster>0xFFF0)
 36087  0074F2  0EF1               	movlw	241
 36088  0074F4  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 36089  0074F6  0EFF               	movlw	255
 36090  0074F8  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 36091  0074FA  B0D8               	btfsc	status,0,c
 36092  0074FC  D005               	goto	l1996
 36093                           
 36094                           ;fat16.c: 434: else;fat16.c: 435: {;fat16.c: 436: first_cluster = next_cluster;
 36095                           
 36096                           ;fat16.c: 432: }
 36097                           
 36098                           ;fat16.c: 430: {;fat16.c: 431: break;
 36099  0074FE  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 36100  007502  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 36101  007506  D7E1               	goto	l1994
 36102  007508                     l1996:
 36103                           
 36104                           ;fat16.c: 437: };fat16.c: 438: };fat16.c: 442: _delete_root(file_number);
 36105  007508  503E               	movf	fat_delete_file@file_number,w,c
 36106  00750A  EC73  F03C         	call	__delete_root
 36107  00750E  0012               	return		;funcret
 36108  007510                     __end_of_fat_delete_file:
 36109                           	opt stack 0
 36110                           tosu	equ	0xFFF
 36111                           tosh	equ	0xFFE
 36112                           tosl	equ	0xFFD
 36113                           pclath	equ	0xFFA
 36114                           tblptru	equ	0xFF8
 36115                           tblptrh	equ	0xFF7
 36116                           tblptrl	equ	0xFF6
 36117                           tablat	equ	0xFF5
 36118                           prodh	equ	0xFF4
 36119                           prodl	equ	0xFF3
 36120                           intcon	equ	0xFF2
 36121                           intcon2	equ	0xFF1
 36122                           intcon3	equ	0xFF0
 36123                           indf0	equ	0xFEF
 36124                           postinc0	equ	0xFEE
 36125                           fsr0h	equ	0xFEA
 36126                           fsr0l	equ	0xFE9
 36127                           wreg	equ	0xFE8
 36128                           indf1	equ	0xFE7
 36129                           postdec1	equ	0xFE5
 36130                           plusw1	equ	0xFE3
 36131                           fsr1h	equ	0xFE2
 36132                           fsr1l	equ	0xFE1
 36133                           indf2	equ	0xFDF
 36134                           postinc2	equ	0xFDE
 36135                           postdec2	equ	0xFDD
 36136                           plusw2	equ	0xFDB
 36137                           fsr2h	equ	0xFDA
 36138                           fsr2l	equ	0xFD9
 36139                           status	equ	0xFD8
 36140                           
 36141 ;; *************** function __get_first_cluster *****************
 36142 ;; Defined at:
 36143 ;;		line 210 in file "fat16.c"
 36144 ;; Parameters:    Size  Location     Type
 36145 ;;  slot            1    wreg     unsigned char 
 36146 ;; Auto vars:     Size  Location     Type
 36147 ;;  slot            1   56[COMRAM] unsigned char 
 36148 ;;  first_cluste    2   54[COMRAM] unsigned int 
 36149 ;;  offset          2   52[COMRAM] unsigned int 
 36150 ;;  sector          2   50[COMRAM] unsigned int 
 36151 ;; Return value:  Size  Location     Type
 36152 ;;                  2   47[COMRAM] unsigned int 
 36153 ;; Registers used:
 36154 ;;		wreg, status,2, status,0, cstack
 36155 ;; Tracked objects:
 36156 ;;		On entry : 0/0
 36157 ;;		On exit  : 0/0
 36158 ;;		Unchanged: 0/0
 36159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36161 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36163 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36164 ;;Total ram usage:       10 bytes
 36165 ;; Hardware stack levels used:    1
 36166 ;; Hardware stack levels required when called:    5
 36167 ;; This function calls:
 36168 ;;		_flash_partial_read
 36169 ;; This function is called by:
 36170 ;;		_fat_delete_file
 36171 ;; This function uses a non-reentrant model
 36172 ;;
 36173                           
 36174                           	psect	text179
 36175  007510                     __ptext179:
 36176                           	opt stack 0
 36177  007510                     __get_first_cluster:
 36178                           	opt stack 21
 36179                           
 36180                           ;incstack = 0
 36181                           ;__get_first_cluster@slot stored from wreg
 36182  007510  6E39               	movwf	__get_first_cluster@slot,c
 36183                           
 36184                           ;fat16.c: 212: uint16_t sector;;fat16.c: 213: uint16_t offset;;fat16.c: 214: uint16_t fi
      +                          rst_cluster;;fat16.c: 215: sector = slot >> 4;
 36185  007512  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 36186  007516  3A32               	swapf	??__get_first_cluster,f,c
 36187  007518  0E0F               	movlw	15
 36188  00751A  1632               	andwf	??__get_first_cluster,f,c
 36189  00751C  5032               	movf	??__get_first_cluster,w,c
 36190  00751E  6E33               	movwf	__get_first_cluster@sector,c
 36191  007520  6A34               	clrf	__get_first_cluster@sector+1,c
 36192                           
 36193                           ;fat16.c: 216: sector += 34;
 36194  007522  0E22               	movlw	34
 36195  007524  2633               	addwf	__get_first_cluster@sector,f,c
 36196  007526  0E00               	movlw	0
 36197  007528  2234               	addwfc	__get_first_cluster@sector+1,f,c
 36198                           
 36199                           ;fat16.c: 217: offset = slot & 0b1111;
 36200  00752A  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 36201  00752E  0E0F               	movlw	15
 36202  007530  1632               	andwf	??__get_first_cluster,f,c
 36203  007532  5032               	movf	??__get_first_cluster,w,c
 36204  007534  6E35               	movwf	__get_first_cluster@offset,c
 36205  007536  6A36               	clrf	__get_first_cluster@offset+1,c
 36206                           
 36207                           ;fat16.c: 218: offset <<= 5;
 36208  007538  0E05               	movlw	5
 36209  00753A                     u8685:
 36210  00753A  90D8               	bcf	status,0,c
 36211  00753C  3635               	rlcf	__get_first_cluster@offset,f,c
 36212  00753E  3636               	rlcf	__get_first_cluster@offset+1,f,c
 36213  007540  2EE8               	decfsz	wreg,f,c
 36214  007542  D7FB               	goto	u8685
 36215                           
 36216                           ;fat16.c: 219: offset += 26;
 36217  007544  0E1A               	movlw	26
 36218  007546  2635               	addwf	__get_first_cluster@offset,f,c
 36219  007548  0E00               	movlw	0
 36220  00754A  2236               	addwfc	__get_first_cluster@offset+1,f,c
 36221                           
 36222                           ;fat16.c: 220: flash_partial_read(sector, offset, 2, &first_cluster);
 36223  00754C  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 36224  007550  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 36225  007554  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 36226  007558  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 36227  00755C  0E00               	movlw	0
 36228  00755E  6E2D               	movwf	flash_partial_read@length+1,c
 36229  007560  0E02               	movlw	2
 36230  007562  6E2C               	movwf	flash_partial_read@length,c
 36231  007564  0E37               	movlw	low __get_first_cluster@first_cluster
 36232  007566  6E2E               	movwf	flash_partial_read@data,c
 36233  007568  0E00               	movlw	high __get_first_cluster@first_cluster
 36234  00756A  6E2F               	movwf	flash_partial_read@data+1,c
 36235  00756C  ECFC  F041         	call	_flash_partial_read	;wreg free
 36236                           
 36237                           ;fat16.c: 221: return first_cluster;
 36238  007570  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 36239  007574  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 36240  007578  0012               	return	
 36241  00757A                     __end_of__get_first_cluster:
 36242                           	opt stack 0
 36243                           tosu	equ	0xFFF
 36244                           tosh	equ	0xFFE
 36245                           tosl	equ	0xFFD
 36246                           pclath	equ	0xFFA
 36247                           tblptru	equ	0xFF8
 36248                           tblptrh	equ	0xFF7
 36249                           tblptrl	equ	0xFF6
 36250                           tablat	equ	0xFF5
 36251                           prodh	equ	0xFF4
 36252                           prodl	equ	0xFF3
 36253                           intcon	equ	0xFF2
 36254                           intcon2	equ	0xFF1
 36255                           intcon3	equ	0xFF0
 36256                           indf0	equ	0xFEF
 36257                           postinc0	equ	0xFEE
 36258                           fsr0h	equ	0xFEA
 36259                           fsr0l	equ	0xFE9
 36260                           wreg	equ	0xFE8
 36261                           indf1	equ	0xFE7
 36262                           postdec1	equ	0xFE5
 36263                           plusw1	equ	0xFE3
 36264                           fsr1h	equ	0xFE2
 36265                           fsr1l	equ	0xFE1
 36266                           indf2	equ	0xFDF
 36267                           postinc2	equ	0xFDE
 36268                           postdec2	equ	0xFDD
 36269                           plusw2	equ	0xFDB
 36270                           fsr2h	equ	0xFDA
 36271                           fsr2l	equ	0xFD9
 36272                           status	equ	0xFD8
 36273                           
 36274 ;; *************** function __delete_root *****************
 36275 ;; Defined at:
 36276 ;;		line 197 in file "fat16.c"
 36277 ;; Parameters:    Size  Location     Type
 36278 ;;  slot            1    wreg     unsigned char 
 36279 ;; Auto vars:     Size  Location     Type
 36280 ;;  slot            1   46[COMRAM] unsigned char 
 36281 ;;  offset          2   43[COMRAM] unsigned int 
 36282 ;;  root_sector     2   41[COMRAM] unsigned int 
 36283 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 36284 ;; Return value:  Size  Location     Type
 36285 ;;                  1    wreg      void 
 36286 ;; Registers used:
 36287 ;;		wreg, status,2, status,0, cstack
 36288 ;; Tracked objects:
 36289 ;;		On entry : 0/0
 36290 ;;		On exit  : 0/0
 36291 ;;		Unchanged: 0/0
 36292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36294 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36297 ;;Total ram usage:        7 bytes
 36298 ;; Hardware stack levels used:    1
 36299 ;; Hardware stack levels required when called:    5
 36300 ;; This function calls:
 36301 ;;		_flash_partial_write
 36302 ;; This function is called by:
 36303 ;;		_fat_delete_file
 36304 ;; This function uses a non-reentrant model
 36305 ;;
 36306                           
 36307                           	psect	text180
 36308  0078E6                     __ptext180:
 36309                           	opt stack 0
 36310  0078E6                     __delete_root:
 36311                           	opt stack 21
 36312                           
 36313                           ;incstack = 0
 36314                           ;__delete_root@slot stored from wreg
 36315  0078E6  6E2F               	movwf	__delete_root@slot,c
 36316                           
 36317                           ;fat16.c: 199: uint16_t root_sector;;fat16.c: 200: uint16_t offset;;fat16.c: 201: uint8_
      +                          t deleted_value;;fat16.c: 203: root_sector = (slot >> 4) + 34;
 36318  0078E8  C02F  F029         	movff	__delete_root@slot,??__delete_root
 36319  0078EC  3A29               	swapf	??__delete_root,f,c
 36320  0078EE  0E0F               	movlw	15
 36321  0078F0  1629               	andwf	??__delete_root,f,c
 36322  0078F2  0E22               	movlw	34
 36323  0078F4  2429               	addwf	??__delete_root,w,c
 36324  0078F6  6E2A               	movwf	__delete_root@root_sector,c
 36325  0078F8  6A2B               	clrf	__delete_root@root_sector+1,c
 36326  0078FA  0E00               	movlw	0
 36327  0078FC  222B               	addwfc	__delete_root@root_sector+1,f,c
 36328                           
 36329                           ;fat16.c: 204: offset = (slot & 0b1111);
 36330  0078FE  C02F  F029         	movff	__delete_root@slot,??__delete_root
 36331  007902  0E0F               	movlw	15
 36332  007904  1629               	andwf	??__delete_root,f,c
 36333  007906  5029               	movf	??__delete_root,w,c
 36334  007908  6E2C               	movwf	__delete_root@offset,c
 36335  00790A  6A2D               	clrf	__delete_root@offset+1,c
 36336                           
 36337                           ;fat16.c: 205: offset <<= 5;
 36338  00790C  0E05               	movlw	5
 36339  00790E                     u8675:
 36340  00790E  90D8               	bcf	status,0,c
 36341  007910  362C               	rlcf	__delete_root@offset,f,c
 36342  007912  362D               	rlcf	__delete_root@offset+1,f,c
 36343  007914  2EE8               	decfsz	wreg,f,c
 36344  007916  D7FB               	goto	u8675
 36345                           
 36346                           ;fat16.c: 206: deleted_value = 0xE5;
 36347  007918  0EE5               	movlw	229
 36348  00791A  6E2E               	movwf	__delete_root@deleted_value,c
 36349                           
 36350                           ;fat16.c: 207: flash_partial_write(root_sector, offset, 1, &deleted_value);
 36351  00791C  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 36352  007920  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 36353  007924  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 36354  007928  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 36355  00792C  0E00               	movlw	0
 36356  00792E  6E25               	movwf	flash_partial_write@length+1,c
 36357  007930  0E01               	movlw	1
 36358  007932  6E24               	movwf	flash_partial_write@length,c
 36359  007934  0E2E               	movlw	low __delete_root@deleted_value
 36360  007936  6E26               	movwf	flash_partial_write@data,c
 36361  007938  0E00               	movlw	high __delete_root@deleted_value
 36362  00793A  6E27               	movwf	flash_partial_write@data+1,c
 36363  00793C  EC7A  F039         	call	_flash_partial_write	;wreg free
 36364  007940  0012               	return		;funcret
 36365  007942                     __end_of__delete_root:
 36366                           	opt stack 0
 36367                           tosu	equ	0xFFF
 36368                           tosh	equ	0xFFE
 36369                           tosl	equ	0xFFD
 36370                           pclath	equ	0xFFA
 36371                           tblptru	equ	0xFF8
 36372                           tblptrh	equ	0xFF7
 36373                           tblptrl	equ	0xFF6
 36374                           tablat	equ	0xFF5
 36375                           prodh	equ	0xFF4
 36376                           prodl	equ	0xFF3
 36377                           intcon	equ	0xFF2
 36378                           intcon2	equ	0xFF1
 36379                           intcon3	equ	0xFF0
 36380                           indf0	equ	0xFEF
 36381                           postinc0	equ	0xFEE
 36382                           fsr0h	equ	0xFEA
 36383                           fsr0l	equ	0xFE9
 36384                           wreg	equ	0xFE8
 36385                           indf1	equ	0xFE7
 36386                           postdec1	equ	0xFE5
 36387                           plusw1	equ	0xFE3
 36388                           fsr1h	equ	0xFE2
 36389                           fsr1l	equ	0xFE1
 36390                           indf2	equ	0xFDF
 36391                           postinc2	equ	0xFDE
 36392                           postdec2	equ	0xFDD
 36393                           plusw2	equ	0xFDB
 36394                           fsr2h	equ	0xFDA
 36395                           fsr2l	equ	0xFD9
 36396                           status	equ	0xFD8
 36397                           
 36398 ;; *************** function __parse_file_create *****************
 36399 ;; Defined at:
 36400 ;;		line 550 in file "api.c"
 36401 ;; Parameters:    Size  Location     Type
 36402 ;;  data            2   79[COMRAM] PTR unsigned char 
 36403 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36404 ;; Auto vars:     Size  Location     Type
 36405 ;;  file_size       4   82[COMRAM] unsigned long 
 36406 ;; Return value:  Size  Location     Type
 36407 ;;                  1    wreg      unsigned char 
 36408 ;; Registers used:
 36409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36410 ;; Tracked objects:
 36411 ;;		On entry : 0/0
 36412 ;;		On exit  : 0/0
 36413 ;;		Unchanged: 0/0
 36414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36416 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36418 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36419 ;;Total ram usage:        7 bytes
 36420 ;; Hardware stack levels used:    1
 36421 ;; Hardware stack levels required when called:    8
 36422 ;; This function calls:
 36423 ;;		_fat_create_file
 36424 ;; This function is called by:
 36425 ;;		__parse_command_long
 36426 ;; This function uses a non-reentrant model
 36427 ;;
 36428                           
 36429                           	psect	text181
 36430  004FDA                     __ptext181:
 36431                           	opt stack 0
 36432  004FDA                     __parse_file_create:
 36433                           	opt stack 20
 36434                           
 36435                           ;api.c: 553: uint32_t file_size;;api.c: 554: if((data[0]!=COMMAND_FILE_CREATE) || (data[
      +                          16]!=0xBD) || (data[17]!=0x4F))
 36436                           
 36437                           ;incstack = 0
 36438  004FDA  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 36439  004FDE  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 36440  004FE2  0E52               	movlw	82
 36441  004FE4  18DE               	xorwf	postinc2,w,c
 36442  004FE6  A4D8               	btfss	status,2,c
 36443  004FE8  D014               	goto	u10480
 36444  004FEA  EE20 F010          	lfsr	2,16
 36445  004FEE  5050               	movf	__parse_file_create@data,w,c
 36446  004FF0  26D9               	addwf	fsr2l,f,c
 36447  004FF2  5051               	movf	__parse_file_create@data+1,w,c
 36448  004FF4  22DA               	addwfc	fsr2h,f,c
 36449  004FF6  0EBD               	movlw	189
 36450  004FF8  18DE               	xorwf	postinc2,w,c
 36451  004FFA  A4D8               	btfss	status,2,c
 36452  004FFC  D00A               	goto	u10480
 36453  004FFE  EE20 F011          	lfsr	2,17
 36454  005002  5050               	movf	__parse_file_create@data,w,c
 36455  005004  26D9               	addwf	fsr2l,f,c
 36456  005006  5051               	movf	__parse_file_create@data+1,w,c
 36457  005008  22DA               	addwfc	fsr2h,f,c
 36458  00500A  0E4F               	movlw	79
 36459  00500C  18DE               	xorwf	postinc2,w,c
 36460  00500E  B4D8               	btfsc	status,2,c
 36461  005010  D002               	goto	l2734
 36462  005012                     u10480:
 36463                           
 36464                           ;api.c: 555: {;api.c: 556: return 18;
 36465  005012  0E12               	movlw	18
 36466  005014  0012               	return	
 36467  005016                     l2734:
 36468                           
 36469                           ;api.c: 557: };api.c: 560: file_size = data[12];
 36470  005016  EE20 F00C          	lfsr	2,12
 36471  00501A  5050               	movf	__parse_file_create@data,w,c
 36472  00501C  26D9               	addwf	fsr2l,f,c
 36473  00501E  5051               	movf	__parse_file_create@data+1,w,c
 36474  005020  22DA               	addwfc	fsr2h,f,c
 36475  005022  50DF               	movf	indf2,w,c
 36476  005024  6E52               	movwf	??__parse_file_create& (0+255),c
 36477  005026  5052               	movf	??__parse_file_create,w,c
 36478  005028  6E53               	movwf	__parse_file_create@file_size,c
 36479  00502A  6A54               	clrf	__parse_file_create@file_size+1,c
 36480  00502C  6A55               	clrf	__parse_file_create@file_size+2,c
 36481  00502E  6A56               	clrf	__parse_file_create@file_size+3,c
 36482                           
 36483                           ;api.c: 561: file_size <<= 8;
 36484  005030  C055  F056         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36485  005034  C054  F055         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36486  005038  C053  F054         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36487  00503C  6A53               	clrf	__parse_file_create@file_size,c
 36488                           
 36489                           ;api.c: 562: file_size |= data[13];
 36490  00503E  EE20 F00D          	lfsr	2,13
 36491  005042  5050               	movf	__parse_file_create@data,w,c
 36492  005044  26D9               	addwf	fsr2l,f,c
 36493  005046  5051               	movf	__parse_file_create@data+1,w,c
 36494  005048  22DA               	addwfc	fsr2h,f,c
 36495  00504A  50DF               	movf	indf2,w,c
 36496  00504C  6E52               	movwf	??__parse_file_create& (0+255),c
 36497  00504E  5052               	movf	??__parse_file_create,w,c
 36498  005050  1253               	iorwf	__parse_file_create@file_size,f,c
 36499                           
 36500                           ;api.c: 563: file_size <<= 8;
 36501  005052  C055  F056         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36502  005056  C054  F055         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36503  00505A  C053  F054         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36504  00505E  6A53               	clrf	__parse_file_create@file_size,c
 36505                           
 36506                           ;api.c: 564: file_size |= data[14];
 36507  005060  EE20 F00E          	lfsr	2,14
 36508  005064  5050               	movf	__parse_file_create@data,w,c
 36509  005066  26D9               	addwf	fsr2l,f,c
 36510  005068  5051               	movf	__parse_file_create@data+1,w,c
 36511  00506A  22DA               	addwfc	fsr2h,f,c
 36512  00506C  50DF               	movf	indf2,w,c
 36513  00506E  6E52               	movwf	??__parse_file_create& (0+255),c
 36514  005070  5052               	movf	??__parse_file_create,w,c
 36515  005072  1253               	iorwf	__parse_file_create@file_size,f,c
 36516                           
 36517                           ;api.c: 565: file_size <<= 8;
 36518  005074  C055  F056         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36519  005078  C054  F055         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36520  00507C  C053  F054         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36521  005080  6A53               	clrf	__parse_file_create@file_size,c
 36522                           
 36523                           ;api.c: 566: file_size |= data[15];
 36524  005082  EE20 F00F          	lfsr	2,15
 36525  005086  5050               	movf	__parse_file_create@data,w,c
 36526  005088  26D9               	addwf	fsr2l,f,c
 36527  00508A  5051               	movf	__parse_file_create@data+1,w,c
 36528  00508C  22DA               	addwfc	fsr2h,f,c
 36529  00508E  50DF               	movf	indf2,w,c
 36530  005090  6E52               	movwf	??__parse_file_create& (0+255),c
 36531  005092  5052               	movf	??__parse_file_create,w,c
 36532  005094  1253               	iorwf	__parse_file_create@file_size,f,c
 36533                           
 36534                           ;api.c: 569: fat_create_file(&data[1], &data[9], file_size);
 36535  005096  0E01               	movlw	1
 36536  005098  2450               	addwf	__parse_file_create@data,w,c
 36537  00509A  6E44               	movwf	fat_create_file@name,c
 36538  00509C  0E00               	movlw	0
 36539  00509E  2051               	addwfc	__parse_file_create@data+1,w,c
 36540  0050A0  6E45               	movwf	fat_create_file@name+1,c
 36541  0050A2  0E09               	movlw	9
 36542  0050A4  2450               	addwf	__parse_file_create@data,w,c
 36543  0050A6  6E46               	movwf	fat_create_file@extension,c
 36544  0050A8  0E00               	movlw	0
 36545  0050AA  2051               	addwfc	__parse_file_create@data+1,w,c
 36546  0050AC  6E47               	movwf	fat_create_file@extension+1,c
 36547  0050AE  C053  F048         	movff	__parse_file_create@file_size,fat_create_file@size
 36548  0050B2  C054  F049         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 36549  0050B6  C055  F04A         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 36550  0050BA  C056  F04B         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 36551  0050BE  ECFB  F01A         	call	_fat_create_file	;wreg free
 36552                           
 36553                           ;api.c: 571: return 18;
 36554  0050C2  0E12               	movlw	18
 36555  0050C4  0012               	return	
 36556  0050C6                     __end_of__parse_file_create:
 36557                           	opt stack 0
 36558                           tosu	equ	0xFFF
 36559                           tosh	equ	0xFFE
 36560                           tosl	equ	0xFFD
 36561                           pclath	equ	0xFFA
 36562                           tblptru	equ	0xFF8
 36563                           tblptrh	equ	0xFF7
 36564                           tblptrl	equ	0xFF6
 36565                           tablat	equ	0xFF5
 36566                           prodh	equ	0xFF4
 36567                           prodl	equ	0xFF3
 36568                           intcon	equ	0xFF2
 36569                           intcon2	equ	0xFF1
 36570                           intcon3	equ	0xFF0
 36571                           indf0	equ	0xFEF
 36572                           postinc0	equ	0xFEE
 36573                           fsr0h	equ	0xFEA
 36574                           fsr0l	equ	0xFE9
 36575                           wreg	equ	0xFE8
 36576                           indf1	equ	0xFE7
 36577                           postdec1	equ	0xFE5
 36578                           plusw1	equ	0xFE3
 36579                           fsr1h	equ	0xFE2
 36580                           fsr1l	equ	0xFE1
 36581                           indf2	equ	0xFDF
 36582                           postinc2	equ	0xFDE
 36583                           postdec2	equ	0xFDD
 36584                           plusw2	equ	0xFDB
 36585                           fsr2h	equ	0xFDA
 36586                           fsr2l	equ	0xFD9
 36587                           status	equ	0xFD8
 36588                           
 36589 ;; *************** function _fat_create_file *****************
 36590 ;; Defined at:
 36591 ;;		line 314 in file "fat16.c"
 36592 ;; Parameters:    Size  Location     Type
 36593 ;;  name            2   67[COMRAM] PTR unsigned char 
 36594 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36595 ;;  extension       2   69[COMRAM] PTR unsigned char 
 36596 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36597 ;;  size            4   71[COMRAM] unsigned long 
 36598 ;; Auto vars:     Size  Location     Type
 36599 ;;  root_entry     32    9[BANK0 ] struct .
 36600 ;;  cluster         2    7[BANK0 ] unsigned int 
 36601 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 36602 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 36603 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 36604 ;;  root_slot       1    4[BANK0 ] unsigned char 
 36605 ;; Return value:  Size  Location     Type
 36606 ;;                  1    wreg      unsigned char 
 36607 ;; Registers used:
 36608 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36609 ;; Tracked objects:
 36610 ;;		On entry : 0/0
 36611 ;;		On exit  : 0/0
 36612 ;;		Unchanged: 0/0
 36613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36614 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36615 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36616 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36617 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36618 ;;Total ram usage:       53 bytes
 36619 ;; Hardware stack levels used:    1
 36620 ;; Hardware stack levels required when called:    7
 36621 ;; This function calls:
 36622 ;;		__get_available_root_entry
 36623 ;;		__get_date
 36624 ;;		__get_empty_cluster
 36625 ;;		__get_time
 36626 ;;		__write_fat
 36627 ;;		__write_root
 36628 ;;		_fat_find_file
 36629 ;;		_fat_get_empty_clusters
 36630 ;;		_memcpy
 36631 ;; This function is called by:
 36632 ;;		__parse_file_create
 36633 ;; This function uses a non-reentrant model
 36634 ;;
 36635                           
 36636                           	psect	text182
 36637  0035F6                     __ptext182:
 36638                           	opt stack 0
 36639  0035F6                     _fat_create_file:
 36640                           	opt stack 20
 36641                           
 36642                           ;fat16.c: 316: uint8_t root_slot;;fat16.c: 317: rootEntry_t root_entry;;fat16.c: 318: ui
      +                          nt16_t cluster;;fat16.c: 319: uint16_t next_cluster;;fat16.c: 320: uint16_t number_of_cl
      +                          usters;;fat16.c: 321: uint16_t cluster_count;;fat16.c: 325: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 36643                           
 36644                           ;incstack = 0
 36645  0035F6  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 36646  0035FA  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 36647  0035FE  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 36648  003602  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 36649  003606  EC74  F02F         	call	_fat_find_file	;wreg free
 36650  00360A  0AFF               	xorlw	255
 36651  00360C  A4D8               	btfss	status,2,c
 36652  00360E  0012               	return	
 36653                           
 36654                           ;fat16.c: 330: };fat16.c: 334: root_slot = _get_available_root_entry();
 36655                           
 36656                           ;fat16.c: 326: {;fat16.c: 329: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 36657  003610  EC4F  F043         	call	__get_available_root_entry	;wreg free
 36658  003614  0100               	movlb	0	; () banked
 36659  003616  6F64               	movwf	fat_create_file@root_slot& (0+255),b
 36660                           
 36661                           ; BSR set to: 0
 36662                           ;fat16.c: 335: if(root_slot == 0xFF)
 36663  003618  2964               	incf	fat_create_file@root_slot& (0+255),w,b
 36664  00361A  B4D8               	btfsc	status,2,c
 36665  00361C  0012               	return	
 36666                           
 36667                           ; BSR set to: 0
 36668                           ;fat16.c: 340: };fat16.c: 343: number_of_clusters = (size>>9) + 1;
 36669                           
 36670                           ; BSR set to: 0
 36671                           
 36672                           ; BSR set to: 0
 36673                           ;fat16.c: 336: {;fat16.c: 339: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 36674  00361E  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 36675  003622  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 36676  003626  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 36677  00362A  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 36678  00362E  0E0A               	movlw	10
 36679  003630  D005               	goto	u9490
 36680  003632                     u9495:
 36681  003632  90D8               	bcf	status,0,c
 36682  003634  324F               	rrcf	??_fat_create_file+3,f,c
 36683  003636  324E               	rrcf	??_fat_create_file+2,f,c
 36684  003638  324D               	rrcf	??_fat_create_file+1,f,c
 36685  00363A  324C               	rrcf	??_fat_create_file,f,c
 36686  00363C                     u9490:
 36687  00363C  2EE8               	decfsz	wreg,f,c
 36688  00363E  D7F9               	goto	u9495
 36689  003640  0E01               	movlw	1
 36690  003642  244C               	addwf	??_fat_create_file,w,c
 36691  003644  6F65               	movwf	fat_create_file@number_of_clusters& (0+255),b
 36692  003646  0E00               	movlw	0
 36693  003648  204D               	addwfc	??_fat_create_file+1,w,c
 36694  00364A  6F66               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 36695                           
 36696                           ; BSR set to: 0
 36697                           ;fat16.c: 344: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 36698  00364C  C065  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 36699  003650  C066  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 36700  003654  ECC4  F035         	call	_fat_get_empty_clusters	;wreg free
 36701  003658  0100               	movlb	0	; () banked
 36702  00365A  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 36703  00365C  1830               	xorwf	?_fat_get_empty_clusters,w,c
 36704  00365E  E105               	bnz	u9500
 36705  003660  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 36706  003662  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 36707  003664  A4D8               	btfss	status,2,c
 36708  003666  0012               	return	
 36709  003668  D001               	goto	l1983
 36710  00366A                     u9500:
 36711                           
 36712                           ; BSR set to: 0
 36713                           ;fat16.c: 345: {;fat16.c: 348: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 36714  00366A  0012               	return	
 36715  00366C                     l1983:
 36716                           
 36717                           ; BSR set to: 0
 36718                           ;fat16.c: 349: };fat16.c: 352: cluster = _get_empty_cluster(2);
 36719                           
 36720                           ; BSR set to: 0
 36721  00366C  0E00               	movlw	0
 36722  00366E  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36723  003670  0E02               	movlw	2
 36724  003672  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36725  003674  EC97  F036         	call	__get_empty_cluster	;wreg free
 36726  003678  C030  F067         	movff	?__get_empty_cluster,fat_create_file@cluster
 36727  00367C  C031  F068         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 36728                           
 36729                           ;fat16.c: 355: memcpy(root_entry.fileName, name, 8);
 36730  003680  0E69               	movlw	low fat_create_file@root_entry
 36731  003682  6E01               	movwf	memcpy@d1,c
 36732  003684  0E00               	movlw	high fat_create_file@root_entry
 36733  003686  6E02               	movwf	memcpy@d1+1,c
 36734  003688  C044  F003         	movff	fat_create_file@name,memcpy@s1
 36735  00368C  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 36736  003690  5003               	movf	memcpy@s1,w,c
 36737  003692  1004               	iorwf	memcpy@s1+1,w,c
 36738  003694  A4D8               	btfss	status,2,c
 36739  003696  0E20               	movlw	32
 36740  003698  6E05               	movwf	memcpy@s1+2,c
 36741  00369A  0E00               	movlw	0
 36742  00369C  6E07               	movwf	memcpy@n+1,c
 36743  00369E  0E08               	movlw	8
 36744  0036A0  6E06               	movwf	memcpy@n,c
 36745  0036A2  ECF0  F03A         	call	_memcpy	;wreg free
 36746                           
 36747                           ;fat16.c: 356: memcpy(root_entry.fileExtension, extension, 3);
 36748  0036A6  0E71               	movlw	low (fat_create_file@root_entry+8)
 36749  0036A8  6E01               	movwf	memcpy@d1,c
 36750  0036AA  0E00               	movlw	high (fat_create_file@root_entry+8)
 36751  0036AC  6E02               	movwf	memcpy@d1+1,c
 36752  0036AE  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 36753  0036B2  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 36754  0036B6  5003               	movf	memcpy@s1,w,c
 36755  0036B8  1004               	iorwf	memcpy@s1+1,w,c
 36756  0036BA  A4D8               	btfss	status,2,c
 36757  0036BC  0E20               	movlw	32
 36758  0036BE  6E05               	movwf	memcpy@s1+2,c
 36759  0036C0  0E00               	movlw	0
 36760  0036C2  6E07               	movwf	memcpy@n+1,c
 36761  0036C4  0E03               	movlw	3
 36762  0036C6  6E06               	movwf	memcpy@n,c
 36763  0036C8  ECF0  F03A         	call	_memcpy	;wreg free
 36764                           
 36765                           ;fat16.c: 357: root_entry.attributes = 0x00;
 36766  0036CC  0E00               	movlw	0
 36767  0036CE  0100               	movlb	0	; () banked
 36768  0036D0  6F74               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 36769                           
 36770                           ; BSR set to: 0
 36771                           ;fat16.c: 358: root_entry.reserved1 = 0x00;
 36772  0036D2  0E00               	movlw	0
 36773  0036D4  6F75               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 36774                           
 36775                           ; BSR set to: 0
 36776                           ;fat16.c: 359: root_entry.secondFractions = 0x00;
 36777  0036D6  0E00               	movlw	0
 36778  0036D8  6F76               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 36779                           
 36780                           ; BSR set to: 0
 36781                           ;fat16.c: 360: root_entry.createdTime = _get_time();
 36782  0036DA  ECBB  F044         	call	__get_time	;wreg free
 36783  0036DE  C001  F077         	movff	?__get_time,fat_create_file@root_entry+14
 36784  0036E2  C002  F078         	movff	?__get_time+1,fat_create_file@root_entry+15
 36785                           
 36786                           ;fat16.c: 361: root_entry.createdDate = _get_date();
 36787  0036E6  ECC0  F044         	call	__get_date	;wreg free
 36788  0036EA  C001  F079         	movff	?__get_date,fat_create_file@root_entry+16
 36789  0036EE  C002  F07A         	movff	?__get_date+1,fat_create_file@root_entry+17
 36790                           
 36791                           ;fat16.c: 362: root_entry.lastAccessDate = root_entry.createdDate;
 36792  0036F2  C079  F07B         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 36793  0036F6  C07A  F07C         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 36794                           
 36795                           ;fat16.c: 363: root_entry.reserved2 = 0x00;
 36796  0036FA  0E00               	movlw	0
 36797  0036FC  0100               	movlb	0	; () banked
 36798  0036FE  6F7E               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 36799  003700  0E00               	movlw	0
 36800  003702  6F7D               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 36801                           
 36802                           ; BSR set to: 0
 36803                           ;fat16.c: 364: root_entry.modifiedTime = root_entry.createdTime;
 36804  003704  C077  F07F         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 36805  003708  C078  F080         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 36806                           
 36807                           ; BSR set to: 0
 36808                           ;fat16.c: 365: root_entry.modifiedDate = root_entry.createdDate;
 36809  00370C  C079  F081         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 36810  003710  C07A  F082         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 36811                           
 36812                           ; BSR set to: 0
 36813                           ;fat16.c: 366: root_entry.firstCluster = cluster;
 36814  003714  C067  F083         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 36815  003718  C068  F084         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 36816                           
 36817                           ; BSR set to: 0
 36818                           ;fat16.c: 367: root_entry.fileSize = size;
 36819  00371C  C048  F085         	movff	fat_create_file@size,fat_create_file@root_entry+28
 36820  003720  C049  F086         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 36821  003724  C04A  F087         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 36822  003728  C04B  F088         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 36823                           
 36824                           ;fat16.c: 370: _write_root(root_slot, &root_entry);
 36825  00372C  0E69               	movlw	low fat_create_file@root_entry
 36826  00372E  6E29               	movwf	__write_root@data,c
 36827  003730  0E00               	movlw	high fat_create_file@root_entry
 36828  003732  6E2A               	movwf	__write_root@data+1,c
 36829  003734  5164               	movf	fat_create_file@root_slot& (0+255),w,b
 36830  003736  ECCD  F03C         	call	__write_root
 36831                           
 36832                           ;fat16.c: 375: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 36833  00373A  0E00               	movlw	0
 36834  00373C  0100               	movlb	0	; () banked
 36835  00373E  6F63               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 36836  003740  0E01               	movlw	1
 36837  003742  6F62               	movwf	fat_create_file@cluster_count& (0+255),b
 36838  003744  D02F               	goto	l1984
 36839  003746                     
 36840                           ; BSR set to: 0
 36841                           ;fat16.c: 376: {;fat16.c: 378: if(cluster_count==number_of_clusters)
 36842                           
 36843                           ; BSR set to: 0
 36844  003746  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 36845  003748  1962               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 36846  00374A  E10E               	bnz	l12692
 36847  00374C  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 36848  00374E  1963               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 36849  003750  A4D8               	btfss	status,2,c
 36850  003752  D00A               	goto	l1986
 36851                           
 36852                           ; BSR set to: 0
 36853                           ;fat16.c: 379: {;fat16.c: 381: _write_fat(cluster, 0xFFFF);
 36854  003754  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 36855  003758  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 36856  00375C  0EFF               	movlw	255
 36857  00375E  6E2C               	movwf	__write_fat@value+1,c
 36858  003760  682B               	setf	__write_fat@value,c
 36859  003762  EC7E  F040         	call	__write_fat	;wreg free
 36860                           
 36861                           ;fat16.c: 382: }
 36862  003766  D01B               	goto	l1987
 36863  003768                     l1986:
 36864  003768                     l12692:
 36865                           
 36866                           ;fat16.c: 383: else;fat16.c: 384: {;fat16.c: 386: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 36867  003768  0E01               	movlw	1
 36868  00376A  0100               	movlb	0	; () banked
 36869  00376C  2567               	addwf	fat_create_file@cluster& (0+255),w,b
 36870  00376E  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36871  003770  0E00               	movlw	0
 36872  003772  2168               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 36873  003774  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36874  003776  EC97  F036         	call	__get_empty_cluster	;wreg free
 36875  00377A  C030  F060         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 36876  00377E  C031  F061         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 36877                           
 36878                           ;fat16.c: 388: _write_fat(cluster, next_cluster);
 36879  003782  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 36880  003786  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 36881  00378A  C060  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 36882  00378E  C061  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 36883  003792  EC7E  F040         	call	__write_fat	;wreg free
 36884                           
 36885                           ;fat16.c: 390: cluster = next_cluster;
 36886  003796  C060  F067         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 36887  00379A  C061  F068         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 36888  00379E                     l1987:
 36889  00379E  0100               	movlb	0	; () banked
 36890  0037A0  4B62               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 36891  0037A2  2B63               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 36892  0037A4                     l1984:
 36893                           
 36894                           ; BSR set to: 0
 36895                           
 36896                           ; BSR set to: 0
 36897  0037A4  5162               	movf	fat_create_file@cluster_count& (0+255),w,b
 36898  0037A6  5D65               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 36899  0037A8  5163               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 36900  0037AA  5966               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 36901  0037AC  A0D8               	btfss	status,0,c
 36902  0037AE  0012               	return	
 36903  0037B0  D7CA               	goto	l1985
 36904  0037B2                     __end_of_fat_create_file:
 36905                           	opt stack 0
 36906                           tosu	equ	0xFFF
 36907                           tosh	equ	0xFFE
 36908                           tosl	equ	0xFFD
 36909                           pclath	equ	0xFFA
 36910                           tblptru	equ	0xFF8
 36911                           tblptrh	equ	0xFF7
 36912                           tblptrl	equ	0xFF6
 36913                           tablat	equ	0xFF5
 36914                           prodh	equ	0xFF4
 36915                           prodl	equ	0xFF3
 36916                           intcon	equ	0xFF2
 36917                           intcon2	equ	0xFF1
 36918                           intcon3	equ	0xFF0
 36919                           indf0	equ	0xFEF
 36920                           postinc0	equ	0xFEE
 36921                           fsr0h	equ	0xFEA
 36922                           fsr0l	equ	0xFE9
 36923                           wreg	equ	0xFE8
 36924                           indf1	equ	0xFE7
 36925                           postdec1	equ	0xFE5
 36926                           plusw1	equ	0xFE3
 36927                           fsr1h	equ	0xFE2
 36928                           fsr1l	equ	0xFE1
 36929                           indf2	equ	0xFDF
 36930                           postinc2	equ	0xFDE
 36931                           postdec2	equ	0xFDD
 36932                           plusw2	equ	0xFDB
 36933                           fsr2h	equ	0xFDA
 36934                           fsr2l	equ	0xFD9
 36935                           status	equ	0xFD8
 36936                           
 36937 ;; *************** function _memcpy *****************
 36938 ;; Defined at:
 36939 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 36940 ;; Parameters:    Size  Location     Type
 36941 ;;  d1              2    0[COMRAM] PTR void 
 36942 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36943 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36944 ;;  s1              3    2[COMRAM] PTR const void 
 36945 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36946 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36947 ;;		 -> SetupPkt(8), 
 36948 ;;  n               2    5[COMRAM] unsigned int 
 36949 ;; Auto vars:     Size  Location     Type
 36950 ;;  s               3    7[COMRAM] PTR const unsigned char 
 36951 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36952 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36953 ;;		 -> SetupPkt(8), 
 36954 ;;  d               2   10[COMRAM] PTR unsigned char 
 36955 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36956 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36957 ;;  tmp             1   12[COMRAM] unsigned char 
 36958 ;; Return value:  Size  Location     Type
 36959 ;;                  2    0[COMRAM] PTR void 
 36960 ;; Registers used:
 36961 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36962 ;; Tracked objects:
 36963 ;;		On entry : 0/0
 36964 ;;		On exit  : 0/0
 36965 ;;		Unchanged: 0/0
 36966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36967 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36968 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36970 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36971 ;;Total ram usage:       13 bytes
 36972 ;; Hardware stack levels used:    1
 36973 ;; This function calls:
 36974 ;;		Nothing
 36975 ;; This function is called by:
 36976 ;;		_USBCtrlEPService
 36977 ;;		_MSDProcessCommandMediaPresent
 36978 ;;		__flash_set_page_size
 36979 ;;		_fat_create_file
 36980 ;;		_internalFlash_read
 36981 ;;		_api_prepare
 36982 ;; This function uses a non-reentrant model
 36983 ;;
 36984                           
 36985                           	psect	text183
 36986  0075E0                     __ptext183:
 36987                           	opt stack 0
 36988  0075E0                     _memcpy:
 36989                           	opt stack 27
 36990                           
 36991                           ;incstack = 0
 36992  0075E0  C003  F008         	movff	memcpy@s1,memcpy@s
 36993  0075E4  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 36994  0075E8  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 36995  0075EC  C001  F00B         	movff	memcpy@d1,memcpy@d
 36996  0075F0  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 36997  0075F4  D01F               	goto	l3590
 36998  0075F6                     l10972:
 36999  0075F6  C008  FFF6         	movff	memcpy@s,tblptrl
 37000  0075FA  C009  FFF7         	movff	memcpy@s+1,tblptrh
 37001  0075FE  C00A  FFF8         	movff	memcpy@s+2,tblptru
 37002  007602  BAF8               	btfsc	tblptru,5,c
 37003  007604  D003               	bra	u7807
 37004  007606  0008               	tblrd		*
 37005  007608  50F5               	movf	tablat,w,c
 37006  00760A  D005               	bra	u7800
 37007  00760C                     u7807:
 37008  00760C  CFF6 FFE9          	movff	tblptrl,fsr0l
 37009  007610  CFF7 FFEA          	movff	tblptrh,fsr0h
 37010  007614  50EF               	movf	indf0,w,c
 37011  007616                     u7800:
 37012  007616  6E0D               	movwf	memcpy@tmp,c
 37013  007618  0E01               	movlw	1
 37014  00761A  2608               	addwf	memcpy@s,f,c
 37015  00761C  0E00               	movlw	0
 37016  00761E  2209               	addwfc	memcpy@s+1,f,c
 37017  007620  0E00               	movlw	0
 37018  007622  220A               	addwfc	memcpy@s+2,f,c
 37019  007624  C00B  FFD9         	movff	memcpy@d,fsr2l
 37020  007628  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 37021  00762C  C00D  FFDF         	movff	memcpy@tmp,indf2
 37022  007630  4A0B               	infsnz	memcpy@d,f,c
 37023  007632  2A0C               	incf	memcpy@d+1,f,c
 37024  007634                     l3590:
 37025  007634  0606               	decf	memcpy@n,f,c
 37026  007636  A0D8               	btfss	status,0,c
 37027  007638  0607               	decf	memcpy@n+1,f,c
 37028  00763A  2806               	incf	memcpy@n,w,c
 37029  00763C  E1DC               	bnz	l10972
 37030  00763E  2807               	incf	memcpy@n+1,w,c
 37031  007640  B4D8               	btfsc	status,2,c
 37032  007642  0012               	return	
 37033  007644  D7D8               	goto	l3591
 37034  007646                     __end_of_memcpy:
 37035                           	opt stack 0
 37036                           tosu	equ	0xFFF
 37037                           tosh	equ	0xFFE
 37038                           tosl	equ	0xFFD
 37039                           pclath	equ	0xFFA
 37040                           tblptru	equ	0xFF8
 37041                           tblptrh	equ	0xFF7
 37042                           tblptrl	equ	0xFF6
 37043                           tablat	equ	0xFF5
 37044                           prodh	equ	0xFF4
 37045                           prodl	equ	0xFF3
 37046                           intcon	equ	0xFF2
 37047                           intcon2	equ	0xFF1
 37048                           intcon3	equ	0xFF0
 37049                           indf0	equ	0xFEF
 37050                           postinc0	equ	0xFEE
 37051                           fsr0h	equ	0xFEA
 37052                           fsr0l	equ	0xFE9
 37053                           wreg	equ	0xFE8
 37054                           indf1	equ	0xFE7
 37055                           postdec1	equ	0xFE5
 37056                           plusw1	equ	0xFE3
 37057                           fsr1h	equ	0xFE2
 37058                           fsr1l	equ	0xFE1
 37059                           indf2	equ	0xFDF
 37060                           postinc2	equ	0xFDE
 37061                           postdec2	equ	0xFDD
 37062                           plusw2	equ	0xFDB
 37063                           fsr2h	equ	0xFDA
 37064                           fsr2l	equ	0xFD9
 37065                           status	equ	0xFD8
 37066                           
 37067 ;; *************** function _fat_get_empty_clusters *****************
 37068 ;; Defined at:
 37069 ;;		line 135 in file "fat16.c"
 37070 ;; Parameters:    Size  Location     Type
 37071 ;;  maximum         2   47[COMRAM] unsigned int 
 37072 ;; Auto vars:     Size  Location     Type
 37073 ;;  cluster         2   57[COMRAM] unsigned int 
 37074 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 37075 ;;  value           2   53[COMRAM] unsigned int 
 37076 ;;  offset          2   51[COMRAM] unsigned int 
 37077 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37078 ;; Return value:  Size  Location     Type
 37079 ;;                  2   47[COMRAM] unsigned int 
 37080 ;; Registers used:
 37081 ;;		wreg, status,2, status,0, cstack
 37082 ;; Tracked objects:
 37083 ;;		On entry : 0/0
 37084 ;;		On exit  : 0/0
 37085 ;;		Unchanged: 0/0
 37086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37088 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37090 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37091 ;;Total ram usage:       12 bytes
 37092 ;; Hardware stack levels used:    1
 37093 ;; Hardware stack levels required when called:    5
 37094 ;; This function calls:
 37095 ;;		_flash_partial_read
 37096 ;; This function is called by:
 37097 ;;		_fat_create_file
 37098 ;; This function uses a non-reentrant model
 37099 ;;
 37100                           
 37101                           	psect	text184
 37102  006B88                     __ptext184:
 37103                           	opt stack 0
 37104  006B88                     _fat_get_empty_clusters:
 37105                           	opt stack 21
 37106                           
 37107                           ;fat16.c: 137: uint16_t empty_clusters = 0;
 37108                           
 37109                           ;incstack = 0
 37110  006B88  0E00               	movlw	0
 37111  006B8A  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 37112  006B8C  0E00               	movlw	0
 37113  006B8E  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 37114                           
 37115                           ;fat16.c: 138: uint16_t cluster;;fat16.c: 139: uint16_t fat_sector;;fat16.c: 140: uint16
      +                          _t offset;;fat16.c: 141: uint16_t value;;fat16.c: 144: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 37116  006B90  0E00               	movlw	0
 37117  006B92  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 37118  006B94  0E02               	movlw	2
 37119  006B96  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 37120  006B98  D033               	goto	l11630
 37121  006B9A                     
 37122                           ;fat16.c: 145: {;fat16.c: 146: fat_sector = cluster>>8;
 37123  006B9A  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 37124  006B9C  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 37125  006B9E  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 37126                           
 37127                           ;fat16.c: 147: fat_sector += 2;
 37128  006BA0  0E02               	movlw	2
 37129  006BA2  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 37130  006BA4  0E00               	movlw	0
 37131  006BA6  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 37132                           
 37133                           ;fat16.c: 148: offset = cluster & 0xFF;
 37134  006BA8  503A               	movf	fat_get_empty_clusters@cluster,w,c
 37135  006BAA  6E34               	movwf	fat_get_empty_clusters@offset,c
 37136  006BAC  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 37137                           
 37138                           ;fat16.c: 149: offset <<= 1;
 37139  006BAE  90D8               	bcf	status,0,c
 37140  006BB0  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 37141  006BB2  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 37142                           
 37143                           ;fat16.c: 150: flash_partial_read(fat_sector, offset, 2, &value);
 37144  006BB4  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 37145  006BB8  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 37146  006BBC  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 37147  006BC0  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 37148  006BC4  0E00               	movlw	0
 37149  006BC6  6E2D               	movwf	flash_partial_read@length+1,c
 37150  006BC8  0E02               	movlw	2
 37151  006BCA  6E2C               	movwf	flash_partial_read@length,c
 37152  006BCC  0E36               	movlw	low fat_get_empty_clusters@value
 37153  006BCE  6E2E               	movwf	flash_partial_read@data,c
 37154  006BD0  0E00               	movlw	high fat_get_empty_clusters@value
 37155  006BD2  6E2F               	movwf	flash_partial_read@data+1,c
 37156  006BD4  ECFC  F041         	call	_flash_partial_read	;wreg free
 37157                           
 37158                           ;fat16.c: 151: if(value==0x0000)
 37159  006BD8  5036               	movf	fat_get_empty_clusters@value,w,c
 37160  006BDA  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 37161  006BDC  A4D8               	btfss	status,2,c
 37162  006BDE  D00E               	goto	l1939
 37163                           
 37164                           ;fat16.c: 152: {;fat16.c: 153: ++empty_clusters;
 37165  006BE0  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 37166  006BE2  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 37167                           
 37168                           ;fat16.c: 154: if(empty_clusters==maximum)
 37169  006BE4  5030               	movf	fat_get_empty_clusters@maximum,w,c
 37170  006BE6  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 37171  006BE8  E109               	bnz	l11628
 37172  006BEA  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 37173  006BEC  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 37174  006BEE  A4D8               	btfss	status,2,c
 37175  006BF0  D005               	goto	l1939
 37176                           
 37177                           ;fat16.c: 155: {;fat16.c: 156: return empty_clusters;
 37178  006BF2  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 37179  006BF6  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 37180  006BFA  0012               	return	
 37181  006BFC                     l1939:
 37182  006BFC                     l11628:
 37183  006BFC  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 37184  006BFE  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 37185  006C00                     l11630:
 37186  006C00  0EDC               	movlw	220
 37187  006C02  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 37188  006C04  0E1F               	movlw	31
 37189  006C06  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 37190  006C08  A0D8               	btfss	status,0,c
 37191  006C0A  D7C7               	goto	l1936
 37192                           
 37193                           ;fat16.c: 157: };fat16.c: 158: };fat16.c: 159: };fat16.c: 160: return empty_clusters;
 37194  006C0C  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 37195  006C10  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 37196  006C14  0012               	return		;funcret
 37197  006C16                     __end_of_fat_get_empty_clusters:
 37198                           	opt stack 0
 37199                           tosu	equ	0xFFF
 37200                           tosh	equ	0xFFE
 37201                           tosl	equ	0xFFD
 37202                           pclath	equ	0xFFA
 37203                           tblptru	equ	0xFF8
 37204                           tblptrh	equ	0xFF7
 37205                           tblptrl	equ	0xFF6
 37206                           tablat	equ	0xFF5
 37207                           prodh	equ	0xFF4
 37208                           prodl	equ	0xFF3
 37209                           intcon	equ	0xFF2
 37210                           intcon2	equ	0xFF1
 37211                           intcon3	equ	0xFF0
 37212                           indf0	equ	0xFEF
 37213                           postinc0	equ	0xFEE
 37214                           fsr0h	equ	0xFEA
 37215                           fsr0l	equ	0xFE9
 37216                           wreg	equ	0xFE8
 37217                           indf1	equ	0xFE7
 37218                           postdec1	equ	0xFE5
 37219                           plusw1	equ	0xFE3
 37220                           fsr1h	equ	0xFE2
 37221                           fsr1l	equ	0xFE1
 37222                           indf2	equ	0xFDF
 37223                           postinc2	equ	0xFDE
 37224                           postdec2	equ	0xFDD
 37225                           plusw2	equ	0xFDB
 37226                           fsr2h	equ	0xFDA
 37227                           fsr2l	equ	0xFD9
 37228                           status	equ	0xFD8
 37229                           
 37230 ;; *************** function _fat_find_file *****************
 37231 ;; Defined at:
 37232 ;;		line 255 in file "fat16.c"
 37233 ;; Parameters:    Size  Location     Type
 37234 ;;  name            2   47[COMRAM] PTR unsigned char 
 37235 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 37236 ;;  extension       2   49[COMRAM] PTR unsigned char 
 37237 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 37238 ;; Auto vars:     Size  Location     Type
 37239 ;;  buffer         11   51[COMRAM] unsigned char [11]
 37240 ;;  offset          2   65[COMRAM] unsigned int 
 37241 ;;  sector          2   63[COMRAM] unsigned int 
 37242 ;;  slot            1   62[COMRAM] unsigned char 
 37243 ;; Return value:  Size  Location     Type
 37244 ;;                  1    wreg      unsigned char 
 37245 ;; Registers used:
 37246 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37247 ;; Tracked objects:
 37248 ;;		On entry : 0/0
 37249 ;;		On exit  : 0/0
 37250 ;;		Unchanged: 0/0
 37251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37253 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37255 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37256 ;;Total ram usage:       20 bytes
 37257 ;; Hardware stack levels used:    1
 37258 ;; Hardware stack levels required when called:    5
 37259 ;; This function calls:
 37260 ;;		_flash_partial_read
 37261 ;;		_strncmp
 37262 ;; This function is called by:
 37263 ;;		_fat_create_file
 37264 ;;		__bootloader_find_file
 37265 ;;		__fill_buffer_find_file
 37266 ;; This function uses a non-reentrant model
 37267 ;;
 37268                           
 37269                           	psect	text185
 37270  005EE8                     __ptext185:
 37271                           	opt stack 0
 37272  005EE8                     _fat_find_file:
 37273                           	opt stack 23
 37274                           
 37275                           ;fat16.c: 257: uint8_t slot;;fat16.c: 258: uint16_t sector;;fat16.c: 259: uint16_t offse
      +                          t;;fat16.c: 260: uint8_t buffer[11];;fat16.c: 261: slot = 0;
 37276                           
 37277                           ;incstack = 0
 37278  005EE8  0E00               	movlw	0
 37279  005EEA  6E3F               	movwf	fat_find_file@slot,c
 37280                           
 37281                           ;fat16.c: 262: for(sector = 34; sector <= 37; ++sector)
 37282  005EEC  0E00               	movlw	0
 37283  005EEE  6E41               	movwf	fat_find_file@sector+1,c
 37284  005EF0  0E22               	movlw	34
 37285  005EF2  6E40               	movwf	fat_find_file@sector,c
 37286  005EF4                     l11676:
 37287  005EF4  5041               	movf	fat_find_file@sector+1,w,c
 37288  005EF6  E156               	bnz	l11718
 37289  005EF8  0E26               	movlw	38
 37290  005EFA  5C40               	subwf	fat_find_file@sector,w,c
 37291  005EFC  B0D8               	btfsc	status,0,c
 37292  005EFE  D052               	goto	u8760
 37293                           
 37294                           ;fat16.c: 263: {;fat16.c: 264: for(offset = 0; offset<512; offset += 32)
 37295  005F00  0E00               	movlw	0
 37296  005F02  6E43               	movwf	fat_find_file@offset+1,c
 37297  005F04  0E00               	movlw	0
 37298  005F06  6E42               	movwf	fat_find_file@offset,c
 37299  005F08                     l11682:
 37300  005F08  0E02               	movlw	2
 37301  005F0A  5C43               	subwf	fat_find_file@offset+1,w,c
 37302  005F0C  B0D8               	btfsc	status,0,c
 37303  005F0E  D047               	goto	u8750
 37304                           
 37305                           ;fat16.c: 265: {;fat16.c: 266: flash_partial_read(sector, offset, 11, &buffer);
 37306  005F10  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 37307  005F14  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 37308  005F18  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 37309  005F1C  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 37310  005F20  0E00               	movlw	0
 37311  005F22  6E2D               	movwf	flash_partial_read@length+1,c
 37312  005F24  0E0B               	movlw	11
 37313  005F26  6E2C               	movwf	flash_partial_read@length,c
 37314  005F28  0E34               	movlw	low fat_find_file@buffer
 37315  005F2A  6E2E               	movwf	flash_partial_read@data,c
 37316  005F2C  0E00               	movlw	high fat_find_file@buffer
 37317  005F2E  6E2F               	movwf	flash_partial_read@data+1,c
 37318  005F30  ECFC  F041         	call	_flash_partial_read	;wreg free
 37319                           
 37320                           ;fat16.c: 267: if(buffer[0]==0x00)
 37321  005F34  5034               	movf	fat_find_file@buffer,w,c
 37322  005F36  A4D8               	btfss	status,2,c
 37323  005F38  D002               	goto	l1968
 37324                           
 37325                           ;fat16.c: 268: {;fat16.c: 271: return 0xFF;
 37326  005F3A  0EFF               	movlw	255
 37327  005F3C  0012               	return	
 37328  005F3E                     l1968:
 37329                           
 37330                           ;fat16.c: 273: else if(buffer[0]==0xE5)
 37331  005F3E  0EE5               	movlw	229
 37332  005F40  1834               	xorwf	fat_find_file@buffer,w,c
 37333  005F42  B4D8               	btfsc	status,2,c
 37334  005F44  D026               	goto	l1974
 37335                           
 37336                           ;fat16.c: 279: else;fat16.c: 280: {;fat16.c: 282: if(strncmp(name, &buffer[0], 8) == 0)
 37337                           
 37338                           ;fat16.c: 274: {;fat16.c: 278: }
 37339  005F46  C030  F001         	movff	fat_find_file@name,strncmp@s1
 37340  005F4A  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 37341  005F4E  0E34               	movlw	low fat_find_file@buffer
 37342  005F50  6E03               	movwf	strncmp@s2,c
 37343  005F52  0E00               	movlw	high fat_find_file@buffer
 37344  005F54  6E04               	movwf	strncmp@s2+1,c
 37345  005F56  0E00               	movlw	0
 37346  005F58  6E06               	movwf	strncmp@len+1,c
 37347  005F5A  0E08               	movlw	8
 37348  005F5C  6E05               	movwf	strncmp@len,c
 37349  005F5E  EC13  F02F         	call	_strncmp	;wreg free
 37350  005F62  5001               	movf	?_strncmp,w,c
 37351  005F64  1002               	iorwf	?_strncmp+1,w,c
 37352  005F66  A4D8               	btfss	status,2,c
 37353  005F68  D014               	goto	l1974
 37354                           
 37355                           ;fat16.c: 283: {;fat16.c: 285: if(strncmp(extension, &buffer[8], 3) == 0)
 37356  005F6A  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 37357  005F6E  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 37358  005F72  0E3C               	movlw	low (fat_find_file@buffer+8)
 37359  005F74  6E03               	movwf	strncmp@s2,c
 37360  005F76  0E00               	movlw	high (fat_find_file@buffer+8)
 37361  005F78  6E04               	movwf	strncmp@s2+1,c
 37362  005F7A  0E00               	movlw	0
 37363  005F7C  6E06               	movwf	strncmp@len+1,c
 37364  005F7E  0E03               	movlw	3
 37365  005F80  6E05               	movwf	strncmp@len,c
 37366  005F82  EC13  F02F         	call	_strncmp	;wreg free
 37367  005F86  5001               	movf	?_strncmp,w,c
 37368  005F88  1002               	iorwf	?_strncmp+1,w,c
 37369  005F8A  A4D8               	btfss	status,2,c
 37370  005F8C  D002               	goto	l1974
 37371                           
 37372                           ;fat16.c: 286: {;fat16.c: 289: return slot;
 37373  005F8E  503F               	movf	fat_find_file@slot,w,c
 37374  005F90  0012               	return	
 37375  005F92                     l1974:
 37376                           
 37377                           ;fat16.c: 290: };fat16.c: 291: };fat16.c: 292: };fat16.c: 293: ++slot;
 37378  005F92  2A3F               	incf	fat_find_file@slot,f,c
 37379  005F94  0E20               	movlw	32
 37380  005F96  2642               	addwf	fat_find_file@offset,f,c
 37381  005F98  0E00               	movlw	0
 37382  005F9A  2243               	addwfc	fat_find_file@offset+1,f,c
 37383  005F9C  D7B5               	goto	l11682
 37384  005F9E                     u8750:
 37385  005F9E  4A40               	infsnz	fat_find_file@sector,f,c
 37386  005FA0  2A41               	incf	fat_find_file@sector+1,f,c
 37387  005FA2  D7A8               	goto	l11676
 37388  005FA4                     u8760:
 37389  005FA4                     l11718:
 37390                           
 37391                           ;fat16.c: 294: };fat16.c: 295: };fat16.c: 296: return 0xFF;
 37392  005FA4  0EFF               	movlw	255
 37393  005FA6  0012               	return	
 37394  005FA8                     __end_of_fat_find_file:
 37395                           	opt stack 0
 37396                           tosu	equ	0xFFF
 37397                           tosh	equ	0xFFE
 37398                           tosl	equ	0xFFD
 37399                           pclath	equ	0xFFA
 37400                           tblptru	equ	0xFF8
 37401                           tblptrh	equ	0xFF7
 37402                           tblptrl	equ	0xFF6
 37403                           tablat	equ	0xFF5
 37404                           prodh	equ	0xFF4
 37405                           prodl	equ	0xFF3
 37406                           intcon	equ	0xFF2
 37407                           intcon2	equ	0xFF1
 37408                           intcon3	equ	0xFF0
 37409                           indf0	equ	0xFEF
 37410                           postinc0	equ	0xFEE
 37411                           fsr0h	equ	0xFEA
 37412                           fsr0l	equ	0xFE9
 37413                           wreg	equ	0xFE8
 37414                           indf1	equ	0xFE7
 37415                           postdec1	equ	0xFE5
 37416                           plusw1	equ	0xFE3
 37417                           fsr1h	equ	0xFE2
 37418                           fsr1l	equ	0xFE1
 37419                           indf2	equ	0xFDF
 37420                           postinc2	equ	0xFDE
 37421                           postdec2	equ	0xFDD
 37422                           plusw2	equ	0xFDB
 37423                           fsr2h	equ	0xFDA
 37424                           fsr2l	equ	0xFD9
 37425                           status	equ	0xFD8
 37426                           
 37427 ;; *************** function _strncmp *****************
 37428 ;; Defined at:
 37429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 37430 ;; Parameters:    Size  Location     Type
 37431 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 37432 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 37433 ;;		 -> RAM(3759), 
 37434 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 37435 ;;		 -> fat_find_file@buffer(11), 
 37436 ;;  len             2    4[COMRAM] unsigned int 
 37437 ;; Auto vars:     Size  Location     Type
 37438 ;;		None
 37439 ;; Return value:  Size  Location     Type
 37440 ;;                  2    0[COMRAM] int 
 37441 ;; Registers used:
 37442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37443 ;; Tracked objects:
 37444 ;;		On entry : 0/0
 37445 ;;		On exit  : 0/0
 37446 ;;		Unchanged: 0/0
 37447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37448 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37450 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37451 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37452 ;;Total ram usage:        9 bytes
 37453 ;; Hardware stack levels used:    1
 37454 ;; This function calls:
 37455 ;;		Nothing
 37456 ;; This function is called by:
 37457 ;;		_fat_find_file
 37458 ;; This function uses a non-reentrant model
 37459 ;;
 37460                           
 37461                           	psect	text186
 37462  005E26                     __ptext186:
 37463                           	opt stack 0
 37464  005E26                     _strncmp:
 37465                           	opt stack 27
 37466                           
 37467                           ;incstack = 0
 37468  005E26  D053               	goto	l3608
 37469  005E28                     l10874:
 37470  005E28  C001  FFF6         	movff	strncmp@s1,tblptrl
 37471  005E2C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37472  005E30  6AF8               	clrf	tblptru,c
 37473  005E32  0E0E               	movlw	(high __ramtop+-1)
 37474  005E34  64F7               	cpfsgt	tblptrh,c
 37475  005E36  D003               	bra	u7667
 37476  005E38  0008               	tblrd		*
 37477  005E3A  50F5               	movf	tablat,w,c
 37478  005E3C  D005               	bra	u7660
 37479  005E3E                     u7667:
 37480  005E3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 37481  005E42  CFF7 FFEA          	movff	tblptrh,fsr0h
 37482  005E46  50EF               	movf	indf0,w,c
 37483  005E48                     u7660:
 37484  005E48  0900               	iorlw	0
 37485  005E4A  B4D8               	btfsc	status,2,c
 37486  005E4C  D019               	goto	u7680
 37487  005E4E  C003  FFD9         	movff	strncmp@s2,fsr2l
 37488  005E52  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37489  005E56  50DF               	movf	indf2,w,c
 37490  005E58  6E07               	movwf	??_strncmp& (0+255),c
 37491  005E5A  C001  FFF6         	movff	strncmp@s1,tblptrl
 37492  005E5E  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37493  005E62  6AF8               	clrf	tblptru,c
 37494  005E64  0E0E               	movlw	(high __ramtop+-1)
 37495  005E66  64F7               	cpfsgt	tblptrh,c
 37496  005E68  D003               	bra	u7687
 37497  005E6A  0008               	tblrd		*
 37498  005E6C  50F5               	movf	tablat,w,c
 37499  005E6E  D005               	bra	u7685
 37500  005E70                     u7687:
 37501  005E70  CFF6 FFE9          	movff	tblptrl,fsr0l
 37502  005E74  CFF7 FFEA          	movff	tblptrh,fsr0h
 37503  005E78  50EF               	movf	indf0,w,c
 37504  005E7A                     u7685:
 37505  005E7A  1807               	xorwf	??_strncmp,w,c
 37506  005E7C  B4D8               	btfsc	status,2,c
 37507  005E7E  D023               	goto	l3610
 37508  005E80                     u7680:
 37509  005E80  C003  FFD9         	movff	strncmp@s2,fsr2l
 37510  005E84  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37511  005E88  50DF               	movf	indf2,w,c
 37512  005E8A  6E07               	movwf	??_strncmp& (0+255),c
 37513  005E8C  6A08               	clrf	(??_strncmp+1)& (0+255),c
 37514  005E8E  1E07               	comf	??_strncmp,f,c
 37515  005E90  1E08               	comf	??_strncmp+1,f,c
 37516  005E92  4A07               	infsnz	??_strncmp,f,c
 37517  005E94  2A08               	incf	??_strncmp+1,f,c
 37518  005E96  C001  FFF6         	movff	strncmp@s1,tblptrl
 37519  005E9A  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37520  005E9E  6AF8               	clrf	tblptru,c
 37521  005EA0  0E0E               	movlw	(high __ramtop+-1)
 37522  005EA2  64F7               	cpfsgt	tblptrh,c
 37523  005EA4  D003               	bra	u7697
 37524  005EA6  0008               	tblrd		*
 37525  005EA8  50F5               	movf	tablat,w,c
 37526  005EAA  D005               	bra	u7690
 37527  005EAC                     u7697:
 37528  005EAC  CFF6 FFE9          	movff	tblptrl,fsr0l
 37529  005EB0  CFF7 FFEA          	movff	tblptrh,fsr0h
 37530  005EB4  50EF               	movf	indf0,w,c
 37531  005EB6                     u7690:
 37532  005EB6  6E09               	movwf	(??_strncmp+2)& (0+255),c
 37533  005EB8  5009               	movf	??_strncmp+2,w,c
 37534  005EBA  2407               	addwf	??_strncmp,w,c
 37535  005EBC  6E01               	movwf	?_strncmp,c
 37536  005EBE  0E00               	movlw	0
 37537  005EC0  2008               	addwfc	??_strncmp+1,w,c
 37538  005EC2  6E02               	movwf	?_strncmp+1,c
 37539  005EC4  0012               	return	
 37540  005EC6                     l3610:
 37541  005EC6  4A01               	infsnz	strncmp@s1,f,c
 37542  005EC8  2A02               	incf	strncmp@s1+1,f,c
 37543  005ECA  4A03               	infsnz	strncmp@s2,f,c
 37544  005ECC  2A04               	incf	strncmp@s2+1,f,c
 37545  005ECE                     l3608:
 37546  005ECE  0605               	decf	strncmp@len,f,c
 37547  005ED0  A0D8               	btfss	status,0,c
 37548  005ED2  0606               	decf	strncmp@len+1,f,c
 37549  005ED4  2805               	incf	strncmp@len,w,c
 37550  005ED6  E1A8               	bnz	l10874
 37551  005ED8  2806               	incf	strncmp@len+1,w,c
 37552  005EDA  A4D8               	btfss	status,2,c
 37553  005EDC  D7A5               	goto	l3609
 37554  005EDE  0E00               	movlw	0
 37555  005EE0  6E02               	movwf	?_strncmp+1,c
 37556  005EE2  0E00               	movlw	0
 37557  005EE4  6E01               	movwf	?_strncmp,c
 37558  005EE6  0012               	return	
 37559  005EE8                     __end_of_strncmp:
 37560                           	opt stack 0
 37561                           tosu	equ	0xFFF
 37562                           tosh	equ	0xFFE
 37563                           tosl	equ	0xFFD
 37564                           pclath	equ	0xFFA
 37565                           tblptru	equ	0xFF8
 37566                           tblptrh	equ	0xFF7
 37567                           tblptrl	equ	0xFF6
 37568                           tablat	equ	0xFF5
 37569                           prodh	equ	0xFF4
 37570                           prodl	equ	0xFF3
 37571                           intcon	equ	0xFF2
 37572                           intcon2	equ	0xFF1
 37573                           intcon3	equ	0xFF0
 37574                           indf0	equ	0xFEF
 37575                           postinc0	equ	0xFEE
 37576                           fsr0h	equ	0xFEA
 37577                           fsr0l	equ	0xFE9
 37578                           wreg	equ	0xFE8
 37579                           indf1	equ	0xFE7
 37580                           postdec1	equ	0xFE5
 37581                           plusw1	equ	0xFE3
 37582                           fsr1h	equ	0xFE2
 37583                           fsr1l	equ	0xFE1
 37584                           indf2	equ	0xFDF
 37585                           postinc2	equ	0xFDE
 37586                           postdec2	equ	0xFDD
 37587                           plusw2	equ	0xFDB
 37588                           fsr2h	equ	0xFDA
 37589                           fsr2l	equ	0xFD9
 37590                           status	equ	0xFD8
 37591                           
 37592 ;; *************** function __get_available_root_entry *****************
 37593 ;; Defined at:
 37594 ;;		line 94 in file "fat16.c"
 37595 ;; Parameters:    Size  Location     Type
 37596 ;;		None
 37597 ;; Auto vars:     Size  Location     Type
 37598 ;;  file_number     1   54[COMRAM] unsigned char 
 37599 ;; Return value:  Size  Location     Type
 37600 ;;                  1    wreg      unsigned char 
 37601 ;; Registers used:
 37602 ;;		wreg, status,2, status,0, cstack
 37603 ;; Tracked objects:
 37604 ;;		On entry : 0/0
 37605 ;;		On exit  : 0/0
 37606 ;;		Unchanged: 0/0
 37607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37612 ;;Total ram usage:        1 bytes
 37613 ;; Hardware stack levels used:    1
 37614 ;; Hardware stack levels required when called:    6
 37615 ;; This function calls:
 37616 ;;		__root_is_available
 37617 ;; This function is called by:
 37618 ;;		_fat_create_file
 37619 ;; This function uses a non-reentrant model
 37620 ;;
 37621                           
 37622                           	psect	text187
 37623  00869E                     __ptext187:
 37624                           	opt stack 0
 37625  00869E                     __get_available_root_entry:
 37626                           	opt stack 20
 37627                           
 37628                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 37629                           
 37630                           ;incstack = 0
 37631  00869E  0E00               	movlw	0
 37632  0086A0  6E37               	movwf	__get_available_root_entry@file_number,c
 37633  0086A2                     l11554:
 37634  0086A2  0E3F               	movlw	63
 37635  0086A4  6437               	cpfsgt	__get_available_root_entry@file_number,c
 37636  0086A6  D001               	goto	l1923
 37637  0086A8  D00A               	goto	u8570
 37638  0086AA                     l1923:
 37639                           
 37640                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 37641  0086AA  5037               	movf	__get_available_root_entry@file_number,w,c
 37642  0086AC  EC94  F038         	call	__root_is_available
 37643  0086B0  0900               	iorlw	0
 37644  0086B2  B4D8               	btfsc	status,2,c
 37645  0086B4  D002               	goto	l1925
 37646                           
 37647                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 37648  0086B6  5037               	movf	__get_available_root_entry@file_number,w,c
 37649  0086B8  0012               	return	
 37650  0086BA                     l1925:
 37651  0086BA  2A37               	incf	__get_available_root_entry@file_number,f,c
 37652  0086BC  D7F2               	goto	l11554
 37653  0086BE                     u8570:
 37654                           
 37655                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 37656  0086BE  0EFF               	movlw	255
 37657  0086C0  0012               	return	
 37658  0086C2                     __end_of__get_available_root_entry:
 37659                           	opt stack 0
 37660                           tosu	equ	0xFFF
 37661                           tosh	equ	0xFFE
 37662                           tosl	equ	0xFFD
 37663                           pclath	equ	0xFFA
 37664                           tblptru	equ	0xFF8
 37665                           tblptrh	equ	0xFF7
 37666                           tblptrl	equ	0xFF6
 37667                           tablat	equ	0xFF5
 37668                           prodh	equ	0xFF4
 37669                           prodl	equ	0xFF3
 37670                           intcon	equ	0xFF2
 37671                           intcon2	equ	0xFF1
 37672                           intcon3	equ	0xFF0
 37673                           indf0	equ	0xFEF
 37674                           postinc0	equ	0xFEE
 37675                           fsr0h	equ	0xFEA
 37676                           fsr0l	equ	0xFE9
 37677                           wreg	equ	0xFE8
 37678                           indf1	equ	0xFE7
 37679                           postdec1	equ	0xFE5
 37680                           plusw1	equ	0xFE3
 37681                           fsr1h	equ	0xFE2
 37682                           fsr1l	equ	0xFE1
 37683                           indf2	equ	0xFDF
 37684                           postinc2	equ	0xFDE
 37685                           postdec2	equ	0xFDD
 37686                           plusw2	equ	0xFDB
 37687                           fsr2h	equ	0xFDA
 37688                           fsr2l	equ	0xFD9
 37689                           status	equ	0xFD8
 37690                           
 37691 ;; *************** function __parse_file_append *****************
 37692 ;; Defined at:
 37693 ;;		line 587 in file "api.c"
 37694 ;; Parameters:    Size  Location     Type
 37695 ;;  data            2   74[COMRAM] PTR unsigned char 
 37696 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37697 ;; Auto vars:     Size  Location     Type
 37698 ;;		None
 37699 ;; Return value:  Size  Location     Type
 37700 ;;                  1    wreg      unsigned char 
 37701 ;; Registers used:
 37702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37703 ;; Tracked objects:
 37704 ;;		On entry : 0/0
 37705 ;;		On exit  : 0/0
 37706 ;;		Unchanged: 0/0
 37707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37711 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37712 ;;Total ram usage:        3 bytes
 37713 ;; Hardware stack levels used:    1
 37714 ;; Hardware stack levels required when called:    8
 37715 ;; This function calls:
 37716 ;;		_fat_append_to_file
 37717 ;; This function is called by:
 37718 ;;		__parse_command_long
 37719 ;; This function uses a non-reentrant model
 37720 ;;
 37721                           
 37722                           	psect	text188
 37723  006EBE                     __ptext188:
 37724                           	opt stack 0
 37725  006EBE                     __parse_file_append:
 37726                           	opt stack 20
 37727                           
 37728                           ;api.c: 590: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 37729                           
 37730                           ;incstack = 0
 37731  006EBE  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 37732  006EC2  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 37733  006EC6  0E54               	movlw	84
 37734  006EC8  18DE               	xorwf	postinc2,w,c
 37735  006ECA  A4D8               	btfss	status,2,c
 37736  006ECC  D014               	goto	u10540
 37737  006ECE  EE20 F003          	lfsr	2,3
 37738  006ED2  504B               	movf	__parse_file_append@data,w,c
 37739  006ED4  26D9               	addwf	fsr2l,f,c
 37740  006ED6  504C               	movf	__parse_file_append@data+1,w,c
 37741  006ED8  22DA               	addwfc	fsr2h,f,c
 37742  006EDA  0EFE               	movlw	254
 37743  006EDC  18DE               	xorwf	postinc2,w,c
 37744  006EDE  A4D8               	btfss	status,2,c
 37745  006EE0  D00A               	goto	u10540
 37746  006EE2  EE20 F004          	lfsr	2,4
 37747  006EE6  504B               	movf	__parse_file_append@data,w,c
 37748  006EE8  26D9               	addwf	fsr2l,f,c
 37749  006EEA  504C               	movf	__parse_file_append@data+1,w,c
 37750  006EEC  22DA               	addwfc	fsr2h,f,c
 37751  006EEE  0E4B               	movlw	75
 37752  006EF0  18DE               	xorwf	postinc2,w,c
 37753  006EF2  B4D8               	btfsc	status,2,c
 37754  006EF4  D002               	goto	l2746
 37755  006EF6                     u10540:
 37756                           
 37757                           ;api.c: 591: {;api.c: 593: return 65;
 37758  006EF6  0E41               	movlw	65
 37759  006EF8  0012               	return	
 37760  006EFA                     l2746:
 37761                           
 37762                           ;api.c: 594: };api.c: 597: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 37763  006EFA  EE20 F002          	lfsr	2,2
 37764  006EFE  504B               	movf	__parse_file_append@data,w,c
 37765  006F00  26D9               	addwf	fsr2l,f,c
 37766  006F02  504C               	movf	__parse_file_append@data+1,w,c
 37767  006F04  22DA               	addwfc	fsr2h,f,c
 37768  006F06  50DF               	movf	indf2,w,c
 37769  006F08  6E4D               	movwf	??__parse_file_append& (0+255),c
 37770  006F0A  504D               	movf	??__parse_file_append,w,c
 37771  006F0C  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 37772  006F0E  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 37773  006F10  0E05               	movlw	5
 37774  006F12  244B               	addwf	__parse_file_append@data,w,c
 37775  006F14  6E41               	movwf	fat_append_to_file@data,c
 37776  006F16  0E00               	movlw	0
 37777  006F18  204C               	addwfc	__parse_file_append@data+1,w,c
 37778  006F1A  6E42               	movwf	fat_append_to_file@data+1,c
 37779  006F1C  EE20 F001          	lfsr	2,1
 37780  006F20  504B               	movf	__parse_file_append@data,w,c
 37781  006F22  26D9               	addwf	fsr2l,f,c
 37782  006F24  504C               	movf	__parse_file_append@data+1,w,c
 37783  006F26  22DA               	addwfc	fsr2h,f,c
 37784  006F28  50DF               	movf	indf2,w,c
 37785  006F2A  EC28  F013         	call	_fat_append_to_file
 37786                           
 37787                           ;api.c: 598: return data[2] + 5;
 37788  006F2E  EE20 F002          	lfsr	2,2
 37789  006F32  504B               	movf	__parse_file_append@data,w,c
 37790  006F34  26D9               	addwf	fsr2l,f,c
 37791  006F36  504C               	movf	__parse_file_append@data+1,w,c
 37792  006F38  22DA               	addwfc	fsr2h,f,c
 37793  006F3A  50DF               	movf	indf2,w,c
 37794  006F3C  0F05               	addlw	5
 37795  006F3E  0012               	return	
 37796  006F40                     __end_of__parse_file_append:
 37797                           	opt stack 0
 37798                           tosu	equ	0xFFF
 37799                           tosh	equ	0xFFE
 37800                           tosl	equ	0xFFD
 37801                           pclath	equ	0xFFA
 37802                           tblptru	equ	0xFF8
 37803                           tblptrh	equ	0xFF7
 37804                           tblptrl	equ	0xFF6
 37805                           tablat	equ	0xFF5
 37806                           prodh	equ	0xFF4
 37807                           prodl	equ	0xFF3
 37808                           intcon	equ	0xFF2
 37809                           intcon2	equ	0xFF1
 37810                           intcon3	equ	0xFF0
 37811                           indf0	equ	0xFEF
 37812                           postinc0	equ	0xFEE
 37813                           fsr0h	equ	0xFEA
 37814                           fsr0l	equ	0xFE9
 37815                           wreg	equ	0xFE8
 37816                           indf1	equ	0xFE7
 37817                           postdec1	equ	0xFE5
 37818                           plusw1	equ	0xFE3
 37819                           fsr1h	equ	0xFE2
 37820                           fsr1l	equ	0xFE1
 37821                           indf2	equ	0xFDF
 37822                           postinc2	equ	0xFDE
 37823                           postdec2	equ	0xFDD
 37824                           plusw2	equ	0xFDB
 37825                           fsr2h	equ	0xFDA
 37826                           fsr2l	equ	0xFD9
 37827                           status	equ	0xFD8
 37828                           
 37829 ;; *************** function _fat_append_to_file *****************
 37830 ;; Defined at:
 37831 ;;		line 450 in file "fat16.c"
 37832 ;; Parameters:    Size  Location     Type
 37833 ;;  file_number     1    wreg     unsigned char 
 37834 ;;  number_of_by    2   62[COMRAM] unsigned int 
 37835 ;;  data            2   64[COMRAM] PTR unsigned char 
 37836 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37837 ;; Auto vars:     Size  Location     Type
 37838 ;;  file_number     1   12[BANK0 ] unsigned char 
 37839 ;;  root           32   19[BANK0 ] struct .
 37840 ;;  position        4   15[BANK0 ] unsigned long 
 37841 ;;  file_size       4    2[BANK0 ] unsigned long 
 37842 ;;  length          2   13[BANK0 ] unsigned int 
 37843 ;;  offset          2   10[BANK0 ] unsigned int 
 37844 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 37845 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 37846 ;;  sector          2    0[BANK0 ] unsigned int 
 37847 ;; Return value:  Size  Location     Type
 37848 ;;                  1    wreg      unsigned char 
 37849 ;; Registers used:
 37850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37851 ;; Tracked objects:
 37852 ;;		On entry : 0/0
 37853 ;;		On exit  : 0/0
 37854 ;;		Unchanged: 0/0
 37855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37857 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37858 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37859 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37860 ;;Total ram usage:       63 bytes
 37861 ;; Hardware stack levels used:    1
 37862 ;; Hardware stack levels required when called:    7
 37863 ;; This function calls:
 37864 ;;		__get_empty_cluster
 37865 ;;		__read_fat
 37866 ;;		__root_is_available
 37867 ;;		__sector_from_cluster
 37868 ;;		__update_modified_time
 37869 ;;		__write_fat
 37870 ;;		__write_root
 37871 ;;		_fat_get_file_information
 37872 ;;		_flash_partial_write
 37873 ;; This function is called by:
 37874 ;;		__parse_file_append
 37875 ;; This function uses a non-reentrant model
 37876 ;;
 37877                           
 37878                           	psect	text189
 37879  002650                     __ptext189:
 37880                           	opt stack 0
 37881  002650                     _fat_append_to_file:
 37882                           	opt stack 20
 37883                           
 37884                           ;incstack = 0
 37885                           ;fat_append_to_file@file_number stored from wreg
 37886  002650  0100               	movlb	0	; () banked
 37887  002652  6F6C               	movwf	fat_append_to_file@file_number& (0+255),b
 37888                           
 37889                           ;fat16.c: 452: rootEntry_t root;;fat16.c: 453: uint32_t file_size;;fat16.c: 454: uint16_
      +                          t fat_cluster;;fat16.c: 455: uint16_t new_cluster;;fat16.c: 456: uint32_t position;;fat1
      +                          6.c: 457: uint16_t offset;;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t length;
      +                          ;fat16.c: 462: if(file_number>=64)
 37890  002654  0E3F               	movlw	63
 37891  002656  0100               	movlb	0	; () banked
 37892  002658  656C               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 37893  00265A  D001               	goto	l2004
 37894  00265C  0012               	return	
 37895  00265E                     l2004:
 37896                           
 37897                           ; BSR set to: 0
 37898                           ;fat16.c: 466: };fat16.c: 469: if(_root_is_available(file_number))
 37899                           
 37900                           ; BSR set to: 0
 37901  00265E  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 37902  002660  EC94  F038         	call	__root_is_available
 37903  002664  0900               	iorlw	0
 37904  002666  A4D8               	btfss	status,2,c
 37905  002668  0012               	return	
 37906                           
 37907                           ;fat16.c: 473: };fat16.c: 476: fat_get_file_information(file_number, &root);
 37908                           
 37909                           ;fat16.c: 470: {;fat16.c: 472: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 37910  00266A  0E73               	movlw	low fat_append_to_file@root
 37911  00266C  6E37               	movwf	fat_get_file_information@data,c
 37912  00266E  0E00               	movlw	high fat_append_to_file@root
 37913  002670  6E38               	movwf	fat_get_file_information@data+1,c
 37914  002672  0100               	movlb	0	; () banked
 37915  002674  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 37916  002676  ECCF  F038         	call	_fat_get_file_information
 37917                           
 37918                           ;fat16.c: 477: file_size = root.fileSize;
 37919  00267A  C08F  F062         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 37920  00267E  C090  F063         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 37921  002682  C091  F064         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 37922  002686  C092  F065         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 37923                           
 37924                           ;fat16.c: 478: fat_cluster = root.firstCluster;
 37925  00268A  C08D  F068         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 37926  00268E  C08E  F069         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 37927                           
 37928                           ;fat16.c: 481: position = 0;
 37929  002692  0E00               	movlw	0
 37930  002694  0100               	movlb	0	; () banked
 37931  002696  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 37932  002698  0E00               	movlw	0
 37933  00269A  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 37934  00269C  0E00               	movlw	0
 37935  00269E  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 37936  0026A0  0E00               	movlw	0
 37937  0026A2  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 37938                           
 37939                           ;fat16.c: 482: while((file_size-position)>512)
 37940  0026A4  D013               	goto	l2007
 37941  0026A6                     l12734:
 37942                           
 37943                           ; BSR set to: 0
 37944                           ;fat16.c: 483: {;fat16.c: 484: fat_cluster = _read_fat(fat_cluster);
 37945  0026A6  C068  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 37946  0026AA  C069  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 37947  0026AE  EC93  F03F         	call	__read_fat	;wreg free
 37948  0026B2  C030  F068         	movff	?__read_fat,fat_append_to_file@fat_cluster
 37949  0026B6  C031  F069         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 37950                           
 37951                           ;fat16.c: 485: position += 512;
 37952  0026BA  0E00               	movlw	0
 37953  0026BC  0100               	movlb	0	; () banked
 37954  0026BE  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 37955  0026C0  0E02               	movlw	2
 37956  0026C2  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 37957  0026C4  0E00               	movlw	0
 37958  0026C6  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 37959  0026C8  0E00               	movlw	0
 37960  0026CA  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 37961  0026CC                     l2007:
 37962                           
 37963                           ; BSR set to: 0
 37964                           
 37965                           ; BSR set to: 0
 37966  0026CC  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 37967  0026D0  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 37968  0026D4  C071  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 37969  0026D8  C072  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 37970  0026DC  1E43               	comf	??_fat_append_to_file,f,c
 37971  0026DE  1E44               	comf	??_fat_append_to_file+1,f,c
 37972  0026E0  1E45               	comf	??_fat_append_to_file+2,f,c
 37973  0026E2  1E46               	comf	??_fat_append_to_file+3,f,c
 37974  0026E4  2A43               	incf	??_fat_append_to_file,f,c
 37975  0026E6  0E00               	movlw	0
 37976  0026E8  2244               	addwfc	??_fat_append_to_file+1,f,c
 37977  0026EA  2245               	addwfc	??_fat_append_to_file+2,f,c
 37978  0026EC  2246               	addwfc	??_fat_append_to_file+3,f,c
 37979  0026EE  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 37980  0026F0  2443               	addwf	??_fat_append_to_file,w,c
 37981  0026F2  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 37982  0026F4  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 37983  0026F6  2044               	addwfc	??_fat_append_to_file+1,w,c
 37984  0026F8  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 37985  0026FA  5164               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 37986  0026FC  2045               	addwfc	??_fat_append_to_file+2,w,c
 37987  0026FE  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 37988  002700  5165               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 37989  002702  2046               	addwfc	??_fat_append_to_file+3,w,c
 37990  002704  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 37991  002706  504A               	movf	??_fat_append_to_file+7,w,c
 37992  002708  1049               	iorwf	??_fat_append_to_file+6,w,c
 37993  00270A  E1CD               	bnz	l12734
 37994  00270C  0447               	decf	??_fat_append_to_file+4,w,c
 37995  00270E  0E02               	movlw	2
 37996  002710  5848               	subwfb	??_fat_append_to_file+5,w,c
 37997  002712  B0D8               	btfsc	status,0,c
 37998  002714  D7C8               	goto	l2008
 37999                           
 38000                           ; BSR set to: 0
 38001                           ;fat16.c: 486: };fat16.c: 489: offset = file_size - position;
 38002                           
 38003                           ; BSR set to: 0
 38004  002716  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 38005  00271A  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 38006  00271E  1E43               	comf	??_fat_append_to_file,f,c
 38007  002720  1E44               	comf	??_fat_append_to_file+1,f,c
 38008  002722  4A43               	infsnz	??_fat_append_to_file,f,c
 38009  002724  2A44               	incf	??_fat_append_to_file+1,f,c
 38010  002726  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 38011  002728  2443               	addwf	??_fat_append_to_file,w,c
 38012  00272A  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 38013  00272C  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 38014  00272E  2044               	addwfc	??_fat_append_to_file+1,w,c
 38015  002730  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 38016                           
 38017                           ; BSR set to: 0
 38018                           ;fat16.c: 492: position = 0;
 38019  002732  0E00               	movlw	0
 38020  002734  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 38021  002736  0E00               	movlw	0
 38022  002738  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 38023  00273A  0E00               	movlw	0
 38024  00273C  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 38025  00273E  0E00               	movlw	0
 38026  002740  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 38027                           
 38028                           ;fat16.c: 493: while(position < number_of_bytes)
 38029  002742  D06F               	goto	l2010
 38030  002744                     
 38031                           ; BSR set to: 0
 38032                           ;fat16.c: 494: {;fat16.c: 496: if(offset==512)
 38033                           
 38034                           ; BSR set to: 0
 38035  002744  0E02               	movlw	2
 38036  002746  196B               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 38037  002748  116A               	iorwf	fat_append_to_file@offset& (0+255),w,b
 38038  00274A  A4D8               	btfss	status,2,c
 38039  00274C  D026               	goto	l2012
 38040                           
 38041                           ; BSR set to: 0
 38042                           ;fat16.c: 497: {;fat16.c: 500: new_cluster = _get_empty_cluster(0x0000);
 38043  00274E  0E00               	movlw	0
 38044  002750  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 38045  002752  0E00               	movlw	0
 38046  002754  6E30               	movwf	__get_empty_cluster@first_cluster,c
 38047  002756  EC97  F036         	call	__get_empty_cluster	;wreg free
 38048  00275A  C030  F066         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 38049  00275E  C031  F067         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 38050                           
 38051                           ;fat16.c: 502: _write_fat(fat_cluster, new_cluster);
 38052  002762  C068  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 38053  002766  C069  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 38054  00276A  C066  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 38055  00276E  C067  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 38056  002772  EC7E  F040         	call	__write_fat	;wreg free
 38057                           
 38058                           ;fat16.c: 504: _write_fat(new_cluster, 0xFFFF);
 38059  002776  C066  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 38060  00277A  C067  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 38061  00277E  0EFF               	movlw	255
 38062  002780  6E2C               	movwf	__write_fat@value+1,c
 38063  002782  682B               	setf	__write_fat@value,c
 38064  002784  EC7E  F040         	call	__write_fat	;wreg free
 38065                           
 38066                           ;fat16.c: 506: fat_cluster = new_cluster;
 38067  002788  C066  F068         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 38068  00278C  C067  F069         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 38069                           
 38070                           ;fat16.c: 507: offset = 0;
 38071  002790  0E00               	movlw	0
 38072  002792  0100               	movlb	0	; () banked
 38073  002794  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 38074  002796  0E00               	movlw	0
 38075  002798  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 38076  00279A                     l2012:
 38077                           
 38078                           ; BSR set to: 0
 38079                           ;fat16.c: 508: };fat16.c: 511: sector = _sector_from_cluster(fat_cluster);
 38080                           
 38081                           ; BSR set to: 0
 38082  00279A  C068  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 38083  00279E  C069  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 38084  0027A2  EC72  F044         	call	__sector_from_cluster	;wreg free
 38085  0027A6  C001  F060         	movff	?__sector_from_cluster,fat_append_to_file@sector
 38086  0027AA  C002  F061         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 38087                           
 38088                           ;fat16.c: 514: length = 512 - offset;
 38089  0027AE  C06A  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 38090  0027B2  C06B  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 38091  0027B6  1E43               	comf	??_fat_append_to_file,f,c
 38092  0027B8  1E44               	comf	??_fat_append_to_file+1,f,c
 38093  0027BA  4A43               	infsnz	??_fat_append_to_file,f,c
 38094  0027BC  2A44               	incf	??_fat_append_to_file+1,f,c
 38095  0027BE  0E00               	movlw	0
 38096  0027C0  2443               	addwf	??_fat_append_to_file,w,c
 38097  0027C2  0100               	movlb	0	; () banked
 38098  0027C4  6F6D               	movwf	fat_append_to_file@length& (0+255),b
 38099  0027C6  0E02               	movlw	2
 38100  0027C8  2044               	addwfc	??_fat_append_to_file+1,w,c
 38101  0027CA  6F6E               	movwf	(fat_append_to_file@length+1)& (0+255),b
 38102                           
 38103                           ; BSR set to: 0
 38104                           ;fat16.c: 515: if(length>number_of_bytes)
 38105  0027CC  516D               	movf	fat_append_to_file@length& (0+255),w,b
 38106  0027CE  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 38107  0027D0  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 38108  0027D2  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 38109  0027D4  B0D8               	btfsc	status,0,c
 38110  0027D6  D004               	goto	l2013
 38111                           
 38112                           ; BSR set to: 0
 38113                           ;fat16.c: 516: {;fat16.c: 517: length = number_of_bytes;
 38114  0027D8  C03F  F06D         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 38115  0027DC  C040  F06E         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 38116  0027E0                     l2013:
 38117                           
 38118                           ; BSR set to: 0
 38119                           ;fat16.c: 518: };fat16.c: 521: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 38120                           
 38121                           ; BSR set to: 0
 38122  0027E0  C060  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 38123  0027E4  C061  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 38124  0027E8  C06A  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 38125  0027EC  C06B  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 38126  0027F0  C06D  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 38127  0027F4  C06E  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 38128  0027F8  516F               	movf	fat_append_to_file@position& (0+255),w,b
 38129  0027FA  2441               	addwf	fat_append_to_file@data,w,c
 38130  0027FC  6E26               	movwf	flash_partial_write@data,c
 38131  0027FE  5170               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 38132  002800  2042               	addwfc	fat_append_to_file@data+1,w,c
 38133  002802  6E27               	movwf	flash_partial_write@data+1,c
 38134  002804  EC7A  F039         	call	_flash_partial_write	;wreg free
 38135                           
 38136                           ;fat16.c: 524: position += length;
 38137  002808  0100               	movlb	0	; () banked
 38138  00280A  516D               	movf	fat_append_to_file@length& (0+255),w,b
 38139  00280C  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 38140  00280E  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 38141  002810  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 38142  002812  0E00               	movlw	0
 38143  002814  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 38144  002816  0E00               	movlw	0
 38145  002818  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 38146                           
 38147                           ; BSR set to: 0
 38148                           ;fat16.c: 525: offset += length;
 38149  00281A  516D               	movf	fat_append_to_file@length& (0+255),w,b
 38150  00281C  276A               	addwf	fat_append_to_file@offset& (0+255),f,b
 38151  00281E  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 38152  002820  236B               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 38153  002822                     l2010:
 38154                           
 38155                           ; BSR set to: 0
 38156                           
 38157                           ; BSR set to: 0
 38158  002822  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 38159  002824  6E43               	movwf	??_fat_append_to_file& (0+255),c
 38160  002826  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 38161  002828  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 38162  00282A  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 38163  00282C  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 38164  00282E  5043               	movf	??_fat_append_to_file,w,c
 38165  002830  5D6F               	subwf	fat_append_to_file@position& (0+255),w,b
 38166  002832  5044               	movf	??_fat_append_to_file+1,w,c
 38167  002834  5970               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 38168  002836  5045               	movf	??_fat_append_to_file+2,w,c
 38169  002838  5971               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 38170  00283A  5046               	movf	??_fat_append_to_file+3,w,c
 38171  00283C  5972               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 38172  00283E  A0D8               	btfss	status,0,c
 38173  002840  D781               	goto	l2011
 38174                           
 38175                           ; BSR set to: 0
 38176                           ;fat16.c: 526: };fat16.c: 530: root.fileSize += number_of_bytes;
 38177                           
 38178                           ; BSR set to: 0
 38179  002842  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 38180  002844  278F               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 38181  002846  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 38182  002848  2390               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 38183  00284A  0E00               	movlw	0
 38184  00284C  2391               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 38185  00284E  0E00               	movlw	0
 38186  002850  2392               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 38187                           
 38188                           ; BSR set to: 0
 38189                           ;fat16.c: 531: _update_modified_time(&root);
 38190  002852  0E73               	movlw	low fat_append_to_file@root
 38191  002854  6E05               	movwf	__update_modified_time@root,c
 38192  002856  0E00               	movlw	high fat_append_to_file@root
 38193  002858  6E06               	movwf	__update_modified_time@root+1,c
 38194  00285A  ECE3  F041         	call	__update_modified_time	;wreg free
 38195                           
 38196                           ;fat16.c: 532: _write_root(file_number, &root);
 38197  00285E  0E73               	movlw	low fat_append_to_file@root
 38198  002860  6E29               	movwf	__write_root@data,c
 38199  002862  0E00               	movlw	high fat_append_to_file@root
 38200  002864  6E2A               	movwf	__write_root@data+1,c
 38201  002866  0100               	movlb	0	; () banked
 38202  002868  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 38203  00286A  ECCD  F03C         	call	__write_root
 38204  00286E  0012               	return	
 38205  002870                     __end_of_fat_append_to_file:
 38206                           	opt stack 0
 38207                           tosu	equ	0xFFF
 38208                           tosh	equ	0xFFE
 38209                           tosl	equ	0xFFD
 38210                           pclath	equ	0xFFA
 38211                           tblptru	equ	0xFF8
 38212                           tblptrh	equ	0xFF7
 38213                           tblptrl	equ	0xFF6
 38214                           tablat	equ	0xFF5
 38215                           prodh	equ	0xFF4
 38216                           prodl	equ	0xFF3
 38217                           intcon	equ	0xFF2
 38218                           intcon2	equ	0xFF1
 38219                           intcon3	equ	0xFF0
 38220                           indf0	equ	0xFEF
 38221                           postinc0	equ	0xFEE
 38222                           fsr0h	equ	0xFEA
 38223                           fsr0l	equ	0xFE9
 38224                           wreg	equ	0xFE8
 38225                           indf1	equ	0xFE7
 38226                           postdec1	equ	0xFE5
 38227                           plusw1	equ	0xFE3
 38228                           fsr1h	equ	0xFE2
 38229                           fsr1l	equ	0xFE1
 38230                           indf2	equ	0xFDF
 38231                           postinc2	equ	0xFDE
 38232                           postdec2	equ	0xFDD
 38233                           plusw2	equ	0xFDB
 38234                           fsr2h	equ	0xFDA
 38235                           fsr2l	equ	0xFD9
 38236                           status	equ	0xFD8
 38237                           
 38238 ;; *************** function _fat_get_file_information *****************
 38239 ;; Defined at:
 38240 ;;		line 1196 in file "fat16.c"
 38241 ;; Parameters:    Size  Location     Type
 38242 ;;  file_number     1    wreg     unsigned char 
 38243 ;;  data            2   54[COMRAM] PTR struct .
 38244 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 38245 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 38246 ;;		 -> RAM(3759), 
 38247 ;; Auto vars:     Size  Location     Type
 38248 ;;  file_number     1   61[COMRAM] unsigned char 
 38249 ;;  offset          2   59[COMRAM] unsigned int 
 38250 ;;  root_sector     2   57[COMRAM] unsigned int 
 38251 ;; Return value:  Size  Location     Type
 38252 ;;                  1    wreg      unsigned char 
 38253 ;; Registers used:
 38254 ;;		wreg, status,2, status,0, cstack
 38255 ;; Tracked objects:
 38256 ;;		On entry : 0/0
 38257 ;;		On exit  : 0/0
 38258 ;;		Unchanged: 0/0
 38259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38261 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38263 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38264 ;;Total ram usage:        8 bytes
 38265 ;; Hardware stack levels used:    1
 38266 ;; Hardware stack levels required when called:    6
 38267 ;; This function calls:
 38268 ;;		__root_is_available
 38269 ;;		_flash_partial_read
 38270 ;; This function is called by:
 38271 ;;		_fat_append_to_file
 38272 ;;		_fat_rename_file
 38273 ;;		_fat_read_from_file
 38274 ;;		_fat_resize_file
 38275 ;;		_fat_modify_file
 38276 ;;		__bootloader_verify_file
 38277 ;;		__bootloader_program
 38278 ;;		__fill_buffer_get_file_details
 38279 ;; This function uses a non-reentrant model
 38280 ;;
 38281                           
 38282                           	psect	text190
 38283  00719E                     __ptext190:
 38284                           	opt stack 0
 38285  00719E                     _fat_get_file_information:
 38286                           	opt stack 22
 38287                           
 38288                           ;incstack = 0
 38289                           ;fat_get_file_information@file_number stored from wreg
 38290  00719E  6E3E               	movwf	fat_get_file_information@file_number,c
 38291                           
 38292                           ;fat16.c: 1198: uint16_t root_sector;;fat16.c: 1199: uint16_t offset;;fat16.c: 1201: if(
      +                          file_number>=64)
 38293  0071A0  0E3F               	movlw	63
 38294  0071A2  643E               	cpfsgt	fat_get_file_information@file_number,c
 38295  0071A4  D002               	goto	l2239
 38296                           
 38297                           ;fat16.c: 1202: {;fat16.c: 1204: return 0x01;
 38298  0071A6  0E01               	movlw	1
 38299  0071A8  0012               	return	
 38300  0071AA                     l2239:
 38301                           
 38302                           ;fat16.c: 1205: };fat16.c: 1206: if(_root_is_available(file_number))
 38303  0071AA  503E               	movf	fat_get_file_information@file_number,w,c
 38304  0071AC  EC94  F038         	call	__root_is_available
 38305  0071B0  0900               	iorlw	0
 38306  0071B2  B4D8               	btfsc	status,2,c
 38307  0071B4  D002               	goto	l2241
 38308                           
 38309                           ;fat16.c: 1207: {;fat16.c: 1209: return 0x02;
 38310  0071B6  0E02               	movlw	2
 38311  0071B8  0012               	return	
 38312  0071BA                     l2241:
 38313                           
 38314                           ;fat16.c: 1210: };fat16.c: 1212: root_sector = (file_number >> 4) + 34;
 38315  0071BA  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 38316  0071BE  3A39               	swapf	??_fat_get_file_information,f,c
 38317  0071C0  0E0F               	movlw	15
 38318  0071C2  1639               	andwf	??_fat_get_file_information,f,c
 38319  0071C4  0E22               	movlw	34
 38320  0071C6  2439               	addwf	??_fat_get_file_information,w,c
 38321  0071C8  6E3A               	movwf	fat_get_file_information@root_sector,c
 38322  0071CA  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 38323  0071CC  0E00               	movlw	0
 38324  0071CE  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 38325                           
 38326                           ;fat16.c: 1213: offset = (file_number & 0b1111);
 38327  0071D0  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 38328  0071D4  0E0F               	movlw	15
 38329  0071D6  1639               	andwf	??_fat_get_file_information,f,c
 38330  0071D8  5039               	movf	??_fat_get_file_information,w,c
 38331  0071DA  6E3C               	movwf	fat_get_file_information@offset,c
 38332  0071DC  6A3D               	clrf	fat_get_file_information@offset+1,c
 38333                           
 38334                           ;fat16.c: 1214: offset <<= 5;
 38335  0071DE  0E05               	movlw	5
 38336  0071E0                     u8795:
 38337  0071E0  90D8               	bcf	status,0,c
 38338  0071E2  363C               	rlcf	fat_get_file_information@offset,f,c
 38339  0071E4  363D               	rlcf	fat_get_file_information@offset+1,f,c
 38340  0071E6  2EE8               	decfsz	wreg,f,c
 38341  0071E8  D7FB               	goto	u8795
 38342                           
 38343                           ;fat16.c: 1215: flash_partial_read(root_sector, offset, 32, data);
 38344  0071EA  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 38345  0071EE  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 38346  0071F2  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 38347  0071F6  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 38348  0071FA  0E00               	movlw	0
 38349  0071FC  6E2D               	movwf	flash_partial_read@length+1,c
 38350  0071FE  0E20               	movlw	32
 38351  007200  6E2C               	movwf	flash_partial_read@length,c
 38352  007202  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 38353  007206  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 38354  00720A  ECFC  F041         	call	_flash_partial_read	;wreg free
 38355                           
 38356                           ;fat16.c: 1218: return 0x00;
 38357  00720E  0E00               	movlw	0
 38358  007210  0012               	return	
 38359  007212                     __end_of_fat_get_file_information:
 38360                           	opt stack 0
 38361                           tosu	equ	0xFFF
 38362                           tosh	equ	0xFFE
 38363                           tosl	equ	0xFFD
 38364                           pclath	equ	0xFFA
 38365                           tblptru	equ	0xFF8
 38366                           tblptrh	equ	0xFF7
 38367                           tblptrl	equ	0xFF6
 38368                           tablat	equ	0xFF5
 38369                           prodh	equ	0xFF4
 38370                           prodl	equ	0xFF3
 38371                           intcon	equ	0xFF2
 38372                           intcon2	equ	0xFF1
 38373                           intcon3	equ	0xFF0
 38374                           indf0	equ	0xFEF
 38375                           postinc0	equ	0xFEE
 38376                           fsr0h	equ	0xFEA
 38377                           fsr0l	equ	0xFE9
 38378                           wreg	equ	0xFE8
 38379                           indf1	equ	0xFE7
 38380                           postdec1	equ	0xFE5
 38381                           plusw1	equ	0xFE3
 38382                           fsr1h	equ	0xFE2
 38383                           fsr1l	equ	0xFE1
 38384                           indf2	equ	0xFDF
 38385                           postinc2	equ	0xFDE
 38386                           postdec2	equ	0xFDD
 38387                           plusw2	equ	0xFDB
 38388                           fsr2h	equ	0xFDA
 38389                           fsr2l	equ	0xFD9
 38390                           status	equ	0xFD8
 38391                           
 38392 ;; *************** function __root_is_available *****************
 38393 ;; Defined at:
 38394 ;;		line 59 in file "fat16.c"
 38395 ;; Parameters:    Size  Location     Type
 38396 ;;  file_number     1    wreg     unsigned char 
 38397 ;; Auto vars:     Size  Location     Type
 38398 ;;  file_number     1   52[COMRAM] unsigned char 
 38399 ;;  offset          2   50[COMRAM] unsigned int 
 38400 ;;  root_sector     2   48[COMRAM] unsigned int 
 38401 ;;  first_byte      1   53[COMRAM] unsigned char 
 38402 ;; Return value:  Size  Location     Type
 38403 ;;                  1    wreg      unsigned char 
 38404 ;; Registers used:
 38405 ;;		wreg, status,2, status,0, cstack
 38406 ;; Tracked objects:
 38407 ;;		On entry : 0/0
 38408 ;;		On exit  : 0/0
 38409 ;;		Unchanged: 0/0
 38410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38412 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38415 ;;Total ram usage:        7 bytes
 38416 ;; Hardware stack levels used:    1
 38417 ;; Hardware stack levels required when called:    5
 38418 ;; This function calls:
 38419 ;;		_flash_partial_read
 38420 ;; This function is called by:
 38421 ;;		__get_available_root_entry
 38422 ;;		_fat_delete_file
 38423 ;;		_fat_append_to_file
 38424 ;;		_fat_resize_file
 38425 ;;		_fat_get_file_information
 38426 ;; This function uses a non-reentrant model
 38427 ;;
 38428                           
 38429                           	psect	text191
 38430  007128                     __ptext191:
 38431                           	opt stack 0
 38432  007128                     __root_is_available:
 38433                           	opt stack 22
 38434                           
 38435                           ;incstack = 0
 38436                           ;__root_is_available@file_number stored from wreg
 38437  007128  6E35               	movwf	__root_is_available@file_number,c
 38438                           
 38439                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 38440  00712A  0E3F               	movlw	63
 38441  00712C  6435               	cpfsgt	__root_is_available@file_number,c
 38442  00712E  D002               	goto	l1915
 38443                           
 38444                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 38445  007130  0E00               	movlw	0
 38446  007132  0012               	return	
 38447  007134                     l1915:
 38448                           
 38449                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 38450  007134  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 38451  007138  3A30               	swapf	??__root_is_available,f,c
 38452  00713A  0E0F               	movlw	15
 38453  00713C  1630               	andwf	??__root_is_available,f,c
 38454  00713E  0E22               	movlw	34
 38455  007140  2430               	addwf	??__root_is_available,w,c
 38456  007142  6E31               	movwf	__root_is_available@root_sector,c
 38457  007144  6A32               	clrf	__root_is_available@root_sector+1,c
 38458  007146  0E00               	movlw	0
 38459  007148  2232               	addwfc	__root_is_available@root_sector+1,f,c
 38460                           
 38461                           ;fat16.c: 75: offset = (file_number & 0b1111);
 38462  00714A  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 38463  00714E  0E0F               	movlw	15
 38464  007150  1630               	andwf	??__root_is_available,f,c
 38465  007152  5030               	movf	??__root_is_available,w,c
 38466  007154  6E33               	movwf	__root_is_available@offset,c
 38467  007156  6A34               	clrf	__root_is_available@offset+1,c
 38468                           
 38469                           ;fat16.c: 76: offset <<= 5;
 38470  007158  0E05               	movlw	5
 38471  00715A                     u7635:
 38472  00715A  90D8               	bcf	status,0,c
 38473  00715C  3633               	rlcf	__root_is_available@offset,f,c
 38474  00715E  3634               	rlcf	__root_is_available@offset+1,f,c
 38475  007160  2EE8               	decfsz	wreg,f,c
 38476  007162  D7FB               	goto	u7635
 38477                           
 38478                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 38479  007164  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 38480  007168  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 38481  00716C  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 38482  007170  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 38483  007174  0E00               	movlw	0
 38484  007176  6E2D               	movwf	flash_partial_read@length+1,c
 38485  007178  0E01               	movlw	1
 38486  00717A  6E2C               	movwf	flash_partial_read@length,c
 38487  00717C  0E36               	movlw	low __root_is_available@first_byte
 38488  00717E  6E2E               	movwf	flash_partial_read@data,c
 38489  007180  0E00               	movlw	high __root_is_available@first_byte
 38490  007182  6E2F               	movwf	flash_partial_read@data+1,c
 38491  007184  ECFC  F041         	call	_flash_partial_read	;wreg free
 38492                           
 38493                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 38494  007188  5036               	movf	__root_is_available@first_byte,w,c
 38495  00718A  B4D8               	btfsc	status,2,c
 38496  00718C  D004               	goto	u7650
 38497  00718E  0EE5               	movlw	229
 38498  007190  1836               	xorwf	__root_is_available@first_byte,w,c
 38499  007192  A4D8               	btfss	status,2,c
 38500  007194  D002               	goto	l1917
 38501  007196                     u7650:
 38502                           
 38503                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 38504  007196  0E01               	movlw	1
 38505                           
 38506                           ;fat16.c: 86: }
 38507  007198  0012               	return	
 38508  00719A                     l1917:
 38509                           
 38510                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 38511  00719A  0E00               	movlw	0
 38512  00719C  0012               	return	
 38513  00719E                     __end_of__root_is_available:
 38514                           	opt stack 0
 38515                           tosu	equ	0xFFF
 38516                           tosh	equ	0xFFE
 38517                           tosl	equ	0xFFD
 38518                           pclath	equ	0xFFA
 38519                           tblptru	equ	0xFF8
 38520                           tblptrh	equ	0xFF7
 38521                           tblptrl	equ	0xFF6
 38522                           tablat	equ	0xFF5
 38523                           prodh	equ	0xFF4
 38524                           prodl	equ	0xFF3
 38525                           intcon	equ	0xFF2
 38526                           intcon2	equ	0xFF1
 38527                           intcon3	equ	0xFF0
 38528                           indf0	equ	0xFEF
 38529                           postinc0	equ	0xFEE
 38530                           fsr0h	equ	0xFEA
 38531                           fsr0l	equ	0xFE9
 38532                           wreg	equ	0xFE8
 38533                           indf1	equ	0xFE7
 38534                           postdec1	equ	0xFE5
 38535                           plusw1	equ	0xFE3
 38536                           fsr1h	equ	0xFE2
 38537                           fsr1l	equ	0xFE1
 38538                           indf2	equ	0xFDF
 38539                           postinc2	equ	0xFDE
 38540                           postdec2	equ	0xFDD
 38541                           plusw2	equ	0xFDB
 38542                           fsr2h	equ	0xFDA
 38543                           fsr2l	equ	0xFD9
 38544                           status	equ	0xFD8
 38545                           
 38546 ;; *************** function __write_root *****************
 38547 ;; Defined at:
 38548 ;;		line 187 in file "fat16.c"
 38549 ;; Parameters:    Size  Location     Type
 38550 ;;  slot            1    wreg     unsigned char 
 38551 ;;  data            2   40[COMRAM] PTR struct .
 38552 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32),
      + 
 38553 ;; Auto vars:     Size  Location     Type
 38554 ;;  slot            1   47[COMRAM] unsigned char 
 38555 ;;  offset          2   45[COMRAM] unsigned int 
 38556 ;;  root_sector     2   43[COMRAM] unsigned int 
 38557 ;; Return value:  Size  Location     Type
 38558 ;;                  1    wreg      void 
 38559 ;; Registers used:
 38560 ;;		wreg, status,2, status,0, cstack
 38561 ;; Tracked objects:
 38562 ;;		On entry : 0/0
 38563 ;;		On exit  : 0/0
 38564 ;;		Unchanged: 0/0
 38565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38567 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38569 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38570 ;;Total ram usage:        8 bytes
 38571 ;; Hardware stack levels used:    1
 38572 ;; Hardware stack levels required when called:    5
 38573 ;; This function calls:
 38574 ;;		_flash_partial_write
 38575 ;; This function is called by:
 38576 ;;		_fat_create_file
 38577 ;;		_fat_append_to_file
 38578 ;;		_fat_rename_file
 38579 ;;		_fat_resize_file
 38580 ;; This function uses a non-reentrant model
 38581 ;;
 38582                           
 38583                           	psect	text192
 38584  00799A                     __ptext192:
 38585                           	opt stack 0
 38586  00799A                     __write_root:
 38587                           	opt stack 21
 38588                           
 38589                           ;incstack = 0
 38590                           ;__write_root@slot stored from wreg
 38591  00799A  6E30               	movwf	__write_root@slot,c
 38592                           
 38593                           ;fat16.c: 189: uint16_t root_sector;;fat16.c: 190: uint16_t offset;;fat16.c: 191: root_s
      +                          ector = (slot >> 4) + 34;
 38594  00799C  C030  F02B         	movff	__write_root@slot,??__write_root
 38595  0079A0  3A2B               	swapf	??__write_root,f,c
 38596  0079A2  0E0F               	movlw	15
 38597  0079A4  162B               	andwf	??__write_root,f,c
 38598  0079A6  0E22               	movlw	34
 38599  0079A8  242B               	addwf	??__write_root,w,c
 38600  0079AA  6E2C               	movwf	__write_root@root_sector,c
 38601  0079AC  6A2D               	clrf	__write_root@root_sector+1,c
 38602  0079AE  0E00               	movlw	0
 38603  0079B0  222D               	addwfc	__write_root@root_sector+1,f,c
 38604                           
 38605                           ;fat16.c: 192: offset = (slot & 0b1111);
 38606  0079B2  C030  F02B         	movff	__write_root@slot,??__write_root
 38607  0079B6  0E0F               	movlw	15
 38608  0079B8  162B               	andwf	??__write_root,f,c
 38609  0079BA  502B               	movf	??__write_root,w,c
 38610  0079BC  6E2E               	movwf	__write_root@offset,c
 38611  0079BE  6A2F               	clrf	__write_root@offset+1,c
 38612                           
 38613                           ;fat16.c: 193: offset <<= 5;
 38614  0079C0  0E05               	movlw	5
 38615  0079C2                     u8665:
 38616  0079C2  90D8               	bcf	status,0,c
 38617  0079C4  362E               	rlcf	__write_root@offset,f,c
 38618  0079C6  362F               	rlcf	__write_root@offset+1,f,c
 38619  0079C8  2EE8               	decfsz	wreg,f,c
 38620  0079CA  D7FB               	goto	u8665
 38621                           
 38622                           ;fat16.c: 194: flash_partial_write(root_sector, offset, 32, data);
 38623  0079CC  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 38624  0079D0  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 38625  0079D4  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 38626  0079D8  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 38627  0079DC  0E00               	movlw	0
 38628  0079DE  6E25               	movwf	flash_partial_write@length+1,c
 38629  0079E0  0E20               	movlw	32
 38630  0079E2  6E24               	movwf	flash_partial_write@length,c
 38631  0079E4  C029  F026         	movff	__write_root@data,flash_partial_write@data
 38632  0079E8  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 38633  0079EC  EC7A  F039         	call	_flash_partial_write	;wreg free
 38634  0079F0  0012               	return		;funcret
 38635  0079F2                     __end_of__write_root:
 38636                           	opt stack 0
 38637                           tosu	equ	0xFFF
 38638                           tosh	equ	0xFFE
 38639                           tosl	equ	0xFFD
 38640                           pclath	equ	0xFFA
 38641                           tblptru	equ	0xFF8
 38642                           tblptrh	equ	0xFF7
 38643                           tblptrl	equ	0xFF6
 38644                           tablat	equ	0xFF5
 38645                           prodh	equ	0xFF4
 38646                           prodl	equ	0xFF3
 38647                           intcon	equ	0xFF2
 38648                           intcon2	equ	0xFF1
 38649                           intcon3	equ	0xFF0
 38650                           indf0	equ	0xFEF
 38651                           postinc0	equ	0xFEE
 38652                           fsr0h	equ	0xFEA
 38653                           fsr0l	equ	0xFE9
 38654                           wreg	equ	0xFE8
 38655                           indf1	equ	0xFE7
 38656                           postdec1	equ	0xFE5
 38657                           plusw1	equ	0xFE3
 38658                           fsr1h	equ	0xFE2
 38659                           fsr1l	equ	0xFE1
 38660                           indf2	equ	0xFDF
 38661                           postinc2	equ	0xFDE
 38662                           postdec2	equ	0xFDD
 38663                           plusw2	equ	0xFDB
 38664                           fsr2h	equ	0xFDA
 38665                           fsr2l	equ	0xFD9
 38666                           status	equ	0xFD8
 38667                           
 38668 ;; *************** function __write_fat *****************
 38669 ;; Defined at:
 38670 ;;		line 163 in file "fat16.c"
 38671 ;; Parameters:    Size  Location     Type
 38672 ;;  cluster         2   40[COMRAM] unsigned int 
 38673 ;;  value           2   42[COMRAM] unsigned int 
 38674 ;; Auto vars:     Size  Location     Type
 38675 ;;  offset          2   46[COMRAM] unsigned int 
 38676 ;;  fat_sector      2   44[COMRAM] unsigned int 
 38677 ;; Return value:  Size  Location     Type
 38678 ;;                  1    wreg      void 
 38679 ;; Registers used:
 38680 ;;		wreg, status,2, status,0, cstack
 38681 ;; Tracked objects:
 38682 ;;		On entry : 0/0
 38683 ;;		On exit  : 0/0
 38684 ;;		Unchanged: 0/0
 38685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38687 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38689 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38690 ;;Total ram usage:        8 bytes
 38691 ;; Hardware stack levels used:    1
 38692 ;; Hardware stack levels required when called:    5
 38693 ;; This function calls:
 38694 ;;		_flash_partial_write
 38695 ;; This function is called by:
 38696 ;;		_fat_create_file
 38697 ;;		_fat_delete_file
 38698 ;;		_fat_append_to_file
 38699 ;;		_fat_resize_file
 38700 ;; This function uses a non-reentrant model
 38701 ;;
 38702                           
 38703                           	psect	text193
 38704  0080FC                     __ptext193:
 38705                           	opt stack 0
 38706  0080FC                     __write_fat:
 38707                           	opt stack 21
 38708                           
 38709                           ;fat16.c: 165: uint16_t fat_sector;;fat16.c: 166: uint16_t offset;;fat16.c: 167: fat_sec
      +                          tor = cluster>>8;
 38710                           
 38711                           ;incstack = 0
 38712  0080FC  502A               	movf	__write_fat@cluster+1,w,c
 38713  0080FE  6E2D               	movwf	__write_fat@fat_sector,c
 38714  008100  6A2E               	clrf	__write_fat@fat_sector+1,c
 38715                           
 38716                           ;fat16.c: 168: fat_sector += 2;
 38717  008102  0E02               	movlw	2
 38718  008104  262D               	addwf	__write_fat@fat_sector,f,c
 38719  008106  0E00               	movlw	0
 38720  008108  222E               	addwfc	__write_fat@fat_sector+1,f,c
 38721                           
 38722                           ;fat16.c: 169: offset = cluster & 0xFF;
 38723  00810A  5029               	movf	__write_fat@cluster,w,c
 38724  00810C  6E2F               	movwf	__write_fat@offset,c
 38725  00810E  6A30               	clrf	__write_fat@offset+1,c
 38726                           
 38727                           ;fat16.c: 170: offset <<= 1;
 38728  008110  90D8               	bcf	status,0,c
 38729  008112  362F               	rlcf	__write_fat@offset,f,c
 38730  008114  3630               	rlcf	__write_fat@offset+1,f,c
 38731                           
 38732                           ;fat16.c: 171: flash_partial_write(fat_sector, offset, 2, &value);
 38733  008116  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 38734  00811A  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 38735  00811E  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 38736  008122  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 38737  008126  0E00               	movlw	0
 38738  008128  6E25               	movwf	flash_partial_write@length+1,c
 38739  00812A  0E02               	movlw	2
 38740  00812C  6E24               	movwf	flash_partial_write@length,c
 38741  00812E  0E2B               	movlw	low __write_fat@value
 38742  008130  6E26               	movwf	flash_partial_write@data,c
 38743  008132  0E00               	movlw	high __write_fat@value
 38744  008134  6E27               	movwf	flash_partial_write@data+1,c
 38745  008136  EC7A  F039         	call	_flash_partial_write	;wreg free
 38746  00813A  0012               	return		;funcret
 38747  00813C                     __end_of__write_fat:
 38748                           	opt stack 0
 38749                           tosu	equ	0xFFF
 38750                           tosh	equ	0xFFE
 38751                           tosl	equ	0xFFD
 38752                           pclath	equ	0xFFA
 38753                           tblptru	equ	0xFF8
 38754                           tblptrh	equ	0xFF7
 38755                           tblptrl	equ	0xFF6
 38756                           tablat	equ	0xFF5
 38757                           prodh	equ	0xFF4
 38758                           prodl	equ	0xFF3
 38759                           intcon	equ	0xFF2
 38760                           intcon2	equ	0xFF1
 38761                           intcon3	equ	0xFF0
 38762                           indf0	equ	0xFEF
 38763                           postinc0	equ	0xFEE
 38764                           fsr0h	equ	0xFEA
 38765                           fsr0l	equ	0xFE9
 38766                           wreg	equ	0xFE8
 38767                           indf1	equ	0xFE7
 38768                           postdec1	equ	0xFE5
 38769                           plusw1	equ	0xFE3
 38770                           fsr1h	equ	0xFE2
 38771                           fsr1l	equ	0xFE1
 38772                           indf2	equ	0xFDF
 38773                           postinc2	equ	0xFDE
 38774                           postdec2	equ	0xFDD
 38775                           plusw2	equ	0xFDB
 38776                           fsr2h	equ	0xFDA
 38777                           fsr2l	equ	0xFD9
 38778                           status	equ	0xFD8
 38779                           
 38780 ;; *************** function _flash_partial_write *****************
 38781 ;; Defined at:
 38782 ;;		line 471 in file "flash.c"
 38783 ;; Parameters:    Size  Location     Type
 38784 ;;  page            2   31[COMRAM] unsigned int 
 38785 ;;  start           2   33[COMRAM] unsigned int 
 38786 ;;  length          2   35[COMRAM] unsigned int 
 38787 ;;  data            2   37[COMRAM] PTR unsigned char 
 38788 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 38789 ;;		 -> fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@val
      +ue(2), 
 38790 ;;		 -> ReceivedDataBuffer(64), 
 38791 ;; Auto vars:     Size  Location     Type
 38792 ;;  match           1   39[COMRAM] enum E6894
 38793 ;; Return value:  Size  Location     Type
 38794 ;;                  1    wreg      void 
 38795 ;; Registers used:
 38796 ;;		wreg, status,2, status,0, cstack
 38797 ;; Tracked objects:
 38798 ;;		On entry : 0/0
 38799 ;;		On exit  : 0/0
 38800 ;;		Unchanged: 0/0
 38801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38802 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38805 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38806 ;;Total ram usage:        9 bytes
 38807 ;; Hardware stack levels used:    1
 38808 ;; Hardware stack levels required when called:    4
 38809 ;; This function calls:
 38810 ;;		__flash_compare_page_to_buffer
 38811 ;;		__flash_copy_page_to_buffer
 38812 ;;		__flash_is_busy
 38813 ;;		__flash_write_page_from_buffer
 38814 ;;		__flash_write_to_buffer
 38815 ;;		_spi_set_configuration
 38816 ;; This function is called by:
 38817 ;;		__write_fat
 38818 ;;		__write_root
 38819 ;;		__delete_root
 38820 ;;		_fat_append_to_file
 38821 ;;		_fat_modify_file
 38822 ;;		__write_file_size
 38823 ;; This function uses a non-reentrant model
 38824 ;;
 38825                           
 38826                           	psect	text194
 38827  0072F4                     __ptext194:
 38828                           	opt stack 0
 38829  0072F4                     _flash_partial_write:
 38830                           	opt stack 21
 38831                           
 38832                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 38833                           
 38834                           ;incstack = 0
 38835  0072F4  0E00               	movlw	0
 38836  0072F6  EC5A  F024         	call	_spi_set_configuration
 38837  0072FA  EC94  F043         	call	__flash_is_busy	;wreg free
 38838  0072FE  0900               	iorlw	0
 38839  007300  A4D8               	btfss	status,2,c
 38840  007302  D7FB               	goto	l1845
 38841                           
 38842                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 38843  007304  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 38844  007308  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 38845  00730C  0E00               	movlw	0
 38846  00730E  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 38847  007310  EC25  F03D         	call	__flash_copy_page_to_buffer	;wreg free
 38848                           
 38849                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 38850  007314  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 38851  007318  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 38852  00731C  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 38853  007320  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 38854  007324  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 38855  007328  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 38856  00732C  0E00               	movlw	0
 38857  00732E  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 38858  007330  EC23  F03F         	call	__flash_write_to_buffer	;wreg free
 38859                           
 38860                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 38861  007334  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 38862  007338  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 38863  00733C  0E00               	movlw	0
 38864  00733E  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 38865  007340  EC1C  F038         	call	__flash_compare_page_to_buffer	;wreg free
 38866  007344  6E28               	movwf	flash_partial_write@match,c
 38867                           
 38868                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 38869  007346  0428               	decf	flash_partial_write@match,w,c
 38870  007348  A4D8               	btfss	status,2,c
 38871  00734A  D008               	goto	l1847
 38872                           
 38873                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 38874  00734C  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 38875  007350  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 38876  007354  0E00               	movlw	0
 38877  007356  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 38878  007358  ECF9  F03C         	call	__flash_write_page_from_buffer	;wreg free
 38879  00735C                     l1847:
 38880                           
 38881                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38882  00735C  0E01               	movlw	1
 38883  00735E  EC5A  F024         	call	_spi_set_configuration
 38884  007362  0012               	return		;funcret
 38885  007364                     __end_of_flash_partial_write:
 38886                           	opt stack 0
 38887                           tosu	equ	0xFFF
 38888                           tosh	equ	0xFFE
 38889                           tosl	equ	0xFFD
 38890                           pclath	equ	0xFFA
 38891                           tblptru	equ	0xFF8
 38892                           tblptrh	equ	0xFF7
 38893                           tblptrl	equ	0xFF6
 38894                           tablat	equ	0xFF5
 38895                           prodh	equ	0xFF4
 38896                           prodl	equ	0xFF3
 38897                           intcon	equ	0xFF2
 38898                           intcon2	equ	0xFF1
 38899                           intcon3	equ	0xFF0
 38900                           indf0	equ	0xFEF
 38901                           postinc0	equ	0xFEE
 38902                           fsr0h	equ	0xFEA
 38903                           fsr0l	equ	0xFE9
 38904                           wreg	equ	0xFE8
 38905                           indf1	equ	0xFE7
 38906                           postdec1	equ	0xFE5
 38907                           plusw1	equ	0xFE3
 38908                           fsr1h	equ	0xFE2
 38909                           fsr1l	equ	0xFE1
 38910                           indf2	equ	0xFDF
 38911                           postinc2	equ	0xFDE
 38912                           postdec2	equ	0xFDD
 38913                           plusw2	equ	0xFDB
 38914                           fsr2h	equ	0xFDA
 38915                           fsr2l	equ	0xFD9
 38916                           status	equ	0xFD8
 38917                           
 38918 ;; *************** function __flash_write_to_buffer *****************
 38919 ;; Defined at:
 38920 ;;		line 232 in file "flash.c"
 38921 ;; Parameters:    Size  Location     Type
 38922 ;;  start           2   19[COMRAM] unsigned int 
 38923 ;;  data            2   21[COMRAM] PTR unsigned char 
 38924 ;;		 -> _spi_external_rx_buffer(64), buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), 
 38925 ;;		 -> fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@del
      +eted_value(1), 
 38926 ;;		 -> _write_fat@value(2), ReceivedDataBuffer(64), msd_buffer(512), 
 38927 ;;  data_length     2   23[COMRAM] unsigned int 
 38928 ;;  buffer          1   25[COMRAM] enum E6890
 38929 ;; Auto vars:     Size  Location     Type
 38930 ;;  command         4   26[COMRAM] unsigned char [4]
 38931 ;; Return value:  Size  Location     Type
 38932 ;;                  1    wreg      void 
 38933 ;; Registers used:
 38934 ;;		wreg, status,2, status,0, cstack
 38935 ;; Tracked objects:
 38936 ;;		On entry : 0/0
 38937 ;;		On exit  : 0/0
 38938 ;;		Unchanged: 0/0
 38939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38940 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38941 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38943 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38944 ;;Total ram usage:       11 bytes
 38945 ;; Hardware stack levels used:    1
 38946 ;; Hardware stack levels required when called:    3
 38947 ;; This function calls:
 38948 ;;		__flash_is_busy
 38949 ;;		_spi_tx_tx
 38950 ;; This function is called by:
 38951 ;;		_flash_page_write
 38952 ;;		_flash_partial_write
 38953 ;; This function uses a non-reentrant model
 38954 ;;
 38955                           
 38956                           	psect	text195
 38957  007E46                     __ptext195:
 38958                           	opt stack 0
 38959  007E46                     __flash_write_to_buffer:
 38960                           	opt stack 23
 38961                           
 38962                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 38963                           
 38964                           ;incstack = 0
 38965  007E46  EC94  F043         	call	__flash_is_busy	;wreg free
 38966  007E4A  0900               	iorlw	0
 38967  007E4C  A4D8               	btfss	status,2,c
 38968  007E4E  D7FB               	goto	__flash_write_to_buffer
 38969                           
 38970                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 38971  007E50  501A               	movf	__flash_write_to_buffer@buffer,w,c
 38972  007E52  A4D8               	btfss	status,2,c
 38973  007E54  D002               	goto	l1786
 38974                           
 38975                           ;flash.c: 241: command[0] = 0x84;
 38976  007E56  0E84               	movlw	132
 38977  007E58  6E1B               	movwf	__flash_write_to_buffer@command,c
 38978  007E5A                     l1786:
 38979                           
 38980                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 38981  007E5A  041A               	decf	__flash_write_to_buffer@buffer,w,c
 38982  007E5C  A4D8               	btfss	status,2,c
 38983  007E5E  D002               	goto	l1787
 38984                           
 38985                           ;flash.c: 243: command[0] = 0x87;
 38986  007E60  0E87               	movlw	135
 38987  007E62  6E1B               	movwf	__flash_write_to_buffer@command,c
 38988  007E64                     l1787:
 38989                           
 38990                           ;flash.c: 245: command[1] = 0x00;
 38991  007E64  0E00               	movlw	0
 38992  007E66  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 38993                           
 38994                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 38995  007E68  5015               	movf	__flash_write_to_buffer@start+1,w,c
 38996  007E6A  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 38997                           
 38998                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 38999  007E6C  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 39000                           
 39001                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 39002  007E70  0E1B               	movlw	low __flash_write_to_buffer@command
 39003  007E72  6E01               	movwf	spi_tx_tx@command,c
 39004  007E74  0E00               	movlw	high __flash_write_to_buffer@command
 39005  007E76  6E02               	movwf	spi_tx_tx@command+1,c
 39006  007E78  0E00               	movlw	0
 39007  007E7A  6E04               	movwf	spi_tx_tx@command_length+1,c
 39008  007E7C  0E04               	movlw	4
 39009  007E7E  6E03               	movwf	spi_tx_tx@command_length,c
 39010  007E80  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 39011  007E84  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 39012  007E88  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 39013  007E8C  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 39014  007E90  EC51  F036         	call	_spi_tx_tx	;wreg free
 39015  007E94  0012               	return		;funcret
 39016  007E96                     __end_of__flash_write_to_buffer:
 39017                           	opt stack 0
 39018                           tosu	equ	0xFFF
 39019                           tosh	equ	0xFFE
 39020                           tosl	equ	0xFFD
 39021                           pclath	equ	0xFFA
 39022                           tblptru	equ	0xFF8
 39023                           tblptrh	equ	0xFF7
 39024                           tblptrl	equ	0xFF6
 39025                           tablat	equ	0xFF5
 39026                           prodh	equ	0xFF4
 39027                           prodl	equ	0xFF3
 39028                           intcon	equ	0xFF2
 39029                           intcon2	equ	0xFF1
 39030                           intcon3	equ	0xFF0
 39031                           indf0	equ	0xFEF
 39032                           postinc0	equ	0xFEE
 39033                           fsr0h	equ	0xFEA
 39034                           fsr0l	equ	0xFE9
 39035                           wreg	equ	0xFE8
 39036                           indf1	equ	0xFE7
 39037                           postdec1	equ	0xFE5
 39038                           plusw1	equ	0xFE3
 39039                           fsr1h	equ	0xFE2
 39040                           fsr1l	equ	0xFE1
 39041                           indf2	equ	0xFDF
 39042                           postinc2	equ	0xFDE
 39043                           postdec2	equ	0xFDD
 39044                           plusw2	equ	0xFDB
 39045                           fsr2h	equ	0xFDA
 39046                           fsr2l	equ	0xFD9
 39047                           status	equ	0xFD8
 39048                           
 39049 ;; *************** function _spi_tx_tx *****************
 39050 ;; Defined at:
 39051 ;;		line 386 in file "spi.c"
 39052 ;; Parameters:    Size  Location     Type
 39053 ;;  command         2    0[COMRAM] PTR unsigned char 
 39054 ;;		 -> _flash_write_to_buffer@command(4), 
 39055 ;;  command_leng    2    2[COMRAM] unsigned int 
 39056 ;;  data            2    4[COMRAM] PTR unsigned char 
 39057 ;;		 -> _spi_external_rx_buffer(64), buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), 
 39058 ;;		 -> fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file_size(4), _delete_root@del
      +eted_value(1), 
 39059 ;;		 -> _write_fat@value(2), ReceivedDataBuffer(64), msd_buffer(512), 
 39060 ;;  data_length     2    6[COMRAM] unsigned int 
 39061 ;; Auto vars:     Size  Location     Type
 39062 ;;		None
 39063 ;; Return value:  Size  Location     Type
 39064 ;;                  1    wreg      void 
 39065 ;; Registers used:
 39066 ;;		wreg, status,2, status,0
 39067 ;; Tracked objects:
 39068 ;;		On entry : 0/0
 39069 ;;		On exit  : 0/0
 39070 ;;		Unchanged: 0/0
 39071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39075 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39076 ;;Total ram usage:       12 bytes
 39077 ;; Hardware stack levels used:    1
 39078 ;; This function calls:
 39079 ;;		Nothing
 39080 ;; This function is called by:
 39081 ;;		__flash_write_to_buffer
 39082 ;; This function uses a non-reentrant model
 39083 ;;
 39084                           
 39085                           	psect	text196
 39086  006CA2                     __ptext196:
 39087                           	opt stack 0
 39088  006CA2                     _spi_tx_tx:
 39089                           	opt stack 25
 39090                           
 39091                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 39092                           
 39093                           ;incstack = 0
 39094  006CA2  9E88               	bcf	3976,7,c	;volatile
 39095                           
 39096                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 39097  006CA4  9C88               	bcf	3976,6,c	;volatile
 39098                           
 39099                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 39100  006CA6  8A88               	bsf	3976,5,c	;volatile
 39101                           
 39102                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 39103  006CA8  9888               	bcf	3976,4,c	;volatile
 39104                           
 39105                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 39106  006CAA  9688               	bcf	3976,3,c	;volatile
 39107                           
 39108                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 39109  006CAC  8488               	bsf	3976,2,c	;volatile
 39110                           
 39111                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 39112  006CAE  9288               	bcf	3976,1,c	;volatile
 39113                           
 39114                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 39115  006CB0  9886               	bcf	3974,4,c	;volatile
 39116  006CB2  9A86               	bcf	3974,5,c	;volatile
 39117  006CB4  9C86               	bcf	3974,6,c	;volatile
 39118  006CB6  9E86               	bcf	3974,7,c	;volatile
 39119                           
 39120                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 39121  006CB8  9086               	bcf	3974,0,c	;volatile
 39122  006CBA  9286               	bcf	3974,1,c	;volatile
 39123  006CBC  9486               	bcf	3974,2,c	;volatile
 39124  006CBE  9686               	bcf	3974,3,c	;volatile
 39125                           
 39126                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39127  006CC0  5002               	movf	spi_tx_tx@command+1,w,c
 39128  006CC2  6E6A               	movwf	3946,c	;volatile
 39129                           
 39130                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39131  006CC4  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 39132                           
 39133                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39134  006CC8  0EFF               	movlw	255
 39135  006CCA  6E09               	movwf	??_spi_tx_tx& (0+255),c
 39136  006CCC  0EFF               	movlw	255
 39137  006CCE  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 39138  006CD0  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 39139  006CD4  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 39140  006CD8  5009               	movf	??_spi_tx_tx,w,c
 39141  006CDA  260B               	addwf	??_spi_tx_tx+2,f,c
 39142  006CDC  500A               	movf	??_spi_tx_tx+1,w,c
 39143  006CDE  220C               	addwfc	??_spi_tx_tx+3,f,c
 39144  006CE0  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 39145  006CE4  6A0C               	clrf	??_spi_tx_tx+3,c
 39146  006CE6  500B               	movf	??_spi_tx_tx+2,w,c
 39147  006CE8  6E66               	movwf	3942,c	;volatile
 39148                           
 39149                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39150  006CEA  0403               	decf	spi_tx_tx@command_length,w,c
 39151  006CEC  6E67               	movwf	3943,c	;volatile
 39152                           
 39153                           ;spi.c: 414: LATDbits.LD7 = 0;
 39154  006CEE  9E8C               	bcf	3980,7,c	;volatile
 39155                           
 39156                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 39157  006CF0  8088               	bsf	3976,0,c	;volatile
 39158  006CF2  B088               	btfsc	3976,0,c	;volatile
 39159  006CF4  D7FE               	goto	l2897
 39160                           
 39161                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39162  006CF6  5006               	movf	spi_tx_tx@data+1,w,c
 39163  006CF8  6E6A               	movwf	3946,c	;volatile
 39164                           
 39165                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39166  006CFA  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 39167                           
 39168                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39169  006CFE  0EFF               	movlw	255
 39170  006D00  6E09               	movwf	??_spi_tx_tx& (0+255),c
 39171  006D02  0EFF               	movlw	255
 39172  006D04  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 39173  006D06  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 39174  006D0A  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 39175  006D0E  5009               	movf	??_spi_tx_tx,w,c
 39176  006D10  260B               	addwf	??_spi_tx_tx+2,f,c
 39177  006D12  500A               	movf	??_spi_tx_tx+1,w,c
 39178  006D14  220C               	addwfc	??_spi_tx_tx+3,f,c
 39179  006D16  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 39180  006D1A  6A0C               	clrf	??_spi_tx_tx+3,c
 39181  006D1C  500B               	movf	??_spi_tx_tx+2,w,c
 39182  006D1E  6E66               	movwf	3942,c	;volatile
 39183                           
 39184                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39185  006D20  0407               	decf	spi_tx_tx@data_length,w,c
 39186  006D22  6E67               	movwf	3943,c	;volatile
 39187                           
 39188                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 39189  006D24  8088               	bsf	3976,0,c	;volatile
 39190  006D26  B088               	btfsc	3976,0,c	;volatile
 39191  006D28  D7FE               	goto	l2900
 39192                           
 39193                           ;spi.c: 433: LATDbits.LD7 = 1;
 39194  006D2A  8E8C               	bsf	3980,7,c	;volatile
 39195  006D2C  0012               	return		;funcret
 39196  006D2E                     __end_of_spi_tx_tx:
 39197                           	opt stack 0
 39198                           tosu	equ	0xFFF
 39199                           tosh	equ	0xFFE
 39200                           tosl	equ	0xFFD
 39201                           pclath	equ	0xFFA
 39202                           tblptru	equ	0xFF8
 39203                           tblptrh	equ	0xFF7
 39204                           tblptrl	equ	0xFF6
 39205                           tablat	equ	0xFF5
 39206                           prodh	equ	0xFF4
 39207                           prodl	equ	0xFF3
 39208                           intcon	equ	0xFF2
 39209                           intcon2	equ	0xFF1
 39210                           intcon3	equ	0xFF0
 39211                           indf0	equ	0xFEF
 39212                           postinc0	equ	0xFEE
 39213                           fsr0h	equ	0xFEA
 39214                           fsr0l	equ	0xFE9
 39215                           wreg	equ	0xFE8
 39216                           indf1	equ	0xFE7
 39217                           postdec1	equ	0xFE5
 39218                           plusw1	equ	0xFE3
 39219                           fsr1h	equ	0xFE2
 39220                           fsr1l	equ	0xFE1
 39221                           indf2	equ	0xFDF
 39222                           postinc2	equ	0xFDE
 39223                           postdec2	equ	0xFDD
 39224                           plusw2	equ	0xFDB
 39225                           fsr2h	equ	0xFDA
 39226                           fsr2l	equ	0xFD9
 39227                           status	equ	0xFD8
 39228                           
 39229 ;; *************** function __flash_write_page_from_buffer *****************
 39230 ;; Defined at:
 39231 ;;		line 254 in file "flash.c"
 39232 ;; Parameters:    Size  Location     Type
 39233 ;;  page            2   19[COMRAM] unsigned int 
 39234 ;;  buffer          1   21[COMRAM] enum E6890
 39235 ;; Auto vars:     Size  Location     Type
 39236 ;;  command         4   25[COMRAM] unsigned char [4]
 39237 ;; Return value:  Size  Location     Type
 39238 ;;                  1    wreg      void 
 39239 ;; Registers used:
 39240 ;;		wreg, status,2, status,0, cstack
 39241 ;; Tracked objects:
 39242 ;;		On entry : 0/0
 39243 ;;		On exit  : 0/0
 39244 ;;		Unchanged: 0/0
 39245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39246 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39247 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39248 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39249 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39250 ;;Total ram usage:       10 bytes
 39251 ;; Hardware stack levels used:    1
 39252 ;; Hardware stack levels required when called:    3
 39253 ;; This function calls:
 39254 ;;		__flash_is_busy
 39255 ;;		_spi_tx
 39256 ;; This function is called by:
 39257 ;;		_flash_page_write
 39258 ;;		_flash_partial_write
 39259 ;; This function uses a non-reentrant model
 39260 ;;
 39261                           
 39262                           	psect	text197
 39263  0079F2                     __ptext197:
 39264                           	opt stack 0
 39265  0079F2                     __flash_write_page_from_buffer:
 39266                           	opt stack 23
 39267                           
 39268                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 39269                           
 39270                           ;incstack = 0
 39271  0079F2  EC94  F043         	call	__flash_is_busy	;wreg free
 39272  0079F6  0900               	iorlw	0
 39273  0079F8  A4D8               	btfss	status,2,c
 39274  0079FA  D7FB               	goto	__flash_write_page_from_buffer
 39275                           
 39276                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 39277  0079FC  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 39278  0079FE  A4D8               	btfss	status,2,c
 39279  007A00  D002               	goto	l1794
 39280                           
 39281                           ;flash.c: 263: command[0] = 0x83;
 39282  007A02  0E83               	movlw	131
 39283  007A04  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 39284  007A06                     l1794:
 39285                           
 39286                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 39287  007A06  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 39288  007A08  A4D8               	btfss	status,2,c
 39289  007A0A  D002               	goto	l1795
 39290                           
 39291                           ;flash.c: 265: command[0] = 0x86;
 39292  007A0C  0E86               	movlw	134
 39293  007A0E  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 39294  007A10                     l1795:
 39295                           
 39296                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39297  007A10  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 39298  007A14  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 39299  007A18  0E07               	movlw	7
 39300  007A1A  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 39301  007A1C                     u6845:
 39302  007A1C  90D8               	bcf	status,0,c
 39303  007A1E  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 39304  007A20  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 39305  007A22  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 39306  007A24  D7FB               	goto	u6845
 39307  007A26  5017               	movf	??__flash_write_page_from_buffer,w,c
 39308  007A28  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 39309                           
 39310                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 39311  007A2A  5014               	movf	__flash_write_page_from_buffer@page,w,c
 39312  007A2C  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 39313  007A2E  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 39314                           
 39315                           ;flash.c: 269: command[3] = 0x00;
 39316  007A30  0E00               	movlw	0
 39317  007A32  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 39318                           
 39319                           ;flash.c: 272: spi_tx(command, 4);
 39320  007A34  0E1A               	movlw	low __flash_write_page_from_buffer@command
 39321  007A36  6E01               	movwf	spi_tx@data,c
 39322  007A38  0E00               	movlw	high __flash_write_page_from_buffer@command
 39323  007A3A  6E02               	movwf	spi_tx@data+1,c
 39324  007A3C  0E00               	movlw	0
 39325  007A3E  6E04               	movwf	spi_tx@length+1,c
 39326  007A40  0E04               	movlw	4
 39327  007A42  6E03               	movwf	spi_tx@length,c
 39328  007A44  EC51  F03D         	call	_spi_tx	;wreg free
 39329  007A48  0012               	return		;funcret
 39330  007A4A                     __end_of__flash_write_page_from_buffer:
 39331                           	opt stack 0
 39332                           tosu	equ	0xFFF
 39333                           tosh	equ	0xFFE
 39334                           tosl	equ	0xFFD
 39335                           pclath	equ	0xFFA
 39336                           tblptru	equ	0xFF8
 39337                           tblptrh	equ	0xFF7
 39338                           tblptrl	equ	0xFF6
 39339                           tablat	equ	0xFF5
 39340                           prodh	equ	0xFF4
 39341                           prodl	equ	0xFF3
 39342                           intcon	equ	0xFF2
 39343                           intcon2	equ	0xFF1
 39344                           intcon3	equ	0xFF0
 39345                           indf0	equ	0xFEF
 39346                           postinc0	equ	0xFEE
 39347                           fsr0h	equ	0xFEA
 39348                           fsr0l	equ	0xFE9
 39349                           wreg	equ	0xFE8
 39350                           indf1	equ	0xFE7
 39351                           postdec1	equ	0xFE5
 39352                           plusw1	equ	0xFE3
 39353                           fsr1h	equ	0xFE2
 39354                           fsr1l	equ	0xFE1
 39355                           indf2	equ	0xFDF
 39356                           postinc2	equ	0xFDE
 39357                           postdec2	equ	0xFDD
 39358                           plusw2	equ	0xFDB
 39359                           fsr2h	equ	0xFDA
 39360                           fsr2l	equ	0xFD9
 39361                           status	equ	0xFD8
 39362                           
 39363 ;; *************** function __flash_copy_page_to_buffer *****************
 39364 ;; Defined at:
 39365 ;;		line 150 in file "flash.c"
 39366 ;; Parameters:    Size  Location     Type
 39367 ;;  page            2   19[COMRAM] unsigned int 
 39368 ;;  buffer          1   21[COMRAM] enum E6890
 39369 ;; Auto vars:     Size  Location     Type
 39370 ;;  command         4   25[COMRAM] unsigned char [4]
 39371 ;; Return value:  Size  Location     Type
 39372 ;;                  1    wreg      void 
 39373 ;; Registers used:
 39374 ;;		wreg, status,2, status,0, cstack
 39375 ;; Tracked objects:
 39376 ;;		On entry : 0/0
 39377 ;;		On exit  : 0/0
 39378 ;;		Unchanged: 0/0
 39379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39380 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39382 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39383 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39384 ;;Total ram usage:       10 bytes
 39385 ;; Hardware stack levels used:    1
 39386 ;; Hardware stack levels required when called:    3
 39387 ;; This function calls:
 39388 ;;		__flash_is_busy
 39389 ;;		_spi_tx
 39390 ;; This function is called by:
 39391 ;;		_flash_partial_write
 39392 ;; This function uses a non-reentrant model
 39393 ;;
 39394                           
 39395                           	psect	text198
 39396  007A4A                     __ptext198:
 39397                           	opt stack 0
 39398  007A4A                     __flash_copy_page_to_buffer:
 39399                           	opt stack 21
 39400                           
 39401                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 39402                           
 39403                           ;incstack = 0
 39404  007A4A  EC94  F043         	call	__flash_is_busy	;wreg free
 39405  007A4E  0900               	iorlw	0
 39406  007A50  A4D8               	btfss	status,2,c
 39407  007A52  D7FB               	goto	__flash_copy_page_to_buffer
 39408                           
 39409                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 39410  007A54  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 39411  007A56  A4D8               	btfss	status,2,c
 39412  007A58  D002               	goto	l1759
 39413                           
 39414                           ;flash.c: 159: command[0] = 0x53;
 39415  007A5A  0E53               	movlw	83
 39416  007A5C  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 39417  007A5E                     l1759:
 39418                           
 39419                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 39420  007A5E  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 39421  007A60  A4D8               	btfss	status,2,c
 39422  007A62  D002               	goto	l1760
 39423                           
 39424                           ;flash.c: 161: command[0] = 0x55;
 39425  007A64  0E55               	movlw	85
 39426  007A66  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 39427  007A68                     l1760:
 39428                           
 39429                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39430  007A68  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 39431  007A6C  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 39432  007A70  0E07               	movlw	7
 39433  007A72  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 39434  007A74                     u7105:
 39435  007A74  90D8               	bcf	status,0,c
 39436  007A76  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 39437  007A78  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 39438  007A7A  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 39439  007A7C  D7FB               	goto	u7105
 39440  007A7E  5017               	movf	??__flash_copy_page_to_buffer,w,c
 39441  007A80  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 39442                           
 39443                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 39444  007A82  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 39445  007A84  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 39446  007A86  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 39447                           
 39448                           ;flash.c: 165: command[3] = 0x00;
 39449  007A88  0E00               	movlw	0
 39450  007A8A  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 39451                           
 39452                           ;flash.c: 168: spi_tx(command, 4);
 39453  007A8C  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 39454  007A8E  6E01               	movwf	spi_tx@data,c
 39455  007A90  0E00               	movlw	high __flash_copy_page_to_buffer@command
 39456  007A92  6E02               	movwf	spi_tx@data+1,c
 39457  007A94  0E00               	movlw	0
 39458  007A96  6E04               	movwf	spi_tx@length+1,c
 39459  007A98  0E04               	movlw	4
 39460  007A9A  6E03               	movwf	spi_tx@length,c
 39461  007A9C  EC51  F03D         	call	_spi_tx	;wreg free
 39462  007AA0  0012               	return		;funcret
 39463  007AA2                     __end_of__flash_copy_page_to_buffer:
 39464                           	opt stack 0
 39465                           tosu	equ	0xFFF
 39466                           tosh	equ	0xFFE
 39467                           tosl	equ	0xFFD
 39468                           pclath	equ	0xFFA
 39469                           tblptru	equ	0xFF8
 39470                           tblptrh	equ	0xFF7
 39471                           tblptrl	equ	0xFF6
 39472                           tablat	equ	0xFF5
 39473                           prodh	equ	0xFF4
 39474                           prodl	equ	0xFF3
 39475                           intcon	equ	0xFF2
 39476                           intcon2	equ	0xFF1
 39477                           intcon3	equ	0xFF0
 39478                           indf0	equ	0xFEF
 39479                           postinc0	equ	0xFEE
 39480                           fsr0h	equ	0xFEA
 39481                           fsr0l	equ	0xFE9
 39482                           wreg	equ	0xFE8
 39483                           indf1	equ	0xFE7
 39484                           postdec1	equ	0xFE5
 39485                           plusw1	equ	0xFE3
 39486                           fsr1h	equ	0xFE2
 39487                           fsr1l	equ	0xFE1
 39488                           indf2	equ	0xFDF
 39489                           postinc2	equ	0xFDE
 39490                           postdec2	equ	0xFDD
 39491                           plusw2	equ	0xFDB
 39492                           fsr2h	equ	0xFDA
 39493                           fsr2l	equ	0xFD9
 39494                           status	equ	0xFD8
 39495                           
 39496 ;; *************** function __flash_compare_page_to_buffer *****************
 39497 ;; Defined at:
 39498 ;;		line 172 in file "flash.c"
 39499 ;; Parameters:    Size  Location     Type
 39500 ;;  page            2   19[COMRAM] unsigned int 
 39501 ;;  buffer          1   21[COMRAM] enum E6890
 39502 ;; Auto vars:     Size  Location     Type
 39503 ;;  command         4   27[COMRAM] unsigned char [4]
 39504 ;;  status          2   25[COMRAM] unsigned int 
 39505 ;; Return value:  Size  Location     Type
 39506 ;;                  1    wreg      enum E6894
 39507 ;; Registers used:
 39508 ;;		wreg, status,2, status,0, cstack
 39509 ;; Tracked objects:
 39510 ;;		On entry : 0/0
 39511 ;;		On exit  : 0/0
 39512 ;;		Unchanged: 0/0
 39513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39515 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39516 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39518 ;;Total ram usage:       12 bytes
 39519 ;; Hardware stack levels used:    1
 39520 ;; Hardware stack levels required when called:    3
 39521 ;; This function calls:
 39522 ;;		__flash_get_status
 39523 ;;		__flash_is_busy
 39524 ;;		_spi_tx
 39525 ;; This function is called by:
 39526 ;;		_flash_page_write
 39527 ;;		_flash_partial_write
 39528 ;; This function uses a non-reentrant model
 39529 ;;
 39530                           
 39531                           	psect	text199
 39532  007038                     __ptext199:
 39533                           	opt stack 0
 39534  007038                     __flash_compare_page_to_buffer:
 39535                           	opt stack 23
 39536                           
 39537                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 39538                           
 39539                           ;incstack = 0
 39540  007038  EC94  F043         	call	__flash_is_busy	;wreg free
 39541  00703C  0900               	iorlw	0
 39542  00703E  A4D8               	btfss	status,2,c
 39543  007040  D7FB               	goto	__flash_compare_page_to_buffer
 39544                           
 39545                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 39546  007042  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 39547  007044  A4D8               	btfss	status,2,c
 39548  007046  D002               	goto	l1767
 39549                           
 39550                           ;flash.c: 182: command[0] = 0x60;
 39551  007048  0E60               	movlw	96
 39552  00704A  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 39553  00704C                     l1767:
 39554                           
 39555                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 39556  00704C  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 39557  00704E  A4D8               	btfss	status,2,c
 39558  007050  D002               	goto	l1768
 39559                           
 39560                           ;flash.c: 184: command[0] = 0x60;
 39561  007052  0E60               	movlw	96
 39562  007054  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 39563  007056                     l1768:
 39564                           
 39565                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 39566  007056  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 39567  00705A  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 39568  00705E  0E07               	movlw	7
 39569  007060  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 39570  007062                     u6755:
 39571  007062  90D8               	bcf	status,0,c
 39572  007064  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 39573  007066  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 39574  007068  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 39575  00706A  D7FB               	goto	u6755
 39576  00706C  5017               	movf	??__flash_compare_page_to_buffer,w,c
 39577  00706E  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 39578                           
 39579                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 39580  007070  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 39581  007072  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 39582  007074  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 39583                           
 39584                           ;flash.c: 188: command[3] = 0x00;
 39585  007076  0E00               	movlw	0
 39586  007078  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 39587                           
 39588                           ;flash.c: 191: spi_tx(command, 4);
 39589  00707A  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 39590  00707C  6E01               	movwf	spi_tx@data,c
 39591  00707E  0E00               	movlw	high __flash_compare_page_to_buffer@command
 39592  007080  6E02               	movwf	spi_tx@data+1,c
 39593  007082  0E00               	movlw	0
 39594  007084  6E04               	movwf	spi_tx@length+1,c
 39595  007086  0E04               	movlw	4
 39596  007088  6E03               	movwf	spi_tx@length,c
 39597  00708A  EC51  F03D         	call	_spi_tx	;wreg free
 39598  00708E  EC94  F043         	call	__flash_is_busy	;wreg free
 39599  007092  0900               	iorlw	0
 39600  007094  A4D8               	btfss	status,2,c
 39601  007096  D7FB               	goto	l1770
 39602                           
 39603                           ;flash.c: 197: status = _flash_get_status();
 39604  007098  EC15  F042         	call	__flash_get_status	;wreg free
 39605  00709C  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 39606  0070A0  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 39607                           
 39608                           ;flash.c: 200: if(status & 0b0000000001000000)
 39609  0070A4  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 39610  0070A6  D002               	goto	l1772
 39611                           
 39612                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 39613  0070A8  0E01               	movlw	1
 39614                           
 39615                           ;flash.c: 204: }
 39616  0070AA  0012               	return	
 39617  0070AC                     l1772:
 39618                           
 39619                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 39620  0070AC  0E00               	movlw	0
 39621  0070AE  0012               	return	
 39622  0070B0                     __end_of__flash_compare_page_to_buffer:
 39623                           	opt stack 0
 39624                           tosu	equ	0xFFF
 39625                           tosh	equ	0xFFE
 39626                           tosl	equ	0xFFD
 39627                           pclath	equ	0xFFA
 39628                           tblptru	equ	0xFF8
 39629                           tblptrh	equ	0xFF7
 39630                           tblptrl	equ	0xFF6
 39631                           tablat	equ	0xFF5
 39632                           prodh	equ	0xFF4
 39633                           prodl	equ	0xFF3
 39634                           intcon	equ	0xFF2
 39635                           intcon2	equ	0xFF1
 39636                           intcon3	equ	0xFF0
 39637                           indf0	equ	0xFEF
 39638                           postinc0	equ	0xFEE
 39639                           fsr0h	equ	0xFEA
 39640                           fsr0l	equ	0xFE9
 39641                           wreg	equ	0xFE8
 39642                           indf1	equ	0xFE7
 39643                           postdec1	equ	0xFE5
 39644                           plusw1	equ	0xFE3
 39645                           fsr1h	equ	0xFE2
 39646                           fsr1l	equ	0xFE1
 39647                           indf2	equ	0xFDF
 39648                           postinc2	equ	0xFDE
 39649                           postdec2	equ	0xFDD
 39650                           plusw2	equ	0xFDB
 39651                           fsr2h	equ	0xFDA
 39652                           fsr2l	equ	0xFD9
 39653                           status	equ	0xFD8
 39654                           
 39655 ;; *************** function __update_modified_time *****************
 39656 ;; Defined at:
 39657 ;;		line 53 in file "fat16.c"
 39658 ;; Parameters:    Size  Location     Type
 39659 ;;  root            2    4[COMRAM] PTR struct .
 39660 ;;		 -> fat_append_to_file@root(32), 
 39661 ;; Auto vars:     Size  Location     Type
 39662 ;;		None
 39663 ;; Return value:  Size  Location     Type
 39664 ;;                  1    wreg      void 
 39665 ;; Registers used:
 39666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39667 ;; Tracked objects:
 39668 ;;		On entry : 0/0
 39669 ;;		On exit  : 0/0
 39670 ;;		Unchanged: 0/0
 39671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39676 ;;Total ram usage:        2 bytes
 39677 ;; Hardware stack levels used:    1
 39678 ;; Hardware stack levels required when called:    1
 39679 ;; This function calls:
 39680 ;;		__get_date
 39681 ;;		__get_time
 39682 ;; This function is called by:
 39683 ;;		_fat_append_to_file
 39684 ;; This function uses a non-reentrant model
 39685 ;;
 39686                           
 39687                           	psect	text200
 39688  0083C6                     __ptext200:
 39689                           	opt stack 0
 39690  0083C6                     __update_modified_time:
 39691                           	opt stack 25
 39692                           
 39693                           ;fat16.c: 55: root->modifiedDate = _get_date();
 39694                           
 39695                           ;incstack = 0
 39696  0083C6  ECC0  F044         	call	__get_date	;wreg free
 39697  0083CA  EE20 F018          	lfsr	2,24
 39698  0083CE  5005               	movf	__update_modified_time@root,w,c
 39699  0083D0  26D9               	addwf	fsr2l,f,c
 39700  0083D2  5006               	movf	__update_modified_time@root+1,w,c
 39701  0083D4  22DA               	addwfc	fsr2h,f,c
 39702  0083D6  C001  FFDE         	movff	?__get_date,postinc2
 39703  0083DA  C002  FFDD         	movff	?__get_date+1,postdec2
 39704                           
 39705                           ;fat16.c: 56: root->modifiedTime = _get_time();
 39706  0083DE  ECBB  F044         	call	__get_time	;wreg free
 39707  0083E2  EE20 F016          	lfsr	2,22
 39708  0083E6  5005               	movf	__update_modified_time@root,w,c
 39709  0083E8  26D9               	addwf	fsr2l,f,c
 39710  0083EA  5006               	movf	__update_modified_time@root+1,w,c
 39711  0083EC  22DA               	addwfc	fsr2h,f,c
 39712  0083EE  C001  FFDE         	movff	?__get_time,postinc2
 39713  0083F2  C002  FFDD         	movff	?__get_time+1,postdec2
 39714  0083F6  0012               	return		;funcret
 39715  0083F8                     __end_of__update_modified_time:
 39716                           	opt stack 0
 39717                           tosu	equ	0xFFF
 39718                           tosh	equ	0xFFE
 39719                           tosl	equ	0xFFD
 39720                           pclath	equ	0xFFA
 39721                           tblptru	equ	0xFF8
 39722                           tblptrh	equ	0xFF7
 39723                           tblptrl	equ	0xFF6
 39724                           tablat	equ	0xFF5
 39725                           prodh	equ	0xFF4
 39726                           prodl	equ	0xFF3
 39727                           intcon	equ	0xFF2
 39728                           intcon2	equ	0xFF1
 39729                           intcon3	equ	0xFF0
 39730                           indf0	equ	0xFEF
 39731                           postinc0	equ	0xFEE
 39732                           fsr0h	equ	0xFEA
 39733                           fsr0l	equ	0xFE9
 39734                           wreg	equ	0xFE8
 39735                           indf1	equ	0xFE7
 39736                           postdec1	equ	0xFE5
 39737                           plusw1	equ	0xFE3
 39738                           fsr1h	equ	0xFE2
 39739                           fsr1l	equ	0xFE1
 39740                           indf2	equ	0xFDF
 39741                           postinc2	equ	0xFDE
 39742                           postdec2	equ	0xFDD
 39743                           plusw2	equ	0xFDB
 39744                           fsr2h	equ	0xFDA
 39745                           fsr2l	equ	0xFD9
 39746                           status	equ	0xFD8
 39747                           
 39748 ;; *************** function __get_time *****************
 39749 ;; Defined at:
 39750 ;;		line 29 in file "fat16.c"
 39751 ;; Parameters:    Size  Location     Type
 39752 ;;		None
 39753 ;; Auto vars:     Size  Location     Type
 39754 ;;  time            2    2[COMRAM] unsigned int 
 39755 ;; Return value:  Size  Location     Type
 39756 ;;                  2    0[COMRAM] unsigned int 
 39757 ;; Registers used:
 39758 ;;		None
 39759 ;; Tracked objects:
 39760 ;;		On entry : 0/0
 39761 ;;		On exit  : 0/0
 39762 ;;		Unchanged: 0/0
 39763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39767 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39768 ;;Total ram usage:        4 bytes
 39769 ;; Hardware stack levels used:    1
 39770 ;; This function calls:
 39771 ;;		Nothing
 39772 ;; This function is called by:
 39773 ;;		__update_modified_time
 39774 ;;		_fat_create_file
 39775 ;; This function uses a non-reentrant model
 39776 ;;
 39777                           
 39778                           	psect	text201
 39779  008976                     __ptext201:
 39780                           	opt stack 0
 39781  008976                     __get_time:
 39782                           	opt stack 26
 39783                           
 39784                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 39785                           
 39786                           ;incstack = 0
 39787  008976  C003  F001         	movff	__get_time@time,?__get_time
 39788  00897A  C004  F002         	movff	__get_time@time+1,?__get_time+1
 39789  00897E  0012               	return		;funcret
 39790  008980                     __end_of__get_time:
 39791                           	opt stack 0
 39792                           tosu	equ	0xFFF
 39793                           tosh	equ	0xFFE
 39794                           tosl	equ	0xFFD
 39795                           pclath	equ	0xFFA
 39796                           tblptru	equ	0xFF8
 39797                           tblptrh	equ	0xFF7
 39798                           tblptrl	equ	0xFF6
 39799                           tablat	equ	0xFF5
 39800                           prodh	equ	0xFF4
 39801                           prodl	equ	0xFF3
 39802                           intcon	equ	0xFF2
 39803                           intcon2	equ	0xFF1
 39804                           intcon3	equ	0xFF0
 39805                           indf0	equ	0xFEF
 39806                           postinc0	equ	0xFEE
 39807                           fsr0h	equ	0xFEA
 39808                           fsr0l	equ	0xFE9
 39809                           wreg	equ	0xFE8
 39810                           indf1	equ	0xFE7
 39811                           postdec1	equ	0xFE5
 39812                           plusw1	equ	0xFE3
 39813                           fsr1h	equ	0xFE2
 39814                           fsr1l	equ	0xFE1
 39815                           indf2	equ	0xFDF
 39816                           postinc2	equ	0xFDE
 39817                           postdec2	equ	0xFDD
 39818                           plusw2	equ	0xFDB
 39819                           fsr2h	equ	0xFDA
 39820                           fsr2l	equ	0xFD9
 39821                           status	equ	0xFD8
 39822                           
 39823 ;; *************** function __get_date *****************
 39824 ;; Defined at:
 39825 ;;		line 41 in file "fat16.c"
 39826 ;; Parameters:    Size  Location     Type
 39827 ;;		None
 39828 ;; Auto vars:     Size  Location     Type
 39829 ;;  date            2    2[COMRAM] unsigned int 
 39830 ;; Return value:  Size  Location     Type
 39831 ;;                  2    0[COMRAM] unsigned int 
 39832 ;; Registers used:
 39833 ;;		None
 39834 ;; Tracked objects:
 39835 ;;		On entry : 0/0
 39836 ;;		On exit  : 0/0
 39837 ;;		Unchanged: 0/0
 39838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39843 ;;Total ram usage:        4 bytes
 39844 ;; Hardware stack levels used:    1
 39845 ;; This function calls:
 39846 ;;		Nothing
 39847 ;; This function is called by:
 39848 ;;		__update_modified_time
 39849 ;;		_fat_create_file
 39850 ;; This function uses a non-reentrant model
 39851 ;;
 39852                           
 39853                           	psect	text202
 39854  008980                     __ptext202:
 39855                           	opt stack 0
 39856  008980                     __get_date:
 39857                           	opt stack 26
 39858                           
 39859                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 39860                           
 39861                           ;incstack = 0
 39862  008980  C003  F001         	movff	__get_date@date,?__get_date
 39863  008984  C004  F002         	movff	__get_date@date+1,?__get_date+1
 39864  008988  0012               	return		;funcret
 39865  00898A                     __end_of__get_date:
 39866                           	opt stack 0
 39867                           tosu	equ	0xFFF
 39868                           tosh	equ	0xFFE
 39869                           tosl	equ	0xFFD
 39870                           pclath	equ	0xFFA
 39871                           tblptru	equ	0xFF8
 39872                           tblptrh	equ	0xFF7
 39873                           tblptrl	equ	0xFF6
 39874                           tablat	equ	0xFF5
 39875                           prodh	equ	0xFF4
 39876                           prodl	equ	0xFF3
 39877                           intcon	equ	0xFF2
 39878                           intcon2	equ	0xFF1
 39879                           intcon3	equ	0xFF0
 39880                           indf0	equ	0xFEF
 39881                           postinc0	equ	0xFEE
 39882                           fsr0h	equ	0xFEA
 39883                           fsr0l	equ	0xFE9
 39884                           wreg	equ	0xFE8
 39885                           indf1	equ	0xFE7
 39886                           postdec1	equ	0xFE5
 39887                           plusw1	equ	0xFE3
 39888                           fsr1h	equ	0xFE2
 39889                           fsr1l	equ	0xFE1
 39890                           indf2	equ	0xFDF
 39891                           postinc2	equ	0xFDE
 39892                           postdec2	equ	0xFDD
 39893                           plusw2	equ	0xFDB
 39894                           fsr2h	equ	0xFDA
 39895                           fsr2l	equ	0xFD9
 39896                           status	equ	0xFD8
 39897                           
 39898 ;; *************** function __sector_from_cluster *****************
 39899 ;; Defined at:
 39900 ;;		line 445 in file "fat16.c"
 39901 ;; Parameters:    Size  Location     Type
 39902 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 39903 ;; Auto vars:     Size  Location     Type
 39904 ;;		None
 39905 ;; Return value:  Size  Location     Type
 39906 ;;                  2    0[COMRAM] unsigned int 
 39907 ;; Registers used:
 39908 ;;		wreg, status,2, status,0
 39909 ;; Tracked objects:
 39910 ;;		On entry : 0/0
 39911 ;;		On exit  : 0/0
 39912 ;;		Unchanged: 0/0
 39913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39918 ;;Total ram usage:        2 bytes
 39919 ;; Hardware stack levels used:    1
 39920 ;; This function calls:
 39921 ;;		Nothing
 39922 ;; This function is called by:
 39923 ;;		_fat_append_to_file
 39924 ;;		_fat_read_from_file_fast
 39925 ;;		_fat_modify_file
 39926 ;; This function uses a non-reentrant model
 39927 ;;
 39928                           
 39929                           	psect	text203
 39930  0088E4                     __ptext203:
 39931                           	opt stack 0
 39932  0088E4                     __sector_from_cluster:
 39933                           	opt stack 27
 39934                           
 39935                           ;fat16.c: 447: return fat_cluster + 38 - 2;
 39936                           
 39937                           ;incstack = 0
 39938  0088E4  0E24               	movlw	36
 39939  0088E6  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 39940  0088E8  6E01               	movwf	?__sector_from_cluster,c
 39941  0088EA  0E00               	movlw	0
 39942  0088EC  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 39943  0088EE  6E02               	movwf	?__sector_from_cluster+1,c
 39944  0088F0  0012               	return	
 39945  0088F2                     __end_of__sector_from_cluster:
 39946                           	opt stack 0
 39947                           tosu	equ	0xFFF
 39948                           tosh	equ	0xFFE
 39949                           tosl	equ	0xFFD
 39950                           pclath	equ	0xFFA
 39951                           tblptru	equ	0xFF8
 39952                           tblptrh	equ	0xFF7
 39953                           tblptrl	equ	0xFF6
 39954                           tablat	equ	0xFF5
 39955                           prodh	equ	0xFF4
 39956                           prodl	equ	0xFF3
 39957                           intcon	equ	0xFF2
 39958                           intcon2	equ	0xFF1
 39959                           intcon3	equ	0xFF0
 39960                           indf0	equ	0xFEF
 39961                           postinc0	equ	0xFEE
 39962                           fsr0h	equ	0xFEA
 39963                           fsr0l	equ	0xFE9
 39964                           wreg	equ	0xFE8
 39965                           indf1	equ	0xFE7
 39966                           postdec1	equ	0xFE5
 39967                           plusw1	equ	0xFE3
 39968                           fsr1h	equ	0xFE2
 39969                           fsr1l	equ	0xFE1
 39970                           indf2	equ	0xFDF
 39971                           postinc2	equ	0xFDE
 39972                           postdec2	equ	0xFDD
 39973                           plusw2	equ	0xFDB
 39974                           fsr2h	equ	0xFDA
 39975                           fsr2l	equ	0xFD9
 39976                           status	equ	0xFD8
 39977                           
 39978 ;; *************** function __read_fat *****************
 39979 ;; Defined at:
 39980 ;;		line 174 in file "fat16.c"
 39981 ;; Parameters:    Size  Location     Type
 39982 ;;  cluster         2   47[COMRAM] unsigned int 
 39983 ;; Auto vars:     Size  Location     Type
 39984 ;;  value           2   53[COMRAM] unsigned int 
 39985 ;;  offset          2   51[COMRAM] unsigned int 
 39986 ;;  fat_sector      2   49[COMRAM] unsigned int 
 39987 ;; Return value:  Size  Location     Type
 39988 ;;                  2   47[COMRAM] unsigned int 
 39989 ;; Registers used:
 39990 ;;		wreg, status,2, status,0, cstack
 39991 ;; Tracked objects:
 39992 ;;		On entry : 0/0
 39993 ;;		On exit  : 0/0
 39994 ;;		Unchanged: 0/0
 39995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39997 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39999 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40000 ;;Total ram usage:        8 bytes
 40001 ;; Hardware stack levels used:    1
 40002 ;; Hardware stack levels required when called:    5
 40003 ;; This function calls:
 40004 ;;		_flash_partial_read
 40005 ;; This function is called by:
 40006 ;;		_fat_delete_file
 40007 ;;		_fat_append_to_file
 40008 ;;		_fat_read_from_file_fast
 40009 ;;		_fat_resize_file
 40010 ;;		_fat_modify_file
 40011 ;; This function uses a non-reentrant model
 40012 ;;
 40013                           
 40014                           	psect	text204
 40015  007F26                     __ptext204:
 40016                           	opt stack 0
 40017  007F26                     __read_fat:
 40018                           	opt stack 22
 40019                           
 40020                           ;fat16.c: 176: uint16_t fat_sector;;fat16.c: 177: uint16_t offset;;fat16.c: 178: uint16_
      +                          t value;;fat16.c: 179: fat_sector = cluster>>8;
 40021                           
 40022                           ;incstack = 0
 40023  007F26  5031               	movf	__read_fat@cluster+1,w,c
 40024  007F28  6E32               	movwf	__read_fat@fat_sector,c
 40025  007F2A  6A33               	clrf	__read_fat@fat_sector+1,c
 40026                           
 40027                           ;fat16.c: 180: fat_sector += 2;
 40028  007F2C  0E02               	movlw	2
 40029  007F2E  2632               	addwf	__read_fat@fat_sector,f,c
 40030  007F30  0E00               	movlw	0
 40031  007F32  2233               	addwfc	__read_fat@fat_sector+1,f,c
 40032                           
 40033                           ;fat16.c: 181: offset = cluster & 0xFF;
 40034  007F34  5030               	movf	__read_fat@cluster,w,c
 40035  007F36  6E34               	movwf	__read_fat@offset,c
 40036  007F38  6A35               	clrf	__read_fat@offset+1,c
 40037                           
 40038                           ;fat16.c: 182: offset <<= 1;
 40039  007F3A  90D8               	bcf	status,0,c
 40040  007F3C  3634               	rlcf	__read_fat@offset,f,c
 40041  007F3E  3635               	rlcf	__read_fat@offset+1,f,c
 40042                           
 40043                           ;fat16.c: 183: flash_partial_read(fat_sector, offset, 2, &value);
 40044  007F40  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 40045  007F44  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 40046  007F48  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 40047  007F4C  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 40048  007F50  0E00               	movlw	0
 40049  007F52  6E2D               	movwf	flash_partial_read@length+1,c
 40050  007F54  0E02               	movlw	2
 40051  007F56  6E2C               	movwf	flash_partial_read@length,c
 40052  007F58  0E36               	movlw	low __read_fat@value
 40053  007F5A  6E2E               	movwf	flash_partial_read@data,c
 40054  007F5C  0E00               	movlw	high __read_fat@value
 40055  007F5E  6E2F               	movwf	flash_partial_read@data+1,c
 40056  007F60  ECFC  F041         	call	_flash_partial_read	;wreg free
 40057                           
 40058                           ;fat16.c: 184: return value;
 40059  007F64  C036  F030         	movff	__read_fat@value,?__read_fat
 40060  007F68  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 40061  007F6C  0012               	return	
 40062  007F6E                     __end_of__read_fat:
 40063                           	opt stack 0
 40064                           tosu	equ	0xFFF
 40065                           tosh	equ	0xFFE
 40066                           tosl	equ	0xFFD
 40067                           pclath	equ	0xFFA
 40068                           tblptru	equ	0xFF8
 40069                           tblptrh	equ	0xFF7
 40070                           tblptrl	equ	0xFF6
 40071                           tablat	equ	0xFF5
 40072                           prodh	equ	0xFF4
 40073                           prodl	equ	0xFF3
 40074                           intcon	equ	0xFF2
 40075                           intcon2	equ	0xFF1
 40076                           intcon3	equ	0xFF0
 40077                           indf0	equ	0xFEF
 40078                           postinc0	equ	0xFEE
 40079                           fsr0h	equ	0xFEA
 40080                           fsr0l	equ	0xFE9
 40081                           wreg	equ	0xFE8
 40082                           indf1	equ	0xFE7
 40083                           postdec1	equ	0xFE5
 40084                           plusw1	equ	0xFE3
 40085                           fsr1h	equ	0xFE2
 40086                           fsr1l	equ	0xFE1
 40087                           indf2	equ	0xFDF
 40088                           postinc2	equ	0xFDE
 40089                           postdec2	equ	0xFDD
 40090                           plusw2	equ	0xFDB
 40091                           fsr2h	equ	0xFDA
 40092                           fsr2l	equ	0xFD9
 40093                           status	equ	0xFD8
 40094                           
 40095 ;; *************** function __get_empty_cluster *****************
 40096 ;; Defined at:
 40097 ;;		line 107 in file "fat16.c"
 40098 ;; Parameters:    Size  Location     Type
 40099 ;;  first_cluste    2   47[COMRAM] unsigned int 
 40100 ;; Auto vars:     Size  Location     Type
 40101 ;;  cluster         2   55[COMRAM] unsigned int 
 40102 ;;  value           2   53[COMRAM] unsigned int 
 40103 ;;  offset          2   51[COMRAM] unsigned int 
 40104 ;;  fat_sector      2   49[COMRAM] unsigned int 
 40105 ;; Return value:  Size  Location     Type
 40106 ;;                  2   47[COMRAM] unsigned int 
 40107 ;; Registers used:
 40108 ;;		wreg, status,2, status,0, cstack
 40109 ;; Tracked objects:
 40110 ;;		On entry : 0/0
 40111 ;;		On exit  : 0/0
 40112 ;;		Unchanged: 0/0
 40113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40115 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40117 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40118 ;;Total ram usage:       10 bytes
 40119 ;; Hardware stack levels used:    1
 40120 ;; Hardware stack levels required when called:    5
 40121 ;; This function calls:
 40122 ;;		_flash_partial_read
 40123 ;; This function is called by:
 40124 ;;		_fat_create_file
 40125 ;;		_fat_append_to_file
 40126 ;;		_fat_resize_file
 40127 ;; This function uses a non-reentrant model
 40128 ;;
 40129                           
 40130                           	psect	text205
 40131  006D2E                     __ptext205:
 40132                           	opt stack 0
 40133  006D2E                     __get_empty_cluster:
 40134                           	opt stack 21
 40135                           
 40136                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: if(first_cluster<2)
 40137                           
 40138                           ;incstack = 0
 40139  006D2E  5031               	movf	__get_empty_cluster@first_cluster+1,w,c
 40140  006D30  E108               	bnz	l11576
 40141  006D32  0E02               	movlw	2
 40142  006D34  5C30               	subwf	__get_empty_cluster@first_cluster,w,c
 40143  006D36  B0D8               	btfsc	status,0,c
 40144  006D38  D004               	goto	l1929
 40145                           
 40146                           ;fat16.c: 116: {;fat16.c: 117: first_cluster = 2;
 40147  006D3A  0E00               	movlw	0
 40148  006D3C  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 40149  006D3E  0E02               	movlw	2
 40150  006D40  6E30               	movwf	__get_empty_cluster@first_cluster,c
 40151  006D42                     l1929:
 40152  006D42                     l11576:
 40153                           
 40154                           ;fat16.c: 118: };fat16.c: 120: for(cluster=first_cluster; cluster<(8154+2); ++cluster)
 40155  006D42  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 40156  006D46  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 40157  006D4A                     l11578:
 40158  006D4A  0EDC               	movlw	220
 40159  006D4C  5C38               	subwf	__get_empty_cluster@cluster,w,c
 40160  006D4E  0E1F               	movlw	31
 40161  006D50  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 40162  006D52  B0D8               	btfsc	status,0,c
 40163  006D54  D02B               	goto	u8610
 40164                           
 40165                           ;fat16.c: 121: {;fat16.c: 122: fat_sector = cluster>>8;
 40166  006D56  5039               	movf	__get_empty_cluster@cluster+1,w,c
 40167  006D58  6E32               	movwf	__get_empty_cluster@fat_sector,c
 40168  006D5A  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 40169                           
 40170                           ;fat16.c: 123: fat_sector += 2;
 40171  006D5C  0E02               	movlw	2
 40172  006D5E  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 40173  006D60  0E00               	movlw	0
 40174  006D62  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 40175                           
 40176                           ;fat16.c: 124: offset = cluster & 0xFF;
 40177  006D64  5038               	movf	__get_empty_cluster@cluster,w,c
 40178  006D66  6E34               	movwf	__get_empty_cluster@offset,c
 40179  006D68  6A35               	clrf	__get_empty_cluster@offset+1,c
 40180                           
 40181                           ;fat16.c: 125: offset <<= 1;
 40182  006D6A  90D8               	bcf	status,0,c
 40183  006D6C  3634               	rlcf	__get_empty_cluster@offset,f,c
 40184  006D6E  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 40185                           
 40186                           ;fat16.c: 126: flash_partial_read(fat_sector, offset, 2, (uint8_t*) &value);
 40187  006D70  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 40188  006D74  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 40189  006D78  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 40190  006D7C  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 40191  006D80  0E00               	movlw	0
 40192  006D82  6E2D               	movwf	flash_partial_read@length+1,c
 40193  006D84  0E02               	movlw	2
 40194  006D86  6E2C               	movwf	flash_partial_read@length,c
 40195  006D88  0E36               	movlw	low __get_empty_cluster@value
 40196  006D8A  6E2E               	movwf	flash_partial_read@data,c
 40197  006D8C  0E00               	movlw	high __get_empty_cluster@value
 40198  006D8E  6E2F               	movwf	flash_partial_read@data+1,c
 40199  006D90  ECFC  F041         	call	_flash_partial_read	;wreg free
 40200                           
 40201                           ;fat16.c: 127: if(value==0x0000)
 40202  006D94  5036               	movf	__get_empty_cluster@value,w,c
 40203  006D96  1037               	iorwf	__get_empty_cluster@value+1,w,c
 40204  006D98  A4D8               	btfss	status,2,c
 40205  006D9A  D005               	goto	l1932
 40206                           
 40207                           ;fat16.c: 128: {;fat16.c: 129: return cluster;
 40208  006D9C  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 40209  006DA0  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 40210  006DA4  0012               	return	
 40211  006DA6                     l1932:
 40212  006DA6  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 40213  006DA8  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 40214  006DAA  D7CF               	goto	l11578
 40215  006DAC                     u8610:
 40216                           
 40217                           ;fat16.c: 130: };fat16.c: 131: };fat16.c: 132: return 0x0000;
 40218  006DAC  0E00               	movlw	0
 40219  006DAE  6E31               	movwf	?__get_empty_cluster+1,c
 40220  006DB0  0E00               	movlw	0
 40221  006DB2  6E30               	movwf	?__get_empty_cluster,c
 40222  006DB4  0012               	return	
 40223  006DB6                     __end_of__get_empty_cluster:
 40224                           	opt stack 0
 40225                           tosu	equ	0xFFF
 40226                           tosh	equ	0xFFE
 40227                           tosl	equ	0xFFD
 40228                           pclath	equ	0xFFA
 40229                           tblptru	equ	0xFF8
 40230                           tblptrh	equ	0xFF7
 40231                           tblptrl	equ	0xFF6
 40232                           tablat	equ	0xFF5
 40233                           prodh	equ	0xFF4
 40234                           prodl	equ	0xFF3
 40235                           intcon	equ	0xFF2
 40236                           intcon2	equ	0xFF1
 40237                           intcon3	equ	0xFF0
 40238                           indf0	equ	0xFEF
 40239                           postinc0	equ	0xFEE
 40240                           fsr0h	equ	0xFEA
 40241                           fsr0l	equ	0xFE9
 40242                           wreg	equ	0xFE8
 40243                           indf1	equ	0xFE7
 40244                           postdec1	equ	0xFE5
 40245                           plusw1	equ	0xFE3
 40246                           fsr1h	equ	0xFE2
 40247                           fsr1l	equ	0xFE1
 40248                           indf2	equ	0xFDF
 40249                           postinc2	equ	0xFDE
 40250                           postdec2	equ	0xFDD
 40251                           plusw2	equ	0xFDB
 40252                           fsr2h	equ	0xFDA
 40253                           fsr2l	equ	0xFD9
 40254                           status	equ	0xFD8
 40255                           
 40256 ;; *************** function _flash_partial_read *****************
 40257 ;; Defined at:
 40258 ;;		line 457 in file "flash.c"
 40259 ;; Parameters:    Size  Location     Type
 40260 ;;  page            2   39[COMRAM] unsigned int 
 40261 ;;  start           2   41[COMRAM] unsigned int 
 40262 ;;  length          2   43[COMRAM] unsigned int 
 40263 ;;  data            2   45[COMRAM] PTR unsigned char 
 40264 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 40265 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 40266 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 40267 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 40268 ;;		 -> _root_is_available@first_byte(1), RAM(3759), 
 40269 ;; Auto vars:     Size  Location     Type
 40270 ;;		None
 40271 ;; Return value:  Size  Location     Type
 40272 ;;                  1    wreg      void 
 40273 ;; Registers used:
 40274 ;;		wreg, status,2, status,0, cstack
 40275 ;; Tracked objects:
 40276 ;;		On entry : 0/0
 40277 ;;		On exit  : 0/0
 40278 ;;		Unchanged: 0/0
 40279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40280 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40283 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40284 ;;Total ram usage:        8 bytes
 40285 ;; Hardware stack levels used:    1
 40286 ;; Hardware stack levels required when called:    4
 40287 ;; This function calls:
 40288 ;;		__flash_partial_read
 40289 ;;		_spi_set_configuration
 40290 ;; This function is called by:
 40291 ;;		__root_is_available
 40292 ;;		__get_empty_cluster
 40293 ;;		_fat_get_empty_clusters
 40294 ;;		__read_fat
 40295 ;;		__get_first_cluster
 40296 ;;		_fat_find_file
 40297 ;;		_fat_get_file_size
 40298 ;;		_fat_read_from_file_fast
 40299 ;;		_fat_get_file_information
 40300 ;;		__get_file_size
 40301 ;; This function uses a non-reentrant model
 40302 ;;
 40303                           
 40304                           	psect	text206
 40305  0083F8                     __ptext206:
 40306                           	opt stack 0
 40307  0083F8                     _flash_partial_read:
 40308                           	opt stack 23
 40309                           
 40310                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 40311                           
 40312                           ;incstack = 0
 40313  0083F8  0E00               	movlw	0
 40314  0083FA  EC5A  F024         	call	_spi_set_configuration
 40315                           
 40316                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 40317  0083FE  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 40318  008402  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 40319  008406  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 40320  00840A  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 40321  00840E  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 40322  008412  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 40323  008416  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 40324  00841A  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 40325  00841E  EC58  F038         	call	__flash_partial_read	;wreg free
 40326                           
 40327                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 40328  008422  0E01               	movlw	1
 40329  008424  EC5A  F024         	call	_spi_set_configuration
 40330  008428  0012               	return		;funcret
 40331  00842A                     __end_of_flash_partial_read:
 40332                           	opt stack 0
 40333                           tosu	equ	0xFFF
 40334                           tosh	equ	0xFFE
 40335                           tosl	equ	0xFFD
 40336                           pclath	equ	0xFFA
 40337                           tblptru	equ	0xFF8
 40338                           tblptrh	equ	0xFF7
 40339                           tblptrl	equ	0xFF6
 40340                           tablat	equ	0xFF5
 40341                           prodh	equ	0xFF4
 40342                           prodl	equ	0xFF3
 40343                           intcon	equ	0xFF2
 40344                           intcon2	equ	0xFF1
 40345                           intcon3	equ	0xFF0
 40346                           indf0	equ	0xFEF
 40347                           postinc0	equ	0xFEE
 40348                           fsr0h	equ	0xFEA
 40349                           fsr0l	equ	0xFE9
 40350                           wreg	equ	0xFE8
 40351                           indf1	equ	0xFE7
 40352                           postdec1	equ	0xFE5
 40353                           plusw1	equ	0xFE3
 40354                           fsr1h	equ	0xFE2
 40355                           fsr1l	equ	0xFE1
 40356                           indf2	equ	0xFDF
 40357                           postinc2	equ	0xFDE
 40358                           postdec2	equ	0xFDD
 40359                           plusw2	equ	0xFDB
 40360                           fsr2h	equ	0xFDA
 40361                           fsr2l	equ	0xFD9
 40362                           status	equ	0xFD8
 40363                           
 40364 ;; *************** function _spi_set_configuration *****************
 40365 ;; Defined at:
 40366 ;;		line 139 in file "spi.c"
 40367 ;; Parameters:    Size  Location     Type
 40368 ;;  configuratio    1    wreg     enum E6749
 40369 ;; Auto vars:     Size  Location     Type
 40370 ;;  configuratio    1    0[COMRAM] enum E6749
 40371 ;;  cntr            1    0        unsigned char 
 40372 ;; Return value:  Size  Location     Type
 40373 ;;                  1    wreg      void 
 40374 ;; Registers used:
 40375 ;;		wreg, status,2, status,0
 40376 ;; Tracked objects:
 40377 ;;		On entry : 0/0
 40378 ;;		On exit  : 0/0
 40379 ;;		Unchanged: 0/0
 40380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40385 ;;Total ram usage:        1 bytes
 40386 ;; Hardware stack levels used:    1
 40387 ;; This function calls:
 40388 ;;		Nothing
 40389 ;; This function is called by:
 40390 ;;		_flash_init
 40391 ;;		_flash_is_busy
 40392 ;;		_flash_page_read
 40393 ;;		_flash_page_write
 40394 ;;		_flash_partial_read
 40395 ;;		_flash_partial_write
 40396 ;;		_flash_set_power_state
 40397 ;; This function uses a non-reentrant model
 40398 ;;
 40399                           
 40400                           	psect	text207
 40401  0048B4                     __ptext207:
 40402                           	opt stack 0
 40403  0048B4                     _spi_set_configuration:
 40404                           	opt stack 28
 40405                           
 40406                           ;incstack = 0
 40407                           ;spi_set_configuration@configuration stored from wreg
 40408  0048B4  6E01               	movwf	spi_set_configuration@configuration,c
 40409                           
 40410                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 40411  0048B6  D07B               	goto	l2877
 40412  0048B8                     l2878:
 40413                           
 40414                           ;spi.c: 152: LATDbits.LD2 = 1;
 40415  0048B8  848C               	bsf	3980,2,c	;volatile
 40416                           
 40417                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 40418  0048BA  9495               	bcf	3989,2,c	;volatile
 40419                           
 40420                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 40421  0048BC  8495               	bsf	3989,2,c	;volatile
 40422  0048BE  A483               	btfss	3971,2,c	;volatile
 40423  0048C0  D7FE               	goto	l2880
 40424                           
 40425                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 40426  0048C2  9088               	bcf	3976,0,c	;volatile
 40427                           
 40428                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 40429  0048C4  9A72               	bcf	3954,5,c	;volatile
 40430                           
 40431                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 40432  0048C6  8C95               	bsf	3989,6,c	;volatile
 40433                           
 40434                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 40435  0048C8  9895               	bcf	3989,4,c	;volatile
 40436                           
 40437                           ;spi.c: 165: LATDbits.LD4 = 0;
 40438  0048CA  988C               	bcf	3980,4,c	;volatile
 40439                           
 40440                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 40441  0048CC  9A95               	bcf	3989,5,c	;volatile
 40442                           
 40443                           ;spi.c: 167: LATDbits.LD5 = 0;
 40444  0048CE  9A8C               	bcf	3980,5,c	;volatile
 40445                           
 40446                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 40447  0048D0  9E95               	bcf	3989,7,c	;volatile
 40448                           
 40449                           ;spi.c: 169: LATDbits.LD7 = 1;
 40450  0048D2  8E8C               	bsf	3980,7,c	;volatile
 40451                           
 40452                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 40453  0048D4  0E55               	movlw	85
 40454  0048D6  6EA7               	movwf	4007,c	;volsfr
 40455  0048D8  0EAA               	movlw	170
 40456  0048DA  6EA7               	movwf	4007,c	;volsfr
 40457  0048DC  010E               	movlb	14	; () banked
 40458  0048DE  91BF               	bcf	191,0,b	;volatile
 40459                           
 40460                           ;spi.c: 174: RPOR23 = 0b00000;
 40461  0048E0  0E00               	movlw	0
 40462  0048E2  6FD7               	movwf	215,b	;volatile
 40463                           
 40464                           ;spi.c: 175: RPINR21 = 0b11111;
 40465  0048E4  0E1F               	movlw	31
 40466  0048E6  6FFC               	movwf	252,b	;volatile
 40467                           
 40468                           ;spi.c: 176: RPINR23 = 0b11111;
 40469  0048E8  0E1F               	movlw	31
 40470  0048EA  6FFE               	movwf	254,b	;volatile
 40471                           
 40472                           ;spi.c: 178: RPINR21 = 23;
 40473  0048EC  0E17               	movlw	23
 40474  0048EE  6FFC               	movwf	252,b	;volatile
 40475                           
 40476                           ;spi.c: 179: RPOR21 = 10;
 40477  0048F0  0E0A               	movlw	10
 40478  0048F2  6FD5               	movwf	213,b	;volatile
 40479                           
 40480                           ;spi.c: 181: RPOR22 = 11;
 40481  0048F4  0E0B               	movlw	11
 40482  0048F6  6FD6               	movwf	214,b	;volatile
 40483                           
 40484                           ;spi.c: 182: RPINR22 = 22;
 40485  0048F8  0E16               	movlw	22
 40486  0048FA  6FFD               	movwf	253,b	;volatile
 40487                           
 40488                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 40489  0048FC  0E55               	movlw	85
 40490  0048FE  6EA7               	movwf	4007,c	;volsfr
 40491  004900  0EAA               	movlw	170
 40492  004902  6EA7               	movwf	4007,c	;volsfr
 40493                           
 40494                           ; BSR set to: 14
 40495  004904  81BF               	bsf	191,0,b	;volatile
 40496                           
 40497                           ; BSR set to: 14
 40498                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 40499  004906  8E73               	bsf	3955,7,c	;volatile
 40500                           
 40501                           ; BSR set to: 14
 40502                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 40503  004908  8C73               	bsf	3955,6,c	;volatile
 40504                           
 40505                           ; BSR set to: 14
 40506                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 40507  00490A  9E72               	bcf	3954,7,c	;volatile
 40508                           
 40509                           ; BSR set to: 14
 40510                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 40511  00490C  9C72               	bcf	3954,6,c	;volatile
 40512                           
 40513                           ; BSR set to: 14
 40514                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 40515  00490E  9872               	bcf	3954,4,c	;volatile
 40516                           
 40517                           ; BSR set to: 14
 40518                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 40519  004910  9072               	bcf	3954,0,c	;volatile
 40520  004912  9272               	bcf	3954,1,c	;volatile
 40521  004914  9472               	bcf	3954,2,c	;volatile
 40522  004916  9672               	bcf	3954,3,c	;volatile
 40523                           
 40524                           ; BSR set to: 14
 40525                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 40526  004918  8A72               	bsf	3954,5,c	;volatile
 40527                           
 40528                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 40529  00491A  0E00               	movlw	0
 40530  00491C  0101               	movlb	1	; () banked
 40531  00491E  6F86               	movwf	_active_configuration& (0+255),b
 40532                           
 40533                           ;spi.c: 196: break;
 40534  004920  0012               	return	
 40535  004922                     l2883:
 40536                           
 40537                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 40538  004922  9088               	bcf	3976,0,c	;volatile
 40539                           
 40540                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 40541  004924  9A72               	bcf	3954,5,c	;volatile
 40542                           
 40543                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 40544  004926  010F               	movlb	15	; () banked
 40545  004928  9340               	bcf	64,1,b	;volatile
 40546                           
 40547                           ; BSR set to: 15
 40548                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 40549  00492A  0E55               	movlw	85
 40550  00492C  6EA7               	movwf	4007,c	;volsfr
 40551  00492E  0EAA               	movlw	170
 40552  004930  6EA7               	movwf	4007,c	;volsfr
 40553                           
 40554                           ; BSR set to: 15
 40555  004932  010E               	movlb	14	; () banked
 40556  004934  91BF               	bcf	191,0,b	;volatile
 40557                           
 40558                           ;spi.c: 208: RPOR23 = 10;
 40559  004936  0E0A               	movlw	10
 40560  004938  6FD7               	movwf	215,b	;volatile
 40561                           
 40562                           ;spi.c: 209: RPINR21 = 21;
 40563  00493A  0E15               	movlw	21
 40564  00493C  6FFC               	movwf	252,b	;volatile
 40565                           
 40566                           ;spi.c: 210: RPINR22 = 22;
 40567  00493E  0E16               	movlw	22
 40568  004940  6FFD               	movwf	253,b	;volatile
 40569                           
 40570                           ;spi.c: 211: RPINR23 = 19;
 40571  004942  0E13               	movlw	19
 40572  004944  6FFE               	movwf	254,b	;volatile
 40573                           
 40574                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 40575  004946  0E55               	movlw	85
 40576  004948  6EA7               	movwf	4007,c	;volsfr
 40577  00494A  0EAA               	movlw	170
 40578  00494C  6EA7               	movwf	4007,c	;volsfr
 40579                           
 40580                           ; BSR set to: 14
 40581  00494E  81BF               	bsf	191,0,b	;volatile
 40582                           
 40583                           ; BSR set to: 14
 40584                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 40585  004950  9A72               	bcf	3954,5,c	;volatile
 40586                           
 40587                           ; BSR set to: 14
 40588                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 40589  004952  8A95               	bsf	3989,5,c	;volatile
 40590                           
 40591                           ; BSR set to: 14
 40592                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 40593  004954  8895               	bsf	3989,4,c	;volatile
 40594                           
 40595                           ; BSR set to: 14
 40596                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 40597  004956  9C95               	bcf	3989,6,c	;volatile
 40598                           
 40599                           ; BSR set to: 14
 40600                           ;spi.c: 227: LATDbits.LD6 = 1;
 40601  004958  8C8C               	bsf	3980,6,c	;volatile
 40602                           
 40603                           ; BSR set to: 14
 40604                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 40605  00495A  8495               	bsf	3989,2,c	;volatile
 40606                           
 40607                           ; BSR set to: 14
 40608                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 40609  00495C  9E73               	bcf	3955,7,c	;volatile
 40610                           
 40611                           ; BSR set to: 14
 40612                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 40613  00495E  8C73               	bsf	3955,6,c	;volatile
 40614                           
 40615                           ; BSR set to: 14
 40616                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 40617  004960  9E72               	bcf	3954,7,c	;volatile
 40618                           
 40619                           ; BSR set to: 14
 40620                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 40621  004962  9C72               	bcf	3954,6,c	;volatile
 40622                           
 40623                           ; BSR set to: 14
 40624                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 40625  004964  9872               	bcf	3954,4,c	;volatile
 40626                           
 40627                           ; BSR set to: 14
 40628                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 40629  004966  5072               	movf	3954,w,c	;volatile
 40630  004968  0BF0               	andlw	-16
 40631  00496A  0904               	iorlw	4
 40632  00496C  6E72               	movwf	3954,c	;volatile
 40633                           
 40634                           ; BSR set to: 14
 40635                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 40636  00496E  9EA4               	bcf	4004,7,c	;volatile
 40637                           
 40638                           ; BSR set to: 14
 40639                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 40640  004970  8A72               	bsf	3954,5,c	;volatile
 40641                           
 40642                           ; BSR set to: 14
 40643                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 40644  004972  8A88               	bsf	3976,5,c	;volatile
 40645                           
 40646                           ; BSR set to: 14
 40647                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 40648  004974  8888               	bsf	3976,4,c	;volatile
 40649                           
 40650                           ; BSR set to: 14
 40651                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 40652  004976  8688               	bsf	3976,3,c	;volatile
 40653                           
 40654                           ; BSR set to: 14
 40655                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 40656  004978  9488               	bcf	3976,2,c	;volatile
 40657                           
 40658                           ; BSR set to: 14
 40659                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 40660  00497A  9288               	bcf	3976,1,c	;volatile
 40661                           
 40662                           ; BSR set to: 14
 40663                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 40664  00497C  9886               	bcf	3974,4,c	;volatile
 40665  00497E  9A86               	bcf	3974,5,c	;volatile
 40666  004980  9C86               	bcf	3974,6,c	;volatile
 40667  004982  9E86               	bcf	3974,7,c	;volatile
 40668                           
 40669                           ; BSR set to: 14
 40670                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 40671  004984  9086               	bcf	3974,0,c	;volatile
 40672  004986  9286               	bcf	3974,1,c	;volatile
 40673  004988  9486               	bcf	3974,2,c	;volatile
 40674  00498A  9686               	bcf	3974,3,c	;volatile
 40675                           
 40676                           ; BSR set to: 14
 40677                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 40678  00498C  0E00               	movlw	0
 40679  00498E  6E66               	movwf	3942,c	;volatile
 40680                           
 40681                           ; BSR set to: 14
 40682                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 40683  004990  0E3F               	movlw	63
 40684  004992  6E67               	movwf	3943,c	;volatile
 40685                           
 40686                           ; BSR set to: 14
 40687                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 40688  004994  0E02               	movlw	high __spi_external_tx_buffer
 40689  004996  6E6A               	movwf	3946,c	;volatile
 40690                           
 40691                           ; BSR set to: 14
 40692                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 40693  004998  0E50               	movlw	low (low __spi_external_tx_buffer)
 40694  00499A  6E6B               	movwf	3947,c	;volatile
 40695                           
 40696                           ; BSR set to: 14
 40697                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 40698  00499C  0E03               	movlw	high __spi_external_rx_buffer
 40699  00499E  6E68               	movwf	3944,c	;volatile
 40700                           
 40701                           ; BSR set to: 14
 40702                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 40703  0049A0  0E00               	movlw	low (low __spi_external_rx_buffer)
 40704  0049A2  6E69               	movwf	3945,c	;volatile
 40705                           
 40706                           ; BSR set to: 14
 40707                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 40708  0049A4  8088               	bsf	3976,0,c	;volatile
 40709                           
 40710                           ; BSR set to: 14
 40711                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 40712  0049A6  0E01               	movlw	1
 40713  0049A8  0101               	movlb	1	; () banked
 40714  0049AA  6F86               	movwf	_active_configuration& (0+255),b
 40715                           
 40716                           ; BSR set to: 1
 40717                           ;spi.c: 337: }
 40718                           
 40719                           ;spi.c: 336: break;
 40720  0049AC  0012               	return	
 40721  0049AE                     l2877:
 40722                           
 40723                           ; BSR set to: 1
 40724  0049AE  5001               	movf	spi_set_configuration@configuration,w,c
 40725                           
 40726                           ; Switch size 1, requested type "space"
 40727                           ; Number of cases is 2, Range of values is 0 to 1
 40728                           ; switch strategies available:
 40729                           ; Name         Instructions Cycles
 40730                           ; simple_byte            7     4 (average)
 40731                           ;	Chosen strategy is simple_byte
 40732  0049B0  0A00               	xorlw	0	; case 0
 40733  0049B2  B4D8               	btfsc	status,2,c
 40734  0049B4  D781               	goto	l2878
 40735  0049B6  0A01               	xorlw	1	; case 1
 40736  0049B8  A4D8               	btfss	status,2,c
 40737  0049BA  0012               	return	
 40738  0049BC  D7B2               	goto	l2883
 40739  0049BE                     __end_of_spi_set_configuration:
 40740                           	opt stack 0
 40741                           tosu	equ	0xFFF
 40742                           tosh	equ	0xFFE
 40743                           tosl	equ	0xFFD
 40744                           pclath	equ	0xFFA
 40745                           tblptru	equ	0xFF8
 40746                           tblptrh	equ	0xFF7
 40747                           tblptrl	equ	0xFF6
 40748                           tablat	equ	0xFF5
 40749                           prodh	equ	0xFF4
 40750                           prodl	equ	0xFF3
 40751                           intcon	equ	0xFF2
 40752                           intcon2	equ	0xFF1
 40753                           intcon3	equ	0xFF0
 40754                           indf0	equ	0xFEF
 40755                           postinc0	equ	0xFEE
 40756                           fsr0h	equ	0xFEA
 40757                           fsr0l	equ	0xFE9
 40758                           wreg	equ	0xFE8
 40759                           indf1	equ	0xFE7
 40760                           postdec1	equ	0xFE5
 40761                           plusw1	equ	0xFE3
 40762                           fsr1h	equ	0xFE2
 40763                           fsr1l	equ	0xFE1
 40764                           indf2	equ	0xFDF
 40765                           postinc2	equ	0xFDE
 40766                           postdec2	equ	0xFDD
 40767                           plusw2	equ	0xFDB
 40768                           fsr2h	equ	0xFDA
 40769                           fsr2l	equ	0xFD9
 40770                           status	equ	0xFD8
 40771                           
 40772 ;; *************** function __flash_partial_read *****************
 40773 ;; Defined at:
 40774 ;;		line 305 in file "flash.c"
 40775 ;; Parameters:    Size  Location     Type
 40776 ;;  page            2   19[COMRAM] unsigned int 
 40777 ;;  start           2   21[COMRAM] unsigned int 
 40778 ;;  length          2   23[COMRAM] unsigned int 
 40779 ;;  data            2   25[COMRAM] PTR unsigned char 
 40780 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 40781 ;;		 -> buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 40782 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 40783 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 40784 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 40785 ;; Auto vars:     Size  Location     Type
 40786 ;;  command         4   31[COMRAM] unsigned char [4]
 40787 ;;  address         4   35[COMRAM] unsigned long 
 40788 ;; Return value:  Size  Location     Type
 40789 ;;                  1    wreg      void 
 40790 ;; Registers used:
 40791 ;;		wreg, status,2, status,0, cstack
 40792 ;; Tracked objects:
 40793 ;;		On entry : 0/0
 40794 ;;		On exit  : 0/0
 40795 ;;		Unchanged: 0/0
 40796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40798 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40800 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40801 ;;Total ram usage:       20 bytes
 40802 ;; Hardware stack levels used:    1
 40803 ;; Hardware stack levels required when called:    3
 40804 ;; This function calls:
 40805 ;;		__flash_is_busy
 40806 ;;		_spi_tx_rx
 40807 ;; This function is called by:
 40808 ;;		_flash_page_read
 40809 ;;		_flash_partial_read
 40810 ;; This function uses a non-reentrant model
 40811 ;;
 40812                           
 40813                           	psect	text208
 40814  0070B0                     __ptext208:
 40815                           	opt stack 0
 40816  0070B0                     __flash_partial_read:
 40817                           	opt stack 23
 40818                           
 40819                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 40820                           
 40821                           ;incstack = 0
 40822  0070B0  EC94  F043         	call	__flash_is_busy	;wreg free
 40823  0070B4  0900               	iorlw	0
 40824  0070B6  A4D8               	btfss	status,2,c
 40825  0070B8  D7FB               	goto	__flash_partial_read
 40826                           
 40827                           ;flash.c: 314: address = page;
 40828  0070BA  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 40829  0070BE  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 40830  0070C2  6A26               	clrf	__flash_partial_read@address+2,c
 40831  0070C4  6A27               	clrf	__flash_partial_read@address+3,c
 40832                           
 40833                           ;flash.c: 315: address <<= 9;
 40834  0070C6  0E09               	movlw	9
 40835  0070C8                     u6865:
 40836  0070C8  90D8               	bcf	status,0,c
 40837  0070CA  3624               	rlcf	__flash_partial_read@address,f,c
 40838  0070CC  3625               	rlcf	__flash_partial_read@address+1,f,c
 40839  0070CE  3626               	rlcf	__flash_partial_read@address+2,f,c
 40840  0070D0  3627               	rlcf	__flash_partial_read@address+3,f,c
 40841  0070D2  2EE8               	decfsz	wreg,f,c
 40842  0070D4  D7F9               	goto	u6865
 40843                           
 40844                           ;flash.c: 316: address |= start;
 40845  0070D6  5016               	movf	__flash_partial_read@start,w,c
 40846  0070D8  6E1C               	movwf	??__flash_partial_read& (0+255),c
 40847  0070DA  5017               	movf	__flash_partial_read@start+1,w,c
 40848  0070DC  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 40849  0070DE  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 40850  0070E0  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 40851  0070E2  501C               	movf	??__flash_partial_read,w,c
 40852  0070E4  1224               	iorwf	__flash_partial_read@address,f,c
 40853  0070E6  501D               	movf	??__flash_partial_read+1,w,c
 40854  0070E8  1225               	iorwf	__flash_partial_read@address+1,f,c
 40855  0070EA  501E               	movf	??__flash_partial_read+2,w,c
 40856  0070EC  1226               	iorwf	__flash_partial_read@address+2,f,c
 40857  0070EE  501F               	movf	??__flash_partial_read+3,w,c
 40858  0070F0  1227               	iorwf	__flash_partial_read@address+3,f,c
 40859                           
 40860                           ;flash.c: 319: command[0] = 0x03;
 40861  0070F2  0E03               	movlw	3
 40862  0070F4  6E20               	movwf	__flash_partial_read@command,c
 40863                           
 40864                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 40865  0070F6  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 40866                           
 40867                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 40868  0070FA  5025               	movf	__flash_partial_read@address+1,w,c
 40869  0070FC  6E22               	movwf	__flash_partial_read@command+2,c
 40870                           
 40871                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 40872  0070FE  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 40873                           
 40874                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 40875  007102  0E20               	movlw	low __flash_partial_read@command
 40876  007104  6E01               	movwf	spi_tx_rx@command,c
 40877  007106  0E00               	movlw	high __flash_partial_read@command
 40878  007108  6E02               	movwf	spi_tx_rx@command+1,c
 40879  00710A  0E00               	movlw	0
 40880  00710C  6E04               	movwf	spi_tx_rx@command_length+1,c
 40881  00710E  0E04               	movlw	4
 40882  007110  6E03               	movwf	spi_tx_rx@command_length,c
 40883  007112  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 40884  007116  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 40885  00711A  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 40886  00711E  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 40887  007122  ECE9  F034         	call	_spi_tx_rx	;wreg free
 40888  007126  0012               	return		;funcret
 40889  007128                     __end_of__flash_partial_read:
 40890                           	opt stack 0
 40891                           tosu	equ	0xFFF
 40892                           tosh	equ	0xFFE
 40893                           tosl	equ	0xFFD
 40894                           pclath	equ	0xFFA
 40895                           tblptru	equ	0xFF8
 40896                           tblptrh	equ	0xFF7
 40897                           tblptrl	equ	0xFF6
 40898                           tablat	equ	0xFF5
 40899                           prodh	equ	0xFF4
 40900                           prodl	equ	0xFF3
 40901                           intcon	equ	0xFF2
 40902                           intcon2	equ	0xFF1
 40903                           intcon3	equ	0xFF0
 40904                           indf0	equ	0xFEF
 40905                           postinc0	equ	0xFEE
 40906                           fsr0h	equ	0xFEA
 40907                           fsr0l	equ	0xFE9
 40908                           wreg	equ	0xFE8
 40909                           indf1	equ	0xFE7
 40910                           postdec1	equ	0xFE5
 40911                           plusw1	equ	0xFE3
 40912                           fsr1h	equ	0xFE2
 40913                           fsr1l	equ	0xFE1
 40914                           indf2	equ	0xFDF
 40915                           postinc2	equ	0xFDE
 40916                           postdec2	equ	0xFDD
 40917                           plusw2	equ	0xFDB
 40918                           fsr2h	equ	0xFDA
 40919                           fsr2l	equ	0xFD9
 40920                           status	equ	0xFD8
 40921                           
 40922 ;; *************** function __flash_is_busy *****************
 40923 ;; Defined at:
 40924 ;;		line 277 in file "flash.c"
 40925 ;; Parameters:    Size  Location     Type
 40926 ;;		None
 40927 ;; Auto vars:     Size  Location     Type
 40928 ;;  status          2   17[COMRAM] unsigned int 
 40929 ;; Return value:  Size  Location     Type
 40930 ;;                  1    wreg      unsigned char 
 40931 ;; Registers used:
 40932 ;;		wreg, status,2, status,0, cstack
 40933 ;; Tracked objects:
 40934 ;;		On entry : 0/0
 40935 ;;		On exit  : 0/0
 40936 ;;		Unchanged: 0/0
 40937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40942 ;;Total ram usage:        2 bytes
 40943 ;; Hardware stack levels used:    1
 40944 ;; Hardware stack levels required when called:    2
 40945 ;; This function calls:
 40946 ;;		__flash_get_status
 40947 ;;		__flash_wakeup
 40948 ;; This function is called by:
 40949 ;;		__flash_set_page_size
 40950 ;;		__flash_copy_page_to_buffer
 40951 ;;		__flash_compare_page_to_buffer
 40952 ;;		__flash_write_to_buffer
 40953 ;;		__flash_write_page_from_buffer
 40954 ;;		__flash_partial_read
 40955 ;;		_flash_is_busy
 40956 ;;		_flash_partial_write
 40957 ;;		__flash_erase_page
 40958 ;;		_flash_set_power_state
 40959 ;; This function uses a non-reentrant model
 40960 ;;
 40961                           
 40962                           	psect	text209
 40963  008728                     __ptext209:
 40964                           	opt stack 0
 40965  008728                     __flash_is_busy:
 40966                           	opt stack 25
 40967                           
 40968                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 40969                           
 40970                           ;incstack = 0
 40971  008728  0100               	movlb	0	; () banked
 40972  00872A  51DF               	movf	_power_state& (0+255),w,b
 40973  00872C  A4D8               	btfss	status,2,c
 40974                           
 40975                           ; BSR set to: 0
 40976                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 40977  00872E  EC54  F03E         	call	__flash_wakeup	;wreg free
 40978                           
 40979                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 40980  008732  EC15  F042         	call	__flash_get_status	;wreg free
 40981  008736  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 40982  00873A  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 40983                           
 40984                           ;flash.c: 291: if(status & 0b0000000010000000)
 40985  00873E  AE12               	btfss	__flash_is_busy@status,7,c
 40986  008740  D002               	goto	l1800
 40987                           
 40988                           ;flash.c: 292: {;flash.c: 294: return 0;
 40989  008742  0E00               	movlw	0
 40990                           
 40991                           ;flash.c: 295: }
 40992  008744  0012               	return	
 40993  008746                     l1800:
 40994                           
 40995                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 40996  008746  0E01               	movlw	1
 40997  008748  0012               	return	
 40998  00874A                     __end_of__flash_is_busy:
 40999                           	opt stack 0
 41000                           tosu	equ	0xFFF
 41001                           tosh	equ	0xFFE
 41002                           tosl	equ	0xFFD
 41003                           pclath	equ	0xFFA
 41004                           tblptru	equ	0xFF8
 41005                           tblptrh	equ	0xFF7
 41006                           tblptrl	equ	0xFF6
 41007                           tablat	equ	0xFF5
 41008                           prodh	equ	0xFF4
 41009                           prodl	equ	0xFF3
 41010                           intcon	equ	0xFF2
 41011                           intcon2	equ	0xFF1
 41012                           intcon3	equ	0xFF0
 41013                           indf0	equ	0xFEF
 41014                           postinc0	equ	0xFEE
 41015                           fsr0h	equ	0xFEA
 41016                           fsr0l	equ	0xFE9
 41017                           wreg	equ	0xFE8
 41018                           indf1	equ	0xFE7
 41019                           postdec1	equ	0xFE5
 41020                           plusw1	equ	0xFE3
 41021                           fsr1h	equ	0xFE2
 41022                           fsr1l	equ	0xFE1
 41023                           indf2	equ	0xFDF
 41024                           postinc2	equ	0xFDE
 41025                           postdec2	equ	0xFDD
 41026                           plusw2	equ	0xFDB
 41027                           fsr2h	equ	0xFDA
 41028                           fsr2l	equ	0xFD9
 41029                           status	equ	0xFD8
 41030                           
 41031 ;; *************** function __flash_wakeup *****************
 41032 ;; Defined at:
 41033 ;;		line 124 in file "flash.c"
 41034 ;; Parameters:    Size  Location     Type
 41035 ;;		None
 41036 ;; Auto vars:     Size  Location     Type
 41037 ;;  command         1    8[COMRAM] unsigned char 
 41038 ;; Return value:  Size  Location     Type
 41039 ;;                  1    wreg      void 
 41040 ;; Registers used:
 41041 ;;		wreg, status,2, status,0, cstack
 41042 ;; Tracked objects:
 41043 ;;		On entry : 0/0
 41044 ;;		On exit  : 0/0
 41045 ;;		Unchanged: 0/0
 41046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41050 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41051 ;;Total ram usage:        1 bytes
 41052 ;; Hardware stack levels used:    1
 41053 ;; Hardware stack levels required when called:    1
 41054 ;; This function calls:
 41055 ;;		_spi_tx
 41056 ;; This function is called by:
 41057 ;;		__flash_is_busy
 41058 ;;		_flash_set_power_state
 41059 ;; This function uses a non-reentrant model
 41060 ;;
 41061                           
 41062                           	psect	text210
 41063  007CA8                     __ptext210:
 41064                           	opt stack 0
 41065  007CA8                     __flash_wakeup:
 41066                           	opt stack 25
 41067                           
 41068                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 41069                           
 41070                           ;incstack = 0
 41071  007CA8  D021               	goto	l1749
 41072  007CAA                     
 41073                           ;flash.c: 131: command = 0xAB;
 41074  007CAA  0EAB               	movlw	171
 41075  007CAC  6E09               	movwf	__flash_wakeup@command,c
 41076                           
 41077                           ;flash.c: 132: spi_tx(&command, 1);
 41078  007CAE  0E09               	movlw	low __flash_wakeup@command
 41079  007CB0  6E01               	movwf	spi_tx@data,c
 41080  007CB2  0E00               	movlw	high __flash_wakeup@command
 41081  007CB4  6E02               	movwf	spi_tx@data+1,c
 41082  007CB6  0E00               	movlw	0
 41083  007CB8  6E04               	movwf	spi_tx@length+1,c
 41084  007CBA  0E01               	movlw	1
 41085  007CBC  6E03               	movwf	spi_tx@length,c
 41086  007CBE  EC51  F03D         	call	_spi_tx	;wreg free
 41087                           
 41088                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 41089  007CC2  0E17               	movlw	23
 41090  007CC4                     u12807:
 41091  007CC4  2EE8               	decfsz	wreg,f,c
 41092  007CC6  D7FE               	bra	u12807
 41093  007CC8  F000               	nop	
 41094                           
 41095                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 41096  007CCA  0E00               	movlw	0
 41097  007CCC  0100               	movlb	0	; () banked
 41098  007CCE  6FDF               	movwf	_power_state& (0+255),b
 41099                           
 41100                           ;flash.c: 135: break;
 41101  007CD0  0012               	return	
 41102  007CD2                     l1752:
 41103                           
 41104                           ; BSR set to: 0
 41105                           ;flash.c: 140: LATDbits.LD7 = 0;
 41106  007CD2  9E8C               	bcf	3980,7,c	;volatile
 41107                           
 41108                           ; BSR set to: 0
 41109                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 41110  007CD4  0E0D               	movlw	13
 41111  007CD6                     u12817:
 41112  007CD6  2EE8               	decfsz	wreg,f,c
 41113  007CD8  D7FE               	bra	u12817
 41114  007CDA  F000               	nop	
 41115                           
 41116                           ;flash.c: 142: LATDbits.LD7 = 1;
 41117  007CDC  8E8C               	bsf	3980,7,c	;volatile
 41118                           
 41119                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 41120  007CDE  0E50               	movlw	80
 41121  007CE0                     u12827:
 41122  007CE0  2EE8               	decfsz	wreg,f,c
 41123  007CE2  D7FE               	bra	u12827
 41124                           
 41125                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 41126  007CE4  0E00               	movlw	0
 41127  007CE6  0100               	movlb	0	; () banked
 41128  007CE8  6FDF               	movwf	_power_state& (0+255),b
 41129                           
 41130                           ; BSR set to: 0
 41131                           ;flash.c: 146: }
 41132                           
 41133                           ;flash.c: 145: break;
 41134  007CEA  0012               	return	
 41135  007CEC                     l1749:
 41136                           
 41137                           ; BSR set to: 0
 41138  007CEC  0100               	movlb	0	; () banked
 41139  007CEE  51DF               	movf	_power_state& (0+255),w,b
 41140                           
 41141                           ; Switch size 1, requested type "space"
 41142                           ; Number of cases is 2, Range of values is 1 to 2
 41143                           ; switch strategies available:
 41144                           ; Name         Instructions Cycles
 41145                           ; simple_byte            7     4 (average)
 41146                           ;	Chosen strategy is simple_byte
 41147  007CF0  0A01               	xorlw	1	; case 1
 41148  007CF2  B4D8               	btfsc	status,2,c
 41149  007CF4  D7DA               	goto	l1750
 41150  007CF6  0A03               	xorlw	3	; case 2
 41151  007CF8  A4D8               	btfss	status,2,c
 41152  007CFA  0012               	return	
 41153  007CFC  D7EA               	goto	l1752
 41154  007CFE                     __end_of__flash_wakeup:
 41155                           	opt stack 0
 41156                           tosu	equ	0xFFF
 41157                           tosh	equ	0xFFE
 41158                           tosl	equ	0xFFD
 41159                           pclath	equ	0xFFA
 41160                           tblptru	equ	0xFF8
 41161                           tblptrh	equ	0xFF7
 41162                           tblptrl	equ	0xFF6
 41163                           tablat	equ	0xFF5
 41164                           prodh	equ	0xFF4
 41165                           prodl	equ	0xFF3
 41166                           intcon	equ	0xFF2
 41167                           intcon2	equ	0xFF1
 41168                           intcon3	equ	0xFF0
 41169                           indf0	equ	0xFEF
 41170                           postinc0	equ	0xFEE
 41171                           fsr0h	equ	0xFEA
 41172                           fsr0l	equ	0xFE9
 41173                           wreg	equ	0xFE8
 41174                           indf1	equ	0xFE7
 41175                           postdec1	equ	0xFE5
 41176                           plusw1	equ	0xFE3
 41177                           fsr1h	equ	0xFE2
 41178                           fsr1l	equ	0xFE1
 41179                           indf2	equ	0xFDF
 41180                           postinc2	equ	0xFDE
 41181                           postdec2	equ	0xFDD
 41182                           plusw2	equ	0xFDB
 41183                           fsr2h	equ	0xFDA
 41184                           fsr2l	equ	0xFD9
 41185                           status	equ	0xFD8
 41186                           
 41187 ;; *************** function _spi_tx *****************
 41188 ;; Defined at:
 41189 ;;		line 348 in file "spi.c"
 41190 ;; Parameters:    Size  Location     Type
 41191 ;;  data            2    0[COMRAM] PTR unsigned char 
 41192 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 41193 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 41194 ;;  length          2    2[COMRAM] unsigned int 
 41195 ;; Auto vars:     Size  Location     Type
 41196 ;;		None
 41197 ;; Return value:  Size  Location     Type
 41198 ;;                  1    wreg      void 
 41199 ;; Registers used:
 41200 ;;		wreg, status,2, status,0
 41201 ;; Tracked objects:
 41202 ;;		On entry : 0/0
 41203 ;;		On exit  : 0/0
 41204 ;;		Unchanged: 0/0
 41205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41209 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41210 ;;Total ram usage:        8 bytes
 41211 ;; Hardware stack levels used:    1
 41212 ;; This function calls:
 41213 ;;		Nothing
 41214 ;; This function is called by:
 41215 ;;		__flash_set_page_size
 41216 ;;		__flash_wakeup
 41217 ;;		__flash_copy_page_to_buffer
 41218 ;;		__flash_compare_page_to_buffer
 41219 ;;		__flash_write_page_from_buffer
 41220 ;;		__flash_erase_page
 41221 ;;		_flash_set_power_state
 41222 ;; This function uses a non-reentrant model
 41223 ;;
 41224                           
 41225                           	psect	text211
 41226  007AA2                     __ptext211:
 41227                           	opt stack 0
 41228  007AA2                     _spi_tx:
 41229                           	opt stack 27
 41230                           
 41231                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 41232                           
 41233                           ; BSR set to: 0
 41234                           ;incstack = 0
 41235  007AA2  9E88               	bcf	3976,7,c	;volatile
 41236                           
 41237                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 41238  007AA4  9C88               	bcf	3976,6,c	;volatile
 41239                           
 41240                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 41241  007AA6  8A88               	bsf	3976,5,c	;volatile
 41242                           
 41243                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 41244  007AA8  9888               	bcf	3976,4,c	;volatile
 41245                           
 41246                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 41247  007AAA  9688               	bcf	3976,3,c	;volatile
 41248                           
 41249                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 41250  007AAC  8488               	bsf	3976,2,c	;volatile
 41251                           
 41252                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 41253  007AAE  9288               	bcf	3976,1,c	;volatile
 41254                           
 41255                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 41256  007AB0  9886               	bcf	3974,4,c	;volatile
 41257  007AB2  9A86               	bcf	3974,5,c	;volatile
 41258  007AB4  9C86               	bcf	3974,6,c	;volatile
 41259  007AB6  9E86               	bcf	3974,7,c	;volatile
 41260                           
 41261                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 41262  007AB8  9086               	bcf	3974,0,c	;volatile
 41263  007ABA  9286               	bcf	3974,1,c	;volatile
 41264  007ABC  9486               	bcf	3974,2,c	;volatile
 41265  007ABE  9686               	bcf	3974,3,c	;volatile
 41266                           
 41267                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 41268  007AC0  5002               	movf	spi_tx@data+1,w,c
 41269  007AC2  6E6A               	movwf	3946,c	;volatile
 41270                           
 41271                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 41272  007AC4  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 41273                           
 41274                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 41275  007AC8  0EFF               	movlw	255
 41276  007ACA  6E05               	movwf	??_spi_tx& (0+255),c
 41277  007ACC  0EFF               	movlw	255
 41278  007ACE  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 41279  007AD0  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 41280  007AD4  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 41281  007AD8  5005               	movf	??_spi_tx,w,c
 41282  007ADA  2607               	addwf	??_spi_tx+2,f,c
 41283  007ADC  5006               	movf	??_spi_tx+1,w,c
 41284  007ADE  2208               	addwfc	??_spi_tx+3,f,c
 41285  007AE0  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 41286  007AE4  6A08               	clrf	??_spi_tx+3,c
 41287  007AE6  5007               	movf	??_spi_tx+2,w,c
 41288  007AE8  6E66               	movwf	3942,c	;volatile
 41289                           
 41290                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 41291  007AEA  0403               	decf	spi_tx@length,w,c
 41292  007AEC  6E67               	movwf	3943,c	;volatile
 41293                           
 41294                           ;spi.c: 376: LATDbits.LD7 = 0;
 41295  007AEE  9E8C               	bcf	3980,7,c	;volatile
 41296                           
 41297                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 41298  007AF0  8088               	bsf	3976,0,c	;volatile
 41299  007AF2  B088               	btfsc	3976,0,c	;volatile
 41300  007AF4  D7FE               	goto	l2891
 41301                           
 41302                           ;spi.c: 379: LATDbits.LD7 = 1;
 41303  007AF6  8E8C               	bsf	3980,7,c	;volatile
 41304  007AF8  0012               	return		;funcret
 41305  007AFA                     __end_of_spi_tx:
 41306                           	opt stack 0
 41307                           tosu	equ	0xFFF
 41308                           tosh	equ	0xFFE
 41309                           tosl	equ	0xFFD
 41310                           pclath	equ	0xFFA
 41311                           tblptru	equ	0xFF8
 41312                           tblptrh	equ	0xFF7
 41313                           tblptrl	equ	0xFF6
 41314                           tablat	equ	0xFF5
 41315                           prodh	equ	0xFF4
 41316                           prodl	equ	0xFF3
 41317                           intcon	equ	0xFF2
 41318                           intcon2	equ	0xFF1
 41319                           intcon3	equ	0xFF0
 41320                           indf0	equ	0xFEF
 41321                           postinc0	equ	0xFEE
 41322                           fsr0h	equ	0xFEA
 41323                           fsr0l	equ	0xFE9
 41324                           wreg	equ	0xFE8
 41325                           indf1	equ	0xFE7
 41326                           postdec1	equ	0xFE5
 41327                           plusw1	equ	0xFE3
 41328                           fsr1h	equ	0xFE2
 41329                           fsr1l	equ	0xFE1
 41330                           indf2	equ	0xFDF
 41331                           postinc2	equ	0xFDE
 41332                           postdec2	equ	0xFDD
 41333                           plusw2	equ	0xFDB
 41334                           fsr2h	equ	0xFDA
 41335                           fsr2l	equ	0xFD9
 41336                           status	equ	0xFD8
 41337                           
 41338 ;; *************** function __flash_get_status *****************
 41339 ;; Defined at:
 41340 ;;		line 113 in file "flash.c"
 41341 ;; Parameters:    Size  Location     Type
 41342 ;;		None
 41343 ;; Auto vars:     Size  Location     Type
 41344 ;;  status          2   15[COMRAM] unsigned int 
 41345 ;;  command         1   14[COMRAM] unsigned char 
 41346 ;; Return value:  Size  Location     Type
 41347 ;;                  2   12[COMRAM] unsigned int 
 41348 ;; Registers used:
 41349 ;;		wreg, status,2, status,0, cstack
 41350 ;; Tracked objects:
 41351 ;;		On entry : 0/0
 41352 ;;		On exit  : 0/0
 41353 ;;		Unchanged: 0/0
 41354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41356 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41358 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41359 ;;Total ram usage:        5 bytes
 41360 ;; Hardware stack levels used:    1
 41361 ;; Hardware stack levels required when called:    1
 41362 ;; This function calls:
 41363 ;;		_spi_tx_rx
 41364 ;; This function is called by:
 41365 ;;		__flash_compare_page_to_buffer
 41366 ;;		__flash_is_busy
 41367 ;; This function uses a non-reentrant model
 41368 ;;
 41369                           
 41370                           	psect	text212
 41371  00842A                     __ptext212:
 41372                           	opt stack 0
 41373  00842A                     __flash_get_status:
 41374                           	opt stack 25
 41375                           
 41376                           ;flash.c: 117: uint8_t command = 0xD7;
 41377                           
 41378                           ;incstack = 0
 41379  00842A  0ED7               	movlw	215
 41380  00842C  6E0F               	movwf	__flash_get_status@command,c
 41381                           
 41382                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 41383  00842E  0E0F               	movlw	low __flash_get_status@command
 41384  008430  6E01               	movwf	spi_tx_rx@command,c
 41385  008432  0E00               	movlw	high __flash_get_status@command
 41386  008434  6E02               	movwf	spi_tx_rx@command+1,c
 41387  008436  0E00               	movlw	0
 41388  008438  6E04               	movwf	spi_tx_rx@command_length+1,c
 41389  00843A  0E01               	movlw	1
 41390  00843C  6E03               	movwf	spi_tx_rx@command_length,c
 41391  00843E  0E10               	movlw	low __flash_get_status@status
 41392  008440  6E05               	movwf	spi_tx_rx@data,c
 41393  008442  0E00               	movlw	high __flash_get_status@status
 41394  008444  6E06               	movwf	spi_tx_rx@data+1,c
 41395  008446  0E00               	movlw	0
 41396  008448  6E08               	movwf	spi_tx_rx@data_length+1,c
 41397  00844A  0E02               	movlw	2
 41398  00844C  6E07               	movwf	spi_tx_rx@data_length,c
 41399  00844E  ECE9  F034         	call	_spi_tx_rx	;wreg free
 41400                           
 41401                           ;flash.c: 120: return status;
 41402  008452  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 41403  008456  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 41404  00845A  0012               	return	
 41405  00845C                     __end_of__flash_get_status:
 41406                           	opt stack 0
 41407                           tosu	equ	0xFFF
 41408                           tosh	equ	0xFFE
 41409                           tosl	equ	0xFFD
 41410                           pclath	equ	0xFFA
 41411                           tblptru	equ	0xFF8
 41412                           tblptrh	equ	0xFF7
 41413                           tblptrl	equ	0xFF6
 41414                           tablat	equ	0xFF5
 41415                           prodh	equ	0xFF4
 41416                           prodl	equ	0xFF3
 41417                           intcon	equ	0xFF2
 41418                           intcon2	equ	0xFF1
 41419                           intcon3	equ	0xFF0
 41420                           indf0	equ	0xFEF
 41421                           postinc0	equ	0xFEE
 41422                           fsr0h	equ	0xFEA
 41423                           fsr0l	equ	0xFE9
 41424                           wreg	equ	0xFE8
 41425                           indf1	equ	0xFE7
 41426                           postdec1	equ	0xFE5
 41427                           plusw1	equ	0xFE3
 41428                           fsr1h	equ	0xFE2
 41429                           fsr1l	equ	0xFE1
 41430                           indf2	equ	0xFDF
 41431                           postinc2	equ	0xFDE
 41432                           postdec2	equ	0xFDD
 41433                           plusw2	equ	0xFDB
 41434                           fsr2h	equ	0xFDA
 41435                           fsr2l	equ	0xFD9
 41436                           status	equ	0xFD8
 41437                           
 41438 ;; *************** function _spi_tx_rx *****************
 41439 ;; Defined at:
 41440 ;;		line 439 in file "spi.c"
 41441 ;; Parameters:    Size  Location     Type
 41442 ;;  command         2    0[COMRAM] PTR unsigned char 
 41443 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 41444 ;;  command_leng    2    2[COMRAM] unsigned int 
 41445 ;;  data            2    4[COMRAM] PTR unsigned char 
 41446 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 41447 ;;		 -> buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 41448 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 41449 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 41450 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 41451 ;;		 -> RAM(3759), 
 41452 ;;  data_length     2    6[COMRAM] unsigned int 
 41453 ;; Auto vars:     Size  Location     Type
 41454 ;;		None
 41455 ;; Return value:  Size  Location     Type
 41456 ;;                  1    wreg      void 
 41457 ;; Registers used:
 41458 ;;		wreg, status,2, status,0
 41459 ;; Tracked objects:
 41460 ;;		On entry : 0/0
 41461 ;;		On exit  : 0/0
 41462 ;;		Unchanged: 0/0
 41463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41464 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41466 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41467 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41468 ;;Total ram usage:       12 bytes
 41469 ;; Hardware stack levels used:    1
 41470 ;; This function calls:
 41471 ;;		Nothing
 41472 ;; This function is called by:
 41473 ;;		__flash_get_status
 41474 ;;		__flash_partial_read
 41475 ;; This function uses a non-reentrant model
 41476 ;;
 41477                           
 41478                           	psect	text213
 41479  0069D2                     __ptext213:
 41480                           	opt stack 0
 41481  0069D2                     _spi_tx_rx:
 41482                           	opt stack 25
 41483                           
 41484                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 41485                           
 41486                           ;incstack = 0
 41487  0069D2  9E88               	bcf	3976,7,c	;volatile
 41488                           
 41489                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 41490  0069D4  9C88               	bcf	3976,6,c	;volatile
 41491                           
 41492                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 41493  0069D6  8A88               	bsf	3976,5,c	;volatile
 41494                           
 41495                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 41496  0069D8  9888               	bcf	3976,4,c	;volatile
 41497                           
 41498                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 41499  0069DA  9688               	bcf	3976,3,c	;volatile
 41500                           
 41501                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 41502  0069DC  8488               	bsf	3976,2,c	;volatile
 41503                           
 41504                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 41505  0069DE  9288               	bcf	3976,1,c	;volatile
 41506                           
 41507                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 41508  0069E0  9886               	bcf	3974,4,c	;volatile
 41509  0069E2  9A86               	bcf	3974,5,c	;volatile
 41510  0069E4  9C86               	bcf	3974,6,c	;volatile
 41511  0069E6  9E86               	bcf	3974,7,c	;volatile
 41512                           
 41513                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 41514  0069E8  9086               	bcf	3974,0,c	;volatile
 41515  0069EA  9286               	bcf	3974,1,c	;volatile
 41516  0069EC  9486               	bcf	3974,2,c	;volatile
 41517  0069EE  9686               	bcf	3974,3,c	;volatile
 41518                           
 41519                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 41520  0069F0  5002               	movf	spi_tx_rx@command+1,w,c
 41521  0069F2  6E6A               	movwf	3946,c	;volatile
 41522                           
 41523                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 41524  0069F4  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 41525                           
 41526                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 41527  0069F8  0EFF               	movlw	255
 41528  0069FA  6E09               	movwf	??_spi_tx_rx& (0+255),c
 41529  0069FC  0EFF               	movlw	255
 41530  0069FE  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 41531  006A00  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 41532  006A04  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 41533  006A08  5009               	movf	??_spi_tx_rx,w,c
 41534  006A0A  260B               	addwf	??_spi_tx_rx+2,f,c
 41535  006A0C  500A               	movf	??_spi_tx_rx+1,w,c
 41536  006A0E  220C               	addwfc	??_spi_tx_rx+3,f,c
 41537  006A10  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 41538  006A14  6A0C               	clrf	??_spi_tx_rx+3,c
 41539  006A16  500B               	movf	??_spi_tx_rx+2,w,c
 41540  006A18  6E66               	movwf	3942,c	;volatile
 41541                           
 41542                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 41543  006A1A  0403               	decf	spi_tx_rx@command_length,w,c
 41544  006A1C  6E67               	movwf	3943,c	;volatile
 41545                           
 41546                           ;spi.c: 467: LATDbits.LD7 = 0;
 41547  006A1E  9E8C               	bcf	3980,7,c	;volatile
 41548                           
 41549                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 41550  006A20  8088               	bsf	3976,0,c	;volatile
 41551  006A22  B088               	btfsc	3976,0,c	;volatile
 41552  006A24  D7FE               	goto	l2906
 41553                           
 41554                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 41555  006A26  9A88               	bcf	3976,5,c	;volatile
 41556                           
 41557                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 41558  006A28  8888               	bsf	3976,4,c	;volatile
 41559                           
 41560                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 41561  006A2A  9688               	bcf	3976,3,c	;volatile
 41562                           
 41563                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 41564  006A2C  9488               	bcf	3976,2,c	;volatile
 41565                           
 41566                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 41567  006A2E  5006               	movf	spi_tx_rx@data+1,w,c
 41568  006A30  6E68               	movwf	3944,c	;volatile
 41569                           
 41570                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 41571  006A32  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 41572                           
 41573                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 41574  006A36  0EFF               	movlw	255
 41575  006A38  6E09               	movwf	??_spi_tx_rx& (0+255),c
 41576  006A3A  0EFF               	movlw	255
 41577  006A3C  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 41578  006A3E  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 41579  006A42  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 41580  006A46  5009               	movf	??_spi_tx_rx,w,c
 41581  006A48  260B               	addwf	??_spi_tx_rx+2,f,c
 41582  006A4A  500A               	movf	??_spi_tx_rx+1,w,c
 41583  006A4C  220C               	addwfc	??_spi_tx_rx+3,f,c
 41584  006A4E  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 41585  006A52  6A0C               	clrf	??_spi_tx_rx+3,c
 41586  006A54  500B               	movf	??_spi_tx_rx+2,w,c
 41587  006A56  6E66               	movwf	3942,c	;volatile
 41588                           
 41589                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 41590  006A58  0407               	decf	spi_tx_rx@data_length,w,c
 41591  006A5A  6E67               	movwf	3943,c	;volatile
 41592                           
 41593                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 41594  006A5C  8088               	bsf	3976,0,c	;volatile
 41595  006A5E  B088               	btfsc	3976,0,c	;volatile
 41596  006A60  D7FE               	goto	l2909
 41597                           
 41598                           ;spi.c: 494: LATDbits.LD7 = 1;
 41599  006A62  8E8C               	bsf	3980,7,c	;volatile
 41600  006A64  0012               	return		;funcret
 41601  006A66                     __end_of_spi_tx_rx:
 41602                           	opt stack 0
 41603                           tosu	equ	0xFFF
 41604                           tosh	equ	0xFFE
 41605                           tosl	equ	0xFFD
 41606                           pclath	equ	0xFFA
 41607                           tblptru	equ	0xFF8
 41608                           tblptrh	equ	0xFF7
 41609                           tblptrl	equ	0xFF6
 41610                           tablat	equ	0xFF5
 41611                           prodh	equ	0xFF4
 41612                           prodl	equ	0xFF3
 41613                           intcon	equ	0xFF2
 41614                           intcon2	equ	0xFF1
 41615                           intcon3	equ	0xFF0
 41616                           indf0	equ	0xFEF
 41617                           postinc0	equ	0xFEE
 41618                           fsr0h	equ	0xFEA
 41619                           fsr0l	equ	0xFE9
 41620                           wreg	equ	0xFE8
 41621                           indf1	equ	0xFE7
 41622                           postdec1	equ	0xFE5
 41623                           plusw1	equ	0xFE3
 41624                           fsr1h	equ	0xFE2
 41625                           fsr1l	equ	0xFE1
 41626                           indf2	equ	0xFDF
 41627                           postinc2	equ	0xFDE
 41628                           postdec2	equ	0xFDD
 41629                           plusw2	equ	0xFDB
 41630                           fsr2h	equ	0xFDA
 41631                           fsr2l	equ	0xFD9
 41632                           status	equ	0xFD8
 41633                           
 41634 ;; *************** function _USBTransferOnePacket *****************
 41635 ;; Defined at:
 41636 ;;		line 995 in file "usb_device.c"
 41637 ;; Parameters:    Size  Location     Type
 41638 ;;  ep              1    wreg     unsigned char 
 41639 ;;  dir             1    0[COMRAM] unsigned char 
 41640 ;;  data            2    1[COMRAM] PTR unsigned char 
 41641 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 41642 ;;		 -> msd_cbw(31), NULL(0), 
 41643 ;;  len             1    3[COMRAM] unsigned char 
 41644 ;; Auto vars:     Size  Location     Type
 41645 ;;  ep              1    8[COMRAM] unsigned char 
 41646 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 41647 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 41648 ;; Return value:  Size  Location     Type
 41649 ;;                  2    0[COMRAM] PTR void 
 41650 ;; Registers used:
 41651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41652 ;; Tracked objects:
 41653 ;;		On entry : 0/0
 41654 ;;		On exit  : 0/0
 41655 ;;		Unchanged: 0/0
 41656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41658 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41660 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41661 ;;Total ram usage:       11 bytes
 41662 ;; Hardware stack levels used:    1
 41663 ;; This function calls:
 41664 ;;		Nothing
 41665 ;; This function is called by:
 41666 ;;		_USBMSDInit
 41667 ;;		_USBCheckMSDRequest
 41668 ;;		_MSDTasks
 41669 ;;		_MSDProcessCommandMediaPresent
 41670 ;;		_MSDReadHandler
 41671 ;;		_MSDWriteHandler
 41672 ;;		_MSDTransferTerminated
 41673 ;;		_APP_DeviceCustomHIDInitialize
 41674 ;;		_APP_DeviceCustomHIDTasks
 41675 ;; This function uses a non-reentrant model
 41676 ;;
 41677                           
 41678                           	psect	text214
 41679  004DD8                     __ptext214:
 41680                           	opt stack 0
 41681  004DD8                     _USBTransferOnePacket:
 41682                           	opt stack 27
 41683                           
 41684                           ;incstack = 0
 41685                           ;USBTransferOnePacket@ep stored from wreg
 41686  004DD8  6E09               	movwf	USBTransferOnePacket@ep,c
 41687                           
 41688                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 41689  004DDA  5001               	movf	USBTransferOnePacket@dir,w,c
 41690  004DDC  B4D8               	btfsc	status,2,c
 41691  004DDE  D007               	goto	l183
 41692                           
 41693                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 41694  004DE0  5009               	movf	USBTransferOnePacket@ep,w,c
 41695  004DE2  0D02               	mullw	2
 41696  004DE4  0EC5               	movlw	low _pBDTEntryIn
 41697  004DE6  24F3               	addwf	prodl,w,c
 41698  004DE8  6ED9               	movwf	fsr2l,c
 41699  004DEA  0E00               	movlw	high _pBDTEntryIn
 41700  004DEC  D006               	goto	L41
 41701  004DEE                     l183:
 41702                           
 41703                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 41704  004DEE  5009               	movf	USBTransferOnePacket@ep,w,c
 41705  004DF0  0D02               	mullw	2
 41706  004DF2  0E40               	movlw	low _pBDTEntryOut
 41707  004DF4  24F3               	addwf	prodl,w,c
 41708  004DF6  6ED9               	movwf	fsr2l,c
 41709  004DF8  0E01               	movlw	high _pBDTEntryOut
 41710  004DFA                     L41:
 41711  004DFA  20F4               	addwfc	prodh,w,c
 41712  004DFC  6EDA               	movwf	fsr2h,c
 41713  004DFE  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 41714  004E02  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 41715                           
 41716                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 41717  004E06  500A               	movf	USBTransferOnePacket@handle,w,c
 41718  004E08  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 41719  004E0A  A4D8               	btfss	status,2,c
 41720  004E0C  D005               	goto	l185
 41721                           
 41722                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 41723  004E0E  0E00               	movlw	0
 41724  004E10  6E01               	movwf	?_USBTransferOnePacket,c
 41725  004E12  0E00               	movlw	0
 41726  004E14  6E02               	movwf	?_USBTransferOnePacket+1,c
 41727  004E16  0012               	return	
 41728  004E18                     l185:
 41729                           
 41730                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 41731  004E18  EE20 F002          	lfsr	2,2
 41732  004E1C  500A               	movf	USBTransferOnePacket@handle,w,c
 41733  004E1E  26D9               	addwf	fsr2l,f,c
 41734  004E20  500B               	movf	USBTransferOnePacket@handle+1,w,c
 41735  004E22  22DA               	addwfc	fsr2h,f,c
 41736  004E24  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 41737  004E28  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 41738                           
 41739                           ;usb_device.c: 1030: handle->CNT = len;
 41740  004E2C  EE20 F001          	lfsr	2,1
 41741  004E30  500A               	movf	USBTransferOnePacket@handle,w,c
 41742  004E32  26D9               	addwf	fsr2l,f,c
 41743  004E34  500B               	movf	USBTransferOnePacket@handle+1,w,c
 41744  004E36  22DA               	addwfc	fsr2h,f,c
 41745  004E38  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 41746                           
 41747                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 41748  004E3C  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 41749  004E40  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 41750  004E44  0E40               	movlw	64
 41751  004E46  16DF               	andwf	indf2,f,c
 41752                           
 41753                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 41754  004E48  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 41755  004E4C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 41756  004E50  0E00               	movlw	0
 41757  004E52  86DB               	bsf	plusw2,3,c
 41758                           
 41759                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 41760  004E54  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 41761  004E58  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 41762  004E5C  0E00               	movlw	0
 41763  004E5E  8EDB               	bsf	plusw2,7,c
 41764                           
 41765                           ;usb_device.c: 1036: if(dir != 0)
 41766  004E60  5001               	movf	USBTransferOnePacket@dir,w,c
 41767  004E62  B4D8               	btfsc	status,2,c
 41768  004E64  D018               	goto	l187
 41769                           
 41770                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 41771  004E66  5009               	movf	USBTransferOnePacket@ep,w,c
 41772  004E68  0D02               	mullw	2
 41773  004E6A  0EC5               	movlw	low _pBDTEntryIn
 41774  004E6C  24F3               	addwf	prodl,w,c
 41775  004E6E  6ED9               	movwf	fsr2l,c
 41776  004E70  0E00               	movlw	high _pBDTEntryIn
 41777  004E72  20F4               	addwfc	prodh,w,c
 41778  004E74  6EDA               	movwf	fsr2h,c
 41779  004E76  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 41780  004E7A  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 41781  004E7E  0E04               	movlw	4
 41782  004E80  1805               	xorwf	??_USBTransferOnePacket,w,c
 41783  004E82  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 41784  004E84  5006               	movf	??_USBTransferOnePacket+1,w,c
 41785  004E86  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 41786  004E88  5009               	movf	USBTransferOnePacket@ep,w,c
 41787  004E8A  0D02               	mullw	2
 41788  004E8C  0EC5               	movlw	low _pBDTEntryIn
 41789  004E8E  24F3               	addwf	prodl,w,c
 41790  004E90  6ED9               	movwf	fsr2l,c
 41791  004E92  0E00               	movlw	high _pBDTEntryIn
 41792  004E94  D017               	goto	L42
 41793  004E96                     l187:
 41794                           
 41795                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 41796  004E96  5009               	movf	USBTransferOnePacket@ep,w,c
 41797  004E98  0D02               	mullw	2
 41798  004E9A  0E40               	movlw	low _pBDTEntryOut
 41799  004E9C  24F3               	addwf	prodl,w,c
 41800  004E9E  6ED9               	movwf	fsr2l,c
 41801  004EA0  0E01               	movlw	high _pBDTEntryOut
 41802  004EA2  20F4               	addwfc	prodh,w,c
 41803  004EA4  6EDA               	movwf	fsr2h,c
 41804  004EA6  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 41805  004EAA  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 41806  004EAE  0E04               	movlw	4
 41807  004EB0  1805               	xorwf	??_USBTransferOnePacket,w,c
 41808  004EB2  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 41809  004EB4  5006               	movf	??_USBTransferOnePacket+1,w,c
 41810  004EB6  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 41811  004EB8  5009               	movf	USBTransferOnePacket@ep,w,c
 41812  004EBA  0D02               	mullw	2
 41813  004EBC  0E40               	movlw	low _pBDTEntryOut
 41814  004EBE  24F3               	addwf	prodl,w,c
 41815  004EC0  6ED9               	movwf	fsr2l,c
 41816  004EC2  0E01               	movlw	high _pBDTEntryOut
 41817  004EC4                     L42:
 41818  004EC4  20F4               	addwfc	prodh,w,c
 41819  004EC6  6EDA               	movwf	fsr2h,c
 41820  004EC8  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 41821  004ECC  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 41822                           
 41823                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 41824  004ED0  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 41825  004ED4  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 41826  004ED8  0012               	return	
 41827  004EDA                     __end_of_USBTransferOnePacket:
 41828                           	opt stack 0
 41829                           tosu	equ	0xFFF
 41830                           tosh	equ	0xFFE
 41831                           tosl	equ	0xFFD
 41832                           pclath	equ	0xFFA
 41833                           tblptru	equ	0xFF8
 41834                           tblptrh	equ	0xFF7
 41835                           tblptrl	equ	0xFF6
 41836                           tablat	equ	0xFF5
 41837                           prodh	equ	0xFF4
 41838                           prodl	equ	0xFF3
 41839                           intcon	equ	0xFF2
 41840                           intcon2	equ	0xFF1
 41841                           intcon3	equ	0xFF0
 41842                           indf0	equ	0xFEF
 41843                           postinc0	equ	0xFEE
 41844                           fsr0h	equ	0xFEA
 41845                           fsr0l	equ	0xFE9
 41846                           wreg	equ	0xFE8
 41847                           indf1	equ	0xFE7
 41848                           postdec1	equ	0xFE5
 41849                           plusw1	equ	0xFE3
 41850                           fsr1h	equ	0xFE2
 41851                           fsr1l	equ	0xFE1
 41852                           indf2	equ	0xFDF
 41853                           postinc2	equ	0xFDE
 41854                           postdec2	equ	0xFDD
 41855                           plusw2	equ	0xFDB
 41856                           fsr2h	equ	0xFDA
 41857                           fsr2l	equ	0xFD9
 41858                           status	equ	0xFD8
 41859                           tosu	equ	0xFFF
 41860                           tosh	equ	0xFFE
 41861                           tosl	equ	0xFFD
 41862                           pclath	equ	0xFFA
 41863                           tblptru	equ	0xFF8
 41864                           tblptrh	equ	0xFF7
 41865                           tblptrl	equ	0xFF6
 41866                           tablat	equ	0xFF5
 41867                           prodh	equ	0xFF4
 41868                           prodl	equ	0xFF3
 41869                           intcon	equ	0xFF2
 41870                           intcon2	equ	0xFF1
 41871                           intcon3	equ	0xFF0
 41872                           indf0	equ	0xFEF
 41873                           postinc0	equ	0xFEE
 41874                           fsr0h	equ	0xFEA
 41875                           fsr0l	equ	0xFE9
 41876                           wreg	equ	0xFE8
 41877                           indf1	equ	0xFE7
 41878                           postdec1	equ	0xFE5
 41879                           plusw1	equ	0xFE3
 41880                           fsr1h	equ	0xFE2
 41881                           fsr1l	equ	0xFE1
 41882                           indf2	equ	0xFDF
 41883                           postinc2	equ	0xFDE
 41884                           postdec2	equ	0xFDD
 41885                           plusw2	equ	0xFDB
 41886                           fsr2h	equ	0xFDA
 41887                           fsr2l	equ	0xFD9
 41888                           status	equ	0xFD8
 41889                           
 41890                           	psect	text215
 41891  000000                     __ptext215:
 41892                           	opt stack 0
 41893                           tosu	equ	0xFFF
 41894                           tosh	equ	0xFFE
 41895                           tosl	equ	0xFFD
 41896                           pclath	equ	0xFFA
 41897                           tblptru	equ	0xFF8
 41898                           tblptrh	equ	0xFF7
 41899                           tblptrl	equ	0xFF6
 41900                           tablat	equ	0xFF5
 41901                           prodh	equ	0xFF4
 41902                           prodl	equ	0xFF3
 41903                           intcon	equ	0xFF2
 41904                           intcon2	equ	0xFF1
 41905                           intcon3	equ	0xFF0
 41906                           indf0	equ	0xFEF
 41907                           postinc0	equ	0xFEE
 41908                           fsr0h	equ	0xFEA
 41909                           fsr0l	equ	0xFE9
 41910                           wreg	equ	0xFE8
 41911                           indf1	equ	0xFE7
 41912                           postdec1	equ	0xFE5
 41913                           plusw1	equ	0xFE3
 41914                           fsr1h	equ	0xFE2
 41915                           fsr1l	equ	0xFE1
 41916                           indf2	equ	0xFDF
 41917                           postinc2	equ	0xFDE
 41918                           postdec2	equ	0xFDD
 41919                           plusw2	equ	0xFDB
 41920                           fsr2h	equ	0xFDA
 41921                           fsr2l	equ	0xFD9
 41922                           status	equ	0xFD8
 41923                           
 41924                           	psect	rparam
 41925  0000                     tosu	equ	0xFFF
 41926                           tosh	equ	0xFFE
 41927                           tosl	equ	0xFFD
 41928                           pclath	equ	0xFFA
 41929                           tblptru	equ	0xFF8
 41930                           tblptrh	equ	0xFF7
 41931                           tblptrl	equ	0xFF6
 41932                           tablat	equ	0xFF5
 41933                           prodh	equ	0xFF4
 41934                           prodl	equ	0xFF3
 41935                           intcon	equ	0xFF2
 41936                           intcon2	equ	0xFF1
 41937                           intcon3	equ	0xFF0
 41938                           indf0	equ	0xFEF
 41939                           postinc0	equ	0xFEE
 41940                           fsr0h	equ	0xFEA
 41941                           fsr0l	equ	0xFE9
 41942                           wreg	equ	0xFE8
 41943                           indf1	equ	0xFE7
 41944                           postdec1	equ	0xFE5
 41945                           plusw1	equ	0xFE3
 41946                           fsr1h	equ	0xFE2
 41947                           fsr1l	equ	0xFE1
 41948                           indf2	equ	0xFDF
 41949                           postinc2	equ	0xFDE
 41950                           postdec2	equ	0xFDD
 41951                           plusw2	equ	0xFDB
 41952                           fsr2h	equ	0xFDA
 41953                           fsr2l	equ	0xFD9
 41954                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     89     160
    BANK1           256      0     254
    BANK2           256      0     208
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), 
		 -> _write_fat@value(COMRAM[2]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK1[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK1[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), 
		 -> ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), 
		 -> _write_fat@value(COMRAM[2]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_parse
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_parse
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__read_fat
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_modify
    __parse_format_drive->_fat_format
    _fat_format->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __parse_file_resize->_fat_resize_file
    _fat_resize_file->_fat_get_file_information
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    _fat_modify_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1829279
                                             79 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   28085
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  111633
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   48603
                                              0 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   45594
                                              0 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  632765
                                             75 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   80800
                                             93 COMRAM     1     1      0
                                             71 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   45808
                                             51 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  51    41     10   37009
                                              0 BANK0     51    41     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             38    24     14   19727
                                             55 COMRAM    38    24     14
                          __read_fat
               __sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2777
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   17139
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  548652
                                             94 COMRAM     1     1      0
                                             51 BANK0      5     2      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  461418
                                             91 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  3     1      2   16569
                                             38 COMRAM     3     1      2
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                   7     5      2   89421
                                             70 COMRAM     7     5      2
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     55    51      4   89127
                                             62 COMRAM     8     4      4
                                              0 BANK0     47    47      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39872
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   39651
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   9     7      2   49032
                                             82 COMRAM     9     7      2
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     65    57      8   48649
                                             62 COMRAM    20    12      8
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   70685
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   70508
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21996
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   7     5      2   83979
                                             79 COMRAM     7     5      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   83663
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  111565
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  111322
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2   16762
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   22351
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   23598
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21882
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8705
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8551
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_page_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_page_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D0       9       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34D      31        0.0%
DATA                 0      0     94D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Sep 09 14:32:54 2018

                          __end_of_fat_read_from_file 69D2  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 84E6  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 84BA  
                                 __system_timer0_init 874A  
                                                  _os 00B9  
                                       _USBDeviceInit 407E  
                                  _USBCheckHIDRequest 528A  
                __bootloader_verify_file@return_value 0089  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 0089  
                                     _fat_resize_file 21E4  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5C24  
                                                 l210 66A6  
                                                 l220 4F02  
                                                 l141 40EC  
                                                 l214 690C  
                                                 l310 61A4  
                                                 l150 3974  
                                                 l143 4128  
                                                 l303 8252  
                                                 l151 396A  
                                                 l320 77DC  
                                                 l208 668C  
                                                 l224 4F84  
                                                 l304 8250  
                                                 l152 3968  
                                                 l241 5898  
                                                 l233 57EC  
                                                 l161 39F0  
                                                 l242 5860  
                                                 l330 5BCE  
                                                 l322 7826  
                                                 l235 57F6  
                                                 l331 5B94  
                                                 l251 4644  
                                                 l411 52D8  
                                                 l219 4F5A  
                                                 l139 40C4  
                                                 l171 3A80  
                                                 l163 3A06  
                                                 l155 3990  
                                                 l252 462A  
                                                 l412 52A6  
                                                 l260 51F2  
                                                 l164 3A12  
                                                 l156 39A0  
                                                 l237 5858  
                                                 l333 5BB4  
                                                 l309 61AA  
                                                 l173 3AA4  
                                                 l165 3A3A  
                                                 l157 39A8  
                                                 l238 5820  
                                                 l422 52FA  
                                                 l414 52EA  
                         __end_of_USBStdGetDscHandler 4450  
                                                 l262 5266  
                                                 l350 5106  
                                                 l166 3A46  
                                                 l158 39BE  
                                                 l183 4DEE  
                                                 l191 4A1E  
                                                 l423 5312  
                                                 l415 52C4  
                                                 l271 433C  
                                                 l343 5164  
                                                 l175 3AC0  
                                                 l159 39CA  
                                                 l328 5B4C  
                                                 l248 45CE  
                                                 l424 531E  
                                                 l360 186C  
                                                 l272 43CA  
                                                 l352 510C  
                                                 l344 50D6  
                                                 l168 3A58  
                                                 l185 4E18  
                                                 l329 5B52  
                                                 l249 45AC  
                                                 l521 4CC2  
                                                 l425 5336  
                                                 l361 1872  
                                                 l281 623A  
                                                 l353 512A  
                                                 l610 76DE  
                                                 l178 8188  
                                                 l418 5342  
                                                 l530 5D78  
                                                 l274 43D2  
                                                 l282 61C8  
                                                 l354 5146  
                                                 l346 50E0  
                                                 l187 4E96  
                                                 l603 76E6  
                                                 l179 8196  
                                                 l371 1992  
                                                 l363 18DE  
                                                 l275 4428  
                                                 l347 50E6  
                                                 l620 04BE  
                                                 l604 76AA  
                                                 l372 19AE  
                                                 l268 4438  
                                                 l348 50EC  
                                                 l621 04C8  
                                                 l381 1AA6  
                                                 l365 1926  
                                                 l277 4430  
                                                 l269 4328  
                                                 l285 6250  
                                                 l349 5100  
                                                 l710 537C  
                                                 l702 17D6  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 76C6  
                                                 l518 4CCA  
                                                 l534 5DDE  
                                                 l374 1A14  
                                                 l286 61DA  
                                                 l703 17EE  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 4C3E  
                                                 l375 1A20  
                                                 l367 1948  
                                                 l287 61E0  
                                                 l295 7FAE  
                                                 l712 5392  
                                                 l704 1808  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 76D2  
                                                 l800 6DEA  
                                                 l376 1A9A  
                                                 l288 61FE  
                                                 l296 7FAC  
                                                 l721 541E  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 76D8  
                                                 l561 20DA  
                                                 l529 5E14  
                                                 l369 19C8  
                                                 l722 5408  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 21C6  
                                                 l562 20C4  
                                                 l546 5DE6  
                                                 l810 6DDC  
                                                 l715 53C2  
                                                 l651 07CC  
                                                 l571 20F6  
                                                 l563 2098  
                                                 l555 1F98  
                                                 l379 1A54  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 20A0  
                                                 l804 6DB8  
                                                 l900 3F24  
                                                 l661 67CC  
                                                 l741 4CFE  
                                                 l733 5430  
                                                 l645 0784  
                                                 l573 2108  
                                                 l805 6DC0  
                                                 l901 3E9E  
                                                 l750 4D32  
                                                 l718 53CE  
                                                 l670 32A8  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 20B8  
                                                 l806 6DC8  
                                                 l902 3EA6  
                                                 l751 4D3E  
                                                 l719 53E8  
                                                 l671 32B2  
                                                 l575 212A  
                                                 l559 1FB8  
                                                 l903 3EAE  
                                                 l752 4D50  
                                                 l680 33E0  
                                                 l672 32C6  
                                                 l648 07CE  
                                                 l592 4704  
                                                 l576 2132  
                                                 l808 6DD2  
                                                 l904 3EB6  
                                                 l753 4D5C  
                                                 l737 5440  
                                                 l665 33F6  
                                                 l649 07A8  
                                                 l577 2156  
                                                 l905 3EBE  
                                                 l754 4D6E  
                                                 l674 3310  
                                                 l666 3248  
                                                 l690 1638  
                                                 l586 21A8  
                                                 l914 7852  
                                                 l906 3EC6  
                                                 l659 67B6  
                                                 l747 4DB0  
                                                 l755 4DA4  
                                                 l675 3338  
                                                 l691 1644  
                                                 l907 3ED0  
                                                 l748 4D2A  
                                                 l668 341A  
                                                 l676 3368  
                                                 l684 181E  
                                                 l692 1664  
                                                 l596 479C  
                                                 l764 7B18  
                                                 _BDT 000D00  
                                                 l677 337A  
                                                 l669 329C  
                                                 l693 16AE  
                                                 l685 1592  
                                                 l597 4796  
                                                 l589 21B0  
                                                 l933 7D1E  
                                                 l917 7878  
                                                 l678 3380  
                                                 l694 1688  
                                                 l926 7D3C  
                                                 l918 7886  
                                                 l679 3394  
                                                 l687 1842  
                                                 l695 16F4  
                                                 l599 47A0  
                                                 l767 7B4E  
                                                 l935 7D2A  
                                                 l927 7D02  
                                                 l696 16EC  
                                                 l688 1632  
                                                 l929 7D0C  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1708  
                                                 l699 1770  
                                                 l972 62DE  
                                                 l893 3DF2  
                                                 l966 6270  
                                                 l894 3E00  
                                                 l896 3E88  
                                                 l898 3EE0  
                                                 l899 3E96  
                                                 _LBA 015A  
                                                 _LUN 01D9  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 86C2  
                                   main@tx_start_addr 00B1  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DF4  
                                         _start_line2 8E62  
                                         _start_line3 8EA7  
                                         _start_line4 8E22  
                                  api_prepare@command 005E  
                                          _USBSuspend 845C  
                                  _internalFlash_read 825E  
                              __end_of_display_update 743C  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 3948  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F6  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 48B4  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 00CB  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                        __parse_file_resize@file_size 004A  
                                 api_prepare@inBuffer 00A7  
                            fat_create_file@root_slot 0064  
                         __flash_write_to_buffer@data 0016  
                                                l1008 8868  
                                                l2010 2822  
                                                l1210 6C36  
                                                l2011 2744  
                                                l1203 7F18  
                                                l2012 279A  
                                                l2004 265E  
                                                l1204 7EFC  
                                                l1300 564E  
                                                l2013 27E0  
                                                l1117 87EE  
                                                l2110 1AFC  
                                                l2030 24A6  
                                                l1302 565E  
                                                l2007 26CC  
                                                l2103 1BF0  
                                                l2111 1B0C  
                                                l2031 2464  
                                                l2008 26A6  
                                                l2040 21F2  
                                                l2120 1B6C  
                                                l2112 1B1C  
                                                l2104 1ACE  
                                                l1232 7B98  
                                                l2024 6994  
                                                l1304 566E  
                                                l1320 4AC8  
                                                l2017 6836  
                                                l2201 85E0  
                                                l2121 1B70  
                                                l2113 1B2C  
                                                l1233 7B7C  
                                                l2033 2638  
                                                l1209 6C52  
                                                l2130 1B94  
                                                l2122 1B74  
                                                l2114 1B3C  
                                                l2106 1AD2  
                                                l1154 8994  
                                                l1090 8670  
                                                l2034 252C  
                                                l1306 5686  
                                                l1330 4B72  
                                                l2019 686A  
                                                l2043 223A  
                                                l2131 1B98  
                                                l2123 1B78  
                                                l2115 1B4C  
                                                l2107 1AD6  
                                                l1091 865E  
                                                l2035 2552  
                                                l1163 8928  
                                                l2211 63AA  
                                                l1083 82B2  
                                                l1331 4B92  
                                                l1323 4ADC  
                                                l2044 2266  
                                                l2140 1BBC  
                                                l2132 1B9C  
                                                l2124 1B7C  
                                                l2116 1B5C  
                                                l2108 1ADA  
                                                l2036 25F8  
                                                l1084 82BC  
                                                l1308 5696  
                                                l1324 4AF0  
                                                l2061 23D2  
                                                l2045 2378  
                                                l2053 2364  
                                                l2141 1BC0  
                                                l2133 1BA0  
                                                l2125 1B80  
                                                l2117 1B60  
                                                l2109 1AEC  
                                                l1181 8920  
                                                l1325 4B06  
                                                l2070 1DBC  
                                                l2046 236A  
                                                l2150 1BE0  
                                                l2134 1BA4  
                                                l2126 1B84  
                                                l2118 1B64  
                                                l1510 0CE0  
                                                l2047 22E2  
                                                l2151 1BE4  
                                                l2143 1BC4  
                                                l2135 1BA8  
                                                l2127 1B88  
                                                l2119 1B68  
                                                l1175 8934  
                                                l2207 635A  
                                                l1319 4BA2  
                                                l1327 4B2E  
                                                l2072 1F6A  
                                                l2048 231A  
                                                l2160 7C58  
                                                l2152 1BE8  
                                                l2144 1BC8  
                                                l2136 1BAC  
                                                l2128 1B8C  
                                                l2080 5A48  
                                                l1512 0D8C  
                                                l2400 0992  
                                                l1328 4B56  
                                                l2241 71BA  
                                                l2073 1E58  
                                                l2057 23F4  
                                                l2161 7C5C  
                                                l2153 1BEC  
                                                l2145 1BCC  
                                                l2137 1BB0  
                                                l2129 1B90  
                                                l1169 898C  
                                                l1601 31D0  
                                                l2401 09EC  
                                                l2074 1E80  
                                                l2058 238E  
                                                l2162 7C60  
                                                l2146 1BD0  
                                                l2138 1BB4  
                                                l2090 5A6C  
                                                l2082 5A4C  
                                                l2170 37E2  
                                                l1514 0E38  
                                                l1602 3198  
                                                l1610 4484  
                                                l2410 0AE8  
                                                l2075 1F28  
                                                l2163 7C64  
                                                l2147 1BD4  
                                                l2139 1BB8  
                                                l2091 5A70  
                                                l2083 5A50  
                                                l1195 8550  
                                                l1611 4456  
                                                l2411 0BAC  
                                                l2068 1DAA  
                                                l2164 7C68  
                                                l2148 1BD8  
                                                l2092 5A74  
                                                l2084 5A54  
                                                l2180 3870  
                                                l2172 37F0  
                                                l1196 8542  
                                                l1516 0EE4  
                                                l1508 0C36  
                                                l1604 3224  
                                                l2244 84F6  
                                                l2404 0BF6  
                                                l2412 0AF2  
                                                l1292 56BC  
                                                l2069 1DE2  
                                                l2157 7C70  
                                                l2165 7C6C  
                                                l2149 1BDC  
                                                l2093 5A78  
                                                l2085 5A58  
                                                l2181 3874  
                                                l1197 8564  
                                                l1605 31F6  
                                                l1701 7BDA  
                                                l1613 44D8  
                                                l2261 00B4  
                                                l2413 0B6A  
                                                l2405 09FE  
                                                l1293 5614  
                                                l2158 7C54  
                                                l2094 5A7C  
                                                l2086 5A5C  
                                                l2190 3898  
                                                l2182 3878  
                                                l2174 3828  
                                                l1198 8546  
                                                l1622 3AFC  
                                                l1702 7BAC  
                                                l1614 44AA  
                                                l1542 59B2  
                                                l1550 59A0  
                                                l2246 8500  
                                                l2262 0202  
                                                l2414 0BA6  
                                                l2350 7652  
                                                l2239 71AA  
                                                l2079 5A94  
                                                l2095 5A80  
                                                l2087 5A60  
                                                l2191 389C  
                                                l2183 387C  
                                                l1199 854A  
                                                l1471 5CE2  
                                                l1631 3C22  
                                                l1623 3ACE  
                                                l1551 59A6  
                                                l1543 597C  
                                                l2503 85A2  
                                                l2271 0426  
                                                l2263 0188  
                                                l1800 8746  
                                                l2096 5A84  
                                                l2088 5A64  
                                                l2176 38B8  
                                                l2192 38A0  
                                                l2184 3880  
                                                l1632 3BF4  
                                                l1464 7EA2  
                                                l1640 1322  
                                                l1616 452C  
                                                l1552 59AC  
                                                l2512 8292  
                                                l2248 850E  
                                                l2416 0BC2  
                                                l2408 0A3A  
                                                l1296 5626  
                                                l2097 5A88  
                                                l2089 5A68  
                                                l2193 38A4  
                                                l2185 3884  
                                                l2177 3864  
                                                l1625 3B50  
                                                l1641 12F4  
                                                l1617 44FE  
                                                l1553 5A10  
                                                l1545 5982  
                                                l2273 0458  
                                                l2265 033E  
                                                l2353 765E  
                                                l2098 5A8C  
                                                l2194 38A8  
                                                l2186 3888  
                                                l2178 3868  
                                                l1474 5D08  
                                                l1626 3B22  
                                                l1466 7EAE  
                                                l1650 13C6  
                                                l1562 2CBE  
                                                l1554 59FC  
                                                l1546 5988  
                                                l2266 0310  
                                                l1298 5636  
                                                l2099 5A90  
                                                l2195 38AC  
                                                l2187 388C  
                                                l2179 386C  
                                                l3323 7598  
                                                l1643 14F4  
                                                l1651 1398  
                                                l1571 2E58  
                                                l1563 2C90  
                                                l1555 5A02  
                                                l1547 598E  
                                                l2363 57C0  
                                                l2275 048A  
                                                l2259 003E  
                                                l2355 766A  
                                                l2196 38B0  
                                                l2188 3890  
                                                l3404 8090  
                                                l1476 5D2C  
                                                l1628 3BCE  
                                                l3324 758C  
                                                l1580 3FB4  
                                                l1572 2E2A  
                                                l1556 5A08  
                                                l1548 5994  
                                                l2364 56FC  
                                                l2268 039C  
                                                l2380 0FBA  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 38B4  
                                                l2189 3894  
                                                l3405 8088  
                                                l1629 3B96  
                                                l1645 1376  
                                                l1637 12CE  
                                                l1581 3F86  
                                                l1565 2D12  
                                                l1557 5A3A  
                                                l1549 599A  
                                                l2701 607C  
                                                l2365 5752  
                                                l2269 03C0  
                                                l2381 0FDE  
                                                l2349 767C  
                                                l1741 6FF6  
                                                l1750 7CAA  
                                                l2198 3944  
                                                l2710 6564  
                                                l1478 5D50  
                                                l1662 14B6  
                                                l1654 1416  
                                                l1646 1348  
                                                l1638 12A0  
                                                l1566 2CE4  
                                                l2702 6098  
                                                l2630 41F6  
                                                l2390 1264  
                                                l2358 7670  
                                                l1742 7022  
                                                l2711 6500  
                                                l3327 75C0  
                                                l1663 1488  
                                                l1655 13E8  
                                                l1671 3454  
                                                l1583 4008  
                                                l2703 60B4  
                                                l2631 420C  
                                                l2375 6622  
                                                l2367 57A8  
                                                l2383 1066  
                                                l1752 7CD2  
                                                l1760 7A68  
                                                l2712 6598  
                                                l3408 80A8  
                                                l3328 75CE  
                                                l1648 1516  
                                                l1592 309C  
                                                l1680 35B0  
                                                l1672 3426  
                                                l1584 3FDA  
                                                l1568 2E04  
                                                l2704 60D0  
                                                l2640 4298  
                                                l2632 4222  
                                                l2368 57AA  
                                                l2392 1286  
                                                l2384 10CE  
                                                l2713 650E  
                                                l3409 80B2  
                                                l1665 154A  
                                                l1593 306E  
                                                l1681 3582  
                                                l1577 3F60  
                                                l1569 2DD6  
                                                l2705 60D6  
                                                l2641 42A6  
                                                l2369 57B4  
                                                l2385 1148  
                                                l1770 708E  
                                                l3610 5EC6  
                                                l2722 556C  
                                                l2714 651C  
                                                l1690 3C9E  
                                                l1666 151C  
                                                l1658 1466  
                                                l1674 34A8  
                                                l1586 405C  
                                                l1578 3F32  
                                                l2706 60DC  
                                                l2650 58C6  
                                                l2634 42EE  
                                                l2642 42CE  
                                                l1915 7134  
                                                l1923 86AA  
                                                l2715 652A  
                                                l1659 1438  
                                                l1595 30F0  
                                                l1675 347A  
                                                l1587 402E  
                                                l2635 4258  
                                                l2627 4242  
                                                l2387 11A8  
                                                l1932 6DA6  
                                                l1772 70AC  
                                                l2900 6D26  
                                                l2740 7478  
                                                l2716 6538  
                                                l1692 3D20  
                                                l1596 30C2  
                                                l2652 5930  
                                                l2628 41E0  
                                                l2388 11DA  
                                                l1749 7CEC  
                                                l1845 72FA  
                                                l1917 719A  
                                                l1925 86BA  
                                                l1837 7C4A  
                                                l2717 6546  
                                                l1693 3CF2  
                                                l1677 34FC  
                                                l2653 58E2  
                                                l2637 4266  
                                                l2397 08A0  
                                                l2389 1208  
                                                l2734 5016  
                                                l2718 6554  
                                                l1686 3C78  
                                                l1598 3144  
                                                l1678 34CE  
                                                l2654 5968  
                                                l2646 58B0  
                                                l2670 600A  
                                                l2638 4278  
                                                l1767 704C  
                                                l1759 7A5E  
                                                l1847 735C  
                                                l1695 3D98  
                                                l1687 3C4A  
                                                l1599 3116  
                                                l2655 58FA  
                                                l2639 428A  
                                                l2399 092A  
                                                l1768 7056  
                                                l3608 5ECE  
                                                l1936 6B9A  
                                                l2728 7DE0  
                                                l2752 47E2  
                                                l1696 3D6A  
                                                l2656 5916  
                                                l2664 5FBA  
                                                l1880 834A  
                                                l2496 6F7C  
                                                l1929 6D42  
                                                l3609 5E28  
                                                l1689 3CCC  
                                                l2906 6A22  
                                                l1794 7A06  
                                                l1786 7E5A  
                                                l2746 6EFA  
                                                l3394 7D70  
                                                l2666 5FF4  
                                                l2498 6F88  
                                                l1795 7A10  
                                                l1787 7E64  
                                                l1939 6BFC  
                                                l3395 7D68  
                                                l2676 3030  
                                                l2668 6032  
                                                l1876 837C  
                                                l2909 6A5E  
                                                l2677 305E  
                                                l2669 5FFE  
                                                l1974 5F92  
                                                l3590 7634  
                                                l2758 7FEE  
                                                l3398 7D90  
                                                l3582 63BC  
                                                l2942 6E6A  
                                                l2678 3036  
                                                l2694 2A28  
                                                l2870 8164  
                                                l3591 75F6  
                                                l1983 366C  
                                                l1991 74B0  
                                                l3399 7D9A  
                                                l2943 6E5E  
                                                l2871 8140  
                                                l2880 48BE  
                                                l1968 5F3E  
                                                l1984 37A4  
                                                l3584 63F6  
                                                l2872 8172  
                                                l1985 3746  
                                                l3585 6434  
                                                l2689 64BE  
                                                l2873 8152  
                                                l1986 3768  
                                                l1994 74CA  
                                                l3578 805C  
                                                l2946 6E9E  
                                                l2698 60E2  
                                                l2891 7AF2  
                                                l2883 4922  
                                                l1987 379E  
                                                l2947 6EAC  
                                                l2699 6060  
                                                l1996 7508  
                                                l3596 852C  
                                                l2877 49AE  
                                                l3597 851C  
                                                l2878 48B8  
                                                l2897 6CF2  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8DC4  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8CAE  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D43  
                                      _bootloader_run 7646  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0187  
                                                u7030 5CCE  
                                                u7040 5CF4  
                                                u7105 7A74  
                                                u7050 5D18  
                                                u7130 6E6E  
                                                u7060 5D3C  
                                                u7160 759C  
                                                u6450 7D74  
                                                u7410 5404  
                                                u8018 16BA  
                                                u9010 441C  
                                                u8019 16CE  
                                                u6620 794C  
                                                u8060 17AA  
                                                u6630 7958  
                                                u8070 17AC  
                               ??_USBCtrlTrfTxService 0001  
                                                u6640 7964  
                                                u6480 8094  
                                                u8160 7EDA  
                                                u7600 8378  
                                                u7440 541A  
                                                u7280 5DC0  
                                                u9017 4412  
                                                u6650 7970  
                                                u7610 8346  
                                                u6660 797C  
                                                u6628 794E  
                                                u7460 542C  
                                                u6670 7986  
                                                u6638 795A  
                                                u7550 0CF4  
                                                u9230 1A3A  
                                                _UCFG 000F39  
                                                u7800 7616  
                                                u6648 7966  
                                                u7560 0DA0  
                                                u7480 543C  
                                                u8088 17B2  
                                                u9400 074C  
                                                u8089 17C4  
                                                u8610 6DAC  
                                                u7650 7196  
                                                u6658 7972  
                                                u7570 0E4C  
                                                u9410 075E  
                                                u9330 062C  
                                                u6755 7062  
                                                u7635 715A  
                                                u7660 5E48  
                                                u9500 366A  
                                                u6676 7988  
                                                u6668 797E  
                                                u9308 055C  
                                                u6908 4C5E  
                                                _UEP0 000F26  
                                                u6845 7A1C  
                                                u9309 0570  
                                                u6909 4C70  
                                                _UEP1 000F27  
                                    ?_fat_create_file 0044  
                                                u7807 760C  
                                                u7680 5E80  
                                                u9440 07D6  
                                                u7760 5848  
                                                u6944 4CB4  
                                                u6928 4C82  
                                                u6865 70C8  
                                                u7825 326E  
                                                u6945 4CAE  
                                                u6929 4C96  
                                                u8570 86BE  
                                                u7690 5EB6  
                                                u6970 4CEA  
                                                u7667 5E3E  
                                                _UEIE 000F37  
                                                u9348 064C  
                                                u7780 5888  
                                                u7685 5E7A  
                                                u9349 0660  
                                                u8750 5F9E  
                                                u9630 685E  
                                                u7687 5E70  
                                                u8831 37FA  
                                                u7935 15B8  
                                                u7767 583E  
                                                u8760 5FA4  
                                                u8665 79C2  
                                                u7697 5EAC  
                                                u9490 363C  
                                                u9650 689A  
                                                u9810 2330  
                                                u9298 052C  
                                                u8675 790E  
                                                u9299 0540  
                                                u7787 587E  
                                                u8940 521E  
                                                u8685 753A  
                                                u7878 32EA  
                                                u7958 15EC  
                                                u9495 3632  
                                                u7879 32FE  
                                                u7959 1600  
                                                u9760 228E  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9665 243E  
                                                u9770 22C0  
                                                u8795 71E0  
                                                u9860 2400  
                                                u9940 2ABC  
                                                u8980 4394  
                                                u9765 2284  
                                                u8990 43C4  
                                                u9775 22B6  
                                                u9960 2B00  
                                                u8987 438A  
                                                u9980 2B44  
                                                u8997 43BA  
                               _i2c_digipot_reset_off 86E4  
                             ??_fat_get_format_status 002C  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 770A  
              __end_of__fill_buffer_get_configuration 6778  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 66DA  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0184  
                                                _main 3DBA  
                                                _itoa 8038  
                          __end_of_fat_append_to_file 2870  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5A46  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 63B4  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 0F7C  
                           _ExternalFlash_MediaDetect 89CA  
                                                prodh 000FF4  
                                                prodl 000FF3  
                      fat_modify_file@number_of_bytes 0067  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 88D6  
                               _display_get_character 856A  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DB4  
                                __end_of_failed_line2 8D20  
                                __end_of_failed_line4 8E73  
                             __end_of_fat_modify_file 1F8C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 51A8  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 017C  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3C44  
                                      _hex_file_entry 01BB  
                              _bootloader_get_entries 8958  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 842A  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0178  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 757A  
                                               l11200 7EA6  
                                               l11050 33F0  
                                               l10512 52BE  
                                               l13020 2B60  
                                               l12206 85E0  
                                               l13006 2B1C  
                                               l10630 53CE  
                                               l10702 7D2A  
                                               l13032 2B86  
                                               l12090 37F0  
                                               l13042 2BAC  
                                               l11194 7E9A  
                                               l12084 37E2  
                                               l13044 2BB4  
                                               l10732 0C36  
                              ?_i2c_digipot_backlight 0001  
                                               l11630 6C00  
                                               l12190 38B8  
                                               l13070 2C1E  
                                               l13080 2C44  
                                               l11554 86A2  
                                               l12098 3828  
                                               l13082 2C4C  
                                               l13058 2BF8  
                                               l12506 05FC  
                                               l12274 51EA  
                                               l11628 6BFC  
                                               l10940 57F6  
                             ?__fill_buffer_find_file 0044  
                                               l11718 5FA4  
                                               l11576 6D42  
                                               l11578 6D4A  
                                               l10874 5E28  
                                               l11682 5F08  
                                               l10698 7D0C  
                                               l11676 5EF4  
                                               l10972 75F6  
                                               l14084 6002  
                                               l10892 851C  
                                               l14260 40BC  
                                               l12734 26A6  
                                               l12814 2464  
                                               l12920 23E6  
                                               l13712 6FC0  
                                               l12692 3768  
                                               l12780 682E  
                                               l13740 632C  
                                               l12918 23D2  
                                               l12944 1DBC  
                                               l12792 6862  
                                               l14288 4120  
                                               l12890 231A  
                                               l14548 5912  
                                               l13932 6F74  
                                               l14398 1FB0  
                                               l14734 0FD6  
                                               l13758 637C  
                                               l12896 235C  
                                               l12992 2AD8  
                                               l13864 5752  
                                        spi_tx@length 0003  
                                               l12978 2A94  
                                               l13938 6F80  
                                               l15750 1C08  
                                               l13982 64B6  
                                               l15752 1D20  
                                               l15736 6E02  
                                               l15738 6E36  
                                               l14866 0B6A  
                                               l14992 3A50  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 68AA  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10000 2B7E  
                                     __end_of___lldiv 6EBE  
                                               u10100 2C74  
                                               u10020 2BAC  
                                               ?_utoa 0008  
                                               u10040 2BDC  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10060 2C16  
                                               u10080 2C44  
                                               u11130 2A18  
                                               u10420 5568  
                                               u11220 40E0  
                                               u11045 878A  
                                               u10510 7474  
                                               u10335 7234  
                                               u11055 82D6  
                                               u10600 7FEA  
                                               u11065 6F4E  
                                               u10450 7DDC  
                                               u11170 6030  
                                               u11250 4184  
                                               u11090 6FA2  
                                               u10275 80C8  
                                               u10355 7292  
                                               u10540 6EF6  
                                               u10710 46D2  
                                               u10375 849A  
                                               u10480 5012  
                                     __end_of___llmod 75E0  
                                               u10570 47DE  
                                               u11370 1FAC  
                              __end_of_USBDeviceTasks 3AC8  
                                               u10724 46E8  
                                               u12180 3AC4  
                                               u12420 4B8C  
                                               u10725 46E2  
                                               u12270 628A  
                                               u10734 471A  
                                               u11390 1FE0  
                                               u10735 4714  
                                               u11560 218A  
                                               u10840 6360  
                                               u11625 7E02  
                                               u11641 84C4  
                                               u12290 629E  
                                               u12370 4B18  
                                               u10774 476C  
                                               u10758 473C  
                                               u10870 63B0  
                                               u10775 4766  
                                               u10759 474E  
                                               u11760 1028  
                                               u10698 46A0  
                                               u10970 5722  
                                               u10890 00A2  
                                               u10699 46B4  
                                               u11860 08EC  
                                               u10990 577E  
                                               u12807 7CC4  
                                               u12817 7CD6  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12827 7CE0  
                                               u12797 8664  
                                     __end_of___lwdiv 7DA4  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 80BC  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 0029  
                                _file_minimum_address 014E  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 0097  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 78E6  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 006E  
                                    __end_of_MSDTasks 21E4  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5D64  
                     __end_of_internalFlash_getBuffer 891C  
                     __end_of_USBCtrlEPAllowDataStage 66DA  
                                               _sd000 8FCC  
                                               _sd001 8EE8  
                                               _sd002 8F1C  
                                               _sd003 8F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 76A8  
                 i2c_display_send_init_sequence@F6808 01ED  
                       __end_of_MSDTransferTerminated 7B50  
                                        _gblCBWLength 0188  
                          __end_of__parse_file_delete 7DF6  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 6F40  
                          __end_of__parse_file_create 50C6  
                              __end_of_ResetSenseData 776C  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 48B4  
                          __end_of__parse_file_rename 74A6  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 005C  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 5612  
                             ?__fill_buffer_read_file 0093  
                                               pclath 000FFA  
                                     __end_of_ui_init 885E  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00E7  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 82FC  
                          __end_of__display_rebooting 7BFC  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5EE8  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0093  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 860A  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 3246  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0065  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 6AF8  
                       fat_read_from_file@file_number 006E  
                           __end_of__flash_get_status 845C  
                        fat_get_file_information@data 0037  
                         fat_read_from_file_fast@data 0040  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 8808  
               __end_of_ExternalFlash_MediaInitialize 87D6  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 87BC  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 2420  
                                         _FileAddress 016E  
                                        __end_of_main 3F2C  
                                        __end_of_itoa 807A  
                       __end_of_system_encoder_enable 88A6  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 7BA6  
                                        __end_of_utoa 6458  
                       fat_read_from_file_fast@length 003C  
                                __end_of__normal_mode 788A  
                                    _timer_pseudo_isr 8294  
                       fat_read_from_file_fast@offset 0056  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0058  
                                    __end_of_i2c_init 88FE  
                       fat_read_from_file_fast@sector 0052  
                            __end_of__i2c_acknowledge 893A  
                      __end_of__fill_buffer_find_file 64FA  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00CF  
                          __end_of__get_empty_cluster 6DB6  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8834  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 0176  
                                api_prepare@outBuffer 00A9  
                                              ??_main 00AF  
                                    __end_of__i2c_get 8930  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0068  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00B3  
                            _fat_get_file_information 719E  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 89CA  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 89C6  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 014A  
                               ??__bootloader_program 0060  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 80BC  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 8656  
                              __flash_write_to_buffer 7E46  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 2A8C  
                                _start_from_byte_next 00DD  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 8992  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7EDE  
                           fat_read_from_file@cluster 0071  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0060  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7CA8  
                                    __end_of__get_fbr 1D30  
                                    __end_of__get_mbr 5B14  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 3420  
                                 _flash_pages_written 0170  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 0062  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 659C  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 88C6  
                   __bootloader_program@page_to_write 0099  
                                   _shortPacketStatus 00F5  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 003F  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6FBE  
                        __end_of__flash_set_page_size 7038  
                                     _hexCharsToUint8 876A  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 7212  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E3  
                                           ??___lwmod 0005  
                                              _buffer 0380  
                                   _USBEnableEndpoint 8178  
                       __bootloader_program@address32 0092  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 75E0  
                                  ?_fat_get_file_size 0030  
                                              _memset 8512  
                                              clear_0 6B32  
                                              clear_1 6B46  
                                              clear_2 6B58  
                                              clear_3 6B64  
                                              clear_4 6B70  
                                              clear_5 6B7C  
                           _ExternalFlash_SectorWrite 8330  
                                   api_parse@inBuffer 0093  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6E  
                                              _reboot 87D6  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4AC6  
                                              _spi_tx 7AA2  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 83F8  
                                              _tx_buf 01F6  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 005E  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 853E  
                        __end_of_jump_to_main_program 89A8  
                               __end_of_fat_find_file 5FA8  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 6B88  
                       __size_of__parse_command_short 00B4  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0230  
                                        __mediumconst 8C98  
                                 __end_of__i2c_open_1 8808  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 77CC  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 776C  
                                              tblptru 000FF8  
                                    __end_of_spi_init 8178  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00B5  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 719E  
                             __spi_external_rx_buffer 0300  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00B7  
                               __end_of_ui_get_status 89C0  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F4  
                          ??_APP_DeviceCustomHIDTasks 00AB  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0250  
                                   _SYSTEM_Initialize 7CFE  
                               fat_modify_file@length 0043  
                               fat_modify_file@offset 0065  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 6B82  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 8926  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 009B  
                         __end_of__parse_command_long 659C  
                   __end_of_failed_line3_noNextRecord 8E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 7284  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 7BFC  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 81B4  
                            _bootloader_get_file_size 8884  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8F1C  
                                       __end_of_sd002 8F4A  
                                       __end_of_sd003 8FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 89CE  
                                        __pidataBANK1 8630  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 003F  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 896C  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 8962  
                           __get_available_root_entry 869E  
                                 fat_rename_file@cntr 0081  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 0061  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00FB  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 129A  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5BDC  
                                 _userInterfaceStatus 00E0  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 4CD2  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 856A  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 88E4  
                             __end_of_system_delay_ms 867A  
                                  __size_of_api_parse 00D4  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0174  
                      __end_of_failed_line3_startCode 8CE9  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 693E  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DA4  
                                        _failed_line2 8D0E  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00E9  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 7D52  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 6CA2  
                                   __end_of__i2c_send 89A2  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 61BC  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 8992  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0060  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 00B9  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 0068  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 49BE  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0156  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0095  
                        __end_of__sector_from_cluster 88F2  
                                    _mediaInformation 01D2  
                             __end_of_hexCharsToUint8 8786  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 63B4  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 7CA8  
                            __fill_buffer_get_display 5FA8  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00C5  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 4FDA  
               __end_of_APP_DeviceCustomHIDInitialize 8330  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 82FC  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 56F2  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2A8C  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 006A  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 2650  
                                             ?_memset 0001  
                                          _device_dsc 8FA5  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 87F0  
                                    _USBCtrlEPService 6110  
                                             ?_ui_run 0001  
                         fat_resize_file@next_cluster 008B  
                                          _ep_data_in 016B  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 006C  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3C44  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 4694  
                                  _USBCheckStdRequest 50C6  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 87A2  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 58A0  
                                   __end_of__get_data 85E4  
                                   __end_of__get_date 898A  
                                 _USBStdSetCfgHandler 51A8  
                              fat_append_to_file@root 0073  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 8980  
                                   __end_of__get_root 3948  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D74  
                                          _done_line2 8E9F  
                                          _done_line3 8D64  
                                          _done_line4 8D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 884A  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0172  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 6FBE  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 82C8  
                                  __get_first_cluster 7510  
                                        __normal_mode 782C  
                          __end_of_APP_DeviceMSDTasks 8872  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 7F6E  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 88A6  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0088  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 70B0  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 7038  
                                          __write_fat 80FC  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB7  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 788A  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0054  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 8962  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 5974  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 4694  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7DA4  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 8226  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 6EBE  
                                             __Lparam 0000  
                                  __parse_file_create 4FDA  
                                _jump_to_main_program 89A2  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4DD8  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 47A6  
                                  __parse_file_rename 743C  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 7284  
                                  __parse_file_resize 5530  
                                          _last_error 00DE  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0340  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 6E3C  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 757A  
                                             ___lwdiv 7D52  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 807A  
                                   _fast_read_cluster 00F9  
                                  __display_rebooting 7BA6  
                         __end_of__parse_format_drive 7FF6  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 81EE  
                                             __pcinit 6AF8  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE8  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3DBA  
                                             __ptext1 4AC6  
                                     __display_failed 129A  
                                             __ptext2 8896  
                                             __ptext3 84BA  
                                             __ptext4 86C2  
                                             __ptext5 86E4  
                                             __ptext6 85E4  
                                             __ptext7 5612  
                                             __ptext8 8294  
                                 ?__parse_file_modify 0053  
                                             __ptext9 88A6  
                                             _inPipes 00BF  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EA  
                                 ?__parse_file_resize 0047  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 876A  
                                ??__get_first_cluster 0032  
                             _fat_read_from_file_fast 2420  
                                        ??_USBSuspend 0018  
                                     __display_search 3F2C  
                                  __end_of_USBMSDInit 4CD2  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 88C6  
                                             _msd_cbw 000D40  
                                     __display_verify 4450  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 891C  
                                             _ui_init 884A  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8834  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 6D2E  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 5E26  
                                 _flash_partial_write 72F4  
                                end_of_initialization 6B82  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 7AFA  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 3068  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2E7A  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 00D9  
                                ??__parse_file_modify 0055  
                           __end_of_MSDProcessCommand 47A6  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                ??__parse_file_resize 0049  
                                     _USB1msTickCount 015E  
                                    ?_hexCharsToUint8 0003  
                              fat_resize_file@cluster 008D  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 7FF6  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                            fat_append_to_file@length 006D  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 006A  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 0060  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 848C  
                             _USBCtrlEPAllowDataStage 663C  
                                   __end_of_spi_tx_rx 6A66  
                                   __end_of_spi_tx_tx 6D2E  
               __end_of__fill_buffer_get_file_details 73D2  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 7364  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 8944  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 893A  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4EDA  
                                             utoa@val 000A  
                                           _MSD_State 00E8  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 8896  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005E  
                          _USBStatusStageEnabledFlag1 00ED  
                          _USBStatusStageEnabledFlag2 00EC  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 7E96  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 88E4  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 0066  
                       __parse_file_modify@start_byte 0058  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 0067  
                                 flash_page_read@data 002A  
                              fat_modify_file@cluster 0063  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0290  
                                  _BothEP0OutUOWNsSet 00F0  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 7C52  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0380  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7B50  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DB4  
                                       _checked_line2 8C99  
                                       _checked_line3 8E73  
                                       _checked_line4 8D32  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4EDA  
                        fat_resize_file@old_file_size 0060  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 6110  
               __end_of_internalFlash_pageFromAddress 87A2  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 8786  
                                __end_of_reboot_line1 8E4C  
                                __end_of_search_line1 8DF4  
                                __end_of_search_line2 8D54  
                                __end_of_search_line3 8CD6  
                                __end_of_search_line4 8E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 7128  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1590  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0069  
                        fat_resize_file@new_file_size 003F  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 6A66  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 006A  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 407E  
                               __end_of_USBDeviceInit 41CC  
               __end_of_USBIncrement1msInternalTimers 8728  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 8706  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 6C16  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 457C  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0046  
                            __end_of_USBStallEndpoint 4AC6  
                                 _i2c_eeprom_readByte 7DF6  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 0096  
                  __fill_buffer_read_file@data_length 009F  
                         __end_of_system_minimal_init 881E  
                            __size_of_fat_modify_file 025C  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CAE  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 7646  
                                     _MSDRetryAttempt 00E4  
                                      __end_of_memset 853E  
                                      __end_of_reboot 87F0  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00F2  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 4BCC  
                                      __end_of_spi_tx 7AFA  
               __get_available_root_entry@file_number 0037  
                                 fat_modify_file@data 0045  
                                 __end_of__ui_encoder 56F2  
                           __flash_set_page_size@size 0018  
                                 start_initialization 6AF8  
                                 fat_modify_file@root 0069  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 88D6  
                                 __end_of_api_prepare 4316  
                   __end_of__get_available_root_entry 86C2  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 00D7  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 693E  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1ACC  
                                 __flash_partial_read 70B0  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 00E2  
                                      _hexCharToUint8 84E6  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 5CA0  
                            _fast_read_cluster_number 00F7  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 83F8  
                        __end_of__display_programming 35F6  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 61BC  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 81B4  
                                           __i2c_read 6C16  
                                           __i2c_send 899A  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 898A  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 89C6  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E13  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 00DB  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 7212  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D94  
                                   _programming_line2 8CFC  
                                   _programming_line3 8E83  
                                   _programming_line4 8D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 4316  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01D9  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 00A2  
                       __end_of_i2c_digipot_backlight 860A  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 899A  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 7F26  
                            __end_of_system_full_init 78E6  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 0097  
                      __end_of_USBStdGetStatusHandler 6266  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 023C  
                         api_parse@receivedDataLength 0095  
                   __end_of__bootloader_check_address 57CC  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 84BA  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 848C  
                          fat_append_to_file@position 006F  
                         fat_create_file@next_cluster 0060  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 8394  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
                       __end_of_MSDCheckForErrorCases 544E  
             __bootloader_program@address_within_page 006C  
                              __end_of_hexCharToUint8 8512  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0152  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 8728  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 72F4  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 85BC  
                                           __get_date 8980  
                    __bootloader_program@return_value 008E  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                     __end_of_fat_read_from_file_fast 2650  
                                           __get_time 8976  
                                           __get_root 37B2  
                                 __end_of__write_root 79F2  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 825E  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 869E  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 7F6E  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 0060  
                                           __read_fat 7F26  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DA4  
                           __end_of_programming_line2 8D0E  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8D94  
                    __end_of_ExternalFlash_SectorRead 8394  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 8976  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 896C  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 6310  
                   fat_read_from_file_fast@start_byte 0038  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 58A0  
                           fat_create_file@root_entry 0069  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 544E  
                                  _APP_DeviceMSDTasks 885E  
                                       __pmediumconst 8C98  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 87BC  
                                           __ptext101 89CA  
                                           __ptext110 7364  
                                           __ptext102 6266  
                                           __ptext111 5FA8  
                                           __ptext103 41CC  
                                           __ptext200 83C6  
                                           __ptext120 6458  
                                           __ptext112 856A  
                                           __ptext104 2870  
                                           __ptext201 8976  
                                           __ptext121 58A0  
                                           __ptext113 66DA  
                                           __ptext105 693E  
                                           __ptext210 7CA8  
                                           __ptext202 8980  
                                           __ptext130 5974  
                                           __ptext122 605C  
                                           __ptext114 2E7A  
                                           __ptext106 2420  
                                           __ptext211 7AA2  
                                           __ptext203 88E4  
                                           __ptext131 4450  
                                           __ptext123 8656  
                                           __ptext115 89A8  
                                           __ptext107 7212  
                                           __ptext212 842A  
                                           __ptext204 7F26  
                                           __ptext140 89C0  
                                           __ptext132 2C8A  
                                           __ptext124 87D6  
                                           __ptext116 8944  
                                           __ptext108 544E  
                                           __ptext213 69D2  
                                           __ptext205 6D2E  
                                           __ptext141 8958  
                                           __ptext133 3F2C  
                                           __ptext125 89BA  
                                           __ptext117 8834  
                                           __ptext109 881E  
                                           __ptext214 4DD8  
                                           __ptext206 83F8  
                                           __ptext150 5CA0  
                                           __ptext142 0C0E  
                                           __ptext134 7BA6  
                                           __ptext126 73D2  
                                           __ptext118 89AE  
                                           __ptext215 0000  
                                           __ptext207 48B4  
                                           __ptext151 8038  
                                           __ptext143 757A  
                                           __ptext135 3420  
                                           __ptext127 7B50  
                                           __ptext119 89B4  
                                           __ptext208 70B0  
                                           __ptext160 8992  
                                           __ptext152 63B4  
                                           __ptext144 6E3C  
                                           __ptext136 3068  
                                           __ptext128 867A  
                                           __ptext209 8728  
                                           __ptext161 899A  
                                           __ptext153 807A  
                                           __ptext145 3C44  
                                           __ptext137 8884  
                                           __ptext129 860A  
                                           __ptext170 85BC  
                                           __ptext162 64FA  
                                           __ptext154 7D52  
                                           __ptext146 8962  
                                           __ptext138 129A  
                                           __ptext171 5530  
                                           __ptext163 7FB2  
                                           __ptext155 80BC  
                                           __ptext147 7E96  
                                           __ptext139 894E  
                                           __ptext180 78E6  
                                           __ptext172 21E4  
                                           __ptext164 2A8C  
                                           __ptext156 853E  
                                           __ptext148 3AC8  
                                           __ptext181 4FDA  
                                           __ptext173 743C  
                                           __ptext165 7BFC  
                                           __ptext157 7EDE  
                                           __ptext149 896C  
                                           __ptext190 719E  
                                           __ptext182 35F6  
                                           __ptext174 6814  
                                           __ptext166 37B2  
                                           __ptext158 7942  
                                           __ptext191 7128  
                                           __ptext183 75E0  
                                           __ptext175 47A6  
                                           __ptext167 5A46  
                                           __ptext159 898A  
                                           __ptext192 799A  
                                           __ptext184 6B88  
                                           __ptext176 1D30  
                                           __ptext168 1ACC  
                                           __ptext193 80FC  
                                           __ptext185 5EE8  
                                           __ptext177 7DA4  
                                           __ptext169 7C52  
                                           __ptext194 72F4  
                                           __ptext186 5E26  
                                           __ptext178 74A6  
                                           __ptext195 7E46  
                                           __ptext187 869E  
                                           __ptext179 7510  
                                           __ptext196 6CA2  
                                           __ptext188 6EBE  
                                           __ptext197 79F2  
                                           __ptext189 2650  
                                           __ptext198 7A4A  
                                           __ptext199 7038  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 81EE  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0094  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6E  
                                         __ui_encoder 5612  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00FC  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 41CC  
                             __parse_file_delete@data 003F  
                           fat_modify_file@start_byte 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014A  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4DD8  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 49BE  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 605C  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0068  
                              __end_of__flash_is_busy 874A  
                                       _fat_find_file 5EE8  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 0073  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C0E  
                                   __display_itoa_u16 5CA0  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 782C  
                                   ??_fat_modify_file 0047  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DE4  
                                 __end_of_found_line2 8CFC  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D32  
                                         _ep_data_out 0168  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 894E  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 8706  
                       _bootloader_get_rec_dataLength 8944  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00E5  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7E96  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 3068  
                    __end_of_bootloader_get_file_size 8896  
                                         _file_buffer 0189  
                                     _config_internal 0165  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 89BA  
                                     _config_external 0162  
                                      __display_start 2C8A  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 8594  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 536C  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 008D  
                          __end_of_internalFlash_read 8294  
                                          ?_api_parse 0093  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1F8C  
                          _USBDeferINDataStagePackets 00EB  
                                        ??_fat_format 0025  
                                     _fat_delete_file 74A6  
                                _active_configuration 0186  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 68AA  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 83C6  
                                           _spi_tx_rx 69D2  
                                           _spi_tx_tx 6CA2  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00D5  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 3420  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 5D64  
                           __end_of__display_itoa_u32 0F7C  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DD4  
                                __end_of_verify_line2 8E59  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F3  
                   __end_of_ExternalFlash_MediaDetect 89CE  
                        __size_of__parse_format_drive 0044  
                                        _reboot_line1 8E3F  
                                        _search_line1 8DE4  
                                        _search_line2 8D43  
                                        _search_line3 8CC2  
                                        _search_line4 8E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 005A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 605C  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 799A  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7EDE  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 89C0  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 3246  
                             __end_of_USBStallHandler 7FB2  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 8038  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 2E7A  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6B0C  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 0043  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 0062  
                         __end_of_USBStdSetCfgHandler 528A  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 2C8A  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 00EC  
                                 __display_found@cntr 0028  
                                            _i2c_init 88F2  
                  __parse_file_modify@number_of_bytes 0056  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 010E  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00E6  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 00E2  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 8926  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 35F6  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0064  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 0053  
                         __end_of_bootloader_filename 8FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 87BC  
                                      _TransferLength 00D3  
                                _bootloader_extension 8FC8  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 5E26  
               fat_read_from_file_fast@cluster_number 0044  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 8362  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D84  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8D74  
                                  __end_of_done_line4 8D64  
                                      __i2c_wait_idle 7942  
                                     _MSDWriteHandler 1590  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00E1  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 88B6  
                                         _found_line1 8DD4  
                                         _found_line2 8CE9  
                                         _found_line3 8E98  
                                         _found_line4 8D20  
                                            __get_fat 7C52  
                                            __get_fbr 1ACC  
                         __size_of__get_empty_cluster 0088  
                                            __get_mbr 5A46  
                                  __end_of__write_fat 813C  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 8884  
                          _ExternalFlash_CapacityRead 8872  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 6458  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 88B6  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 3AC8  
               __end_of_bootloader_get_rec_recordType 89AE  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 89A8  
                                            __ptext10 88D6  
                                            __ptext11 8808  
                                            __ptext20 88B6  
                                            __ptext12 88F2  
                                            __ptext21 6310  
                                            __ptext13 87F0  
                                            __ptext30 0020  
                                            __ptext22 874A  
                                            __ptext14 788A  
                                            __ptext31 876A  
                                            __ptext23 81B4  
                                            __ptext15 884A  
                                            __ptext40 8594  
                                            __ptext32 7284  
                                            __ptext24 88FE  
                                            __ptext16 87A2  
                                            __ptext41 776C  
                                            __ptext33 84E6  
                                            __ptext25 8908  
                                            __ptext17 813C  
                                            __ptext50 8930  
                                            __ptext42 848C  
                                            __ptext34 6F40  
                                            __ptext26 89A2  
                                            __ptext18 81EE  
                                            __ptext51 3948  
                                            __ptext43 56F2  
                                            __ptext35 7FF6  
                                            __ptext27 7646  
                                            __ptext19 6FBE  
                                            __ptext60 663C  
                                            __ptext52 8226  
                                            __ptext44 659C  
                                            __ptext36 825E  
                                            __ptext28 0F7C  
                                            __ptext61 50C6  
                                            __ptext53 845C  
                                            __ptext45 782C  
                                            __ptext37 8786  
                                            __ptext29 085A  
                                            __ptext70 7CFE  
                                            __ptext62 51A8  
                                            __ptext54 7F6E  
                                            __ptext46 7DF6  
                                            __ptext38 8912  
                                            __ptext71 7AFA  
                                            __ptext63 8512  
                                            __ptext55 8706  
                                            __ptext47 6C16  
                                            __ptext39 82C8  
                                            __ptext80 5B14  
                                            __ptext72 88C6  
                                            __ptext64 61BC  
                                            __ptext56 407E  
                                            __ptext48 891C  
                                            __ptext81 57CC  
                                            __ptext73 4BCC  
                                            __ptext65 4316  
                                            __ptext57 6110  
                                            __ptext49 8926  
                                            __ptext90 3246  
                                            __ptext82 885E  
                                            __ptext74 82FC  
                                            __ptext66 1848  
                                            __ptext58 6A66  
                                            __ptext91 536C  
                                            __ptext83 1F8C  
                                            __ptext75 8178  
                                            __ptext67 6DB6  
                                            __ptext59 4EDA  
                                            __ptext92 4CD2  
                                            __ptext84 4694  
                                            __ptext76 68AA  
                                            __ptext68 5D64  
                                            __ptext93 49BE  
                                            __ptext85 76A8  
                                            __ptext77 77CC  
                                            __ptext69 528A  
                                            __ptext94 770A  
                                            __ptext86 049C  
                                            __ptext78 457C  
                                            __ptext95 8362  
                                            __ptext87 1590  
                                            __ptext79 5BDC  
                                            __ptext96 8394  
                                            __ptext88 89C6  
                                            __ptext97 6778  
                                            __ptext89 8330  
                                            __ptext98 893A  
                                            __ptext99 8872  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 770A  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 76A8  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 0062  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 64FA  
                   __end_of_failed_line3_addressRange 8CC2  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 005F  
                      __size_of__bootloader_find_file 00A0  
                  __end_of__flash_copy_page_to_buffer 7AA2  
                          __flash_copy_page_to_buffer 7A4A  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 6310  
                       __end_of__bootloader_find_file 663C  
                        __end_of_i2c_digipot_reset_on 86E4  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 7CFE  
                      __end_of_USBCtrlTrfSetupHandler 6AF8  
                                       __size_of_main 0172  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 7510  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 2870  
                         __end_of_flash_partial_write 7364  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 7942  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 89B4  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 89AE  
                                 _USBCtrlTrfInHandler 5B14  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                      fat_read_from_file_fast@cluster 0042  
                                         ??_api_parse 0096  
                              __end_of__i2c_wait_idle 799A  
               fat_resize_file@old_number_of_clusters 0064  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 813C  
                                _USBCtrlTrfOutHandler 77CC  
                           _USBCtrlEPAllowStatusStage 5BDC  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 8912  
                                ?__parse_command_long 005C  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3DBA  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00EE  
                  __end_of_spi_get_external_rx_buffer 8912  
                          _spi_get_external_rx_buffer 8908  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 5530  
                             __parse_file_modify@data 0053  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 85BC  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 8594  
                             _internalFlash_erasePage 82C8  
                            __parse_format_drive@data 0027  
                                   __write_fat@offset 002F  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8908  
                          _spi_get_external_tx_buffer 88FE  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 006F  
                __end_of_MSDComputeDeviceInAndResidue 6814  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 6778  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E04  
                                 __end_of_start_line2 8E6B  
                                 __end_of_start_line3 8EA8  
                                 __end_of_start_line4 8E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 881E  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8930  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 37B2  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6E3C  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6DB6  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 8362  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 7A4A  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 79F2  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 83C6  
                        fat_read_from_file@start_byte 0060  
                                     _display_content 0200  
                          __end_of_flash_partial_read 842A  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1848  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 89BA  
                         _bootloader_get_rec_checksum 89B4  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                                 fat_resize_file@cntr 0067  
                                 fat_resize_file@root 006B  
                        __bootloader_verify_file@root 0068  
                   __size_of__fill_buffer_get_display 00B4  
                            ?_fat_read_from_file_fast 0038  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 5974  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E04  
                                 _USBCtrlTrfRxService 457C  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 8226  
                               ??__parse_command_long 005E  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 867A  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1848  
                                     _fat_modify_file 1D30  
                        __fill_buffer_read_file@start 00A3  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 57CC  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00A7  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 017E  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 85E4  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8958  
                          _bootloader_get_rec_address 894E  
                               _USBAlternateInterface 01D7  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 7E46  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0182  
                             __parse_file_resize@data 0047  
                           _failed_line3_noNextRecord 8E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 6814  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F1  
                                      _display_update 73D2  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CD6  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 536C  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 8630  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0180  
                             _internalFlash_writePage 6F40  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4BCC  
                        _USBStatusStageTimeoutCounter 00EF  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 7128  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 80FC  
                                        _verify_line1 8DC4  
                                        _verify_line2 8E4C  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                 __parse_format_drive 7FB2  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 00DF  
                                         _USBInHandle 017A  
                            _APP_DeviceCustomHIDTasks 6266  
