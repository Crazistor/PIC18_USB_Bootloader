

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Aug 30 23:50:34 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=2
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=2
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   232                           	dabs	1,0x600,512,_msd_buffer
   233                           	dabs	1,0xD00,48,_BDT
   234                           	dabs	1,0xD40,31,_msd_cbw
   235                           	dabs	1,0xD80,13,_msd_csw
   236                           	dabs	1,0xD38,8,_CtrlTrfData
   237                           	dabs	1,0xD30,8,_SetupPkt
   238  0000                     
   239                           ; Version 2.00
   240                           ; Generated 27/05/2018 GMT
   241                           ; 
   242                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   243                           ; All rights reserved.
   244                           ; 
   245                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   246                           ; 
   247                           ; Redistribution and use in source and binary forms, with or without modification, are
   248                           ; permitted provided that the following conditions are met:
   249                           ; 
   250                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   251                           ;        conditions and the following disclaimer.
   252                           ; 
   253                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   254                           ;        of conditions and the following disclaimer in the documentation and/or other
   255                           ;        materials provided with the distribution.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F47J53 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	intcode
   275  000008  EF04 F048          	goto	36872	;# 
   276                           
   277                           	psect	intcodelo
   278  000018  EF0C F048          	goto	36888	; ;# 
   279  0000                     
   280                           	psect	idataBANK0
   281  007E30                     __pidataBANK0:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _file_number
   285  007E30  FF                 	db	255
   286                           
   287                           	psect	idataBANK1
   288  007BF0                     __pidataBANK1:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _LUN
   292  007BF0  60                 	db	low _ExternalFlash_MediaInitialize
   293  007BF1  7C                 	db	high _ExternalFlash_MediaInitialize
   294  007BF2  E6                 	db	low _ExternalFlash_CapacityRead
   295  007BF3  7C                 	db	high _ExternalFlash_CapacityRead
   296  007BF4  90                 	db	low _ExternalFlash_SectorSizeRead
   297  007BF5  7D                 	db	high _ExternalFlash_SectorSizeRead
   298  007BF6  22                 	db	low _ExternalFlash_MediaDetect
   299  007BF7  7E                 	db	high _ExternalFlash_MediaDetect
   300  007BF8  0E                 	db	low _ExternalFlash_SectorRead
   301  007BF9  78                 	db	high _ExternalFlash_SectorRead
   302  007BFA  1E                 	db	low _ExternalFlash_WriteProtectStateGet
   303  007BFB  7E                 	db	high _ExternalFlash_WriteProtectStateGet
   304  007BFC  DC                 	db	low _ExternalFlash_SectorWrite
   305  007BFD  77                 	db	high _ExternalFlash_SectorWrite
   306  007BFE  00                 	db	0
   307  007BFF  00                 	db	0
   308  007C00  00                 	db	0
   309  007C01  00                 	db	0
   310  007C02  00                 	db	0
   311  007C03  00                 	db	0
   312                           
   313                           ;initializer for i2c_display_send_init_sequence@F6799
   314  007C04  3A                 	db	58
   315  007C05  1E                 	db	30
   316  007C06  39                 	db	57
   317  007C07  0C                 	db	12
   318  007C08  74                 	db	116
   319  007C09  5C                 	db	92
   320  007C0A  6D                 	db	109
   321  007C0B  0C                 	db	12
   322  007C0C  01                 	db	1
   323                           
   324                           	psect	idataBANK2
   325  007DE0                     __pidataBANK2:
   326                           	opt stack 0
   327                           
   328                           ;initializer for _tx_buf
   329  007DE0  01                 	db	1
   330  007DE1  02                 	db	2
   331  007DE2  03                 	db	3
   332  007DE3  04                 	db	4
   333  007DE4  05                 	db	5
   334  007DE5  06                 	db	6
   335  007DE6  07                 	db	7
   336  007DE7  08                 	db	8
   337                           
   338                           	psect	mediumconst
   339  008CCC                     __pmediumconst:
   340                           	opt stack 0
   341  008CCC  00                 	db	0
   342  008CCD                     _checked_line2:
   343                           	opt stack 0
   344  008CCD  46                 	db	70
   345  008CCE  69                 	db	105
   346  008CCF  6C                 	db	108
   347  008CD0  65                 	db	101
   348  008CD1  20                 	db	32
   349  008CD2  63                 	db	99
   350  008CD3  68                 	db	104
   351  008CD4  65                 	db	101
   352  008CD5  63                 	db	99
   353  008CD6  6B                 	db	107
   354  008CD7  20                 	db	32
   355  008CD8  63                 	db	99
   356  008CD9  6F                 	db	111
   357  008CDA  6D                 	db	109
   358  008CDB  70                 	db	112
   359  008CDC  6C                 	db	108
   360  008CDD  65                 	db	101
   361  008CDE  74                 	db	116
   362  008CDF  65                 	db	101
   363  008CE0  64                 	db	100
   364  008CE1  00                 	db	0
   365  008CE2                     __end_of_checked_line2:
   366                           	opt stack 0
   367  008CE2                     _failed_line3_addressRange:
   368                           	opt stack 0
   369  008CE2  41                 	db	65
   370  008CE3  64                 	db	100
   371  008CE4  64                 	db	100
   372  008CE5  72                 	db	114
   373  008CE6  2E                 	db	46
   374  008CE7  20                 	db	32
   375  008CE8  6F                 	db	111
   376  008CE9  75                 	db	117
   377  008CEA  74                 	db	116
   378  008CEB  73                 	db	115
   379  008CEC  69                 	db	105
   380  008CED  64                 	db	100
   381  008CEE  65                 	db	101
   382  008CEF  20                 	db	32
   383  008CF0  72                 	db	114
   384  008CF1  61                 	db	97
   385  008CF2  6E                 	db	110
   386  008CF3  67                 	db	103
   387  008CF4  65                 	db	101
   388  008CF5  00                 	db	0
   389  008CF6                     __end_of_failed_line3_addressRange:
   390                           	opt stack 0
   391  008CF6                     _start_line3:
   392                           	opt stack 0
   393  008CF6  46                 	db	70
   394  008CF7  49                 	db	73
   395  008CF8  52                 	db	82
   396  008CF9  4D                 	db	77
   397  008CFA  57                 	db	87
   398  008CFB  41                 	db	65
   399  008CFC  52                 	db	82
   400  008CFD  45                 	db	69
   401  008CFE  2E                 	db	46
   402  008CFF  48                 	db	72
   403  008D00  45                 	db	69
   404  008D01  58                 	db	88
   405  008D02  20                 	db	32
   406  008D03  6F                 	db	111
   407  008D04  6E                 	db	110
   408  008D05  20                 	db	32
   409  008D06  55                 	db	85
   410  008D07  53                 	db	83
   411  008D08  42                 	db	66
   412  008D09  00                 	db	0
   413  008D0A                     __end_of_start_line3:
   414                           	opt stack 0
   415  008D0A                     _failed_line3_startCode:
   416                           	opt stack 0
   417  008D0A  4D                 	db	77
   418  008D0B  69                 	db	105
   419  008D0C  73                 	db	115
   420  008D0D  73                 	db	115
   421  008D0E  69                 	db	105
   422  008D0F  6E                 	db	110
   423  008D10  67                 	db	103
   424  008D11  20                 	db	32
   425  008D12  73                 	db	115
   426  008D13  74                 	db	116
   427  008D14  61                 	db	97
   428  008D15  72                 	db	114
   429  008D16  74                 	db	116
   430  008D17  20                 	db	32
   431  008D18  63                 	db	99
   432  008D19  6F                 	db	111
   433  008D1A  64                 	db	100
   434  008D1B  65                 	db	101
   435  008D1C  00                 	db	0
   436  008D1D                     __end_of_failed_line3_startCode:
   437                           	opt stack 0
   438  008D1D                     _found_line2:
   439                           	opt stack 0
   440  008D1D  46                 	db	70
   441  008D1E  49                 	db	73
   442  008D1F  52                 	db	82
   443  008D20  4D                 	db	77
   444  008D21  57                 	db	87
   445  008D22  41                 	db	65
   446  008D23  52                 	db	82
   447  008D24  45                 	db	69
   448  008D25  2E                 	db	46
   449  008D26  48                 	db	72
   450  008D27  45                 	db	69
   451  008D28  58                 	db	88
   452  008D29  20                 	db	32
   453  008D2A  66                 	db	102
   454  008D2B  6F                 	db	111
   455  008D2C  75                 	db	117
   456  008D2D  6E                 	db	110
   457  008D2E  64                 	db	100
   458  008D2F  00                 	db	0
   459  008D30                     __end_of_found_line2:
   460                           	opt stack 0
   461  008D30                     _programming_line2:
   462                           	opt stack 0
   463  008D30  50                 	db	80
   464  008D31  72                 	db	114
   465  008D32  6F                 	db	111
   466  008D33  67                 	db	103
   467  008D34  72                 	db	114
   468  008D35  61                 	db	97
   469  008D36  6D                 	db	109
   470  008D37  6D                 	db	109
   471  008D38  69                 	db	105
   472  008D39  6E                 	db	110
   473  008D3A  67                 	db	103
   474  008D3B  20                 	db	32
   475  008D3C  66                 	db	102
   476  008D3D  6C                 	db	108
   477  008D3E  61                 	db	97
   478  008D3F  73                 	db	115
   479  008D40  68                 	db	104
   480  008D41  00                 	db	0
   481  008D42                     __end_of_programming_line2:
   482                           	opt stack 0
   483  008D42                     _failed_line2:
   484                           	opt stack 0
   485  008D42  46                 	db	70
   486  008D43  69                 	db	105
   487  008D44  6C                 	db	108
   488  008D45  65                 	db	101
   489  008D46  20                 	db	32
   490  008D47  63                 	db	99
   491  008D48  68                 	db	104
   492  008D49  65                 	db	101
   493  008D4A  63                 	db	99
   494  008D4B  6B                 	db	107
   495  008D4C  20                 	db	32
   496  008D4D  66                 	db	102
   497  008D4E  61                 	db	97
   498  008D4F  69                 	db	105
   499  008D50  6C                 	db	108
   500  008D51  65                 	db	101
   501  008D52  64                 	db	100
   502  008D53  00                 	db	0
   503  008D54                     __end_of_failed_line2:
   504                           	opt stack 0
   505  008D54                     _found_line4:
   506                           	opt stack 0
   507  008D54  50                 	db	80
   508  008D55  72                 	db	114
   509  008D56  65                 	db	101
   510  008D57  73                 	db	115
   511  008D58  73                 	db	115
   512  008D59  20                 	db	32
   513  008D5A  74                 	db	116
   514  008D5B  6F                 	db	111
   515  008D5C  20                 	db	32
   516  008D5D  75                 	db	117
   517  008D5E  73                 	db	115
   518  008D5F  65                 	db	101
   519  008D60  20                 	db	32
   520  008D61  66                 	db	102
   521  008D62  69                 	db	105
   522  008D63  6C                 	db	108
   523  008D64  65                 	db	101
   524  008D65  00                 	db	0
   525  008D66                     __end_of_found_line4:
   526                           	opt stack 0
   527  008D66                     _checked_line4:
   528                           	opt stack 0
   529  008D66  50                 	db	80
   530  008D67  72                 	db	114
   531  008D68  65                 	db	101
   532  008D69  73                 	db	115
   533  008D6A  73                 	db	115
   534  008D6B  20                 	db	32
   535  008D6C  74                 	db	116
   536  008D6D  6F                 	db	111
   537  008D6E  20                 	db	32
   538  008D6F  70                 	db	112
   539  008D70  72                 	db	114
   540  008D71  6F                 	db	111
   541  008D72  67                 	db	103
   542  008D73  72                 	db	114
   543  008D74  61                 	db	97
   544  008D75  6D                 	db	109
   545  008D76  00                 	db	0
   546  008D77                     __end_of_checked_line4:
   547                           	opt stack 0
   548  008D77                     _start_line2:
   549                           	opt stack 0
   550  008D77  4C                 	db	76
   551  008D78  6F                 	db	111
   552  008D79  6F                 	db	111
   553  008D7A  6B                 	db	107
   554  008D7B  69                 	db	105
   555  008D7C  6E                 	db	110
   556  008D7D  67                 	db	103
   557  008D7E  20                 	db	32
   558  008D7F  66                 	db	102
   559  008D80  6F                 	db	111
   560  008D81  72                 	db	114
   561  008D82  20                 	db	32
   562  008D83  66                 	db	102
   563  008D84  69                 	db	105
   564  008D85  6C                 	db	108
   565  008D86  65                 	db	101
   566  008D87  00                 	db	0
   567  008D88                     __end_of_start_line2:
   568                           	opt stack 0
   569  008D88                     _start_line1:
   570                           	opt stack 0
   571  008D88  42                 	db	66
   572  008D89  6F                 	db	111
   573  008D8A  6F                 	db	111
   574  008D8B  74                 	db	116
   575  008D8C  6C                 	db	108
   576  008D8D  6F                 	db	111
   577  008D8E  61                 	db	97
   578  008D8F  64                 	db	100
   579  008D90  65                 	db	101
   580  008D91  72                 	db	114
   581  008D92  20                 	db	32
   582  008D93  4D                 	db	77
   583  008D94  6F                 	db	111
   584  008D95  64                 	db	100
   585  008D96  65                 	db	101
   586  008D97  00                 	db	0
   587  008D98  00                 	db	0
   588  008D99                     __end_of_start_line1:
   589                           	opt stack 0
   590  008D99                     _done_line4:
   591                           	opt stack 0
   592  008D99  50                 	db	80
   593  008D9A  72                 	db	114
   594  008D9B  65                 	db	101
   595  008D9C  73                 	db	115
   596  008D9D  73                 	db	115
   597  008D9E  20                 	db	32
   598  008D9F  74                 	db	116
   599  008DA0  6F                 	db	111
   600  008DA1  20                 	db	32
   601  008DA2  72                 	db	114
   602  008DA3  65                 	db	101
   603  008DA4  62                 	db	98
   604  008DA5  6F                 	db	111
   605  008DA6  6F                 	db	111
   606  008DA7  74                 	db	116
   607  008DA8  00                 	db	0
   608  008DA9                     __end_of_done_line4:
   609                           	opt stack 0
   610  008DA9                     _done_line3:
   611                           	opt stack 0
   612  008DA9  50                 	db	80
   613  008DAA  61                 	db	97
   614  008DAB  67                 	db	103
   615  008DAC  65                 	db	101
   616  008DAD  73                 	db	115
   617  008DAE  20                 	db	32
   618  008DAF  77                 	db	119
   619  008DB0  72                 	db	114
   620  008DB1  69                 	db	105
   621  008DB2  74                 	db	116
   622  008DB3  74                 	db	116
   623  008DB4  65                 	db	101
   624  008DB5  6E                 	db	110
   625  008DB6  3A                 	db	58
   626  008DB7  20                 	db	32
   627  008DB8  00                 	db	0
   628  008DB9                     __end_of_done_line3:
   629                           	opt stack 0
   630  008DB9                     _done_line1:
   631                           	opt stack 0
   632  008DB9  42                 	db	66
   633  008DBA  6F                 	db	111
   634  008DBB  6F                 	db	111
   635  008DBC  74                 	db	116
   636  008DBD  6C                 	db	108
   637  008DBE  6F                 	db	111
   638  008DBF  61                 	db	97
   639  008DC0  64                 	db	100
   640  008DC1  65                 	db	101
   641  008DC2  72                 	db	114
   642  008DC3  20                 	db	32
   643  008DC4  4D                 	db	77
   644  008DC5  6F                 	db	111
   645  008DC6  64                 	db	100
   646  008DC7  65                 	db	101
   647  008DC8  00                 	db	0
   648  008DC9                     __end_of_done_line1:
   649                           	opt stack 0
   650  008DC9                     _programming_line4:
   651                           	opt stack 0
   652  008DC9  50                 	db	80
   653  008DCA  61                 	db	97
   654  008DCB  67                 	db	103
   655  008DCC  65                 	db	101
   656  008DCD  73                 	db	115
   657  008DCE  20                 	db	32
   658  008DCF  77                 	db	119
   659  008DD0  72                 	db	114
   660  008DD1  69                 	db	105
   661  008DD2  74                 	db	116
   662  008DD3  74                 	db	116
   663  008DD4  65                 	db	101
   664  008DD5  6E                 	db	110
   665  008DD6  3A                 	db	58
   666  008DD7  20                 	db	32
   667  008DD8  00                 	db	0
   668  008DD9                     __end_of_programming_line4:
   669                           	opt stack 0
   670  008DD9                     _programming_line1:
   671                           	opt stack 0
   672  008DD9  42                 	db	66
   673  008DDA  6F                 	db	111
   674  008DDB  6F                 	db	111
   675  008DDC  74                 	db	116
   676  008DDD  6C                 	db	108
   677  008DDE  6F                 	db	111
   678  008DDF  61                 	db	97
   679  008DE0  64                 	db	100
   680  008DE1  65                 	db	101
   681  008DE2  72                 	db	114
   682  008DE3  20                 	db	32
   683  008DE4  4D                 	db	77
   684  008DE5  6F                 	db	111
   685  008DE6  64                 	db	100
   686  008DE7  65                 	db	101
   687  008DE8  00                 	db	0
   688  008DE9                     __end_of_programming_line1:
   689                           	opt stack 0
   690  008DE9                     _failed_line1:
   691                           	opt stack 0
   692  008DE9  42                 	db	66
   693  008DEA  6F                 	db	111
   694  008DEB  6F                 	db	111
   695  008DEC  74                 	db	116
   696  008DED  6C                 	db	108
   697  008DEE  6F                 	db	111
   698  008DEF  61                 	db	97
   699  008DF0  64                 	db	100
   700  008DF1  65                 	db	101
   701  008DF2  72                 	db	114
   702  008DF3  20                 	db	32
   703  008DF4  4D                 	db	77
   704  008DF5  6F                 	db	111
   705  008DF6  64                 	db	100
   706  008DF7  65                 	db	101
   707  008DF8  00                 	db	0
   708  008DF9                     __end_of_failed_line1:
   709                           	opt stack 0
   710  008DF9                     _checked_line1:
   711                           	opt stack 0
   712  008DF9  42                 	db	66
   713  008DFA  6F                 	db	111
   714  008DFB  6F                 	db	111
   715  008DFC  74                 	db	116
   716  008DFD  6C                 	db	108
   717  008DFE  6F                 	db	111
   718  008DFF  61                 	db	97
   719  008E00  64                 	db	100
   720  008E01  65                 	db	101
   721  008E02  72                 	db	114
   722  008E03  20                 	db	32
   723  008E04  4D                 	db	77
   724  008E05  6F                 	db	111
   725  008E06  64                 	db	100
   726  008E07  65                 	db	101
   727  008E08  00                 	db	0
   728  008E09                     __end_of_checked_line1:
   729                           	opt stack 0
   730  008E09                     _verify_line1:
   731                           	opt stack 0
   732  008E09  42                 	db	66
   733  008E0A  6F                 	db	111
   734  008E0B  6F                 	db	111
   735  008E0C  74                 	db	116
   736  008E0D  6C                 	db	108
   737  008E0E  6F                 	db	111
   738  008E0F  61                 	db	97
   739  008E10  64                 	db	100
   740  008E11  65                 	db	101
   741  008E12  72                 	db	114
   742  008E13  20                 	db	32
   743  008E14  4D                 	db	77
   744  008E15  6F                 	db	111
   745  008E16  64                 	db	100
   746  008E17  65                 	db	101
   747  008E18  00                 	db	0
   748  008E19                     __end_of_verify_line1:
   749                           	opt stack 0
   750  008E19                     _found_line1:
   751                           	opt stack 0
   752  008E19  42                 	db	66
   753  008E1A  6F                 	db	111
   754  008E1B  6F                 	db	111
   755  008E1C  74                 	db	116
   756  008E1D  6C                 	db	108
   757  008E1E  6F                 	db	111
   758  008E1F  61                 	db	97
   759  008E20  64                 	db	100
   760  008E21  65                 	db	101
   761  008E22  72                 	db	114
   762  008E23  20                 	db	32
   763  008E24  4D                 	db	77
   764  008E25  6F                 	db	111
   765  008E26  64                 	db	100
   766  008E27  65                 	db	101
   767  008E28  00                 	db	0
   768  008E29                     __end_of_found_line1:
   769                           	opt stack 0
   770  008E29                     _failed_line3_checksum:
   771                           	opt stack 0
   772  008E29  43                 	db	67
   773  008E2A  68                 	db	104
   774  008E2B  65                 	db	101
   775  008E2C  63                 	db	99
   776  008E2D  6B                 	db	107
   777  008E2E  73                 	db	115
   778  008E2F  75                 	db	117
   779  008E30  6D                 	db	109
   780  008E31  20                 	db	32
   781  008E32  65                 	db	101
   782  008E33  72                 	db	114
   783  008E34  72                 	db	114
   784  008E35  6F                 	db	111
   785  008E36  72                 	db	114
   786  008E37  00                 	db	0
   787  008E38                     __end_of_failed_line3_checksum:
   788                           	opt stack 0
   789  008E38                     _failed_line3_noNextRecord:
   790                           	opt stack 0
   791  008E38  4E                 	db	78
   792  008E39  6F                 	db	111
   793  008E3A  20                 	db	32
   794  008E3B  6E                 	db	110
   795  008E3C  65                 	db	101
   796  008E3D  78                 	db	120
   797  008E3E  74                 	db	116
   798  008E3F  20                 	db	32
   799  008E40  72                 	db	114
   800  008E41  65                 	db	101
   801  008E42  63                 	db	99
   802  008E43  6F                 	db	111
   803  008E44  72                 	db	114
   804  008E45  64                 	db	100
   805  008E46  00                 	db	0
   806  008E47                     __end_of_failed_line3_noNextRecord:
   807                           	opt stack 0
   808  008E47                     _failed_line3_dataTooLong:
   809                           	opt stack 0
   810  008E47  44                 	db	68
   811  008E48  61                 	db	97
   812  008E49  74                 	db	116
   813  008E4A  61                 	db	97
   814  008E4B  20                 	db	32
   815  008E4C  74                 	db	116
   816  008E4D  6F                 	db	111
   817  008E4E  6F                 	db	111
   818  008E4F  20                 	db	32
   819  008E50  6C                 	db	108
   820  008E51  6F                 	db	111
   821  008E52  6E                 	db	110
   822  008E53  67                 	db	103
   823  008E54  00                 	db	0
   824  008E55                     __end_of_failed_line3_dataTooLong:
   825                           	opt stack 0
   826  008E55                     _verify_line2:
   827                           	opt stack 0
   828  008E55  56                 	db	86
   829  008E56  65                 	db	101
   830  008E57  72                 	db	114
   831  008E58  69                 	db	105
   832  008E59  66                 	db	102
   833  008E5A  79                 	db	121
   834  008E5B  69                 	db	105
   835  008E5C  6E                 	db	110
   836  008E5D  67                 	db	103
   837  008E5E  2E                 	db	46
   838  008E5F  2E                 	db	46
   839  008E60  2E                 	db	46
   840  008E61  00                 	db	0
   841  008E62                     __end_of_verify_line2:
   842                           	opt stack 0
   843  008E62                     _start_line4:
   844                           	opt stack 0
   845  008E62  64                 	db	100
   846  008E63  72                 	db	114
   847  008E64  69                 	db	105
   848  008E65  76                 	db	118
   849  008E66  65                 	db	101
   850  008E67  2E                 	db	46
   851  008E68  2E                 	db	46
   852  008E69  2E                 	db	46
   853  008E6A  00                 	db	0
   854  008E6B                     __end_of_start_line4:
   855                           	opt stack 0
   856  008E6B                     _failed_line4:
   857                           	opt stack 0
   858  008E6B  52                 	db	82
   859  008E6C  65                 	db	101
   860  008E6D  63                 	db	99
   861  008E6E  6F                 	db	111
   862  008E6F  72                 	db	114
   863  008E70  64                 	db	100
   864  008E71  20                 	db	32
   865  008E72  00                 	db	0
   866  008E73                     __end_of_failed_line4:
   867                           	opt stack 0
   868  008E73                     _checked_line3:
   869                           	opt stack 0
   870  008E73  72                 	db	114
   871  008E74  65                 	db	101
   872  008E75  63                 	db	99
   873  008E76  6F                 	db	111
   874  008E77  72                 	db	114
   875  008E78  64                 	db	100
   876  008E79  73                 	db	115
   877  008E7A  00                 	db	0
   878  008E7B                     __end_of_checked_line3:
   879                           	opt stack 0
   880  008E7B                     _USB_SD_Ptr:
   881                           	opt stack 0
   882  008E7B  CB                 	db	low _sd000
   883  008E7C  8F                 	db	high _sd000
   884  008E7D  E7                 	db	low _sd001
   885  008E7E  8E                 	db	high _sd001
   886  008E7F  1B                 	db	low _sd002
   887  008E80  8F                 	db	high _sd002
   888  008E81  8A                 	db	low _sd003
   889  008E82  8F                 	db	high _sd003
   890  008E83                     __end_of_USB_SD_Ptr:
   891                           	opt stack 0
   892  008E83                     _programming_line3:
   893                           	opt stack 0
   894  008E83  45                 	db	69
   895  008E84  6E                 	db	110
   896  008E85  74                 	db	116
   897  008E86  72                 	db	114
   898  008E87  79                 	db	121
   899  008E88  20                 	db	32
   900  008E89  00                 	db	0
   901  008E8A                     __end_of_programming_line3:
   902                           	opt stack 0
   903  008E8A                     _verify_line3:
   904                           	opt stack 0
   905  008E8A  52                 	db	82
   906  008E8B  65                 	db	101
   907  008E8C  63                 	db	99
   908  008E8D  6F                 	db	111
   909  008E8E  72                 	db	114
   910  008E8F  64                 	db	100
   911  008E90  00                 	db	0
   912  008E91                     __end_of_verify_line3:
   913                           	opt stack 0
   914  008E91                     _found_line3b:
   915                           	opt stack 0
   916  008E91  20                 	db	32
   917  008E92  62                 	db	98
   918  008E93  79                 	db	121
   919  008E94  74                 	db	116
   920  008E95  65                 	db	101
   921  008E96  73                 	db	115
   922  008E97  00                 	db	0
   923  008E98                     __end_of_found_line3b:
   924                           	opt stack 0
   925  008E98                     _found_line3:
   926                           	opt stack 0
   927  008E98  53                 	db	83
   928  008E99  69                 	db	105
   929  008E9A  7A                 	db	122
   930  008E9B  65                 	db	101
   931  008E9C  3A                 	db	58
   932  008E9D  20                 	db	32
   933  008E9E  00                 	db	0
   934  008E9F                     __end_of_found_line3:
   935                           	opt stack 0
   936  008E9F                     _done_line2:
   937                           	opt stack 0
   938  008E9F  44                 	db	68
   939  008EA0  6F                 	db	111
   940  008EA1  6E                 	db	110
   941  008EA2  65                 	db	101
   942  008EA3  21                 	db	33
   943  008EA4  00                 	db	0
   944  008EA5                     __end_of_done_line2:
   945                           	opt stack 0
   946  008EA5                     _USB_CD_Ptr:
   947                           	opt stack 0
   948  008EA5  A7                 	db	low _configDescriptor1
   949  008EA6  8E                 	db	high _configDescriptor1
   950  008EA7                     __end_of_USB_CD_Ptr:
   951                           	opt stack 0
   952  008EA7                     _configDescriptor1:
   953                           	opt stack 0
   954  008EA7  09                 	db	9
   955  008EA8  02                 	db	2
   956  008EA9  40                 	db	64
   957  008EAA  00                 	db	0
   958  008EAB  02                 	db	2
   959  008EAC  01                 	db	1
   960  008EAD  00                 	db	0
   961  008EAE  C0                 	db	192
   962  008EAF  32                 	db	50
   963  008EB0  09                 	db	9
   964  008EB1  04                 	db	4
   965  008EB2  00                 	db	0
   966  008EB3  00                 	db	0
   967  008EB4  02                 	db	2
   968  008EB5  03                 	db	3
   969  008EB6  00                 	db	0
   970  008EB7  00                 	db	0
   971  008EB8  00                 	db	0
   972  008EB9  09                 	db	9
   973  008EBA  21                 	db	33
   974  008EBB  11                 	db	17
   975  008EBC  01                 	db	1
   976  008EBD  00                 	db	0
   977  008EBE  01                 	db	1
   978  008EBF  22                 	db	34
   979  008EC0  1D                 	db	29
   980  008EC1  00                 	db	0
   981  008EC2  07                 	db	7
   982  008EC3  05                 	db	5
   983  008EC4  81                 	db	129
   984  008EC5  03                 	db	3
   985  008EC6  40                 	db	64
   986  008EC7  00                 	db	0
   987  008EC8  01                 	db	1
   988  008EC9  07                 	db	7
   989  008ECA  05                 	db	5
   990  008ECB  01                 	db	1
   991  008ECC  03                 	db	3
   992  008ECD  40                 	db	64
   993  008ECE  00                 	db	0
   994  008ECF  01                 	db	1
   995  008ED0  09                 	db	9
   996  008ED1  04                 	db	4
   997  008ED2  01                 	db	1
   998  008ED3  00                 	db	0
   999  008ED4  02                 	db	2
  1000  008ED5  08                 	db	8
  1001  008ED6  06                 	db	6
  1002  008ED7  50                 	db	80
  1003  008ED8  00                 	db	0
  1004  008ED9  07                 	db	7
  1005  008EDA  05                 	db	5
  1006  008EDB  82                 	db	130
  1007  008EDC  02                 	db	2
  1008  008EDD  40                 	db	64
  1009  008EDE  00                 	db	0
  1010  008EDF  01                 	db	1
  1011  008EE0  07                 	db	7
  1012  008EE1  05                 	db	5
  1013  008EE2  02                 	db	2
  1014  008EE3  02                 	db	2
  1015  008EE4  40                 	db	64
  1016  008EE5  00                 	db	0
  1017  008EE6  01                 	db	1
  1018  008EE7                     __end_of_configDescriptor1:
  1019                           	opt stack 0
  1020  008EE7                     _sd001:
  1021                           	opt stack 0
  1022  008EE7  34                 	db	52
  1023  008EE8  03                 	db	3
  1024  008EE9  0053               	dw	83
  1025  008EEB  006F               	dw	111
  1026  008EED  006C               	dw	108
  1027  008EEF  0064               	dw	100
  1028  008EF1  0065               	dw	101
  1029  008EF3  0072               	dw	114
  1030  008EF5  006E               	dw	110
  1031  008EF7  0065               	dw	101
  1032  008EF9  0072               	dw	114
  1033  008EFB  0064               	dw	100
  1034  008EFD  002E               	dw	46
  1035  008EFF  0063               	dw	99
  1036  008F01  006F               	dw	111
  1037  008F03  006D               	dw	109
  1038  008F05  0020               	dw	32
  1039  008F07  0020               	dw	32
  1040  008F09  0020               	dw	32
  1041  008F0B  0020               	dw	32
  1042  008F0D  0020               	dw	32
  1043  008F0F  0020               	dw	32
  1044  008F11  0020               	dw	32
  1045  008F13  0020               	dw	32
  1046  008F15  0020               	dw	32
  1047  008F17  0020               	dw	32
  1048  008F19  0020               	dw	32
  1049  008F1B                     __end_of_sd001:
  1050                           	opt stack 0
  1051  008F1B                     _sd002:
  1052                           	opt stack 0
  1053  008F1B  2E                 	db	46
  1054  008F1C  03                 	db	3
  1055  008F1D  004D               	dw	77
  1056  008F1F  0050               	dw	80
  1057  008F21  0050               	dw	80
  1058  008F23  0054               	dw	84
  1059  008F25  0053               	dw	83
  1060  008F27  006F               	dw	111
  1061  008F29  006C               	dw	108
  1062  008F2B  0061               	dw	97
  1063  008F2D  0072               	dw	114
  1064  008F2F  0020               	dw	32
  1065  008F31  0043               	dw	67
  1066  008F33  0068               	dw	104
  1067  008F35  0061               	dw	97
  1068  008F37  0072               	dw	114
  1069  008F39  0067               	dw	103
  1070  008F3B  0065               	dw	101
  1071  008F3D  0072               	dw	114
  1072  008F3F  0020               	dw	32
  1073  008F41  0052               	dw	82
  1074  008F43  0065               	dw	101
  1075  008F45  0076               	dw	118
  1076  008F47  0043               	dw	67
  1077  008F49                     __end_of_sd002:
  1078                           	opt stack 0
  1079  008F49                     _inq_resp:
  1080                           	opt stack 0
  1081  008F49  00                 	db	0
  1082  008F4A  80                 	db	128
  1083  008F4B  04                 	db	4
  1084  008F4C  02                 	db	2
  1085  008F4D  20                 	db	32
  1086  008F4E  00                 	db	0
  1087  008F4F  00                 	db	0
  1088  008F50  00                 	db	0
  1089  008F51  4D                 	db	77
  1090  008F52  69                 	db	105
  1091  008F53  63                 	db	99
  1092  008F54  72                 	db	114
  1093  008F55  6F                 	db	111
  1094  008F56  63                 	db	99
  1095  008F57  68                 	db	104
  1096  008F58  70                 	db	112
  1097  008F59  4D                 	db	77
  1098  008F5A  61                 	db	97
  1099  008F5B  73                 	db	115
  1100  008F5C  73                 	db	115
  1101  008F5D  20                 	db	32
  1102  008F5E  53                 	db	83
  1103  008F5F  74                 	db	116
  1104  008F60  6F                 	db	111
  1105  008F61  72                 	db	114
  1106  008F62  61                 	db	97
  1107  008F63  67                 	db	103
  1108  008F64  65                 	db	101
  1109  008F65  20                 	db	32
  1110  008F66  20                 	db	32
  1111  008F67  20                 	db	32
  1112  008F68  20                 	db	32
  1113  008F69  30                 	db	48
  1114  008F6A  30                 	db	48
  1115  008F6B  30                 	db	48
  1116  008F6C  31                 	db	49
  1117  008F6D                     __end_of_inq_resp:
  1118                           	opt stack 0
  1119  008F6D                     _hid_rpt01:
  1120                           	opt stack 0
  1121  008F6D  06                 	db	6
  1122  008F6E  00                 	db	0
  1123  008F6F  FF                 	db	255
  1124  008F70  09                 	db	9
  1125  008F71  01                 	db	1
  1126  008F72  A1                 	db	161
  1127  008F73  01                 	db	1
  1128  008F74  19                 	db	25
  1129  008F75  01                 	db	1
  1130  008F76  29                 	db	41
  1131  008F77  40                 	db	64
  1132  008F78  15                 	db	21
  1133  008F79  00                 	db	0
  1134  008F7A  26                 	db	38
  1135  008F7B  FF                 	db	255
  1136  008F7C  00                 	db	0
  1137  008F7D  75                 	db	117
  1138  008F7E  08                 	db	8
  1139  008F7F  95                 	db	149
  1140  008F80  40                 	db	64
  1141  008F81  81                 	db	129
  1142  008F82  00                 	db	0
  1143  008F83  19                 	db	25
  1144  008F84  01                 	db	1
  1145  008F85  29                 	db	41
  1146  008F86  40                 	db	64
  1147  008F87  91                 	db	145
  1148  008F88  00                 	db	0
  1149  008F89  C0                 	db	192
  1150  008F8A                     __end_of_hid_rpt01:
  1151                           	opt stack 0
  1152  008F8A                     _sd003:
  1153                           	opt stack 0
  1154  008F8A  1A                 	db	26
  1155  008F8B  03                 	db	3
  1156  008F8C  0031               	dw	49
  1157  008F8E  0032               	dw	50
  1158  008F90  0033               	dw	51
  1159  008F92  0034               	dw	52
  1160  008F94  0035               	dw	53
  1161  008F96  0036               	dw	54
  1162  008F98  0037               	dw	55
  1163  008F9A  0038               	dw	56
  1164  008F9C  0039               	dw	57
  1165  008F9E  0030               	dw	48
  1166  008FA0  0039               	dw	57
  1167  008FA2  0039               	dw	57
  1168  008FA4                     __end_of_sd003:
  1169                           	opt stack 0
  1170  008FA4                     _device_dsc:
  1171                           	opt stack 0
  1172  008FA4  12                 	db	18
  1173  008FA5  01                 	db	1
  1174  008FA6  0200               	dw	512
  1175  008FA8  00                 	db	0
  1176  008FA9  00                 	db	0
  1177  008FAA  00                 	db	0
  1178  008FAB  08                 	db	8
  1179  008FAC  04D8               	dw	1240
  1180  008FAE  F08E               	dw	61582
  1181  008FB0  0100               	dw	256
  1182  008FB2  01                 	db	1
  1183  008FB3  02                 	db	2
  1184  008FB4  00                 	db	0
  1185  008FB5  01                 	db	1
  1186  008FB6                     __end_of_device_dsc:
  1187                           	opt stack 0
  1188  008FB6                     _bootloader_filename:
  1189                           	opt stack 0
  1190  008FB6  46                 	db	70
  1191  008FB7  49                 	db	73
  1192  008FB8  52                 	db	82
  1193  008FB9  4D                 	db	77
  1194  008FBA  57                 	db	87
  1195  008FBB  41                 	db	65
  1196  008FBC  52                 	db	82
  1197  008FBD  45                 	db	69
  1198  008FBE  00                 	db	0
  1199  008FBF                     __end_of_bootloader_filename:
  1200                           	opt stack 0
  1201  008FBF                     _flash_command_pagesize_528:
  1202                           	opt stack 0
  1203  008FBF  3D                 	db	61
  1204  008FC0  2A                 	db	42
  1205  008FC1  80                 	db	128
  1206  008FC2  A7                 	db	167
  1207  008FC3                     __end_of_flash_command_pagesize_528:
  1208                           	opt stack 0
  1209  008FC3                     _flash_command_pagesize_512:
  1210                           	opt stack 0
  1211  008FC3  3D                 	db	61
  1212  008FC4  2A                 	db	42
  1213  008FC5  80                 	db	128
  1214  008FC6  A6                 	db	166
  1215  008FC7                     __end_of_flash_command_pagesize_512:
  1216                           	opt stack 0
  1217  008FC7                     _bootloader_extension:
  1218                           	opt stack 0
  1219  008FC7  48                 	db	72
  1220  008FC8  45                 	db	69
  1221  008FC9  58                 	db	88
  1222  008FCA  00                 	db	0
  1223  008FCB                     __end_of_bootloader_extension:
  1224                           	opt stack 0
  1225  008FCB                     _sd000:
  1226                           	opt stack 0
  1227  008FCB  04                 	db	4
  1228  008FCC  03                 	db	3
  1229  008FCD  0409               	dw	1033
  1230  008FCF                     __end_of_sd000:
  1231                           	opt stack 0
  1232  0000                     _RPINR22	set	3837
  1233  0000                     _RPOR22	set	3798
  1234  0000                     _RPOR21	set	3797
  1235  0000                     _RPINR23	set	3838
  1236  0000                     _RPINR21	set	3836
  1237  0000                     _RPOR23	set	3799
  1238  0000                     _RPINR2	set	3810
  1239  0000                     _RPINR3	set	3811
  1240  0000                     _RPINR1	set	3809
  1241  0000                     _PPSCONbits	set	3775
  1242  0000                     _ODCON3bits	set	3904
  1243  0000                     _ANCON0bits	set	3912
  1244  0000                     _UEP0bits	set	3878
  1245  0000                     _UIEbits	set	3894
  1246  0000                     _UADDR	set	3896
  1247  0000                     _UIE	set	3894
  1248  0000                     _UEIE	set	3895
  1249  0000                     _UCFG	set	3897
  1250  0000                     _UEP1	set	3879
  1251  0000                     _UEP0	set	3878
  1252  0000                     _TBLPTR	set	4086
  1253  0000                     _DMACON2bits	set	3974
  1254  0000                     _SSP2STATbits	set	3955
  1255  0000                     _INTCON	set	4082
  1256  0000                     _EECON1	set	4006
  1257  0000                     _TABLAT	set	4085
  1258  0000                     _EECON1bits	set	4006
  1259  0000                     _SSP1BUF	set	4041
  1260  0000                     _SSP1CON2bits	set	4037
  1261  0000                     _SSP1CON1bits	set	4038
  1262  0000                     _SSP1ADD	set	4040
  1263  0000                     _SSP1STATbits	set	4039
  1264  0000                     _SSP2CON1bits	set	3954
  1265  0000                     _LATAbits	set	3977
  1266  0000                     _TRISAbits	set	3986
  1267  0000                     _LATEbits	set	3981
  1268  0000                     _TRISEbits	set	3990
  1269  0000                     _LATBbits	set	3978
  1270  0000                     _TRISBbits	set	3987
  1271  0000                     _LATDbits	set	3980
  1272  0000                     _TRISDbits	set	3989
  1273  0000                     _LATCbits	set	3979
  1274  0000                     _TRISCbits	set	3988
  1275  0000                     _T0CONbits	set	4053
  1276  0000                     _INTCON2bits	set	4081
  1277  0000                     _EECON2	set	4007
  1278  0000                     _PORTBbits	set	3969
  1279  0000                     _INTCON3bits	set	4080
  1280  0000                     _TMR0L	set	4054
  1281  0000                     _TMR0H	set	4055
  1282  0000                     _INTCONbits	set	4082
  1283  0000                     _OSCCON	set	4051
  1284  0000                     _OSCTUNEbits	set	3995
  1285  0000                     _PORTAbits	set	3968
  1286  0000                     _PIR3bits	set	4004
  1287  0000                     _DMABCL	set	3943
  1288  0000                     _DMABCH	set	3942
  1289  0000                     _RXADDRL	set	3945
  1290  0000                     _RXADDRH	set	3944
  1291  0000                     _DMACON1bits	set	3976
  1292  0000                     _TXADDRL	set	3947
  1293  0000                     _TXADDRH	set	3946
  1294  0000                     _PORTDbits	set	3971
  1295  0000                     _USTAT	set	3940
  1296  0000                     _PIR2bits	set	4001
  1297  0000                     _UCON	set	3941
  1298  0000                     _UIRbits	set	3938
  1299  0000                     _UCONbits	set	3941
  1300  0000                     _UIR	set	3938
  1301  0000                     _UEIR	set	3939
  1302  0000                     _PIE2bits	set	4000
  1303  008FCF                     STR_12:
  1304  008FCF  68                 	db	104	;'h'
  1305  008FD0  65                 	db	101	;'e'
  1306  008FD1  6C                 	db	108	;'l'
  1307  008FD2  6C                 	db	108	;'l'
  1308  008FD3  6F                 	db	111	;'o'
  1309  008FD4  20                 	db	32
  1310  008FD5  77                 	db	119	;'w'
  1311  008FD6  6F                 	db	111	;'o'
  1312  008FD7  72                 	db	114	;'r'
  1313  008FD8  6C                 	db	108	;'l'
  1314  008FD9  64                 	db	100	;'d'
  1315  008FDA  21                 	db	33
  1316  008FDB  00                 	db	0
  1317  008FDC                     STR_9:
  1318  008FDC  53                 	db	83	;'S'
  1319  008FDD  6F                 	db	111	;'o'
  1320  008FDE  6C                 	db	108	;'l'
  1321  008FDF  61                 	db	97	;'a'
  1322  008FE0  72                 	db	114	;'r'
  1323  008FE1  43                 	db	67	;'C'
  1324  008FE2  68                 	db	104	;'h'
  1325  008FE3  61                 	db	97	;'a'
  1326  008FE4  72                 	db	114	;'r'
  1327  008FE5  67                 	db	103	;'g'
  1328  008FE6  72                 	db	114	;'r'
  1329  008FE7  00                 	db	0
  1330  008FE8                     STR_10:
  1331  008FE8  46                 	db	70	;'F'
  1332  008FE9  49                 	db	73	;'I'
  1333  008FEA  4C                 	db	76	;'L'
  1334  008FEB  45                 	db	69	;'E'
  1335  008FEC  20                 	db	32
  1336  008FED  20                 	db	32
  1337  008FEE  20                 	db	32
  1338  008FEF  20                 	db	32
  1339  008FF0  00                 	db	0
  1340  008FF1                     STR_1:
  1341  008FF1  4D                 	db	77	;'M'
  1342  008FF2  53                 	db	83	;'S'
  1343  008FF3  44                 	db	68	;'D'
  1344  008FF4  4F                 	db	79	;'O'
  1345  008FF5  53                 	db	83	;'S'
  1346  008FF6  35                 	db	53	;'5'
  1347  008FF7  2E                 	db	46
  1348  008FF8  30                 	db	48	;'0'
  1349  008FF9  00                 	db	0
  1350  008FFA                     STR_11:
  1351  008FFA  54                 	db	84	;'T'
  1352  008FFB  58                 	db	88	;'X'
  1353  008FFC  54                 	db	84	;'T'
  1354  008FFD  00                 	db	0
  1355  0000                     
  1356                           ; #config settings
  1357  008FFE  00                 	db	0	; dummy byte at the end
  1358  0000                     
  1359                           	psect	cinit
  1360  0055A8                     __pcinit:
  1361                           	opt stack 0
  1362  0055A8                     start_initialization:
  1363                           	opt stack 0
  1364  0055A8                     __initialization:
  1365                           	opt stack 0
  1366                           
  1367                           ; Initialize objects allocated to BANK2 (8 bytes)
  1368                           ; load TBLPTR registers with __pidataBANK2
  1369  0055A8  0EE0               	movlw	low __pidataBANK2
  1370  0055AA  6EF6               	movwf	tblptrl,c
  1371  0055AC  0E7D               	movlw	high __pidataBANK2
  1372  0055AE  6EF7               	movwf	tblptrh,c
  1373  0055B0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1374  0055B2  6EF8               	movwf	tblptru,c
  1375  0055B4  EE02  F0F2         	lfsr	0,__pdataBANK2
  1376  0055B8  EE10 F008          	lfsr	1,8
  1377  0055BC                     copy_data0:
  1378  0055BC  0009               	tblrd		*+
  1379  0055BE  CFF5 FFEE          	movff	tablat,postinc0
  1380  0055C2  50E5               	movf	postdec1,w,c
  1381  0055C4  50E1               	movf	fsr1l,w,c
  1382  0055C6  E1FA               	bnz	copy_data0
  1383                           
  1384                           ; Initialize objects allocated to BANK1 (29 bytes)
  1385                           ; load TBLPTR registers with __pidataBANK1
  1386  0055C8  0EF0               	movlw	low __pidataBANK1
  1387  0055CA  6EF6               	movwf	tblptrl,c
  1388  0055CC  0E7B               	movlw	high __pidataBANK1
  1389  0055CE  6EF7               	movwf	tblptrh,c
  1390  0055D0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1391  0055D2  6EF8               	movwf	tblptru,c
  1392  0055D4  EE01  F0E2         	lfsr	0,__pdataBANK1
  1393  0055D8  EE10 F01D          	lfsr	1,29
  1394  0055DC                     copy_data1:
  1395  0055DC  0009               	tblrd		*+
  1396  0055DE  CFF5 FFEE          	movff	tablat,postinc0
  1397  0055E2  50E5               	movf	postdec1,w,c
  1398  0055E4  50E1               	movf	fsr1l,w,c
  1399  0055E6  E1FA               	bnz	copy_data1
  1400                           
  1401                           ; Initialize objects allocated to BANK0 (1 bytes)
  1402                           ; load TBLPTR registers with __pidataBANK0
  1403  0055E8  0E30               	movlw	low __pidataBANK0
  1404  0055EA  6EF6               	movwf	tblptrl,c
  1405  0055EC  0E7E               	movlw	high __pidataBANK0
  1406  0055EE  6EF7               	movwf	tblptrh,c
  1407  0055F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1408  0055F2  6EF8               	movwf	tblptru,c
  1409  0055F4  0009               	tblrd		*+	;fetch initializer
  1410  0055F6  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1411                           
  1412                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1413  0055FA  EE03  F040         	lfsr	0,__pbssBIGRAMll
  1414  0055FE  EE12 F000          	lfsr	1,512
  1415  005602                     clear_0:
  1416  005602  6AEE               	clrf	postinc0,c
  1417  005604  50E5               	movf	postdec1,w,c
  1418  005606  50E1               	movf	fsr1l,w,c
  1419  005608  E1FC               	bnz	clear_0
  1420  00560A  50E2               	movf	fsr1h,w,c
  1421  00560C  E1FA               	bnz	clear_0
  1422                           
  1423                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1424  00560E  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1425  005612  EE14 F000          	lfsr	1,1024
  1426  005616                     clear_1:
  1427  005616  6AEE               	clrf	postinc0,c
  1428  005618  50E5               	movf	postdec1,w,c
  1429  00561A  50E1               	movf	fsr1l,w,c
  1430  00561C  E1FC               	bnz	clear_1
  1431  00561E  50E2               	movf	fsr1h,w,c
  1432  005620  E1FA               	bnz	clear_1
  1433                           
  1434                           ; Clear objects allocated to BANK3 (64 bytes)
  1435  005622  EE03  F000         	lfsr	0,__pbssBANK3
  1436  005626  0E40               	movlw	64
  1437  005628                     clear_2:
  1438  005628  6AEE               	clrf	postinc0,c
  1439  00562A  06E8               	decf	wreg,f,c
  1440  00562C  E1FD               	bnz	clear_2
  1441                           
  1442                           ; Clear objects allocated to BANK2 (242 bytes)
  1443  00562E  EE02  F000         	lfsr	0,__pbssBANK2
  1444  005632  0EF2               	movlw	242
  1445  005634                     clear_3:
  1446  005634  6AEE               	clrf	postinc0,c
  1447  005636  06E8               	decf	wreg,f,c
  1448  005638  E1FD               	bnz	clear_3
  1449                           
  1450                           ; Clear objects allocated to BANK1 (226 bytes)
  1451  00563A  EE01  F000         	lfsr	0,__pbssBANK1
  1452  00563E  0EE2               	movlw	226
  1453  005640                     clear_4:
  1454  005640  6AEE               	clrf	postinc0,c
  1455  005642  06E8               	decf	wreg,f,c
  1456  005644  E1FD               	bnz	clear_4
  1457                           
  1458                           ; Clear objects allocated to BANK0 (85 bytes)
  1459  005646  EE00  F060         	lfsr	0,__pbssBANK0
  1460  00564A  0E55               	movlw	85
  1461  00564C                     clear_5:
  1462  00564C  6AEE               	clrf	postinc0,c
  1463  00564E  06E8               	decf	wreg,f,c
  1464  005650  E1FD               	bnz	clear_5
  1465  005652                     end_of_initialization:
  1466                           	opt stack 0
  1467  005652                     __end_of__initialization:
  1468                           	opt stack 0
  1469  005652  0100               	movlb	0
  1470  005654  EF46  F01B         	goto	_main	;jump to C main() function
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1h	equ	0xFE2
  1479                           fsr1l	equ	0xFE1
  1480                           
  1481                           	psect	bssBANK0
  1482  000060                     __pbssBANK0:
  1483                           	opt stack 0
  1484  000060                     _os:
  1485                           	opt stack 0
  1486  000060                     	ds	6
  1487  000066                     _inPipes:
  1488                           	opt stack 0
  1489  000066                     	ds	6
  1490  00006C                     _pBDTEntryIn:
  1491                           	opt stack 0
  1492  00006C                     	ds	6
  1493  000072                     _pBDTEntryOut:
  1494                           	opt stack 0
  1495  000072                     	ds	6
  1496  000078                     _hex_file_size:
  1497                           	opt stack 0
  1498  000078                     	ds	4
  1499  00007C                     _hex_file_offset:
  1500                           	opt stack 0
  1501  00007C                     	ds	4
  1502  000080                     _LBA:
  1503                           	opt stack 0
  1504  000080                     	ds	4
  1505  000084                     _USBOutHandle:
  1506                           	opt stack 0
  1507  000084                     	ds	2
  1508  000086                     _TransferLength:
  1509                           	opt stack 0
  1510  000086                     	ds	2
  1511  000088                     _USBMSDInHandle:
  1512                           	opt stack 0
  1513  000088                     	ds	2
  1514  00008A                     _USBMSDOutHandle:
  1515                           	opt stack 0
  1516  00008A                     	ds	2
  1517  00008C                     _ptrNextData:
  1518                           	opt stack 0
  1519  00008C                     	ds	2
  1520  00008E                     _pDst:
  1521                           	opt stack 0
  1522  00008E                     	ds	2
  1523  000090                     _pBDTEntryEP0OutNext:
  1524                           	opt stack 0
  1525  000090                     	ds	2
  1526  000092                     _pBDTEntryEP0OutCurrent:
  1527                           	opt stack 0
  1528  000092                     	ds	2
  1529  000094                     _active_configuration:
  1530                           	opt stack 0
  1531  000094                     	ds	1
  1532  000095                     _start_from_byte_next:
  1533                           	opt stack 0
  1534  000095                     	ds	1
  1535  000096                     _last_error:
  1536                           	opt stack 0
  1537  000096                     	ds	1
  1538  000097                     _power_state:
  1539                           	opt stack 0
  1540  000097                     	ds	1
  1541  000098                     _userInterfaceStatus:
  1542                           	opt stack 0
  1543  000098                     	ds	1
  1544  000099                     _i2c_frequency:
  1545                           	opt stack 0
  1546  000099                     	ds	1
  1547  00009A                     _MSDCBWValid:
  1548                           	opt stack 0
  1549  00009A                     	ds	1
  1550  00009B                     _MSDHostNoData:
  1551                           	opt stack 0
  1552  00009B                     	ds	1
  1553  00009C                     _SoftDetach:
  1554                           	opt stack 0
  1555  00009C                     	ds	1
  1556  00009D                     _gblCBWLength:
  1557                           	opt stack 0
  1558  00009D                     	ds	1
  1559  00009E                     _MSDRetryAttempt:
  1560                           	opt stack 0
  1561  00009E                     	ds	1
  1562  00009F                     _MSDWriteState:
  1563                           	opt stack 0
  1564  00009F                     	ds	1
  1565  0000A0                     _MSDReadState:
  1566                           	opt stack 0
  1567  0000A0                     	ds	1
  1568  0000A1                     _MSDCommandState:
  1569                           	opt stack 0
  1570  0000A1                     	ds	1
  1571  0000A2                     _MSD_State:
  1572                           	opt stack 0
  1573  0000A2                     	ds	1
  1574  0000A3                     _USBTicksSinceSuspendEnd:
  1575                           	opt stack 0
  1576  0000A3                     	ds	1
  1577  0000A4                     _USBDeferOUTDataStagePackets:
  1578                           	opt stack 0
  1579  0000A4                     	ds	1
  1580  0000A5                     _USBDeferINDataStagePackets:
  1581                           	opt stack 0
  1582  0000A5                     	ds	1
  1583  0000A6                     _USBStatusStageEnabledFlag2:
  1584                           	opt stack 0
  1585  0000A6                     	ds	1
  1586  0000A7                     _USBStatusStageEnabledFlag1:
  1587                           	opt stack 0
  1588  0000A7                     	ds	1
  1589  0000A8                     _USBDeferStatusStagePacket:
  1590                           	opt stack 0
  1591  0000A8                     	ds	1
  1592  0000A9                     _USBStatusStageTimeoutCounter:
  1593                           	opt stack 0
  1594  0000A9                     	ds	1
  1595  0000AA                     _BothEP0OutUOWNsSet:
  1596                           	opt stack 0
  1597  0000AA                     	ds	1
  1598  0000AB                     _endpoint_number:
  1599                           	opt stack 0
  1600  0000AB                     	ds	1
  1601  0000AC                     _USBBusIsSuspended:
  1602                           	opt stack 0
  1603  0000AC                     	ds	1
  1604  0000AD                     _RemoteWakeup:
  1605                           	opt stack 0
  1606  0000AD                     	ds	1
  1607  0000AE                     _controlTransferState:
  1608                           	opt stack 0
  1609  0000AE                     	ds	1
  1610  0000AF                     _shortPacketStatus:
  1611                           	opt stack 0
  1612  0000AF                     	ds	1
  1613  0000B0                     _USBDeviceState:
  1614                           	opt stack 0
  1615  0000B0                     	ds	1
  1616  0000B1                     _active_protocol:
  1617                           	opt stack 0
  1618  0000B1                     	ds	1
  1619  0000B2                     _idle_rate:
  1620                           	opt stack 0
  1621  0000B2                     	ds	1
  1622  0000B3                     _USTATcopy:
  1623                           	opt stack 0
  1624  0000B3                     	ds	1
  1625  0000B4                     _USBActiveConfiguration:
  1626                           	opt stack 0
  1627  0000B4                     	ds	1
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           postinc0	equ	0xFEE
  1633                           wreg	equ	0xFE8
  1634                           postdec1	equ	0xFE5
  1635                           fsr1h	equ	0xFE2
  1636                           fsr1l	equ	0xFE1
  1637                           
  1638                           	psect	dataBANK0
  1639  0000FE                     __pdataBANK0:
  1640                           	opt stack 0
  1641  0000FE                     _file_number:
  1642                           	opt stack 0
  1643  0000FE                     	ds	1
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           
  1654                           	psect	bssBANK1
  1655  000100                     __pbssBANK1:
  1656                           	opt stack 0
  1657  000100                     _gblCBW:
  1658                           	opt stack 0
  1659  000100                     	ds	31
  1660  00011F                     _gblSenseData:
  1661                           	opt stack 0
  1662  00011F                     	ds	18
  1663  000131                     _outPipes:
  1664                           	opt stack 0
  1665  000131                     	ds	8
  1666  000139                     _communicationSettings:
  1667                           	opt stack 0
  1668  000139                     	ds	7
  1669  000140                     _extended_linear_address:
  1670                           	opt stack 0
  1671  000140                     	ds	4
  1672  000144                     _file_maximum_address:
  1673                           	opt stack 0
  1674  000144                     	ds	4
  1675  000148                     _file_minimum_address:
  1676                           	opt stack 0
  1677  000148                     	ds	4
  1678  00014C                     _gblBLKLen:
  1679                           	opt stack 0
  1680  00014C                     	ds	4
  1681  000150                     _gblNumBLKS:
  1682                           	opt stack 0
  1683  000150                     	ds	4
  1684  000154                     _USB1msTickCount:
  1685                           	opt stack 0
  1686  000154                     	ds	4
  1687  000158                     _config_external:
  1688                           	opt stack 0
  1689  000158                     	ds	3
  1690  00015B                     _config_internal:
  1691                           	opt stack 0
  1692  00015B                     	ds	3
  1693  00015E                     _ep_data_out:
  1694                           	opt stack 0
  1695  00015E                     	ds	3
  1696  000161                     _ep_data_in:
  1697                           	opt stack 0
  1698  000161                     	ds	3
  1699  000164                     _FileAddress:
  1700                           	opt stack 0
  1701  000164                     	ds	2
  1702  000166                     _flash_pages_written:
  1703                           	opt stack 0
  1704  000166                     	ds	2
  1705  000168                     _total_hex_file_entries:
  1706                           	opt stack 0
  1707  000168                     	ds	2
  1708  00016A                     _hex_file_entries:
  1709                           	opt stack 0
  1710  00016A                     	ds	2
  1711  00016C                     _system_ui_inactive_count:
  1712                           	opt stack 0
  1713  00016C                     	ds	2
  1714  00016E                     _USBInHandle:
  1715                           	opt stack 0
  1716  00016E                     	ds	2
  1717  000170                     _gblMediaPresent:
  1718                           	opt stack 0
  1719  000170                     	ds	2
  1720  000172                     _MSBBufferIndex:
  1721                           	opt stack 0
  1722  000172                     	ds	2
  1723  000174                     _display_content:
  1724                           	opt stack 0
  1725  000174                     	ds	80
  1726  0001C4                     _hex_file_entry:
  1727                           	opt stack 0
  1728  0001C4                     	ds	23
  1729  0001DB                     _mediaInformation:
  1730                           	opt stack 0
  1731  0001DB                     	ds	5
  1732  0001E0                     _USBAlternateInterface:
  1733                           	opt stack 0
  1734  0001E0                     	ds	2
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1h	equ	0xFE2
  1743                           fsr1l	equ	0xFE1
  1744                           
  1745                           	psect	dataBANK1
  1746  0001E2                     __pdataBANK1:
  1747                           	opt stack 0
  1748  0001E2                     _LUN:
  1749                           	opt stack 0
  1750  0001E2                     	ds	20
  1751  0001F6                     i2c_display_send_init_sequence@F6799:
  1752                           	opt stack 0
  1753  0001F6                     	ds	9
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           postdec1	equ	0xFE5
  1761                           fsr1h	equ	0xFE2
  1762                           fsr1l	equ	0xFE1
  1763                           
  1764                           	psect	bssBANK2
  1765  000200                     __pbssBANK2:
  1766                           	opt stack 0
  1767  000200                     __spi_external_rx_buffer:
  1768                           	opt stack 0
  1769  000200                     	ds	64
  1770  000240                     __spi_external_tx_buffer:
  1771                           	opt stack 0
  1772  000240                     	ds	64
  1773  000280                     _ReceivedDataBuffer:
  1774                           	opt stack 0
  1775  000280                     	ds	64
  1776  0002C0                     _file_buffer:
  1777                           	opt stack 0
  1778  0002C0                     	ds	50
  1779                           tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           postdec1	equ	0xFE5
  1786                           fsr1h	equ	0xFE2
  1787                           fsr1l	equ	0xFE1
  1788                           
  1789                           	psect	dataBANK2
  1790  0002F2                     __pdataBANK2:
  1791                           	opt stack 0
  1792  0002F2                     	ds	8
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postdec1	equ	0xFE5
  1800                           fsr1h	equ	0xFE2
  1801                           fsr1l	equ	0xFE1
  1802                           
  1803                           	psect	bssBANK3
  1804  000300                     __pbssBANK3:
  1805                           	opt stack 0
  1806  000300                     _ToSendDataBuffer:
  1807                           	opt stack 0
  1808  000300                     	ds	64
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postdec1	equ	0xFE5
  1816                           fsr1h	equ	0xFE2
  1817                           fsr1l	equ	0xFE1
  1818                           
  1819                           	psect	bssBIGRAMlh
  1820  000800                     __pbssBIGRAMlh:
  1821                           	opt stack 0
  1822  000800                     _pageBuffer:
  1823                           	opt stack 0
  1824  000800                     	ds	1024
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1h	equ	0xFE2
  1833                           fsr1l	equ	0xFE1
  1834                           
  1835                           	psect	bssBIGRAMll
  1836  000340                     __pbssBIGRAMll:
  1837                           	opt stack 0
  1838  000340                     _buffer:
  1839                           	opt stack 0
  1840  000340                     	ds	512
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1h	equ	0xFE2
  1849                           fsr1l	equ	0xFE1
  1850                           
  1851                           	psect	cstackBANK0
  1852  0000B5                     __pcstackBANK0:
  1853                           	opt stack 0
  1854  0000B5                     fat_rename_file@file_number:
  1855                           	opt stack 0
  1856  0000B5                     fat_create_file@next_cluster:
  1857                           	opt stack 0
  1858  0000B5                     fat_append_to_file@sector:
  1859                           	opt stack 0
  1860  0000B5                     fat_read_from_file@sector:
  1861                           	opt stack 0
  1862                           
  1863                           ; 2 bytes @ 0x0
  1864  0000B5                     	ds	1
  1865  0000B6                     fat_rename_file@root:
  1866                           	opt stack 0
  1867                           
  1868                           ; 32 bytes @ 0x1
  1869  0000B6                     	ds	1
  1870  0000B7                     fat_read_from_file@file_number:
  1871                           	opt stack 0
  1872  0000B7                     fat_create_file@cluster_count:
  1873                           	opt stack 0
  1874  0000B7                     fat_append_to_file@file_size:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x2
  1878  0000B7                     	ds	1
  1879  0000B8                     fat_read_from_file@root:
  1880                           	opt stack 0
  1881                           
  1882                           ; 32 bytes @ 0x3
  1883  0000B8                     	ds	1
  1884  0000B9                     fat_create_file@root_slot:
  1885                           	opt stack 0
  1886                           
  1887                           ; 1 bytes @ 0x4
  1888  0000B9                     	ds	1
  1889  0000BA                     fat_create_file@number_of_clusters:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x5
  1893  0000BA                     	ds	1
  1894  0000BB                     fat_append_to_file@new_cluster:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x6
  1898  0000BB                     	ds	1
  1899  0000BC                     fat_create_file@cluster:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x7
  1903  0000BC                     	ds	1
  1904  0000BD                     fat_append_to_file@fat_cluster:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x8
  1908  0000BD                     	ds	1
  1909  0000BE                     fat_create_file@root_entry:
  1910                           	opt stack 0
  1911                           
  1912                           ; 32 bytes @ 0x9
  1913  0000BE                     	ds	1
  1914  0000BF                     fat_append_to_file@offset:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0xA
  1918  0000BF                     	ds	2
  1919  0000C1                     fat_append_to_file@file_number:
  1920                           	opt stack 0
  1921                           
  1922                           ; 1 bytes @ 0xC
  1923  0000C1                     	ds	1
  1924  0000C2                     fat_append_to_file@length:
  1925                           	opt stack 0
  1926                           
  1927                           ; 2 bytes @ 0xD
  1928  0000C2                     	ds	2
  1929  0000C4                     fat_append_to_file@position:
  1930                           	opt stack 0
  1931                           
  1932                           ; 4 bytes @ 0xF
  1933  0000C4                     	ds	4
  1934  0000C8                     fat_append_to_file@root:
  1935                           	opt stack 0
  1936                           
  1937                           ; 32 bytes @ 0x13
  1938  0000C8                     	ds	14
  1939  0000D6                     fat_rename_file@cntr:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0x21
  1943  0000D6                     	ds	2
  1944  0000D8                     fat_read_from_file@cluster:
  1945                           	opt stack 0
  1946                           
  1947                           ; 2 bytes @ 0x23
  1948  0000D8                     	ds	2
  1949  0000DA                     fat_read_from_file@offset:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x25
  1953  0000DA                     	ds	2
  1954  0000DC                     fat_read_from_file@read_length:
  1955                           	opt stack 0
  1956                           
  1957                           ; 2 bytes @ 0x27
  1958  0000DC                     	ds	2
  1959  0000DE                     fat_read_from_file@position:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x29
  1963  0000DE                     	ds	4
  1964  0000E2                     __bootloader_verify_file@rec_counter:
  1965                           	opt stack 0
  1966  0000E2                     __bootloader_program@buffer:
  1967                           	opt stack 0
  1968  0000E2                     __fill_buffer_read_file@file_size:
  1969                           	opt stack 0
  1970                           
  1971                           ; 4 bytes @ 0x2D
  1972  0000E2                     	ds	1
  1973  0000E3                     __bootloader_verify_file@return_value:
  1974                           	opt stack 0
  1975                           
  1976                           ; 4 bytes @ 0x2E
  1977  0000E3                     	ds	1
  1978  0000E4                     __bootloader_program@entry_page:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x2F
  1982  0000E4                     	ds	2
  1983  0000E6                     __bootloader_program@address_within_page:
  1984                           	opt stack 0
  1985  0000E6                     __fill_buffer_read_file@data_length:
  1986                           	opt stack 0
  1987                           
  1988                           ; 4 bytes @ 0x31
  1989  0000E6                     	ds	1
  1990  0000E7                     __bootloader_verify_file@address32:
  1991                           	opt stack 0
  1992                           
  1993                           ; 4 bytes @ 0x32
  1994  0000E7                     	ds	1
  1995  0000E8                     api_parse@inBuffer:
  1996                           	opt stack 0
  1997  0000E8                     __bootloader_program@return_value:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0x33
  2001  0000E8                     	ds	2
  2002  0000EA                     api_parse@receivedDataLength:
  2003                           	opt stack 0
  2004  0000EA                     __fill_buffer_read_file@start:
  2005                           	opt stack 0
  2006                           
  2007                           ; 4 bytes @ 0x35
  2008  0000EA                     	ds	2
  2009  0000EC                     __bootloader_program@address32:
  2010                           	opt stack 0
  2011                           
  2012                           ; 4 bytes @ 0x37
  2013  0000EC                     	ds	2
  2014  0000EE                     api_prepare@inBuffer:
  2015                           	opt stack 0
  2016                           
  2017                           ; 2 bytes @ 0x39
  2018  0000EE                     	ds	2
  2019  0000F0                     __bootloader_program@start_from_byte:
  2020                           	opt stack 0
  2021  0000F0                     api_prepare@outBuffer:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x3B
  2025  0000F0                     	ds	1
  2026  0000F1                     __bootloader_program@cntr:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x3C
  2030  0000F1                     	ds	1
  2031  0000F2                     ??_APP_DeviceCustomHIDTasks:
  2032                           
  2033                           ; 1 bytes @ 0x3D
  2034  0000F2                     	ds	1
  2035  0000F3                     __bootloader_program@page_to_write:
  2036                           	opt stack 0
  2037                           
  2038                           ; 2 bytes @ 0x3E
  2039  0000F3                     	ds	3
  2040  0000F6                     main@tx_start_addr:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0x41
  2044  0000F6                     	ds	2
  2045  0000F8                     main@bytes_transmitted:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0x43
  2049  0000F8                     	ds	2
  2050  0000FA                     main@rx_buffer:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x45
  2054  0000FA                     	ds	2
  2055  0000FC                     main@tx_buffer:
  2056                           	opt stack 0
  2057                           
  2058                           ; 2 bytes @ 0x47
  2059  0000FC                     	ds	2
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1h	equ	0xFE2
  2068                           fsr1l	equ	0xFE1
  2069                           
  2070                           	psect	cstackCOMRAM
  2071  000001                     __pcstackCOMRAM:
  2072                           	opt stack 0
  2073  000001                     ??_USBStdGetDscHandler:
  2074  000001                     ??_USBStdGetStatusHandler:
  2075  000001                     ??_system_delay_ms:
  2076  000001                     ??__i2c_wait_idle:
  2077  000001                     ??__display_clear:
  2078  000001                     ?_USBTransferOnePacket:
  2079                           	opt stack 0
  2080  000001                     ?_spi_get_external_rx_buffer:
  2081                           	opt stack 0
  2082  000001                     ?_spi_get_external_tx_buffer:
  2083                           	opt stack 0
  2084  000001                     ?_ExternalFlash_MediaInitialize:
  2085                           	opt stack 0
  2086  000001                     ?_ExternalFlash_SectorSizeRead:
  2087                           	opt stack 0
  2088  000001                     ?_bootloader_get_entries:
  2089                           	opt stack 0
  2090  000001                     ?_bootloader_get_total_entries:
  2091                           	opt stack 0
  2092  000001                     ?_bootloader_get_rec_address:
  2093                           	opt stack 0
  2094  000001                     ?_bootloader_get_flashPagesWritten:
  2095                           	opt stack 0
  2096  000001                     ?_strncmp:
  2097                           	opt stack 0
  2098  000001                     ?_internalFlash_pageFromAddress:
  2099                           	opt stack 0
  2100  000001                     ?_internalFlash_getBuffer:
  2101                           	opt stack 0
  2102  000001                     ?__get_time:
  2103                           	opt stack 0
  2104  000001                     ?__get_date:
  2105                           	opt stack 0
  2106  000001                     ?__sector_from_cluster:
  2107                           	opt stack 0
  2108  000001                     ?_bootloader_get_rec_dataLength:
  2109                           	opt stack 0
  2110  000001                     ?___lwdiv:
  2111                           	opt stack 0
  2112  000001                     ?___lwmod:
  2113                           	opt stack 0
  2114  000001                     ?_ExternalFlash_CapacityRead:
  2115                           	opt stack 0
  2116  000001                     ?_bootloader_get_file_size:
  2117                           	opt stack 0
  2118  000001                     ?_internalFlash_addressFromPage:
  2119                           	opt stack 0
  2120  000001                     ?___lldiv:
  2121                           	opt stack 0
  2122  000001                     ?___llmod:
  2123                           	opt stack 0
  2124  000001                     USBTransferOnePacket@dir:
  2125                           	opt stack 0
  2126  000001                     USBStallEndpoint@dir:
  2127                           	opt stack 0
  2128  000001                     USBConfigureEndpoint@direction:
  2129                           	opt stack 0
  2130  000001                     USBCtrlTrfTxService@byteToSend:
  2131                           	opt stack 0
  2132  000001                     USBCtrlTrfRxService@i:
  2133                           	opt stack 0
  2134  000001                     __i2c_send@dat:
  2135                           	opt stack 0
  2136  000001                     i2c_set_frequency@frequency:
  2137                           	opt stack 0
  2138  000001                     display_get_character@position:
  2139                           	opt stack 0
  2140  000001                     __display_start@cntr:
  2141                           	opt stack 0
  2142  000001                     hexCharToUint8@c:
  2143                           	opt stack 0
  2144  000001                     bootloader_get_rec_data@index:
  2145                           	opt stack 0
  2146  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2147                           	opt stack 0
  2148  000001                     spi_set_configuration@configuration:
  2149                           	opt stack 0
  2150  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2151                           	opt stack 0
  2152  000001                     SYSTEM_Initialize@pll_startup_counter:
  2153                           	opt stack 0
  2154  000001                     ExternalFlash_MediaInitialize@config:
  2155                           	opt stack 0
  2156  000001                     ExternalFlash_SectorSizeRead@config:
  2157                           	opt stack 0
  2158  000001                     ExternalFlash_CapacityRead@config:
  2159                           	opt stack 0
  2160  000001                     ExternalFlash_MediaDetect@config:
  2161                           	opt stack 0
  2162  000001                     ExternalFlash_WriteProtectStateGet@config:
  2163                           	opt stack 0
  2164  000001                     __sector_from_cluster@fat_cluster:
  2165                           	opt stack 0
  2166  000001                     __get_mbr@idx:
  2167                           	opt stack 0
  2168  000001                     __get_fbr@idx:
  2169                           	opt stack 0
  2170  000001                     __get_fat@idx:
  2171                           	opt stack 0
  2172  000001                     __get_root@idx:
  2173                           	opt stack 0
  2174  000001                     __get_data@idx:
  2175                           	opt stack 0
  2176  000001                     internalFlash_addressFromPage@page:
  2177                           	opt stack 0
  2178  000001                     __fill_buffer_get_configuration@outBuffer:
  2179                           	opt stack 0
  2180  000001                     __parse_file_truncate@data:
  2181                           	opt stack 0
  2182  000001                     __parse_file_modify@data:
  2183                           	opt stack 0
  2184  000001                     spi_tx@data:
  2185                           	opt stack 0
  2186  000001                     spi_tx_tx@command:
  2187                           	opt stack 0
  2188  000001                     spi_tx_rx@command:
  2189                           	opt stack 0
  2190  000001                     ___lwdiv@dividend:
  2191                           	opt stack 0
  2192  000001                     ___lwmod@dividend:
  2193                           	opt stack 0
  2194  000001                     memcpy@d1:
  2195                           	opt stack 0
  2196  000001                     memset@p1:
  2197                           	opt stack 0
  2198  000001                     strncmp@s1:
  2199                           	opt stack 0
  2200  000001                     __spi_init@details:
  2201                           	opt stack 0
  2202  000001                     __bootloader_check_address@address:
  2203                           	opt stack 0
  2204  000001                     internalFlash_pageFromAddress@address:
  2205                           	opt stack 0
  2206  000001                     ___lldiv@dividend:
  2207                           	opt stack 0
  2208  000001                     ___llmod@dividend:
  2209                           	opt stack 0
  2210                           
  2211                           ; 4 bytes @ 0x0
  2212  000001                     	ds	1
  2213  000002                     ??_USBConfigureEndpoint:
  2214  000002                     ??_USBStallEndpoint:
  2215  000002                     ??_display_get_character:
  2216  000002                     USBCtrlTrfRxService@byteToRead:
  2217                           	opt stack 0
  2218  000002                     USBCtrlTrfInHandler@lastDTS:
  2219                           	opt stack 0
  2220  000002                     system_delay_ms@ms:
  2221                           	opt stack 0
  2222  000002                     hexCharToUint8@ascii:
  2223                           	opt stack 0
  2224  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2225                           	opt stack 0
  2226  000002                     USBTransferOnePacket@data:
  2227                           	opt stack 0
  2228  000002                     USBStdGetStatusHandler@p:
  2229                           	opt stack 0
  2230                           
  2231                           ; 2 bytes @ 0x1
  2232  000002                     	ds	1
  2233  000003                     ??_MSDComputeDeviceInAndResidue:
  2234  000003                     ??__get_mbr:
  2235  000003                     ??__get_fbr:
  2236  000003                     ??__get_fat:
  2237  000003                     ??__get_root:
  2238  000003                     ?_hexCharsToUint16:
  2239                           	opt stack 0
  2240  000003                     system_delay_ms@cntr:
  2241                           	opt stack 0
  2242  000003                     __display_clear@row:
  2243                           	opt stack 0
  2244  000003                     hexCharsToUint8@c2:
  2245                           	opt stack 0
  2246  000003                     hexCharsToUint16@c2:
  2247                           	opt stack 0
  2248  000003                     SYSTEM_Initialize@pll_startup_counter_3026:
  2249                           	opt stack 0
  2250  000003                     __get_time@time:
  2251                           	opt stack 0
  2252  000003                     __get_date@date:
  2253                           	opt stack 0
  2254  000003                     internalFlash_erasePage@page:
  2255                           	opt stack 0
  2256  000003                     internalFlash_writePage@page:
  2257                           	opt stack 0
  2258  000003                     spi_tx@length:
  2259                           	opt stack 0
  2260  000003                     spi_tx_tx@command_length:
  2261                           	opt stack 0
  2262  000003                     spi_tx_rx@command_length:
  2263                           	opt stack 0
  2264  000003                     ___lwdiv@divisor:
  2265                           	opt stack 0
  2266  000003                     ___lwmod@divisor:
  2267                           	opt stack 0
  2268  000003                     memset@c:
  2269                           	opt stack 0
  2270  000003                     strncmp@s2:
  2271                           	opt stack 0
  2272  000003                     memcpy@s1:
  2273                           	opt stack 0
  2274                           
  2275                           ; 3 bytes @ 0x2
  2276  000003                     	ds	1
  2277  000004                     ??_hexCharsToUint8:
  2278  000004                     USBTransferOnePacket@len:
  2279                           	opt stack 0
  2280  000004                     display_get_character@line:
  2281                           	opt stack 0
  2282  000004                     __display_clear@col:
  2283                           	opt stack 0
  2284  000004                     hexCharsToUint16@c3:
  2285                           	opt stack 0
  2286  000004                     spi_init@configuration:
  2287                           	opt stack 0
  2288                           
  2289                           ; 1 bytes @ 0x3
  2290  000004                     	ds	1
  2291  000005                     ??_USBTransferOnePacket:
  2292  000005                     ??_spi_tx:
  2293  000005                     ??_internalFlash_pageFromAddress:
  2294  000005                     SYSTEM_Initialize@state:
  2295                           	opt stack 0
  2296  000005                     hexCharsToUint8@c1:
  2297                           	opt stack 0
  2298  000005                     hexCharsToUint16@c4:
  2299                           	opt stack 0
  2300  000005                     __bootloader_check_address@dataLength:
  2301                           	opt stack 0
  2302  000005                     ___lwmod@counter:
  2303                           	opt stack 0
  2304  000005                     __update_modified_time@root:
  2305                           	opt stack 0
  2306  000005                     __fill_buffer_get_display@outBuffer:
  2307                           	opt stack 0
  2308  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2309                           	opt stack 0
  2310  000005                     spi_tx_tx@data:
  2311                           	opt stack 0
  2312  000005                     spi_tx_rx@data:
  2313                           	opt stack 0
  2314  000005                     ___lwdiv@quotient:
  2315                           	opt stack 0
  2316  000005                     memset@n:
  2317                           	opt stack 0
  2318  000005                     strncmp@len:
  2319                           	opt stack 0
  2320  000005                     internalFlash_erasePage@address:
  2321                           	opt stack 0
  2322  000005                     internalFlash_writePage@address:
  2323                           	opt stack 0
  2324  000005                     internalFlash_addressFromPage@address:
  2325                           	opt stack 0
  2326  000005                     ___lldiv@divisor:
  2327                           	opt stack 0
  2328  000005                     ___llmod@divisor:
  2329                           	opt stack 0
  2330                           
  2331                           ; 4 bytes @ 0x4
  2332  000005                     	ds	1
  2333  000006                     ??_hexCharsToUint16:
  2334  000006                     ??__bootloader_check_address:
  2335  000006                     USBStallEndpoint@ep:
  2336                           	opt stack 0
  2337  000006                     USBConfigureEndpoint@EPNum:
  2338                           	opt stack 0
  2339  000006                     hexCharsToUint8@retVal:
  2340                           	opt stack 0
  2341  000006                     __i2c_write@data:
  2342                           	opt stack 0
  2343  000006                     __i2c_read@data:
  2344                           	opt stack 0
  2345  000006                     i2c_display_write_fixed@data:
  2346                           	opt stack 0
  2347  000006                     memcpy@n:
  2348                           	opt stack 0
  2349                           
  2350                           ; 2 bytes @ 0x5
  2351  000006                     	ds	1
  2352  000007                     ??_strncmp:
  2353  000007                     ??__fill_buffer_get_bootloader_details:
  2354  000007                     __fill_buffer_get_display@secondHalf:
  2355                           	opt stack 0
  2356  000007                     ___lwdiv@counter:
  2357                           	opt stack 0
  2358  000007                     USBStallEndpoint@p:
  2359                           	opt stack 0
  2360  000007                     USBConfigureEndpoint@handle:
  2361                           	opt stack 0
  2362  000007                     spi_tx_tx@data_length:
  2363                           	opt stack 0
  2364  000007                     spi_tx_rx@data_length:
  2365                           	opt stack 0
  2366  000007                     memset@p:
  2367                           	opt stack 0
  2368                           
  2369                           ; 2 bytes @ 0x6
  2370  000007                     	ds	1
  2371  000008                     ??__fill_buffer_get_display:
  2372  000008                     __i2c_write@length:
  2373                           	opt stack 0
  2374  000008                     __i2c_read@length:
  2375                           	opt stack 0
  2376  000008                     i2c_display_write_fixed@length:
  2377                           	opt stack 0
  2378  000008                     utoa@buf:
  2379                           	opt stack 0
  2380  000008                     memcpy@s:
  2381                           	opt stack 0
  2382                           
  2383                           ; 3 bytes @ 0x7
  2384  000008                     	ds	1
  2385  000009                     ??_spi_tx_rx:
  2386  000009                     ??_spi_tx_tx:
  2387  000009                     ??__i2c_read:
  2388  000009                     ?_internalFlash_addressWithinPage:
  2389                           	opt stack 0
  2390  000009                     USBDeviceInit@i:
  2391                           	opt stack 0
  2392  000009                     USBEnableEndpoint@options:
  2393                           	opt stack 0
  2394  000009                     USBTransferOnePacket@ep:
  2395                           	opt stack 0
  2396  000009                     MSDErrorHandler@ErrorCase:
  2397                           	opt stack 0
  2398  000009                     __i2c_write@slave_address:
  2399                           	opt stack 0
  2400  000009                     i2c_display_write_fixed@pos:
  2401                           	opt stack 0
  2402  000009                     __flash_wakeup@command:
  2403                           	opt stack 0
  2404  000009                     hexCharsToUint16@c1:
  2405                           	opt stack 0
  2406  000009                     ___llmod@counter:
  2407                           	opt stack 0
  2408  000009                     internalFlash_writePage@cntr:
  2409                           	opt stack 0
  2410  000009                     internalFlash_addressWithinPage@address:
  2411                           	opt stack 0
  2412  000009                     ___lldiv@quotient:
  2413                           	opt stack 0
  2414                           
  2415                           ; 4 bytes @ 0x8
  2416  000009                     	ds	1
  2417  00000A                     MSDErrorHandler@OldMSD_State:
  2418                           	opt stack 0
  2419  00000A                     __i2c_write@cntr:
  2420                           	opt stack 0
  2421  00000A                     __bootloader_check_address@worst_case:
  2422                           	opt stack 0
  2423  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2424                           	opt stack 0
  2425  00000A                     USBEnableEndpoint@p:
  2426                           	opt stack 0
  2427  00000A                     USBTransferOnePacket@handle:
  2428                           	opt stack 0
  2429  00000A                     hexCharsToUint16@retVal:
  2430                           	opt stack 0
  2431  00000A                     utoa@val:
  2432                           	opt stack 0
  2433                           
  2434                           ; 2 bytes @ 0x9
  2435  00000A                     	ds	1
  2436  00000B                     __ic2_display_set_address@address:
  2437                           	opt stack 0
  2438  00000B                     i2c_digipot_backlight@level:
  2439                           	opt stack 0
  2440  00000B                     __bootloader_check_address@byte_status:
  2441                           	opt stack 0
  2442  00000B                     internalFlash_writePage@block_cntr:
  2443                           	opt stack 0
  2444  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2445                           	opt stack 0
  2446  00000B                     i2c_digipot_reset_on@data_array:
  2447                           	opt stack 0
  2448  00000B                     i2c_digipot_reset_off@data_array:
  2449                           	opt stack 0
  2450  00000B                     i2c_eeprom_writeByte@address:
  2451                           	opt stack 0
  2452  00000B                     memcpy@d:
  2453                           	opt stack 0
  2454  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2455                           	opt stack 0
  2456  00000B                     i2c_display_send_init_sequence@init_sequence:
  2457                           	opt stack 0
  2458                           
  2459                           ; 9 bytes @ 0xA
  2460  00000B                     	ds	1
  2461  00000C                     ??_USBMSDInit:
  2462  00000C                     ?_parseHexFileEntry:
  2463                           	opt stack 0
  2464  00000C                     USBEnableEndpoint@ep:
  2465                           	opt stack 0
  2466  00000C                     __bootloader_check_address@cntr:
  2467                           	opt stack 0
  2468  00000C                     internalFlash_writePage@byte_cntr:
  2469                           	opt stack 0
  2470  00000C                     _USBCheckMSDRequest$2319:
  2471                           	opt stack 0
  2472  00000C                     MSDTransferTerminated@handle:
  2473                           	opt stack 0
  2474  00000C                     __ic2_display_set_address@data_array:
  2475                           	opt stack 0
  2476  00000C                     i2c_digipot_backlight@data_array:
  2477                           	opt stack 0
  2478  00000C                     parseHexFileEntry@data:
  2479                           	opt stack 0
  2480  00000C                     utoa@base:
  2481                           	opt stack 0
  2482  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2483                           	opt stack 0
  2484                           
  2485                           ; 4 bytes @ 0xB
  2486  00000C                     	ds	1
  2487  00000D                     ?__flash_get_status:
  2488                           	opt stack 0
  2489  00000D                     i2c_eeprom_writeByte@data:
  2490                           	opt stack 0
  2491  00000D                     __fill_buffer_get_display@cntr:
  2492                           	opt stack 0
  2493  00000D                     ___lldiv@counter:
  2494                           	opt stack 0
  2495  00000D                     memcpy@tmp:
  2496                           	opt stack 0
  2497  00000D                     internalFlash_addressWithinPage@page:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0xC
  2501  00000D                     	ds	1
  2502  00000E                     ??_i2c_eeprom_writeByte:
  2503  00000E                     i2c_display_cursor@position:
  2504                           	opt stack 0
  2505  00000E                     __fill_buffer_get_display@line:
  2506                           	opt stack 0
  2507  00000E                     _USBCheckMSDRequest$2320:
  2508                           	opt stack 0
  2509  00000E                     _MSDTransferTerminated$2407:
  2510                           	opt stack 0
  2511  00000E                     utoa@v:
  2512                           	opt stack 0
  2513  00000E                     parseHexFileEntry@offset:
  2514                           	opt stack 0
  2515  00000E                     internalFlash_read@address:
  2516                           	opt stack 0
  2517                           
  2518                           ; 4 bytes @ 0xD
  2519  00000E                     	ds	1
  2520  00000F                     ??_internalFlash_addressWithinPage:
  2521  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2522                           	opt stack 0
  2523  00000F                     i2c_display_cursor@line:
  2524                           	opt stack 0
  2525  00000F                     __flash_get_status@command:
  2526                           	opt stack 0
  2527  00000F                     __fill_buffer_get_display@start_line:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0xE
  2531  00000F                     	ds	1
  2532  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2533                           	opt stack 0
  2534  000010                     __i2c_read@slave_address:
  2535                           	opt stack 0
  2536  000010                     i2c_display_cursor@address:
  2537                           	opt stack 0
  2538  000010                     __fill_buffer_get_display@position:
  2539                           	opt stack 0
  2540  000010                     utoa@c:
  2541                           	opt stack 0
  2542  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2543                           	opt stack 0
  2544  000010                     __flash_get_status@status:
  2545                           	opt stack 0
  2546  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0xF
  2550  000010                     	ds	1
  2551  000011                     MSDCheckForErrorCases@DeviceNoData:
  2552                           	opt stack 0
  2553  000011                     __i2c_read@cntr:
  2554                           	opt stack 0
  2555  000011                     i2c_eeprom_writeByte@dat:
  2556                           	opt stack 0
  2557  000011                     itoa@buf:
  2558                           	opt stack 0
  2559                           
  2560                           ; 2 bytes @ 0x10
  2561  000011                     	ds	1
  2562  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2563                           	opt stack 0
  2564  000012                     i2c_eeprom_readByte@address:
  2565                           	opt stack 0
  2566  000012                     __flash_is_busy@status:
  2567                           	opt stack 0
  2568  000012                     parseHexFileEntry@hexEntry:
  2569                           	opt stack 0
  2570  000012                     internalFlash_read@data_length:
  2571                           	opt stack 0
  2572                           
  2573                           ; 2 bytes @ 0x11
  2574  000012                     	ds	1
  2575  000013                     i2c_eeprom_writeByte@slave_address:
  2576                           	opt stack 0
  2577  000013                     itoa@val:
  2578                           	opt stack 0
  2579  000013                     internalFlash_addressWithinPage@page_start_address:
  2580                           	opt stack 0
  2581                           
  2582                           ; 4 bytes @ 0x12
  2583  000013                     	ds	1
  2584  000014                     ??_i2c_eeprom_readByte:
  2585  000014                     ??_parseHexFileEntry:
  2586  000014                     flash_is_busy@result:
  2587                           	opt stack 0
  2588  000014                     __parse_command_short@cmd:
  2589                           	opt stack 0
  2590  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2591                           	opt stack 0
  2592  000014                     __flash_copy_page_to_buffer@page:
  2593                           	opt stack 0
  2594  000014                     __flash_compare_page_to_buffer@page:
  2595                           	opt stack 0
  2596  000014                     __flash_write_to_buffer@start:
  2597                           	opt stack 0
  2598  000014                     __flash_write_page_from_buffer@page:
  2599                           	opt stack 0
  2600  000014                     __flash_partial_read@page:
  2601                           	opt stack 0
  2602  000014                     internalFlash_read@buffer:
  2603                           	opt stack 0
  2604  000014                     __flash_set_page_size@command:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x13
  2608  000014                     	ds	1
  2609  000015                     __fill_buffer_get_status@outBuffer:
  2610                           	opt stack 0
  2611  000015                     itoa@base:
  2612                           	opt stack 0
  2613                           
  2614                           ; 2 bytes @ 0x14
  2615  000015                     	ds	1
  2616  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2617  000016                     __flash_copy_page_to_buffer@buffer:
  2618                           	opt stack 0
  2619  000016                     __flash_compare_page_to_buffer@buffer:
  2620                           	opt stack 0
  2621  000016                     __flash_write_page_from_buffer@buffer:
  2622                           	opt stack 0
  2623  000016                     __flash_write_to_buffer@data:
  2624                           	opt stack 0
  2625  000016                     __flash_partial_read@start:
  2626                           	opt stack 0
  2627  000016                     internalFlash_readPage@page:
  2628                           	opt stack 0
  2629                           
  2630                           ; 2 bytes @ 0x15
  2631  000016                     	ds	1
  2632  000017                     ??__flash_copy_page_to_buffer:
  2633  000017                     ??__flash_compare_page_to_buffer:
  2634  000017                     ??__flash_write_page_from_buffer:
  2635  000017                     i2c_eeprom_readByte@slave_address:
  2636                           	opt stack 0
  2637  000017                     itoa@cp:
  2638                           	opt stack 0
  2639                           
  2640                           ; 2 bytes @ 0x16
  2641  000017                     	ds	1
  2642  000018                     ??_USBStdFeatureReqHandler:
  2643  000018                     USBStdSetCfgHandler@i:
  2644                           	opt stack 0
  2645  000018                     i2c_eeprom_readByte@addr:
  2646                           	opt stack 0
  2647  000018                     __flash_set_page_size@size:
  2648                           	opt stack 0
  2649  000018                     __flash_write_to_buffer@data_length:
  2650                           	opt stack 0
  2651  000018                     __flash_partial_read@length:
  2652                           	opt stack 0
  2653  000018                     internalFlash_readPage@address:
  2654                           	opt stack 0
  2655                           
  2656                           ; 4 bytes @ 0x17
  2657  000018                     	ds	1
  2658  000019                     USBStdFeatureReqHandler@pUEP:
  2659                           	opt stack 0
  2660  000019                     __display_itoa_u16@value:
  2661                           	opt stack 0
  2662                           
  2663                           ; 4 bytes @ 0x18
  2664  000019                     	ds	1
  2665  00001A                     __flash_write_to_buffer@buffer:
  2666                           	opt stack 0
  2667  00001A                     __flash_compare_page_to_buffer@status:
  2668                           	opt stack 0
  2669  00001A                     __flash_partial_read@data:
  2670                           	opt stack 0
  2671  00001A                     __flash_copy_page_to_buffer@command:
  2672                           	opt stack 0
  2673  00001A                     __flash_write_page_from_buffer@command:
  2674                           	opt stack 0
  2675                           
  2676                           ; 4 bytes @ 0x19
  2677  00001A                     	ds	1
  2678  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2679                           	opt stack 0
  2680  00001B                     __flash_write_to_buffer@command:
  2681                           	opt stack 0
  2682                           
  2683                           ; 4 bytes @ 0x1A
  2684  00001B                     	ds	1
  2685  00001C                     ??__flash_partial_read:
  2686  00001C                     parseHexFileEntry@i:
  2687                           	opt stack 0
  2688  00001C                     USBStdFeatureReqHandler@p:
  2689                           	opt stack 0
  2690  00001C                     __flash_compare_page_to_buffer@command:
  2691                           	opt stack 0
  2692                           
  2693                           ; 4 bytes @ 0x1B
  2694  00001C                     	ds	1
  2695  00001D                     __display_itoa_u16@text:
  2696                           	opt stack 0
  2697                           
  2698                           ; 2 bytes @ 0x1C
  2699  00001D                     	ds	1
  2700  00001E                     ??_USBCtrlEPService:
  2701  00001E                     
  2702                           ; 1 bytes @ 0x1D
  2703  00001E                     	ds	1
  2704  00001F                     ??__display_verify:
  2705  00001F                     ??__display_checked:
  2706  00001F                     __display_programming@cntr:
  2707                           	opt stack 0
  2708  00001F                     __display_done@cntr:
  2709                           	opt stack 0
  2710  00001F                     __display_itoa_u32@value:
  2711                           	opt stack 0
  2712                           
  2713                           ; 4 bytes @ 0x1E
  2714  00001F                     	ds	1
  2715  000020                     USBDeviceTasks@i:
  2716                           	opt stack 0
  2717  000020                     flash_page_write@page:
  2718                           	opt stack 0
  2719  000020                     flash_partial_write@page:
  2720                           	opt stack 0
  2721  000020                     __flash_partial_read@command:
  2722                           	opt stack 0
  2723                           
  2724                           ; 4 bytes @ 0x1F
  2725  000020                     	ds	1
  2726  000021                     __display_verify@cntr:
  2727                           	opt stack 0
  2728  000021                     __display_checked@start:
  2729                           	opt stack 0
  2730                           
  2731                           ; 1 bytes @ 0x20
  2732  000021                     	ds	1
  2733  000022                     __display_checked@cntr:
  2734                           	opt stack 0
  2735  000022                     flash_page_write@data:
  2736                           	opt stack 0
  2737  000022                     flash_partial_write@start:
  2738                           	opt stack 0
  2739                           
  2740                           ; 2 bytes @ 0x21
  2741  000022                     	ds	1
  2742  000023                     __display_itoa_u32@text:
  2743                           	opt stack 0
  2744                           
  2745                           ; 2 bytes @ 0x22
  2746  000023                     	ds	1
  2747  000024                     flash_page_write@match:
  2748                           	opt stack 0
  2749  000024                     flash_partial_write@length:
  2750                           	opt stack 0
  2751  000024                     __flash_partial_read@address:
  2752                           	opt stack 0
  2753                           
  2754                           ; 4 bytes @ 0x23
  2755  000024                     	ds	1
  2756  000025                     ??__display_found:
  2757  000025                     __display_failed@cntr:
  2758                           	opt stack 0
  2759  000025                     ExternalFlash_SectorWrite@config:
  2760                           	opt stack 0
  2761  000025                     fat_format@cntr:
  2762                           	opt stack 0
  2763                           
  2764                           ; 2 bytes @ 0x24
  2765  000025                     	ds	1
  2766  000026                     flash_partial_write@data:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x25
  2770  000026                     	ds	1
  2771  000027                     __display_found@start:
  2772                           	opt stack 0
  2773  000027                     ExternalFlash_SectorWrite@sector_addr:
  2774                           	opt stack 0
  2775                           
  2776                           ; 4 bytes @ 0x26
  2777  000027                     	ds	1
  2778  000028                     __display_found@cntr:
  2779                           	opt stack 0
  2780  000028                     flash_partial_write@match:
  2781                           	opt stack 0
  2782  000028                     flash_page_read@page:
  2783                           	opt stack 0
  2784  000028                     flash_partial_read@page:
  2785                           	opt stack 0
  2786                           
  2787                           ; 2 bytes @ 0x27
  2788  000028                     	ds	1
  2789  000029                     ??_display_prepare:
  2790  000029                     ??__delete_root:
  2791  000029                     __write_fat@cluster:
  2792                           	opt stack 0
  2793  000029                     __write_root@data:
  2794                           	opt stack 0
  2795                           
  2796                           ; 2 bytes @ 0x28
  2797  000029                     	ds	1
  2798  00002A                     flash_page_read@data:
  2799                           	opt stack 0
  2800  00002A                     flash_partial_read@start:
  2801                           	opt stack 0
  2802  00002A                     __delete_root@root_sector:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x29
  2806  00002A                     	ds	1
  2807  00002B                     ??__write_root:
  2808  00002B                     display_prepare@mode:
  2809                           	opt stack 0
  2810  00002B                     ExternalFlash_SectorWrite@buffer:
  2811                           	opt stack 0
  2812  00002B                     __write_fat@value:
  2813                           	opt stack 0
  2814                           
  2815                           ; 2 bytes @ 0x2A
  2816  00002B                     	ds	1
  2817  00002C                     ??_fat_get_format_status:
  2818  00002C                     flash_partial_read@length:
  2819                           	opt stack 0
  2820  00002C                     ExternalFlash_SectorRead@config:
  2821                           	opt stack 0
  2822  00002C                     __write_root@root_sector:
  2823                           	opt stack 0
  2824  00002C                     __delete_root@offset:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x2B
  2828  00002C                     	ds	1
  2829  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2830                           	opt stack 0
  2831  00002D                     __write_fat@fat_sector:
  2832                           	opt stack 0
  2833                           
  2834                           ; 2 bytes @ 0x2C
  2835  00002D                     	ds	1
  2836  00002E                     __delete_root@deleted_value:
  2837                           	opt stack 0
  2838  00002E                     flash_partial_read@data:
  2839                           	opt stack 0
  2840  00002E                     ExternalFlash_SectorWrite@page:
  2841                           	opt stack 0
  2842  00002E                     __write_root@offset:
  2843                           	opt stack 0
  2844  00002E                     fat_get_format_status@cntr:
  2845                           	opt stack 0
  2846  00002E                     ExternalFlash_SectorRead@sector_addr:
  2847                           	opt stack 0
  2848                           
  2849                           ; 4 bytes @ 0x2D
  2850  00002E                     	ds	1
  2851  00002F                     __delete_root@slot:
  2852                           	opt stack 0
  2853  00002F                     __write_fat@offset:
  2854                           	opt stack 0
  2855                           
  2856                           ; 2 bytes @ 0x2E
  2857  00002F                     	ds	1
  2858  000030                     ??_MSDWriteHandler:
  2859  000030                     ??__root_is_available:
  2860  000030                     ?__get_empty_cluster:
  2861                           	opt stack 0
  2862  000030                     ?_fat_get_empty_clusters:
  2863                           	opt stack 0
  2864  000030                     ?__read_fat:
  2865                           	opt stack 0
  2866  000030                     ?__get_first_cluster:
  2867                           	opt stack 0
  2868  000030                     ?_fat_get_file_size:
  2869                           	opt stack 0
  2870  000030                     __write_root@slot:
  2871                           	opt stack 0
  2872  000030                     __get_empty_cluster@first_cluster:
  2873                           	opt stack 0
  2874  000030                     fat_get_empty_clusters@maximum:
  2875                           	opt stack 0
  2876  000030                     __read_fat@cluster:
  2877                           	opt stack 0
  2878  000030                     fat_find_file@name:
  2879                           	opt stack 0
  2880                           
  2881                           ; 2 bytes @ 0x2F
  2882  000030                     	ds	1
  2883  000031                     __root_is_available@root_sector:
  2884                           	opt stack 0
  2885                           
  2886                           ; 2 bytes @ 0x30
  2887  000031                     	ds	1
  2888  000032                     ??__get_first_cluster:
  2889  000032                     ExternalFlash_SectorRead@buffer:
  2890                           	opt stack 0
  2891  000032                     __get_empty_cluster@fat_sector:
  2892                           	opt stack 0
  2893  000032                     fat_get_empty_clusters@fat_sector:
  2894                           	opt stack 0
  2895  000032                     __read_fat@fat_sector:
  2896                           	opt stack 0
  2897  000032                     fat_find_file@extension:
  2898                           	opt stack 0
  2899                           
  2900                           ; 2 bytes @ 0x31
  2901  000032                     	ds	1
  2902  000033                     __root_is_available@offset:
  2903                           	opt stack 0
  2904  000033                     __get_first_cluster@sector:
  2905                           	opt stack 0
  2906                           
  2907                           ; 2 bytes @ 0x32
  2908  000033                     	ds	1
  2909  000034                     ??_fat_get_file_size:
  2910  000034                     ExternalFlash_SectorRead@page:
  2911                           	opt stack 0
  2912  000034                     __get_empty_cluster@offset:
  2913                           	opt stack 0
  2914  000034                     fat_get_empty_clusters@offset:
  2915                           	opt stack 0
  2916  000034                     __read_fat@offset:
  2917                           	opt stack 0
  2918  000034                     fat_find_file@buffer:
  2919                           	opt stack 0
  2920                           
  2921                           ; 11 bytes @ 0x33
  2922  000034                     	ds	1
  2923  000035                     __root_is_available@file_number:
  2924                           	opt stack 0
  2925  000035                     __get_first_cluster@offset:
  2926                           	opt stack 0
  2927  000035                     fat_get_file_size@sector:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x34
  2931  000035                     	ds	1
  2932  000036                     ??_MSDReadHandler:
  2933  000036                     __root_is_available@first_byte:
  2934                           	opt stack 0
  2935  000036                     __get_empty_cluster@value:
  2936                           	opt stack 0
  2937  000036                     fat_get_empty_clusters@value:
  2938                           	opt stack 0
  2939  000036                     __read_fat@value:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x35
  2943  000036                     	ds	1
  2944  000037                     __get_available_root_entry@file_number:
  2945                           	opt stack 0
  2946  000037                     __get_first_cluster@first_cluster:
  2947                           	opt stack 0
  2948  000037                     fat_get_file_information@data:
  2949                           	opt stack 0
  2950  000037                     fat_get_file_size@file_size:
  2951                           	opt stack 0
  2952                           
  2953                           ; 4 bytes @ 0x36
  2954  000037                     	ds	1
  2955  000038                     __get_empty_cluster@cluster:
  2956                           	opt stack 0
  2957  000038                     fat_get_empty_clusters@empty_clusters:
  2958                           	opt stack 0
  2959                           
  2960                           ; 2 bytes @ 0x37
  2961  000038                     	ds	1
  2962  000039                     ??_fat_get_file_information:
  2963  000039                     __get_first_cluster@slot:
  2964                           	opt stack 0
  2965                           
  2966                           ; 1 bytes @ 0x38
  2967  000039                     	ds	1
  2968  00003A                     ??_MSDProcessCommandMediaPresent:
  2969  00003A                     fat_get_empty_clusters@cluster:
  2970                           	opt stack 0
  2971  00003A                     fat_delete_file@next_cluster:
  2972                           	opt stack 0
  2973  00003A                     fat_get_file_information@root_sector:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x39
  2977  00003A                     	ds	1
  2978  00003B                     fat_get_file_size@offset:
  2979                           	opt stack 0
  2980                           
  2981                           ; 2 bytes @ 0x3A
  2982  00003B                     	ds	1
  2983  00003C                     _MSDProcessCommandMediaPresent$2390:
  2984                           	opt stack 0
  2985  00003C                     fat_delete_file@first_cluster:
  2986                           	opt stack 0
  2987  00003C                     fat_get_file_information@offset:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x3B
  2991  00003C                     	ds	1
  2992  00003D                     fat_get_file_size@file_number:
  2993                           	opt stack 0
  2994                           
  2995                           ; 1 bytes @ 0x3C
  2996  00003D                     	ds	1
  2997  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2998                           	opt stack 0
  2999  00003E                     fat_delete_file@file_number:
  3000                           	opt stack 0
  3001  00003E                     fat_get_file_information@file_number:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x3D
  3005  00003E                     	ds	1
  3006  00003F                     fat_find_file@slot:
  3007                           	opt stack 0
  3008  00003F                     fat_append_to_file@number_of_bytes:
  3009                           	opt stack 0
  3010  00003F                     fat_rename_file@name:
  3011                           	opt stack 0
  3012  00003F                     __fill_buffer_get_file_details@inBuffer:
  3013                           	opt stack 0
  3014  00003F                     __parse_file_delete@data:
  3015                           	opt stack 0
  3016  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3017                           	opt stack 0
  3018  00003F                     fat_read_from_file@start_byte:
  3019                           	opt stack 0
  3020                           
  3021                           ; 4 bytes @ 0x3E
  3022  00003F                     	ds	1
  3023  000040                     fat_find_file@sector:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x3F
  3027  000040                     	ds	1
  3028  000041                     fat_append_to_file@data:
  3029                           	opt stack 0
  3030  000041                     fat_rename_file@extension:
  3031                           	opt stack 0
  3032  000041                     __fill_buffer_get_file_details@outBuffer:
  3033                           	opt stack 0
  3034                           
  3035                           ; 2 bytes @ 0x40
  3036  000041                     	ds	1
  3037  000042                     fat_find_file@offset:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x41
  3041  000042                     	ds	1
  3042  000043                     ??_fat_append_to_file:
  3043  000043                     __fill_buffer_get_file_details@file_number:
  3044                           	opt stack 0
  3045  000043                     __parse_file_rename@data:
  3046                           	opt stack 0
  3047  000043                     MSDProcessCommandMediaPresent@capacity:
  3048                           	opt stack 0
  3049  000043                     fat_read_from_file@length:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x42
  3053  000043                     	ds	1
  3054  000044                     fat_create_file@name:
  3055                           	opt stack 0
  3056  000044                     __fill_buffer_find_file@inBuffer:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x43
  3060  000044                     	ds	1
  3061  000045                     
  3062                           ; 1 bytes @ 0x44
  3063  000045                     	ds	1
  3064  000046                     fat_create_file@extension:
  3065                           	opt stack 0
  3066  000046                     __fill_buffer_find_file@outBuffer:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x45
  3070  000046                     	ds	1
  3071  000047                     MSDProcessCommandMediaPresent@i:
  3072                           	opt stack 0
  3073  000047                     fat_read_from_file@data:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x46
  3077  000047                     	ds	1
  3078  000048                     ??_MSDProcessCommand:
  3079  000048                     ??__fill_buffer_find_file:
  3080  000048                     fat_create_file@size:
  3081                           	opt stack 0
  3082                           
  3083                           ; 4 bytes @ 0x47
  3084  000048                     	ds	1
  3085  000049                     ??_fat_read_from_file:
  3086                           
  3087                           ; 1 bytes @ 0x48
  3088  000049                     	ds	2
  3089  00004B                     __parse_file_append@data:
  3090                           	opt stack 0
  3091                           
  3092                           ; 2 bytes @ 0x4A
  3093  00004B                     	ds	1
  3094  00004C                     ??_fat_create_file:
  3095  00004C                     __fill_buffer_find_file@cntr:
  3096                           	opt stack 0
  3097                           
  3098                           ; 1 bytes @ 0x4B
  3099  00004C                     	ds	1
  3100  00004D                     ??__parse_file_append:
  3101  00004D                     ??_MSDTasks:
  3102                           
  3103                           ; 1 bytes @ 0x4C
  3104  00004D                     	ds	1
  3105  00004E                     _MSDTasks$2372:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x4D
  3109  00004E                     	ds	2
  3110  000050                     _MSDTasks$2373:
  3111                           	opt stack 0
  3112  000050                     __parse_file_create@data:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x4F
  3116  000050                     	ds	2
  3117  000052                     MSDTasks@i:
  3118                           	opt stack 0
  3119                           
  3120                           ; 1 bytes @ 0x51
  3121  000052                     	ds	1
  3122  000053                     __parse_command_long@data:
  3123                           	opt stack 0
  3124                           
  3125                           ; 2 bytes @ 0x52
  3126  000053                     	ds	2
  3127  000055                     ??__bootloader_verify_file:
  3128  000055                     ??__bootloader_program:
  3129  000055                     __parse_command_long@length:
  3130                           	opt stack 0
  3131  000055                     __fill_buffer_read_file@inBuffer:
  3132                           	opt stack 0
  3133                           
  3134                           ; 2 bytes @ 0x54
  3135  000055                     	ds	1
  3136  000056                     ??_api_parse:
  3137                           
  3138                           ; 1 bytes @ 0x55
  3139  000056                     	ds	1
  3140  000057                     __fill_buffer_read_file@outBuffer:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x56
  3144  000057                     	ds	1
  3145  000058                     api_parse@idx:
  3146                           	opt stack 0
  3147                           
  3148                           ; 1 bytes @ 0x57
  3149  000058                     	ds	1
  3150  000059                     ??__fill_buffer_read_file:
  3151                           
  3152                           ; 1 bytes @ 0x58
  3153  000059                     	ds	4
  3154  00005D                     bootloader_run@timeslot:
  3155                           	opt stack 0
  3156  00005D                     api_prepare@command:
  3157                           	opt stack 0
  3158                           
  3159                           ; 1 bytes @ 0x5C
  3160  00005D                     	ds	1
  3161  00005E                     ??_main:
  3162                           
  3163                           ; 1 bytes @ 0x5D
  3164  00005E                     	ds	2
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           postdec1	equ	0xFE5
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           
  3175 ;;
  3176 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3177 ;;
  3178 ;; *************** function _main *****************
  3179 ;; Defined at:
  3180 ;;		line 54 in file "main.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  tx_buffer       2   71[BANK0 ] PTR unsigned char 
  3185 ;;		 -> _spi_external_tx_buffer(64), 
  3186 ;;  rx_buffer       2   69[BANK0 ] PTR unsigned char 
  3187 ;;		 -> _spi_external_rx_buffer(64), 
  3188 ;;  bytes_transm    2   67[BANK0 ] unsigned int 
  3189 ;;  tx_start_add    2   65[BANK0 ] unsigned int 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;Total ram usage:       10 bytes
  3204 ;; Hardware stack levels required when called:   12
  3205 ;; This function calls:
  3206 ;;		_APP_DeviceCustomHIDTasks
  3207 ;;		_APP_DeviceMSDTasks
  3208 ;;		_SYSTEM_Initialize
  3209 ;;		_USBDeviceInit
  3210 ;;		_USBDeviceTasks
  3211 ;;		__normal_mode
  3212 ;;		_api_parse
  3213 ;;		_api_prepare
  3214 ;;		_bootloader_run
  3215 ;;		_display_prepare
  3216 ;;		_display_update
  3217 ;;		_jump_to_main_program
  3218 ;;		_spi_get_external_rx_buffer
  3219 ;;		_spi_get_external_tx_buffer
  3220 ;;		_system_init
  3221 ;;		_timer_pseudo_isr
  3222 ;;		_ui_get_status
  3223 ;;		_ui_run
  3224 ;; This function is called by:
  3225 ;;		Startup code after reset
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text0
  3230  00368C                     __ptext0:
  3231                           	opt stack 0
  3232  00368C                     _main:
  3233                           	opt stack 19
  3234                           
  3235                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3236                           
  3237                           ;incstack = 0
  3238  00368C  ECAF  F03E         	call	_spi_get_external_rx_buffer	;wreg free
  3239  003690  C001  F0FA         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3240  003694  C002  F0FB         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3241                           
  3242                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3243  003698  ECAA  F03E         	call	_spi_get_external_tx_buffer	;wreg free
  3244  00369C  C001  F0FC         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3245  0036A0  C002  F0FD         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3246                           
  3247                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3248  0036A4  C0FC  F0F6         	movff	main@tx_buffer,main@tx_start_addr
  3249  0036A8  C0FD  F0F7         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3250                           
  3251                           ;main.c: 68: system_init();
  3252  0036AC  ECFF  F033         	call	_system_init	;wreg free
  3253                           
  3254                           ;main.c: 71: if(_normal_mode())
  3255  0036B0  ECFA  F036         	call	__normal_mode	;wreg free
  3256  0036B4  0900               	iorlw	0
  3257  0036B6  A4D8               	btfss	status,2,c
  3258                           
  3259                           ;main.c: 72: {;main.c: 73: jump_to_main_program();
  3260  0036B8  EC12  F03B         	call	_jump_to_main_program	;wreg free
  3261                           
  3262                           ;main.c: 74: };main.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3263  0036BC  0E00               	movlw	0
  3264  0036BE  ECD9  F038         	call	_SYSTEM_Initialize
  3265                           
  3266                           ;main.c: 79: USBDeviceInit();
  3267  0036C2  ECA7  F01C         	call	_USBDeviceInit	;wreg free
  3268  0036C6                     l886:
  3269  0036C6  0004               	clrwdt		;# 
  3270                           
  3271                           ;main.c: 92: USBDeviceTasks();
  3272  0036C8  EC0D  F019         	call	_USBDeviceTasks	;wreg free
  3273                           
  3274                           ;main.c: 93: APP_DeviceMSDTasks();
  3275  0036CC  EC69  F03E         	call	_APP_DeviceMSDTasks	;wreg free
  3276                           
  3277                           ;main.c: 94: APP_DeviceCustomHIDTasks();
  3278  0036D0  ECD7  F02B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3279                           
  3280                           ;main.c: 98: timer_pseudo_isr();
  3281  0036D4  ECA0  F03B         	call	_timer_pseudo_isr	;wreg free
  3282                           
  3283                           ;main.c: 101: if(PORTDbits.RD2)
  3284  0036D8  A483               	btfss	3971,2,c	;volatile
  3285  0036DA  D039               	goto	l888
  3286                           
  3287                           ;main.c: 102: {;main.c: 105: bytes_transmitted = TXADDRH;
  3288  0036DC  CF6A F0F8          	movff	3946,main@bytes_transmitted	;volatile
  3289  0036E0  0100               	movlb	0	; () banked
  3290  0036E2  6BF9               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;main.c: 106: bytes_transmitted <<= 8;
  3294  0036E4  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3295  0036E6  6FF9               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3296  0036E8  6BF8               	clrf	main@bytes_transmitted& (0+255),b
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;main.c: 107: bytes_transmitted |= TXADDRL;
  3300  0036EA  506B               	movf	3947,w,c	;volatile
  3301  0036EC  13F8               	iorwf	main@bytes_transmitted& (0+255),f,b
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;main.c: 108: --bytes_transmitted;
  3305  0036EE  07F8               	decf	main@bytes_transmitted& (0+255),f,b
  3306  0036F0  A0D8               	btfss	status,0,c
  3307  0036F2  07F9               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 109: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3311  0036F4  ECAA  F03E         	call	_spi_get_external_tx_buffer	;wreg free
  3312  0036F8  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3313  0036FA  0100               	movlb	0	; () banked
  3314  0036FC  5FF8               	subwf	main@bytes_transmitted& (0+255),f,b
  3315  0036FE  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3316  003700  5BF9               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;main.c: 112: if(bytes_transmitted>0)
  3320  003702  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3321  003704  11F9               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3322  003706  B4D8               	btfsc	status,2,c
  3323  003708  D022               	goto	l888
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;main.c: 113: {;main.c: 115: DMACON1bits.DMAEN = 0;
  3327  00370A  9088               	bcf	3976,0,c	;volatile
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;main.c: 118: api_prepare(rx_buffer, tx_buffer);
  3331  00370C  C0FA  F0EE         	movff	main@rx_buffer,api_prepare@inBuffer
  3332  003710  C0FB  F0EF         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3333  003714  C0FC  F0F0         	movff	main@tx_buffer,api_prepare@outBuffer
  3334  003718  C0FD  F0F1         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3335  00371C  EC81  F01E         	call	_api_prepare	;wreg free
  3336                           
  3337                           ;main.c: 119: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3338  003720  C0FA  F0E8         	movff	main@rx_buffer,api_parse@inBuffer
  3339  003724  C0FB  F0E9         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3340  003728  C0F8  F0EA         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3341  00372C  EC43  F026         	call	_api_parse	;wreg free
  3342                           
  3343                           ;main.c: 122: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3344  003730  0100               	movlb	0	; () banked
  3345  003732  51FD               	movf	(main@tx_buffer+1)& (0+255),w,b
  3346  003734  6E6A               	movwf	3946,c	;volatile
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;main.c: 123: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3350  003736  C0FC  FF6B         	movff	main@tx_buffer,3947	;volatile
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;main.c: 126: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3354  00373A  51FB               	movf	(main@rx_buffer+1)& (0+255),w,b
  3355  00373C  6E68               	movwf	3944,c	;volatile
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;main.c: 127: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3359  00373E  C0FA  FF69         	movff	main@rx_buffer,3945	;volatile
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;main.c: 130: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3363  003742  0E00               	movlw	0
  3364  003744  6E66               	movwf	3942,c	;volatile
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;main.c: 131: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3368  003746  0E3F               	movlw	63
  3369  003748  6E67               	movwf	3943,c	;volatile
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;main.c: 134: PIR3bits.SSP2IF = 0;
  3373  00374A  9EA4               	bcf	4004,7,c	;volatile
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;main.c: 136: DMACON1bits.DMAEN = 1;
  3377  00374C  8088               	bsf	3976,0,c	;volatile
  3378  00374E                     l888:
  3379                           
  3380                           ;main.c: 137: };main.c: 138: };main.c: 142: if(!os.done)
  3381                           
  3382                           ; BSR set to: 0
  3383                           
  3384                           ; BSR set to: 0
  3385  00374E  0100               	movlb	0	; () banked
  3386  003750  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3387  003752  A4D8               	btfss	status,2,c
  3388  003754  D7B8               	goto	l886
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;main.c: 143: {;main.c: 145: ui_run();
  3392  003756  EC66  F025         	call	_ui_run	;wreg free
  3393                           
  3394                           ;main.c: 150: switch(os.timeSlot&0b00000111)
  3395  00375A  D02A               	goto	l890
  3396  00375C                     
  3397                           ;main.c: 153: bootloader_run(0);
  3398  00375C  0E00               	movlw	0
  3399  00375E  ECCD  F036         	call	_bootloader_run
  3400                           
  3401                           ;main.c: 154: break;
  3402  003762  D048               	goto	l892
  3403  003764                     
  3404                           ;main.c: 157: bootloader_run(1);
  3405  003764  0E01               	movlw	1
  3406  003766  ECCD  F036         	call	_bootloader_run
  3407                           
  3408                           ;main.c: 158: break;
  3409  00376A  D044               	goto	l892
  3410  00376C                     
  3411                           ;main.c: 161: bootloader_run(2);
  3412  00376C  0E02               	movlw	2
  3413  00376E  ECCD  F036         	call	_bootloader_run
  3414                           
  3415                           ;main.c: 162: break;
  3416  003772  D040               	goto	l892
  3417  003774                     
  3418                           ;main.c: 165: bootloader_run(3);
  3419  003774  0E03               	movlw	3
  3420  003776  ECCD  F036         	call	_bootloader_run
  3421                           
  3422                           ;main.c: 166: break;
  3423  00377A  D03C               	goto	l892
  3424  00377C                     
  3425                           ;main.c: 169: bootloader_run(4);
  3426  00377C  0E04               	movlw	4
  3427  00377E  ECCD  F036         	call	_bootloader_run
  3428                           
  3429                           ;main.c: 170: break;
  3430  003782  D038               	goto	l892
  3431  003784                     
  3432                           ;main.c: 173: bootloader_run(5);
  3433  003784  0E05               	movlw	5
  3434  003786  ECCD  F036         	call	_bootloader_run
  3435                           
  3436                           ;main.c: 174: break;
  3437  00378A  D034               	goto	l892
  3438  00378C                     
  3439                           ;main.c: 177: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3440  00378C  EC00  F03F         	call	_ui_get_status	;wreg free
  3441  003790  0A05               	xorlw	5
  3442  003792  A4D8               	btfss	status,2,c
  3443  003794  D02F               	goto	l892
  3444                           
  3445                           ;main.c: 178: {;main.c: 179: display_prepare(os.display_mode);
  3446  003796  0100               	movlb	0	; () banked
  3447  003798  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3448  00379A  ECC3  F029         	call	_display_prepare
  3449                           
  3450                           ;main.c: 180: };main.c: 181: break;
  3451  00379E  D02A               	goto	l892
  3452  0037A0                     
  3453                           ;main.c: 184: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3454  0037A0  EC00  F03F         	call	_ui_get_status	;wreg free
  3455  0037A4  0A05               	xorlw	5
  3456  0037A6  A4D8               	btfss	status,2,c
  3457  0037A8  D025               	goto	l892
  3458                           
  3459                           ;main.c: 185: {;main.c: 186: display_update();
  3460  0037AA  ECA3  F034         	call	_display_update	;wreg free
  3461                           
  3462                           ;main.c: 189: }
  3463                           
  3464                           ;main.c: 187: };main.c: 188: break;
  3465  0037AE  D022               	goto	l892
  3466  0037B0                     l890:
  3467  0037B0  0100               	movlb	0	; () banked
  3468  0037B2  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3469  0037B4  0B07               	andlw	7
  3470  0037B6  6E5E               	movwf	??_main& (0+255),c
  3471  0037B8  6A5F               	clrf	(??_main+1)& (0+255),c
  3472                           
  3473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3474                           ; Switch size 1, requested type "space"
  3475                           ; Number of cases is 1, Range of values is 0 to 0
  3476                           ; switch strategies available:
  3477                           ; Name         Instructions Cycles
  3478                           ; simple_byte            4     3 (average)
  3479                           ;	Chosen strategy is simple_byte
  3480  0037BA  505F               	movf	??_main+1,w,c
  3481  0037BC  0A00               	xorlw	0	; case 0
  3482  0037BE  A4D8               	btfss	status,2,c
  3483  0037C0  D019               	goto	l892
  3484                           
  3485                           ; BSR set to: 0
  3486                           ; Switch size 1, requested type "space"
  3487                           ; Number of cases is 8, Range of values is 0 to 7
  3488                           ; switch strategies available:
  3489                           ; Name         Instructions Cycles
  3490                           ; simple_byte           25    13 (average)
  3491                           ;	Chosen strategy is simple_byte
  3492  0037C2  505E               	movf	??_main,w,c
  3493  0037C4  0A00               	xorlw	0	; case 0
  3494  0037C6  B4D8               	btfsc	status,2,c
  3495  0037C8  D7C9               	goto	l891
  3496  0037CA  0A01               	xorlw	1	; case 1
  3497  0037CC  B4D8               	btfsc	status,2,c
  3498  0037CE  D7CA               	goto	l893
  3499  0037D0  0A03               	xorlw	3	; case 2
  3500  0037D2  B4D8               	btfsc	status,2,c
  3501  0037D4  D7CB               	goto	l894
  3502  0037D6  0A01               	xorlw	1	; case 3
  3503  0037D8  B4D8               	btfsc	status,2,c
  3504  0037DA  D7CC               	goto	l895
  3505  0037DC  0A07               	xorlw	7	; case 4
  3506  0037DE  B4D8               	btfsc	status,2,c
  3507  0037E0  D7CD               	goto	l896
  3508  0037E2  0A01               	xorlw	1	; case 5
  3509  0037E4  B4D8               	btfsc	status,2,c
  3510  0037E6  D7CE               	goto	l897
  3511  0037E8  0A03               	xorlw	3	; case 6
  3512  0037EA  B4D8               	btfsc	status,2,c
  3513  0037EC  D7CF               	goto	l898
  3514  0037EE  0A01               	xorlw	1	; case 7
  3515  0037F0  B4D8               	btfsc	status,2,c
  3516  0037F2  D7D6               	goto	l900
  3517  0037F4                     l892:
  3518                           
  3519                           ;main.c: 190: os.done = 1;
  3520                           
  3521                           ; BSR set to: 0
  3522  0037F4  0E01               	movlw	1
  3523  0037F6  0100               	movlb	0	; () banked
  3524  0037F8  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           
  3528                           ; BSR set to: 0
  3529  0037FA  D765               	goto	l886
  3530  0037FC                     __end_of_main:
  3531                           	opt stack 0
  3532                           tblptru	equ	0xFF8
  3533                           tblptrh	equ	0xFF7
  3534                           tblptrl	equ	0xFF6
  3535                           tablat	equ	0xFF5
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _ui_run *****************
  3544 ;; Defined at:
  3545 ;;		line 100 in file "ui.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;Total ram usage:        0 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    3
  3566 ;; This function calls:
  3567 ;;		__ui_encoder
  3568 ;;		_i2c_digipot_backlight
  3569 ;;		_i2c_digipot_reset_off
  3570 ;;		_i2c_digipot_reset_on
  3571 ;;		_i2c_display_send_init_sequence
  3572 ;;		_system_encoder_enable
  3573 ;;		_ui_init
  3574 ;; This function is called by:
  3575 ;;		_main
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text1
  3580  004ACC                     __ptext1:
  3581                           	opt stack 0
  3582  004ACC                     _ui_run:
  3583                           	opt stack 27
  3584                           
  3585                           ;ui.c: 102: switch(userInterfaceStatus)
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;incstack = 0
  3589  004ACC  D05A               	goto	l1303
  3590  004ACE                     
  3591                           ;ui.c: 106: if (os.buttonCount!=0)
  3592  004ACE  0100               	movlb	0	; () banked
  3593  004AD0  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3594  004AD2  B4D8               	btfsc	status,2,c
  3595  004AD4  0012               	return	
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;ui.c: 107: {;ui.c: 108: ui_init();
  3599  004AD6  EC5F  F03E         	call	_ui_init	;wreg free
  3600                           
  3601                           ;ui.c: 109: os.buttonCount = 0;
  3602  004ADA  0E00               	movlw	0
  3603  004ADC  0100               	movlb	0	; () banked
  3604  004ADE  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;ui.c: 110: };ui.c: 111: break;
  3608  004AE0  0012               	return	
  3609  004AE2                     l1307:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;ui.c: 115: LATDbits.LD0 = 0;
  3613  004AE2  908C               	bcf	3980,0,c	;volatile
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;ui.c: 117: system_ui_inactive_count = 0;
  3617  004AE4  0E00               	movlw	0
  3618  004AE6  0101               	movlb	1	; () banked
  3619  004AE8  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3620  004AEA  0E00               	movlw	0
  3621  004AEC  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3622                           
  3623                           ;ui.c: 118: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3624  004AEE  0E02               	movlw	2
  3625  004AF0  0100               	movlb	0	; () banked
  3626  004AF2  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3627                           
  3628                           ;ui.c: 119: break;
  3629  004AF4  0012               	return	
  3630  004AF6                     
  3631                           ; BSR set to: 0
  3632                           ;ui.c: 123: i2c_digipot_reset_on();
  3633                           
  3634                           ; BSR set to: 0
  3635  004AF6  ECA4  F03D         	call	_i2c_digipot_reset_on	;wreg free
  3636                           
  3637                           ;ui.c: 125: system_ui_inactive_count = 0;
  3638  004AFA  0E00               	movlw	0
  3639  004AFC  0101               	movlb	1	; () banked
  3640  004AFE  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3641  004B00  0E00               	movlw	0
  3642  004B02  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3643                           
  3644                           ; BSR set to: 1
  3645                           ;ui.c: 126: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3646  004B04  0E03               	movlw	3
  3647  004B06  0100               	movlb	0	; () banked
  3648  004B08  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3649                           
  3650                           ;ui.c: 127: break;
  3651  004B0A  0012               	return	
  3652  004B0C                     
  3653                           ; BSR set to: 0
  3654                           ;ui.c: 130: ++system_ui_inactive_count;
  3655                           
  3656                           ; BSR set to: 0
  3657  004B0C  0101               	movlb	1	; () banked
  3658  004B0E  4B6C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3659  004B10  2B6D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;ui.c: 132: if (system_ui_inactive_count>3)
  3663  004B12  516D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3664  004B14  E104               	bnz	u11480
  3665  004B16  0E04               	movlw	4
  3666  004B18  5D6C               	subwf	_system_ui_inactive_count& (0+255),w,b
  3667  004B1A  A0D8               	btfss	status,0,c
  3668  004B1C  0012               	return	
  3669  004B1E                     u11480:
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;ui.c: 133: {;ui.c: 134: i2c_digipot_reset_off();
  3673  004B1E  ECB5  F03D         	call	_i2c_digipot_reset_off	;wreg free
  3674                           
  3675                           ;ui.c: 135: system_ui_inactive_count = 0;
  3676  004B22  0E00               	movlw	0
  3677  004B24  0101               	movlb	1	; () banked
  3678  004B26  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3679  004B28  0E00               	movlw	0
  3680  004B2A  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3684  004B2C  0E04               	movlw	4
  3685  004B2E  0100               	movlb	0	; () banked
  3686  004B30  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;ui.c: 137: };ui.c: 138: break;
  3690  004B32  0012               	return	
  3691  004B34                     
  3692                           ; BSR set to: 0
  3693                           ;ui.c: 142: i2c_display_send_init_sequence();
  3694                           
  3695                           ; BSR set to: 0
  3696  004B34  ECB3  F03C         	call	_i2c_display_send_init_sequence	;wreg free
  3697                           
  3698                           ;ui.c: 144: i2c_digipot_backlight(150);
  3699  004B38  0E96               	movlw	150
  3700  004B3A  EC48  F03D         	call	_i2c_digipot_backlight
  3701                           
  3702                           ;ui.c: 146: system_encoder_enable();
  3703  004B3E  EC85  F03E         	call	_system_encoder_enable	;wreg free
  3704                           
  3705                           ;ui.c: 148: system_ui_inactive_count = 0;
  3706  004B42  0E00               	movlw	0
  3707  004B44  0101               	movlb	1	; () banked
  3708  004B46  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3709  004B48  0E00               	movlw	0
  3710  004B4A  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3711                           
  3712                           ; BSR set to: 1
  3713                           ;ui.c: 149: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3714  004B4C  0E05               	movlw	5
  3715  004B4E  0100               	movlb	0	; () banked
  3716  004B50  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3717                           
  3718                           ;ui.c: 150: break;
  3719  004B52  0012               	return	
  3720  004B54                     
  3721                           ; BSR set to: 0
  3722                           ;ui.c: 153: if (os.encoderCount==0 && os.buttonCount==0)
  3723                           
  3724                           ; BSR set to: 0
  3725  004B54  5160               	movf	_os& (0+255),w,b	;volatile
  3726  004B56  A4D8               	btfss	status,2,c
  3727  004B58  D00C               	goto	l1313
  3728                           
  3729                           ; BSR set to: 0
  3730  004B5A  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3731  004B5C  A4D8               	btfss	status,2,c
  3732  004B5E  D009               	goto	l1313
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;ui.c: 154: {;ui.c: 155: if(system_ui_inactive_count<0xFFFF)
  3736  004B60  0101               	movlb	1	; () banked
  3737  004B62  296C               	incf	_system_ui_inactive_count& (0+255),w,b
  3738  004B64  E103               	bnz	u11510
  3739  004B66  296D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3740  004B68  B4D8               	btfsc	status,2,c
  3741  004B6A  0012               	return	
  3742  004B6C                     u11510:
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;ui.c: 156: ++system_ui_inactive_count;
  3746  004B6C  4B6C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3747  004B6E  2B6D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3748                           
  3749                           ; BSR set to: 1
  3750                           ;ui.c: 157: }
  3751  004B70  0012               	return	
  3752  004B72                     l1313:
  3753                           
  3754                           ;ui.c: 158: else;ui.c: 159: {;ui.c: 160: system_ui_inactive_count = 0;
  3755                           
  3756                           ; BSR set to: 1
  3757  004B72  0E00               	movlw	0
  3758  004B74  0101               	movlb	1	; () banked
  3759  004B76  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3760  004B78  0E00               	movlw	0
  3761  004B7A  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3762                           
  3763                           ; BSR set to: 1
  3764                           ;ui.c: 161: _ui_encoder();
  3765  004B7C  EC20  F02A         	call	__ui_encoder	;wreg free
  3766                           
  3767                           ;ui.c: 164: }
  3768                           
  3769                           ;ui.c: 162: };ui.c: 163: break;
  3770  004B80  0012               	return	
  3771  004B82                     l1303:
  3772  004B82  0100               	movlb	0	; () banked
  3773  004B84  5198               	movf	_userInterfaceStatus& (0+255),w,b
  3774                           
  3775                           ; Switch size 1, requested type "space"
  3776                           ; Number of cases is 6, Range of values is 0 to 5
  3777                           ; switch strategies available:
  3778                           ; Name         Instructions Cycles
  3779                           ; simple_byte           19    10 (average)
  3780                           ;	Chosen strategy is simple_byte
  3781  004B86  0A00               	xorlw	0	; case 0
  3782  004B88  B4D8               	btfsc	status,2,c
  3783  004B8A  D7A1               	goto	l1304
  3784  004B8C  0A01               	xorlw	1	; case 1
  3785  004B8E  B4D8               	btfsc	status,2,c
  3786  004B90  D7A8               	goto	l1307
  3787  004B92  0A03               	xorlw	3	; case 2
  3788  004B94  B4D8               	btfsc	status,2,c
  3789  004B96  D7AF               	goto	l1308
  3790  004B98  0A01               	xorlw	1	; case 3
  3791  004B9A  B4D8               	btfsc	status,2,c
  3792  004B9C  D7B7               	goto	l1309
  3793  004B9E  0A07               	xorlw	7	; case 4
  3794  004BA0  B4D8               	btfsc	status,2,c
  3795  004BA2  D7C8               	goto	l1311
  3796  004BA4  0A01               	xorlw	1	; case 5
  3797  004BA6  A4D8               	btfss	status,2,c
  3798  004BA8  0012               	return	
  3799  004BAA  D7D4               	goto	l1312
  3800  004BAC                     __end_of_ui_run:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           postdec1	equ	0xFE5
  3809                           fsr1h	equ	0xFE2
  3810                           fsr1l	equ	0xFE1
  3811                           status	equ	0xFD8
  3812                           
  3813 ;; *************** function _system_encoder_enable *****************
  3814 ;; Defined at:
  3815 ;;		line 95 in file "os.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_ui_run
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text2
  3843  007D0A                     __ptext2:
  3844                           	opt stack 0
  3845  007D0A                     _system_encoder_enable:
  3846                           	opt stack 29
  3847                           
  3848                           ;os.c: 98: INTCON3bits.INT2IF = 0;
  3849                           
  3850                           ;incstack = 0
  3851  007D0A  92F0               	bcf	intcon3,1,c	;volatile
  3852                           
  3853                           ;os.c: 99: INTCON3bits.INT3IF = 0;
  3854  007D0C  94F0               	bcf	intcon3,2,c	;volatile
  3855                           
  3856                           ;os.c: 102: os.encoderCount = 0;
  3857  007D0E  0E00               	movlw	0
  3858  007D10  0100               	movlb	0	; () banked
  3859  007D12  6F60               	movwf	_os& (0+255),b	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;os.c: 105: INTCON3bits.INT2IE = 1;
  3863  007D14  88F0               	bsf	intcon3,4,c	;volatile
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;os.c: 106: INTCON3bits.INT3IE = 1;
  3867  007D16  8AF0               	bsf	intcon3,5,c	;volatile
  3868                           
  3869                           ; BSR set to: 0
  3870  007D18  0012               	return		;funcret
  3871  007D1A                     __end_of_system_encoder_enable:
  3872                           	opt stack 0
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           intcon3	equ	0xFF0
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           postdec1	equ	0xFE5
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _i2c_display_send_init_sequence *****************
  3886 ;; Defined at:
  3887 ;;		line 199 in file "i2c.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;Total ram usage:        9 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		__i2c_write
  3910 ;;		_i2c_set_frequency
  3911 ;; This function is called by:
  3912 ;;		_ui_run
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text3
  3917  007966                     __ptext3:
  3918                           	opt stack 0
  3919  007966                     _i2c_display_send_init_sequence:
  3920                           	opt stack 27
  3921                           
  3922                           ;i2c.c: 201: uint8_t init_sequence[9] = {;i2c.c: 202: 0x3A,;i2c.c: 204: 0b00011110,;i2c.
      +                          c: 205: 0x39,;i2c.c: 207: 0b00001100,;i2c.c: 208: 0x74,;i2c.c: 209: 0b1011100,;i2c.c: 21
      +                          0: 0x6d,;i2c.c: 211: 0x0c,;i2c.c: 212: 0x01;i2c.c: 213: };
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;incstack = 0
  3926  007966  EE21  F0F6         	lfsr	2,i2c_display_send_init_sequence@F6799
  3927  00796A  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3928  00796E  0E08               	movlw	8
  3929  007970                     u10411:
  3930  007970  CFDB FFE3          	movff	plusw2,plusw1
  3931  007974  06E8               	decf	wreg,f,c
  3932  007976  E2FC               	bc	u10411
  3933                           
  3934                           ;i2c.c: 216: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3935  007978  0E00               	movlw	0
  3936  00797A  ECF5  F03C         	call	_i2c_set_frequency
  3937                           
  3938                           ;i2c.c: 219: _i2c_write(0b01111000, &init_sequence[0], 9);
  3939  00797E  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3940  007980  6E06               	movwf	__i2c_write@data,c
  3941  007982  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3942  007984  6E07               	movwf	__i2c_write@data+1,c
  3943  007986  0E09               	movlw	9
  3944  007988  6E08               	movwf	__i2c_write@length,c
  3945  00798A  0E78               	movlw	120
  3946  00798C  ECC9  F039         	call	__i2c_write
  3947  007990  0012               	return		;funcret
  3948  007992                     __end_of_i2c_display_send_init_sequence:
  3949                           	opt stack 0
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           intcon3	equ	0xFF0
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           plusw1	equ	0xFE3
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           plusw2	equ	0xFDB
  3962                           status	equ	0xFD8
  3963                           
  3964 ;; *************** function _i2c_digipot_reset_on *****************
  3965 ;; Defined at:
  3966 ;;		line 302 in file "i2c.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;Total ram usage:        2 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    2
  3987 ;; This function calls:
  3988 ;;		__i2c_write
  3989 ;;		_i2c_set_frequency
  3990 ;; This function is called by:
  3991 ;;		_ui_run
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text4
  3996  007B48                     __ptext4:
  3997                           	opt stack 0
  3998  007B48                     _i2c_digipot_reset_on:
  3999                           	opt stack 27
  4000                           
  4001                           ;i2c.c: 304: uint8_t data_array[2];;i2c.c: 305: data_array[0] = 0x10 | 0x00;
  4002                           
  4003                           ;incstack = 0
  4004  007B48  0E10               	movlw	16
  4005  007B4A  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4006                           
  4007                           ;i2c.c: 307: data_array[1] = 0x00;
  4008  007B4C  0E00               	movlw	0
  4009  007B4E  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4010                           
  4011                           ;i2c.c: 310: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4012  007B50  0E02               	movlw	2
  4013  007B52  ECF5  F03C         	call	_i2c_set_frequency
  4014                           
  4015                           ;i2c.c: 312: _i2c_write(0b01011100, &data_array[0], 2);
  4016  007B56  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4017  007B58  6E06               	movwf	__i2c_write@data,c
  4018  007B5A  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4019  007B5C  6E07               	movwf	__i2c_write@data+1,c
  4020  007B5E  0E02               	movlw	2
  4021  007B60  6E08               	movwf	__i2c_write@length,c
  4022  007B62  0E5C               	movlw	92
  4023  007B64  ECC9  F039         	call	__i2c_write
  4024  007B68  0012               	return		;funcret
  4025  007B6A                     __end_of_i2c_digipot_reset_on:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           intcon3	equ	0xFF0
  4032                           postinc0	equ	0xFEE
  4033                           wreg	equ	0xFE8
  4034                           postdec1	equ	0xFE5
  4035                           plusw1	equ	0xFE3
  4036                           fsr1h	equ	0xFE2
  4037                           fsr1l	equ	0xFE1
  4038                           plusw2	equ	0xFDB
  4039                           status	equ	0xFD8
  4040                           
  4041 ;; *************** function _i2c_digipot_reset_off *****************
  4042 ;; Defined at:
  4043 ;;		line 315 in file "i2c.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;Total ram usage:        2 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    2
  4064 ;; This function calls:
  4065 ;;		__i2c_write
  4066 ;;		_i2c_set_frequency
  4067 ;; This function is called by:
  4068 ;;		_ui_run
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text5
  4073  007B6A                     __ptext5:
  4074                           	opt stack 0
  4075  007B6A                     _i2c_digipot_reset_off:
  4076                           	opt stack 27
  4077                           
  4078                           ;i2c.c: 317: uint8_t data_array[2];;i2c.c: 318: data_array[0] = 0x10 | 0x00;
  4079                           
  4080                           ;incstack = 0
  4081  007B6A  0E10               	movlw	16
  4082  007B6C  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4083                           
  4084                           ;i2c.c: 319: data_array[1] = 0x80;
  4085  007B6E  0E80               	movlw	128
  4086  007B70  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4087                           
  4088                           ;i2c.c: 322: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4089  007B72  0E02               	movlw	2
  4090  007B74  ECF5  F03C         	call	_i2c_set_frequency
  4091                           
  4092                           ;i2c.c: 324: _i2c_write(0b01011100, &data_array[0], 2);
  4093  007B78  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4094  007B7A  6E06               	movwf	__i2c_write@data,c
  4095  007B7C  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4096  007B7E  6E07               	movwf	__i2c_write@data+1,c
  4097  007B80  0E02               	movlw	2
  4098  007B82  6E08               	movwf	__i2c_write@length,c
  4099  007B84  0E5C               	movlw	92
  4100  007B86  ECC9  F039         	call	__i2c_write
  4101  007B8A  0012               	return		;funcret
  4102  007B8C                     __end_of_i2c_digipot_reset_off:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           intcon3	equ	0xFF0
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           postdec1	equ	0xFE5
  4112                           plusw1	equ	0xFE3
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           plusw2	equ	0xFDB
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function _i2c_digipot_backlight *****************
  4119 ;; Defined at:
  4120 ;;		line 327 in file "i2c.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  level           1    wreg     unsigned char 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  level           1   10[COMRAM] unsigned char 
  4125 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;Total ram usage:        3 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    2
  4142 ;; This function calls:
  4143 ;;		__i2c_write
  4144 ;;		_i2c_set_frequency
  4145 ;; This function is called by:
  4146 ;;		_ui_run
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text6
  4151  007A90                     __ptext6:
  4152                           	opt stack 0
  4153  007A90                     _i2c_digipot_backlight:
  4154                           	opt stack 27
  4155                           
  4156                           ;incstack = 0
  4157                           ;i2c_digipot_backlight@level stored from wreg
  4158  007A90  6E0B               	movwf	i2c_digipot_backlight@level,c
  4159                           
  4160                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0x00 | 0x00;
  4161  007A92  0E00               	movlw	0
  4162  007A94  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4163                           
  4164                           ;i2c.c: 331: data_array[1] = level>>1;
  4165  007A96  90D8               	bcf	status,0,c
  4166  007A98  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4167  007A9A  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4168                           
  4169                           ;i2c.c: 334: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4170  007A9C  0E02               	movlw	2
  4171  007A9E  ECF5  F03C         	call	_i2c_set_frequency
  4172                           
  4173                           ;i2c.c: 336: _i2c_write(0b01011100, &data_array[0], 2);
  4174  007AA2  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4175  007AA4  6E06               	movwf	__i2c_write@data,c
  4176  007AA6  0E00               	movlw	high i2c_digipot_backlight@data_array
  4177  007AA8  6E07               	movwf	__i2c_write@data+1,c
  4178  007AAA  0E02               	movlw	2
  4179  007AAC  6E08               	movwf	__i2c_write@length,c
  4180  007AAE  0E5C               	movlw	92
  4181  007AB0  ECC9  F039         	call	__i2c_write
  4182  007AB4  0012               	return		;funcret
  4183  007AB6                     __end_of_i2c_digipot_backlight:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           intcon3	equ	0xFF0
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           postdec1	equ	0xFE5
  4193                           plusw1	equ	0xFE3
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           plusw2	equ	0xFDB
  4197                           status	equ	0xFD8
  4198                           
  4199 ;; *************** function __ui_encoder *****************
  4200 ;; Defined at:
  4201 ;;		line 21 in file "ui.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    1
  4222 ;; This function calls:
  4223 ;;		_jump_to_main_program
  4224 ;; This function is called by:
  4225 ;;		_ui_run
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text7
  4230  005440                     __ptext7:
  4231                           	opt stack 0
  4232  005440                     __ui_encoder:
  4233                           	opt stack 28
  4234                           
  4235                           ;ui.c: 23: switch(os.display_mode)
  4236                           
  4237                           ;incstack = 0
  4238  005440  D041               	goto	l1278
  4239  005442                     
  4240                           ;ui.c: 26: if(os.buttonCount>0)
  4241  005442  0100               	movlb	0	; () banked
  4242  005444  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4243  005446  0A80               	xorlw	128
  4244  005448  0F7F               	addlw	-129
  4245  00544A  A0D8               	btfss	status,0,c
  4246  00544C  0012               	return	
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;ui.c: 27: {;ui.c: 28: os.buttonCount = 0;
  4250  00544E  0E00               	movlw	0
  4251  005450  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;ui.c: 29: };ui.c: 30: break;
  4255  005452  0012               	return	
  4256  005454                     
  4257                           ; BSR set to: 0
  4258                           ;ui.c: 33: if(os.buttonCount>0)
  4259                           
  4260                           ; BSR set to: 0
  4261  005454  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4262  005456  0A80               	xorlw	128
  4263  005458  0F7F               	addlw	-129
  4264  00545A  A0D8               	btfss	status,0,c
  4265  00545C  0012               	return	
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;ui.c: 34: {;ui.c: 35: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4269  00545E  0E20               	movlw	32
  4270  005460  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4271                           
  4272                           ;ui.c: 36: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4273  005462  0E20               	movlw	32
  4274  005464  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4275                           
  4276                           ;ui.c: 37: os.buttonCount = 0;
  4277  005466  0E00               	movlw	0
  4278  005468  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;ui.c: 38: };ui.c: 39: break;
  4282  00546A  0012               	return	
  4283  00546C                     
  4284                           ; BSR set to: 0
  4285                           ;ui.c: 42: if(os.buttonCount>0)
  4286                           
  4287                           ; BSR set to: 0
  4288  00546C  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4289  00546E  0A80               	xorlw	128
  4290  005470  0F7F               	addlw	-129
  4291  005472  A0D8               	btfss	status,0,c
  4292  005474  0012               	return	
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;ui.c: 43: {;ui.c: 44: os.buttonCount = 0;
  4296  005476  0E00               	movlw	0
  4297  005478  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;ui.c: 45: };ui.c: 46: break;
  4301  00547A  0012               	return	
  4302  00547C                     
  4303                           ; BSR set to: 0
  4304                           ;ui.c: 49: if(os.buttonCount>0)
  4305                           
  4306                           ; BSR set to: 0
  4307  00547C  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4308  00547E  0A80               	xorlw	128
  4309  005480  0F7F               	addlw	-129
  4310  005482  A0D8               	btfss	status,0,c
  4311  005484  0012               	return	
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;ui.c: 50: {;ui.c: 51: os.buttonCount = 0;
  4315  005486  0E00               	movlw	0
  4316  005488  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;ui.c: 52: };ui.c: 53: break;
  4320  00548A  0012               	return	
  4321  00548C                     
  4322                           ; BSR set to: 0
  4323                           ;ui.c: 56: if(os.buttonCount>0)
  4324                           
  4325                           ; BSR set to: 0
  4326  00548C  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4327  00548E  0A80               	xorlw	128
  4328  005490  0F7F               	addlw	-129
  4329  005492  A0D8               	btfss	status,0,c
  4330  005494  0012               	return	
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;ui.c: 57: {;ui.c: 58: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4334  005496  0E50               	movlw	80
  4335  005498  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4336                           
  4337                           ;ui.c: 59: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4338  00549A  0E50               	movlw	80
  4339  00549C  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4340                           
  4341                           ;ui.c: 60: os.buttonCount = 0;
  4342  00549E  0E00               	movlw	0
  4343  0054A0  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;ui.c: 61: };ui.c: 62: break;
  4347  0054A2  0012               	return	
  4348  0054A4                     
  4349                           ; BSR set to: 0
  4350                           ;ui.c: 65: if(os.buttonCount>0)
  4351                           
  4352                           ; BSR set to: 0
  4353  0054A4  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4354  0054A6  0A80               	xorlw	128
  4355  0054A8  0F7F               	addlw	-129
  4356  0054AA  A0D8               	btfss	status,0,c
  4357  0054AC  0012               	return	
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;ui.c: 66: {;ui.c: 67: os.buttonCount = 0;
  4361  0054AE  0E00               	movlw	0
  4362  0054B0  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;ui.c: 68: };ui.c: 69: break;
  4366  0054B2  0012               	return	
  4367  0054B4                     
  4368                           ; BSR set to: 0
  4369                           ;ui.c: 72: if(os.buttonCount>0)
  4370                           
  4371                           ; BSR set to: 0
  4372  0054B4  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4373  0054B6  0A80               	xorlw	128
  4374  0054B8  0F7F               	addlw	-129
  4375  0054BA  A0D8               	btfss	status,0,c
  4376  0054BC  0012               	return	
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;ui.c: 73: {;ui.c: 74: jump_to_main_program();
  4380  0054BE  EC12  F03B         	call	_jump_to_main_program	;wreg free
  4381                           
  4382                           ;ui.c: 77: }
  4383                           
  4384                           ;ui.c: 75: };ui.c: 76: break;
  4385  0054C2  0012               	return	
  4386  0054C4                     l1278:
  4387  0054C4  0100               	movlb	0	; () banked
  4388  0054C6  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4389                           
  4390                           ; Switch size 1, requested type "space"
  4391                           ; Number of cases is 7, Range of values is 0 to 96
  4392                           ; switch strategies available:
  4393                           ; Name         Instructions Cycles
  4394                           ; simple_byte           22    12 (average)
  4395                           ;	Chosen strategy is simple_byte
  4396  0054C8  0A00               	xorlw	0	; case 0
  4397  0054CA  B4D8               	btfsc	status,2,c
  4398  0054CC  D7BA               	goto	l1279
  4399  0054CE  0A10               	xorlw	16	; case 16
  4400  0054D0  B4D8               	btfsc	status,2,c
  4401  0054D2  D7C0               	goto	l1282
  4402  0054D4  0A30               	xorlw	48	; case 32
  4403  0054D6  B4D8               	btfsc	status,2,c
  4404  0054D8  D7C9               	goto	l1284
  4405  0054DA  0A10               	xorlw	16	; case 48
  4406  0054DC  B4D8               	btfsc	status,2,c
  4407  0054DE  D7D6               	goto	l1288
  4408  0054E0  0A70               	xorlw	112	; case 64
  4409  0054E2  B4D8               	btfsc	status,2,c
  4410  0054E4  D7CB               	goto	l1286
  4411  0054E6  0A10               	xorlw	16	; case 80
  4412  0054E8  B4D8               	btfsc	status,2,c
  4413  0054EA  D7DC               	goto	l1290
  4414  0054EC  0A30               	xorlw	48	; case 96
  4415  0054EE  A4D8               	btfss	status,2,c
  4416  0054F0  0012               	return	
  4417  0054F2  D7E0               	goto	l1292
  4418  0054F4                     __end_of__ui_encoder:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           intcon3	equ	0xFF0
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           postdec1	equ	0xFE5
  4428                           plusw1	equ	0xFE3
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           plusw2	equ	0xFDB
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _timer_pseudo_isr *****************
  4435 ;; Defined at:
  4436 ;;		line 18 in file "os.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text8
  4464  007740                     __ptext8:
  4465                           	opt stack 0
  4466  007740                     _timer_pseudo_isr:
  4467                           	opt stack 30
  4468                           
  4469                           ;os.c: 21: if(INTCONbits.T0IF==0)
  4470                           
  4471                           ;incstack = 0
  4472  007740  A4F2               	btfss	intcon,2,c	;volatile
  4473  007742  0012               	return	
  4474                           
  4475                           ;os.c: 24: };os.c: 28: TMR0H = 0xD1;
  4476                           
  4477                           ;os.c: 22: {;os.c: 23: return;
  4478  007744  0ED1               	movlw	209
  4479  007746  6ED7               	movwf	4055,c	;volatile
  4480                           
  4481                           ;os.c: 29: TMR0L = 0x20;
  4482  007748  0E20               	movlw	32
  4483  00774A  6ED6               	movwf	4054,c	;volatile
  4484                           
  4485                           ;os.c: 30: ++os.timeSlot;
  4486  00774C  0100               	movlb	0	; () banked
  4487  00774E  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;os.c: 32: os.done = 0;
  4491  007750  0E00               	movlw	0
  4492  007752  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;os.c: 33: INTCONbits.T0IF = 0;
  4496  007754  94F2               	bcf	intcon,2,c	;volatile
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;os.c: 36: if(INTCON3bits.INT1IF)
  4500  007756  A0F0               	btfss	intcon3,0,c	;volatile
  4501  007758  D002               	goto	l1087
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;os.c: 37: {;os.c: 38: ++os.buttonCount;
  4505  00775A  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;os.c: 39: INTCON3bits.INT1IF = 0;
  4509  00775C  90F0               	bcf	intcon3,0,c	;volatile
  4510  00775E                     l1087:
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;os.c: 40: };os.c: 43: if(INTCON3bits.INT2IF)
  4514                           
  4515                           ; BSR set to: 0
  4516  00775E  A2F0               	btfss	intcon3,1,c	;volatile
  4517  007760  D003               	goto	l1088
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;os.c: 44: {;os.c: 45: if(!PORTBbits.RB6)
  4521  007762  AC81               	btfss	3969,6,c	;volatile
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;os.c: 46: {;os.c: 47: --os.encoderCount;
  4525  007764  0760               	decf	_os& (0+255),f,b	;volatile
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;os.c: 48: };os.c: 49: INTCON3bits.INT2IF = 0;
  4529                           
  4530                           ; BSR set to: 0
  4531  007766  92F0               	bcf	intcon3,1,c	;volatile
  4532  007768                     l1088:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;os.c: 50: };os.c: 51: if(INTCON3bits.INT3IF)
  4536                           
  4537                           ; BSR set to: 0
  4538  007768  A4F0               	btfss	intcon3,2,c	;volatile
  4539  00776A  0012               	return	
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;os.c: 52: {;os.c: 53: if(!PORTBbits.RB7)
  4543  00776C  AE81               	btfss	3969,7,c	;volatile
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;os.c: 54: {;os.c: 55: ++os.encoderCount;
  4547  00776E  2B60               	incf	_os& (0+255),f,b	;volatile
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;os.c: 56: };os.c: 57: INTCON3bits.INT3IF = 0;
  4551                           
  4552                           ; BSR set to: 0
  4553  007770  94F0               	bcf	intcon3,2,c	;volatile
  4554  007772  0012               	return	
  4555  007774                     __end_of_timer_pseudo_isr:
  4556                           	opt stack 0
  4557                           tblptru	equ	0xFF8
  4558                           tblptrh	equ	0xFF7
  4559                           tblptrl	equ	0xFF6
  4560                           tablat	equ	0xFF5
  4561                           intcon	equ	0xFF2
  4562                           intcon3	equ	0xFF0
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           postdec1	equ	0xFE5
  4566                           plusw1	equ	0xFE3
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           plusw2	equ	0xFDB
  4570                           status	equ	0xFD8
  4571                           
  4572 ;; *************** function _system_init *****************
  4573 ;; Defined at:
  4574 ;;		line 137 in file "os.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    7
  4595 ;; This function calls:
  4596 ;;		__system_encoder_init
  4597 ;;		__system_timer0_init
  4598 ;;		_fat_format
  4599 ;;		_fat_init
  4600 ;;		_flash_init
  4601 ;;		_i2c_init
  4602 ;;		_ui_init
  4603 ;; This function is called by:
  4604 ;;		_main
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text9
  4609  0067FE                     __ptext9:
  4610                           	opt stack 0
  4611  0067FE                     _system_init:
  4612                           	opt stack 23
  4613                           
  4614                           ;os.c: 144: TRISCbits.TRISC2 = 0;
  4615                           
  4616                           ;incstack = 0
  4617  0067FE  9494               	bcf	3988,2,c	;volatile
  4618                           
  4619                           ;os.c: 145: LATCbits.LC2 = 1;
  4620  006800  848B               	bsf	3979,2,c	;volatile
  4621                           
  4622                           ;os.c: 148: TRISDbits.TRISD0 = 0;
  4623  006802  9095               	bcf	3989,0,c	;volatile
  4624                           
  4625                           ;os.c: 149: LATDbits.LD0 = 0;
  4626  006804  908C               	bcf	3980,0,c	;volatile
  4627                           
  4628                           ;os.c: 152: TRISDbits.TRISD3 = 0;
  4629  006806  9695               	bcf	3989,3,c	;volatile
  4630                           
  4631                           ;os.c: 153: LATDbits.LD3 = 0;
  4632  006808  968C               	bcf	3980,3,c	;volatile
  4633                           
  4634                           ;os.c: 156: TRISDbits.TRISD1 = 0;
  4635  00680A  9295               	bcf	3989,1,c	;volatile
  4636                           
  4637                           ;os.c: 157: LATDbits.LD1 = 0;
  4638  00680C  928C               	bcf	3980,1,c	;volatile
  4639                           
  4640                           ;os.c: 160: TRISBbits.TRISB1 = 0;
  4641  00680E  9293               	bcf	3987,1,c	;volatile
  4642                           
  4643                           ;os.c: 161: LATBbits.LB1 = 0;
  4644  006810  928A               	bcf	3978,1,c	;volatile
  4645                           
  4646                           ;os.c: 164: TRISBbits.TRISB2 = 0;
  4647  006812  9493               	bcf	3987,2,c	;volatile
  4648                           
  4649                           ;os.c: 165: LATBbits.LB2 = 0;
  4650  006814  948A               	bcf	3978,2,c	;volatile
  4651                           
  4652                           ;os.c: 166: TRISBbits.TRISB3 = 0;
  4653  006816  9693               	bcf	3987,3,c	;volatile
  4654                           
  4655                           ;os.c: 167: LATBbits.LB3 = 0;
  4656  006818  968A               	bcf	3978,3,c	;volatile
  4657                           
  4658                           ;os.c: 170: TRISDbits.TRISD6 = 1;
  4659  00681A  8C95               	bsf	3989,6,c	;volatile
  4660                           
  4661                           ;os.c: 171: TRISDbits.TRISD4 = 0;
  4662  00681C  9895               	bcf	3989,4,c	;volatile
  4663                           
  4664                           ;os.c: 172: TRISDbits.TRISD5 = 0;
  4665  00681E  9A95               	bcf	3989,5,c	;volatile
  4666                           
  4667                           ;os.c: 173: TRISDbits.TRISD7 = 0;
  4668  006820  9E95               	bcf	3989,7,c	;volatile
  4669                           
  4670                           ;os.c: 174: LATDbits.LD7 = 1;
  4671  006822  8E8C               	bsf	3980,7,c	;volatile
  4672                           
  4673                           ;os.c: 175: TRISDbits.TRISD2 = 1;
  4674  006824  8495               	bsf	3989,2,c	;volatile
  4675                           
  4676                           ;os.c: 178: TRISCbits.TRISC7 = 0;
  4677  006826  9E94               	bcf	3988,7,c	;volatile
  4678                           
  4679                           ;os.c: 179: LATCbits.LC7 = 0;
  4680  006828  9E8B               	bcf	3979,7,c	;volatile
  4681                           
  4682                           ;os.c: 182: TRISEbits.TRISE2 = 0;
  4683  00682A  9496               	bcf	3990,2,c	;volatile
  4684                           
  4685                           ;os.c: 183: LATEbits.LE2 = 1;
  4686  00682C  848D               	bsf	3981,2,c	;volatile
  4687                           
  4688                           ;os.c: 184: TRISEbits.TRISE1 = 0;
  4689  00682E  9296               	bcf	3990,1,c	;volatile
  4690                           
  4691                           ;os.c: 185: LATEbits.LE1 = 1;
  4692  006830  828D               	bsf	3981,1,c	;volatile
  4693                           
  4694                           ;os.c: 186: TRISEbits.TRISE0 = 0;
  4695  006832  9096               	bcf	3990,0,c	;volatile
  4696                           
  4697                           ;os.c: 187: LATEbits.LE0 = 1;
  4698  006834  808D               	bsf	3981,0,c	;volatile
  4699                           
  4700                           ;os.c: 188: TRISAbits.TRISA5 = 0;
  4701  006836  9A92               	bcf	3986,5,c	;volatile
  4702                           
  4703                           ;os.c: 189: LATAbits.LA5 = 1;
  4704  006838  8A89               	bsf	3977,5,c	;volatile
  4705                           
  4706                           ;os.c: 192: TRISAbits.TRISA0 = 1;
  4707  00683A  8092               	bsf	3986,0,c	;volatile
  4708                           
  4709                           ;os.c: 193: ANCON0bits.PCFG0 = 1;
  4710  00683C  010F               	movlb	15	; () banked
  4711  00683E  8148               	bsf	72,0,b	;volatile
  4712                           
  4713                           ;os.c: 194: TRISBbits.TRISB7 = 1;
  4714  006840  8E93               	bsf	3987,7,c	;volatile
  4715                           
  4716                           ;os.c: 195: TRISBbits.TRISB6 = 1;
  4717  006842  8C93               	bsf	3987,6,c	;volatile
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;os.c: 198: os.bootloader_mode = BOOTLOADER_MODE_START;
  4721  006844  0E00               	movlw	0
  4722  006846  0100               	movlb	0	; () banked
  4723  006848  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4724                           
  4725                           ;os.c: 199: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4726  00684A  0E00               	movlw	0
  4727  00684C  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;os.c: 202: i2c_init();
  4731  00684E  ECA4  F03E         	call	_i2c_init	;wreg free
  4732                           
  4733                           ;os.c: 205: flash_init();
  4734  006852  EC23  F03E         	call	_flash_init	;wreg free
  4735                           
  4736                           ;os.c: 208: fat_init();
  4737  006856  EC8D  F03E         	call	_fat_init	;wreg free
  4738                           
  4739                           ;os.c: 210: fat_format();
  4740  00685A  ECA8  F012         	call	_fat_format	;wreg free
  4741                           
  4742                           ;os.c: 213: _system_encoder_init();
  4743  00685E  EC30  F03B         	call	__system_encoder_init	;wreg free
  4744                           
  4745                           ;os.c: 216: ui_init();
  4746  006862  EC5F  F03E         	call	_ui_init	;wreg free
  4747                           
  4748                           ;os.c: 219: _system_timer0_init();
  4749  006866  ECE8  F03D         	call	__system_timer0_init	;wreg free
  4750  00686A  0012               	return		;funcret
  4751  00686C                     __end_of_system_init:
  4752                           	opt stack 0
  4753                           tblptru	equ	0xFF8
  4754                           tblptrh	equ	0xFF7
  4755                           tblptrl	equ	0xFF6
  4756                           tablat	equ	0xFF5
  4757                           intcon	equ	0xFF2
  4758                           intcon3	equ	0xFF0
  4759                           postinc0	equ	0xFEE
  4760                           wreg	equ	0xFE8
  4761                           postdec1	equ	0xFE5
  4762                           plusw1	equ	0xFE3
  4763                           fsr1h	equ	0xFE2
  4764                           fsr1l	equ	0xFE1
  4765                           plusw2	equ	0xFDB
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function _ui_init *****************
  4769 ;; Defined at:
  4770 ;;		line 91 in file "ui.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_system_init
  4794 ;;		_ui_run
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text10
  4799  007CBE                     __ptext10:
  4800                           	opt stack 0
  4801  007CBE                     _ui_init:
  4802                           	opt stack 29
  4803                           
  4804                           ;ui.c: 93: system_ui_inactive_count = 0;
  4805                           
  4806                           ;incstack = 0
  4807  007CBE  0E00               	movlw	0
  4808  007CC0  0101               	movlb	1	; () banked
  4809  007CC2  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4810  007CC4  0E00               	movlw	0
  4811  007CC6  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;ui.c: 95: LATCbits.LC2 = 1;
  4815  007CC8  848B               	bsf	3979,2,c	;volatile
  4816                           
  4817                           ;ui.c: 96: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4818  007CCA  0E01               	movlw	1
  4819  007CCC  0100               	movlb	0	; () banked
  4820  007CCE  6F98               	movwf	_userInterfaceStatus& (0+255),b
  4821                           
  4822                           ; BSR set to: 0
  4823  007CD0  0012               	return		;funcret
  4824  007CD2                     __end_of_ui_init:
  4825                           	opt stack 0
  4826                           tblptru	equ	0xFF8
  4827                           tblptrh	equ	0xFF7
  4828                           tblptrl	equ	0xFF6
  4829                           tablat	equ	0xFF5
  4830                           intcon	equ	0xFF2
  4831                           intcon3	equ	0xFF0
  4832                           postinc0	equ	0xFEE
  4833                           wreg	equ	0xFE8
  4834                           postdec1	equ	0xFE5
  4835                           plusw1	equ	0xFE3
  4836                           fsr1h	equ	0xFE2
  4837                           fsr1l	equ	0xFE1
  4838                           plusw2	equ	0xFDB
  4839                           status	equ	0xFD8
  4840                           
  4841 ;; *************** function _i2c_init *****************
  4842 ;; Defined at:
  4843 ;;		line 102 in file "i2c.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;		None
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0, cstack
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;Total ram usage:        0 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    1
  4864 ;; This function calls:
  4865 ;;		__i2c_open_1
  4866 ;;		_i2c_set_frequency
  4867 ;; This function is called by:
  4868 ;;		_system_init
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text11
  4873  007D48                     __ptext11:
  4874                           	opt stack 0
  4875  007D48                     _i2c_init:
  4876                           	opt stack 28
  4877                           
  4878                           ;i2c.c: 105: _i2c_open_1();
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;incstack = 0
  4882  007D48  EC3D  F03E         	call	__i2c_open_1	;wreg free
  4883                           
  4884                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4885  007D4C  0E00               	movlw	0
  4886  007D4E  ECF5  F03C         	call	_i2c_set_frequency
  4887  007D52  0012               	return		;funcret
  4888  007D54                     __end_of_i2c_init:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           intcon	equ	0xFF2
  4895                           intcon3	equ	0xFF0
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           postdec1	equ	0xFE5
  4899                           plusw1	equ	0xFE3
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           plusw2	equ	0xFDB
  4903                           status	equ	0xFD8
  4904                           
  4905 ;; *************** function __i2c_open_1 *****************
  4906 ;; Defined at:
  4907 ;;		line 36 in file "i2c.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_i2c_init
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text12
  4935  007C7A                     __ptext12:
  4936                           	opt stack 0
  4937  007C7A                     __i2c_open_1:
  4938                           	opt stack 28
  4939                           
  4940                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  4941                           
  4942                           ;incstack = 0
  4943  007C7A  9EC7               	bcf	4039,7,c	;volatile
  4944                           
  4945                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  4946  007C7C  9CC7               	bcf	4039,6,c	;volatile
  4947                           
  4948                           ;i2c.c: 40: SSP1ADD = 29;
  4949  007C7E  0E1D               	movlw	29
  4950  007C80  6EC8               	movwf	4040,c	;volatile
  4951                           
  4952                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  4953  007C82  9EC6               	bcf	4038,7,c	;volatile
  4954                           
  4955                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  4956  007C84  9CC6               	bcf	4038,6,c	;volatile
  4957                           
  4958                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  4959  007C86  50C6               	movf	4038,w,c	;volatile
  4960  007C88  0BF0               	andlw	-16
  4961  007C8A  0908               	iorlw	8
  4962  007C8C  6EC6               	movwf	4038,c	;volatile
  4963                           
  4964                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  4965  007C8E  8AC6               	bsf	4038,5,c	;volatile
  4966  007C90  0012               	return		;funcret
  4967  007C92                     __end_of__i2c_open_1:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           intcon	equ	0xFF2
  4974                           intcon3	equ	0xFF0
  4975                           postinc0	equ	0xFEE
  4976                           wreg	equ	0xFE8
  4977                           postdec1	equ	0xFE5
  4978                           plusw1	equ	0xFE3
  4979                           fsr1h	equ	0xFE2
  4980                           fsr1l	equ	0xFE1
  4981                           plusw2	equ	0xFDB
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _flash_init *****************
  4985 ;; Defined at:
  4986 ;;		line 337 in file "flash.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    4
  5007 ;; This function calls:
  5008 ;;		__flash_set_page_size
  5009 ;;		_spi_init
  5010 ;;		_spi_set_configuration
  5011 ;; This function is called by:
  5012 ;;		_system_init
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text13
  5017  007C46                     __ptext13:
  5018                           	opt stack 0
  5019  007C46                     _flash_init:
  5020                           	opt stack 25
  5021                           
  5022                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5023                           
  5024                           ;incstack = 0
  5025  007C46  0E00               	movlw	0
  5026  007C48  ECD6  F03A         	call	_spi_init
  5027                           
  5028                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5029  007C4C  0E00               	movlw	0
  5030  007C4E  ECB1  F022         	call	_spi_set_configuration
  5031                           
  5032                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5033  007C52  0E00               	movlw	0
  5034  007C54  ECF2  F031         	call	__flash_set_page_size
  5035                           
  5036                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5037  007C58  0E01               	movlw	1
  5038  007C5A  ECB1  F022         	call	_spi_set_configuration
  5039  007C5E  0012               	return		;funcret
  5040  007C60                     __end_of_flash_init:
  5041                           	opt stack 0
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           intcon	equ	0xFF2
  5047                           intcon3	equ	0xFF0
  5048                           postinc0	equ	0xFEE
  5049                           wreg	equ	0xFE8
  5050                           postdec1	equ	0xFE5
  5051                           plusw1	equ	0xFE3
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           plusw2	equ	0xFDB
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _spi_init *****************
  5058 ;; Defined at:
  5059 ;;		line 122 in file "spi.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  configuratio    1    wreg     enum E6747
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  configuratio    1    3[COMRAM] enum E6747
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    1
  5080 ;; This function calls:
  5081 ;;		__spi_init
  5082 ;; This function is called by:
  5083 ;;		_flash_init
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text14
  5088  0075AC                     __ptext14:
  5089                           	opt stack 0
  5090  0075AC                     _spi_init:
  5091                           	opt stack 27
  5092                           
  5093                           ;incstack = 0
  5094                           ;spi_init@configuration stored from wreg
  5095  0075AC  6E04               	movwf	spi_init@configuration,c
  5096                           
  5097                           ;spi.c: 124: switch(configuration)
  5098  0075AE  D012               	goto	l2737
  5099  0075B0                     
  5100                           ;spi.c: 127: _spi_init(config_internal);
  5101  0075B0  C15B  F001         	movff	_config_internal,__spi_init@details
  5102  0075B4  C15C  F002         	movff	_config_internal+1,__spi_init@details+1
  5103  0075B8  C15D  F003         	movff	_config_internal+2,__spi_init@details+2
  5104  0075BC  EC4D  F03B         	call	__spi_init	;wreg free
  5105                           
  5106                           ;spi.c: 128: break;
  5107  0075C0  D010               	goto	l2739
  5108  0075C2                     
  5109                           ;spi.c: 131: _spi_init(config_external);
  5110  0075C2  C158  F001         	movff	_config_external,__spi_init@details
  5111  0075C6  C159  F002         	movff	_config_external+1,__spi_init@details+1
  5112  0075CA  C15A  F003         	movff	_config_external+2,__spi_init@details+2
  5113  0075CE  EC4D  F03B         	call	__spi_init	;wreg free
  5114                           
  5115                           ;spi.c: 133: }
  5116                           
  5117                           ;spi.c: 132: break;
  5118  0075D2  D007               	goto	l2739
  5119  0075D4                     l2737:
  5120  0075D4  5004               	movf	spi_init@configuration,w,c
  5121                           
  5122                           ; Switch size 1, requested type "space"
  5123                           ; Number of cases is 2, Range of values is 0 to 1
  5124                           ; switch strategies available:
  5125                           ; Name         Instructions Cycles
  5126                           ; simple_byte            7     4 (average)
  5127                           ;	Chosen strategy is simple_byte
  5128  0075D6  0A00               	xorlw	0	; case 0
  5129  0075D8  B4D8               	btfsc	status,2,c
  5130  0075DA  D7EA               	goto	l2738
  5131  0075DC  0A01               	xorlw	1	; case 1
  5132  0075DE  B4D8               	btfsc	status,2,c
  5133  0075E0  D7F0               	goto	l2740
  5134  0075E2                     l2739:
  5135                           
  5136                           ;spi.c: 135: active_configuration = configuration;
  5137  0075E2  C004  F094         	movff	spi_init@configuration,_active_configuration
  5138  0075E6  0012               	return		;funcret
  5139  0075E8                     __end_of_spi_init:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           intcon	equ	0xFF2
  5146                           intcon3	equ	0xFF0
  5147                           postinc0	equ	0xFEE
  5148                           wreg	equ	0xFE8
  5149                           postdec1	equ	0xFE5
  5150                           plusw1	equ	0xFE3
  5151                           fsr1h	equ	0xFE2
  5152                           fsr1l	equ	0xFE1
  5153                           plusw2	equ	0xFDB
  5154                           status	equ	0xFD8
  5155                           
  5156 ;; *************** function __spi_init *****************
  5157 ;; Defined at:
  5158 ;;		line 25 in file "spi.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  details         3    0[COMRAM] struct .
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5172 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;Total ram usage:        3 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_spi_init
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text15
  5186  00769A                     __ptext15:
  5187                           	opt stack 0
  5188  00769A                     __spi_init:
  5189                           	opt stack 27
  5190                           
  5191                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5192                           
  5193                           ;incstack = 0
  5194  00769A  0E55               	movlw	85
  5195  00769C  6EA7               	movwf	4007,c	;volsfr
  5196  00769E  0EAA               	movlw	170
  5197  0076A0  6EA7               	movwf	4007,c	;volsfr
  5198  0076A2  010E               	movlb	14	; () banked
  5199  0076A4  91BF               	bcf	191,0,b	;volatile
  5200                           
  5201                           ;spi.c: 32: RPINR21 = 23;
  5202  0076A6  0E17               	movlw	23
  5203  0076A8  6FFC               	movwf	252,b	;volatile
  5204                           
  5205                           ;spi.c: 33: RPOR21 = 10;
  5206  0076AA  0E0A               	movlw	10
  5207  0076AC  6FD5               	movwf	213,b	;volatile
  5208                           
  5209                           ;spi.c: 35: RPOR22 = 11;
  5210  0076AE  0E0B               	movlw	11
  5211  0076B0  6FD6               	movwf	214,b	;volatile
  5212                           
  5213                           ;spi.c: 36: RPINR22 = 22;
  5214  0076B2  0E16               	movlw	22
  5215  0076B4  6FFD               	movwf	253,b	;volatile
  5216                           
  5217                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5218  0076B6  0E55               	movlw	85
  5219  0076B8  6EA7               	movwf	4007,c	;volsfr
  5220  0076BA  0EAA               	movlw	170
  5221  0076BC  6EA7               	movwf	4007,c	;volsfr
  5222                           
  5223                           ; BSR set to: 14
  5224  0076BE  81BF               	bsf	191,0,b	;volatile
  5225                           
  5226                           ; BSR set to: 14
  5227                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5228  0076C0  8E73               	bsf	3955,7,c	;volatile
  5229                           
  5230                           ; BSR set to: 14
  5231                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5232  0076C2  8C73               	bsf	3955,6,c	;volatile
  5233                           
  5234                           ; BSR set to: 14
  5235                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5236  0076C4  9872               	bcf	3954,4,c	;volatile
  5237                           
  5238                           ; BSR set to: 14
  5239                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5240  0076C6  9072               	bcf	3954,0,c	;volatile
  5241  0076C8  9272               	bcf	3954,1,c	;volatile
  5242  0076CA  9472               	bcf	3954,2,c	;volatile
  5243  0076CC  9672               	bcf	3954,3,c	;volatile
  5244                           
  5245                           ; BSR set to: 14
  5246                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5247  0076CE  8A72               	bsf	3954,5,c	;volatile
  5248                           
  5249                           ; BSR set to: 14
  5250  0076D0  0012               	return		;funcret
  5251  0076D2                     __end_of__spi_init:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           intcon	equ	0xFF2
  5258                           intcon3	equ	0xFF0
  5259                           postinc0	equ	0xFEE
  5260                           wreg	equ	0xFE8
  5261                           postdec1	equ	0xFE5
  5262                           plusw1	equ	0xFE3
  5263                           fsr1h	equ	0xFE2
  5264                           fsr1l	equ	0xFE1
  5265                           plusw2	equ	0xFDB
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function __flash_set_page_size *****************
  5269 ;; Defined at:
  5270 ;;		line 95 in file "flash.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  size            1    wreg     enum E6878
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  size            1   23[COMRAM] enum E6878
  5275 ;;  command         4   19[COMRAM] unsigned char [4]
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;Total ram usage:        5 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    3
  5292 ;; This function calls:
  5293 ;;		__flash_is_busy
  5294 ;;		_memcpy
  5295 ;;		_spi_tx
  5296 ;; This function is called by:
  5297 ;;		_flash_init
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text16
  5302  0063E4                     __ptext16:
  5303                           	opt stack 0
  5304  0063E4                     __flash_set_page_size:
  5305                           	opt stack 25
  5306                           
  5307                           ; BSR set to: 14
  5308                           ;incstack = 0
  5309                           ;__flash_set_page_size@size stored from wreg
  5310  0063E4  6E18               	movwf	__flash_set_page_size@size,c
  5311  0063E6                     
  5312                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5313  0063E6  ECD7  F03D         	call	__flash_is_busy	;wreg free
  5314  0063EA  0900               	iorlw	0
  5315  0063EC  A4D8               	btfss	status,2,c
  5316  0063EE  D7FB               	goto	l12612
  5317                           
  5318                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5319  0063F0  5018               	movf	__flash_set_page_size@size,w,c
  5320  0063F2  A4D8               	btfss	status,2,c
  5321  0063F4  D013               	goto	l1686
  5322                           
  5323                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5324  0063F6  0E14               	movlw	low __flash_set_page_size@command
  5325  0063F8  6E01               	movwf	memcpy@d1,c
  5326  0063FA  0E00               	movlw	high __flash_set_page_size@command
  5327  0063FC  6E02               	movwf	memcpy@d1+1,c
  5328  0063FE  0EC3               	movlw	low _flash_command_pagesize_512
  5329  006400  6E03               	movwf	memcpy@s1,c
  5330  006402  0E8F               	movlw	high _flash_command_pagesize_512
  5331  006404  6E04               	movwf	memcpy@s1+1,c
  5332  006406  5003               	movf	memcpy@s1,w,c
  5333  006408  1004               	iorwf	memcpy@s1+1,w,c
  5334  00640A  A4D8               	btfss	status,2,c
  5335  00640C  0E00               	movlw	low (__mediumconst shr (0+16))
  5336  00640E  6E05               	movwf	memcpy@s1+2,c
  5337  006410  0E00               	movlw	0
  5338  006412  6E07               	movwf	memcpy@n+1,c
  5339  006414  0E04               	movlw	4
  5340  006416  6E06               	movwf	memcpy@n,c
  5341  006418  ECAA  F035         	call	_memcpy	;wreg free
  5342  00641C                     l1686:
  5343                           
  5344                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5345  00641C  0418               	decf	__flash_set_page_size@size,w,c
  5346  00641E  A4D8               	btfss	status,2,c
  5347  006420  D013               	goto	l1687
  5348                           
  5349                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5350  006422  0E14               	movlw	low __flash_set_page_size@command
  5351  006424  6E01               	movwf	memcpy@d1,c
  5352  006426  0E00               	movlw	high __flash_set_page_size@command
  5353  006428  6E02               	movwf	memcpy@d1+1,c
  5354  00642A  0EBF               	movlw	low _flash_command_pagesize_528
  5355  00642C  6E03               	movwf	memcpy@s1,c
  5356  00642E  0E8F               	movlw	high _flash_command_pagesize_528
  5357  006430  6E04               	movwf	memcpy@s1+1,c
  5358  006432  5003               	movf	memcpy@s1,w,c
  5359  006434  1004               	iorwf	memcpy@s1+1,w,c
  5360  006436  A4D8               	btfss	status,2,c
  5361  006438  0E00               	movlw	low (__mediumconst shr (0+16))
  5362  00643A  6E05               	movwf	memcpy@s1+2,c
  5363  00643C  0E00               	movlw	0
  5364  00643E  6E07               	movwf	memcpy@n+1,c
  5365  006440  0E04               	movlw	4
  5366  006442  6E06               	movwf	memcpy@n,c
  5367  006444  ECAA  F035         	call	_memcpy	;wreg free
  5368  006448                     l1687:
  5369                           
  5370                           ;flash.c: 109: spi_tx(command, 4);
  5371  006448  0E14               	movlw	low __flash_set_page_size@command
  5372  00644A  6E01               	movwf	spi_tx@data,c
  5373  00644C  0E00               	movlw	high __flash_set_page_size@command
  5374  00644E  6E02               	movwf	spi_tx@data+1,c
  5375  006450  0E00               	movlw	0
  5376  006452  6E04               	movwf	spi_tx@length+1,c
  5377  006454  0E04               	movlw	4
  5378  006456  6E03               	movwf	spi_tx@length,c
  5379  006458  ECD6  F037         	call	_spi_tx	;wreg free
  5380  00645C  0012               	return		;funcret
  5381  00645E                     __end_of__flash_set_page_size:
  5382                           	opt stack 0
  5383                           tblptru	equ	0xFF8
  5384                           tblptrh	equ	0xFF7
  5385                           tblptrl	equ	0xFF6
  5386                           tablat	equ	0xFF5
  5387                           intcon	equ	0xFF2
  5388                           intcon3	equ	0xFF0
  5389                           postinc0	equ	0xFEE
  5390                           wreg	equ	0xFE8
  5391                           postdec1	equ	0xFE5
  5392                           plusw1	equ	0xFE3
  5393                           fsr1h	equ	0xFE2
  5394                           fsr1l	equ	0xFE1
  5395                           plusw2	equ	0xFDB
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _fat_init *****************
  5399 ;; Defined at:
  5400 ;;		line 972 in file "fat16.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    6
  5421 ;; This function calls:
  5422 ;;		_fat_format
  5423 ;;		_fat_get_format_status
  5424 ;; This function is called by:
  5425 ;;		_system_init
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text17
  5430  007D1A                     __ptext17:
  5431                           	opt stack 0
  5432  007D1A                     _fat_init:
  5433                           	opt stack 23
  5434                           
  5435                           ;fat16.c: 975: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5436                           
  5437                           ;incstack = 0
  5438  007D1A  EC2C  F02C         	call	_fat_get_format_status	;wreg free
  5439  007D1E  0900               	iorlw	0
  5440  007D20  A4D8               	btfss	status,2,c
  5441  007D22  0012               	return	
  5442                           
  5443                           ;fat16.c: 976: {;fat16.c: 977: fat_format();
  5444  007D24  ECA8  F012         	call	_fat_format	;wreg free
  5445  007D28  0012               	return	
  5446  007D2A                     __end_of_fat_init:
  5447                           	opt stack 0
  5448                           tblptru	equ	0xFF8
  5449                           tblptrh	equ	0xFF7
  5450                           tblptrl	equ	0xFF6
  5451                           tablat	equ	0xFF5
  5452                           intcon	equ	0xFF2
  5453                           intcon3	equ	0xFF0
  5454                           postinc0	equ	0xFEE
  5455                           wreg	equ	0xFE8
  5456                           postdec1	equ	0xFE5
  5457                           plusw1	equ	0xFE3
  5458                           fsr1h	equ	0xFE2
  5459                           fsr1l	equ	0xFE1
  5460                           plusw2	equ	0xFDB
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _fat_get_format_status *****************
  5464 ;; Defined at:
  5465 ;;		line 884 in file "fat16.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  cntr            2   45[COMRAM] unsigned int 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      enum E6864
  5472 ;; Registers used:
  5473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;Total ram usage:        4 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    5
  5486 ;; This function calls:
  5487 ;;		__get_fbr
  5488 ;;		__get_mbr
  5489 ;;		_flash_page_read
  5490 ;; This function is called by:
  5491 ;;		_fat_init
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text18
  5496  005858                     __ptext18:
  5497                           	opt stack 0
  5498  005858                     _fat_get_format_status:
  5499                           	opt stack 23
  5500                           
  5501                           ;fat16.c: 886: uint16_t cntr;;fat16.c: 889: flash_page_read(0, buffer);
  5502                           
  5503                           ;incstack = 0
  5504  005858  0E00               	movlw	0
  5505  00585A  6E29               	movwf	flash_page_read@page+1,c
  5506  00585C  0E00               	movlw	0
  5507  00585E  6E28               	movwf	flash_page_read@page,c
  5508  005860  0E40               	movlw	low _buffer
  5509  005862  6E2A               	movwf	flash_page_read@data,c
  5510  005864  0E03               	movlw	high _buffer
  5511  005866  6E2B               	movwf	flash_page_read@data+1,c
  5512  005868  EC20  F03C         	call	_flash_page_read	;wreg free
  5513                           
  5514                           ;fat16.c: 890: for(cntr=0; cntr<512; ++cntr)
  5515  00586C  0E00               	movlw	0
  5516  00586E  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5517  005870  0E00               	movlw	0
  5518  005872  6E2E               	movwf	fat_get_format_status@cntr,c
  5519  005874                     l12640:
  5520  005874  0E02               	movlw	2
  5521  005876  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5522  005878  B0D8               	btfsc	status,0,c
  5523  00587A  D016               	goto	u9610
  5524                           
  5525                           ;fat16.c: 891: {;fat16.c: 892: if(buffer[cntr] != _get_mbr(cntr))
  5526  00587C  0E40               	movlw	low _buffer
  5527  00587E  242E               	addwf	fat_get_format_status@cntr,w,c
  5528  005880  6ED9               	movwf	fsr2l,c
  5529  005882  0E03               	movlw	high _buffer
  5530  005884  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5531  005886  6EDA               	movwf	fsr2h,c
  5532  005888  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5533  00588C  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5534  005890  ECAC  F026         	call	__get_mbr	;wreg free
  5535  005894  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5536  005896  50DE               	movf	postinc2,w,c
  5537  005898  182D               	xorwf	??_fat_get_format_status+1,w,c
  5538  00589A  B4D8               	btfsc	status,2,c
  5539  00589C  D002               	goto	l2106
  5540                           
  5541                           ;fat16.c: 893: {;fat16.c: 894: return DRIVE_NOT_FORMATED;
  5542  00589E  0E00               	movlw	0
  5543  0058A0  0012               	return	
  5544  0058A2                     l2106:
  5545  0058A2  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5546  0058A4  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5547  0058A6  D7E6               	goto	l12640
  5548  0058A8                     u9610:
  5549                           
  5550                           ;fat16.c: 895: };fat16.c: 896: };fat16.c: 899: flash_page_read(1, buffer);
  5551  0058A8  0E00               	movlw	0
  5552  0058AA  6E29               	movwf	flash_page_read@page+1,c
  5553  0058AC  0E01               	movlw	1
  5554  0058AE  6E28               	movwf	flash_page_read@page,c
  5555  0058B0  0E40               	movlw	low _buffer
  5556  0058B2  6E2A               	movwf	flash_page_read@data,c
  5557  0058B4  0E03               	movlw	high _buffer
  5558  0058B6  6E2B               	movwf	flash_page_read@data+1,c
  5559  0058B8  EC20  F03C         	call	_flash_page_read	;wreg free
  5560                           
  5561                           ;fat16.c: 900: for(cntr=0; cntr<512; ++cntr)
  5562  0058BC  0E00               	movlw	0
  5563  0058BE  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5564  0058C0  0E00               	movlw	0
  5565  0058C2  6E2E               	movwf	fat_get_format_status@cntr,c
  5566  0058C4                     l12658:
  5567  0058C4  0E02               	movlw	2
  5568  0058C6  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5569  0058C8  B0D8               	btfsc	status,0,c
  5570  0058CA  D016               	goto	u9640
  5571                           
  5572                           ;fat16.c: 901: {;fat16.c: 902: if(buffer[cntr] != _get_fbr(cntr))
  5573  0058CC  0E40               	movlw	low _buffer
  5574  0058CE  242E               	addwf	fat_get_format_status@cntr,w,c
  5575  0058D0  6ED9               	movwf	fsr2l,c
  5576  0058D2  0E03               	movlw	high _buffer
  5577  0058D4  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5578  0058D6  6EDA               	movwf	fsr2h,c
  5579  0058D8  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5580  0058DC  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5581  0058E0  EC1C  F00D         	call	__get_fbr	;wreg free
  5582  0058E4  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5583  0058E6  50DE               	movf	postinc2,w,c
  5584  0058E8  182D               	xorwf	??_fat_get_format_status+1,w,c
  5585  0058EA  B4D8               	btfsc	status,2,c
  5586  0058EC  D002               	goto	l2110
  5587                           
  5588                           ;fat16.c: 903: {;fat16.c: 904: return DRIVE_NOT_FORMATED;
  5589  0058EE  0E00               	movlw	0
  5590  0058F0  0012               	return	
  5591  0058F2                     l2110:
  5592  0058F2  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5593  0058F4  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5594  0058F6  D7E6               	goto	l12658
  5595  0058F8                     u9640:
  5596                           
  5597                           ;fat16.c: 905: };fat16.c: 906: };fat16.c: 909: return DRIVE_FORMATED;
  5598  0058F8  0E01               	movlw	1
  5599  0058FA  0012               	return	
  5600  0058FC                     __end_of_fat_get_format_status:
  5601                           	opt stack 0
  5602                           tblptru	equ	0xFF8
  5603                           tblptrh	equ	0xFF7
  5604                           tblptrl	equ	0xFF6
  5605                           tablat	equ	0xFF5
  5606                           intcon	equ	0xFF2
  5607                           intcon3	equ	0xFF0
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           postdec1	equ	0xFE5
  5611                           plusw1	equ	0xFE3
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           postinc2	equ	0xFDE
  5615                           plusw2	equ	0xFDB
  5616                           fsr2h	equ	0xFDA
  5617                           fsr2l	equ	0xFD9
  5618                           status	equ	0xFD8
  5619                           
  5620 ;; *************** function _fat_format *****************
  5621 ;; Defined at:
  5622 ;;		line 912 in file "fat16.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  cntr            2   36[COMRAM] unsigned int 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      void 
  5629 ;; Registers used:
  5630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;Total ram usage:        2 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    5
  5643 ;; This function calls:
  5644 ;;		__get_data
  5645 ;;		__get_fat
  5646 ;;		__get_fbr
  5647 ;;		__get_mbr
  5648 ;;		__get_root
  5649 ;;		_flash_page_write
  5650 ;; This function is called by:
  5651 ;;		_system_init
  5652 ;;		_fat_init
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text19
  5657  002550                     __ptext19:
  5658                           	opt stack 0
  5659  002550                     _fat_format:
  5660                           	opt stack 23
  5661                           
  5662                           ;fat16.c: 914: uint16_t cntr;;fat16.c: 917: for(cntr=0; cntr<512; ++cntr)
  5663                           
  5664                           ;incstack = 0
  5665  002550  0E00               	movlw	0
  5666  002552  6E26               	movwf	fat_format@cntr+1,c
  5667  002554  0E00               	movlw	0
  5668  002556  6E25               	movwf	fat_format@cntr,c
  5669  002558                     l12390:
  5670  002558  0E02               	movlw	2
  5671  00255A  5C26               	subwf	fat_format@cntr+1,w,c
  5672  00255C  B0D8               	btfsc	status,0,c
  5673  00255E  D010               	goto	u9330
  5674                           
  5675                           ;fat16.c: 918: {;fat16.c: 919: buffer[cntr] = _get_mbr(cntr);
  5676  002560  0E40               	movlw	low _buffer
  5677  002562  2425               	addwf	fat_format@cntr,w,c
  5678  002564  6ED9               	movwf	fsr2l,c
  5679  002566  0E03               	movlw	high _buffer
  5680  002568  2026               	addwfc	fat_format@cntr+1,w,c
  5681  00256A  6EDA               	movwf	fsr2h,c
  5682  00256C  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  5683  002570  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  5684  002574  ECAC  F026         	call	__get_mbr	;wreg free
  5685  002578  6EDF               	movwf	indf2,c
  5686  00257A  4A25               	infsnz	fat_format@cntr,f,c
  5687  00257C  2A26               	incf	fat_format@cntr+1,f,c
  5688  00257E  D7EC               	goto	l12390
  5689  002580                     u9330:
  5690                           
  5691                           ;fat16.c: 920: };fat16.c: 921: flash_page_write(0, buffer);
  5692  002580  0E00               	movlw	0
  5693  002582  6E21               	movwf	flash_page_write@page+1,c
  5694  002584  0E00               	movlw	0
  5695  002586  6E20               	movwf	flash_page_write@page,c
  5696  002588  0E40               	movlw	low _buffer
  5697  00258A  6E22               	movwf	flash_page_write@data,c
  5698  00258C  0E03               	movlw	high _buffer
  5699  00258E  6E23               	movwf	flash_page_write@data+1,c
  5700  002590  EC83  F038         	call	_flash_page_write	;wreg free
  5701                           
  5702                           ;fat16.c: 924: for(cntr=0; cntr<512; ++cntr)
  5703  002594  0E00               	movlw	0
  5704  002596  6E26               	movwf	fat_format@cntr+1,c
  5705  002598  0E00               	movlw	0
  5706  00259A  6E25               	movwf	fat_format@cntr,c
  5707  00259C                     l12404:
  5708  00259C  0E02               	movlw	2
  5709  00259E  5C26               	subwf	fat_format@cntr+1,w,c
  5710  0025A0  B0D8               	btfsc	status,0,c
  5711  0025A2  D010               	goto	u9350
  5712                           
  5713                           ;fat16.c: 925: {;fat16.c: 926: buffer[cntr] = _get_fbr(cntr);
  5714  0025A4  0E40               	movlw	low _buffer
  5715  0025A6  2425               	addwf	fat_format@cntr,w,c
  5716  0025A8  6ED9               	movwf	fsr2l,c
  5717  0025AA  0E03               	movlw	high _buffer
  5718  0025AC  2026               	addwfc	fat_format@cntr+1,w,c
  5719  0025AE  6EDA               	movwf	fsr2h,c
  5720  0025B0  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  5721  0025B4  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  5722  0025B8  EC1C  F00D         	call	__get_fbr	;wreg free
  5723  0025BC  6EDF               	movwf	indf2,c
  5724  0025BE  4A25               	infsnz	fat_format@cntr,f,c
  5725  0025C0  2A26               	incf	fat_format@cntr+1,f,c
  5726  0025C2  D7EC               	goto	l12404
  5727  0025C4                     u9350:
  5728                           
  5729                           ;fat16.c: 927: };fat16.c: 928: flash_page_write(1, buffer);
  5730  0025C4  0E00               	movlw	0
  5731  0025C6  6E21               	movwf	flash_page_write@page+1,c
  5732  0025C8  0E01               	movlw	1
  5733  0025CA  6E20               	movwf	flash_page_write@page,c
  5734  0025CC  0E40               	movlw	low _buffer
  5735  0025CE  6E22               	movwf	flash_page_write@data,c
  5736  0025D0  0E03               	movlw	high _buffer
  5737  0025D2  6E23               	movwf	flash_page_write@data+1,c
  5738  0025D4  EC83  F038         	call	_flash_page_write	;wreg free
  5739                           
  5740                           ;fat16.c: 931: for(cntr=0; cntr<512; ++cntr)
  5741  0025D8  0E00               	movlw	0
  5742  0025DA  6E26               	movwf	fat_format@cntr+1,c
  5743  0025DC  0E00               	movlw	0
  5744  0025DE  6E25               	movwf	fat_format@cntr,c
  5745  0025E0                     l12418:
  5746  0025E0  0E02               	movlw	2
  5747  0025E2  5C26               	subwf	fat_format@cntr+1,w,c
  5748  0025E4  B0D8               	btfsc	status,0,c
  5749  0025E6  D010               	goto	u9370
  5750                           
  5751                           ;fat16.c: 932: {;fat16.c: 933: buffer[cntr] = _get_fat(cntr);
  5752  0025E8  0E40               	movlw	low _buffer
  5753  0025EA  2425               	addwf	fat_format@cntr,w,c
  5754  0025EC  6ED9               	movwf	fsr2l,c
  5755  0025EE  0E03               	movlw	high _buffer
  5756  0025F0  2026               	addwfc	fat_format@cntr+1,w,c
  5757  0025F2  6EDA               	movwf	fsr2h,c
  5758  0025F4  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  5759  0025F8  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  5760  0025FC  EC02  F038         	call	__get_fat	;wreg free
  5761  002600  6EDF               	movwf	indf2,c
  5762  002602  4A25               	infsnz	fat_format@cntr,f,c
  5763  002604  2A26               	incf	fat_format@cntr+1,f,c
  5764  002606  D7EC               	goto	l12418
  5765  002608                     u9370:
  5766                           
  5767                           ;fat16.c: 934: };fat16.c: 935: flash_page_write(2, buffer);
  5768  002608  0E00               	movlw	0
  5769  00260A  6E21               	movwf	flash_page_write@page+1,c
  5770  00260C  0E02               	movlw	2
  5771  00260E  6E20               	movwf	flash_page_write@page,c
  5772  002610  0E40               	movlw	low _buffer
  5773  002612  6E22               	movwf	flash_page_write@data,c
  5774  002614  0E03               	movlw	high _buffer
  5775  002616  6E23               	movwf	flash_page_write@data+1,c
  5776  002618  EC83  F038         	call	_flash_page_write	;wreg free
  5777                           
  5778                           ;fat16.c: 938: for(cntr=0; cntr<512; ++cntr)
  5779  00261C  0E00               	movlw	0
  5780  00261E  6E26               	movwf	fat_format@cntr+1,c
  5781  002620  0E00               	movlw	0
  5782  002622  6E25               	movwf	fat_format@cntr,c
  5783  002624                     l12432:
  5784  002624  0E02               	movlw	2
  5785  002626  5C26               	subwf	fat_format@cntr+1,w,c
  5786  002628  B0D8               	btfsc	status,0,c
  5787  00262A  D00B               	goto	u9390
  5788                           
  5789                           ;fat16.c: 939: {;fat16.c: 940: buffer[cntr] = 0x00;
  5790  00262C  0E40               	movlw	low _buffer
  5791  00262E  2425               	addwf	fat_format@cntr,w,c
  5792  002630  6ED9               	movwf	fsr2l,c
  5793  002632  0E03               	movlw	high _buffer
  5794  002634  2026               	addwfc	fat_format@cntr+1,w,c
  5795  002636  6EDA               	movwf	fsr2h,c
  5796  002638  0E00               	movlw	0
  5797  00263A  6EDF               	movwf	indf2,c
  5798  00263C  4A25               	infsnz	fat_format@cntr,f,c
  5799  00263E  2A26               	incf	fat_format@cntr+1,f,c
  5800  002640  D7F1               	goto	l12432
  5801  002642                     u9390:
  5802                           
  5803                           ;fat16.c: 941: };fat16.c: 942: for(cntr=2+1; cntr<=33; ++cntr)
  5804  002642  0E00               	movlw	0
  5805  002644  6E26               	movwf	fat_format@cntr+1,c
  5806  002646  0E03               	movlw	3
  5807  002648  6E25               	movwf	fat_format@cntr,c
  5808  00264A                     l12444:
  5809  00264A  5026               	movf	fat_format@cntr+1,w,c
  5810  00264C  E111               	bnz	l12454
  5811  00264E  0E22               	movlw	34
  5812  002650  5C25               	subwf	fat_format@cntr,w,c
  5813  002652  B0D8               	btfsc	status,0,c
  5814  002654  D00D               	goto	u9410
  5815                           
  5816                           ;fat16.c: 943: {;fat16.c: 944: flash_page_write(cntr, buffer);
  5817  002656  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5818  00265A  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5819  00265E  0E40               	movlw	low _buffer
  5820  002660  6E22               	movwf	flash_page_write@data,c
  5821  002662  0E03               	movlw	high _buffer
  5822  002664  6E23               	movwf	flash_page_write@data+1,c
  5823  002666  EC83  F038         	call	_flash_page_write	;wreg free
  5824  00266A  4A25               	infsnz	fat_format@cntr,f,c
  5825  00266C  2A26               	incf	fat_format@cntr+1,f,c
  5826  00266E  D7ED               	goto	l12444
  5827  002670                     u9410:
  5828  002670                     l12454:
  5829                           
  5830                           ;fat16.c: 945: };fat16.c: 948: for(cntr=0; cntr<512; ++cntr)
  5831  002670  0E00               	movlw	0
  5832  002672  6E26               	movwf	fat_format@cntr+1,c
  5833  002674  0E00               	movlw	0
  5834  002676  6E25               	movwf	fat_format@cntr,c
  5835  002678                     l12456:
  5836  002678  0E02               	movlw	2
  5837  00267A  5C26               	subwf	fat_format@cntr+1,w,c
  5838  00267C  B0D8               	btfsc	status,0,c
  5839  00267E  D010               	goto	u9430
  5840                           
  5841                           ;fat16.c: 949: {;fat16.c: 950: buffer[cntr] = _get_root(cntr);
  5842  002680  0E40               	movlw	low _buffer
  5843  002682  2425               	addwf	fat_format@cntr,w,c
  5844  002684  6ED9               	movwf	fsr2l,c
  5845  002686  0E03               	movlw	high _buffer
  5846  002688  2026               	addwfc	fat_format@cntr+1,w,c
  5847  00268A  6EDA               	movwf	fsr2h,c
  5848  00268C  C025  F001         	movff	fat_format@cntr,__get_root@idx
  5849  002690  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  5850  002694  EC42  F018         	call	__get_root	;wreg free
  5851  002698  6EDF               	movwf	indf2,c
  5852  00269A  4A25               	infsnz	fat_format@cntr,f,c
  5853  00269C  2A26               	incf	fat_format@cntr+1,f,c
  5854  00269E  D7EC               	goto	l12456
  5855  0026A0                     u9430:
  5856                           
  5857                           ;fat16.c: 951: };fat16.c: 952: flash_page_write(34, buffer);
  5858  0026A0  0E00               	movlw	0
  5859  0026A2  6E21               	movwf	flash_page_write@page+1,c
  5860  0026A4  0E22               	movlw	34
  5861  0026A6  6E20               	movwf	flash_page_write@page,c
  5862  0026A8  0E40               	movlw	low _buffer
  5863  0026AA  6E22               	movwf	flash_page_write@data,c
  5864  0026AC  0E03               	movlw	high _buffer
  5865  0026AE  6E23               	movwf	flash_page_write@data+1,c
  5866  0026B0  EC83  F038         	call	_flash_page_write	;wreg free
  5867                           
  5868                           ;fat16.c: 955: for(cntr=0; cntr<512; ++cntr)
  5869  0026B4  0E00               	movlw	0
  5870  0026B6  6E26               	movwf	fat_format@cntr+1,c
  5871  0026B8  0E00               	movlw	0
  5872  0026BA  6E25               	movwf	fat_format@cntr,c
  5873  0026BC                     l12470:
  5874  0026BC  0E02               	movlw	2
  5875  0026BE  5C26               	subwf	fat_format@cntr+1,w,c
  5876  0026C0  B0D8               	btfsc	status,0,c
  5877  0026C2  D00B               	goto	u9450
  5878                           
  5879                           ;fat16.c: 956: {;fat16.c: 957: buffer[cntr] = 0x00;
  5880  0026C4  0E40               	movlw	low _buffer
  5881  0026C6  2425               	addwf	fat_format@cntr,w,c
  5882  0026C8  6ED9               	movwf	fsr2l,c
  5883  0026CA  0E03               	movlw	high _buffer
  5884  0026CC  2026               	addwfc	fat_format@cntr+1,w,c
  5885  0026CE  6EDA               	movwf	fsr2h,c
  5886  0026D0  0E00               	movlw	0
  5887  0026D2  6EDF               	movwf	indf2,c
  5888  0026D4  4A25               	infsnz	fat_format@cntr,f,c
  5889  0026D6  2A26               	incf	fat_format@cntr+1,f,c
  5890  0026D8  D7F1               	goto	l12470
  5891  0026DA                     u9450:
  5892                           
  5893                           ;fat16.c: 958: };fat16.c: 959: for(cntr=34+1; cntr<=37; ++cntr)
  5894  0026DA  0E00               	movlw	0
  5895  0026DC  6E26               	movwf	fat_format@cntr+1,c
  5896  0026DE  0E23               	movlw	35
  5897  0026E0  6E25               	movwf	fat_format@cntr,c
  5898  0026E2                     l12482:
  5899  0026E2  5026               	movf	fat_format@cntr+1,w,c
  5900  0026E4  E111               	bnz	l12492
  5901  0026E6  0E26               	movlw	38
  5902  0026E8  5C25               	subwf	fat_format@cntr,w,c
  5903  0026EA  B0D8               	btfsc	status,0,c
  5904  0026EC  D00D               	goto	u9470
  5905                           
  5906                           ;fat16.c: 960: {;fat16.c: 961: flash_page_write(cntr, buffer);
  5907  0026EE  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5908  0026F2  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5909  0026F6  0E40               	movlw	low _buffer
  5910  0026F8  6E22               	movwf	flash_page_write@data,c
  5911  0026FA  0E03               	movlw	high _buffer
  5912  0026FC  6E23               	movwf	flash_page_write@data+1,c
  5913  0026FE  EC83  F038         	call	_flash_page_write	;wreg free
  5914  002702  4A25               	infsnz	fat_format@cntr,f,c
  5915  002704  2A26               	incf	fat_format@cntr+1,f,c
  5916  002706  D7ED               	goto	l12482
  5917  002708                     u9470:
  5918  002708                     l12492:
  5919                           
  5920                           ;fat16.c: 962: };fat16.c: 965: for(cntr=0; cntr<512; ++cntr)
  5921  002708  0E00               	movlw	0
  5922  00270A  6E26               	movwf	fat_format@cntr+1,c
  5923  00270C  0E00               	movlw	0
  5924  00270E  6E25               	movwf	fat_format@cntr,c
  5925  002710                     l12494:
  5926  002710  0E02               	movlw	2
  5927  002712  5C26               	subwf	fat_format@cntr+1,w,c
  5928  002714  B0D8               	btfsc	status,0,c
  5929  002716  D010               	goto	u9490
  5930                           
  5931                           ;fat16.c: 966: {;fat16.c: 967: buffer[cntr] = _get_data(cntr);
  5932  002718  0E40               	movlw	low _buffer
  5933  00271A  2425               	addwf	fat_format@cntr,w,c
  5934  00271C  6ED9               	movwf	fsr2l,c
  5935  00271E  0E03               	movlw	high _buffer
  5936  002720  2026               	addwfc	fat_format@cntr+1,w,c
  5937  002722  6EDA               	movwf	fsr2h,c
  5938  002724  C025  F001         	movff	fat_format@cntr,__get_data@idx
  5939  002728  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  5940  00272C  EC20  F03D         	call	__get_data	;wreg free
  5941  002730  6EDF               	movwf	indf2,c
  5942  002732  4A25               	infsnz	fat_format@cntr,f,c
  5943  002734  2A26               	incf	fat_format@cntr+1,f,c
  5944  002736  D7EC               	goto	l12494
  5945  002738                     u9490:
  5946                           
  5947                           ;fat16.c: 968: };fat16.c: 969: flash_page_write(38, buffer);
  5948  002738  0E00               	movlw	0
  5949  00273A  6E21               	movwf	flash_page_write@page+1,c
  5950  00273C  0E26               	movlw	38
  5951  00273E  6E20               	movwf	flash_page_write@page,c
  5952  002740  0E40               	movlw	low _buffer
  5953  002742  6E22               	movwf	flash_page_write@data,c
  5954  002744  0E03               	movlw	high _buffer
  5955  002746  6E23               	movwf	flash_page_write@data+1,c
  5956  002748  EC83  F038         	call	_flash_page_write	;wreg free
  5957  00274C  0012               	return		;funcret
  5958  00274E                     __end_of_fat_format:
  5959                           	opt stack 0
  5960                           tblptru	equ	0xFF8
  5961                           tblptrh	equ	0xFF7
  5962                           tblptrl	equ	0xFF6
  5963                           tablat	equ	0xFF5
  5964                           intcon	equ	0xFF2
  5965                           intcon3	equ	0xFF0
  5966                           postinc0	equ	0xFEE
  5967                           wreg	equ	0xFE8
  5968                           postdec1	equ	0xFE5
  5969                           plusw1	equ	0xFE3
  5970                           fsr1h	equ	0xFE2
  5971                           fsr1l	equ	0xFE1
  5972                           indf2	equ	0xFDF
  5973                           postinc2	equ	0xFDE
  5974                           plusw2	equ	0xFDB
  5975                           fsr2h	equ	0xFDA
  5976                           fsr2l	equ	0xFD9
  5977                           status	equ	0xFD8
  5978                           
  5979 ;; *************** function __get_root *****************
  5980 ;; Defined at:
  5981 ;;		line 798 in file "fat16.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  idx             2    0[COMRAM] unsigned int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      unsigned char 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;Total ram usage:        6 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_fat_format
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text20
  6009  003084                     __ptext20:
  6010                           	opt stack 0
  6011  003084                     __get_root:
  6012                           	opt stack 27
  6013                           
  6014                           ;fat16.c: 800: if (idx < 0x20)
  6015                           
  6016                           ;incstack = 0
  6017  003084  5002               	movf	__get_root@idx+1,w,c
  6018  003086  E11D               	bnz	l11970
  6019  003088  0E20               	movlw	32
  6020  00308A  5C01               	subwf	__get_root@idx,w,c
  6021  00308C  B0D8               	btfsc	status,0,c
  6022  00308E  D019               	goto	l2071
  6023                           
  6024                           ;fat16.c: 801: {;fat16.c: 802: if (idx < 11)
  6025  003090  5002               	movf	__get_root@idx+1,w,c
  6026  003092  E110               	bnz	l11964
  6027  003094  0E0B               	movlw	11
  6028  003096  5C01               	subwf	__get_root@idx,w,c
  6029  003098  B0D8               	btfsc	status,0,c
  6030  00309A  D00C               	goto	l2069
  6031                           
  6032                           ;fat16.c: 803: {;fat16.c: 804: return "SolarChargr"[idx];
  6033  00309C  0EDC               	movlw	low STR_9
  6034  00309E  2401               	addwf	__get_root@idx,w,c
  6035  0030A0  6EF6               	movwf	tblptrl,c
  6036  0030A2  0E8F               	movlw	high STR_9
  6037  0030A4  2002               	addwfc	__get_root@idx+1,w,c
  6038  0030A6  6EF7               	movwf	tblptrh,c
  6039  0030A8                     	if	1	;There are 3 active tblptr bytes
  6040  0030A8  6AF8               	clrf	tblptru,c
  6041  0030AA  0E00               	movlw	low (__mediumconst shr (0+16))
  6042  0030AC  22F8               	addwfc	tblptru,f,c
  6043  0030AE                     	endif
  6044  0030AE  0008               	tblrd		*
  6045  0030B0  50F5               	movf	tablat,w,c
  6046  0030B2  0012               	return	
  6047  0030B4                     l2069:
  6048  0030B4                     l11964:
  6049                           
  6050                           ;fat16.c: 805: };fat16.c: 806: if(idx==11)
  6051  0030B4  0E0B               	movlw	11
  6052  0030B6  1801               	xorwf	__get_root@idx,w,c
  6053  0030B8  1002               	iorwf	__get_root@idx+1,w,c
  6054  0030BA  A4D8               	btfss	status,2,c
  6055  0030BC  D002               	goto	l2071
  6056                           
  6057                           ;fat16.c: 807: {;fat16.c: 808: return 0x08;
  6058  0030BE  0E08               	movlw	8
  6059  0030C0  0012               	return	
  6060  0030C2                     l2071:
  6061  0030C2                     l11970:
  6062                           
  6063                           ;fat16.c: 809: };fat16.c: 810: };fat16.c: 811: if (idx < 0x40)
  6064  0030C2  5002               	movf	__get_root@idx+1,w,c
  6065  0030C4  E103               	bnz	u8881
  6066  0030C6  0E40               	movlw	64
  6067  0030C8  5C01               	subwf	__get_root@idx,w,c
  6068  0030CA  B0D8               	btfsc	status,0,c
  6069  0030CC                     u8881:
  6070  0030CC  D0A4               	goto	l2097
  6071                           
  6072                           ;fat16.c: 812: {;fat16.c: 813: idx -= 0x20;
  6073  0030CE  0E20               	movlw	32
  6074  0030D0  5E01               	subwf	__get_root@idx,f,c
  6075  0030D2  0E00               	movlw	0
  6076  0030D4  5A02               	subwfb	__get_root@idx+1,f,c
  6077                           
  6078                           ;fat16.c: 814: if (idx < 0+8)
  6079  0030D6  5002               	movf	__get_root@idx+1,w,c
  6080  0030D8  E110               	bnz	l11978
  6081  0030DA  0E08               	movlw	8
  6082  0030DC  5C01               	subwf	__get_root@idx,w,c
  6083  0030DE  B0D8               	btfsc	status,0,c
  6084  0030E0  D00C               	goto	l2073
  6085                           
  6086                           ;fat16.c: 815: {;fat16.c: 816: return "FILE    "[idx];
  6087  0030E2  0EE8               	movlw	low STR_10
  6088  0030E4  2401               	addwf	__get_root@idx,w,c
  6089  0030E6  6EF6               	movwf	tblptrl,c
  6090  0030E8  0E8F               	movlw	high STR_10
  6091  0030EA  2002               	addwfc	__get_root@idx+1,w,c
  6092  0030EC  6EF7               	movwf	tblptrh,c
  6093  0030EE                     	if	1	;There are 3 active tblptr bytes
  6094  0030EE  6AF8               	clrf	tblptru,c
  6095  0030F0  0E00               	movlw	low (__mediumconst shr (0+16))
  6096  0030F2  22F8               	addwfc	tblptru,f,c
  6097  0030F4                     	endif
  6098  0030F4  0008               	tblrd		*
  6099  0030F6  50F5               	movf	tablat,w,c
  6100  0030F8  0012               	return	
  6101  0030FA                     l2073:
  6102  0030FA                     l11978:
  6103                           
  6104                           ;fat16.c: 817: };fat16.c: 818: if (idx < 11)
  6105  0030FA  5002               	movf	__get_root@idx+1,w,c
  6106  0030FC  E146               	bnz	l12070
  6107  0030FE  0E0B               	movlw	11
  6108  003100  5C01               	subwf	__get_root@idx,w,c
  6109  003102  B0D8               	btfsc	status,0,c
  6110  003104  D042               	goto	l2075
  6111                           
  6112                           ;fat16.c: 819: {;fat16.c: 820: return "TXT"[idx-8];
  6113  003106  0EF8               	movlw	248
  6114  003108  6E03               	movwf	??__get_root& (0+255),c
  6115  00310A  0EFF               	movlw	255
  6116  00310C  6E04               	movwf	(??__get_root+1)& (0+255),c
  6117  00310E  C001  F005         	movff	__get_root@idx,??__get_root+2
  6118  003112  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  6119  003116  5003               	movf	??__get_root,w,c
  6120  003118  2605               	addwf	??__get_root+2,f,c
  6121  00311A  5004               	movf	??__get_root+1,w,c
  6122  00311C  2206               	addwfc	??__get_root+3,f,c
  6123  00311E  0EFA               	movlw	low STR_11
  6124  003120  2405               	addwf	??__get_root+2,w,c
  6125  003122  6EF6               	movwf	tblptrl,c
  6126  003124  0E8F               	movlw	high STR_11
  6127  003126  2006               	addwfc	??__get_root+3,w,c
  6128  003128  6EF7               	movwf	tblptrh,c
  6129  00312A                     	if	1	;There are 3 active tblptr bytes
  6130  00312A  6AF8               	clrf	tblptru,c
  6131  00312C  0E00               	movlw	low (__mediumconst shr (0+16))
  6132  00312E  22F8               	addwfc	tblptru,f,c
  6133  003130                     	endif
  6134  003130  0008               	tblrd		*
  6135  003132  50F5               	movf	tablat,w,c
  6136  003134  0012               	return	
  6137  003136                     
  6138                           ;fat16.c: 825: return 0x20;
  6139  003136  0E20               	movlw	32
  6140  003138  0012               	return	
  6141  00313A                     
  6142                           ;fat16.c: 827: return 0x06;
  6143  00313A  0E06               	movlw	6
  6144  00313C  0012               	return	
  6145  00313E                     
  6146                           ;fat16.c: 829: return 0x28;
  6147  00313E  0E28               	movlw	40
  6148  003140  0012               	return	
  6149  003142                     
  6150                           ;fat16.c: 831: return 0x78;
  6151  003142  0E78               	movlw	120
  6152  003144  0012               	return	
  6153  003146                     
  6154                           ;fat16.c: 833: return 0xDE;
  6155  003146  0EDE               	movlw	222
  6156  003148  0012               	return	
  6157  00314A                     
  6158                           ;fat16.c: 835: return 0x38;
  6159  00314A  0E38               	movlw	56
  6160  00314C  0012               	return	
  6161  00314E                     
  6162                           ;fat16.c: 837: return 0x5F;
  6163  00314E  0E5F               	movlw	95
  6164  003150  0012               	return	
  6165  003152                     
  6166                           ;fat16.c: 839: return 0x4B;
  6167  003152  0E4B               	movlw	75
  6168  003154  0012               	return	
  6169  003156                     
  6170                           ;fat16.c: 841: return 0x00;
  6171  003156  0E00               	movlw	0
  6172  003158  0012               	return	
  6173  00315A                     
  6174                           ;fat16.c: 843: return 0x00;
  6175  00315A  0E00               	movlw	0
  6176  00315C  0012               	return	
  6177  00315E                     
  6178                           ;fat16.c: 845: return 0x04;
  6179  00315E  0E04               	movlw	4
  6180  003160  0012               	return	
  6181  003162                     
  6182                           ;fat16.c: 847: return 0x77;
  6183  003162  0E77               	movlw	119
  6184  003164  0012               	return	
  6185  003166                     
  6186                           ;fat16.c: 849: return 0xDE;
  6187  003166  0EDE               	movlw	222
  6188  003168  0012               	return	
  6189  00316A                     
  6190                           ;fat16.c: 851: return 0x38;
  6191  00316A  0E38               	movlw	56
  6192  00316C  0012               	return	
  6193  00316E                     
  6194                           ;fat16.c: 853: return ((unsigned char)((((uint16_t)2))&0xFF));
  6195  00316E  0E02               	movlw	2
  6196  003170  0012               	return	
  6197  003172                     
  6198                           ;fat16.c: 855: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  6199  003172  0E00               	movlw	0
  6200  003174  0012               	return	
  6201  003176                     
  6202                           ;fat16.c: 857: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  6203  003176  0E0C               	movlw	12
  6204  003178  0012               	return	
  6205  00317A                     
  6206                           ;fat16.c: 860: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  6207  00317A  0E00               	movlw	0
  6208  00317C  0012               	return	
  6209  00317E                     
  6210                           ;fat16.c: 863: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  6211  00317E  0E00               	movlw	0
  6212  003180  0012               	return	
  6213  003182                     
  6214                           ;fat16.c: 866: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6215  003182  0E00               	movlw	0
  6216  003184  0012               	return	
  6217  003186                     
  6218                           ;fat16.c: 869: return 0x00;
  6219  003186  0E00               	movlw	0
  6220  003188  0012               	return	
  6221  00318A                     l2075:
  6222  00318A                     l12070:
  6223  00318A  C001  F003         	movff	__get_root@idx,??__get_root
  6224  00318E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  6225                           
  6226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6227                           ; Switch size 1, requested type "space"
  6228                           ; Number of cases is 1, Range of values is 0 to 0
  6229                           ; switch strategies available:
  6230                           ; Name         Instructions Cycles
  6231                           ; simple_byte            4     3 (average)
  6232                           ;	Chosen strategy is simple_byte
  6233  003192  5004               	movf	??__get_root+1,w,c
  6234  003194  0A00               	xorlw	0	; case 0
  6235  003196  A4D8               	btfss	status,2,c
  6236  003198  D7F6               	goto	l2096
  6237                           
  6238                           ; Switch size 1, requested type "space"
  6239                           ; Number of cases is 20, Range of values is 11 to 31
  6240                           ; switch strategies available:
  6241                           ; Name         Instructions Cycles
  6242                           ; simple_byte           61    31 (average)
  6243                           ;	Chosen strategy is simple_byte
  6244  00319A  5003               	movf	??__get_root,w,c
  6245  00319C  0A0B               	xorlw	11	; case 11
  6246  00319E  B4D8               	btfsc	status,2,c
  6247  0031A0  D7CA               	goto	l2076
  6248  0031A2  0A06               	xorlw	6	; case 13
  6249  0031A4  B4D8               	btfsc	status,2,c
  6250  0031A6  D7C9               	goto	l2077
  6251  0031A8  0A03               	xorlw	3	; case 14
  6252  0031AA  B4D8               	btfsc	status,2,c
  6253  0031AC  D7C8               	goto	l2078
  6254  0031AE  0A01               	xorlw	1	; case 15
  6255  0031B0  B4D8               	btfsc	status,2,c
  6256  0031B2  D7C7               	goto	l2079
  6257  0031B4  0A1F               	xorlw	31	; case 16
  6258  0031B6  B4D8               	btfsc	status,2,c
  6259  0031B8  D7C6               	goto	l2080
  6260  0031BA  0A01               	xorlw	1	; case 17
  6261  0031BC  B4D8               	btfsc	status,2,c
  6262  0031BE  D7C5               	goto	l2081
  6263  0031C0  0A03               	xorlw	3	; case 18
  6264  0031C2  B4D8               	btfsc	status,2,c
  6265  0031C4  D7C4               	goto	l2082
  6266  0031C6  0A01               	xorlw	1	; case 19
  6267  0031C8  B4D8               	btfsc	status,2,c
  6268  0031CA  D7C3               	goto	l2083
  6269  0031CC  0A07               	xorlw	7	; case 20
  6270  0031CE  B4D8               	btfsc	status,2,c
  6271  0031D0  D7C2               	goto	l2084
  6272  0031D2  0A01               	xorlw	1	; case 21
  6273  0031D4  B4D8               	btfsc	status,2,c
  6274  0031D6  D7C1               	goto	l2085
  6275  0031D8  0A03               	xorlw	3	; case 22
  6276  0031DA  B4D8               	btfsc	status,2,c
  6277  0031DC  D7C0               	goto	l2086
  6278  0031DE  0A01               	xorlw	1	; case 23
  6279  0031E0  B4D8               	btfsc	status,2,c
  6280  0031E2  D7BF               	goto	l2087
  6281  0031E4  0A0F               	xorlw	15	; case 24
  6282  0031E6  B4D8               	btfsc	status,2,c
  6283  0031E8  D7BE               	goto	l2088
  6284  0031EA  0A01               	xorlw	1	; case 25
  6285  0031EC  B4D8               	btfsc	status,2,c
  6286  0031EE  D7BD               	goto	l2089
  6287  0031F0  0A03               	xorlw	3	; case 26
  6288  0031F2  B4D8               	btfsc	status,2,c
  6289  0031F4  D7BC               	goto	l2090
  6290  0031F6  0A01               	xorlw	1	; case 27
  6291  0031F8  B4D8               	btfsc	status,2,c
  6292  0031FA  D7BB               	goto	l2091
  6293  0031FC  0A07               	xorlw	7	; case 28
  6294  0031FE  B4D8               	btfsc	status,2,c
  6295  003200  D7BA               	goto	l2092
  6296  003202  0A01               	xorlw	1	; case 29
  6297  003204  B4D8               	btfsc	status,2,c
  6298  003206  D7B9               	goto	l2093
  6299  003208  0A03               	xorlw	3	; case 30
  6300  00320A  B4D8               	btfsc	status,2,c
  6301  00320C  D7B8               	goto	l2094
  6302  00320E  0A01               	xorlw	1	; case 31
  6303  003210  B4D8               	btfsc	status,2,c
  6304  003212  D7B7               	goto	l2095
  6305  003214  D7B8               	goto	l2096
  6306  003216                     l2097:
  6307                           
  6308                           ;fat16.c: 871: };fat16.c: 872: return 0X00;
  6309  003216  0E00               	movlw	0
  6310  003218  0012               	return	
  6311  00321A                     __end_of__get_root:
  6312                           	opt stack 0
  6313                           tblptru	equ	0xFF8
  6314                           tblptrh	equ	0xFF7
  6315                           tblptrl	equ	0xFF6
  6316                           tablat	equ	0xFF5
  6317                           intcon	equ	0xFF2
  6318                           intcon3	equ	0xFF0
  6319                           postinc0	equ	0xFEE
  6320                           wreg	equ	0xFE8
  6321                           postdec1	equ	0xFE5
  6322                           plusw1	equ	0xFE3
  6323                           fsr1h	equ	0xFE2
  6324                           fsr1l	equ	0xFE1
  6325                           indf2	equ	0xFDF
  6326                           postinc2	equ	0xFDE
  6327                           plusw2	equ	0xFDB
  6328                           fsr2h	equ	0xFDA
  6329                           fsr2l	equ	0xFD9
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function __get_mbr *****************
  6333 ;; Defined at:
  6334 ;;		line 625 in file "fat16.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  idx             2    0[COMRAM] unsigned int 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      unsigned char 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;Total ram usage:        4 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_fat_get_format_status
  6358 ;;		_fat_format
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text21
  6363  004D58                     __ptext21:
  6364                           	opt stack 0
  6365  004D58                     __get_mbr:
  6366                           	opt stack 27
  6367                           
  6368                           ;fat16.c: 627: switch (idx)
  6369                           
  6370                           ;incstack = 0
  6371  004D58  D026               	goto	l1978
  6372  004D5A                     
  6373                           ;fat16.c: 630: return 0x80;
  6374  004D5A  0E80               	movlw	128
  6375  004D5C  0012               	return	
  6376  004D5E                     
  6377                           ;fat16.c: 632: return 0;
  6378  004D5E  0E00               	movlw	0
  6379  004D60  0012               	return	
  6380  004D62                     
  6381                           ;fat16.c: 634: return 2;
  6382  004D62  0E02               	movlw	2
  6383  004D64  0012               	return	
  6384  004D66                     
  6385                           ;fat16.c: 636: return 0;
  6386  004D66  0E00               	movlw	0
  6387  004D68  0012               	return	
  6388  004D6A                     
  6389                           ;fat16.c: 638: return 0x04;
  6390  004D6A  0E04               	movlw	4
  6391  004D6C  0012               	return	
  6392  004D6E                     
  6393                           ;fat16.c: 640: return 2;
  6394  004D6E  0E02               	movlw	2
  6395  004D70  0012               	return	
  6396  004D72                     
  6397                           ;fat16.c: 642: return 3;
  6398  004D72  0E03               	movlw	3
  6399  004D74  0012               	return	
  6400  004D76                     
  6401                           ;fat16.c: 644: return 8;
  6402  004D76  0E08               	movlw	8
  6403  004D78  0012               	return	
  6404  004D7A                     
  6405                           ;fat16.c: 646: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6406  004D7A  0E01               	movlw	1
  6407  004D7C  0012               	return	
  6408  004D7E                     
  6409                           ;fat16.c: 648: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6410  004D7E  0E00               	movlw	0
  6411  004D80  0012               	return	
  6412  004D82                     
  6413                           ;fat16.c: 650: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6414  004D82  0E00               	movlw	0
  6415  004D84  0012               	return	
  6416  004D86                     
  6417                           ;fat16.c: 652: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6418  004D86  0E00               	movlw	0
  6419  004D88  0012               	return	
  6420  004D8A                     
  6421                           ;fat16.c: 654: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
  6422  004D8A  0EFF               	movlw	255
  6423  004D8C  0012               	return	
  6424  004D8E                     
  6425                           ;fat16.c: 656: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
  6426  004D8E  0E1F               	movlw	31
  6427  004D90  0012               	return	
  6428  004D92                     
  6429                           ;fat16.c: 658: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
  6430  004D92  0E00               	movlw	0
  6431  004D94  0012               	return	
  6432  004D96                     
  6433                           ;fat16.c: 660: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6434  004D96  0E00               	movlw	0
  6435  004D98  0012               	return	
  6436  004D9A                     
  6437                           ;fat16.c: 662: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  6438  004D9A  0E55               	movlw	85
  6439  004D9C  0012               	return	
  6440  004D9E                     
  6441                           ;fat16.c: 664: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  6442  004D9E  0EAA               	movlw	170
  6443  004DA0  0012               	return	
  6444  004DA2                     
  6445                           ;fat16.c: 666: return 0X00;
  6446  004DA2  0E00               	movlw	0
  6447                           
  6448                           ;fat16.c: 667: }
  6449  004DA4  0012               	return	
  6450  004DA6                     l1978:
  6451  004DA6  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6452  004DAA  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6453                           
  6454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6455                           ; Switch size 1, requested type "space"
  6456                           ; Number of cases is 1, Range of values is 1 to 1
  6457                           ; switch strategies available:
  6458                           ; Name         Instructions Cycles
  6459                           ; simple_byte            4     3 (average)
  6460                           ;	Chosen strategy is simple_byte
  6461  004DAE  5004               	movf	??__get_mbr+1,w,c
  6462  004DB0  0A01               	xorlw	1	; case 1
  6463  004DB2  A4D8               	btfss	status,2,c
  6464  004DB4  D7F6               	goto	l1998
  6465                           
  6466                           ; Switch size 1, requested type "space"
  6467                           ; Number of cases is 18, Range of values is 190 to 255
  6468                           ; switch strategies available:
  6469                           ; Name         Instructions Cycles
  6470                           ; simple_byte           55    28 (average)
  6471                           ;	Chosen strategy is simple_byte
  6472  004DB6  5003               	movf	??__get_mbr,w,c
  6473  004DB8  0ABE               	xorlw	190	; case 190
  6474  004DBA  B4D8               	btfsc	status,2,c
  6475  004DBC  D7CE               	goto	l1979
  6476  004DBE  0A01               	xorlw	1	; case 191
  6477  004DC0  B4D8               	btfsc	status,2,c
  6478  004DC2  D7CD               	goto	l1981
  6479  004DC4  0A7F               	xorlw	127	; case 192
  6480  004DC6  B4D8               	btfsc	status,2,c
  6481  004DC8  D7CC               	goto	l1982
  6482  004DCA  0A01               	xorlw	1	; case 193
  6483  004DCC  B4D8               	btfsc	status,2,c
  6484  004DCE  D7CB               	goto	l1983
  6485  004DD0  0A03               	xorlw	3	; case 194
  6486  004DD2  B4D8               	btfsc	status,2,c
  6487  004DD4  D7CA               	goto	l1984
  6488  004DD6  0A01               	xorlw	1	; case 195
  6489  004DD8  B4D8               	btfsc	status,2,c
  6490  004DDA  D7C9               	goto	l1985
  6491  004DDC  0A07               	xorlw	7	; case 196
  6492  004DDE  B4D8               	btfsc	status,2,c
  6493  004DE0  D7C8               	goto	l1986
  6494  004DE2  0A01               	xorlw	1	; case 197
  6495  004DE4  B4D8               	btfsc	status,2,c
  6496  004DE6  D7C7               	goto	l1987
  6497  004DE8  0A03               	xorlw	3	; case 198
  6498  004DEA  B4D8               	btfsc	status,2,c
  6499  004DEC  D7C6               	goto	l1988
  6500  004DEE  0A01               	xorlw	1	; case 199
  6501  004DF0  B4D8               	btfsc	status,2,c
  6502  004DF2  D7C5               	goto	l1989
  6503  004DF4  0A0F               	xorlw	15	; case 200
  6504  004DF6  B4D8               	btfsc	status,2,c
  6505  004DF8  D7C4               	goto	l1990
  6506  004DFA  0A01               	xorlw	1	; case 201
  6507  004DFC  B4D8               	btfsc	status,2,c
  6508  004DFE  D7C3               	goto	l1991
  6509  004E00  0A03               	xorlw	3	; case 202
  6510  004E02  B4D8               	btfsc	status,2,c
  6511  004E04  D7C2               	goto	l1992
  6512  004E06  0A01               	xorlw	1	; case 203
  6513  004E08  B4D8               	btfsc	status,2,c
  6514  004E0A  D7C1               	goto	l1993
  6515  004E0C  0A07               	xorlw	7	; case 204
  6516  004E0E  B4D8               	btfsc	status,2,c
  6517  004E10  D7C0               	goto	l1994
  6518  004E12  0A01               	xorlw	1	; case 205
  6519  004E14  B4D8               	btfsc	status,2,c
  6520  004E16  D7BF               	goto	l1995
  6521  004E18  0A33               	xorlw	51	; case 254
  6522  004E1A  B4D8               	btfsc	status,2,c
  6523  004E1C  D7BE               	goto	l1996
  6524  004E1E  0A01               	xorlw	1	; case 255
  6525  004E20  B4D8               	btfsc	status,2,c
  6526  004E22  D7BD               	goto	l1997
  6527  004E24  D7BE               	goto	l1998
  6528  004E26                     __end_of__get_mbr:
  6529                           	opt stack 0
  6530                           tblptru	equ	0xFF8
  6531                           tblptrh	equ	0xFF7
  6532                           tblptrl	equ	0xFF6
  6533                           tablat	equ	0xFF5
  6534                           intcon	equ	0xFF2
  6535                           intcon3	equ	0xFF0
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           postdec1	equ	0xFE5
  6539                           plusw1	equ	0xFE3
  6540                           fsr1h	equ	0xFE2
  6541                           fsr1l	equ	0xFE1
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           plusw2	equ	0xFDB
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function __get_fbr *****************
  6550 ;; Defined at:
  6551 ;;		line 670 in file "fat16.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  idx             2    0[COMRAM] unsigned int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      unsigned char 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;Total ram usage:        4 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_fat_get_format_status
  6575 ;;		_fat_format
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text22
  6580  001A38                     __ptext22:
  6581                           	opt stack 0
  6582  001A38                     __get_fbr:
  6583                           	opt stack 27
  6584                           
  6585                           ;fat16.c: 672: switch (idx)
  6586                           
  6587                           ;incstack = 0
  6588  001A38  D091               	goto	l2002
  6589  001A3A                     
  6590                           ;fat16.c: 675: return 0xEB;
  6591  001A3A  0EEB               	movlw	235
  6592  001A3C  0012               	return	
  6593  001A3E                     
  6594                           ;fat16.c: 677: return 0x3C;
  6595  001A3E  0E3C               	movlw	60
  6596  001A40  0012               	return	
  6597  001A42                     
  6598                           ;fat16.c: 679: return 0x90;
  6599  001A42  0E90               	movlw	144
  6600  001A44  0012               	return	
  6601  001A46                     
  6602                           ;fat16.c: 681: return "MSDOS5.0"[0];
  6603  001A46  0EF1               	movlw	low STR_1
  6604  001A48  6EF6               	movwf	tblptrl,c
  6605  001A4A                     	if	1	;There is more than 1 active tblptr byte
  6606  001A4A  0E8F               	movlw	high STR_1
  6607  001A4C  6EF7               	movwf	tblptrh,c
  6608  001A4E                     	endif
  6609  001A4E                     	if	1	;There are 3 active tblptr bytes
  6610  001A4E  0E00               	movlw	low (STR_1 shr (0+16))
  6611  001A50  6EF8               	movwf	tblptru,c
  6612  001A52                     	endif
  6613  001A52  0008               	tblrd		*
  6614  001A54  50F5               	movf	tablat,w,c
  6615  001A56  0012               	return	
  6616  001A58                     
  6617                           ;fat16.c: 683: return "MSDOS5.0"[1];
  6618  001A58  0EF2               	movlw	low (STR_1+1)
  6619  001A5A  6EF6               	movwf	tblptrl,c
  6620  001A5C  0E8F               	movlw	high (STR_1+1)
  6621  001A5E  6EF7               	movwf	tblptrh,c
  6622  001A60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6623  001A60  6AF8               	clrf	tblptru,c
  6624  001A62                     	endif
  6625  001A62                     	if	0	;tblptru may be non-zero
  6626  001A62                     	endif
  6627  001A62  0008               	tblrd		*
  6628  001A64  50F5               	movf	tablat,w,c
  6629  001A66  0012               	return	
  6630  001A68                     
  6631                           ;fat16.c: 685: return "MSDOS5.0"[2];
  6632  001A68  0EF3               	movlw	low (STR_1+2)
  6633  001A6A  6EF6               	movwf	tblptrl,c
  6634  001A6C  0E8F               	movlw	high (STR_1+2)
  6635  001A6E  6EF7               	movwf	tblptrh,c
  6636  001A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6637  001A70  6AF8               	clrf	tblptru,c
  6638  001A72                     	endif
  6639  001A72                     	if	0	;tblptru may be non-zero
  6640  001A72                     	endif
  6641  001A72  0008               	tblrd		*
  6642  001A74  50F5               	movf	tablat,w,c
  6643  001A76  0012               	return	
  6644  001A78                     
  6645                           ;fat16.c: 687: return "MSDOS5.0"[3];
  6646  001A78  0EF4               	movlw	low (STR_1+3)
  6647  001A7A  6EF6               	movwf	tblptrl,c
  6648  001A7C  0E8F               	movlw	high (STR_1+3)
  6649  001A7E  6EF7               	movwf	tblptrh,c
  6650  001A80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6651  001A80  6AF8               	clrf	tblptru,c
  6652  001A82                     	endif
  6653  001A82                     	if	0	;tblptru may be non-zero
  6654  001A82                     	endif
  6655  001A82  0008               	tblrd		*
  6656  001A84  50F5               	movf	tablat,w,c
  6657  001A86  0012               	return	
  6658  001A88                     
  6659                           ;fat16.c: 689: return "MSDOS5.0"[4];
  6660  001A88  0EF5               	movlw	low (STR_1+4)
  6661  001A8A  6EF6               	movwf	tblptrl,c
  6662  001A8C  0E8F               	movlw	high (STR_1+4)
  6663  001A8E  6EF7               	movwf	tblptrh,c
  6664  001A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6665  001A90  6AF8               	clrf	tblptru,c
  6666  001A92                     	endif
  6667  001A92                     	if	0	;tblptru may be non-zero
  6668  001A92                     	endif
  6669  001A92  0008               	tblrd		*
  6670  001A94  50F5               	movf	tablat,w,c
  6671  001A96  0012               	return	
  6672  001A98                     
  6673                           ;fat16.c: 691: return "MSDOS5.0"[5];
  6674  001A98  0EF6               	movlw	low (STR_1+5)
  6675  001A9A  6EF6               	movwf	tblptrl,c
  6676  001A9C  0E8F               	movlw	high (STR_1+5)
  6677  001A9E  6EF7               	movwf	tblptrh,c
  6678  001AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6679  001AA0  6AF8               	clrf	tblptru,c
  6680  001AA2                     	endif
  6681  001AA2                     	if	0	;tblptru may be non-zero
  6682  001AA2                     	endif
  6683  001AA2  0008               	tblrd		*
  6684  001AA4  50F5               	movf	tablat,w,c
  6685  001AA6  0012               	return	
  6686  001AA8                     
  6687                           ;fat16.c: 693: return "MSDOS5.0"[6];
  6688  001AA8  0EF7               	movlw	low (STR_1+6)
  6689  001AAA  6EF6               	movwf	tblptrl,c
  6690  001AAC  0E8F               	movlw	high (STR_1+6)
  6691  001AAE  6EF7               	movwf	tblptrh,c
  6692  001AB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6693  001AB0  6AF8               	clrf	tblptru,c
  6694  001AB2                     	endif
  6695  001AB2                     	if	0	;tblptru may be non-zero
  6696  001AB2                     	endif
  6697  001AB2  0008               	tblrd		*
  6698  001AB4  50F5               	movf	tablat,w,c
  6699  001AB6  0012               	return	
  6700  001AB8                     
  6701                           ;fat16.c: 695: return "MSDOS5.0"[7];
  6702  001AB8  0EF8               	movlw	low (STR_1+7)
  6703  001ABA  6EF6               	movwf	tblptrl,c
  6704  001ABC  0E8F               	movlw	high (STR_1+7)
  6705  001ABE  6EF7               	movwf	tblptrh,c
  6706  001AC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6707  001AC0  6AF8               	clrf	tblptru,c
  6708  001AC2                     	endif
  6709  001AC2                     	if	0	;tblptru may be non-zero
  6710  001AC2                     	endif
  6711  001AC2  0008               	tblrd		*
  6712  001AC4  50F5               	movf	tablat,w,c
  6713  001AC6  0012               	return	
  6714  001AC8                     
  6715                           ;fat16.c: 697: return ((unsigned char)((((uint16_t)512))&0xFF));
  6716  001AC8  0E00               	movlw	0
  6717  001ACA  0012               	return	
  6718  001ACC                     
  6719                           ;fat16.c: 699: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  6720  001ACC  0E02               	movlw	2
  6721  001ACE  0012               	return	
  6722  001AD0                     
  6723                           ;fat16.c: 701: return 1;
  6724  001AD0  0E01               	movlw	1
  6725  001AD2  0012               	return	
  6726  001AD4                     
  6727                           ;fat16.c: 703: return ((unsigned char)((((uint16_t)1))&0xFF));
  6728  001AD4  0E01               	movlw	1
  6729  001AD6  0012               	return	
  6730  001AD8                     
  6731                           ;fat16.c: 705: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  6732  001AD8  0E00               	movlw	0
  6733  001ADA  0012               	return	
  6734  001ADC                     
  6735                           ;fat16.c: 707: return 1;
  6736  001ADC  0E01               	movlw	1
  6737  001ADE  0012               	return	
  6738  001AE0                     
  6739                           ;fat16.c: 709: return ((unsigned char)((((uint16_t)64))&0xFF));
  6740  001AE0  0E40               	movlw	64
  6741  001AE2  0012               	return	
  6742  001AE4                     
  6743                           ;fat16.c: 711: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  6744  001AE4  0E00               	movlw	0
  6745  001AE6  0012               	return	
  6746  001AE8                     
  6747                           ;fat16.c: 713: return ((unsigned char)((((uint16_t)8191))&0xFF));
  6748  001AE8  0EFF               	movlw	255
  6749  001AEA  0012               	return	
  6750  001AEC                     
  6751                           ;fat16.c: 715: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  6752  001AEC  0E1F               	movlw	31
  6753  001AEE  0012               	return	
  6754  001AF0                     
  6755                           ;fat16.c: 717: return 0XF8;
  6756  001AF0  0EF8               	movlw	248
  6757  001AF2  0012               	return	
  6758  001AF4                     
  6759                           ;fat16.c: 719: return ((unsigned char)((((uint16_t)32))&0xFF));
  6760  001AF4  0E20               	movlw	32
  6761  001AF6  0012               	return	
  6762  001AF8                     
  6763                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  6764  001AF8  0E00               	movlw	0
  6765  001AFA  0012               	return	
  6766  001AFC                     
  6767                           ;fat16.c: 723: return ((unsigned char)((((uint16_t)63))&0xFF));
  6768  001AFC  0E3F               	movlw	63
  6769  001AFE  0012               	return	
  6770  001B00                     
  6771                           ;fat16.c: 725: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  6772  001B00  0E00               	movlw	0
  6773  001B02  0012               	return	
  6774  001B04                     
  6775                           ;fat16.c: 727: return ((unsigned char)((((uint16_t)16))&0xFF));
  6776  001B04  0E10               	movlw	16
  6777  001B06  0012               	return	
  6778  001B08                     
  6779                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6780  001B08  0E00               	movlw	0
  6781  001B0A  0012               	return	
  6782  001B0C                     
  6783                           ;fat16.c: 731: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  6784  001B0C  0E00               	movlw	0
  6785  001B0E  0012               	return	
  6786  001B10                     
  6787                           ;fat16.c: 733: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  6788  001B10  0E00               	movlw	0
  6789  001B12  0012               	return	
  6790  001B14                     
  6791                           ;fat16.c: 735: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  6792  001B14  0E00               	movlw	0
  6793  001B16  0012               	return	
  6794  001B18                     
  6795                           ;fat16.c: 737: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6796  001B18  0E00               	movlw	0
  6797  001B1A  0012               	return	
  6798  001B1C                     
  6799                           ;fat16.c: 739: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  6800  001B1C  0E01               	movlw	1
  6801  001B1E  0012               	return	
  6802  001B20                     
  6803                           ;fat16.c: 741: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  6804  001B20  0E00               	movlw	0
  6805  001B22  0012               	return	
  6806  001B24                     
  6807                           ;fat16.c: 743: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
  6808  001B24  0E22               	movlw	34
  6809  001B26  0012               	return	
  6810  001B28                     
  6811                           ;fat16.c: 745: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
  6812  001B28  0E00               	movlw	0
  6813  001B2A  0012               	return	
  6814  001B2C                     
  6815                           ;fat16.c: 749: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6816                           
  6817                           ;fat16.c: 748: case 0x2F:
  6818  001B2C  0E00               	movlw	0
  6819  001B2E  0012               	return	
  6820  001B30                     
  6821                           ;fat16.c: 751: return 'F';
  6822  001B30  0E46               	movlw	70
  6823  001B32  0012               	return	
  6824  001B34                     
  6825                           ;fat16.c: 753: return 'A';
  6826  001B34  0E41               	movlw	65
  6827  001B36  0012               	return	
  6828  001B38                     
  6829                           ;fat16.c: 755: return 'T';
  6830  001B38  0E54               	movlw	84
  6831  001B3A  0012               	return	
  6832  001B3C                     
  6833                           ;fat16.c: 757: return '1';
  6834  001B3C  0E31               	movlw	49
  6835  001B3E  0012               	return	
  6836  001B40                     
  6837                           ;fat16.c: 759: return '6';
  6838  001B40  0E36               	movlw	54
  6839  001B42  0012               	return	
  6840  001B44                     
  6841                           ;fat16.c: 761: return ' ';
  6842  001B44  0E20               	movlw	32
  6843  001B46  0012               	return	
  6844  001B48                     
  6845                           ;fat16.c: 763: return ' ';
  6846  001B48  0E20               	movlw	32
  6847  001B4A  0012               	return	
  6848  001B4C                     
  6849                           ;fat16.c: 765: return ' ';
  6850  001B4C  0E20               	movlw	32
  6851  001B4E  0012               	return	
  6852  001B50                     
  6853                           ;fat16.c: 767: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  6854  001B50  0E55               	movlw	85
  6855  001B52  0012               	return	
  6856  001B54                     
  6857                           ;fat16.c: 769: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  6858  001B54  0EAA               	movlw	170
  6859  001B56  0012               	return	
  6860  001B58                     
  6861                           ;fat16.c: 771: return 0X00;
  6862  001B58  0E00               	movlw	0
  6863                           
  6864                           ;fat16.c: 772: }
  6865  001B5A  0012               	return	
  6866  001B5C                     l2002:
  6867  001B5C  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  6868  001B60  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  6869                           
  6870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6871                           ; Switch size 1, requested type "space"
  6872                           ; Number of cases is 2, Range of values is 0 to 1
  6873                           ; switch strategies available:
  6874                           ; Name         Instructions Cycles
  6875                           ; simple_byte            7     4 (average)
  6876                           ;	Chosen strategy is simple_byte
  6877  001B64  5004               	movf	??__get_fbr+1,w,c
  6878  001B66  0A00               	xorlw	0	; case 0
  6879  001B68  B4D8               	btfsc	status,2,c
  6880  001B6A  D004               	goto	l14948
  6881  001B6C  0A01               	xorlw	1	; case 1
  6882  001B6E  B4D8               	btfsc	status,2,c
  6883  001B70  D08D               	goto	l14950
  6884  001B72  D7F2               	goto	l2052
  6885  001B74                     l14948:
  6886                           
  6887                           ; Switch size 1, requested type "space"
  6888                           ; Number of cases is 46, Range of values is 0 to 61
  6889                           ; switch strategies available:
  6890                           ; Name         Instructions Cycles
  6891                           ; simple_byte          139    70 (average)
  6892                           ;	Chosen strategy is simple_byte
  6893  001B74  5003               	movf	??__get_fbr,w,c
  6894  001B76  0A00               	xorlw	0	; case 0
  6895  001B78  B4D8               	btfsc	status,2,c
  6896  001B7A  D75F               	goto	l2003
  6897  001B7C  0A01               	xorlw	1	; case 1
  6898  001B7E  B4D8               	btfsc	status,2,c
  6899  001B80  D75E               	goto	l2005
  6900  001B82  0A03               	xorlw	3	; case 2
  6901  001B84  B4D8               	btfsc	status,2,c
  6902  001B86  D75D               	goto	l2006
  6903  001B88  0A01               	xorlw	1	; case 3
  6904  001B8A  B4D8               	btfsc	status,2,c
  6905  001B8C  D75C               	goto	l2007
  6906  001B8E  0A07               	xorlw	7	; case 4
  6907  001B90  B4D8               	btfsc	status,2,c
  6908  001B92  D762               	goto	l2008
  6909  001B94  0A01               	xorlw	1	; case 5
  6910  001B96  B4D8               	btfsc	status,2,c
  6911  001B98  D767               	goto	l2009
  6912  001B9A  0A03               	xorlw	3	; case 6
  6913  001B9C  B4D8               	btfsc	status,2,c
  6914  001B9E  D76C               	goto	l2010
  6915  001BA0  0A01               	xorlw	1	; case 7
  6916  001BA2  B4D8               	btfsc	status,2,c
  6917  001BA4  D771               	goto	l2011
  6918  001BA6  0A0F               	xorlw	15	; case 8
  6919  001BA8  B4D8               	btfsc	status,2,c
  6920  001BAA  D776               	goto	l2012
  6921  001BAC  0A01               	xorlw	1	; case 9
  6922  001BAE  B4D8               	btfsc	status,2,c
  6923  001BB0  D77B               	goto	l2013
  6924  001BB2  0A03               	xorlw	3	; case 10
  6925  001BB4  B4D8               	btfsc	status,2,c
  6926  001BB6  D780               	goto	l2014
  6927  001BB8  0A01               	xorlw	1	; case 11
  6928  001BBA  B4D8               	btfsc	status,2,c
  6929  001BBC  D785               	goto	l2015
  6930  001BBE  0A07               	xorlw	7	; case 12
  6931  001BC0  B4D8               	btfsc	status,2,c
  6932  001BC2  D784               	goto	l2016
  6933  001BC4  0A01               	xorlw	1	; case 13
  6934  001BC6  B4D8               	btfsc	status,2,c
  6935  001BC8  D783               	goto	l2017
  6936  001BCA  0A03               	xorlw	3	; case 14
  6937  001BCC  B4D8               	btfsc	status,2,c
  6938  001BCE  D782               	goto	l2018
  6939  001BD0  0A01               	xorlw	1	; case 15
  6940  001BD2  B4D8               	btfsc	status,2,c
  6941  001BD4  D781               	goto	l2019
  6942  001BD6  0A1F               	xorlw	31	; case 16
  6943  001BD8  B4D8               	btfsc	status,2,c
  6944  001BDA  D780               	goto	l2020
  6945  001BDC  0A01               	xorlw	1	; case 17
  6946  001BDE  B4D8               	btfsc	status,2,c
  6947  001BE0  D77F               	goto	l2021
  6948  001BE2  0A03               	xorlw	3	; case 18
  6949  001BE4  B4D8               	btfsc	status,2,c
  6950  001BE6  D77E               	goto	l2022
  6951  001BE8  0A01               	xorlw	1	; case 19
  6952  001BEA  B4D8               	btfsc	status,2,c
  6953  001BEC  D77D               	goto	l2023
  6954  001BEE  0A07               	xorlw	7	; case 20
  6955  001BF0  B4D8               	btfsc	status,2,c
  6956  001BF2  D77C               	goto	l2024
  6957  001BF4  0A01               	xorlw	1	; case 21
  6958  001BF6  B4D8               	btfsc	status,2,c
  6959  001BF8  D77B               	goto	l2025
  6960  001BFA  0A03               	xorlw	3	; case 22
  6961  001BFC  B4D8               	btfsc	status,2,c
  6962  001BFE  D77A               	goto	l2026
  6963  001C00  0A01               	xorlw	1	; case 23
  6964  001C02  B4D8               	btfsc	status,2,c
  6965  001C04  D779               	goto	l2027
  6966  001C06  0A0F               	xorlw	15	; case 24
  6967  001C08  B4D8               	btfsc	status,2,c
  6968  001C0A  D778               	goto	l2028
  6969  001C0C  0A01               	xorlw	1	; case 25
  6970  001C0E  B4D8               	btfsc	status,2,c
  6971  001C10  D777               	goto	l2029
  6972  001C12  0A03               	xorlw	3	; case 26
  6973  001C14  B4D8               	btfsc	status,2,c
  6974  001C16  D776               	goto	l2030
  6975  001C18  0A01               	xorlw	1	; case 27
  6976  001C1A  B4D8               	btfsc	status,2,c
  6977  001C1C  D775               	goto	l2031
  6978  001C1E  0A07               	xorlw	7	; case 28
  6979  001C20  B4D8               	btfsc	status,2,c
  6980  001C22  D774               	goto	l2032
  6981  001C24  0A01               	xorlw	1	; case 29
  6982  001C26  B4D8               	btfsc	status,2,c
  6983  001C28  D773               	goto	l2033
  6984  001C2A  0A03               	xorlw	3	; case 30
  6985  001C2C  B4D8               	btfsc	status,2,c
  6986  001C2E  D772               	goto	l2034
  6987  001C30  0A01               	xorlw	1	; case 31
  6988  001C32  B4D8               	btfsc	status,2,c
  6989  001C34  D771               	goto	l2035
  6990  001C36  0A37               	xorlw	55	; case 40
  6991  001C38  B4D8               	btfsc	status,2,c
  6992  001C3A  D770               	goto	l2036
  6993  001C3C  0A01               	xorlw	1	; case 41
  6994  001C3E  B4D8               	btfsc	status,2,c
  6995  001C40  D76F               	goto	l2037
  6996  001C42  0A05               	xorlw	5	; case 44
  6997  001C44  B4D8               	btfsc	status,2,c
  6998  001C46  D76E               	goto	l2038
  6999  001C48  0A01               	xorlw	1	; case 45
  7000  001C4A  B4D8               	btfsc	status,2,c
  7001  001C4C  D76D               	goto	l2039
  7002  001C4E  0A03               	xorlw	3	; case 46
  7003  001C50  B4D8               	btfsc	status,2,c
  7004  001C52  D76C               	goto	l2040
  7005  001C54  0A01               	xorlw	1	; case 47
  7006  001C56  B4D8               	btfsc	status,2,c
  7007  001C58  D769               	goto	l2040
  7008  001C5A  0A19               	xorlw	25	; case 54
  7009  001C5C  B4D8               	btfsc	status,2,c
  7010  001C5E  D768               	goto	l2042
  7011  001C60  0A01               	xorlw	1	; case 55
  7012  001C62  B4D8               	btfsc	status,2,c
  7013  001C64  D767               	goto	l2043
  7014  001C66  0A0F               	xorlw	15	; case 56
  7015  001C68  B4D8               	btfsc	status,2,c
  7016  001C6A  D766               	goto	l2044
  7017  001C6C  0A01               	xorlw	1	; case 57
  7018  001C6E  B4D8               	btfsc	status,2,c
  7019  001C70  D765               	goto	l2045
  7020  001C72  0A03               	xorlw	3	; case 58
  7021  001C74  B4D8               	btfsc	status,2,c
  7022  001C76  D764               	goto	l2046
  7023  001C78  0A01               	xorlw	1	; case 59
  7024  001C7A  B4D8               	btfsc	status,2,c
  7025  001C7C  D763               	goto	l2047
  7026  001C7E  0A07               	xorlw	7	; case 60
  7027  001C80  B4D8               	btfsc	status,2,c
  7028  001C82  D762               	goto	l2048
  7029  001C84  0A01               	xorlw	1	; case 61
  7030  001C86  B4D8               	btfsc	status,2,c
  7031  001C88  D761               	goto	l2049
  7032  001C8A  D766               	goto	l2052
  7033  001C8C                     l14950:
  7034                           
  7035                           ; Switch size 1, requested type "space"
  7036                           ; Number of cases is 2, Range of values is 254 to 255
  7037                           ; switch strategies available:
  7038                           ; Name         Instructions Cycles
  7039                           ; simple_byte            7     4 (average)
  7040                           ;	Chosen strategy is simple_byte
  7041  001C8C  5003               	movf	??__get_fbr,w,c
  7042  001C8E  0AFE               	xorlw	254	; case 254
  7043  001C90  B4D8               	btfsc	status,2,c
  7044  001C92  D75E               	goto	l2050
  7045  001C94  0A01               	xorlw	1	; case 255
  7046  001C96  B4D8               	btfsc	status,2,c
  7047  001C98  D75D               	goto	l2051
  7048  001C9A  D75E               	goto	l2052
  7049  001C9C                     __end_of__get_fbr:
  7050                           	opt stack 0
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           intcon	equ	0xFF2
  7056                           intcon3	equ	0xFF0
  7057                           postinc0	equ	0xFEE
  7058                           wreg	equ	0xFE8
  7059                           postdec1	equ	0xFE5
  7060                           plusw1	equ	0xFE3
  7061                           fsr1h	equ	0xFE2
  7062                           fsr1l	equ	0xFE1
  7063                           indf2	equ	0xFDF
  7064                           postinc2	equ	0xFDE
  7065                           plusw2	equ	0xFDB
  7066                           fsr2h	equ	0xFDA
  7067                           fsr2l	equ	0xFD9
  7068                           status	equ	0xFD8
  7069                           
  7070 ;; *************** function __get_fat *****************
  7071 ;; Defined at:
  7072 ;;		line 775 in file "fat16.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  idx             2    0[COMRAM] unsigned int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;		None
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      unsigned char 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7090 ;;Total ram usage:        4 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_fat_format
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text23
  7100  007004                     __ptext23:
  7101                           	opt stack 0
  7102  007004                     __get_fat:
  7103                           	opt stack 27
  7104                           
  7105                           ;fat16.c: 777: switch (idx)
  7106                           
  7107                           ;incstack = 0
  7108  007004  D00E               	goto	l2056
  7109  007006                     
  7110                           ;fat16.c: 781: return 0xF8;
  7111  007006  0EF8               	movlw	248
  7112  007008  0012               	return	
  7113  00700A                     
  7114                           ;fat16.c: 783: return 0xFF;
  7115  00700A  0EFF               	movlw	255
  7116  00700C  0012               	return	
  7117  00700E                     
  7118                           ;fat16.c: 785: return 0xFF;
  7119  00700E  0EFF               	movlw	255
  7120  007010  0012               	return	
  7121  007012                     
  7122                           ;fat16.c: 787: return 0xFF;
  7123  007012  0EFF               	movlw	255
  7124  007014  0012               	return	
  7125  007016                     
  7126                           ;fat16.c: 790: return 0xFF;
  7127  007016  0EFF               	movlw	255
  7128  007018  0012               	return	
  7129  00701A                     
  7130                           ;fat16.c: 792: return 0xFF;
  7131  00701A  0EFF               	movlw	255
  7132  00701C  0012               	return	
  7133  00701E                     
  7134                           ;fat16.c: 794: return 0X00;
  7135  00701E  0E00               	movlw	0
  7136                           
  7137                           ;fat16.c: 795: }
  7138  007020  0012               	return	
  7139  007022                     l2056:
  7140  007022  C001  F003         	movff	__get_fat@idx,??__get_fat
  7141  007026  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  7142                           
  7143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7144                           ; Switch size 1, requested type "space"
  7145                           ; Number of cases is 1, Range of values is 0 to 0
  7146                           ; switch strategies available:
  7147                           ; Name         Instructions Cycles
  7148                           ; simple_byte            4     3 (average)
  7149                           ;	Chosen strategy is simple_byte
  7150  00702A  5004               	movf	??__get_fat+1,w,c
  7151  00702C  0A00               	xorlw	0	; case 0
  7152  00702E  A4D8               	btfss	status,2,c
  7153  007030  D7F6               	goto	l2064
  7154                           
  7155                           ; Switch size 1, requested type "space"
  7156                           ; Number of cases is 6, Range of values is 0 to 5
  7157                           ; switch strategies available:
  7158                           ; Name         Instructions Cycles
  7159                           ; simple_byte           19    10 (average)
  7160                           ;	Chosen strategy is simple_byte
  7161  007032  5003               	movf	??__get_fat,w,c
  7162  007034  0A00               	xorlw	0	; case 0
  7163  007036  B4D8               	btfsc	status,2,c
  7164  007038  D7E6               	goto	l2057
  7165  00703A  0A01               	xorlw	1	; case 1
  7166  00703C  B4D8               	btfsc	status,2,c
  7167  00703E  D7E5               	goto	l2059
  7168  007040  0A03               	xorlw	3	; case 2
  7169  007042  B4D8               	btfsc	status,2,c
  7170  007044  D7E4               	goto	l2060
  7171  007046  0A01               	xorlw	1	; case 3
  7172  007048  B4D8               	btfsc	status,2,c
  7173  00704A  D7E3               	goto	l2061
  7174  00704C  0A07               	xorlw	7	; case 4
  7175  00704E  B4D8               	btfsc	status,2,c
  7176  007050  D7E2               	goto	l2062
  7177  007052  0A01               	xorlw	1	; case 5
  7178  007054  B4D8               	btfsc	status,2,c
  7179  007056  D7E1               	goto	l2063
  7180  007058  D7E2               	goto	l2064
  7181  00705A                     __end_of__get_fat:
  7182                           	opt stack 0
  7183                           tblptru	equ	0xFF8
  7184                           tblptrh	equ	0xFF7
  7185                           tblptrl	equ	0xFF6
  7186                           tablat	equ	0xFF5
  7187                           intcon	equ	0xFF2
  7188                           intcon3	equ	0xFF0
  7189                           postinc0	equ	0xFEE
  7190                           wreg	equ	0xFE8
  7191                           postdec1	equ	0xFE5
  7192                           plusw1	equ	0xFE3
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           indf2	equ	0xFDF
  7196                           postinc2	equ	0xFDE
  7197                           plusw2	equ	0xFDB
  7198                           fsr2h	equ	0xFDA
  7199                           fsr2l	equ	0xFD9
  7200                           status	equ	0xFD8
  7201                           
  7202 ;; *************** function __get_data *****************
  7203 ;; Defined at:
  7204 ;;		line 875 in file "fat16.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  idx             2    0[COMRAM] unsigned int 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      unsigned char 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;Total ram usage:        2 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_fat_format
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text24
  7232  007A40                     __ptext24:
  7233                           	opt stack 0
  7234  007A40                     __get_data:
  7235                           	opt stack 27
  7236                           
  7237                           ;fat16.c: 877: if (idx < 12)
  7238                           
  7239                           ;incstack = 0
  7240  007A40  5002               	movf	__get_data@idx+1,w,c
  7241  007A42  E110               	bnz	l12086
  7242  007A44  0E0C               	movlw	12
  7243  007A46  5C01               	subwf	__get_data@idx,w,c
  7244  007A48  B0D8               	btfsc	status,0,c
  7245  007A4A  D00C               	goto	l2100
  7246                           
  7247                           ;fat16.c: 878: {;fat16.c: 879: return "hello world!"[idx];
  7248  007A4C  0ECF               	movlw	low STR_12
  7249  007A4E  2401               	addwf	__get_data@idx,w,c
  7250  007A50  6EF6               	movwf	tblptrl,c
  7251  007A52  0E8F               	movlw	high STR_12
  7252  007A54  2002               	addwfc	__get_data@idx+1,w,c
  7253  007A56  6EF7               	movwf	tblptrh,c
  7254  007A58                     	if	1	;There are 3 active tblptr bytes
  7255  007A58  6AF8               	clrf	tblptru,c
  7256  007A5A  0E00               	movlw	low (__mediumconst shr (0+16))
  7257  007A5C  22F8               	addwfc	tblptru,f,c
  7258  007A5E                     	endif
  7259  007A5E  0008               	tblrd		*
  7260  007A60  50F5               	movf	tablat,w,c
  7261  007A62  0012               	return	
  7262  007A64                     l2100:
  7263  007A64                     l12086:
  7264                           
  7265                           ;fat16.c: 880: };fat16.c: 881: return 0X00;
  7266  007A64  0E00               	movlw	0
  7267  007A66  0012               	return	
  7268  007A68                     __end_of__get_data:
  7269                           	opt stack 0
  7270                           tblptru	equ	0xFF8
  7271                           tblptrh	equ	0xFF7
  7272                           tblptrl	equ	0xFF6
  7273                           tablat	equ	0xFF5
  7274                           intcon	equ	0xFF2
  7275                           intcon3	equ	0xFF0
  7276                           postinc0	equ	0xFEE
  7277                           wreg	equ	0xFE8
  7278                           postdec1	equ	0xFE5
  7279                           plusw1	equ	0xFE3
  7280                           fsr1h	equ	0xFE2
  7281                           fsr1l	equ	0xFE1
  7282                           indf2	equ	0xFDF
  7283                           postinc2	equ	0xFDE
  7284                           plusw2	equ	0xFDB
  7285                           fsr2h	equ	0xFDA
  7286                           fsr2l	equ	0xFD9
  7287                           status	equ	0xFD8
  7288                           
  7289 ;; *************** function __system_timer0_init *****************
  7290 ;; Defined at:
  7291 ;;		line 111 in file "os.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;Total ram usage:        0 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_system_init
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text25
  7319  007BD0                     __ptext25:
  7320                           	opt stack 0
  7321  007BD0                     __system_timer0_init:
  7322                           	opt stack 29
  7323                           
  7324                           ;os.c: 114: T0CONbits.T0CS = 0;
  7325                           
  7326                           ;incstack = 0
  7327  007BD0  9AD5               	bcf	4053,5,c	;volatile
  7328                           
  7329                           ;os.c: 116: T0CONbits.T08BIT = 0;
  7330  007BD2  9CD5               	bcf	4053,6,c	;volatile
  7331                           
  7332                           ;os.c: 118: T0CONbits.T0PS2 = 0;
  7333  007BD4  94D5               	bcf	4053,2,c	;volatile
  7334                           
  7335                           ;os.c: 119: T0CONbits.T0PS1 = 1;
  7336  007BD6  82D5               	bsf	4053,1,c	;volatile
  7337                           
  7338                           ;os.c: 120: T0CONbits.T0PS0 = 0;
  7339  007BD8  90D5               	bcf	4053,0,c	;volatile
  7340                           
  7341                           ;os.c: 122: T0CONbits.PSA = 0;
  7342  007BDA  96D5               	bcf	4053,3,c	;volatile
  7343                           
  7344                           ;os.c: 124: TMR0H = 0xD1;
  7345  007BDC  0ED1               	movlw	209
  7346  007BDE  6ED7               	movwf	4055,c	;volatile
  7347                           
  7348                           ;os.c: 125: TMR0L = 0x20;
  7349  007BE0  0E20               	movlw	32
  7350  007BE2  6ED6               	movwf	4054,c	;volatile
  7351                           
  7352                           ;os.c: 127: T0CONbits.TMR0ON = 1;
  7353  007BE4  8ED5               	bsf	4053,7,c	;volatile
  7354                           
  7355                           ;os.c: 131: INTCONbits.TMR0IF = 0;
  7356  007BE6  94F2               	bcf	intcon,2,c	;volatile
  7357                           
  7358                           ;os.c: 134: os.timeSlot = 0;
  7359  007BE8  0E00               	movlw	0
  7360  007BEA  0100               	movlb	0	; () banked
  7361  007BEC  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7362                           
  7363                           ; BSR set to: 0
  7364  007BEE  0012               	return		;funcret
  7365  007BF0                     __end_of__system_timer0_init:
  7366                           	opt stack 0
  7367                           tblptru	equ	0xFF8
  7368                           tblptrh	equ	0xFF7
  7369                           tblptrl	equ	0xFF6
  7370                           tablat	equ	0xFF5
  7371                           intcon	equ	0xFF2
  7372                           intcon3	equ	0xFF0
  7373                           postinc0	equ	0xFEE
  7374                           wreg	equ	0xFE8
  7375                           postdec1	equ	0xFE5
  7376                           plusw1	equ	0xFE3
  7377                           fsr1h	equ	0xFE2
  7378                           fsr1l	equ	0xFE1
  7379                           indf2	equ	0xFDF
  7380                           postinc2	equ	0xFDE
  7381                           plusw2	equ	0xFDB
  7382                           fsr2h	equ	0xFDA
  7383                           fsr2l	equ	0xFD9
  7384                           status	equ	0xFD8
  7385                           
  7386 ;; *************** function __system_encoder_init *****************
  7387 ;; Defined at:
  7388 ;;		line 72 in file "os.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_system_init
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text26
  7416  007660                     __ptext26:
  7417                           	opt stack 0
  7418  007660                     __system_encoder_init:
  7419                           	opt stack 29
  7420                           
  7421                           ;os.c: 74: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;incstack = 0
  7425  007660  0E55               	movlw	85
  7426  007662  6EA7               	movwf	4007,c	;volsfr
  7427  007664  0EAA               	movlw	170
  7428  007666  6EA7               	movwf	4007,c	;volsfr
  7429  007668  010E               	movlb	14	; () banked
  7430  00766A  91BF               	bcf	191,0,b	;volatile
  7431                           
  7432                           ;os.c: 75: RPINR1 = 0;
  7433  00766C  0E00               	movlw	0
  7434  00766E  6FE1               	movwf	225,b	;volatile
  7435                           
  7436                           ;os.c: 76: RPINR3 = 9;
  7437  007670  0E09               	movlw	9
  7438  007672  6FE3               	movwf	227,b	;volatile
  7439                           
  7440                           ;os.c: 77: RPINR2 = 10;
  7441  007674  0E0A               	movlw	10
  7442  007676  6FE2               	movwf	226,b	;volatile
  7443                           
  7444                           ;os.c: 78: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7445  007678  0E55               	movlw	85
  7446  00767A  6EA7               	movwf	4007,c	;volsfr
  7447  00767C  0EAA               	movlw	170
  7448  00767E  6EA7               	movwf	4007,c	;volsfr
  7449                           
  7450                           ; BSR set to: 14
  7451  007680  91BF               	bcf	191,0,b	;volatile
  7452                           
  7453                           ; BSR set to: 14
  7454                           ;os.c: 81: INTCON2bits.INTEDG1 = 0;
  7455  007682  9AF1               	bcf	intcon2,5,c	;volatile
  7456                           
  7457                           ; BSR set to: 14
  7458                           ;os.c: 82: INTCON3bits.INT1IF = 0;
  7459  007684  90F0               	bcf	intcon3,0,c	;volatile
  7460                           
  7461                           ; BSR set to: 14
  7462                           ;os.c: 84: INTCON2bits.INTEDG2 = 1;
  7463  007686  88F1               	bsf	intcon2,4,c	;volatile
  7464                           
  7465                           ; BSR set to: 14
  7466                           ;os.c: 85: INTCON3bits.INT2IF = 0;
  7467  007688  92F0               	bcf	intcon3,1,c	;volatile
  7468                           
  7469                           ; BSR set to: 14
  7470                           ;os.c: 87: INTCON2bits.INTEDG3 = 1;
  7471  00768A  86F1               	bsf	intcon2,3,c	;volatile
  7472                           
  7473                           ; BSR set to: 14
  7474                           ;os.c: 88: INTCON3bits.INT3IF = 0;
  7475  00768C  94F0               	bcf	intcon3,2,c	;volatile
  7476                           
  7477                           ;os.c: 90: os.encoderCount = 0;
  7478  00768E  0E00               	movlw	0
  7479  007690  0100               	movlb	0	; () banked
  7480  007692  6F60               	movwf	_os& (0+255),b	;volatile
  7481                           
  7482                           ;os.c: 91: os.buttonCount = 0;
  7483  007694  0E00               	movlw	0
  7484  007696  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7485                           
  7486                           ; BSR set to: 0
  7487  007698  0012               	return		;funcret
  7488  00769A                     __end_of__system_encoder_init:
  7489                           	opt stack 0
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           intcon	equ	0xFF2
  7495                           intcon2	equ	0xFF1
  7496                           intcon3	equ	0xFF0
  7497                           postinc0	equ	0xFEE
  7498                           wreg	equ	0xFE8
  7499                           postdec1	equ	0xFE5
  7500                           plusw1	equ	0xFE3
  7501                           fsr1h	equ	0xFE2
  7502                           fsr1l	equ	0xFE1
  7503                           indf2	equ	0xFDF
  7504                           postinc2	equ	0xFDE
  7505                           plusw2	equ	0xFDB
  7506                           fsr2h	equ	0xFDA
  7507                           fsr2l	equ	0xFD9
  7508                           status	equ	0xFD8
  7509                           
  7510 ;; *************** function _spi_get_external_tx_buffer *****************
  7511 ;; Defined at:
  7512 ;;		line 75 in file "spi.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  2    0[COMRAM] PTR unsigned char 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;Total ram usage:        2 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		_main
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text27
  7540  007D54                     __ptext27:
  7541                           	opt stack 0
  7542  007D54                     _spi_get_external_tx_buffer:
  7543                           	opt stack 30
  7544                           
  7545                           ;spi.c: 77: return _spi_external_tx_buffer;
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;incstack = 0
  7549  007D54  0E40               	movlw	low __spi_external_tx_buffer
  7550  007D56  6E01               	movwf	?_spi_get_external_tx_buffer,c
  7551  007D58  0E02               	movlw	high __spi_external_tx_buffer
  7552  007D5A  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  7553  007D5C  0012               	return	
  7554  007D5E                     __end_of_spi_get_external_tx_buffer:
  7555                           	opt stack 0
  7556                           tblptru	equ	0xFF8
  7557                           tblptrh	equ	0xFF7
  7558                           tblptrl	equ	0xFF6
  7559                           tablat	equ	0xFF5
  7560                           intcon	equ	0xFF2
  7561                           intcon2	equ	0xFF1
  7562                           intcon3	equ	0xFF0
  7563                           postinc0	equ	0xFEE
  7564                           wreg	equ	0xFE8
  7565                           postdec1	equ	0xFE5
  7566                           plusw1	equ	0xFE3
  7567                           fsr1h	equ	0xFE2
  7568                           fsr1l	equ	0xFE1
  7569                           indf2	equ	0xFDF
  7570                           postinc2	equ	0xFDE
  7571                           plusw2	equ	0xFDB
  7572                           fsr2h	equ	0xFDA
  7573                           fsr2l	equ	0xFD9
  7574                           status	equ	0xFD8
  7575                           
  7576 ;; *************** function _spi_get_external_rx_buffer *****************
  7577 ;; Defined at:
  7578 ;;		line 80 in file "spi.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  2    0[COMRAM] PTR unsigned char 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;Total ram usage:        2 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_main
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           	psect	text28
  7606  007D5E                     __ptext28:
  7607                           	opt stack 0
  7608  007D5E                     _spi_get_external_rx_buffer:
  7609                           	opt stack 30
  7610                           
  7611                           ;spi.c: 82: return _spi_external_rx_buffer;
  7612                           
  7613                           ;incstack = 0
  7614  007D5E  0E00               	movlw	low __spi_external_rx_buffer
  7615  007D60  6E01               	movwf	?_spi_get_external_rx_buffer,c
  7616  007D62  0E02               	movlw	high __spi_external_rx_buffer
  7617  007D64  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  7618  007D66  0012               	return	
  7619  007D68                     __end_of_spi_get_external_rx_buffer:
  7620                           	opt stack 0
  7621                           tblptru	equ	0xFF8
  7622                           tblptrh	equ	0xFF7
  7623                           tblptrl	equ	0xFF6
  7624                           tablat	equ	0xFF5
  7625                           intcon	equ	0xFF2
  7626                           intcon2	equ	0xFF1
  7627                           intcon3	equ	0xFF0
  7628                           postinc0	equ	0xFEE
  7629                           wreg	equ	0xFE8
  7630                           postdec1	equ	0xFE5
  7631                           plusw1	equ	0xFE3
  7632                           fsr1h	equ	0xFE2
  7633                           fsr1l	equ	0xFE1
  7634                           indf2	equ	0xFDF
  7635                           postinc2	equ	0xFDE
  7636                           plusw2	equ	0xFDB
  7637                           fsr2h	equ	0xFDA
  7638                           fsr2l	equ	0xFD9
  7639                           status	equ	0xFD8
  7640                           
  7641 ;; *************** function _display_update *****************
  7642 ;; Defined at:
  7643 ;;		line 508 in file "display.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    4
  7664 ;; This function calls:
  7665 ;;		_i2c_display_cursor
  7666 ;;		_i2c_display_write_fixed
  7667 ;; This function is called by:
  7668 ;;		_main
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text29
  7673  006946                     __ptext29:
  7674                           	opt stack 0
  7675  006946                     _display_update:
  7676                           	opt stack 26
  7677                           
  7678                           ;display.c: 510: i2c_display_cursor(0, 0);
  7679                           
  7680                           ;incstack = 0
  7681  006946  0E00               	movlw	0
  7682  006948  6E0E               	movwf	i2c_display_cursor@position,c
  7683  00694A  0E00               	movlw	0
  7684  00694C  EC6E  F03D         	call	_i2c_display_cursor
  7685                           
  7686                           ;display.c: 511: i2c_display_write_fixed(&display_content[0][0], 20);
  7687  006950  0E74               	movlw	low _display_content
  7688  006952  6E06               	movwf	i2c_display_write_fixed@data,c
  7689  006954  0E01               	movlw	high _display_content
  7690  006956  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7691  006958  0E14               	movlw	20
  7692  00695A  6E08               	movwf	i2c_display_write_fixed@length,c
  7693  00695C  EC2D  F038         	call	_i2c_display_write_fixed	;wreg free
  7694                           
  7695                           ;display.c: 512: i2c_display_cursor(1, 0);
  7696  006960  0E00               	movlw	0
  7697  006962  6E0E               	movwf	i2c_display_cursor@position,c
  7698  006964  0E01               	movlw	1
  7699  006966  EC6E  F03D         	call	_i2c_display_cursor
  7700                           
  7701                           ;display.c: 513: i2c_display_write_fixed(&display_content[1][0], 20);
  7702  00696A  0E88               	movlw	low (_display_content+20)
  7703  00696C  6E06               	movwf	i2c_display_write_fixed@data,c
  7704  00696E  0E01               	movlw	high (_display_content+20)
  7705  006970  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7706  006972  0E14               	movlw	20
  7707  006974  6E08               	movwf	i2c_display_write_fixed@length,c
  7708  006976  EC2D  F038         	call	_i2c_display_write_fixed	;wreg free
  7709                           
  7710                           ;display.c: 514: i2c_display_cursor(2, 0);
  7711  00697A  0E00               	movlw	0
  7712  00697C  6E0E               	movwf	i2c_display_cursor@position,c
  7713  00697E  0E02               	movlw	2
  7714  006980  EC6E  F03D         	call	_i2c_display_cursor
  7715                           
  7716                           ;display.c: 515: i2c_display_write_fixed(&display_content[2][0], 20);
  7717  006984  0E9C               	movlw	low (_display_content+40)
  7718  006986  6E06               	movwf	i2c_display_write_fixed@data,c
  7719  006988  0E01               	movlw	high (_display_content+40)
  7720  00698A  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7721  00698C  0E14               	movlw	20
  7722  00698E  6E08               	movwf	i2c_display_write_fixed@length,c
  7723  006990  EC2D  F038         	call	_i2c_display_write_fixed	;wreg free
  7724                           
  7725                           ;display.c: 516: i2c_display_cursor(3, 0);
  7726  006994  0E00               	movlw	0
  7727  006996  6E0E               	movwf	i2c_display_cursor@position,c
  7728  006998  0E03               	movlw	3
  7729  00699A  EC6E  F03D         	call	_i2c_display_cursor
  7730                           
  7731                           ;display.c: 517: i2c_display_write_fixed(&display_content[3][0], 20);
  7732  00699E  0EB0               	movlw	low (_display_content+60)
  7733  0069A0  6E06               	movwf	i2c_display_write_fixed@data,c
  7734  0069A2  0E01               	movlw	high (_display_content+60)
  7735  0069A4  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7736  0069A6  0E14               	movlw	20
  7737  0069A8  6E08               	movwf	i2c_display_write_fixed@length,c
  7738  0069AA  EC2D  F038         	call	_i2c_display_write_fixed	;wreg free
  7739  0069AE  0012               	return		;funcret
  7740  0069B0                     __end_of_display_update:
  7741                           	opt stack 0
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           intcon	equ	0xFF2
  7747                           intcon2	equ	0xFF1
  7748                           intcon3	equ	0xFF0
  7749                           postinc0	equ	0xFEE
  7750                           wreg	equ	0xFE8
  7751                           postdec1	equ	0xFE5
  7752                           plusw1	equ	0xFE3
  7753                           fsr1h	equ	0xFE2
  7754                           fsr1l	equ	0xFE1
  7755                           indf2	equ	0xFDF
  7756                           postinc2	equ	0xFDE
  7757                           plusw2	equ	0xFDB
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function _i2c_display_write_fixed *****************
  7763 ;; Defined at:
  7764 ;;		line 262 in file "i2c.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  data            2    5[COMRAM] PTR unsigned char 
  7767 ;;		 -> display_content(80), 
  7768 ;;  length          1    7[COMRAM] unsigned char 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  pos             1    8[COMRAM] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  1    wreg      void 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;Total ram usage:        4 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    1
  7787 ;; This function calls:
  7788 ;;		__i2c_send
  7789 ;;		__i2c_start
  7790 ;;		__i2c_stop
  7791 ;;		__i2c_wait_idle
  7792 ;;		_i2c_set_frequency
  7793 ;; This function is called by:
  7794 ;;		_display_update
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text30
  7799  00705A                     __ptext30:
  7800                           	opt stack 0
  7801  00705A                     _i2c_display_write_fixed:
  7802                           	opt stack 28
  7803                           
  7804                           ;i2c.c: 264: uint8_t pos;;i2c.c: 267: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7805                           
  7806                           ;incstack = 0
  7807  00705A  0E02               	movlw	2
  7808  00705C  ECF5  F03C         	call	_i2c_set_frequency
  7809                           
  7810                           ;i2c.c: 269: _i2c_wait_idle();
  7811  007060  EC26  F037         	call	__i2c_wait_idle	;wreg free
  7812                           
  7813                           ;i2c.c: 270: _i2c_start();
  7814  007064  ECF8  F03E         	call	__i2c_start	;wreg free
  7815                           
  7816                           ;i2c.c: 271: _i2c_wait_idle();
  7817  007068  EC26  F037         	call	__i2c_wait_idle	;wreg free
  7818                           
  7819                           ;i2c.c: 272: _i2c_send(0b01111000);
  7820  00706C  0E78               	movlw	120
  7821  00706E  ECFC  F03E         	call	__i2c_send
  7822                           
  7823                           ;i2c.c: 273: _i2c_wait_idle();
  7824  007072  EC26  F037         	call	__i2c_wait_idle	;wreg free
  7825                           
  7826                           ;i2c.c: 274: _i2c_send(0b01000000);
  7827  007076  0E40               	movlw	64
  7828  007078  ECFC  F03E         	call	__i2c_send
  7829                           
  7830                           ;i2c.c: 275: _i2c_wait_idle();
  7831  00707C  EC26  F037         	call	__i2c_wait_idle	;wreg free
  7832                           
  7833                           ;i2c.c: 278: for(pos=0; pos<length; ++pos)
  7834  007080  0E00               	movlw	0
  7835  007082  6E09               	movwf	i2c_display_write_fixed@pos,c
  7836  007084  D00E               	goto	l1224
  7837  007086                     
  7838                           ;i2c.c: 279: {;i2c.c: 280: _i2c_send(data[pos]);
  7839  007086  5009               	movf	i2c_display_write_fixed@pos,w,c
  7840  007088  0D01               	mullw	1
  7841  00708A  50F3               	movf	prodl,w,c
  7842  00708C  2406               	addwf	i2c_display_write_fixed@data,w,c
  7843  00708E  6ED9               	movwf	fsr2l,c
  7844  007090  50F4               	movf	prodh,w,c
  7845  007092  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  7846  007094  6EDA               	movwf	fsr2h,c
  7847  007096  50DF               	movf	indf2,w,c
  7848  007098  ECFC  F03E         	call	__i2c_send
  7849                           
  7850                           ;i2c.c: 281: _i2c_wait_idle();
  7851  00709C  EC26  F037         	call	__i2c_wait_idle	;wreg free
  7852  0070A0  2A09               	incf	i2c_display_write_fixed@pos,f,c
  7853  0070A2                     l1224:
  7854  0070A2  5008               	movf	i2c_display_write_fixed@length,w,c
  7855  0070A4  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  7856  0070A6  A0D8               	btfss	status,0,c
  7857  0070A8  D7EE               	goto	l1225
  7858                           
  7859                           ;i2c.c: 282: };i2c.c: 284: _i2c_stop();
  7860  0070AA  ECF4  F03E         	call	__i2c_stop	;wreg free
  7861  0070AE  0012               	return		;funcret
  7862  0070B0                     __end_of_i2c_display_write_fixed:
  7863                           	opt stack 0
  7864                           tblptru	equ	0xFF8
  7865                           tblptrh	equ	0xFF7
  7866                           tblptrl	equ	0xFF6
  7867                           tablat	equ	0xFF5
  7868                           prodh	equ	0xFF4
  7869                           prodl	equ	0xFF3
  7870                           intcon	equ	0xFF2
  7871                           intcon2	equ	0xFF1
  7872                           intcon3	equ	0xFF0
  7873                           postinc0	equ	0xFEE
  7874                           wreg	equ	0xFE8
  7875                           postdec1	equ	0xFE5
  7876                           plusw1	equ	0xFE3
  7877                           fsr1h	equ	0xFE2
  7878                           fsr1l	equ	0xFE1
  7879                           indf2	equ	0xFDF
  7880                           postinc2	equ	0xFDE
  7881                           plusw2	equ	0xFDB
  7882                           fsr2h	equ	0xFDA
  7883                           fsr2l	equ	0xFD9
  7884                           status	equ	0xFD8
  7885                           
  7886 ;; *************** function _i2c_display_cursor *****************
  7887 ;; Defined at:
  7888 ;;		line 222 in file "i2c.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  line            1    wreg     unsigned char 
  7891 ;;  position        1   13[COMRAM] unsigned char 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  line            1   14[COMRAM] unsigned char 
  7894 ;;  address         1   15[COMRAM] unsigned char 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7904 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;Total ram usage:        3 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    3
  7911 ;; This function calls:
  7912 ;;		__ic2_display_set_address
  7913 ;;		_i2c_set_frequency
  7914 ;; This function is called by:
  7915 ;;		_display_update
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text31
  7920  007ADC                     __ptext31:
  7921                           	opt stack 0
  7922  007ADC                     _i2c_display_cursor:
  7923                           	opt stack 26
  7924                           
  7925                           ;incstack = 0
  7926                           ;i2c_display_cursor@line stored from wreg
  7927  007ADC  6E0F               	movwf	i2c_display_cursor@line,c
  7928                           
  7929                           ;i2c.c: 224: uint8_t address;;i2c.c: 227: line &= 0b11;
  7930  007ADE  0E03               	movlw	3
  7931  007AE0  160F               	andwf	i2c_display_cursor@line,f,c
  7932                           
  7933                           ;i2c.c: 228: address = line<<5;
  7934  007AE2  380F               	swapf	i2c_display_cursor@line,w,c
  7935  007AE4  46E8               	rlncf	wreg,f,c
  7936  007AE6  0BE0               	andlw	224
  7937  007AE8  6E10               	movwf	i2c_display_cursor@address,c
  7938                           
  7939                           ;i2c.c: 229: position &= 0b11111;
  7940  007AEA  0E1F               	movlw	31
  7941  007AEC  160E               	andwf	i2c_display_cursor@position,f,c
  7942                           
  7943                           ;i2c.c: 230: address |= position;
  7944  007AEE  500E               	movf	i2c_display_cursor@position,w,c
  7945  007AF0  1210               	iorwf	i2c_display_cursor@address,f,c
  7946                           
  7947                           ;i2c.c: 233: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7948  007AF2  0E02               	movlw	2
  7949  007AF4  ECF5  F03C         	call	_i2c_set_frequency
  7950                           
  7951                           ;i2c.c: 236: _ic2_display_set_address(address);
  7952  007AF8  5010               	movf	i2c_display_cursor@address,w,c
  7953  007AFA  EC5B  F03D         	call	__ic2_display_set_address
  7954  007AFE  0012               	return		;funcret
  7955  007B00                     __end_of_i2c_display_cursor:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           intcon	equ	0xFF2
  7964                           intcon2	equ	0xFF1
  7965                           intcon3	equ	0xFF0
  7966                           postinc0	equ	0xFEE
  7967                           wreg	equ	0xFE8
  7968                           postdec1	equ	0xFE5
  7969                           plusw1	equ	0xFE3
  7970                           fsr1h	equ	0xFE2
  7971                           fsr1l	equ	0xFE1
  7972                           indf2	equ	0xFDF
  7973                           postinc2	equ	0xFDE
  7974                           plusw2	equ	0xFDB
  7975                           fsr2h	equ	0xFDA
  7976                           fsr2l	equ	0xFD9
  7977                           status	equ	0xFD8
  7978                           
  7979 ;; *************** function __ic2_display_set_address *****************
  7980 ;; Defined at:
  7981 ;;		line 186 in file "i2c.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  address         1    wreg     unsigned char 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  address         1   10[COMRAM] unsigned char 
  7986 ;;  data_array      2   11[COMRAM] unsigned char [2]
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7997 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;Total ram usage:        3 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    2
  8003 ;; This function calls:
  8004 ;;		__i2c_write
  8005 ;;		_i2c_set_frequency
  8006 ;; This function is called by:
  8007 ;;		_i2c_display_cursor
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text32
  8012  007AB6                     __ptext32:
  8013                           	opt stack 0
  8014  007AB6                     __ic2_display_set_address:
  8015                           	opt stack 26
  8016                           
  8017                           ;incstack = 0
  8018                           ;__ic2_display_set_address@address stored from wreg
  8019  007AB6  6E0B               	movwf	__ic2_display_set_address@address,c
  8020                           
  8021                           ;i2c.c: 188: uint8_t data_array[2];;i2c.c: 189: data_array[0] = 0b00000000;
  8022  007AB8  0E00               	movlw	0
  8023  007ABA  6E0C               	movwf	__ic2_display_set_address@data_array,c
  8024                           
  8025                           ;i2c.c: 190: data_array[1] = 0b10000000 | address;
  8026  007ABC  500B               	movf	__ic2_display_set_address@address,w,c
  8027  007ABE  0980               	iorlw	128
  8028  007AC0  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  8029                           
  8030                           ;i2c.c: 193: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  8031  007AC2  0E02               	movlw	2
  8032  007AC4  ECF5  F03C         	call	_i2c_set_frequency
  8033                           
  8034                           ;i2c.c: 196: _i2c_write(0b01111000, &data_array[0], 2);
  8035  007AC8  0E0C               	movlw	low __ic2_display_set_address@data_array
  8036  007ACA  6E06               	movwf	__i2c_write@data,c
  8037  007ACC  0E00               	movlw	high __ic2_display_set_address@data_array
  8038  007ACE  6E07               	movwf	__i2c_write@data+1,c
  8039  007AD0  0E02               	movlw	2
  8040  007AD2  6E08               	movwf	__i2c_write@length,c
  8041  007AD4  0E78               	movlw	120
  8042  007AD6  ECC9  F039         	call	__i2c_write
  8043  007ADA  0012               	return		;funcret
  8044  007ADC                     __end_of__ic2_display_set_address:
  8045                           	opt stack 0
  8046                           tblptru	equ	0xFF8
  8047                           tblptrh	equ	0xFF7
  8048                           tblptrl	equ	0xFF6
  8049                           tablat	equ	0xFF5
  8050                           prodh	equ	0xFF4
  8051                           prodl	equ	0xFF3
  8052                           intcon	equ	0xFF2
  8053                           intcon2	equ	0xFF1
  8054                           intcon3	equ	0xFF0
  8055                           postinc0	equ	0xFEE
  8056                           wreg	equ	0xFE8
  8057                           postdec1	equ	0xFE5
  8058                           plusw1	equ	0xFE3
  8059                           fsr1h	equ	0xFE2
  8060                           fsr1l	equ	0xFE1
  8061                           indf2	equ	0xFDF
  8062                           postinc2	equ	0xFDE
  8063                           plusw2	equ	0xFDB
  8064                           fsr2h	equ	0xFDA
  8065                           fsr2l	equ	0xFD9
  8066                           status	equ	0xFD8
  8067                           
  8068 ;; *************** function _display_prepare *****************
  8069 ;; Defined at:
  8070 ;;		line 277 in file "display.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  mode            1    wreg     unsigned char 
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;  mode            1   42[COMRAM] unsigned char 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  1    wreg      void 
  8077 ;; Registers used:
  8078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8087 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;Total ram usage:        3 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    6
  8091 ;; This function calls:
  8092 ;;		__display_checked
  8093 ;;		__display_clear
  8094 ;;		__display_done
  8095 ;;		__display_failed
  8096 ;;		__display_found
  8097 ;;		__display_programming
  8098 ;;		__display_start
  8099 ;;		__display_verify
  8100 ;; This function is called by:
  8101 ;;		_main
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text33
  8106  005386                     __ptext33:
  8107                           	opt stack 0
  8108  005386                     _display_prepare:
  8109                           	opt stack 24
  8110                           
  8111                           ;incstack = 0
  8112                           ;display_prepare@mode stored from wreg
  8113  005386  6E2B               	movwf	display_prepare@mode,c
  8114                           
  8115                           ;display.c: 279: _display_clear();
  8116  005388  ECA5  F039         	call	__display_clear	;wreg free
  8117                           
  8118                           ;display.c: 281: switch(mode&0xF0)
  8119  00538C  D015               	goto	l1510
  8120  00538E                     
  8121                           ;display.c: 284: _display_start();
  8122  00538E  ECFE  F01B         	call	__display_start	;wreg free
  8123                           
  8124                           ;display.c: 285: break;
  8125  005392  D03B               	goto	l1519
  8126  005394                     
  8127                           ;display.c: 288: _display_found();
  8128  005394  EC9E  F014         	call	__display_found	;wreg free
  8129                           
  8130                           ;display.c: 289: break;
  8131  005398  D038               	goto	l1519
  8132  00539A                     
  8133                           ;display.c: 292: _display_verify();
  8134  00539A  ECEB  F01D         	call	__display_verify	;wreg free
  8135                           
  8136                           ;display.c: 293: break;
  8137  00539E  D035               	goto	l1519
  8138  0053A0                     
  8139                           ;display.c: 296: _display_checked();
  8140  0053A0  ECCD  F019         	call	__display_checked	;wreg free
  8141                           
  8142                           ;display.c: 297: break;
  8143  0053A4  D032               	goto	l1519
  8144  0053A6                     
  8145                           ;display.c: 300: _display_failed();
  8146  0053A6  EC9B  F007         	call	__display_failed	;wreg free
  8147                           
  8148                           ;display.c: 301: break;
  8149  0053AA  D02F               	goto	l1519
  8150  0053AC                     
  8151                           ;display.c: 304: _display_programming();
  8152  0053AC  EC79  F016         	call	__display_programming	;wreg free
  8153                           
  8154                           ;display.c: 305: break;
  8155  0053B0  D02C               	goto	l1519
  8156  0053B2                     
  8157                           ;display.c: 308: _display_done();
  8158  0053B2  EC8B  F01A         	call	__display_done	;wreg free
  8159                           
  8160                           ;display.c: 310: }
  8161                           
  8162                           ;display.c: 309: break;
  8163  0053B6  D029               	goto	l1519
  8164  0053B8                     l1510:
  8165  0053B8  502B               	movf	display_prepare@mode,w,c
  8166  0053BA  0BF0               	andlw	240
  8167  0053BC  6E29               	movwf	??_display_prepare& (0+255),c
  8168  0053BE  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  8169                           
  8170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8171                           ; Switch size 1, requested type "space"
  8172                           ; Number of cases is 1, Range of values is 0 to 0
  8173                           ; switch strategies available:
  8174                           ; Name         Instructions Cycles
  8175                           ; simple_byte            4     3 (average)
  8176                           ;	Chosen strategy is simple_byte
  8177  0053C0  502A               	movf	??_display_prepare+1,w,c
  8178  0053C2  0A00               	xorlw	0	; case 0
  8179  0053C4  A4D8               	btfss	status,2,c
  8180  0053C6  D021               	goto	l1519
  8181                           
  8182                           ; Switch size 1, requested type "space"
  8183                           ; Number of cases is 7, Range of values is 0 to 96
  8184                           ; switch strategies available:
  8185                           ; Name         Instructions Cycles
  8186                           ; simple_byte           22    12 (average)
  8187                           ;	Chosen strategy is simple_byte
  8188  0053C8  5029               	movf	??_display_prepare,w,c
  8189  0053CA  0A00               	xorlw	0	; case 0
  8190  0053CC  B4D8               	btfsc	status,2,c
  8191  0053CE  D7DF               	goto	l1511
  8192  0053D0  0A10               	xorlw	16	; case 16
  8193  0053D2  B4D8               	btfsc	status,2,c
  8194  0053D4  D7DF               	goto	l1513
  8195  0053D6  0A30               	xorlw	48	; case 32
  8196  0053D8  B4D8               	btfsc	status,2,c
  8197  0053DA  D7DF               	goto	l1514
  8198  0053DC  0A10               	xorlw	16	; case 48
  8199  0053DE  B4D8               	btfsc	status,2,c
  8200  0053E0  D7DF               	goto	l1515
  8201  0053E2  0A70               	xorlw	112	; case 64
  8202  0053E4  B4D8               	btfsc	status,2,c
  8203  0053E6  D7DF               	goto	l1516
  8204  0053E8  0A10               	xorlw	16	; case 80
  8205  0053EA  B4D8               	btfsc	status,2,c
  8206  0053EC  D7DF               	goto	l1517
  8207  0053EE  0A30               	xorlw	48	; case 96
  8208  0053F0  B4D8               	btfsc	status,2,c
  8209  0053F2  D7DF               	goto	l1518
  8210                           
  8211                           ;display.c: 313: switch((os.timeSlot>>5)&0b11)
  8212  0053F4  D00A               	goto	l1519
  8213  0053F6                     
  8214                           ;display.c: 316: display_content[0][17] = '.';
  8215  0053F6  0E2E               	movlw	46
  8216  0053F8  0101               	movlb	1	; () banked
  8217  0053FA  6F85               	movwf	(_display_content+17)& (0+255),b
  8218  0053FC                     l1521:
  8219                           
  8220                           ;display.c: 319: display_content[0][16] = '.';
  8221  0053FC  0E2E               	movlw	46
  8222  0053FE  0101               	movlb	1	; () banked
  8223  005400  6F84               	movwf	(_display_content+16)& (0+255),b
  8224  005402                     l1522:
  8225                           
  8226                           ;display.c: 322: display_content[0][15] = '.';
  8227  005402  0E2E               	movlw	46
  8228  005404  0101               	movlb	1	; () banked
  8229  005406  6F83               	movwf	(_display_content+15)& (0+255),b
  8230                           
  8231                           ;display.c: 324: }
  8232  005408  D015               	goto	l1523
  8233  00540A                     l1519:
  8234                           
  8235                           ; BSR set to: 1
  8236  00540A  0100               	movlb	0	; () banked
  8237  00540C  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
  8238  00540E  42E8               	rrncf	wreg,f,c
  8239  005410  0B07               	andlw	7
  8240  005412  0B03               	andlw	3
  8241  005414  6E29               	movwf	??_display_prepare& (0+255),c
  8242  005416  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  8243                           
  8244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8245                           ; Switch size 1, requested type "space"
  8246                           ; Number of cases is 1, Range of values is 0 to 0
  8247                           ; switch strategies available:
  8248                           ; Name         Instructions Cycles
  8249                           ; simple_byte            4     3 (average)
  8250                           ;	Chosen strategy is simple_byte
  8251  005418  502A               	movf	??_display_prepare+1,w,c
  8252  00541A  0A00               	xorlw	0	; case 0
  8253  00541C  A4D8               	btfss	status,2,c
  8254  00541E  D00A               	goto	l1523
  8255                           
  8256                           ; BSR set to: 0
  8257                           ; Switch size 1, requested type "space"
  8258                           ; Number of cases is 3, Range of values is 1 to 3
  8259                           ; switch strategies available:
  8260                           ; Name         Instructions Cycles
  8261                           ; simple_byte           10     6 (average)
  8262                           ;	Chosen strategy is simple_byte
  8263  005420  5029               	movf	??_display_prepare,w,c
  8264  005422  0A01               	xorlw	1	; case 1
  8265  005424  B4D8               	btfsc	status,2,c
  8266  005426  D7ED               	goto	l1522
  8267  005428  0A03               	xorlw	3	; case 2
  8268  00542A  B4D8               	btfsc	status,2,c
  8269  00542C  D7E7               	goto	l1521
  8270  00542E  0A01               	xorlw	1	; case 3
  8271  005430  B4D8               	btfsc	status,2,c
  8272  005432  D7E1               	goto	l1520
  8273  005434                     l1523:
  8274                           
  8275                           ;display.c: 328: if(INTCONbits.GIE)
  8276  005434  AEF2               	btfss	intcon,7,c	;volatile
  8277  005436  0012               	return	
  8278                           
  8279                           ;display.c: 329: {;display.c: 330: display_content[0][18] = 'I';
  8280  005438  0E49               	movlw	73
  8281  00543A  0101               	movlb	1	; () banked
  8282  00543C  6F86               	movwf	(_display_content+18)& (0+255),b
  8283  00543E  0012               	return	
  8284  005440                     __end_of_display_prepare:
  8285                           	opt stack 0
  8286                           tblptru	equ	0xFF8
  8287                           tblptrh	equ	0xFF7
  8288                           tblptrl	equ	0xFF6
  8289                           tablat	equ	0xFF5
  8290                           prodh	equ	0xFF4
  8291                           prodl	equ	0xFF3
  8292                           intcon	equ	0xFF2
  8293                           intcon2	equ	0xFF1
  8294                           intcon3	equ	0xFF0
  8295                           postinc0	equ	0xFEE
  8296                           wreg	equ	0xFE8
  8297                           postdec1	equ	0xFE5
  8298                           plusw1	equ	0xFE3
  8299                           fsr1h	equ	0xFE2
  8300                           fsr1l	equ	0xFE1
  8301                           indf2	equ	0xFDF
  8302                           postinc2	equ	0xFDE
  8303                           plusw2	equ	0xFDB
  8304                           fsr2h	equ	0xFDA
  8305                           fsr2l	equ	0xFD9
  8306                           status	equ	0xFD8
  8307                           
  8308 ;; *************** function __display_verify *****************
  8309 ;; Defined at:
  8310 ;;		line 378 in file "display.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  cntr            1   32[COMRAM] unsigned char 
  8315 ;;  start           1    0        unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;Total ram usage:        3 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    4
  8332 ;; This function calls:
  8333 ;;		__display_itoa_u16
  8334 ;;		_bootloader_get_entries
  8335 ;; This function is called by:
  8336 ;;		_display_prepare
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text34
  8341  003BD6                     __ptext34:
  8342                           	opt stack 0
  8343  003BD6                     __display_verify:
  8344                           	opt stack 25
  8345                           
  8346                           ;display.c: 380: uint8_t cntr;;display.c: 381: uint8_t start;;display.c: 382: cntr = 0;
  8347                           
  8348                           ;incstack = 0
  8349  003BD6  0E00               	movlw	0
  8350  003BD8  6E21               	movwf	__display_verify@cntr,c
  8351                           
  8352                           ;display.c: 383: while(verify_line1[cntr])
  8353  003BDA  D017               	goto	l1561
  8354  003BDC                     
  8355                           ;display.c: 384: display_content[0][cntr] = verify_line1[cntr++];
  8356  003BDC  5021               	movf	__display_verify@cntr,w,c
  8357  003BDE  0D01               	mullw	1
  8358  003BE0  0E09               	movlw	low _verify_line1
  8359  003BE2  24F3               	addwf	prodl,w,c
  8360  003BE4  6EF6               	movwf	tblptrl,c
  8361  003BE6  0E8E               	movlw	high _verify_line1
  8362  003BE8  20F4               	addwfc	prodh,w,c
  8363  003BEA  6EF7               	movwf	tblptrh,c
  8364  003BEC                     	if	1	;There are 3 active tblptr bytes
  8365  003BEC  6AF8               	clrf	tblptru,c
  8366  003BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  8367  003BF0  22F8               	addwfc	tblptru,f,c
  8368  003BF2                     	endif
  8369  003BF2  5021               	movf	__display_verify@cntr,w,c
  8370  003BF4  0D01               	mullw	1
  8371  003BF6  0E74               	movlw	low _display_content
  8372  003BF8  24F3               	addwf	prodl,w,c
  8373  003BFA  6ED9               	movwf	fsr2l,c
  8374  003BFC  0E01               	movlw	high _display_content
  8375  003BFE  20F4               	addwfc	prodh,w,c
  8376  003C00  6EDA               	movwf	fsr2h,c
  8377  003C02  0008               	tblrd		*
  8378  003C04  CFF5 FFDF          	movff	tablat,indf2
  8379  003C08  2A21               	incf	__display_verify@cntr,f,c
  8380  003C0A                     l1561:
  8381  003C0A  5021               	movf	__display_verify@cntr,w,c
  8382  003C0C  0D01               	mullw	1
  8383  003C0E  0E09               	movlw	low _verify_line1
  8384  003C10  24F3               	addwf	prodl,w,c
  8385  003C12  6EF6               	movwf	tblptrl,c
  8386  003C14  0E8E               	movlw	high _verify_line1
  8387  003C16  20F4               	addwfc	prodh,w,c
  8388  003C18  6EF7               	movwf	tblptrh,c
  8389  003C1A                     	if	1	;There are 3 active tblptr bytes
  8390  003C1A  6AF8               	clrf	tblptru,c
  8391  003C1C  0E00               	movlw	low (__mediumconst shr (0+16))
  8392  003C1E  22F8               	addwfc	tblptru,f,c
  8393  003C20                     	endif
  8394  003C20  0008               	tblrd		*
  8395  003C22  50F5               	movf	tablat,w,c
  8396  003C24  0900               	iorlw	0
  8397  003C26  A4D8               	btfss	status,2,c
  8398  003C28  D7D9               	goto	l1562
  8399                           
  8400                           ;display.c: 385: cntr = 0;
  8401  003C2A  0E00               	movlw	0
  8402  003C2C  6E21               	movwf	__display_verify@cntr,c
  8403                           
  8404                           ;display.c: 386: while(verify_line2[cntr])
  8405  003C2E  D017               	goto	l1564
  8406  003C30                     
  8407                           ;display.c: 387: display_content[1][cntr] = verify_line2[cntr++];
  8408  003C30  5021               	movf	__display_verify@cntr,w,c
  8409  003C32  0D01               	mullw	1
  8410  003C34  0E55               	movlw	low _verify_line2
  8411  003C36  24F3               	addwf	prodl,w,c
  8412  003C38  6EF6               	movwf	tblptrl,c
  8413  003C3A  0E8E               	movlw	high _verify_line2
  8414  003C3C  20F4               	addwfc	prodh,w,c
  8415  003C3E  6EF7               	movwf	tblptrh,c
  8416  003C40                     	if	1	;There are 3 active tblptr bytes
  8417  003C40  6AF8               	clrf	tblptru,c
  8418  003C42  0E00               	movlw	low (__mediumconst shr (0+16))
  8419  003C44  22F8               	addwfc	tblptru,f,c
  8420  003C46                     	endif
  8421  003C46  5021               	movf	__display_verify@cntr,w,c
  8422  003C48  0D01               	mullw	1
  8423  003C4A  0E88               	movlw	low (_display_content+20)
  8424  003C4C  24F3               	addwf	prodl,w,c
  8425  003C4E  6ED9               	movwf	fsr2l,c
  8426  003C50  0E01               	movlw	high (_display_content+20)
  8427  003C52  20F4               	addwfc	prodh,w,c
  8428  003C54  6EDA               	movwf	fsr2h,c
  8429  003C56  0008               	tblrd		*
  8430  003C58  CFF5 FFDF          	movff	tablat,indf2
  8431  003C5C  2A21               	incf	__display_verify@cntr,f,c
  8432  003C5E                     l1564:
  8433  003C5E  5021               	movf	__display_verify@cntr,w,c
  8434  003C60  0D01               	mullw	1
  8435  003C62  0E55               	movlw	low _verify_line2
  8436  003C64  24F3               	addwf	prodl,w,c
  8437  003C66  6EF6               	movwf	tblptrl,c
  8438  003C68  0E8E               	movlw	high _verify_line2
  8439  003C6A  20F4               	addwfc	prodh,w,c
  8440  003C6C  6EF7               	movwf	tblptrh,c
  8441  003C6E                     	if	1	;There are 3 active tblptr bytes
  8442  003C6E  6AF8               	clrf	tblptru,c
  8443  003C70  0E00               	movlw	low (__mediumconst shr (0+16))
  8444  003C72  22F8               	addwfc	tblptru,f,c
  8445  003C74                     	endif
  8446  003C74  0008               	tblrd		*
  8447  003C76  50F5               	movf	tablat,w,c
  8448  003C78  0900               	iorlw	0
  8449  003C7A  A4D8               	btfss	status,2,c
  8450  003C7C  D7D9               	goto	l1565
  8451                           
  8452                           ;display.c: 388: cntr = 0;
  8453  003C7E  0E00               	movlw	0
  8454  003C80  6E21               	movwf	__display_verify@cntr,c
  8455                           
  8456                           ;display.c: 389: while(verify_line3[cntr])
  8457  003C82  D017               	goto	l1567
  8458  003C84                     
  8459                           ;display.c: 390: display_content[2][cntr] = verify_line3[cntr++];
  8460  003C84  5021               	movf	__display_verify@cntr,w,c
  8461  003C86  0D01               	mullw	1
  8462  003C88  0E8A               	movlw	low _verify_line3
  8463  003C8A  24F3               	addwf	prodl,w,c
  8464  003C8C  6EF6               	movwf	tblptrl,c
  8465  003C8E  0E8E               	movlw	high _verify_line3
  8466  003C90  20F4               	addwfc	prodh,w,c
  8467  003C92  6EF7               	movwf	tblptrh,c
  8468  003C94                     	if	1	;There are 3 active tblptr bytes
  8469  003C94  6AF8               	clrf	tblptru,c
  8470  003C96  0E00               	movlw	low (__mediumconst shr (0+16))
  8471  003C98  22F8               	addwfc	tblptru,f,c
  8472  003C9A                     	endif
  8473  003C9A  5021               	movf	__display_verify@cntr,w,c
  8474  003C9C  0D01               	mullw	1
  8475  003C9E  0E9C               	movlw	low (_display_content+40)
  8476  003CA0  24F3               	addwf	prodl,w,c
  8477  003CA2  6ED9               	movwf	fsr2l,c
  8478  003CA4  0E01               	movlw	high (_display_content+40)
  8479  003CA6  20F4               	addwfc	prodh,w,c
  8480  003CA8  6EDA               	movwf	fsr2h,c
  8481  003CAA  0008               	tblrd		*
  8482  003CAC  CFF5 FFDF          	movff	tablat,indf2
  8483  003CB0  2A21               	incf	__display_verify@cntr,f,c
  8484  003CB2                     l1567:
  8485  003CB2  5021               	movf	__display_verify@cntr,w,c
  8486  003CB4  0D01               	mullw	1
  8487  003CB6  0E8A               	movlw	low _verify_line3
  8488  003CB8  24F3               	addwf	prodl,w,c
  8489  003CBA  6EF6               	movwf	tblptrl,c
  8490  003CBC  0E8E               	movlw	high _verify_line3
  8491  003CBE  20F4               	addwfc	prodh,w,c
  8492  003CC0  6EF7               	movwf	tblptrh,c
  8493  003CC2                     	if	1	;There are 3 active tblptr bytes
  8494  003CC2  6AF8               	clrf	tblptru,c
  8495  003CC4  0E00               	movlw	low (__mediumconst shr (0+16))
  8496  003CC6  22F8               	addwfc	tblptru,f,c
  8497  003CC8                     	endif
  8498  003CC8  0008               	tblrd		*
  8499  003CCA  50F5               	movf	tablat,w,c
  8500  003CCC  0900               	iorlw	0
  8501  003CCE  A4D8               	btfss	status,2,c
  8502  003CD0  D7D9               	goto	l1568
  8503                           
  8504                           ;display.c: 391: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
  8505  003CD2  ECE1  F03E         	call	_bootloader_get_entries	;wreg free
  8506  003CD6  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8507  003CDA  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8508  003CDE  6A1B               	clrf	__display_itoa_u16@value+2,c
  8509  003CE0  6A1C               	clrf	__display_itoa_u16@value+3,c
  8510  003CE2  5021               	movf	__display_verify@cntr,w,c
  8511  003CE4  6E1F               	movwf	??__display_verify& (0+255),c
  8512  003CE6  6A20               	clrf	(??__display_verify+1)& (0+255),c
  8513  003CE8  0E01               	movlw	1
  8514  003CEA  261F               	addwf	??__display_verify,f,c
  8515  003CEC  0E00               	movlw	0
  8516  003CEE  2220               	addwfc	??__display_verify+1,f,c
  8517  003CF0  0E9C               	movlw	low (_display_content+40)
  8518  003CF2  241F               	addwf	??__display_verify,w,c
  8519  003CF4  6E1D               	movwf	__display_itoa_u16@text,c
  8520  003CF6  0E01               	movlw	high (_display_content+40)
  8521  003CF8  2020               	addwfc	??__display_verify+1,w,c
  8522  003CFA  6E1E               	movwf	__display_itoa_u16@text+1,c
  8523  003CFC  ECDD  F027         	call	__display_itoa_u16	;wreg free
  8524  003D00  0012               	return		;funcret
  8525  003D02                     __end_of__display_verify:
  8526                           	opt stack 0
  8527                           tblptru	equ	0xFF8
  8528                           tblptrh	equ	0xFF7
  8529                           tblptrl	equ	0xFF6
  8530                           tablat	equ	0xFF5
  8531                           prodh	equ	0xFF4
  8532                           prodl	equ	0xFF3
  8533                           intcon	equ	0xFF2
  8534                           intcon2	equ	0xFF1
  8535                           intcon3	equ	0xFF0
  8536                           postinc0	equ	0xFEE
  8537                           wreg	equ	0xFE8
  8538                           postdec1	equ	0xFE5
  8539                           plusw1	equ	0xFE3
  8540                           fsr1h	equ	0xFE2
  8541                           fsr1l	equ	0xFE1
  8542                           indf2	equ	0xFDF
  8543                           postinc2	equ	0xFDE
  8544                           plusw2	equ	0xFDB
  8545                           fsr2h	equ	0xFDA
  8546                           fsr2l	equ	0xFD9
  8547                           status	equ	0xFD8
  8548                           
  8549 ;; *************** function __display_start *****************
  8550 ;; Defined at:
  8551 ;;		line 334 in file "display.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  cntr            1    0[COMRAM] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8569 ;;Total ram usage:        1 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_display_prepare
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text35
  8579  0037FC                     __ptext35:
  8580                           	opt stack 0
  8581  0037FC                     __display_start:
  8582                           	opt stack 29
  8583                           
  8584                           ;display.c: 336: uint8_t cntr;;display.c: 337: cntr = 0;
  8585                           
  8586                           ;incstack = 0
  8587  0037FC  0E00               	movlw	0
  8588  0037FE  6E01               	movwf	__display_start@cntr,c
  8589                           
  8590                           ;display.c: 338: while(start_line1[cntr])
  8591  003800  D017               	goto	l1528
  8592  003802                     
  8593                           ;display.c: 339: display_content[0][cntr] = start_line1[cntr++];
  8594  003802  5001               	movf	__display_start@cntr,w,c
  8595  003804  0D01               	mullw	1
  8596  003806  0E88               	movlw	low _start_line1
  8597  003808  24F3               	addwf	prodl,w,c
  8598  00380A  6EF6               	movwf	tblptrl,c
  8599  00380C  0E8D               	movlw	high _start_line1
  8600  00380E  20F4               	addwfc	prodh,w,c
  8601  003810  6EF7               	movwf	tblptrh,c
  8602  003812                     	if	1	;There are 3 active tblptr bytes
  8603  003812  6AF8               	clrf	tblptru,c
  8604  003814  0E00               	movlw	low (__mediumconst shr (0+16))
  8605  003816  22F8               	addwfc	tblptru,f,c
  8606  003818                     	endif
  8607  003818  5001               	movf	__display_start@cntr,w,c
  8608  00381A  0D01               	mullw	1
  8609  00381C  0E74               	movlw	low _display_content
  8610  00381E  24F3               	addwf	prodl,w,c
  8611  003820  6ED9               	movwf	fsr2l,c
  8612  003822  0E01               	movlw	high _display_content
  8613  003824  20F4               	addwfc	prodh,w,c
  8614  003826  6EDA               	movwf	fsr2h,c
  8615  003828  0008               	tblrd		*
  8616  00382A  CFF5 FFDF          	movff	tablat,indf2
  8617  00382E  2A01               	incf	__display_start@cntr,f,c
  8618  003830                     l1528:
  8619  003830  5001               	movf	__display_start@cntr,w,c
  8620  003832  0D01               	mullw	1
  8621  003834  0E88               	movlw	low _start_line1
  8622  003836  24F3               	addwf	prodl,w,c
  8623  003838  6EF6               	movwf	tblptrl,c
  8624  00383A  0E8D               	movlw	high _start_line1
  8625  00383C  20F4               	addwfc	prodh,w,c
  8626  00383E  6EF7               	movwf	tblptrh,c
  8627  003840                     	if	1	;There are 3 active tblptr bytes
  8628  003840  6AF8               	clrf	tblptru,c
  8629  003842  0E00               	movlw	low (__mediumconst shr (0+16))
  8630  003844  22F8               	addwfc	tblptru,f,c
  8631  003846                     	endif
  8632  003846  0008               	tblrd		*
  8633  003848  50F5               	movf	tablat,w,c
  8634  00384A  0900               	iorlw	0
  8635  00384C  A4D8               	btfss	status,2,c
  8636  00384E  D7D9               	goto	l1529
  8637                           
  8638                           ;display.c: 340: cntr = 0;
  8639  003850  0E00               	movlw	0
  8640  003852  6E01               	movwf	__display_start@cntr,c
  8641                           
  8642                           ;display.c: 341: while(start_line2[cntr])
  8643  003854  D017               	goto	l1531
  8644  003856                     
  8645                           ;display.c: 342: display_content[1][cntr] = start_line2[cntr++];
  8646  003856  5001               	movf	__display_start@cntr,w,c
  8647  003858  0D01               	mullw	1
  8648  00385A  0E77               	movlw	low _start_line2
  8649  00385C  24F3               	addwf	prodl,w,c
  8650  00385E  6EF6               	movwf	tblptrl,c
  8651  003860  0E8D               	movlw	high _start_line2
  8652  003862  20F4               	addwfc	prodh,w,c
  8653  003864  6EF7               	movwf	tblptrh,c
  8654  003866                     	if	1	;There are 3 active tblptr bytes
  8655  003866  6AF8               	clrf	tblptru,c
  8656  003868  0E00               	movlw	low (__mediumconst shr (0+16))
  8657  00386A  22F8               	addwfc	tblptru,f,c
  8658  00386C                     	endif
  8659  00386C  5001               	movf	__display_start@cntr,w,c
  8660  00386E  0D01               	mullw	1
  8661  003870  0E88               	movlw	low (_display_content+20)
  8662  003872  24F3               	addwf	prodl,w,c
  8663  003874  6ED9               	movwf	fsr2l,c
  8664  003876  0E01               	movlw	high (_display_content+20)
  8665  003878  20F4               	addwfc	prodh,w,c
  8666  00387A  6EDA               	movwf	fsr2h,c
  8667  00387C  0008               	tblrd		*
  8668  00387E  CFF5 FFDF          	movff	tablat,indf2
  8669  003882  2A01               	incf	__display_start@cntr,f,c
  8670  003884                     l1531:
  8671  003884  5001               	movf	__display_start@cntr,w,c
  8672  003886  0D01               	mullw	1
  8673  003888  0E77               	movlw	low _start_line2
  8674  00388A  24F3               	addwf	prodl,w,c
  8675  00388C  6EF6               	movwf	tblptrl,c
  8676  00388E  0E8D               	movlw	high _start_line2
  8677  003890  20F4               	addwfc	prodh,w,c
  8678  003892  6EF7               	movwf	tblptrh,c
  8679  003894                     	if	1	;There are 3 active tblptr bytes
  8680  003894  6AF8               	clrf	tblptru,c
  8681  003896  0E00               	movlw	low (__mediumconst shr (0+16))
  8682  003898  22F8               	addwfc	tblptru,f,c
  8683  00389A                     	endif
  8684  00389A  0008               	tblrd		*
  8685  00389C  50F5               	movf	tablat,w,c
  8686  00389E  0900               	iorlw	0
  8687  0038A0  A4D8               	btfss	status,2,c
  8688  0038A2  D7D9               	goto	l1532
  8689                           
  8690                           ;display.c: 343: cntr = 0;
  8691  0038A4  0E00               	movlw	0
  8692  0038A6  6E01               	movwf	__display_start@cntr,c
  8693                           
  8694                           ;display.c: 344: while(start_line3[cntr])
  8695  0038A8  D017               	goto	l1534
  8696  0038AA                     
  8697                           ;display.c: 345: display_content[2][cntr] = start_line3[cntr++];
  8698  0038AA  5001               	movf	__display_start@cntr,w,c
  8699  0038AC  0D01               	mullw	1
  8700  0038AE  0EF6               	movlw	low _start_line3
  8701  0038B0  24F3               	addwf	prodl,w,c
  8702  0038B2  6EF6               	movwf	tblptrl,c
  8703  0038B4  0E8C               	movlw	high _start_line3
  8704  0038B6  20F4               	addwfc	prodh,w,c
  8705  0038B8  6EF7               	movwf	tblptrh,c
  8706  0038BA                     	if	1	;There are 3 active tblptr bytes
  8707  0038BA  6AF8               	clrf	tblptru,c
  8708  0038BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8709  0038BE  22F8               	addwfc	tblptru,f,c
  8710  0038C0                     	endif
  8711  0038C0  5001               	movf	__display_start@cntr,w,c
  8712  0038C2  0D01               	mullw	1
  8713  0038C4  0E9C               	movlw	low (_display_content+40)
  8714  0038C6  24F3               	addwf	prodl,w,c
  8715  0038C8  6ED9               	movwf	fsr2l,c
  8716  0038CA  0E01               	movlw	high (_display_content+40)
  8717  0038CC  20F4               	addwfc	prodh,w,c
  8718  0038CE  6EDA               	movwf	fsr2h,c
  8719  0038D0  0008               	tblrd		*
  8720  0038D2  CFF5 FFDF          	movff	tablat,indf2
  8721  0038D6  2A01               	incf	__display_start@cntr,f,c
  8722  0038D8                     l1534:
  8723  0038D8  5001               	movf	__display_start@cntr,w,c
  8724  0038DA  0D01               	mullw	1
  8725  0038DC  0EF6               	movlw	low _start_line3
  8726  0038DE  24F3               	addwf	prodl,w,c
  8727  0038E0  6EF6               	movwf	tblptrl,c
  8728  0038E2  0E8C               	movlw	high _start_line3
  8729  0038E4  20F4               	addwfc	prodh,w,c
  8730  0038E6  6EF7               	movwf	tblptrh,c
  8731  0038E8                     	if	1	;There are 3 active tblptr bytes
  8732  0038E8  6AF8               	clrf	tblptru,c
  8733  0038EA  0E00               	movlw	low (__mediumconst shr (0+16))
  8734  0038EC  22F8               	addwfc	tblptru,f,c
  8735  0038EE                     	endif
  8736  0038EE  0008               	tblrd		*
  8737  0038F0  50F5               	movf	tablat,w,c
  8738  0038F2  0900               	iorlw	0
  8739  0038F4  A4D8               	btfss	status,2,c
  8740  0038F6  D7D9               	goto	l1535
  8741                           
  8742                           ;display.c: 346: cntr = 0;
  8743  0038F8  0E00               	movlw	0
  8744  0038FA  6E01               	movwf	__display_start@cntr,c
  8745                           
  8746                           ;display.c: 347: while(start_line4[cntr])
  8747  0038FC  D017               	goto	l1537
  8748  0038FE                     
  8749                           ;display.c: 348: display_content[3][cntr] = start_line4[cntr++];
  8750  0038FE  5001               	movf	__display_start@cntr,w,c
  8751  003900  0D01               	mullw	1
  8752  003902  0E62               	movlw	low _start_line4
  8753  003904  24F3               	addwf	prodl,w,c
  8754  003906  6EF6               	movwf	tblptrl,c
  8755  003908  0E8E               	movlw	high _start_line4
  8756  00390A  20F4               	addwfc	prodh,w,c
  8757  00390C  6EF7               	movwf	tblptrh,c
  8758  00390E                     	if	1	;There are 3 active tblptr bytes
  8759  00390E  6AF8               	clrf	tblptru,c
  8760  003910  0E00               	movlw	low (__mediumconst shr (0+16))
  8761  003912  22F8               	addwfc	tblptru,f,c
  8762  003914                     	endif
  8763  003914  5001               	movf	__display_start@cntr,w,c
  8764  003916  0D01               	mullw	1
  8765  003918  0EB0               	movlw	low (_display_content+60)
  8766  00391A  24F3               	addwf	prodl,w,c
  8767  00391C  6ED9               	movwf	fsr2l,c
  8768  00391E  0E01               	movlw	high (_display_content+60)
  8769  003920  20F4               	addwfc	prodh,w,c
  8770  003922  6EDA               	movwf	fsr2h,c
  8771  003924  0008               	tblrd		*
  8772  003926  CFF5 FFDF          	movff	tablat,indf2
  8773  00392A  2A01               	incf	__display_start@cntr,f,c
  8774  00392C                     l1537:
  8775  00392C  5001               	movf	__display_start@cntr,w,c
  8776  00392E  0D01               	mullw	1
  8777  003930  0E62               	movlw	low _start_line4
  8778  003932  24F3               	addwf	prodl,w,c
  8779  003934  6EF6               	movwf	tblptrl,c
  8780  003936  0E8E               	movlw	high _start_line4
  8781  003938  20F4               	addwfc	prodh,w,c
  8782  00393A  6EF7               	movwf	tblptrh,c
  8783  00393C                     	if	1	;There are 3 active tblptr bytes
  8784  00393C  6AF8               	clrf	tblptru,c
  8785  00393E  0E00               	movlw	low (__mediumconst shr (0+16))
  8786  003940  22F8               	addwfc	tblptru,f,c
  8787  003942                     	endif
  8788  003942  0008               	tblrd		*
  8789  003944  50F5               	movf	tablat,w,c
  8790  003946  0900               	iorlw	0
  8791  003948  B4D8               	btfsc	status,2,c
  8792  00394A  0012               	return	
  8793  00394C  D7D8               	goto	l1538
  8794  00394E                     __end_of__display_start:
  8795                           	opt stack 0
  8796                           tblptru	equ	0xFF8
  8797                           tblptrh	equ	0xFF7
  8798                           tblptrl	equ	0xFF6
  8799                           tablat	equ	0xFF5
  8800                           prodh	equ	0xFF4
  8801                           prodl	equ	0xFF3
  8802                           intcon	equ	0xFF2
  8803                           intcon2	equ	0xFF1
  8804                           intcon3	equ	0xFF0
  8805                           postinc0	equ	0xFEE
  8806                           wreg	equ	0xFE8
  8807                           postdec1	equ	0xFE5
  8808                           plusw1	equ	0xFE3
  8809                           fsr1h	equ	0xFE2
  8810                           fsr1l	equ	0xFE1
  8811                           indf2	equ	0xFDF
  8812                           postinc2	equ	0xFDE
  8813                           plusw2	equ	0xFDB
  8814                           fsr2h	equ	0xFDA
  8815                           fsr2l	equ	0xFD9
  8816                           status	equ	0xFD8
  8817                           
  8818 ;; *************** function __display_programming *****************
  8819 ;; Defined at:
  8820 ;;		line 466 in file "display.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;		None
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  cntr            1   30[COMRAM] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8838 ;;Total ram usage:        1 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    4
  8841 ;; This function calls:
  8842 ;;		__display_itoa_u16
  8843 ;;		_bootloader_get_entries
  8844 ;;		_bootloader_get_flashPagesWritten
  8845 ;;		_bootloader_get_total_entries
  8846 ;; This function is called by:
  8847 ;;		_display_prepare
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text36
  8852  002CF2                     __ptext36:
  8853                           	opt stack 0
  8854  002CF2                     __display_programming:
  8855                           	opt stack 25
  8856                           
  8857                           ;display.c: 468: uint8_t cntr;;display.c: 469: cntr = 0;
  8858                           
  8859                           ;incstack = 0
  8860  002CF2  0E00               	movlw	0
  8861  002CF4  6E1F               	movwf	__display_programming@cntr,c
  8862                           
  8863                           ;display.c: 470: while(programming_line1[cntr])
  8864  002CF6  D017               	goto	l1622
  8865  002CF8                     
  8866                           ;display.c: 471: display_content[0][cntr] = programming_line1[cntr++];
  8867  002CF8  501F               	movf	__display_programming@cntr,w,c
  8868  002CFA  0D01               	mullw	1
  8869  002CFC  0ED9               	movlw	low _programming_line1
  8870  002CFE  24F3               	addwf	prodl,w,c
  8871  002D00  6EF6               	movwf	tblptrl,c
  8872  002D02  0E8D               	movlw	high _programming_line1
  8873  002D04  20F4               	addwfc	prodh,w,c
  8874  002D06  6EF7               	movwf	tblptrh,c
  8875  002D08                     	if	1	;There are 3 active tblptr bytes
  8876  002D08  6AF8               	clrf	tblptru,c
  8877  002D0A  0E00               	movlw	low (__mediumconst shr (0+16))
  8878  002D0C  22F8               	addwfc	tblptru,f,c
  8879  002D0E                     	endif
  8880  002D0E  501F               	movf	__display_programming@cntr,w,c
  8881  002D10  0D01               	mullw	1
  8882  002D12  0E74               	movlw	low _display_content
  8883  002D14  24F3               	addwf	prodl,w,c
  8884  002D16  6ED9               	movwf	fsr2l,c
  8885  002D18  0E01               	movlw	high _display_content
  8886  002D1A  20F4               	addwfc	prodh,w,c
  8887  002D1C  6EDA               	movwf	fsr2h,c
  8888  002D1E  0008               	tblrd		*
  8889  002D20  CFF5 FFDF          	movff	tablat,indf2
  8890  002D24  2A1F               	incf	__display_programming@cntr,f,c
  8891  002D26                     l1622:
  8892  002D26  501F               	movf	__display_programming@cntr,w,c
  8893  002D28  0D01               	mullw	1
  8894  002D2A  0ED9               	movlw	low _programming_line1
  8895  002D2C  24F3               	addwf	prodl,w,c
  8896  002D2E  6EF6               	movwf	tblptrl,c
  8897  002D30  0E8D               	movlw	high _programming_line1
  8898  002D32  20F4               	addwfc	prodh,w,c
  8899  002D34  6EF7               	movwf	tblptrh,c
  8900  002D36                     	if	1	;There are 3 active tblptr bytes
  8901  002D36  6AF8               	clrf	tblptru,c
  8902  002D38  0E00               	movlw	low (__mediumconst shr (0+16))
  8903  002D3A  22F8               	addwfc	tblptru,f,c
  8904  002D3C                     	endif
  8905  002D3C  0008               	tblrd		*
  8906  002D3E  50F5               	movf	tablat,w,c
  8907  002D40  0900               	iorlw	0
  8908  002D42  A4D8               	btfss	status,2,c
  8909  002D44  D7D9               	goto	l1623
  8910                           
  8911                           ;display.c: 473: cntr = 0;
  8912  002D46  0E00               	movlw	0
  8913  002D48  6E1F               	movwf	__display_programming@cntr,c
  8914                           
  8915                           ;display.c: 474: while(programming_line2[cntr])
  8916  002D4A  D017               	goto	l1625
  8917  002D4C                     
  8918                           ;display.c: 475: display_content[1][cntr] = programming_line2[cntr++];
  8919  002D4C  501F               	movf	__display_programming@cntr,w,c
  8920  002D4E  0D01               	mullw	1
  8921  002D50  0E30               	movlw	low _programming_line2
  8922  002D52  24F3               	addwf	prodl,w,c
  8923  002D54  6EF6               	movwf	tblptrl,c
  8924  002D56  0E8D               	movlw	high _programming_line2
  8925  002D58  20F4               	addwfc	prodh,w,c
  8926  002D5A  6EF7               	movwf	tblptrh,c
  8927  002D5C                     	if	1	;There are 3 active tblptr bytes
  8928  002D5C  6AF8               	clrf	tblptru,c
  8929  002D5E  0E00               	movlw	low (__mediumconst shr (0+16))
  8930  002D60  22F8               	addwfc	tblptru,f,c
  8931  002D62                     	endif
  8932  002D62  501F               	movf	__display_programming@cntr,w,c
  8933  002D64  0D01               	mullw	1
  8934  002D66  0E88               	movlw	low (_display_content+20)
  8935  002D68  24F3               	addwf	prodl,w,c
  8936  002D6A  6ED9               	movwf	fsr2l,c
  8937  002D6C  0E01               	movlw	high (_display_content+20)
  8938  002D6E  20F4               	addwfc	prodh,w,c
  8939  002D70  6EDA               	movwf	fsr2h,c
  8940  002D72  0008               	tblrd		*
  8941  002D74  CFF5 FFDF          	movff	tablat,indf2
  8942  002D78  2A1F               	incf	__display_programming@cntr,f,c
  8943  002D7A                     l1625:
  8944  002D7A  501F               	movf	__display_programming@cntr,w,c
  8945  002D7C  0D01               	mullw	1
  8946  002D7E  0E30               	movlw	low _programming_line2
  8947  002D80  24F3               	addwf	prodl,w,c
  8948  002D82  6EF6               	movwf	tblptrl,c
  8949  002D84  0E8D               	movlw	high _programming_line2
  8950  002D86  20F4               	addwfc	prodh,w,c
  8951  002D88  6EF7               	movwf	tblptrh,c
  8952  002D8A                     	if	1	;There are 3 active tblptr bytes
  8953  002D8A  6AF8               	clrf	tblptru,c
  8954  002D8C  0E00               	movlw	low (__mediumconst shr (0+16))
  8955  002D8E  22F8               	addwfc	tblptru,f,c
  8956  002D90                     	endif
  8957  002D90  0008               	tblrd		*
  8958  002D92  50F5               	movf	tablat,w,c
  8959  002D94  0900               	iorlw	0
  8960  002D96  A4D8               	btfss	status,2,c
  8961  002D98  D7D9               	goto	l1626
  8962                           
  8963                           ;display.c: 477: cntr = 0;
  8964  002D9A  0E00               	movlw	0
  8965  002D9C  6E1F               	movwf	__display_programming@cntr,c
  8966                           
  8967                           ;display.c: 478: while(programming_line3[cntr])
  8968  002D9E  D017               	goto	l1628
  8969  002DA0                     
  8970                           ;display.c: 479: display_content[2][cntr] = programming_line3[cntr++];
  8971  002DA0  501F               	movf	__display_programming@cntr,w,c
  8972  002DA2  0D01               	mullw	1
  8973  002DA4  0E83               	movlw	low _programming_line3
  8974  002DA6  24F3               	addwf	prodl,w,c
  8975  002DA8  6EF6               	movwf	tblptrl,c
  8976  002DAA  0E8E               	movlw	high _programming_line3
  8977  002DAC  20F4               	addwfc	prodh,w,c
  8978  002DAE  6EF7               	movwf	tblptrh,c
  8979  002DB0                     	if	1	;There are 3 active tblptr bytes
  8980  002DB0  6AF8               	clrf	tblptru,c
  8981  002DB2  0E00               	movlw	low (__mediumconst shr (0+16))
  8982  002DB4  22F8               	addwfc	tblptru,f,c
  8983  002DB6                     	endif
  8984  002DB6  501F               	movf	__display_programming@cntr,w,c
  8985  002DB8  0D01               	mullw	1
  8986  002DBA  0E9C               	movlw	low (_display_content+40)
  8987  002DBC  24F3               	addwf	prodl,w,c
  8988  002DBE  6ED9               	movwf	fsr2l,c
  8989  002DC0  0E01               	movlw	high (_display_content+40)
  8990  002DC2  20F4               	addwfc	prodh,w,c
  8991  002DC4  6EDA               	movwf	fsr2h,c
  8992  002DC6  0008               	tblrd		*
  8993  002DC8  CFF5 FFDF          	movff	tablat,indf2
  8994  002DCC  2A1F               	incf	__display_programming@cntr,f,c
  8995  002DCE                     l1628:
  8996  002DCE  501F               	movf	__display_programming@cntr,w,c
  8997  002DD0  0D01               	mullw	1
  8998  002DD2  0E83               	movlw	low _programming_line3
  8999  002DD4  24F3               	addwf	prodl,w,c
  9000  002DD6  6EF6               	movwf	tblptrl,c
  9001  002DD8  0E8E               	movlw	high _programming_line3
  9002  002DDA  20F4               	addwfc	prodh,w,c
  9003  002DDC  6EF7               	movwf	tblptrh,c
  9004  002DDE                     	if	1	;There are 3 active tblptr bytes
  9005  002DDE  6AF8               	clrf	tblptru,c
  9006  002DE0  0E00               	movlw	low (__mediumconst shr (0+16))
  9007  002DE2  22F8               	addwfc	tblptru,f,c
  9008  002DE4                     	endif
  9009  002DE4  0008               	tblrd		*
  9010  002DE6  50F5               	movf	tablat,w,c
  9011  002DE8  0900               	iorlw	0
  9012  002DEA  A4D8               	btfss	status,2,c
  9013  002DEC  D7D9               	goto	l1629
  9014                           
  9015                           ;display.c: 480: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
  9016  002DEE  ECE1  F03E         	call	_bootloader_get_entries	;wreg free
  9017  002DF2  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9018  002DF6  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9019  002DFA  6A1B               	clrf	__display_itoa_u16@value+2,c
  9020  002DFC  6A1C               	clrf	__display_itoa_u16@value+3,c
  9021  002DFE  501F               	movf	__display_programming@cntr,w,c
  9022  002E00  0D01               	mullw	1
  9023  002E02  0E9C               	movlw	low (_display_content+40)
  9024  002E04  24F3               	addwf	prodl,w,c
  9025  002E06  6E1D               	movwf	__display_itoa_u16@text,c
  9026  002E08  0E01               	movlw	high (_display_content+40)
  9027  002E0A  20F4               	addwfc	prodh,w,c
  9028  002E0C  6E1E               	movwf	__display_itoa_u16@text+1,c
  9029  002E0E  ECDD  F027         	call	__display_itoa_u16	;wreg free
  9030  002E12  261F               	addwf	__display_programming@cntr,f,c
  9031                           
  9032                           ;display.c: 481: display_content[2][cntr++] = '/';
  9033  002E14  501F               	movf	__display_programming@cntr,w,c
  9034  002E16  0D01               	mullw	1
  9035  002E18  0E9C               	movlw	low (_display_content+40)
  9036  002E1A  24F3               	addwf	prodl,w,c
  9037  002E1C  6ED9               	movwf	fsr2l,c
  9038  002E1E  0E01               	movlw	high (_display_content+40)
  9039  002E20  20F4               	addwfc	prodh,w,c
  9040  002E22  6EDA               	movwf	fsr2h,c
  9041  002E24  0E2F               	movlw	47
  9042  002E26  6EDF               	movwf	indf2,c
  9043  002E28  2A1F               	incf	__display_programming@cntr,f,c
  9044                           
  9045                           ;display.c: 482: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
  9046  002E2A  ECCD  F03E         	call	_bootloader_get_total_entries	;wreg free
  9047  002E2E  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
  9048  002E32  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
  9049  002E36  6A1B               	clrf	__display_itoa_u16@value+2,c
  9050  002E38  6A1C               	clrf	__display_itoa_u16@value+3,c
  9051  002E3A  501F               	movf	__display_programming@cntr,w,c
  9052  002E3C  0D01               	mullw	1
  9053  002E3E  0E9C               	movlw	low (_display_content+40)
  9054  002E40  24F3               	addwf	prodl,w,c
  9055  002E42  6E1D               	movwf	__display_itoa_u16@text,c
  9056  002E44  0E01               	movlw	high (_display_content+40)
  9057  002E46  20F4               	addwfc	prodh,w,c
  9058  002E48  6E1E               	movwf	__display_itoa_u16@text+1,c
  9059  002E4A  ECDD  F027         	call	__display_itoa_u16	;wreg free
  9060                           
  9061                           ;display.c: 484: cntr = 0;
  9062  002E4E  0E00               	movlw	0
  9063  002E50  6E1F               	movwf	__display_programming@cntr,c
  9064                           
  9065                           ;display.c: 485: while(programming_line4[cntr])
  9066  002E52  D017               	goto	l1631
  9067  002E54                     
  9068                           ;display.c: 486: display_content[3][cntr] = programming_line4[cntr++];
  9069  002E54  501F               	movf	__display_programming@cntr,w,c
  9070  002E56  0D01               	mullw	1
  9071  002E58  0EC9               	movlw	low _programming_line4
  9072  002E5A  24F3               	addwf	prodl,w,c
  9073  002E5C  6EF6               	movwf	tblptrl,c
  9074  002E5E  0E8D               	movlw	high _programming_line4
  9075  002E60  20F4               	addwfc	prodh,w,c
  9076  002E62  6EF7               	movwf	tblptrh,c
  9077  002E64                     	if	1	;There are 3 active tblptr bytes
  9078  002E64  6AF8               	clrf	tblptru,c
  9079  002E66  0E00               	movlw	low (__mediumconst shr (0+16))
  9080  002E68  22F8               	addwfc	tblptru,f,c
  9081  002E6A                     	endif
  9082  002E6A  501F               	movf	__display_programming@cntr,w,c
  9083  002E6C  0D01               	mullw	1
  9084  002E6E  0EB0               	movlw	low (_display_content+60)
  9085  002E70  24F3               	addwf	prodl,w,c
  9086  002E72  6ED9               	movwf	fsr2l,c
  9087  002E74  0E01               	movlw	high (_display_content+60)
  9088  002E76  20F4               	addwfc	prodh,w,c
  9089  002E78  6EDA               	movwf	fsr2h,c
  9090  002E7A  0008               	tblrd		*
  9091  002E7C  CFF5 FFDF          	movff	tablat,indf2
  9092  002E80  2A1F               	incf	__display_programming@cntr,f,c
  9093  002E82                     l1631:
  9094  002E82  501F               	movf	__display_programming@cntr,w,c
  9095  002E84  0D01               	mullw	1
  9096  002E86  0EC9               	movlw	low _programming_line4
  9097  002E88  24F3               	addwf	prodl,w,c
  9098  002E8A  6EF6               	movwf	tblptrl,c
  9099  002E8C  0E8D               	movlw	high _programming_line4
  9100  002E8E  20F4               	addwfc	prodh,w,c
  9101  002E90  6EF7               	movwf	tblptrh,c
  9102  002E92                     	if	1	;There are 3 active tblptr bytes
  9103  002E92  6AF8               	clrf	tblptru,c
  9104  002E94  0E00               	movlw	low (__mediumconst shr (0+16))
  9105  002E96  22F8               	addwfc	tblptru,f,c
  9106  002E98                     	endif
  9107  002E98  0008               	tblrd		*
  9108  002E9A  50F5               	movf	tablat,w,c
  9109  002E9C  0900               	iorlw	0
  9110  002E9E  A4D8               	btfss	status,2,c
  9111  002EA0  D7D9               	goto	l1632
  9112                           
  9113                           ;display.c: 487: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
  9114  002EA2  ECDC  F03E         	call	_bootloader_get_flashPagesWritten	;wreg free
  9115  002EA6  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
  9116  002EAA  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
  9117  002EAE  6A1B               	clrf	__display_itoa_u16@value+2,c
  9118  002EB0  6A1C               	clrf	__display_itoa_u16@value+3,c
  9119  002EB2  501F               	movf	__display_programming@cntr,w,c
  9120  002EB4  0D01               	mullw	1
  9121  002EB6  0EB0               	movlw	low (_display_content+60)
  9122  002EB8  24F3               	addwf	prodl,w,c
  9123  002EBA  6E1D               	movwf	__display_itoa_u16@text,c
  9124  002EBC  0E01               	movlw	high (_display_content+60)
  9125  002EBE  20F4               	addwfc	prodh,w,c
  9126  002EC0  6E1E               	movwf	__display_itoa_u16@text+1,c
  9127  002EC2  ECDD  F027         	call	__display_itoa_u16	;wreg free
  9128  002EC6  0012               	return		;funcret
  9129  002EC8                     __end_of__display_programming:
  9130                           	opt stack 0
  9131                           tblptru	equ	0xFF8
  9132                           tblptrh	equ	0xFF7
  9133                           tblptrl	equ	0xFF6
  9134                           tablat	equ	0xFF5
  9135                           prodh	equ	0xFF4
  9136                           prodl	equ	0xFF3
  9137                           intcon	equ	0xFF2
  9138                           intcon2	equ	0xFF1
  9139                           intcon3	equ	0xFF0
  9140                           postinc0	equ	0xFEE
  9141                           wreg	equ	0xFE8
  9142                           postdec1	equ	0xFE5
  9143                           plusw1	equ	0xFE3
  9144                           fsr1h	equ	0xFE2
  9145                           fsr1l	equ	0xFE1
  9146                           indf2	equ	0xFDF
  9147                           postinc2	equ	0xFDE
  9148                           plusw2	equ	0xFDB
  9149                           fsr2h	equ	0xFDA
  9150                           fsr2l	equ	0xFD9
  9151                           status	equ	0xFD8
  9152                           
  9153 ;; *************** function __display_found *****************
  9154 ;; Defined at:
  9155 ;;		line 351 in file "display.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  cntr            1   39[COMRAM] unsigned char 
  9160 ;;  start           1   38[COMRAM] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9174 ;;Total ram usage:        4 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:    5
  9177 ;; This function calls:
  9178 ;;		__display_itoa_u32
  9179 ;;		_bootloader_get_file_size
  9180 ;; This function is called by:
  9181 ;;		_display_prepare
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text37
  9186  00293C                     __ptext37:
  9187                           	opt stack 0
  9188  00293C                     __display_found:
  9189                           	opt stack 24
  9190                           
  9191                           ;display.c: 353: uint8_t cntr;;display.c: 354: uint8_t start;;display.c: 356: cntr = 0;
  9192                           
  9193                           ;incstack = 0
  9194  00293C  0E00               	movlw	0
  9195  00293E  6E28               	movwf	__display_found@cntr,c
  9196                           
  9197                           ;display.c: 357: while(found_line1[cntr])
  9198  002940  D017               	goto	l1543
  9199  002942                     
  9200                           ;display.c: 358: display_content[0][cntr] = found_line1[cntr++];
  9201  002942  5028               	movf	__display_found@cntr,w,c
  9202  002944  0D01               	mullw	1
  9203  002946  0E19               	movlw	low _found_line1
  9204  002948  24F3               	addwf	prodl,w,c
  9205  00294A  6EF6               	movwf	tblptrl,c
  9206  00294C  0E8E               	movlw	high _found_line1
  9207  00294E  20F4               	addwfc	prodh,w,c
  9208  002950  6EF7               	movwf	tblptrh,c
  9209  002952                     	if	1	;There are 3 active tblptr bytes
  9210  002952  6AF8               	clrf	tblptru,c
  9211  002954  0E00               	movlw	low (__mediumconst shr (0+16))
  9212  002956  22F8               	addwfc	tblptru,f,c
  9213  002958                     	endif
  9214  002958  5028               	movf	__display_found@cntr,w,c
  9215  00295A  0D01               	mullw	1
  9216  00295C  0E74               	movlw	low _display_content
  9217  00295E  24F3               	addwf	prodl,w,c
  9218  002960  6ED9               	movwf	fsr2l,c
  9219  002962  0E01               	movlw	high _display_content
  9220  002964  20F4               	addwfc	prodh,w,c
  9221  002966  6EDA               	movwf	fsr2h,c
  9222  002968  0008               	tblrd		*
  9223  00296A  CFF5 FFDF          	movff	tablat,indf2
  9224  00296E  2A28               	incf	__display_found@cntr,f,c
  9225  002970                     l1543:
  9226  002970  5028               	movf	__display_found@cntr,w,c
  9227  002972  0D01               	mullw	1
  9228  002974  0E19               	movlw	low _found_line1
  9229  002976  24F3               	addwf	prodl,w,c
  9230  002978  6EF6               	movwf	tblptrl,c
  9231  00297A  0E8E               	movlw	high _found_line1
  9232  00297C  20F4               	addwfc	prodh,w,c
  9233  00297E  6EF7               	movwf	tblptrh,c
  9234  002980                     	if	1	;There are 3 active tblptr bytes
  9235  002980  6AF8               	clrf	tblptru,c
  9236  002982  0E00               	movlw	low (__mediumconst shr (0+16))
  9237  002984  22F8               	addwfc	tblptru,f,c
  9238  002986                     	endif
  9239  002986  0008               	tblrd		*
  9240  002988  50F5               	movf	tablat,w,c
  9241  00298A  0900               	iorlw	0
  9242  00298C  A4D8               	btfss	status,2,c
  9243  00298E  D7D9               	goto	l1544
  9244                           
  9245                           ;display.c: 360: cntr = 0;
  9246  002990  0E00               	movlw	0
  9247  002992  6E28               	movwf	__display_found@cntr,c
  9248                           
  9249                           ;display.c: 361: while(found_line2[cntr])
  9250  002994  D017               	goto	l1546
  9251  002996                     
  9252                           ;display.c: 362: display_content[1][cntr] = found_line2[cntr++];
  9253  002996  5028               	movf	__display_found@cntr,w,c
  9254  002998  0D01               	mullw	1
  9255  00299A  0E1D               	movlw	low _found_line2
  9256  00299C  24F3               	addwf	prodl,w,c
  9257  00299E  6EF6               	movwf	tblptrl,c
  9258  0029A0  0E8D               	movlw	high _found_line2
  9259  0029A2  20F4               	addwfc	prodh,w,c
  9260  0029A4  6EF7               	movwf	tblptrh,c
  9261  0029A6                     	if	1	;There are 3 active tblptr bytes
  9262  0029A6  6AF8               	clrf	tblptru,c
  9263  0029A8  0E00               	movlw	low (__mediumconst shr (0+16))
  9264  0029AA  22F8               	addwfc	tblptru,f,c
  9265  0029AC                     	endif
  9266  0029AC  5028               	movf	__display_found@cntr,w,c
  9267  0029AE  0D01               	mullw	1
  9268  0029B0  0E88               	movlw	low (_display_content+20)
  9269  0029B2  24F3               	addwf	prodl,w,c
  9270  0029B4  6ED9               	movwf	fsr2l,c
  9271  0029B6  0E01               	movlw	high (_display_content+20)
  9272  0029B8  20F4               	addwfc	prodh,w,c
  9273  0029BA  6EDA               	movwf	fsr2h,c
  9274  0029BC  0008               	tblrd		*
  9275  0029BE  CFF5 FFDF          	movff	tablat,indf2
  9276  0029C2  2A28               	incf	__display_found@cntr,f,c
  9277  0029C4                     l1546:
  9278  0029C4  5028               	movf	__display_found@cntr,w,c
  9279  0029C6  0D01               	mullw	1
  9280  0029C8  0E1D               	movlw	low _found_line2
  9281  0029CA  24F3               	addwf	prodl,w,c
  9282  0029CC  6EF6               	movwf	tblptrl,c
  9283  0029CE  0E8D               	movlw	high _found_line2
  9284  0029D0  20F4               	addwfc	prodh,w,c
  9285  0029D2  6EF7               	movwf	tblptrh,c
  9286  0029D4                     	if	1	;There are 3 active tblptr bytes
  9287  0029D4  6AF8               	clrf	tblptru,c
  9288  0029D6  0E00               	movlw	low (__mediumconst shr (0+16))
  9289  0029D8  22F8               	addwfc	tblptru,f,c
  9290  0029DA                     	endif
  9291  0029DA  0008               	tblrd		*
  9292  0029DC  50F5               	movf	tablat,w,c
  9293  0029DE  0900               	iorlw	0
  9294  0029E0  A4D8               	btfss	status,2,c
  9295  0029E2  D7D9               	goto	l1547
  9296                           
  9297                           ;display.c: 364: cntr = 0;
  9298  0029E4  0E00               	movlw	0
  9299  0029E6  6E28               	movwf	__display_found@cntr,c
  9300                           
  9301                           ;display.c: 365: while(found_line3[cntr])
  9302  0029E8  D017               	goto	l1549
  9303  0029EA                     
  9304                           ;display.c: 366: display_content[2][cntr] = found_line3[cntr++];
  9305  0029EA  5028               	movf	__display_found@cntr,w,c
  9306  0029EC  0D01               	mullw	1
  9307  0029EE  0E98               	movlw	low _found_line3
  9308  0029F0  24F3               	addwf	prodl,w,c
  9309  0029F2  6EF6               	movwf	tblptrl,c
  9310  0029F4  0E8E               	movlw	high _found_line3
  9311  0029F6  20F4               	addwfc	prodh,w,c
  9312  0029F8  6EF7               	movwf	tblptrh,c
  9313  0029FA                     	if	1	;There are 3 active tblptr bytes
  9314  0029FA  6AF8               	clrf	tblptru,c
  9315  0029FC  0E00               	movlw	low (__mediumconst shr (0+16))
  9316  0029FE  22F8               	addwfc	tblptru,f,c
  9317  002A00                     	endif
  9318  002A00  5028               	movf	__display_found@cntr,w,c
  9319  002A02  0D01               	mullw	1
  9320  002A04  0E9C               	movlw	low (_display_content+40)
  9321  002A06  24F3               	addwf	prodl,w,c
  9322  002A08  6ED9               	movwf	fsr2l,c
  9323  002A0A  0E01               	movlw	high (_display_content+40)
  9324  002A0C  20F4               	addwfc	prodh,w,c
  9325  002A0E  6EDA               	movwf	fsr2h,c
  9326  002A10  0008               	tblrd		*
  9327  002A12  CFF5 FFDF          	movff	tablat,indf2
  9328  002A16  2A28               	incf	__display_found@cntr,f,c
  9329  002A18                     l1549:
  9330  002A18  5028               	movf	__display_found@cntr,w,c
  9331  002A1A  0D01               	mullw	1
  9332  002A1C  0E98               	movlw	low _found_line3
  9333  002A1E  24F3               	addwf	prodl,w,c
  9334  002A20  6EF6               	movwf	tblptrl,c
  9335  002A22  0E8E               	movlw	high _found_line3
  9336  002A24  20F4               	addwfc	prodh,w,c
  9337  002A26  6EF7               	movwf	tblptrh,c
  9338  002A28                     	if	1	;There are 3 active tblptr bytes
  9339  002A28  6AF8               	clrf	tblptru,c
  9340  002A2A  0E00               	movlw	low (__mediumconst shr (0+16))
  9341  002A2C  22F8               	addwfc	tblptru,f,c
  9342  002A2E                     	endif
  9343  002A2E  0008               	tblrd		*
  9344  002A30  50F5               	movf	tablat,w,c
  9345  002A32  0900               	iorlw	0
  9346  002A34  A4D8               	btfss	status,2,c
  9347  002A36  D7D9               	goto	l1550
  9348                           
  9349                           ;display.c: 367: start = cntr;
  9350  002A38  C028  F027         	movff	__display_found@cntr,__display_found@start
  9351                           
  9352                           ;display.c: 368: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
  9353  002A3C  EC7C  F03E         	call	_bootloader_get_file_size	;wreg free
  9354  002A40  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
  9355  002A44  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
  9356  002A48  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
  9357  002A4C  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
  9358  002A50  5028               	movf	__display_found@cntr,w,c
  9359  002A52  0D01               	mullw	1
  9360  002A54  0E9C               	movlw	low (_display_content+40)
  9361  002A56  24F3               	addwf	prodl,w,c
  9362  002A58  6E23               	movwf	__display_itoa_u32@text,c
  9363  002A5A  0E01               	movlw	high (_display_content+40)
  9364  002A5C  20F4               	addwfc	prodh,w,c
  9365  002A5E  6E24               	movwf	__display_itoa_u32@text+1,c
  9366  002A60  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9367  002A64  2627               	addwf	__display_found@start,f,c
  9368                           
  9369                           ;display.c: 369: cntr = 0;
  9370  002A66  0E00               	movlw	0
  9371  002A68  6E28               	movwf	__display_found@cntr,c
  9372                           
  9373                           ;display.c: 370: while(found_line3b[cntr])
  9374  002A6A  D01C               	goto	l1552
  9375  002A6C                     
  9376                           ;display.c: 371: display_content[2][start+cntr] = found_line3b[cntr++];
  9377  002A6C  5028               	movf	__display_found@cntr,w,c
  9378  002A6E  0D01               	mullw	1
  9379  002A70  0E91               	movlw	low _found_line3b
  9380  002A72  24F3               	addwf	prodl,w,c
  9381  002A74  6EF6               	movwf	tblptrl,c
  9382  002A76  0E8E               	movlw	high _found_line3b
  9383  002A78  20F4               	addwfc	prodh,w,c
  9384  002A7A  6EF7               	movwf	tblptrh,c
  9385  002A7C                     	if	1	;There are 3 active tblptr bytes
  9386  002A7C  6AF8               	clrf	tblptru,c
  9387  002A7E  0E00               	movlw	low (__mediumconst shr (0+16))
  9388  002A80  22F8               	addwfc	tblptru,f,c
  9389  002A82                     	endif
  9390  002A82  5028               	movf	__display_found@cntr,w,c
  9391  002A84  C027  F025         	movff	__display_found@start,??__display_found
  9392  002A88  6A26               	clrf	(??__display_found+1)& (0+255),c
  9393  002A8A  2625               	addwf	??__display_found,f,c
  9394  002A8C  0E00               	movlw	0
  9395  002A8E  2226               	addwfc	??__display_found+1,f,c
  9396  002A90  0E9C               	movlw	low (_display_content+40)
  9397  002A92  2425               	addwf	??__display_found,w,c
  9398  002A94  6ED9               	movwf	fsr2l,c
  9399  002A96  0E01               	movlw	high (_display_content+40)
  9400  002A98  2026               	addwfc	??__display_found+1,w,c
  9401  002A9A  6EDA               	movwf	fsr2h,c
  9402  002A9C  0008               	tblrd		*
  9403  002A9E  CFF5 FFDF          	movff	tablat,indf2
  9404  002AA2  2A28               	incf	__display_found@cntr,f,c
  9405  002AA4                     l1552:
  9406  002AA4  5028               	movf	__display_found@cntr,w,c
  9407  002AA6  0D01               	mullw	1
  9408  002AA8  0E91               	movlw	low _found_line3b
  9409  002AAA  24F3               	addwf	prodl,w,c
  9410  002AAC  6EF6               	movwf	tblptrl,c
  9411  002AAE  0E8E               	movlw	high _found_line3b
  9412  002AB0  20F4               	addwfc	prodh,w,c
  9413  002AB2  6EF7               	movwf	tblptrh,c
  9414  002AB4                     	if	1	;There are 3 active tblptr bytes
  9415  002AB4  6AF8               	clrf	tblptru,c
  9416  002AB6  0E00               	movlw	low (__mediumconst shr (0+16))
  9417  002AB8  22F8               	addwfc	tblptru,f,c
  9418  002ABA                     	endif
  9419  002ABA  0008               	tblrd		*
  9420  002ABC  50F5               	movf	tablat,w,c
  9421  002ABE  0900               	iorlw	0
  9422  002AC0  A4D8               	btfss	status,2,c
  9423  002AC2  D7D4               	goto	l1553
  9424                           
  9425                           ;display.c: 373: cntr = 0;
  9426  002AC4  0E00               	movlw	0
  9427  002AC6  6E28               	movwf	__display_found@cntr,c
  9428                           
  9429                           ;display.c: 374: while(found_line4[cntr])
  9430  002AC8  D017               	goto	l1555
  9431  002ACA                     
  9432                           ;display.c: 375: display_content[3][cntr] = found_line4[cntr++];
  9433  002ACA  5028               	movf	__display_found@cntr,w,c
  9434  002ACC  0D01               	mullw	1
  9435  002ACE  0E54               	movlw	low _found_line4
  9436  002AD0  24F3               	addwf	prodl,w,c
  9437  002AD2  6EF6               	movwf	tblptrl,c
  9438  002AD4  0E8D               	movlw	high _found_line4
  9439  002AD6  20F4               	addwfc	prodh,w,c
  9440  002AD8  6EF7               	movwf	tblptrh,c
  9441  002ADA                     	if	1	;There are 3 active tblptr bytes
  9442  002ADA  6AF8               	clrf	tblptru,c
  9443  002ADC  0E00               	movlw	low (__mediumconst shr (0+16))
  9444  002ADE  22F8               	addwfc	tblptru,f,c
  9445  002AE0                     	endif
  9446  002AE0  5028               	movf	__display_found@cntr,w,c
  9447  002AE2  0D01               	mullw	1
  9448  002AE4  0EB0               	movlw	low (_display_content+60)
  9449  002AE6  24F3               	addwf	prodl,w,c
  9450  002AE8  6ED9               	movwf	fsr2l,c
  9451  002AEA  0E01               	movlw	high (_display_content+60)
  9452  002AEC  20F4               	addwfc	prodh,w,c
  9453  002AEE  6EDA               	movwf	fsr2h,c
  9454  002AF0  0008               	tblrd		*
  9455  002AF2  CFF5 FFDF          	movff	tablat,indf2
  9456  002AF6  2A28               	incf	__display_found@cntr,f,c
  9457  002AF8                     l1555:
  9458  002AF8  5028               	movf	__display_found@cntr,w,c
  9459  002AFA  0D01               	mullw	1
  9460  002AFC  0E54               	movlw	low _found_line4
  9461  002AFE  24F3               	addwf	prodl,w,c
  9462  002B00  6EF6               	movwf	tblptrl,c
  9463  002B02  0E8D               	movlw	high _found_line4
  9464  002B04  20F4               	addwfc	prodh,w,c
  9465  002B06  6EF7               	movwf	tblptrh,c
  9466  002B08                     	if	1	;There are 3 active tblptr bytes
  9467  002B08  6AF8               	clrf	tblptru,c
  9468  002B0A  0E00               	movlw	low (__mediumconst shr (0+16))
  9469  002B0C  22F8               	addwfc	tblptru,f,c
  9470  002B0E                     	endif
  9471  002B0E  0008               	tblrd		*
  9472  002B10  50F5               	movf	tablat,w,c
  9473  002B12  0900               	iorlw	0
  9474  002B14  B4D8               	btfsc	status,2,c
  9475  002B16  0012               	return	
  9476  002B18  D7D8               	goto	l1556
  9477  002B1A                     __end_of__display_found:
  9478                           	opt stack 0
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           intcon	equ	0xFF2
  9486                           intcon2	equ	0xFF1
  9487                           intcon3	equ	0xFF0
  9488                           postinc0	equ	0xFEE
  9489                           wreg	equ	0xFE8
  9490                           postdec1	equ	0xFE5
  9491                           plusw1	equ	0xFE3
  9492                           fsr1h	equ	0xFE2
  9493                           fsr1l	equ	0xFE1
  9494                           indf2	equ	0xFDF
  9495                           postinc2	equ	0xFDE
  9496                           plusw2	equ	0xFDB
  9497                           fsr2h	equ	0xFDA
  9498                           fsr2l	equ	0xFD9
  9499                           status	equ	0xFD8
  9500                           
  9501 ;; *************** function __display_failed *****************
  9502 ;; Defined at:
  9503 ;;		line 416 in file "display.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  cntr            1   36[COMRAM] unsigned char 
  9508 ;;  start           1    0        unsigned char 
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;Total ram usage:        1 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; Hardware stack levels required when called:    5
  9525 ;; This function calls:
  9526 ;;		__display_itoa_u16
  9527 ;;		__display_itoa_u32
  9528 ;;		_bootloader_get_entries
  9529 ;;		_bootloader_get_error
  9530 ;;		_bootloader_get_rec_address
  9531 ;; This function is called by:
  9532 ;;		_display_prepare
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text38
  9537  000F36                     __ptext38:
  9538                           	opt stack 0
  9539  000F36                     __display_failed:
  9540                           	opt stack 24
  9541                           
  9542                           ;display.c: 418: uint8_t cntr;;display.c: 419: uint8_t start;;display.c: 420: cntr = 0;
  9543                           
  9544                           ;incstack = 0
  9545  000F36  0E00               	movlw	0
  9546  000F38  6E25               	movwf	__display_failed@cntr,c
  9547                           
  9548                           ;display.c: 421: while(failed_line1[cntr])
  9549  000F3A  D017               	goto	l1588
  9550  000F3C                     
  9551                           ;display.c: 422: display_content[0][cntr] = failed_line1[cntr++];
  9552  000F3C  5025               	movf	__display_failed@cntr,w,c
  9553  000F3E  0D01               	mullw	1
  9554  000F40  0EE9               	movlw	low _failed_line1
  9555  000F42  24F3               	addwf	prodl,w,c
  9556  000F44  6EF6               	movwf	tblptrl,c
  9557  000F46  0E8D               	movlw	high _failed_line1
  9558  000F48  20F4               	addwfc	prodh,w,c
  9559  000F4A  6EF7               	movwf	tblptrh,c
  9560  000F4C                     	if	1	;There are 3 active tblptr bytes
  9561  000F4C  6AF8               	clrf	tblptru,c
  9562  000F4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9563  000F50  22F8               	addwfc	tblptru,f,c
  9564  000F52                     	endif
  9565  000F52  5025               	movf	__display_failed@cntr,w,c
  9566  000F54  0D01               	mullw	1
  9567  000F56  0E74               	movlw	low _display_content
  9568  000F58  24F3               	addwf	prodl,w,c
  9569  000F5A  6ED9               	movwf	fsr2l,c
  9570  000F5C  0E01               	movlw	high _display_content
  9571  000F5E  20F4               	addwfc	prodh,w,c
  9572  000F60  6EDA               	movwf	fsr2h,c
  9573  000F62  0008               	tblrd		*
  9574  000F64  CFF5 FFDF          	movff	tablat,indf2
  9575  000F68  2A25               	incf	__display_failed@cntr,f,c
  9576  000F6A                     l1588:
  9577  000F6A  5025               	movf	__display_failed@cntr,w,c
  9578  000F6C  0D01               	mullw	1
  9579  000F6E  0EE9               	movlw	low _failed_line1
  9580  000F70  24F3               	addwf	prodl,w,c
  9581  000F72  6EF6               	movwf	tblptrl,c
  9582  000F74  0E8D               	movlw	high _failed_line1
  9583  000F76  20F4               	addwfc	prodh,w,c
  9584  000F78  6EF7               	movwf	tblptrh,c
  9585  000F7A                     	if	1	;There are 3 active tblptr bytes
  9586  000F7A  6AF8               	clrf	tblptru,c
  9587  000F7C  0E00               	movlw	low (__mediumconst shr (0+16))
  9588  000F7E  22F8               	addwfc	tblptru,f,c
  9589  000F80                     	endif
  9590  000F80  0008               	tblrd		*
  9591  000F82  50F5               	movf	tablat,w,c
  9592  000F84  0900               	iorlw	0
  9593  000F86  A4D8               	btfss	status,2,c
  9594  000F88  D7D9               	goto	l1589
  9595                           
  9596                           ;display.c: 423: cntr = 0;
  9597  000F8A  0E00               	movlw	0
  9598  000F8C  6E25               	movwf	__display_failed@cntr,c
  9599                           
  9600                           ;display.c: 424: while(failed_line2[cntr])
  9601  000F8E  D017               	goto	l1591
  9602  000F90                     
  9603                           ;display.c: 425: display_content[1][cntr] = failed_line2[cntr++];
  9604  000F90  5025               	movf	__display_failed@cntr,w,c
  9605  000F92  0D01               	mullw	1
  9606  000F94  0E42               	movlw	low _failed_line2
  9607  000F96  24F3               	addwf	prodl,w,c
  9608  000F98  6EF6               	movwf	tblptrl,c
  9609  000F9A  0E8D               	movlw	high _failed_line2
  9610  000F9C  20F4               	addwfc	prodh,w,c
  9611  000F9E  6EF7               	movwf	tblptrh,c
  9612  000FA0                     	if	1	;There are 3 active tblptr bytes
  9613  000FA0  6AF8               	clrf	tblptru,c
  9614  000FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  9615  000FA4  22F8               	addwfc	tblptru,f,c
  9616  000FA6                     	endif
  9617  000FA6  5025               	movf	__display_failed@cntr,w,c
  9618  000FA8  0D01               	mullw	1
  9619  000FAA  0E88               	movlw	low (_display_content+20)
  9620  000FAC  24F3               	addwf	prodl,w,c
  9621  000FAE  6ED9               	movwf	fsr2l,c
  9622  000FB0  0E01               	movlw	high (_display_content+20)
  9623  000FB2  20F4               	addwfc	prodh,w,c
  9624  000FB4  6EDA               	movwf	fsr2h,c
  9625  000FB6  0008               	tblrd		*
  9626  000FB8  CFF5 FFDF          	movff	tablat,indf2
  9627  000FBC  2A25               	incf	__display_failed@cntr,f,c
  9628  000FBE                     l1591:
  9629  000FBE  5025               	movf	__display_failed@cntr,w,c
  9630  000FC0  0D01               	mullw	1
  9631  000FC2  0E42               	movlw	low _failed_line2
  9632  000FC4  24F3               	addwf	prodl,w,c
  9633  000FC6  6EF6               	movwf	tblptrl,c
  9634  000FC8  0E8D               	movlw	high _failed_line2
  9635  000FCA  20F4               	addwfc	prodh,w,c
  9636  000FCC  6EF7               	movwf	tblptrh,c
  9637  000FCE                     	if	1	;There are 3 active tblptr bytes
  9638  000FCE  6AF8               	clrf	tblptru,c
  9639  000FD0  0E00               	movlw	low (__mediumconst shr (0+16))
  9640  000FD2  22F8               	addwfc	tblptru,f,c
  9641  000FD4                     	endif
  9642  000FD4  0008               	tblrd		*
  9643  000FD6  50F5               	movf	tablat,w,c
  9644  000FD8  0900               	iorlw	0
  9645  000FDA  A4D8               	btfss	status,2,c
  9646  000FDC  D7D9               	goto	l1592
  9647                           
  9648                           ;display.c: 427: cntr = 0;
  9649  000FDE  0E00               	movlw	0
  9650  000FE0  6E25               	movwf	__display_failed@cntr,c
  9651                           
  9652                           ;display.c: 428: switch(bootloader_get_error())
  9653  000FE2  D0D6               	goto	l1594
  9654  000FE4                     
  9655                           ;display.c: 432: display_content[2][cntr] = failed_line3_startCode[cntr++];
  9656  000FE4  5025               	movf	__display_failed@cntr,w,c
  9657  000FE6  0D01               	mullw	1
  9658  000FE8  0E0A               	movlw	low _failed_line3_startCode
  9659  000FEA  24F3               	addwf	prodl,w,c
  9660  000FEC  6EF6               	movwf	tblptrl,c
  9661  000FEE  0E8D               	movlw	high _failed_line3_startCode
  9662  000FF0  20F4               	addwfc	prodh,w,c
  9663  000FF2  6EF7               	movwf	tblptrh,c
  9664  000FF4                     	if	1	;There are 3 active tblptr bytes
  9665  000FF4  6AF8               	clrf	tblptru,c
  9666  000FF6  0E00               	movlw	low (__mediumconst shr (0+16))
  9667  000FF8  22F8               	addwfc	tblptru,f,c
  9668  000FFA                     	endif
  9669  000FFA  5025               	movf	__display_failed@cntr,w,c
  9670  000FFC  0D01               	mullw	1
  9671  000FFE  0E9C               	movlw	low (_display_content+40)
  9672  001000  24F3               	addwf	prodl,w,c
  9673  001002  6ED9               	movwf	fsr2l,c
  9674  001004  0E01               	movlw	high (_display_content+40)
  9675  001006  20F4               	addwfc	prodh,w,c
  9676  001008  6EDA               	movwf	fsr2h,c
  9677  00100A  0008               	tblrd		*
  9678  00100C  CFF5 FFDF          	movff	tablat,indf2
  9679  001010  2A25               	incf	__display_failed@cntr,f,c
  9680  001012  5025               	movf	__display_failed@cntr,w,c
  9681  001014  0D01               	mullw	1
  9682  001016  0E0A               	movlw	low _failed_line3_startCode
  9683  001018  24F3               	addwf	prodl,w,c
  9684  00101A  6EF6               	movwf	tblptrl,c
  9685  00101C  0E8D               	movlw	high _failed_line3_startCode
  9686  00101E  20F4               	addwfc	prodh,w,c
  9687  001020  6EF7               	movwf	tblptrh,c
  9688  001022                     	if	1	;There are 3 active tblptr bytes
  9689  001022  6AF8               	clrf	tblptru,c
  9690  001024  0E00               	movlw	low (__mediumconst shr (0+16))
  9691  001026  22F8               	addwfc	tblptru,f,c
  9692  001028                     	endif
  9693  001028  0008               	tblrd		*
  9694  00102A  50F5               	movf	tablat,w,c
  9695  00102C  0900               	iorlw	0
  9696  00102E  B4D8               	btfsc	status,2,c
  9697  001030  D0C0               	goto	l1599
  9698  001032  D7D8               	goto	l1597
  9699  001034                     
  9700                           ;display.c: 437: display_content[2][cntr] = failed_line3_checksum[cntr++];
  9701  001034  5025               	movf	__display_failed@cntr,w,c
  9702  001036  0D01               	mullw	1
  9703  001038  0E29               	movlw	low _failed_line3_checksum
  9704  00103A  24F3               	addwf	prodl,w,c
  9705  00103C  6EF6               	movwf	tblptrl,c
  9706  00103E  0E8E               	movlw	high _failed_line3_checksum
  9707  001040  20F4               	addwfc	prodh,w,c
  9708  001042  6EF7               	movwf	tblptrh,c
  9709  001044                     	if	1	;There are 3 active tblptr bytes
  9710  001044  6AF8               	clrf	tblptru,c
  9711  001046  0E00               	movlw	low (__mediumconst shr (0+16))
  9712  001048  22F8               	addwfc	tblptru,f,c
  9713  00104A                     	endif
  9714  00104A  5025               	movf	__display_failed@cntr,w,c
  9715  00104C  0D01               	mullw	1
  9716  00104E  0E9C               	movlw	low (_display_content+40)
  9717  001050  24F3               	addwf	prodl,w,c
  9718  001052  6ED9               	movwf	fsr2l,c
  9719  001054  0E01               	movlw	high (_display_content+40)
  9720  001056  20F4               	addwfc	prodh,w,c
  9721  001058  6EDA               	movwf	fsr2h,c
  9722  00105A  0008               	tblrd		*
  9723  00105C  CFF5 FFDF          	movff	tablat,indf2
  9724  001060  2A25               	incf	__display_failed@cntr,f,c
  9725  001062  5025               	movf	__display_failed@cntr,w,c
  9726  001064  0D01               	mullw	1
  9727  001066  0E29               	movlw	low _failed_line3_checksum
  9728  001068  24F3               	addwf	prodl,w,c
  9729  00106A  6EF6               	movwf	tblptrl,c
  9730  00106C  0E8E               	movlw	high _failed_line3_checksum
  9731  00106E  20F4               	addwfc	prodh,w,c
  9732  001070  6EF7               	movwf	tblptrh,c
  9733  001072                     	if	1	;There are 3 active tblptr bytes
  9734  001072  6AF8               	clrf	tblptru,c
  9735  001074  0E00               	movlw	low (__mediumconst shr (0+16))
  9736  001076  22F8               	addwfc	tblptru,f,c
  9737  001078                     	endif
  9738  001078  0008               	tblrd		*
  9739  00107A  50F5               	movf	tablat,w,c
  9740  00107C  0900               	iorlw	0
  9741  00107E  B4D8               	btfsc	status,2,c
  9742  001080  D098               	goto	l1599
  9743  001082  D7D8               	goto	l1602
  9744  001084                     
  9745                           ;display.c: 444: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
  9746  001084  5025               	movf	__display_failed@cntr,w,c
  9747  001086  0D01               	mullw	1
  9748  001088  0E38               	movlw	low _failed_line3_noNextRecord
  9749  00108A  24F3               	addwf	prodl,w,c
  9750  00108C  6EF6               	movwf	tblptrl,c
  9751  00108E  0E8E               	movlw	high _failed_line3_noNextRecord
  9752  001090  20F4               	addwfc	prodh,w,c
  9753  001092  6EF7               	movwf	tblptrh,c
  9754  001094                     	if	1	;There are 3 active tblptr bytes
  9755  001094  6AF8               	clrf	tblptru,c
  9756  001096  0E00               	movlw	low (__mediumconst shr (0+16))
  9757  001098  22F8               	addwfc	tblptru,f,c
  9758  00109A                     	endif
  9759  00109A  5025               	movf	__display_failed@cntr,w,c
  9760  00109C  0D01               	mullw	1
  9761  00109E  0E9C               	movlw	low (_display_content+40)
  9762  0010A0  24F3               	addwf	prodl,w,c
  9763  0010A2  6ED9               	movwf	fsr2l,c
  9764  0010A4  0E01               	movlw	high (_display_content+40)
  9765  0010A6  20F4               	addwfc	prodh,w,c
  9766  0010A8  6EDA               	movwf	fsr2h,c
  9767  0010AA  0008               	tblrd		*
  9768  0010AC  CFF5 FFDF          	movff	tablat,indf2
  9769  0010B0  2A25               	incf	__display_failed@cntr,f,c
  9770  0010B2  5025               	movf	__display_failed@cntr,w,c
  9771  0010B4  0D01               	mullw	1
  9772  0010B6  0E38               	movlw	low _failed_line3_noNextRecord
  9773  0010B8  24F3               	addwf	prodl,w,c
  9774  0010BA  6EF6               	movwf	tblptrl,c
  9775  0010BC  0E8E               	movlw	high _failed_line3_noNextRecord
  9776  0010BE  20F4               	addwfc	prodh,w,c
  9777  0010C0  6EF7               	movwf	tblptrh,c
  9778  0010C2                     	if	1	;There are 3 active tblptr bytes
  9779  0010C2  6AF8               	clrf	tblptru,c
  9780  0010C4  0E00               	movlw	low (__mediumconst shr (0+16))
  9781  0010C6  22F8               	addwfc	tblptru,f,c
  9782  0010C8                     	endif
  9783  0010C8  0008               	tblrd		*
  9784  0010CA  50F5               	movf	tablat,w,c
  9785  0010CC  0900               	iorlw	0
  9786  0010CE  B4D8               	btfsc	status,2,c
  9787  0010D0  D070               	goto	l1599
  9788  0010D2  D7D8               	goto	l1606
  9789  0010D4                     
  9790                           ;display.c: 449: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
  9791  0010D4  5025               	movf	__display_failed@cntr,w,c
  9792  0010D6  0D01               	mullw	1
  9793  0010D8  0E47               	movlw	low _failed_line3_dataTooLong
  9794  0010DA  24F3               	addwf	prodl,w,c
  9795  0010DC  6EF6               	movwf	tblptrl,c
  9796  0010DE  0E8E               	movlw	high _failed_line3_dataTooLong
  9797  0010E0  20F4               	addwfc	prodh,w,c
  9798  0010E2  6EF7               	movwf	tblptrh,c
  9799  0010E4                     	if	1	;There are 3 active tblptr bytes
  9800  0010E4  6AF8               	clrf	tblptru,c
  9801  0010E6  0E00               	movlw	low (__mediumconst shr (0+16))
  9802  0010E8  22F8               	addwfc	tblptru,f,c
  9803  0010EA                     	endif
  9804  0010EA  5025               	movf	__display_failed@cntr,w,c
  9805  0010EC  0D01               	mullw	1
  9806  0010EE  0E9C               	movlw	low (_display_content+40)
  9807  0010F0  24F3               	addwf	prodl,w,c
  9808  0010F2  6ED9               	movwf	fsr2l,c
  9809  0010F4  0E01               	movlw	high (_display_content+40)
  9810  0010F6  20F4               	addwfc	prodh,w,c
  9811  0010F8  6EDA               	movwf	fsr2h,c
  9812  0010FA  0008               	tblrd		*
  9813  0010FC  CFF5 FFDF          	movff	tablat,indf2
  9814  001100  2A25               	incf	__display_failed@cntr,f,c
  9815  001102  5025               	movf	__display_failed@cntr,w,c
  9816  001104  0D01               	mullw	1
  9817  001106  0E47               	movlw	low _failed_line3_dataTooLong
  9818  001108  24F3               	addwf	prodl,w,c
  9819  00110A  6EF6               	movwf	tblptrl,c
  9820  00110C  0E8E               	movlw	high _failed_line3_dataTooLong
  9821  00110E  20F4               	addwfc	prodh,w,c
  9822  001110  6EF7               	movwf	tblptrh,c
  9823  001112                     	if	1	;There are 3 active tblptr bytes
  9824  001112  6AF8               	clrf	tblptru,c
  9825  001114  0E00               	movlw	low (__mediumconst shr (0+16))
  9826  001116  22F8               	addwfc	tblptru,f,c
  9827  001118                     	endif
  9828  001118  0008               	tblrd		*
  9829  00111A  50F5               	movf	tablat,w,c
  9830  00111C  0900               	iorlw	0
  9831  00111E  B4D8               	btfsc	status,2,c
  9832  001120  D048               	goto	l1599
  9833  001122  D7D8               	goto	l1610
  9834  001124                     
  9835                           ;display.c: 454: display_content[2][cntr] = failed_line3_addressRange[cntr++];
  9836  001124  5025               	movf	__display_failed@cntr,w,c
  9837  001126  0D01               	mullw	1
  9838  001128  0EE2               	movlw	low _failed_line3_addressRange
  9839  00112A  24F3               	addwf	prodl,w,c
  9840  00112C  6EF6               	movwf	tblptrl,c
  9841  00112E  0E8C               	movlw	high _failed_line3_addressRange
  9842  001130  20F4               	addwfc	prodh,w,c
  9843  001132  6EF7               	movwf	tblptrh,c
  9844  001134                     	if	1	;There are 3 active tblptr bytes
  9845  001134  6AF8               	clrf	tblptru,c
  9846  001136  0E00               	movlw	low (__mediumconst shr (0+16))
  9847  001138  22F8               	addwfc	tblptru,f,c
  9848  00113A                     	endif
  9849  00113A  5025               	movf	__display_failed@cntr,w,c
  9850  00113C  0D01               	mullw	1
  9851  00113E  0E9C               	movlw	low (_display_content+40)
  9852  001140  24F3               	addwf	prodl,w,c
  9853  001142  6ED9               	movwf	fsr2l,c
  9854  001144  0E01               	movlw	high (_display_content+40)
  9855  001146  20F4               	addwfc	prodh,w,c
  9856  001148  6EDA               	movwf	fsr2h,c
  9857  00114A  0008               	tblrd		*
  9858  00114C  CFF5 FFDF          	movff	tablat,indf2
  9859  001150  2A25               	incf	__display_failed@cntr,f,c
  9860  001152  5025               	movf	__display_failed@cntr,w,c
  9861  001154  0D01               	mullw	1
  9862  001156  0EE2               	movlw	low _failed_line3_addressRange
  9863  001158  24F3               	addwf	prodl,w,c
  9864  00115A  6EF6               	movwf	tblptrl,c
  9865  00115C  0E8C               	movlw	high _failed_line3_addressRange
  9866  00115E  20F4               	addwfc	prodh,w,c
  9867  001160  6EF7               	movwf	tblptrh,c
  9868  001162                     	if	1	;There are 3 active tblptr bytes
  9869  001162  6AF8               	clrf	tblptru,c
  9870  001164  0E00               	movlw	low (__mediumconst shr (0+16))
  9871  001166  22F8               	addwfc	tblptru,f,c
  9872  001168                     	endif
  9873  001168  0008               	tblrd		*
  9874  00116A  50F5               	movf	tablat,w,c
  9875  00116C  0900               	iorlw	0
  9876  00116E  A4D8               	btfss	status,2,c
  9877  001170  D7D9               	goto	l1614
  9878                           
  9879                           ;display.c: 455: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
  9880  001172  ECD7  F03E         	call	_bootloader_get_rec_address	;wreg free
  9881  001176  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
  9882  00117A  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
  9883  00117E  6A21               	clrf	__display_itoa_u32@value+2,c
  9884  001180  6A22               	clrf	__display_itoa_u32@value+3,c
  9885  001182  0EBE               	movlw	low (_display_content+74)
  9886  001184  6E23               	movwf	__display_itoa_u32@text,c
  9887  001186  0E01               	movlw	high (_display_content+74)
  9888  001188  6E24               	movwf	__display_itoa_u32@text+1,c
  9889  00118A  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9890                           
  9891                           ;display.c: 458: }
  9892                           
  9893                           ;display.c: 456: break;
  9894  00118E  D011               	goto	l1599
  9895  001190                     l1594:
  9896  001190  EC0C  F03F         	call	_bootloader_get_error	;wreg free
  9897                           
  9898                           ; Switch size 1, requested type "space"
  9899                           ; Number of cases is 5, Range of values is 11 to 15
  9900                           ; switch strategies available:
  9901                           ; Name         Instructions Cycles
  9902                           ; simple_byte           16     9 (average)
  9903                           ;	Chosen strategy is simple_byte
  9904  001194  0A0B               	xorlw	11	; case 11
  9905  001196  B4D8               	btfsc	status,2,c
  9906  001198  D7DC               	goto	l1613
  9907  00119A  0A07               	xorlw	7	; case 12
  9908  00119C  B4D8               	btfsc	status,2,c
  9909  00119E  D7B1               	goto	l1609
  9910  0011A0  0A01               	xorlw	1	; case 13
  9911  0011A2  B4D8               	btfsc	status,2,c
  9912  0011A4  D786               	goto	l1605
  9913  0011A6  0A03               	xorlw	3	; case 14
  9914  0011A8  B4D8               	btfsc	status,2,c
  9915  0011AA  D75B               	goto	l1601
  9916  0011AC  0A01               	xorlw	1	; case 15
  9917  0011AE  B4D8               	btfsc	status,2,c
  9918  0011B0  D730               	goto	l1596
  9919  0011B2                     l1599:
  9920                           
  9921                           ;display.c: 460: cntr = 0;
  9922  0011B2  0E00               	movlw	0
  9923  0011B4  6E25               	movwf	__display_failed@cntr,c
  9924                           
  9925                           ;display.c: 461: while(failed_line4[cntr])
  9926  0011B6  D017               	goto	l1616
  9927  0011B8                     
  9928                           ;display.c: 462: display_content[3][cntr] = failed_line4[cntr++];
  9929  0011B8  5025               	movf	__display_failed@cntr,w,c
  9930  0011BA  0D01               	mullw	1
  9931  0011BC  0E6B               	movlw	low _failed_line4
  9932  0011BE  24F3               	addwf	prodl,w,c
  9933  0011C0  6EF6               	movwf	tblptrl,c
  9934  0011C2  0E8E               	movlw	high _failed_line4
  9935  0011C4  20F4               	addwfc	prodh,w,c
  9936  0011C6  6EF7               	movwf	tblptrh,c
  9937  0011C8                     	if	1	;There are 3 active tblptr bytes
  9938  0011C8  6AF8               	clrf	tblptru,c
  9939  0011CA  0E00               	movlw	low (__mediumconst shr (0+16))
  9940  0011CC  22F8               	addwfc	tblptru,f,c
  9941  0011CE                     	endif
  9942  0011CE  5025               	movf	__display_failed@cntr,w,c
  9943  0011D0  0D01               	mullw	1
  9944  0011D2  0EB0               	movlw	low (_display_content+60)
  9945  0011D4  24F3               	addwf	prodl,w,c
  9946  0011D6  6ED9               	movwf	fsr2l,c
  9947  0011D8  0E01               	movlw	high (_display_content+60)
  9948  0011DA  20F4               	addwfc	prodh,w,c
  9949  0011DC  6EDA               	movwf	fsr2h,c
  9950  0011DE  0008               	tblrd		*
  9951  0011E0  CFF5 FFDF          	movff	tablat,indf2
  9952  0011E4  2A25               	incf	__display_failed@cntr,f,c
  9953  0011E6                     l1616:
  9954  0011E6  5025               	movf	__display_failed@cntr,w,c
  9955  0011E8  0D01               	mullw	1
  9956  0011EA  0E6B               	movlw	low _failed_line4
  9957  0011EC  24F3               	addwf	prodl,w,c
  9958  0011EE  6EF6               	movwf	tblptrl,c
  9959  0011F0  0E8E               	movlw	high _failed_line4
  9960  0011F2  20F4               	addwfc	prodh,w,c
  9961  0011F4  6EF7               	movwf	tblptrh,c
  9962  0011F6                     	if	1	;There are 3 active tblptr bytes
  9963  0011F6  6AF8               	clrf	tblptru,c
  9964  0011F8  0E00               	movlw	low (__mediumconst shr (0+16))
  9965  0011FA  22F8               	addwfc	tblptru,f,c
  9966  0011FC                     	endif
  9967  0011FC  0008               	tblrd		*
  9968  0011FE  50F5               	movf	tablat,w,c
  9969  001200  0900               	iorlw	0
  9970  001202  A4D8               	btfss	status,2,c
  9971  001204  D7D9               	goto	l1617
  9972                           
  9973                           ;display.c: 463: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
  9974  001206  ECE1  F03E         	call	_bootloader_get_entries	;wreg free
  9975  00120A  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9976  00120E  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9977  001212  6A1B               	clrf	__display_itoa_u16@value+2,c
  9978  001214  6A1C               	clrf	__display_itoa_u16@value+3,c
  9979  001216  5025               	movf	__display_failed@cntr,w,c
  9980  001218  0D01               	mullw	1
  9981  00121A  0EB0               	movlw	low (_display_content+60)
  9982  00121C  24F3               	addwf	prodl,w,c
  9983  00121E  6E1D               	movwf	__display_itoa_u16@text,c
  9984  001220  0E01               	movlw	high (_display_content+60)
  9985  001222  20F4               	addwfc	prodh,w,c
  9986  001224  6E1E               	movwf	__display_itoa_u16@text+1,c
  9987  001226  ECDD  F027         	call	__display_itoa_u16	;wreg free
  9988  00122A  0012               	return		;funcret
  9989  00122C                     __end_of__display_failed:
  9990                           	opt stack 0
  9991                           tblptru	equ	0xFF8
  9992                           tblptrh	equ	0xFF7
  9993                           tblptrl	equ	0xFF6
  9994                           tablat	equ	0xFF5
  9995                           prodh	equ	0xFF4
  9996                           prodl	equ	0xFF3
  9997                           intcon	equ	0xFF2
  9998                           intcon2	equ	0xFF1
  9999                           intcon3	equ	0xFF0
 10000                           postinc0	equ	0xFEE
 10001                           wreg	equ	0xFE8
 10002                           postdec1	equ	0xFE5
 10003                           plusw1	equ	0xFE3
 10004                           fsr1h	equ	0xFE2
 10005                           fsr1l	equ	0xFE1
 10006                           indf2	equ	0xFDF
 10007                           postinc2	equ	0xFDE
 10008                           plusw2	equ	0xFDB
 10009                           fsr2h	equ	0xFDA
 10010                           fsr2l	equ	0xFD9
 10011                           status	equ	0xFD8
 10012                           
 10013 ;; *************** function __display_itoa_u32 *****************
 10014 ;; Defined at:
 10015 ;;		line 163 in file "display.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  value           4   30[COMRAM] unsigned long 
 10018 ;;  text            2   34[COMRAM] PTR unsigned char 
 10019 ;;		 -> display_content(80), 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      unsigned char 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10031 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10035 ;;Total ram usage:        6 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; Hardware stack levels required when called:    4
 10038 ;; This function calls:
 10039 ;;		___lldiv
 10040 ;;		___llmod
 10041 ;;		__display_itoa_u16
 10042 ;;		_itoa
 10043 ;; This function is called by:
 10044 ;;		__display_found
 10045 ;;		__display_failed
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text39
 10050  00085A                     __ptext39:
 10051                           	opt stack 0
 10052  00085A                     __display_itoa_u32:
 10053                           	opt stack 24
 10054                           
 10055                           ;display.c: 166: if(value<=0x7FFF)
 10056                           
 10057                           ;incstack = 0
 10058  00085A  5022               	movf	__display_itoa_u32@value+3,w,c
 10059  00085C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 10060  00085E  E111               	bnz	l12556
 10061  000860  0E80               	movlw	128
 10062  000862  5C20               	subwf	__display_itoa_u32@value+1,w,c
 10063  000864  B0D8               	btfsc	status,0,c
 10064  000866  D00D               	goto	l1476
 10065                           
 10066                           ;display.c: 167: {;display.c: 168: return _display_itoa_u16((uint16_t) value, text);
 10067  000868  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 10068  00086C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 10069  000870  6A1B               	clrf	__display_itoa_u16@value+2,c
 10070  000872  6A1C               	clrf	__display_itoa_u16@value+3,c
 10071  000874  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 10072  000878  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 10073  00087C  ECDD  F027         	call	__display_itoa_u16	;wreg free
 10074  000880  0012               	return	
 10075  000882                     l1476:
 10076  000882                     l12556:
 10077                           
 10078                           ;display.c: 169: };display.c: 172: if(value>100000000)
 10079  000882  041F               	decf	__display_itoa_u32@value,w,c
 10080  000884  0EE1               	movlw	225
 10081  000886  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10082  000888  0EF5               	movlw	245
 10083  00088A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10084  00088C  0E05               	movlw	5
 10085  00088E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 10086  000890  A0D8               	btfss	status,0,c
 10087  000892  D04C               	goto	l1478
 10088                           
 10089                           ;display.c: 173: {;display.c: 174: itoa(text, (uint16_t)(value/10000), 10);
 10090  000894  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10091  000898  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10092  00089C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10093  0008A0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10094  0008A4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10095  0008A8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10096  0008AC  0E10               	movlw	16
 10097  0008AE  6E05               	movwf	___lldiv@divisor,c
 10098  0008B0  0E27               	movlw	39
 10099  0008B2  6E06               	movwf	___lldiv@divisor+1,c
 10100  0008B4  0E00               	movlw	0
 10101  0008B6  6E07               	movwf	___lldiv@divisor+2,c
 10102  0008B8  0E00               	movlw	0
 10103  0008BA  6E08               	movwf	___lldiv@divisor+3,c
 10104  0008BC  EC31  F031         	call	___lldiv	;wreg free
 10105  0008C0  C001  F013         	movff	?___lldiv,itoa@val
 10106  0008C4  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10107  0008C8  0E00               	movlw	0
 10108  0008CA  6E16               	movwf	itoa@base+1,c
 10109  0008CC  0E0A               	movlw	10
 10110  0008CE  6E15               	movwf	itoa@base,c
 10111  0008D0  EC33  F03A         	call	_itoa	;wreg free
 10112                           
 10113                           ;display.c: 175: itoa(text+5, (uint16_t)(value%10000), 10);
 10114  0008D4  0E05               	movlw	5
 10115  0008D6  2423               	addwf	__display_itoa_u32@text,w,c
 10116  0008D8  6E11               	movwf	itoa@buf,c
 10117  0008DA  0E00               	movlw	0
 10118  0008DC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10119  0008DE  6E12               	movwf	itoa@buf+1,c
 10120  0008E0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10121  0008E4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10122  0008E8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10123  0008EC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10124  0008F0  0E10               	movlw	16
 10125  0008F2  6E05               	movwf	___llmod@divisor,c
 10126  0008F4  0E27               	movlw	39
 10127  0008F6  6E06               	movwf	___llmod@divisor+1,c
 10128  0008F8  0E00               	movlw	0
 10129  0008FA  6E07               	movwf	___llmod@divisor+2,c
 10130  0008FC  0E00               	movlw	0
 10131  0008FE  6E08               	movwf	___llmod@divisor+3,c
 10132  000900  EC77  F035         	call	___llmod	;wreg free
 10133  000904  C001  F013         	movff	?___llmod,itoa@val
 10134  000908  C002  F014         	movff	?___llmod+1,itoa@val+1
 10135  00090C  0E00               	movlw	0
 10136  00090E  6E16               	movwf	itoa@base+1,c
 10137  000910  0E0A               	movlw	10
 10138  000912  6E15               	movwf	itoa@base,c
 10139  000914  EC33  F03A         	call	_itoa	;wreg free
 10140                           
 10141                           ;display.c: 176: *(text+9) = ' ';
 10142  000918  EE20 F009          	lfsr	2,9
 10143  00091C  5023               	movf	__display_itoa_u32@text,w,c
 10144  00091E  26D9               	addwf	fsr2l,f,c
 10145  000920  5024               	movf	__display_itoa_u32@text+1,w,c
 10146  000922  22DA               	addwfc	fsr2h,f,c
 10147  000924  0E20               	movlw	32
 10148  000926  6EDF               	movwf	indf2,c
 10149                           
 10150                           ;display.c: 177: return 9;
 10151  000928  0E09               	movlw	9
 10152                           
 10153                           ;display.c: 178: }
 10154  00092A  0012               	return	
 10155  00092C                     l1478:
 10156                           
 10157                           ;display.c: 179: else if(value>10000000)
 10158  00092C  5022               	movf	__display_itoa_u32@value+3,w,c
 10159  00092E  E108               	bnz	u9530
 10160  000930  0E81               	movlw	129
 10161  000932  5C1F               	subwf	__display_itoa_u32@value,w,c
 10162  000934  0E96               	movlw	150
 10163  000936  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10164  000938  0E98               	movlw	152
 10165  00093A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10166  00093C  A0D8               	btfss	status,0,c
 10167  00093E  D04C               	goto	l1480
 10168  000940                     u9530:
 10169                           
 10170                           ;display.c: 180: {;display.c: 181: itoa(text, (uint16_t)(value/10000), 10);
 10171  000940  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10172  000944  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10173  000948  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10174  00094C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10175  000950  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10176  000954  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10177  000958  0E10               	movlw	16
 10178  00095A  6E05               	movwf	___lldiv@divisor,c
 10179  00095C  0E27               	movlw	39
 10180  00095E  6E06               	movwf	___lldiv@divisor+1,c
 10181  000960  0E00               	movlw	0
 10182  000962  6E07               	movwf	___lldiv@divisor+2,c
 10183  000964  0E00               	movlw	0
 10184  000966  6E08               	movwf	___lldiv@divisor+3,c
 10185  000968  EC31  F031         	call	___lldiv	;wreg free
 10186  00096C  C001  F013         	movff	?___lldiv,itoa@val
 10187  000970  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10188  000974  0E00               	movlw	0
 10189  000976  6E16               	movwf	itoa@base+1,c
 10190  000978  0E0A               	movlw	10
 10191  00097A  6E15               	movwf	itoa@base,c
 10192  00097C  EC33  F03A         	call	_itoa	;wreg free
 10193                           
 10194                           ;display.c: 182: itoa(text+4, (uint16_t)(value%10000), 10);
 10195  000980  0E04               	movlw	4
 10196  000982  2423               	addwf	__display_itoa_u32@text,w,c
 10197  000984  6E11               	movwf	itoa@buf,c
 10198  000986  0E00               	movlw	0
 10199  000988  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10200  00098A  6E12               	movwf	itoa@buf+1,c
 10201  00098C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10202  000990  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10203  000994  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10204  000998  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10205  00099C  0E10               	movlw	16
 10206  00099E  6E05               	movwf	___llmod@divisor,c
 10207  0009A0  0E27               	movlw	39
 10208  0009A2  6E06               	movwf	___llmod@divisor+1,c
 10209  0009A4  0E00               	movlw	0
 10210  0009A6  6E07               	movwf	___llmod@divisor+2,c
 10211  0009A8  0E00               	movlw	0
 10212  0009AA  6E08               	movwf	___llmod@divisor+3,c
 10213  0009AC  EC77  F035         	call	___llmod	;wreg free
 10214  0009B0  C001  F013         	movff	?___llmod,itoa@val
 10215  0009B4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10216  0009B8  0E00               	movlw	0
 10217  0009BA  6E16               	movwf	itoa@base+1,c
 10218  0009BC  0E0A               	movlw	10
 10219  0009BE  6E15               	movwf	itoa@base,c
 10220  0009C0  EC33  F03A         	call	_itoa	;wreg free
 10221                           
 10222                           ;display.c: 183: *(text+8) = ' ';
 10223  0009C4  EE20 F008          	lfsr	2,8
 10224  0009C8  5023               	movf	__display_itoa_u32@text,w,c
 10225  0009CA  26D9               	addwf	fsr2l,f,c
 10226  0009CC  5024               	movf	__display_itoa_u32@text+1,w,c
 10227  0009CE  22DA               	addwfc	fsr2h,f,c
 10228  0009D0  0E20               	movlw	32
 10229  0009D2  6EDF               	movwf	indf2,c
 10230                           
 10231                           ;display.c: 184: return 8;
 10232  0009D4  0E08               	movlw	8
 10233                           
 10234                           ;display.c: 185: }
 10235  0009D6  0012               	return	
 10236  0009D8                     l1480:
 10237                           
 10238                           ;display.c: 186: else if(value>1000000)
 10239  0009D8  5022               	movf	__display_itoa_u32@value+3,w,c
 10240  0009DA  E108               	bnz	u9540
 10241  0009DC  0E41               	movlw	65
 10242  0009DE  5C1F               	subwf	__display_itoa_u32@value,w,c
 10243  0009E0  0E42               	movlw	66
 10244  0009E2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10245  0009E4  0E0F               	movlw	15
 10246  0009E6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10247  0009E8  A0D8               	btfss	status,0,c
 10248  0009EA  D04C               	goto	l1482
 10249  0009EC                     u9540:
 10250                           
 10251                           ;display.c: 187: {;display.c: 188: itoa(text, (uint16_t)(value/10000), 10);
 10252  0009EC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10253  0009F0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10254  0009F4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10255  0009F8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10256  0009FC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10257  000A00  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10258  000A04  0E10               	movlw	16
 10259  000A06  6E05               	movwf	___lldiv@divisor,c
 10260  000A08  0E27               	movlw	39
 10261  000A0A  6E06               	movwf	___lldiv@divisor+1,c
 10262  000A0C  0E00               	movlw	0
 10263  000A0E  6E07               	movwf	___lldiv@divisor+2,c
 10264  000A10  0E00               	movlw	0
 10265  000A12  6E08               	movwf	___lldiv@divisor+3,c
 10266  000A14  EC31  F031         	call	___lldiv	;wreg free
 10267  000A18  C001  F013         	movff	?___lldiv,itoa@val
 10268  000A1C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10269  000A20  0E00               	movlw	0
 10270  000A22  6E16               	movwf	itoa@base+1,c
 10271  000A24  0E0A               	movlw	10
 10272  000A26  6E15               	movwf	itoa@base,c
 10273  000A28  EC33  F03A         	call	_itoa	;wreg free
 10274                           
 10275                           ;display.c: 189: itoa(text+3, (uint16_t)(value%10000), 10);
 10276  000A2C  0E03               	movlw	3
 10277  000A2E  2423               	addwf	__display_itoa_u32@text,w,c
 10278  000A30  6E11               	movwf	itoa@buf,c
 10279  000A32  0E00               	movlw	0
 10280  000A34  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10281  000A36  6E12               	movwf	itoa@buf+1,c
 10282  000A38  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10283  000A3C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10284  000A40  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10285  000A44  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10286  000A48  0E10               	movlw	16
 10287  000A4A  6E05               	movwf	___llmod@divisor,c
 10288  000A4C  0E27               	movlw	39
 10289  000A4E  6E06               	movwf	___llmod@divisor+1,c
 10290  000A50  0E00               	movlw	0
 10291  000A52  6E07               	movwf	___llmod@divisor+2,c
 10292  000A54  0E00               	movlw	0
 10293  000A56  6E08               	movwf	___llmod@divisor+3,c
 10294  000A58  EC77  F035         	call	___llmod	;wreg free
 10295  000A5C  C001  F013         	movff	?___llmod,itoa@val
 10296  000A60  C002  F014         	movff	?___llmod+1,itoa@val+1
 10297  000A64  0E00               	movlw	0
 10298  000A66  6E16               	movwf	itoa@base+1,c
 10299  000A68  0E0A               	movlw	10
 10300  000A6A  6E15               	movwf	itoa@base,c
 10301  000A6C  EC33  F03A         	call	_itoa	;wreg free
 10302                           
 10303                           ;display.c: 190: *(text+7) = ' ';
 10304  000A70  EE20 F007          	lfsr	2,7
 10305  000A74  5023               	movf	__display_itoa_u32@text,w,c
 10306  000A76  26D9               	addwf	fsr2l,f,c
 10307  000A78  5024               	movf	__display_itoa_u32@text+1,w,c
 10308  000A7A  22DA               	addwfc	fsr2h,f,c
 10309  000A7C  0E20               	movlw	32
 10310  000A7E  6EDF               	movwf	indf2,c
 10311                           
 10312                           ;display.c: 191: return 7;
 10313  000A80  0E07               	movlw	7
 10314                           
 10315                           ;display.c: 192: }
 10316  000A82  0012               	return	
 10317  000A84                     l1482:
 10318                           
 10319                           ;display.c: 193: else if(value>100000)
 10320  000A84  5022               	movf	__display_itoa_u32@value+3,w,c
 10321  000A86  E108               	bnz	u9550
 10322  000A88  0EA1               	movlw	161
 10323  000A8A  5C1F               	subwf	__display_itoa_u32@value,w,c
 10324  000A8C  0E86               	movlw	134
 10325  000A8E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10326  000A90  0E01               	movlw	1
 10327  000A92  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10328  000A94  A0D8               	btfss	status,0,c
 10329  000A96  D04C               	goto	l1484
 10330  000A98                     u9550:
 10331                           
 10332                           ;display.c: 194: {;display.c: 195: itoa(text, (uint16_t)(value/10000), 10);
 10333  000A98  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10334  000A9C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10335  000AA0  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10336  000AA4  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10337  000AA8  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10338  000AAC  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10339  000AB0  0E10               	movlw	16
 10340  000AB2  6E05               	movwf	___lldiv@divisor,c
 10341  000AB4  0E27               	movlw	39
 10342  000AB6  6E06               	movwf	___lldiv@divisor+1,c
 10343  000AB8  0E00               	movlw	0
 10344  000ABA  6E07               	movwf	___lldiv@divisor+2,c
 10345  000ABC  0E00               	movlw	0
 10346  000ABE  6E08               	movwf	___lldiv@divisor+3,c
 10347  000AC0  EC31  F031         	call	___lldiv	;wreg free
 10348  000AC4  C001  F013         	movff	?___lldiv,itoa@val
 10349  000AC8  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10350  000ACC  0E00               	movlw	0
 10351  000ACE  6E16               	movwf	itoa@base+1,c
 10352  000AD0  0E0A               	movlw	10
 10353  000AD2  6E15               	movwf	itoa@base,c
 10354  000AD4  EC33  F03A         	call	_itoa	;wreg free
 10355                           
 10356                           ;display.c: 196: itoa(text+2, (uint16_t)(value%10000), 10);
 10357  000AD8  0E02               	movlw	2
 10358  000ADA  2423               	addwf	__display_itoa_u32@text,w,c
 10359  000ADC  6E11               	movwf	itoa@buf,c
 10360  000ADE  0E00               	movlw	0
 10361  000AE0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10362  000AE2  6E12               	movwf	itoa@buf+1,c
 10363  000AE4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10364  000AE8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10365  000AEC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10366  000AF0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10367  000AF4  0E10               	movlw	16
 10368  000AF6  6E05               	movwf	___llmod@divisor,c
 10369  000AF8  0E27               	movlw	39
 10370  000AFA  6E06               	movwf	___llmod@divisor+1,c
 10371  000AFC  0E00               	movlw	0
 10372  000AFE  6E07               	movwf	___llmod@divisor+2,c
 10373  000B00  0E00               	movlw	0
 10374  000B02  6E08               	movwf	___llmod@divisor+3,c
 10375  000B04  EC77  F035         	call	___llmod	;wreg free
 10376  000B08  C001  F013         	movff	?___llmod,itoa@val
 10377  000B0C  C002  F014         	movff	?___llmod+1,itoa@val+1
 10378  000B10  0E00               	movlw	0
 10379  000B12  6E16               	movwf	itoa@base+1,c
 10380  000B14  0E0A               	movlw	10
 10381  000B16  6E15               	movwf	itoa@base,c
 10382  000B18  EC33  F03A         	call	_itoa	;wreg free
 10383                           
 10384                           ;display.c: 197: *(text+6) = ' ';
 10385  000B1C  EE20 F006          	lfsr	2,6
 10386  000B20  5023               	movf	__display_itoa_u32@text,w,c
 10387  000B22  26D9               	addwf	fsr2l,f,c
 10388  000B24  5024               	movf	__display_itoa_u32@text+1,w,c
 10389  000B26  22DA               	addwfc	fsr2h,f,c
 10390  000B28  0E20               	movlw	32
 10391  000B2A  6EDF               	movwf	indf2,c
 10392                           
 10393                           ;display.c: 198: return 6;
 10394  000B2C  0E06               	movlw	6
 10395                           
 10396                           ;display.c: 199: }
 10397  000B2E  0012               	return	
 10398  000B30                     l1484:
 10399                           
 10400                           ;display.c: 200: else;display.c: 201: {;display.c: 202: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 10401  000B30  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10402  000B34  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10403  000B38  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10404  000B3C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10405  000B40  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10406  000B44  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10407  000B48  0E10               	movlw	16
 10408  000B4A  6E05               	movwf	___lldiv@divisor,c
 10409  000B4C  0E27               	movlw	39
 10410  000B4E  6E06               	movwf	___lldiv@divisor+1,c
 10411  000B50  0E00               	movlw	0
 10412  000B52  6E07               	movwf	___lldiv@divisor+2,c
 10413  000B54  0E00               	movlw	0
 10414  000B56  6E08               	movwf	___lldiv@divisor+3,c
 10415  000B58  EC31  F031         	call	___lldiv	;wreg free
 10416  000B5C  C001  F013         	movff	?___lldiv,itoa@val
 10417  000B60  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10418  000B64  0E00               	movlw	0
 10419  000B66  6E16               	movwf	itoa@base+1,c
 10420  000B68  0E0A               	movlw	10
 10421  000B6A  6E15               	movwf	itoa@base,c
 10422  000B6C  EC33  F03A         	call	_itoa	;wreg free
 10423                           
 10424                           ;display.c: 203: itoa(text+1, (uint16_t)(value%10000), 10);
 10425  000B70  0E01               	movlw	1
 10426  000B72  2423               	addwf	__display_itoa_u32@text,w,c
 10427  000B74  6E11               	movwf	itoa@buf,c
 10428  000B76  0E00               	movlw	0
 10429  000B78  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10430  000B7A  6E12               	movwf	itoa@buf+1,c
 10431  000B7C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10432  000B80  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10433  000B84  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10434  000B88  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10435  000B8C  0E10               	movlw	16
 10436  000B8E  6E05               	movwf	___llmod@divisor,c
 10437  000B90  0E27               	movlw	39
 10438  000B92  6E06               	movwf	___llmod@divisor+1,c
 10439  000B94  0E00               	movlw	0
 10440  000B96  6E07               	movwf	___llmod@divisor+2,c
 10441  000B98  0E00               	movlw	0
 10442  000B9A  6E08               	movwf	___llmod@divisor+3,c
 10443  000B9C  EC77  F035         	call	___llmod	;wreg free
 10444  000BA0  C001  F013         	movff	?___llmod,itoa@val
 10445  000BA4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10446  000BA8  0E00               	movlw	0
 10447  000BAA  6E16               	movwf	itoa@base+1,c
 10448  000BAC  0E0A               	movlw	10
 10449  000BAE  6E15               	movwf	itoa@base,c
 10450  000BB0  EC33  F03A         	call	_itoa	;wreg free
 10451                           
 10452                           ;display.c: 204: *(text+5) = ' ';
 10453  000BB4  EE20 F005          	lfsr	2,5
 10454  000BB8  5023               	movf	__display_itoa_u32@text,w,c
 10455  000BBA  26D9               	addwf	fsr2l,f,c
 10456  000BBC  5024               	movf	__display_itoa_u32@text+1,w,c
 10457  000BBE  22DA               	addwfc	fsr2h,f,c
 10458  000BC0  0E20               	movlw	32
 10459  000BC2  6EDF               	movwf	indf2,c
 10460                           
 10461                           ;display.c: 205: return 5;
 10462  000BC4  0E05               	movlw	5
 10463  000BC6  0012               	return	
 10464  000BC8                     __end_of__display_itoa_u32:
 10465                           	opt stack 0
 10466                           tblptru	equ	0xFF8
 10467                           tblptrh	equ	0xFF7
 10468                           tblptrl	equ	0xFF6
 10469                           tablat	equ	0xFF5
 10470                           prodh	equ	0xFF4
 10471                           prodl	equ	0xFF3
 10472                           intcon	equ	0xFF2
 10473                           intcon2	equ	0xFF1
 10474                           intcon3	equ	0xFF0
 10475                           postinc0	equ	0xFEE
 10476                           wreg	equ	0xFE8
 10477                           postdec1	equ	0xFE5
 10478                           plusw1	equ	0xFE3
 10479                           fsr1h	equ	0xFE2
 10480                           fsr1l	equ	0xFE1
 10481                           indf2	equ	0xFDF
 10482                           postinc2	equ	0xFDE
 10483                           plusw2	equ	0xFDB
 10484                           fsr2h	equ	0xFDA
 10485                           fsr2l	equ	0xFD9
 10486                           status	equ	0xFD8
 10487                           
 10488 ;; *************** function ___llmod *****************
 10489 ;; Defined at:
 10490 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  dividend        4    0[COMRAM] unsigned long 
 10493 ;;  divisor         4    4[COMRAM] unsigned long 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;  counter         1    8[COMRAM] unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  4    0[COMRAM] unsigned long 
 10498 ;; Registers used:
 10499 ;;		wreg, status,2, status,0
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10505 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10509 ;;Total ram usage:        9 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		__display_itoa_u32
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text40
 10519  006AEE                     __ptext40:
 10520                           	opt stack 0
 10521  006AEE                     ___llmod:
 10522                           	opt stack 27
 10523                           
 10524                           ;incstack = 0
 10525  006AEE  5005               	movf	___llmod@divisor,w,c
 10526  006AF0  1006               	iorwf	___llmod@divisor+1,w,c
 10527  006AF2  1007               	iorwf	___llmod@divisor+2,w,c
 10528  006AF4  1008               	iorwf	___llmod@divisor+3,w,c
 10529  006AF6  B4D8               	btfsc	status,2,c
 10530  006AF8  D024               	goto	l3192
 10531  006AFA  0E01               	movlw	1
 10532  006AFC  6E09               	movwf	___llmod@counter,c
 10533  006AFE  D006               	goto	l3187
 10534  006B00  90D8               	bcf	status,0,c
 10535  006B02  3605               	rlcf	___llmod@divisor,f,c
 10536  006B04  3606               	rlcf	___llmod@divisor+1,f,c
 10537  006B06  3607               	rlcf	___llmod@divisor+2,f,c
 10538  006B08  3608               	rlcf	___llmod@divisor+3,f,c
 10539  006B0A  2A09               	incf	___llmod@counter,f,c
 10540  006B0C                     l3187:
 10541  006B0C  AE08               	btfss	___llmod@divisor+3,7,c
 10542  006B0E  D7F8               	goto	l3188
 10543  006B10                     u9130:
 10544  006B10  5005               	movf	___llmod@divisor,w,c
 10545  006B12  5C01               	subwf	___llmod@dividend,w,c
 10546  006B14  5006               	movf	___llmod@divisor+1,w,c
 10547  006B16  5802               	subwfb	___llmod@dividend+1,w,c
 10548  006B18  5007               	movf	___llmod@divisor+2,w,c
 10549  006B1A  5803               	subwfb	___llmod@dividend+2,w,c
 10550  006B1C  5008               	movf	___llmod@divisor+3,w,c
 10551  006B1E  5804               	subwfb	___llmod@dividend+3,w,c
 10552  006B20  A0D8               	btfss	status,0,c
 10553  006B22  D008               	goto	l3191
 10554  006B24  5005               	movf	___llmod@divisor,w,c
 10555  006B26  5E01               	subwf	___llmod@dividend,f,c
 10556  006B28  5006               	movf	___llmod@divisor+1,w,c
 10557  006B2A  5A02               	subwfb	___llmod@dividend+1,f,c
 10558  006B2C  5007               	movf	___llmod@divisor+2,w,c
 10559  006B2E  5A03               	subwfb	___llmod@dividend+2,f,c
 10560  006B30  5008               	movf	___llmod@divisor+3,w,c
 10561  006B32  5A04               	subwfb	___llmod@dividend+3,f,c
 10562  006B34                     l3191:
 10563  006B34  90D8               	bcf	status,0,c
 10564  006B36  3208               	rrcf	___llmod@divisor+3,f,c
 10565  006B38  3207               	rrcf	___llmod@divisor+2,f,c
 10566  006B3A  3206               	rrcf	___llmod@divisor+1,f,c
 10567  006B3C  3205               	rrcf	___llmod@divisor,f,c
 10568  006B3E  2E09               	decfsz	___llmod@counter,f,c
 10569  006B40  D7E7               	goto	u9130
 10570  006B42                     l3192:
 10571  006B42  C001  F001         	movff	___llmod@dividend,?___llmod
 10572  006B46  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10573  006B4A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10574  006B4E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10575  006B52  0012               	return		;funcret
 10576  006B54                     __end_of___llmod:
 10577                           	opt stack 0
 10578                           tblptru	equ	0xFF8
 10579                           tblptrh	equ	0xFF7
 10580                           tblptrl	equ	0xFF6
 10581                           tablat	equ	0xFF5
 10582                           prodh	equ	0xFF4
 10583                           prodl	equ	0xFF3
 10584                           intcon	equ	0xFF2
 10585                           intcon2	equ	0xFF1
 10586                           intcon3	equ	0xFF0
 10587                           postinc0	equ	0xFEE
 10588                           wreg	equ	0xFE8
 10589                           postdec1	equ	0xFE5
 10590                           plusw1	equ	0xFE3
 10591                           fsr1h	equ	0xFE2
 10592                           fsr1l	equ	0xFE1
 10593                           indf2	equ	0xFDF
 10594                           postinc2	equ	0xFDE
 10595                           plusw2	equ	0xFDB
 10596                           fsr2h	equ	0xFDA
 10597                           fsr2l	equ	0xFD9
 10598                           status	equ	0xFD8
 10599                           
 10600 ;; *************** function ___lldiv *****************
 10601 ;; Defined at:
 10602 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  dividend        4    0[COMRAM] unsigned long 
 10605 ;;  divisor         4    4[COMRAM] unsigned long 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  quotient        4    8[COMRAM] unsigned long 
 10608 ;;  counter         1   12[COMRAM] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  4    0[COMRAM] unsigned long 
 10611 ;; Registers used:
 10612 ;;		wreg, status,2, status,0
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10618 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10622 ;;Total ram usage:       13 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		__display_itoa_u32
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text41
 10632  006262                     __ptext41:
 10633                           	opt stack 0
 10634  006262                     ___lldiv:
 10635                           	opt stack 27
 10636                           
 10637                           ;incstack = 0
 10638  006262  0E00               	movlw	0
 10639  006264  6E09               	movwf	___lldiv@quotient,c
 10640  006266  0E00               	movlw	0
 10641  006268  6E0A               	movwf	___lldiv@quotient+1,c
 10642  00626A  0E00               	movlw	0
 10643  00626C  6E0B               	movwf	___lldiv@quotient+2,c
 10644  00626E  0E00               	movlw	0
 10645  006270  6E0C               	movwf	___lldiv@quotient+3,c
 10646  006272  5005               	movf	___lldiv@divisor,w,c
 10647  006274  1006               	iorwf	___lldiv@divisor+1,w,c
 10648  006276  1007               	iorwf	___lldiv@divisor+2,w,c
 10649  006278  1008               	iorwf	___lldiv@divisor+3,w,c
 10650  00627A  B4D8               	btfsc	status,2,c
 10651  00627C  D02A               	goto	l2811
 10652  00627E  0E01               	movlw	1
 10653  006280  6E0D               	movwf	___lldiv@counter,c
 10654  006282  D006               	goto	l2806
 10655  006284  90D8               	bcf	status,0,c
 10656  006286  3605               	rlcf	___lldiv@divisor,f,c
 10657  006288  3606               	rlcf	___lldiv@divisor+1,f,c
 10658  00628A  3607               	rlcf	___lldiv@divisor+2,f,c
 10659  00628C  3608               	rlcf	___lldiv@divisor+3,f,c
 10660  00628E  2A0D               	incf	___lldiv@counter,f,c
 10661  006290                     l2806:
 10662  006290  AE08               	btfss	___lldiv@divisor+3,7,c
 10663  006292  D7F8               	goto	l2807
 10664  006294                     u9100:
 10665  006294  90D8               	bcf	status,0,c
 10666  006296  3609               	rlcf	___lldiv@quotient,f,c
 10667  006298  360A               	rlcf	___lldiv@quotient+1,f,c
 10668  00629A  360B               	rlcf	___lldiv@quotient+2,f,c
 10669  00629C  360C               	rlcf	___lldiv@quotient+3,f,c
 10670  00629E  5005               	movf	___lldiv@divisor,w,c
 10671  0062A0  5C01               	subwf	___lldiv@dividend,w,c
 10672  0062A2  5006               	movf	___lldiv@divisor+1,w,c
 10673  0062A4  5802               	subwfb	___lldiv@dividend+1,w,c
 10674  0062A6  5007               	movf	___lldiv@divisor+2,w,c
 10675  0062A8  5803               	subwfb	___lldiv@dividend+2,w,c
 10676  0062AA  5008               	movf	___lldiv@divisor+3,w,c
 10677  0062AC  5804               	subwfb	___lldiv@dividend+3,w,c
 10678  0062AE  A0D8               	btfss	status,0,c
 10679  0062B0  D009               	goto	l2810
 10680  0062B2  5005               	movf	___lldiv@divisor,w,c
 10681  0062B4  5E01               	subwf	___lldiv@dividend,f,c
 10682  0062B6  5006               	movf	___lldiv@divisor+1,w,c
 10683  0062B8  5A02               	subwfb	___lldiv@dividend+1,f,c
 10684  0062BA  5007               	movf	___lldiv@divisor+2,w,c
 10685  0062BC  5A03               	subwfb	___lldiv@dividend+2,f,c
 10686  0062BE  5008               	movf	___lldiv@divisor+3,w,c
 10687  0062C0  5A04               	subwfb	___lldiv@dividend+3,f,c
 10688  0062C2  8009               	bsf	___lldiv@quotient,0,c
 10689  0062C4                     l2810:
 10690  0062C4  90D8               	bcf	status,0,c
 10691  0062C6  3208               	rrcf	___lldiv@divisor+3,f,c
 10692  0062C8  3207               	rrcf	___lldiv@divisor+2,f,c
 10693  0062CA  3206               	rrcf	___lldiv@divisor+1,f,c
 10694  0062CC  3205               	rrcf	___lldiv@divisor,f,c
 10695  0062CE  2E0D               	decfsz	___lldiv@counter,f,c
 10696  0062D0  D7E1               	goto	u9100
 10697  0062D2                     l2811:
 10698  0062D2  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10699  0062D6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10700  0062DA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10701  0062DE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10702  0062E2  0012               	return		;funcret
 10703  0062E4                     __end_of___lldiv:
 10704                           	opt stack 0
 10705                           tblptru	equ	0xFF8
 10706                           tblptrh	equ	0xFF7
 10707                           tblptrl	equ	0xFF6
 10708                           tablat	equ	0xFF5
 10709                           prodh	equ	0xFF4
 10710                           prodl	equ	0xFF3
 10711                           intcon	equ	0xFF2
 10712                           intcon2	equ	0xFF1
 10713                           intcon3	equ	0xFF0
 10714                           postinc0	equ	0xFEE
 10715                           wreg	equ	0xFE8
 10716                           postdec1	equ	0xFE5
 10717                           plusw1	equ	0xFE3
 10718                           fsr1h	equ	0xFE2
 10719                           fsr1l	equ	0xFE1
 10720                           indf2	equ	0xFDF
 10721                           postinc2	equ	0xFDE
 10722                           plusw2	equ	0xFDB
 10723                           fsr2h	equ	0xFDA
 10724                           fsr2l	equ	0xFD9
 10725                           status	equ	0xFD8
 10726                           
 10727 ;; *************** function __display_done *****************
 10728 ;; Defined at:
 10729 ;;		line 490 in file "display.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;		None
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  cntr            1   30[COMRAM] unsigned char 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      void 
 10736 ;; Registers used:
 10737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10747 ;;Total ram usage:        1 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; Hardware stack levels required when called:    4
 10750 ;; This function calls:
 10751 ;;		__display_itoa_u16
 10752 ;;		_bootloader_get_flashPagesWritten
 10753 ;; This function is called by:
 10754 ;;		_display_prepare
 10755 ;; This function uses a non-reentrant model
 10756 ;;
 10757                           
 10758                           	psect	text42
 10759  003516                     __ptext42:
 10760                           	opt stack 0
 10761  003516                     __display_done:
 10762                           	opt stack 25
 10763                           
 10764                           ;display.c: 492: uint8_t cntr;;display.c: 493: cntr = 0;
 10765                           
 10766                           ;incstack = 0
 10767  003516  0E00               	movlw	0
 10768  003518  6E1F               	movwf	__display_done@cntr,c
 10769                           
 10770                           ;display.c: 494: while(done_line1[cntr])
 10771  00351A  D017               	goto	l1637
 10772  00351C                     
 10773                           ;display.c: 495: display_content[0][cntr] = done_line1[cntr++];
 10774  00351C  501F               	movf	__display_done@cntr,w,c
 10775  00351E  0D01               	mullw	1
 10776  003520  0EB9               	movlw	low _done_line1
 10777  003522  24F3               	addwf	prodl,w,c
 10778  003524  6EF6               	movwf	tblptrl,c
 10779  003526  0E8D               	movlw	high _done_line1
 10780  003528  20F4               	addwfc	prodh,w,c
 10781  00352A  6EF7               	movwf	tblptrh,c
 10782  00352C                     	if	1	;There are 3 active tblptr bytes
 10783  00352C  6AF8               	clrf	tblptru,c
 10784  00352E  0E00               	movlw	low (__mediumconst shr (0+16))
 10785  003530  22F8               	addwfc	tblptru,f,c
 10786  003532                     	endif
 10787  003532  501F               	movf	__display_done@cntr,w,c
 10788  003534  0D01               	mullw	1
 10789  003536  0E74               	movlw	low _display_content
 10790  003538  24F3               	addwf	prodl,w,c
 10791  00353A  6ED9               	movwf	fsr2l,c
 10792  00353C  0E01               	movlw	high _display_content
 10793  00353E  20F4               	addwfc	prodh,w,c
 10794  003540  6EDA               	movwf	fsr2h,c
 10795  003542  0008               	tblrd		*
 10796  003544  CFF5 FFDF          	movff	tablat,indf2
 10797  003548  2A1F               	incf	__display_done@cntr,f,c
 10798  00354A                     l1637:
 10799  00354A  501F               	movf	__display_done@cntr,w,c
 10800  00354C  0D01               	mullw	1
 10801  00354E  0EB9               	movlw	low _done_line1
 10802  003550  24F3               	addwf	prodl,w,c
 10803  003552  6EF6               	movwf	tblptrl,c
 10804  003554  0E8D               	movlw	high _done_line1
 10805  003556  20F4               	addwfc	prodh,w,c
 10806  003558  6EF7               	movwf	tblptrh,c
 10807  00355A                     	if	1	;There are 3 active tblptr bytes
 10808  00355A  6AF8               	clrf	tblptru,c
 10809  00355C  0E00               	movlw	low (__mediumconst shr (0+16))
 10810  00355E  22F8               	addwfc	tblptru,f,c
 10811  003560                     	endif
 10812  003560  0008               	tblrd		*
 10813  003562  50F5               	movf	tablat,w,c
 10814  003564  0900               	iorlw	0
 10815  003566  A4D8               	btfss	status,2,c
 10816  003568  D7D9               	goto	l1638
 10817                           
 10818                           ;display.c: 496: cntr = 0;
 10819  00356A  0E00               	movlw	0
 10820  00356C  6E1F               	movwf	__display_done@cntr,c
 10821                           
 10822                           ;display.c: 497: while(done_line2[cntr])
 10823  00356E  D017               	goto	l1640
 10824  003570                     
 10825                           ;display.c: 498: display_content[1][cntr] = done_line2[cntr++];
 10826  003570  501F               	movf	__display_done@cntr,w,c
 10827  003572  0D01               	mullw	1
 10828  003574  0E9F               	movlw	low _done_line2
 10829  003576  24F3               	addwf	prodl,w,c
 10830  003578  6EF6               	movwf	tblptrl,c
 10831  00357A  0E8E               	movlw	high _done_line2
 10832  00357C  20F4               	addwfc	prodh,w,c
 10833  00357E  6EF7               	movwf	tblptrh,c
 10834  003580                     	if	1	;There are 3 active tblptr bytes
 10835  003580  6AF8               	clrf	tblptru,c
 10836  003582  0E00               	movlw	low (__mediumconst shr (0+16))
 10837  003584  22F8               	addwfc	tblptru,f,c
 10838  003586                     	endif
 10839  003586  501F               	movf	__display_done@cntr,w,c
 10840  003588  0D01               	mullw	1
 10841  00358A  0E88               	movlw	low (_display_content+20)
 10842  00358C  24F3               	addwf	prodl,w,c
 10843  00358E  6ED9               	movwf	fsr2l,c
 10844  003590  0E01               	movlw	high (_display_content+20)
 10845  003592  20F4               	addwfc	prodh,w,c
 10846  003594  6EDA               	movwf	fsr2h,c
 10847  003596  0008               	tblrd		*
 10848  003598  CFF5 FFDF          	movff	tablat,indf2
 10849  00359C  2A1F               	incf	__display_done@cntr,f,c
 10850  00359E                     l1640:
 10851  00359E  501F               	movf	__display_done@cntr,w,c
 10852  0035A0  0D01               	mullw	1
 10853  0035A2  0E9F               	movlw	low _done_line2
 10854  0035A4  24F3               	addwf	prodl,w,c
 10855  0035A6  6EF6               	movwf	tblptrl,c
 10856  0035A8  0E8E               	movlw	high _done_line2
 10857  0035AA  20F4               	addwfc	prodh,w,c
 10858  0035AC  6EF7               	movwf	tblptrh,c
 10859  0035AE                     	if	1	;There are 3 active tblptr bytes
 10860  0035AE  6AF8               	clrf	tblptru,c
 10861  0035B0  0E00               	movlw	low (__mediumconst shr (0+16))
 10862  0035B2  22F8               	addwfc	tblptru,f,c
 10863  0035B4                     	endif
 10864  0035B4  0008               	tblrd		*
 10865  0035B6  50F5               	movf	tablat,w,c
 10866  0035B8  0900               	iorlw	0
 10867  0035BA  A4D8               	btfss	status,2,c
 10868  0035BC  D7D9               	goto	l1641
 10869                           
 10870                           ;display.c: 499: cntr = 0;
 10871  0035BE  0E00               	movlw	0
 10872  0035C0  6E1F               	movwf	__display_done@cntr,c
 10873                           
 10874                           ;display.c: 500: while(done_line3[cntr])
 10875  0035C2  D017               	goto	l1643
 10876  0035C4                     
 10877                           ;display.c: 501: display_content[2][cntr] = done_line3[cntr++];
 10878  0035C4  501F               	movf	__display_done@cntr,w,c
 10879  0035C6  0D01               	mullw	1
 10880  0035C8  0EA9               	movlw	low _done_line3
 10881  0035CA  24F3               	addwf	prodl,w,c
 10882  0035CC  6EF6               	movwf	tblptrl,c
 10883  0035CE  0E8D               	movlw	high _done_line3
 10884  0035D0  20F4               	addwfc	prodh,w,c
 10885  0035D2  6EF7               	movwf	tblptrh,c
 10886  0035D4                     	if	1	;There are 3 active tblptr bytes
 10887  0035D4  6AF8               	clrf	tblptru,c
 10888  0035D6  0E00               	movlw	low (__mediumconst shr (0+16))
 10889  0035D8  22F8               	addwfc	tblptru,f,c
 10890  0035DA                     	endif
 10891  0035DA  501F               	movf	__display_done@cntr,w,c
 10892  0035DC  0D01               	mullw	1
 10893  0035DE  0E9C               	movlw	low (_display_content+40)
 10894  0035E0  24F3               	addwf	prodl,w,c
 10895  0035E2  6ED9               	movwf	fsr2l,c
 10896  0035E4  0E01               	movlw	high (_display_content+40)
 10897  0035E6  20F4               	addwfc	prodh,w,c
 10898  0035E8  6EDA               	movwf	fsr2h,c
 10899  0035EA  0008               	tblrd		*
 10900  0035EC  CFF5 FFDF          	movff	tablat,indf2
 10901  0035F0  2A1F               	incf	__display_done@cntr,f,c
 10902  0035F2                     l1643:
 10903  0035F2  501F               	movf	__display_done@cntr,w,c
 10904  0035F4  0D01               	mullw	1
 10905  0035F6  0EA9               	movlw	low _done_line3
 10906  0035F8  24F3               	addwf	prodl,w,c
 10907  0035FA  6EF6               	movwf	tblptrl,c
 10908  0035FC  0E8D               	movlw	high _done_line3
 10909  0035FE  20F4               	addwfc	prodh,w,c
 10910  003600  6EF7               	movwf	tblptrh,c
 10911  003602                     	if	1	;There are 3 active tblptr bytes
 10912  003602  6AF8               	clrf	tblptru,c
 10913  003604  0E00               	movlw	low (__mediumconst shr (0+16))
 10914  003606  22F8               	addwfc	tblptru,f,c
 10915  003608                     	endif
 10916  003608  0008               	tblrd		*
 10917  00360A  50F5               	movf	tablat,w,c
 10918  00360C  0900               	iorlw	0
 10919  00360E  A4D8               	btfss	status,2,c
 10920  003610  D7D9               	goto	l1644
 10921                           
 10922                           ;display.c: 502: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 10923  003612  ECDC  F03E         	call	_bootloader_get_flashPagesWritten	;wreg free
 10924  003616  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 10925  00361A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 10926  00361E  6A1B               	clrf	__display_itoa_u16@value+2,c
 10927  003620  6A1C               	clrf	__display_itoa_u16@value+3,c
 10928  003622  501F               	movf	__display_done@cntr,w,c
 10929  003624  0D01               	mullw	1
 10930  003626  0E9C               	movlw	low (_display_content+40)
 10931  003628  24F3               	addwf	prodl,w,c
 10932  00362A  6E1D               	movwf	__display_itoa_u16@text,c
 10933  00362C  0E01               	movlw	high (_display_content+40)
 10934  00362E  20F4               	addwfc	prodh,w,c
 10935  003630  6E1E               	movwf	__display_itoa_u16@text+1,c
 10936  003632  ECDD  F027         	call	__display_itoa_u16	;wreg free
 10937                           
 10938                           ;display.c: 503: cntr = 0;
 10939  003636  0E00               	movlw	0
 10940  003638  6E1F               	movwf	__display_done@cntr,c
 10941                           
 10942                           ;display.c: 504: while(done_line4[cntr])
 10943  00363A  D017               	goto	l1646
 10944  00363C                     
 10945                           ;display.c: 505: display_content[3][cntr] = done_line4[cntr++];
 10946  00363C  501F               	movf	__display_done@cntr,w,c
 10947  00363E  0D01               	mullw	1
 10948  003640  0E99               	movlw	low _done_line4
 10949  003642  24F3               	addwf	prodl,w,c
 10950  003644  6EF6               	movwf	tblptrl,c
 10951  003646  0E8D               	movlw	high _done_line4
 10952  003648  20F4               	addwfc	prodh,w,c
 10953  00364A  6EF7               	movwf	tblptrh,c
 10954  00364C                     	if	1	;There are 3 active tblptr bytes
 10955  00364C  6AF8               	clrf	tblptru,c
 10956  00364E  0E00               	movlw	low (__mediumconst shr (0+16))
 10957  003650  22F8               	addwfc	tblptru,f,c
 10958  003652                     	endif
 10959  003652  501F               	movf	__display_done@cntr,w,c
 10960  003654  0D01               	mullw	1
 10961  003656  0EB0               	movlw	low (_display_content+60)
 10962  003658  24F3               	addwf	prodl,w,c
 10963  00365A  6ED9               	movwf	fsr2l,c
 10964  00365C  0E01               	movlw	high (_display_content+60)
 10965  00365E  20F4               	addwfc	prodh,w,c
 10966  003660  6EDA               	movwf	fsr2h,c
 10967  003662  0008               	tblrd		*
 10968  003664  CFF5 FFDF          	movff	tablat,indf2
 10969  003668  2A1F               	incf	__display_done@cntr,f,c
 10970  00366A                     l1646:
 10971  00366A  501F               	movf	__display_done@cntr,w,c
 10972  00366C  0D01               	mullw	1
 10973  00366E  0E99               	movlw	low _done_line4
 10974  003670  24F3               	addwf	prodl,w,c
 10975  003672  6EF6               	movwf	tblptrl,c
 10976  003674  0E8D               	movlw	high _done_line4
 10977  003676  20F4               	addwfc	prodh,w,c
 10978  003678  6EF7               	movwf	tblptrh,c
 10979  00367A                     	if	1	;There are 3 active tblptr bytes
 10980  00367A  6AF8               	clrf	tblptru,c
 10981  00367C  0E00               	movlw	low (__mediumconst shr (0+16))
 10982  00367E  22F8               	addwfc	tblptru,f,c
 10983  003680                     	endif
 10984  003680  0008               	tblrd		*
 10985  003682  50F5               	movf	tablat,w,c
 10986  003684  0900               	iorlw	0
 10987  003686  B4D8               	btfsc	status,2,c
 10988  003688  0012               	return	
 10989  00368A  D7D8               	goto	l1647
 10990  00368C                     __end_of__display_done:
 10991                           	opt stack 0
 10992                           tblptru	equ	0xFF8
 10993                           tblptrh	equ	0xFF7
 10994                           tblptrl	equ	0xFF6
 10995                           tablat	equ	0xFF5
 10996                           prodh	equ	0xFF4
 10997                           prodl	equ	0xFF3
 10998                           intcon	equ	0xFF2
 10999                           intcon2	equ	0xFF1
 11000                           intcon3	equ	0xFF0
 11001                           postinc0	equ	0xFEE
 11002                           wreg	equ	0xFE8
 11003                           postdec1	equ	0xFE5
 11004                           plusw1	equ	0xFE3
 11005                           fsr1h	equ	0xFE2
 11006                           fsr1l	equ	0xFE1
 11007                           indf2	equ	0xFDF
 11008                           postinc2	equ	0xFDE
 11009                           plusw2	equ	0xFDB
 11010                           fsr2h	equ	0xFDA
 11011                           fsr2l	equ	0xFD9
 11012                           status	equ	0xFD8
 11013                           
 11014 ;; *************** function __display_clear *****************
 11015 ;; Defined at:
 11016 ;;		line 66 in file "display.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;		None
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;  col             1    3[COMRAM] unsigned char 
 11021 ;;  row             1    2[COMRAM] unsigned char 
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;Total ram usage:        4 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_display_prepare
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           	psect	text43
 11045  00734A                     __ptext43:
 11046                           	opt stack 0
 11047  00734A                     __display_clear:
 11048                           	opt stack 29
 11049                           
 11050                           ;display.c: 68: uint8_t row;;display.c: 69: uint8_t col;;display.c: 70: for(row=0;row<4;
      +                          ++row)
 11051                           
 11052                           ;incstack = 0
 11053  00734A  0E00               	movlw	0
 11054  00734C  6E03               	movwf	__display_clear@row,c
 11055  00734E                     l13612:
 11056  00734E  0E03               	movlw	3
 11057  007350  6403               	cpfsgt	__display_clear@row,c
 11058  007352  D001               	goto	l1432
 11059  007354  0012               	return	
 11060  007356                     l1432:
 11061                           
 11062                           ;display.c: 71: {;display.c: 72: for(col=0;col<20;++col)
 11063  007356  0E00               	movlw	0
 11064  007358  6E04               	movwf	__display_clear@col,c
 11065  00735A                     l13618:
 11066  00735A  0E13               	movlw	19
 11067  00735C  6404               	cpfsgt	__display_clear@col,c
 11068  00735E  D001               	goto	l1434
 11069  007360  D016               	goto	u10520
 11070  007362                     l1434:
 11071                           
 11072                           ;display.c: 73: {;display.c: 74: display_content[row][col] = ' ';
 11073  007362  5003               	movf	__display_clear@row,w,c
 11074  007364  0D14               	mullw	20
 11075  007366  0E74               	movlw	low _display_content
 11076  007368  6E01               	movwf	??__display_clear& (0+255),c
 11077  00736A  0E01               	movlw	high _display_content
 11078  00736C  6E02               	movwf	(??__display_clear+1)& (0+255),c
 11079  00736E  50F3               	movf	prodl,w,c
 11080  007370  2601               	addwf	??__display_clear,f,c
 11081  007372  50F4               	movf	prodh,w,c
 11082  007374  2202               	addwfc	??__display_clear+1,f,c
 11083  007376  5004               	movf	__display_clear@col,w,c
 11084  007378  0D01               	mullw	1
 11085  00737A  50F3               	movf	prodl,w,c
 11086  00737C  2401               	addwf	??__display_clear,w,c
 11087  00737E  6ED9               	movwf	fsr2l,c
 11088  007380  50F4               	movf	prodh,w,c
 11089  007382  2002               	addwfc	??__display_clear+1,w,c
 11090  007384  6EDA               	movwf	fsr2h,c
 11091  007386  0E20               	movlw	32
 11092  007388  6EDF               	movwf	indf2,c
 11093  00738A  2A04               	incf	__display_clear@col,f,c
 11094  00738C  D7E6               	goto	l13618
 11095  00738E                     u10520:
 11096  00738E  2A03               	incf	__display_clear@row,f,c
 11097  007390  D7DE               	goto	l13612
 11098  007392                     __end_of__display_clear:
 11099                           	opt stack 0
 11100                           tblptru	equ	0xFF8
 11101                           tblptrh	equ	0xFF7
 11102                           tblptrl	equ	0xFF6
 11103                           tablat	equ	0xFF5
 11104                           prodh	equ	0xFF4
 11105                           prodl	equ	0xFF3
 11106                           intcon	equ	0xFF2
 11107                           intcon2	equ	0xFF1
 11108                           intcon3	equ	0xFF0
 11109                           postinc0	equ	0xFEE
 11110                           wreg	equ	0xFE8
 11111                           postdec1	equ	0xFE5
 11112                           plusw1	equ	0xFE3
 11113                           fsr1h	equ	0xFE2
 11114                           fsr1l	equ	0xFE1
 11115                           indf2	equ	0xFDF
 11116                           postinc2	equ	0xFDE
 11117                           plusw2	equ	0xFDB
 11118                           fsr2h	equ	0xFDA
 11119                           fsr2l	equ	0xFD9
 11120                           status	equ	0xFD8
 11121                           
 11122 ;; *************** function __display_checked *****************
 11123 ;; Defined at:
 11124 ;;		line 394 in file "display.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;		None
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  cntr            1   33[COMRAM] unsigned char 
 11129 ;;  start           1   32[COMRAM] unsigned char 
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  1    wreg      void 
 11132 ;; Registers used:
 11133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11143 ;;Total ram usage:        4 bytes
 11144 ;; Hardware stack levels used:    1
 11145 ;; Hardware stack levels required when called:    4
 11146 ;; This function calls:
 11147 ;;		__display_itoa_u16
 11148 ;;		_bootloader_get_total_entries
 11149 ;; This function is called by:
 11150 ;;		_display_prepare
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text44
 11155  00339A                     __ptext44:
 11156                           	opt stack 0
 11157  00339A                     __display_checked:
 11158                           	opt stack 25
 11159                           
 11160                           ;display.c: 396: uint8_t cntr;;display.c: 397: uint8_t start;;display.c: 398: cntr = 0;
 11161                           
 11162                           ;incstack = 0
 11163  00339A  0E00               	movlw	0
 11164  00339C  6E22               	movwf	__display_checked@cntr,c
 11165                           
 11166                           ;display.c: 399: while(checked_line1[cntr])
 11167  00339E  D017               	goto	l1573
 11168  0033A0                     
 11169                           ;display.c: 400: display_content[0][cntr] = checked_line1[cntr++];
 11170  0033A0  5022               	movf	__display_checked@cntr,w,c
 11171  0033A2  0D01               	mullw	1
 11172  0033A4  0EF9               	movlw	low _checked_line1
 11173  0033A6  24F3               	addwf	prodl,w,c
 11174  0033A8  6EF6               	movwf	tblptrl,c
 11175  0033AA  0E8D               	movlw	high _checked_line1
 11176  0033AC  20F4               	addwfc	prodh,w,c
 11177  0033AE  6EF7               	movwf	tblptrh,c
 11178  0033B0                     	if	1	;There are 3 active tblptr bytes
 11179  0033B0  6AF8               	clrf	tblptru,c
 11180  0033B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11181  0033B4  22F8               	addwfc	tblptru,f,c
 11182  0033B6                     	endif
 11183  0033B6  5022               	movf	__display_checked@cntr,w,c
 11184  0033B8  0D01               	mullw	1
 11185  0033BA  0E74               	movlw	low _display_content
 11186  0033BC  24F3               	addwf	prodl,w,c
 11187  0033BE  6ED9               	movwf	fsr2l,c
 11188  0033C0  0E01               	movlw	high _display_content
 11189  0033C2  20F4               	addwfc	prodh,w,c
 11190  0033C4  6EDA               	movwf	fsr2h,c
 11191  0033C6  0008               	tblrd		*
 11192  0033C8  CFF5 FFDF          	movff	tablat,indf2
 11193  0033CC  2A22               	incf	__display_checked@cntr,f,c
 11194  0033CE                     l1573:
 11195  0033CE  5022               	movf	__display_checked@cntr,w,c
 11196  0033D0  0D01               	mullw	1
 11197  0033D2  0EF9               	movlw	low _checked_line1
 11198  0033D4  24F3               	addwf	prodl,w,c
 11199  0033D6  6EF6               	movwf	tblptrl,c
 11200  0033D8  0E8D               	movlw	high _checked_line1
 11201  0033DA  20F4               	addwfc	prodh,w,c
 11202  0033DC  6EF7               	movwf	tblptrh,c
 11203  0033DE                     	if	1	;There are 3 active tblptr bytes
 11204  0033DE  6AF8               	clrf	tblptru,c
 11205  0033E0  0E00               	movlw	low (__mediumconst shr (0+16))
 11206  0033E2  22F8               	addwfc	tblptru,f,c
 11207  0033E4                     	endif
 11208  0033E4  0008               	tblrd		*
 11209  0033E6  50F5               	movf	tablat,w,c
 11210  0033E8  0900               	iorlw	0
 11211  0033EA  A4D8               	btfss	status,2,c
 11212  0033EC  D7D9               	goto	l1574
 11213                           
 11214                           ;display.c: 401: cntr = 0;
 11215  0033EE  0E00               	movlw	0
 11216  0033F0  6E22               	movwf	__display_checked@cntr,c
 11217                           
 11218                           ;display.c: 402: while(checked_line2[cntr])
 11219  0033F2  D017               	goto	l1576
 11220  0033F4                     
 11221                           ;display.c: 403: display_content[1][cntr] = checked_line2[cntr++];
 11222  0033F4  5022               	movf	__display_checked@cntr,w,c
 11223  0033F6  0D01               	mullw	1
 11224  0033F8  0ECD               	movlw	low _checked_line2
 11225  0033FA  24F3               	addwf	prodl,w,c
 11226  0033FC  6EF6               	movwf	tblptrl,c
 11227  0033FE  0E8C               	movlw	high _checked_line2
 11228  003400  20F4               	addwfc	prodh,w,c
 11229  003402  6EF7               	movwf	tblptrh,c
 11230  003404                     	if	1	;There are 3 active tblptr bytes
 11231  003404  6AF8               	clrf	tblptru,c
 11232  003406  0E00               	movlw	low (__mediumconst shr (0+16))
 11233  003408  22F8               	addwfc	tblptru,f,c
 11234  00340A                     	endif
 11235  00340A  5022               	movf	__display_checked@cntr,w,c
 11236  00340C  0D01               	mullw	1
 11237  00340E  0E88               	movlw	low (_display_content+20)
 11238  003410  24F3               	addwf	prodl,w,c
 11239  003412  6ED9               	movwf	fsr2l,c
 11240  003414  0E01               	movlw	high (_display_content+20)
 11241  003416  20F4               	addwfc	prodh,w,c
 11242  003418  6EDA               	movwf	fsr2h,c
 11243  00341A  0008               	tblrd		*
 11244  00341C  CFF5 FFDF          	movff	tablat,indf2
 11245  003420  2A22               	incf	__display_checked@cntr,f,c
 11246  003422                     l1576:
 11247  003422  5022               	movf	__display_checked@cntr,w,c
 11248  003424  0D01               	mullw	1
 11249  003426  0ECD               	movlw	low _checked_line2
 11250  003428  24F3               	addwf	prodl,w,c
 11251  00342A  6EF6               	movwf	tblptrl,c
 11252  00342C  0E8C               	movlw	high _checked_line2
 11253  00342E  20F4               	addwfc	prodh,w,c
 11254  003430  6EF7               	movwf	tblptrh,c
 11255  003432                     	if	1	;There are 3 active tblptr bytes
 11256  003432  6AF8               	clrf	tblptru,c
 11257  003434  0E00               	movlw	low (__mediumconst shr (0+16))
 11258  003436  22F8               	addwfc	tblptru,f,c
 11259  003438                     	endif
 11260  003438  0008               	tblrd		*
 11261  00343A  50F5               	movf	tablat,w,c
 11262  00343C  0900               	iorlw	0
 11263  00343E  A4D8               	btfss	status,2,c
 11264  003440  D7D9               	goto	l1577
 11265                           
 11266                           ;display.c: 405: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 11267  003442  ECCD  F03E         	call	_bootloader_get_total_entries	;wreg free
 11268  003446  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 11269  00344A  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 11270  00344E  6A1B               	clrf	__display_itoa_u16@value+2,c
 11271  003450  6A1C               	clrf	__display_itoa_u16@value+3,c
 11272  003452  0E9C               	movlw	low (_display_content+40)
 11273  003454  6E1D               	movwf	__display_itoa_u16@text,c
 11274  003456  0E01               	movlw	high (_display_content+40)
 11275  003458  6E1E               	movwf	__display_itoa_u16@text+1,c
 11276  00345A  ECDD  F027         	call	__display_itoa_u16	;wreg free
 11277  00345E  6E21               	movwf	__display_checked@start,c
 11278                           
 11279                           ;display.c: 406: start++;
 11280  003460  2A21               	incf	__display_checked@start,f,c
 11281                           
 11282                           ;display.c: 407: cntr = 0;
 11283  003462  0E00               	movlw	0
 11284  003464  6E22               	movwf	__display_checked@cntr,c
 11285                           
 11286                           ;display.c: 408: while(checked_line3[cntr])
 11287  003466  D01C               	goto	l1579
 11288  003468                     
 11289                           ;display.c: 409: display_content[2][start+cntr] = checked_line3[cntr++];
 11290  003468  5022               	movf	__display_checked@cntr,w,c
 11291  00346A  0D01               	mullw	1
 11292  00346C  0E73               	movlw	low _checked_line3
 11293  00346E  24F3               	addwf	prodl,w,c
 11294  003470  6EF6               	movwf	tblptrl,c
 11295  003472  0E8E               	movlw	high _checked_line3
 11296  003474  20F4               	addwfc	prodh,w,c
 11297  003476  6EF7               	movwf	tblptrh,c
 11298  003478                     	if	1	;There are 3 active tblptr bytes
 11299  003478  6AF8               	clrf	tblptru,c
 11300  00347A  0E00               	movlw	low (__mediumconst shr (0+16))
 11301  00347C  22F8               	addwfc	tblptru,f,c
 11302  00347E                     	endif
 11303  00347E  5022               	movf	__display_checked@cntr,w,c
 11304  003480  C021  F01F         	movff	__display_checked@start,??__display_checked
 11305  003484  6A20               	clrf	(??__display_checked+1)& (0+255),c
 11306  003486  261F               	addwf	??__display_checked,f,c
 11307  003488  0E00               	movlw	0
 11308  00348A  2220               	addwfc	??__display_checked+1,f,c
 11309  00348C  0E9C               	movlw	low (_display_content+40)
 11310  00348E  241F               	addwf	??__display_checked,w,c
 11311  003490  6ED9               	movwf	fsr2l,c
 11312  003492  0E01               	movlw	high (_display_content+40)
 11313  003494  2020               	addwfc	??__display_checked+1,w,c
 11314  003496  6EDA               	movwf	fsr2h,c
 11315  003498  0008               	tblrd		*
 11316  00349A  CFF5 FFDF          	movff	tablat,indf2
 11317  00349E  2A22               	incf	__display_checked@cntr,f,c
 11318  0034A0                     l1579:
 11319  0034A0  5022               	movf	__display_checked@cntr,w,c
 11320  0034A2  0D01               	mullw	1
 11321  0034A4  0E73               	movlw	low _checked_line3
 11322  0034A6  24F3               	addwf	prodl,w,c
 11323  0034A8  6EF6               	movwf	tblptrl,c
 11324  0034AA  0E8E               	movlw	high _checked_line3
 11325  0034AC  20F4               	addwfc	prodh,w,c
 11326  0034AE  6EF7               	movwf	tblptrh,c
 11327  0034B0                     	if	1	;There are 3 active tblptr bytes
 11328  0034B0  6AF8               	clrf	tblptru,c
 11329  0034B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11330  0034B4  22F8               	addwfc	tblptru,f,c
 11331  0034B6                     	endif
 11332  0034B6  0008               	tblrd		*
 11333  0034B8  50F5               	movf	tablat,w,c
 11334  0034BA  0900               	iorlw	0
 11335  0034BC  A4D8               	btfss	status,2,c
 11336  0034BE  D7D4               	goto	l1580
 11337                           
 11338                           ;display.c: 411: cntr = 0;
 11339  0034C0  0E00               	movlw	0
 11340  0034C2  6E22               	movwf	__display_checked@cntr,c
 11341                           
 11342                           ;display.c: 412: while(checked_line4[cntr])
 11343  0034C4  D017               	goto	l1582
 11344  0034C6                     
 11345                           ;display.c: 413: display_content[3][cntr] = checked_line4[cntr++];
 11346  0034C6  5022               	movf	__display_checked@cntr,w,c
 11347  0034C8  0D01               	mullw	1
 11348  0034CA  0E66               	movlw	low _checked_line4
 11349  0034CC  24F3               	addwf	prodl,w,c
 11350  0034CE  6EF6               	movwf	tblptrl,c
 11351  0034D0  0E8D               	movlw	high _checked_line4
 11352  0034D2  20F4               	addwfc	prodh,w,c
 11353  0034D4  6EF7               	movwf	tblptrh,c
 11354  0034D6                     	if	1	;There are 3 active tblptr bytes
 11355  0034D6  6AF8               	clrf	tblptru,c
 11356  0034D8  0E00               	movlw	low (__mediumconst shr (0+16))
 11357  0034DA  22F8               	addwfc	tblptru,f,c
 11358  0034DC                     	endif
 11359  0034DC  5022               	movf	__display_checked@cntr,w,c
 11360  0034DE  0D01               	mullw	1
 11361  0034E0  0EB0               	movlw	low (_display_content+60)
 11362  0034E2  24F3               	addwf	prodl,w,c
 11363  0034E4  6ED9               	movwf	fsr2l,c
 11364  0034E6  0E01               	movlw	high (_display_content+60)
 11365  0034E8  20F4               	addwfc	prodh,w,c
 11366  0034EA  6EDA               	movwf	fsr2h,c
 11367  0034EC  0008               	tblrd		*
 11368  0034EE  CFF5 FFDF          	movff	tablat,indf2
 11369  0034F2  2A22               	incf	__display_checked@cntr,f,c
 11370  0034F4                     l1582:
 11371  0034F4  5022               	movf	__display_checked@cntr,w,c
 11372  0034F6  0D01               	mullw	1
 11373  0034F8  0E66               	movlw	low _checked_line4
 11374  0034FA  24F3               	addwf	prodl,w,c
 11375  0034FC  6EF6               	movwf	tblptrl,c
 11376  0034FE  0E8D               	movlw	high _checked_line4
 11377  003500  20F4               	addwfc	prodh,w,c
 11378  003502  6EF7               	movwf	tblptrh,c
 11379  003504                     	if	1	;There are 3 active tblptr bytes
 11380  003504  6AF8               	clrf	tblptru,c
 11381  003506  0E00               	movlw	low (__mediumconst shr (0+16))
 11382  003508  22F8               	addwfc	tblptru,f,c
 11383  00350A                     	endif
 11384  00350A  0008               	tblrd		*
 11385  00350C  50F5               	movf	tablat,w,c
 11386  00350E  0900               	iorlw	0
 11387  003510  B4D8               	btfsc	status,2,c
 11388  003512  0012               	return	
 11389  003514  D7D8               	goto	l1583
 11390  003516                     __end_of__display_checked:
 11391                           	opt stack 0
 11392                           tblptru	equ	0xFF8
 11393                           tblptrh	equ	0xFF7
 11394                           tblptrl	equ	0xFF6
 11395                           tablat	equ	0xFF5
 11396                           prodh	equ	0xFF4
 11397                           prodl	equ	0xFF3
 11398                           intcon	equ	0xFF2
 11399                           intcon2	equ	0xFF1
 11400                           intcon3	equ	0xFF0
 11401                           postinc0	equ	0xFEE
 11402                           wreg	equ	0xFE8
 11403                           postdec1	equ	0xFE5
 11404                           plusw1	equ	0xFE3
 11405                           fsr1h	equ	0xFE2
 11406                           fsr1l	equ	0xFE1
 11407                           indf2	equ	0xFDF
 11408                           postinc2	equ	0xFDE
 11409                           plusw2	equ	0xFDB
 11410                           fsr2h	equ	0xFDA
 11411                           fsr2l	equ	0xFD9
 11412                           status	equ	0xFD8
 11413                           
 11414 ;; *************** function __display_itoa_u16 *****************
 11415 ;; Defined at:
 11416 ;;		line 79 in file "display.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;  value           4   24[COMRAM] unsigned long 
 11419 ;;  text            2   28[COMRAM] PTR unsigned char 
 11420 ;;		 -> display_content(80), 
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  1    wreg      unsigned char 
 11425 ;; Registers used:
 11426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11432 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11436 ;;Total ram usage:        6 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    3
 11439 ;; This function calls:
 11440 ;;		_itoa
 11441 ;; This function is called by:
 11442 ;;		__display_itoa_u32
 11443 ;;		__display_verify
 11444 ;;		__display_checked
 11445 ;;		__display_failed
 11446 ;;		__display_programming
 11447 ;;		__display_done
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text45
 11452  004FBA                     __ptext45:
 11453                           	opt stack 0
 11454  004FBA                     __display_itoa_u16:
 11455                           	opt stack 25
 11456                           
 11457                           ;display.c: 81: itoa(text, value, 10);
 11458                           
 11459                           ;incstack = 0
 11460  004FBA  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 11461  004FBE  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11462  004FC2  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 11463  004FC6  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 11464  004FCA  0E00               	movlw	0
 11465  004FCC  6E16               	movwf	itoa@base+1,c
 11466  004FCE  0E0A               	movlw	10
 11467  004FD0  6E15               	movwf	itoa@base,c
 11468  004FD2  EC33  F03A         	call	_itoa	;wreg free
 11469                           
 11470                           ;display.c: 82: if(value>9999)
 11471  004FD6  501C               	movf	__display_itoa_u16@value+3,w,c
 11472  004FD8  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11473  004FDA  E106               	bnz	u8750
 11474  004FDC  0E10               	movlw	16
 11475  004FDE  5C19               	subwf	__display_itoa_u16@value,w,c
 11476  004FE0  0E27               	movlw	39
 11477  004FE2  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11478  004FE4  A0D8               	btfss	status,0,c
 11479  004FE6  D00A               	goto	l1439
 11480  004FE8                     u8750:
 11481                           
 11482                           ;display.c: 83: {;display.c: 84: *(text+5) = ' ';
 11483  004FE8  EE20 F005          	lfsr	2,5
 11484  004FEC  501D               	movf	__display_itoa_u16@text,w,c
 11485  004FEE  26D9               	addwf	fsr2l,f,c
 11486  004FF0  501E               	movf	__display_itoa_u16@text+1,w,c
 11487  004FF2  22DA               	addwfc	fsr2h,f,c
 11488  004FF4  0E20               	movlw	32
 11489  004FF6  6EDF               	movwf	indf2,c
 11490                           
 11491                           ;display.c: 85: return 5;
 11492  004FF8  0E05               	movlw	5
 11493                           
 11494                           ;display.c: 86: }
 11495  004FFA  0012               	return	
 11496  004FFC                     l1439:
 11497                           
 11498                           ;display.c: 87: else if (value>999)
 11499  004FFC  501C               	movf	__display_itoa_u16@value+3,w,c
 11500  004FFE  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11501  005000  E106               	bnz	u8760
 11502  005002  0EE8               	movlw	232
 11503  005004  5C19               	subwf	__display_itoa_u16@value,w,c
 11504  005006  0E03               	movlw	3
 11505  005008  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11506  00500A  A0D8               	btfss	status,0,c
 11507  00500C  D00A               	goto	l1442
 11508  00500E                     u8760:
 11509                           
 11510                           ;display.c: 88: {;display.c: 89: *(text+4) = ' ';
 11511  00500E  EE20 F004          	lfsr	2,4
 11512  005012  501D               	movf	__display_itoa_u16@text,w,c
 11513  005014  26D9               	addwf	fsr2l,f,c
 11514  005016  501E               	movf	__display_itoa_u16@text+1,w,c
 11515  005018  22DA               	addwfc	fsr2h,f,c
 11516  00501A  0E20               	movlw	32
 11517  00501C  6EDF               	movwf	indf2,c
 11518                           
 11519                           ;display.c: 90: return 4;
 11520  00501E  0E04               	movlw	4
 11521                           
 11522                           ;display.c: 91: }
 11523  005020  0012               	return	
 11524  005022                     l1442:
 11525                           
 11526                           ;display.c: 92: else if (value>99)
 11527  005022  501C               	movf	__display_itoa_u16@value+3,w,c
 11528  005024  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11529  005026  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11530  005028  E104               	bnz	u8770
 11531  00502A  0E64               	movlw	100
 11532  00502C  5C19               	subwf	__display_itoa_u16@value,w,c
 11533  00502E  A0D8               	btfss	status,0,c
 11534  005030  D00A               	goto	l1444
 11535  005032                     u8770:
 11536                           
 11537                           ;display.c: 93: {;display.c: 94: *(text+3) = ' ';
 11538  005032  EE20 F003          	lfsr	2,3
 11539  005036  501D               	movf	__display_itoa_u16@text,w,c
 11540  005038  26D9               	addwf	fsr2l,f,c
 11541  00503A  501E               	movf	__display_itoa_u16@text+1,w,c
 11542  00503C  22DA               	addwfc	fsr2h,f,c
 11543  00503E  0E20               	movlw	32
 11544  005040  6EDF               	movwf	indf2,c
 11545                           
 11546                           ;display.c: 95: return 3;
 11547  005042  0E03               	movlw	3
 11548                           
 11549                           ;display.c: 96: }
 11550  005044  0012               	return	
 11551  005046                     l1444:
 11552                           
 11553                           ;display.c: 97: else if (value>9)
 11554  005046  501C               	movf	__display_itoa_u16@value+3,w,c
 11555  005048  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11556  00504A  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11557  00504C  E104               	bnz	u8780
 11558  00504E  0E0A               	movlw	10
 11559  005050  5C19               	subwf	__display_itoa_u16@value,w,c
 11560  005052  A0D8               	btfss	status,0,c
 11561  005054  D00A               	goto	l1446
 11562  005056                     u8780:
 11563                           
 11564                           ;display.c: 98: {;display.c: 99: *(text+2) = ' ';
 11565  005056  EE20 F002          	lfsr	2,2
 11566  00505A  501D               	movf	__display_itoa_u16@text,w,c
 11567  00505C  26D9               	addwf	fsr2l,f,c
 11568  00505E  501E               	movf	__display_itoa_u16@text+1,w,c
 11569  005060  22DA               	addwfc	fsr2h,f,c
 11570  005062  0E20               	movlw	32
 11571  005064  6EDF               	movwf	indf2,c
 11572                           
 11573                           ;display.c: 100: return 2;
 11574  005066  0E02               	movlw	2
 11575                           
 11576                           ;display.c: 101: }
 11577  005068  0012               	return	
 11578  00506A                     l1446:
 11579                           
 11580                           ;display.c: 102: else;display.c: 103: {;display.c: 104: *(text+1) = ' ';
 11581  00506A  EE20 F001          	lfsr	2,1
 11582  00506E  501D               	movf	__display_itoa_u16@text,w,c
 11583  005070  26D9               	addwf	fsr2l,f,c
 11584  005072  501E               	movf	__display_itoa_u16@text+1,w,c
 11585  005074  22DA               	addwfc	fsr2h,f,c
 11586  005076  0E20               	movlw	32
 11587  005078  6EDF               	movwf	indf2,c
 11588                           
 11589                           ;display.c: 105: return 1;
 11590  00507A  0E01               	movlw	1
 11591  00507C  0012               	return	
 11592  00507E                     __end_of__display_itoa_u16:
 11593                           	opt stack 0
 11594                           tblptru	equ	0xFF8
 11595                           tblptrh	equ	0xFF7
 11596                           tblptrl	equ	0xFF6
 11597                           tablat	equ	0xFF5
 11598                           prodh	equ	0xFF4
 11599                           prodl	equ	0xFF3
 11600                           intcon	equ	0xFF2
 11601                           intcon2	equ	0xFF1
 11602                           intcon3	equ	0xFF0
 11603                           postinc0	equ	0xFEE
 11604                           wreg	equ	0xFE8
 11605                           postdec1	equ	0xFE5
 11606                           plusw1	equ	0xFE3
 11607                           fsr1h	equ	0xFE2
 11608                           fsr1l	equ	0xFE1
 11609                           indf2	equ	0xFDF
 11610                           postinc2	equ	0xFDE
 11611                           plusw2	equ	0xFDB
 11612                           fsr2h	equ	0xFDA
 11613                           fsr2l	equ	0xFD9
 11614                           status	equ	0xFD8
 11615                           
 11616 ;; *************** function _itoa *****************
 11617 ;; Defined at:
 11618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;  buf             2   16[COMRAM] PTR unsigned char 
 11621 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11622 ;;  val             2   18[COMRAM] int 
 11623 ;;  base            2   20[COMRAM] int 
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11626 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  2   16[COMRAM] PTR unsigned char 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11636 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11639 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11640 ;;Total ram usage:        8 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    2
 11643 ;; This function calls:
 11644 ;;		_utoa
 11645 ;; This function is called by:
 11646 ;;		__display_itoa_u16
 11647 ;;		__display_itoa_u32
 11648 ;;		__display_itoa
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text46
 11653  007466                     __ptext46:
 11654                           	opt stack 0
 11655  007466                     _itoa:
 11656                           	opt stack 25
 11657                           
 11658                           ;incstack = 0
 11659  007466  C011  F017         	movff	itoa@buf,itoa@cp
 11660  00746A  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 11661  00746E  AE14               	btfss	itoa@val+1,7,c
 11662  007470  D00C               	goto	l3442
 11663  007472  C011  FFD9         	movff	itoa@buf,fsr2l
 11664  007476  C012  FFDA         	movff	itoa@buf+1,fsr2h
 11665  00747A  0E2D               	movlw	45
 11666  00747C  6EDF               	movwf	indf2,c
 11667  00747E  4A11               	infsnz	itoa@buf,f,c
 11668  007480  2A12               	incf	itoa@buf+1,f,c
 11669  007482  6C13               	negf	itoa@val,c
 11670  007484  1E14               	comf	itoa@val+1,f,c
 11671  007486  B0D8               	btfsc	status,0,c
 11672  007488  2A14               	incf	itoa@val+1,f,c
 11673  00748A                     l3442:
 11674  00748A  C011  F008         	movff	itoa@buf,utoa@buf
 11675  00748E  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 11676  007492  C013  F00A         	movff	itoa@val,utoa@val
 11677  007496  C014  F00B         	movff	itoa@val+1,utoa@val+1
 11678  00749A  C015  F00C         	movff	itoa@base,utoa@base
 11679  00749E  C016  F00D         	movff	itoa@base+1,utoa@base+1
 11680  0074A2  EC7E  F02C         	call	_utoa	;wreg free
 11681  0074A6  0012               	return	
 11682  0074A8                     __end_of_itoa:
 11683                           	opt stack 0
 11684                           tblptru	equ	0xFF8
 11685                           tblptrh	equ	0xFF7
 11686                           tblptrl	equ	0xFF6
 11687                           tablat	equ	0xFF5
 11688                           prodh	equ	0xFF4
 11689                           prodl	equ	0xFF3
 11690                           intcon	equ	0xFF2
 11691                           intcon2	equ	0xFF1
 11692                           intcon3	equ	0xFF0
 11693                           postinc0	equ	0xFEE
 11694                           wreg	equ	0xFE8
 11695                           postdec1	equ	0xFE5
 11696                           plusw1	equ	0xFE3
 11697                           fsr1h	equ	0xFE2
 11698                           fsr1l	equ	0xFE1
 11699                           indf2	equ	0xFDF
 11700                           postinc2	equ	0xFDE
 11701                           plusw2	equ	0xFDB
 11702                           fsr2h	equ	0xFDA
 11703                           fsr2l	equ	0xFD9
 11704                           status	equ	0xFD8
 11705                           
 11706 ;; *************** function _utoa *****************
 11707 ;; Defined at:
 11708 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  buf             2    7[COMRAM] PTR unsigned char 
 11711 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11712 ;;  val             2    9[COMRAM] unsigned int 
 11713 ;;  base            2   11[COMRAM] int 
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;  v               2   13[COMRAM] unsigned int 
 11716 ;;  c               1   15[COMRAM] unsigned char 
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  2    7[COMRAM] PTR unsigned char 
 11719 ;; Registers used:
 11720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11726 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11727 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11729 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11730 ;;Total ram usage:        9 bytes
 11731 ;; Hardware stack levels used:    1
 11732 ;; Hardware stack levels required when called:    1
 11733 ;; This function calls:
 11734 ;;		___lwdiv
 11735 ;;		___lwmod
 11736 ;; This function is called by:
 11737 ;;		_itoa
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text47
 11742  0058FC                     __ptext47:
 11743                           	opt stack 0
 11744  0058FC                     _utoa:
 11745                           	opt stack 25
 11746                           
 11747                           ;incstack = 0
 11748  0058FC  C00A  F00E         	movff	utoa@val,utoa@v
 11749  005900  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 11750  005904  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 11751  005908  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 11752  00590C  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11753  005910  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11754  005914  EC03  F039         	call	___lwdiv	;wreg free
 11755  005918  C001  F00E         	movff	?___lwdiv,utoa@v
 11756  00591C  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 11757  005920  4A08               	infsnz	utoa@buf,f,c
 11758  005922  2A09               	incf	utoa@buf+1,f,c
 11759  005924  500E               	movf	utoa@v,w,c
 11760  005926  100F               	iorwf	utoa@v+1,w,c
 11761  005928  A4D8               	btfss	status,2,c
 11762  00592A  D7EC               	goto	l3446
 11763  00592C  C008  FFD9         	movff	utoa@buf,fsr2l
 11764  005930  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11765  005934  0E00               	movlw	0
 11766  005936  6EDF               	movwf	indf2,c
 11767  005938  0608               	decf	utoa@buf,f,c
 11768  00593A  A0D8               	btfss	status,0,c
 11769  00593C  0609               	decf	utoa@buf+1,f,c
 11770  00593E  C00A  F001         	movff	utoa@val,___lwmod@dividend
 11771  005942  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 11772  005946  C00C  F003         	movff	utoa@base,___lwmod@divisor
 11773  00594A  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 11774  00594E  EC54  F03A         	call	___lwmod	;wreg free
 11775  005952  5001               	movf	?___lwmod,w,c
 11776  005954  6E10               	movwf	utoa@c,c
 11777  005956  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 11778  00595A  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 11779  00595E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11780  005962  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11781  005966  EC03  F039         	call	___lwdiv	;wreg free
 11782  00596A  C001  F00A         	movff	?___lwdiv,utoa@val
 11783  00596E  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 11784  005972  0E09               	movlw	9
 11785  005974  6410               	cpfsgt	utoa@c,c
 11786  005976  D002               	goto	l3449
 11787  005978  0E07               	movlw	7
 11788  00597A  2610               	addwf	utoa@c,f,c
 11789  00597C                     l3449:
 11790  00597C  0E30               	movlw	48
 11791  00597E  2610               	addwf	utoa@c,f,c
 11792  005980  C008  FFD9         	movff	utoa@buf,fsr2l
 11793  005984  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11794  005988  C010  FFDF         	movff	utoa@c,indf2
 11795  00598C  0608               	decf	utoa@buf,f,c
 11796  00598E  A0D8               	btfss	status,0,c
 11797  005990  0609               	decf	utoa@buf+1,f,c
 11798  005992  500A               	movf	utoa@val,w,c
 11799  005994  100B               	iorwf	utoa@val+1,w,c
 11800  005996  A4D8               	btfss	status,2,c
 11801  005998  D7D2               	goto	l3448
 11802                           
 11803                           ;	Return value of _utoa is never used
 11804  00599A  4A08               	infsnz	utoa@buf,f,c
 11805  00599C  2A09               	incf	utoa@buf+1,f,c
 11806  00599E  0012               	return	
 11807  0059A0                     __end_of_utoa:
 11808                           	opt stack 0
 11809                           tblptru	equ	0xFF8
 11810                           tblptrh	equ	0xFF7
 11811                           tblptrl	equ	0xFF6
 11812                           tablat	equ	0xFF5
 11813                           prodh	equ	0xFF4
 11814                           prodl	equ	0xFF3
 11815                           intcon	equ	0xFF2
 11816                           intcon2	equ	0xFF1
 11817                           intcon3	equ	0xFF0
 11818                           postinc0	equ	0xFEE
 11819                           wreg	equ	0xFE8
 11820                           postdec1	equ	0xFE5
 11821                           plusw1	equ	0xFE3
 11822                           fsr1h	equ	0xFE2
 11823                           fsr1l	equ	0xFE1
 11824                           indf2	equ	0xFDF
 11825                           postinc2	equ	0xFDE
 11826                           plusw2	equ	0xFDB
 11827                           fsr2h	equ	0xFDA
 11828                           fsr2l	equ	0xFD9
 11829                           status	equ	0xFD8
 11830                           
 11831 ;; *************** function ___lwmod *****************
 11832 ;; Defined at:
 11833 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  dividend        2    0[COMRAM] unsigned int 
 11836 ;;  divisor         2    2[COMRAM] unsigned int 
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;  counter         1    4[COMRAM] unsigned char 
 11839 ;; Return value:  Size  Location     Type
 11840 ;;                  2    0[COMRAM] unsigned int 
 11841 ;; Registers used:
 11842 ;;		wreg, status,2, status,0
 11843 ;; Tracked objects:
 11844 ;;		On entry : 0/0
 11845 ;;		On exit  : 0/0
 11846 ;;		Unchanged: 0/0
 11847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11851 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11852 ;;Total ram usage:        5 bytes
 11853 ;; Hardware stack levels used:    1
 11854 ;; This function calls:
 11855 ;;		Nothing
 11856 ;; This function is called by:
 11857 ;;		_utoa
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           	psect	text48
 11862  0074A8                     __ptext48:
 11863                           	opt stack 0
 11864  0074A8                     ___lwmod:
 11865                           	opt stack 25
 11866                           
 11867                           ;incstack = 0
 11868  0074A8  5003               	movf	___lwmod@divisor,w,c
 11869  0074AA  1004               	iorwf	___lwmod@divisor+1,w,c
 11870  0074AC  B4D8               	btfsc	status,2,c
 11871  0074AE  D018               	goto	l3273
 11872  0074B0  0E01               	movlw	1
 11873  0074B2  6E05               	movwf	___lwmod@counter,c
 11874  0074B4  D004               	goto	l3268
 11875  0074B6  90D8               	bcf	status,0,c
 11876  0074B8  3603               	rlcf	___lwmod@divisor,f,c
 11877  0074BA  3604               	rlcf	___lwmod@divisor+1,f,c
 11878  0074BC  2A05               	incf	___lwmod@counter,f,c
 11879  0074BE                     l3268:
 11880  0074BE  AE04               	btfss	___lwmod@divisor+1,7,c
 11881  0074C0  D7FA               	goto	l3269
 11882  0074C2                     u6940:
 11883  0074C2  5003               	movf	___lwmod@divisor,w,c
 11884  0074C4  5C01               	subwf	___lwmod@dividend,w,c
 11885  0074C6  5004               	movf	___lwmod@divisor+1,w,c
 11886  0074C8  5802               	subwfb	___lwmod@dividend+1,w,c
 11887  0074CA  A0D8               	btfss	status,0,c
 11888  0074CC  D004               	goto	l3272
 11889  0074CE  5003               	movf	___lwmod@divisor,w,c
 11890  0074D0  5E01               	subwf	___lwmod@dividend,f,c
 11891  0074D2  5004               	movf	___lwmod@divisor+1,w,c
 11892  0074D4  5A02               	subwfb	___lwmod@dividend+1,f,c
 11893  0074D6                     l3272:
 11894  0074D6  90D8               	bcf	status,0,c
 11895  0074D8  3204               	rrcf	___lwmod@divisor+1,f,c
 11896  0074DA  3203               	rrcf	___lwmod@divisor,f,c
 11897  0074DC  2E05               	decfsz	___lwmod@counter,f,c
 11898  0074DE  D7F1               	goto	u6940
 11899  0074E0                     l3273:
 11900  0074E0  C001  F001         	movff	___lwmod@dividend,?___lwmod
 11901  0074E4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 11902  0074E8  0012               	return		;funcret
 11903  0074EA                     __end_of___lwmod:
 11904                           	opt stack 0
 11905                           tblptru	equ	0xFF8
 11906                           tblptrh	equ	0xFF7
 11907                           tblptrl	equ	0xFF6
 11908                           tablat	equ	0xFF5
 11909                           prodh	equ	0xFF4
 11910                           prodl	equ	0xFF3
 11911                           intcon	equ	0xFF2
 11912                           intcon2	equ	0xFF1
 11913                           intcon3	equ	0xFF0
 11914                           postinc0	equ	0xFEE
 11915                           wreg	equ	0xFE8
 11916                           postdec1	equ	0xFE5
 11917                           plusw1	equ	0xFE3
 11918                           fsr1h	equ	0xFE2
 11919                           fsr1l	equ	0xFE1
 11920                           indf2	equ	0xFDF
 11921                           postinc2	equ	0xFDE
 11922                           plusw2	equ	0xFDB
 11923                           fsr2h	equ	0xFDA
 11924                           fsr2l	equ	0xFD9
 11925                           status	equ	0xFD8
 11926                           
 11927 ;; *************** function ___lwdiv *****************
 11928 ;; Defined at:
 11929 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  dividend        2    0[COMRAM] unsigned int 
 11932 ;;  divisor         2    2[COMRAM] unsigned int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  quotient        2    4[COMRAM] unsigned int 
 11935 ;;  counter         1    6[COMRAM] unsigned char 
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  2    0[COMRAM] unsigned int 
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11949 ;;Total ram usage:        7 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; This function calls:
 11952 ;;		Nothing
 11953 ;; This function is called by:
 11954 ;;		_utoa
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text49
 11959  007206                     __ptext49:
 11960                           	opt stack 0
 11961  007206                     ___lwdiv:
 11962                           	opt stack 25
 11963                           
 11964                           ;incstack = 0
 11965  007206  0E00               	movlw	0
 11966  007208  6E06               	movwf	___lwdiv@quotient+1,c
 11967  00720A  0E00               	movlw	0
 11968  00720C  6E05               	movwf	___lwdiv@quotient,c
 11969  00720E  5003               	movf	___lwdiv@divisor,w,c
 11970  007210  1004               	iorwf	___lwdiv@divisor+1,w,c
 11971  007212  B4D8               	btfsc	status,2,c
 11972  007214  D01C               	goto	l3263
 11973  007216  0E01               	movlw	1
 11974  007218  6E07               	movwf	___lwdiv@counter,c
 11975  00721A  D004               	goto	l3258
 11976  00721C  90D8               	bcf	status,0,c
 11977  00721E  3603               	rlcf	___lwdiv@divisor,f,c
 11978  007220  3604               	rlcf	___lwdiv@divisor+1,f,c
 11979  007222  2A07               	incf	___lwdiv@counter,f,c
 11980  007224                     l3258:
 11981  007224  AE04               	btfss	___lwdiv@divisor+1,7,c
 11982  007226  D7FA               	goto	l3259
 11983  007228                     u6910:
 11984  007228  90D8               	bcf	status,0,c
 11985  00722A  3605               	rlcf	___lwdiv@quotient,f,c
 11986  00722C  3606               	rlcf	___lwdiv@quotient+1,f,c
 11987  00722E  5003               	movf	___lwdiv@divisor,w,c
 11988  007230  5C01               	subwf	___lwdiv@dividend,w,c
 11989  007232  5004               	movf	___lwdiv@divisor+1,w,c
 11990  007234  5802               	subwfb	___lwdiv@dividend+1,w,c
 11991  007236  A0D8               	btfss	status,0,c
 11992  007238  D005               	goto	l3262
 11993  00723A  5003               	movf	___lwdiv@divisor,w,c
 11994  00723C  5E01               	subwf	___lwdiv@dividend,f,c
 11995  00723E  5004               	movf	___lwdiv@divisor+1,w,c
 11996  007240  5A02               	subwfb	___lwdiv@dividend+1,f,c
 11997  007242  8005               	bsf	___lwdiv@quotient,0,c
 11998  007244                     l3262:
 11999  007244  90D8               	bcf	status,0,c
 12000  007246  3204               	rrcf	___lwdiv@divisor+1,f,c
 12001  007248  3203               	rrcf	___lwdiv@divisor,f,c
 12002  00724A  2E07               	decfsz	___lwdiv@counter,f,c
 12003  00724C  D7ED               	goto	u6910
 12004  00724E                     l3263:
 12005  00724E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 12006  007252  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12007  007256  0012               	return		;funcret
 12008  007258                     __end_of___lwdiv:
 12009                           	opt stack 0
 12010                           tblptru	equ	0xFF8
 12011                           tblptrh	equ	0xFF7
 12012                           tblptrl	equ	0xFF6
 12013                           tablat	equ	0xFF5
 12014                           prodh	equ	0xFF4
 12015                           prodl	equ	0xFF3
 12016                           intcon	equ	0xFF2
 12017                           intcon2	equ	0xFF1
 12018                           intcon3	equ	0xFF0
 12019                           postinc0	equ	0xFEE
 12020                           wreg	equ	0xFE8
 12021                           postdec1	equ	0xFE5
 12022                           plusw1	equ	0xFE3
 12023                           fsr1h	equ	0xFE2
 12024                           fsr1l	equ	0xFE1
 12025                           indf2	equ	0xFDF
 12026                           postinc2	equ	0xFDE
 12027                           plusw2	equ	0xFDB
 12028                           fsr2h	equ	0xFDA
 12029                           fsr2l	equ	0xFD9
 12030                           status	equ	0xFD8
 12031                           
 12032 ;; *************** function _bootloader_run *****************
 12033 ;; Defined at:
 12034 ;;		line 60 in file "bootloader.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;  timeslot        1    wreg     unsigned char 
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;  timeslot        1   92[COMRAM] unsigned char 
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  1    wreg      void 
 12041 ;; Registers used:
 12042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/0
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12052 ;;Total ram usage:        1 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:    9
 12055 ;; This function calls:
 12056 ;;		__bootloader_find_file
 12057 ;;		__bootloader_program
 12058 ;;		__bootloader_verify_file
 12059 ;; This function is called by:
 12060 ;;		_main
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text50
 12065  006D9A                     __ptext50:
 12066                           	opt stack 0
 12067  006D9A                     _bootloader_run:
 12068                           	opt stack 21
 12069                           
 12070                           ;incstack = 0
 12071                           ;bootloader_run@timeslot stored from wreg
 12072  006D9A  6E5D               	movwf	bootloader_run@timeslot,c
 12073                           
 12074                           ;bootloader.c: 62: switch(os.bootloader_mode)
 12075  006D9C  D015               	goto	l2240
 12076  006D9E                     
 12077                           ;bootloader.c: 65: if(timeslot==0)
 12078  006D9E  505D               	movf	bootloader_run@timeslot,w,c
 12079  006DA0  A4D8               	btfss	status,2,c
 12080  006DA2  0012               	return	
 12081                           
 12082                           ;bootloader.c: 66: {;bootloader.c: 67: _bootloader_find_file();
 12083  006DA4  EC21  F02D         	call	__bootloader_find_file	;wreg free
 12084                           
 12085                           ;bootloader.c: 68: };bootloader.c: 69: break;
 12086  006DA8  0012               	return	
 12087  006DAA                     
 12088                           ;bootloader.c: 72: if(timeslot==0)
 12089  006DAA  505D               	movf	bootloader_run@timeslot,w,c
 12090  006DAC  A4D8               	btfss	status,2,c
 12091  006DAE  0012               	return	
 12092                           
 12093                           ;bootloader.c: 73: {;bootloader.c: 74: _bootloader_find_file();
 12094  006DB0  EC21  F02D         	call	__bootloader_find_file	;wreg free
 12095                           
 12096                           ;bootloader.c: 75: };bootloader.c: 76: break;
 12097  006DB4  0012               	return	
 12098  006DB6                     
 12099                           ;bootloader.c: 79: _bootloader_verify_file();
 12100  006DB6  EC16  F009         	call	__bootloader_verify_file	;wreg free
 12101                           
 12102                           ;bootloader.c: 86: break;
 12103                           
 12104                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_FAILED:
 12105                           
 12106                           ;bootloader.c: 83: break;
 12107                           
 12108                           ;bootloader.c: 82: case BOOTLOADER_MODE_CHECK_COMPLETE:
 12109                           
 12110                           ;bootloader.c: 80: break;
 12111  006DBA  0012               	return	
 12112  006DBC                     
 12113                           ;bootloader.c: 89: if(timeslot==0)
 12114  006DBC  505D               	movf	bootloader_run@timeslot,w,c
 12115  006DBE  A4D8               	btfss	status,2,c
 12116  006DC0  0012               	return	
 12117                           
 12118                           ;bootloader.c: 90: {;bootloader.c: 91: _bootloader_program();
 12119  006DC2  ECE4  F005         	call	__bootloader_program	;wreg free
 12120                           
 12121                           ;bootloader.c: 97: }
 12122                           
 12123                           ;bootloader.c: 96: break;
 12124                           
 12125                           ;bootloader.c: 95: case BOOTLOADER_MODE_DONE:
 12126                           
 12127                           ;bootloader.c: 92: };bootloader.c: 93: break;
 12128  006DC6  0012               	return	
 12129  006DC8                     l2240:
 12130  006DC8  0100               	movlb	0	; () banked
 12131  006DCA  5164               	movf	(_os+4)& (0+255),w,b	;volatile
 12132                           
 12133                           ; Switch size 1, requested type "space"
 12134                           ; Number of cases is 7, Range of values is 0 to 96
 12135                           ; switch strategies available:
 12136                           ; Name         Instructions Cycles
 12137                           ; simple_byte           22    12 (average)
 12138                           ;	Chosen strategy is simple_byte
 12139  006DCC  0A00               	xorlw	0	; case 0
 12140  006DCE  B4D8               	btfsc	status,2,c
 12141  006DD0  D7E6               	goto	l2241
 12142  006DD2  0A10               	xorlw	16	; case 16
 12143  006DD4  B4D8               	btfsc	status,2,c
 12144  006DD6  D7E9               	goto	l2244
 12145  006DD8  0A30               	xorlw	48	; case 32
 12146  006DDA  B4D8               	btfsc	status,2,c
 12147  006DDC  D7EC               	goto	l2246
 12148  006DDE  0A10               	xorlw	16	; case 48
 12149  006DE0  B4D8               	btfsc	status,2,c
 12150  006DE2  0012               	return	
 12151  006DE4  0A70               	xorlw	112	; case 64
 12152  006DE6  B4D8               	btfsc	status,2,c
 12153  006DE8  0012               	return	
 12154  006DEA  0A10               	xorlw	16	; case 80
 12155  006DEC  B4D8               	btfsc	status,2,c
 12156  006DEE  D7E6               	goto	l2249
 12157  006DF0  0A30               	xorlw	48	; case 96
 12158  006DF2  0012               	return	
 12159  006DF4                     __end_of_bootloader_run:
 12160                           	opt stack 0
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodh	equ	0xFF4
 12166                           prodl	equ	0xFF3
 12167                           intcon	equ	0xFF2
 12168                           intcon2	equ	0xFF1
 12169                           intcon3	equ	0xFF0
 12170                           postinc0	equ	0xFEE
 12171                           wreg	equ	0xFE8
 12172                           postdec1	equ	0xFE5
 12173                           plusw1	equ	0xFE3
 12174                           fsr1h	equ	0xFE2
 12175                           fsr1l	equ	0xFE1
 12176                           indf2	equ	0xFDF
 12177                           postinc2	equ	0xFDE
 12178                           plusw2	equ	0xFDB
 12179                           fsr2h	equ	0xFDA
 12180                           fsr2l	equ	0xFD9
 12181                           status	equ	0xFD8
 12182                           
 12183 ;; *************** function __bootloader_verify_file *****************
 12184 ;; Defined at:
 12185 ;;		line 173 in file "bootloader.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;		None
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;  address32       4   50[BANK0 ] unsigned long 
 12190 ;;  return_value    4   46[BANK0 ] unsigned long 
 12191 ;;  rec_counter     1   45[BANK0 ] unsigned char 
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  1    wreg      void 
 12194 ;; Registers used:
 12195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12196 ;; Tracked objects:
 12197 ;;		On entry : 0/0
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12202 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12203 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12204 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12205 ;;Total ram usage:       17 bytes
 12206 ;; Hardware stack levels used:    1
 12207 ;; Hardware stack levels required when called:    8
 12208 ;; This function calls:
 12209 ;;		__bootloader_check_address
 12210 ;;		_fat_get_file_size
 12211 ;;		_fat_read_from_file
 12212 ;;		_parseHexFileEntry
 12213 ;; This function is called by:
 12214 ;;		_bootloader_run
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           	psect	text51
 12219  00122C                     __ptext51:
 12220                           	opt stack 0
 12221  00122C                     __bootloader_verify_file:
 12222                           	opt stack 21
 12223                           
 12224                           ;bootloader.c: 175: uint8_t rec_counter;;bootloader.c: 176: uint32_t return_value = 0;
 12225                           
 12226                           ;incstack = 0
 12227  00122C  0E00               	movlw	0
 12228  00122E  0100               	movlb	0	; () banked
 12229  001230  6FE3               	movwf	__bootloader_verify_file@return_value& (0+255),b
 12230  001232  0E00               	movlw	0
 12231  001234  6FE4               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
 12232  001236  0E00               	movlw	0
 12233  001238  6FE5               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
 12234  00123A  0E00               	movlw	0
 12235  00123C  6FE6               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;bootloader.c: 177: uint32_t address32;;bootloader.c: 180: hex_file_size = fat_get_file_
      +                          size(file_number);
 12239  00123E  51FE               	movf	_file_number& (0+255),w,b
 12240  001240  EC56  F033         	call	_fat_get_file_size
 12241  001244  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 12242  001248  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 12243  00124C  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 12244  001250  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 12245                           
 12246                           ;bootloader.c: 183: for(rec_counter=0; rec_counter<1; ++rec_counter)
 12247  001254  0E00               	movlw	0
 12248  001256  0100               	movlb	0	; () banked
 12249  001258  6FE2               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
 12250  00125A                     l13936:
 12251                           
 12252                           ; BSR set to: 0
 12253  00125A  51E2               	movf	__bootloader_verify_file@rec_counter& (0+255),w,b
 12254  00125C  A4D8               	btfss	status,2,c
 12255  00125E  0012               	return	
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;bootloader.c: 184: {;bootloader.c: 186: if((hex_file_size-hex_file_offset)>=50)
 12259                           
 12260                           ; BSR set to: 0
 12261                           
 12262                           ; BSR set to: 0
 12263  001260  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
 12264  001264  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 12265  001268  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 12266  00126C  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 12267  001270  1E55               	comf	??__bootloader_verify_file,f,c
 12268  001272  1E56               	comf	??__bootloader_verify_file+1,f,c
 12269  001274  1E57               	comf	??__bootloader_verify_file+2,f,c
 12270  001276  1E58               	comf	??__bootloader_verify_file+3,f,c
 12271  001278  2A55               	incf	??__bootloader_verify_file,f,c
 12272  00127A  0E00               	movlw	0
 12273  00127C  2256               	addwfc	??__bootloader_verify_file+1,f,c
 12274  00127E  2257               	addwfc	??__bootloader_verify_file+2,f,c
 12275  001280  2258               	addwfc	??__bootloader_verify_file+3,f,c
 12276  001282  5178               	movf	_hex_file_size& (0+255),w,b
 12277  001284  2455               	addwf	??__bootloader_verify_file,w,c
 12278  001286  6E59               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 12279  001288  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12280  00128A  2056               	addwfc	??__bootloader_verify_file+1,w,c
 12281  00128C  6E5A               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 12282  00128E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12283  001290  2057               	addwfc	??__bootloader_verify_file+2,w,c
 12284  001292  6E5B               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 12285  001294  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12286  001296  2058               	addwfc	??__bootloader_verify_file+3,w,c
 12287  001298  6E5C               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 12288  00129A  505C               	movf	??__bootloader_verify_file+7,w,c
 12289  00129C  105B               	iorwf	??__bootloader_verify_file+6,w,c
 12290  00129E  105A               	iorwf	??__bootloader_verify_file+5,w,c
 12291  0012A0  E104               	bnz	u10880
 12292  0012A2  0E32               	movlw	50
 12293  0012A4  5C59               	subwf	??__bootloader_verify_file+4,w,c
 12294  0012A6  A0D8               	btfss	status,0,c
 12295  0012A8  D018               	goto	l2274
 12296  0012AA                     u10880:
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;bootloader.c: 187: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 12300  0012AA  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12301  0012AE  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12302  0012B2  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12303  0012B6  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12304  0012BA  0E32               	movlw	50
 12305  0012BC  6E43               	movwf	fat_read_from_file@length,c
 12306  0012BE  0E00               	movlw	0
 12307  0012C0  6E44               	movwf	fat_read_from_file@length+1,c
 12308  0012C2  0E00               	movlw	0
 12309  0012C4  6E45               	movwf	fat_read_from_file@length+2,c
 12310  0012C6  0E00               	movlw	0
 12311  0012C8  6E46               	movwf	fat_read_from_file@length+3,c
 12312  0012CA  0EC0               	movlw	low _file_buffer
 12313  0012CC  6E47               	movwf	fat_read_from_file@data,c
 12314  0012CE  0E02               	movlw	high _file_buffer
 12315  0012D0  6E48               	movwf	fat_read_from_file@data+1,c
 12316  0012D2  51FE               	movf	_file_number& (0+255),w,b
 12317  0012D4  EC7A  F00F         	call	_fat_read_from_file
 12318  0012D8  D02D               	goto	l2275
 12319  0012DA                     l2274:
 12320                           
 12321                           ;bootloader.c: 188: else;bootloader.c: 189: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
 12322  0012DA  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12323  0012DE  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12324  0012E2  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12325  0012E6  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12326  0012EA  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
 12327  0012EE  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 12328  0012F2  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 12329  0012F6  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 12330  0012FA  1E55               	comf	??__bootloader_verify_file,f,c
 12331  0012FC  1E56               	comf	??__bootloader_verify_file+1,f,c
 12332  0012FE  1E57               	comf	??__bootloader_verify_file+2,f,c
 12333  001300  1E58               	comf	??__bootloader_verify_file+3,f,c
 12334  001302  2A55               	incf	??__bootloader_verify_file,f,c
 12335  001304  0E00               	movlw	0
 12336  001306  2256               	addwfc	??__bootloader_verify_file+1,f,c
 12337  001308  2257               	addwfc	??__bootloader_verify_file+2,f,c
 12338  00130A  2258               	addwfc	??__bootloader_verify_file+3,f,c
 12339  00130C  0100               	movlb	0	; () banked
 12340  00130E  5178               	movf	_hex_file_size& (0+255),w,b
 12341  001310  2455               	addwf	??__bootloader_verify_file,w,c
 12342  001312  6E43               	movwf	fat_read_from_file@length,c
 12343  001314  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12344  001316  2056               	addwfc	??__bootloader_verify_file+1,w,c
 12345  001318  6E44               	movwf	fat_read_from_file@length+1,c
 12346  00131A  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12347  00131C  2057               	addwfc	??__bootloader_verify_file+2,w,c
 12348  00131E  6E45               	movwf	fat_read_from_file@length+2,c
 12349  001320  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12350  001322  2058               	addwfc	??__bootloader_verify_file+3,w,c
 12351  001324  6E46               	movwf	fat_read_from_file@length+3,c
 12352  001326  0EC0               	movlw	low _file_buffer
 12353  001328  6E47               	movwf	fat_read_from_file@data,c
 12354  00132A  0E02               	movlw	high _file_buffer
 12355  00132C  6E48               	movwf	fat_read_from_file@data+1,c
 12356  00132E  51FE               	movf	_file_number& (0+255),w,b
 12357  001330  EC7A  F00F         	call	_fat_read_from_file
 12358  001334                     l2275:
 12359                           
 12360                           ;bootloader.c: 191: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 12361  001334  0EC0               	movlw	low _file_buffer
 12362  001336  6E0C               	movwf	parseHexFileEntry@data,c
 12363  001338  0E02               	movlw	high _file_buffer
 12364  00133A  6E0D               	movwf	parseHexFileEntry@data+1,c
 12365  00133C  0E00               	movlw	0
 12366  00133E  6E0E               	movwf	parseHexFileEntry@offset,c
 12367  001340  0E00               	movlw	0
 12368  001342  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12369  001344  0E00               	movlw	0
 12370  001346  6E10               	movwf	parseHexFileEntry@offset+2,c
 12371  001348  0E00               	movlw	0
 12372  00134A  6E11               	movwf	parseHexFileEntry@offset+3,c
 12373  00134C  0EC4               	movlw	low _hex_file_entry
 12374  00134E  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12375  001350  0E01               	movlw	high _hex_file_entry
 12376  001352  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12377  001354  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12378  001358  C00C  F0E3         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 12379  00135C  C00D  F0E4         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 12380  001360  C00E  F0E5         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 12381  001364  C00F  F0E6         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 12382                           
 12383                           ;bootloader.c: 194: ++hex_file_entries;
 12384  001368  0101               	movlb	1	; () banked
 12385  00136A  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
 12386  00136C  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
 12387                           
 12388                           ; BSR set to: 1
 12389                           ;bootloader.c: 197: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 12390  00136E  0E04               	movlw	4
 12391  001370  19C8               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 12392  001372  A4D8               	btfss	status,2,c
 12393  001374  D01C               	goto	l2276
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;bootloader.c: 198: {;bootloader.c: 199: extended_linear_address = hex_file_entry.data[0
      +                          ];
 12397  001376  51C9               	movf	(_hex_file_entry+5)& (0+255),w,b
 12398  001378  6F40               	movwf	_extended_linear_address& (0+255),b
 12399  00137A  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12400  00137C  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12401  00137E  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12402                           
 12403                           ; BSR set to: 1
 12404                           ;bootloader.c: 200: extended_linear_address <<= 8;
 12405  001380  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12406  001384  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12407  001388  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12408  00138C  6B40               	clrf	_extended_linear_address& (0+255),b
 12409                           
 12410                           ; BSR set to: 1
 12411                           ;bootloader.c: 201: extended_linear_address |= hex_file_entry.data[1];
 12412  00138E  51CA               	movf	(_hex_file_entry+6)& (0+255),w,b
 12413  001390  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;bootloader.c: 202: extended_linear_address <<= 8;
 12417  001392  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12418  001396  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12419  00139A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12420  00139E  6B40               	clrf	_extended_linear_address& (0+255),b
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;bootloader.c: 203: extended_linear_address <<= 8;
 12424  0013A0  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12425  0013A4  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12426  0013A8  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12427  0013AC  6B40               	clrf	_extended_linear_address& (0+255),b
 12428  0013AE                     l2276:
 12429                           
 12430                           ; BSR set to: 1
 12431                           ;bootloader.c: 204: };bootloader.c: 207: if(hex_file_entry.recordType==RecordTypeData)
 12432                           
 12433                           ; BSR set to: 1
 12434  0013AE  51C8               	movf	(_hex_file_entry+4)& (0+255),w,b
 12435  0013B0  A4D8               	btfss	status,2,c
 12436  0013B2  D05D               	goto	l2280
 12437                           
 12438                           ; BSR set to: 1
 12439                           ;bootloader.c: 208: {;bootloader.c: 210: address32 = extended_linear_address + hex_file_
      +                          entry.address;
 12440  0013B4  51C6               	movf	(_hex_file_entry+2)& (0+255),w,b
 12441  0013B6  2540               	addwf	_extended_linear_address& (0+255),w,b
 12442  0013B8  0100               	movlb	0	; () banked
 12443  0013BA  6FE7               	movwf	__bootloader_verify_file@address32& (0+255),b
 12444  0013BC  0101               	movlb	1	; () banked
 12445  0013BE  51C7               	movf	(_hex_file_entry+3)& (0+255),w,b
 12446  0013C0  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12447  0013C2  0100               	movlb	0	; () banked
 12448  0013C4  6FE8               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
 12449  0013C6  0E00               	movlw	0
 12450  0013C8  0101               	movlb	1	; () banked
 12451  0013CA  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12452  0013CC  0100               	movlb	0	; () banked
 12453  0013CE  6FE9               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
 12454  0013D0  0E00               	movlw	0
 12455  0013D2  0101               	movlb	1	; () banked
 12456  0013D4  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12457  0013D6  0100               	movlb	0	; () banked
 12458  0013D8  6FEA               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
 12459                           
 12460                           ;bootloader.c: 213: if(address32<file_minimum_address)
 12461  0013DA  0101               	movlb	1	; () banked
 12462  0013DC  5148               	movf	_file_minimum_address& (0+255),w,b
 12463  0013DE  0100               	movlb	0	; () banked
 12464  0013E0  5DE7               	subwf	__bootloader_verify_file@address32& (0+255),w,b
 12465  0013E2  0101               	movlb	1	; () banked
 12466  0013E4  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
 12467  0013E6  0100               	movlb	0	; () banked
 12468  0013E8  59E8               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12469  0013EA  0101               	movlb	1	; () banked
 12470  0013EC  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
 12471  0013EE  0100               	movlb	0	; () banked
 12472  0013F0  59E9               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12473  0013F2  0101               	movlb	1	; () banked
 12474  0013F4  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
 12475  0013F6  0100               	movlb	0	; () banked
 12476  0013F8  59EA               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12477  0013FA  B0D8               	btfsc	status,0,c
 12478  0013FC  D008               	goto	l2278
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;bootloader.c: 214: {;bootloader.c: 215: file_minimum_address = address32;
 12482  0013FE  C0E7  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
 12483  001402  C0E8  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 12484  001406  C0E9  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 12485  00140A  C0EA  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 12486  00140E                     l2278:
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;bootloader.c: 216: };bootloader.c: 217: if(address32>file_maximum_address)
 12490                           
 12491                           ; BSR set to: 0
 12492  00140E  51E7               	movf	__bootloader_verify_file@address32& (0+255),w,b
 12493  001410  0101               	movlb	1	; () banked
 12494  001412  5D44               	subwf	_file_maximum_address& (0+255),w,b
 12495  001414  0100               	movlb	0	; () banked
 12496  001416  51E8               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12497  001418  0101               	movlb	1	; () banked
 12498  00141A  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 12499  00141C  0100               	movlb	0	; () banked
 12500  00141E  51E9               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12501  001420  0101               	movlb	1	; () banked
 12502  001422  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 12503  001424  0100               	movlb	0	; () banked
 12504  001426  51EA               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12505  001428  0101               	movlb	1	; () banked
 12506  00142A  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 12507  00142C  B0D8               	btfsc	status,0,c
 12508  00142E  D008               	goto	l2279
 12509                           
 12510                           ; BSR set to: 1
 12511                           ;bootloader.c: 218: {;bootloader.c: 219: file_maximum_address = address32;
 12512  001430  C0E7  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
 12513  001434  C0E8  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 12514  001438  C0E9  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 12515  00143C  C0EA  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 12516  001440                     l2279:
 12517                           
 12518                           ; BSR set to: 1
 12519                           ;bootloader.c: 220: };bootloader.c: 223: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
 12520                           
 12521                           ; BSR set to: 1
 12522  001440  C0E7  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 12523  001444  C0E8  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 12524  001448  C0E9  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 12525  00144C  C0EA  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 12526  001450  C1C4  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 12527  001454  ECD6  F025         	call	__bootloader_check_address	;wreg free
 12528  001458  0AFF               	xorlw	255
 12529  00145A  A4D8               	btfss	status,2,c
 12530  00145C  D008               	goto	l2280
 12531                           
 12532                           ;bootloader.c: 224: {;bootloader.c: 226: last_error = ShortRecordErrorAddressRange;
 12533  00145E  0E0B               	movlw	11
 12534  001460  0100               	movlb	0	; () banked
 12535  001462  6F96               	movwf	_last_error& (0+255),b
 12536                           
 12537                           ;bootloader.c: 228: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12538  001464  0E40               	movlw	64
 12539  001466  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12540                           
 12541                           ;bootloader.c: 229: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12542  001468  0E40               	movlw	64
 12543  00146A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12544                           
 12545                           ;bootloader.c: 230: break;
 12546  00146C  0012               	return	
 12547  00146E                     l2280:
 12548                           
 12549                           ;bootloader.c: 231: };bootloader.c: 232: };bootloader.c: 234: if(return_value==0)
 12550                           
 12551                           ; BSR set to: 0
 12552                           
 12553                           ; BSR set to: 0
 12554  00146E  0100               	movlb	0	; () banked
 12555  001470  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12556  001472  11E4               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12557  001474  11E5               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12558  001476  11E6               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12559  001478  A4D8               	btfss	status,2,c
 12560  00147A  D027               	goto	l2281
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;bootloader.c: 235: {;bootloader.c: 238: total_hex_file_entries = hex_file_entries;
 12564  00147C  C16A  F168         	movff	_hex_file_entries,_total_hex_file_entries
 12565  001480  C16B  F169         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;bootloader.c: 239: hex_file_entries = 0;
 12569  001484  0E00               	movlw	0
 12570  001486  0101               	movlb	1	; () banked
 12571  001488  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 12572  00148A  0E00               	movlw	0
 12573  00148C  6F6A               	movwf	_hex_file_entries& (0+255),b
 12574                           
 12575                           ;bootloader.c: 240: hex_file_offset = 0;
 12576  00148E  0E00               	movlw	0
 12577  001490  0100               	movlb	0	; () banked
 12578  001492  6F7C               	movwf	_hex_file_offset& (0+255),b
 12579  001494  0E00               	movlw	0
 12580  001496  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 12581  001498  0E00               	movlw	0
 12582  00149A  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 12583  00149C  0E00               	movlw	0
 12584  00149E  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 12585                           
 12586                           ;bootloader.c: 241: extended_linear_address = 0;
 12587  0014A0  0E00               	movlw	0
 12588  0014A2  0101               	movlb	1	; () banked
 12589  0014A4  6F40               	movwf	_extended_linear_address& (0+255),b
 12590  0014A6  0E00               	movlw	0
 12591  0014A8  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 12592  0014AA  0E00               	movlw	0
 12593  0014AC  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 12594  0014AE  0E00               	movlw	0
 12595  0014B0  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 12596                           
 12597                           ;bootloader.c: 242: flash_pages_written = 0;
 12598  0014B2  0E00               	movlw	0
 12599  0014B4  6F67               	movwf	(_flash_pages_written+1)& (0+255),b
 12600  0014B6  0E00               	movlw	0
 12601  0014B8  6F66               	movwf	_flash_pages_written& (0+255),b
 12602                           
 12603                           ;bootloader.c: 243: start_from_byte_next = 0;
 12604  0014BA  0E00               	movlw	0
 12605  0014BC  0100               	movlb	0	; () banked
 12606  0014BE  6F95               	movwf	_start_from_byte_next& (0+255),b
 12607                           
 12608                           ;bootloader.c: 245: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 12609  0014C0  0E30               	movlw	48
 12610  0014C2  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12611                           
 12612                           ;bootloader.c: 246: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 12613  0014C4  0E30               	movlw	48
 12614  0014C6  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12615                           
 12616                           ;bootloader.c: 247: break;
 12617  0014C8  0012               	return	
 12618  0014CA                     l2281:
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;bootloader.c: 249: else if(return_value>0xFFFFFFF0)
 12622                           
 12623                           ; BSR set to: 0
 12624  0014CA  0EF1               	movlw	241
 12625  0014CC  5DE3               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
 12626  0014CE  0EFF               	movlw	255
 12627  0014D0  59E4               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12628  0014D2  0EFF               	movlw	255
 12629  0014D4  59E5               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12630  0014D6  0EFF               	movlw	255
 12631  0014D8  59E6               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12632  0014DA  A0D8               	btfss	status,0,c
 12633  0014DC  D007               	goto	l2283
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;bootloader.c: 250: {;bootloader.c: 252: last_error = return_value & 0xF;
 12637  0014DE  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12638  0014E0  0B0F               	andlw	15
 12639  0014E2  6F96               	movwf	_last_error& (0+255),b
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;bootloader.c: 254: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12643  0014E4  0E40               	movlw	64
 12644  0014E6  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;bootloader.c: 255: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12648  0014E8  0E40               	movlw	64
 12649  0014EA  D7ED               	goto	L1
 12650  0014EC                     l2283:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;bootloader.c: 258: else;bootloader.c: 259: {;bootloader.c: 261: hex_file_offset += retu
      +                          rn_value;
 12654                           
 12655                           ; BSR set to: 0
 12656  0014EC  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12657  0014EE  277C               	addwf	_hex_file_offset& (0+255),f,b
 12658  0014F0  51E4               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12659  0014F2  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12660  0014F4  51E5               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12661  0014F6  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12662  0014F8  51E6               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12663  0014FA  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12664                           
 12665                           ; BSR set to: 0
 12666                           
 12667                           ; BSR set to: 0
 12668                           
 12669                           ; BSR set to: 0
 12670  0014FC  2BE2               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
 12671  0014FE  D6AD               	goto	l13936
 12672  001500                     __end_of__bootloader_verify_file:
 12673                           	opt stack 0
 12674                           tblptru	equ	0xFF8
 12675                           tblptrh	equ	0xFF7
 12676                           tblptrl	equ	0xFF6
 12677                           tablat	equ	0xFF5
 12678                           prodh	equ	0xFF4
 12679                           prodl	equ	0xFF3
 12680                           intcon	equ	0xFF2
 12681                           intcon2	equ	0xFF1
 12682                           intcon3	equ	0xFF0
 12683                           postinc0	equ	0xFEE
 12684                           wreg	equ	0xFE8
 12685                           postdec1	equ	0xFE5
 12686                           plusw1	equ	0xFE3
 12687                           fsr1h	equ	0xFE2
 12688                           fsr1l	equ	0xFE1
 12689                           indf2	equ	0xFDF
 12690                           postinc2	equ	0xFDE
 12691                           plusw2	equ	0xFDB
 12692                           fsr2h	equ	0xFDA
 12693                           fsr2l	equ	0xFD9
 12694                           status	equ	0xFD8
 12695                           
 12696 ;; *************** function __bootloader_program *****************
 12697 ;; Defined at:
 12698 ;;		line 266 in file "bootloader.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;		None
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;  address32       4   55[BANK0 ] unsigned long 
 12703 ;;  return_value    4   51[BANK0 ] unsigned long 
 12704 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 12705 ;;  cntr            2   60[BANK0 ] unsigned int 
 12706 ;;  address_with    2   49[BANK0 ] unsigned int 
 12707 ;;  entry_page      2   47[BANK0 ] unsigned int 
 12708 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 12709 ;;		 -> pageBuffer(1024), 
 12710 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12721 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12722 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12723 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12724 ;;Total ram usage:       27 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    8
 12727 ;; This function calls:
 12728 ;;		__bootloader_check_address
 12729 ;;		_fat_read_from_file
 12730 ;;		_internalFlash_addressWithinPage
 12731 ;;		_internalFlash_erasePage
 12732 ;;		_internalFlash_getBuffer
 12733 ;;		_internalFlash_pageFromAddress
 12734 ;;		_internalFlash_readPage
 12735 ;;		_internalFlash_writePage
 12736 ;;		_parseHexFileEntry
 12737 ;; This function is called by:
 12738 ;;		_bootloader_run
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text52
 12743  000BC8                     __ptext52:
 12744                           	opt stack 0
 12745  000BC8                     __bootloader_program:
 12746                           	opt stack 21
 12747                           
 12748                           ;bootloader.c: 268: uint16_t cntr;;bootloader.c: 269: uint8_t* buffer;;bootloader.c: 270
      +                          : uint16_t entry_page;;bootloader.c: 271: uint16_t page_to_write = 0;
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;incstack = 0
 12752  000BC8  0E00               	movlw	0
 12753  000BCA  0100               	movlb	0	; () banked
 12754  000BCC  6FF4               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 12755  000BCE  0E00               	movlw	0
 12756  000BD0  6FF3               	movwf	__bootloader_program@page_to_write& (0+255),b
 12757                           
 12758                           ;bootloader.c: 272: uint8_t start_from_byte;;bootloader.c: 273: uint32_t address32;;boot
      +                          loader.c: 274: uint32_t return_value = 0;
 12759  000BD2  0E00               	movlw	0
 12760  000BD4  6FE8               	movwf	__bootloader_program@return_value& (0+255),b
 12761  000BD6  0E00               	movlw	0
 12762  000BD8  6FE9               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 12763  000BDA  0E00               	movlw	0
 12764  000BDC  6FEA               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 12765  000BDE  0E00               	movlw	0
 12766  000BE0  6FEB               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 12767  000BE2                     l2288:
 12768  000BE2  0004               	clrwdt		;# 
 12769                           
 12770                           ;bootloader.c: 284: if((hex_file_size-hex_file_offset)>=50)
 12771  000BE4  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
 12772  000BE8  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
 12773  000BEC  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
 12774  000BF0  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
 12775  000BF4  1E55               	comf	??__bootloader_program,f,c
 12776  000BF6  1E56               	comf	??__bootloader_program+1,f,c
 12777  000BF8  1E57               	comf	??__bootloader_program+2,f,c
 12778  000BFA  1E58               	comf	??__bootloader_program+3,f,c
 12779  000BFC  2A55               	incf	??__bootloader_program,f,c
 12780  000BFE  0E00               	movlw	0
 12781  000C00  2256               	addwfc	??__bootloader_program+1,f,c
 12782  000C02  2257               	addwfc	??__bootloader_program+2,f,c
 12783  000C04  2258               	addwfc	??__bootloader_program+3,f,c
 12784  000C06  0100               	movlb	0	; () banked
 12785  000C08  5178               	movf	_hex_file_size& (0+255),w,b
 12786  000C0A  2455               	addwf	??__bootloader_program,w,c
 12787  000C0C  6E59               	movwf	(??__bootloader_program+4)& (0+255),c
 12788  000C0E  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12789  000C10  2056               	addwfc	??__bootloader_program+1,w,c
 12790  000C12  6E5A               	movwf	(??__bootloader_program+5)& (0+255),c
 12791  000C14  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12792  000C16  2057               	addwfc	??__bootloader_program+2,w,c
 12793  000C18  6E5B               	movwf	(??__bootloader_program+6)& (0+255),c
 12794  000C1A  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12795  000C1C  2058               	addwfc	??__bootloader_program+3,w,c
 12796  000C1E  6E5C               	movwf	(??__bootloader_program+7)& (0+255),c
 12797  000C20  505C               	movf	??__bootloader_program+7,w,c
 12798  000C22  105B               	iorwf	??__bootloader_program+6,w,c
 12799  000C24  105A               	iorwf	??__bootloader_program+5,w,c
 12800  000C26  E104               	bnz	u10970
 12801  000C28  0E32               	movlw	50
 12802  000C2A  5C59               	subwf	??__bootloader_program+4,w,c
 12803  000C2C  A0D8               	btfss	status,0,c
 12804  000C2E  D018               	goto	l2289
 12805  000C30                     u10970:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;bootloader.c: 285: {;bootloader.c: 286: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
 12809  000C30  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12810  000C34  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12811  000C38  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12812  000C3C  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12813  000C40  0E32               	movlw	50
 12814  000C42  6E43               	movwf	fat_read_from_file@length,c
 12815  000C44  0E00               	movlw	0
 12816  000C46  6E44               	movwf	fat_read_from_file@length+1,c
 12817  000C48  0E00               	movlw	0
 12818  000C4A  6E45               	movwf	fat_read_from_file@length+2,c
 12819  000C4C  0E00               	movlw	0
 12820  000C4E  6E46               	movwf	fat_read_from_file@length+3,c
 12821  000C50  0EC0               	movlw	low _file_buffer
 12822  000C52  6E47               	movwf	fat_read_from_file@data,c
 12823  000C54  0E02               	movlw	high _file_buffer
 12824  000C56  6E48               	movwf	fat_read_from_file@data+1,c
 12825  000C58  51FE               	movf	_file_number& (0+255),w,b
 12826  000C5A  EC7A  F00F         	call	_fat_read_from_file
 12827                           
 12828                           ;bootloader.c: 287: }
 12829  000C5E  D02D               	goto	l2290
 12830  000C60                     l2289:
 12831                           
 12832                           ;bootloader.c: 288: else;bootloader.c: 289: {;bootloader.c: 290: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
 12833  000C60  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12834  000C64  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12835  000C68  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12836  000C6C  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12837  000C70  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
 12838  000C74  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
 12839  000C78  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
 12840  000C7C  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
 12841  000C80  1E55               	comf	??__bootloader_program,f,c
 12842  000C82  1E56               	comf	??__bootloader_program+1,f,c
 12843  000C84  1E57               	comf	??__bootloader_program+2,f,c
 12844  000C86  1E58               	comf	??__bootloader_program+3,f,c
 12845  000C88  2A55               	incf	??__bootloader_program,f,c
 12846  000C8A  0E00               	movlw	0
 12847  000C8C  2256               	addwfc	??__bootloader_program+1,f,c
 12848  000C8E  2257               	addwfc	??__bootloader_program+2,f,c
 12849  000C90  2258               	addwfc	??__bootloader_program+3,f,c
 12850  000C92  0100               	movlb	0	; () banked
 12851  000C94  5178               	movf	_hex_file_size& (0+255),w,b
 12852  000C96  2455               	addwf	??__bootloader_program,w,c
 12853  000C98  6E43               	movwf	fat_read_from_file@length,c
 12854  000C9A  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12855  000C9C  2056               	addwfc	??__bootloader_program+1,w,c
 12856  000C9E  6E44               	movwf	fat_read_from_file@length+1,c
 12857  000CA0  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12858  000CA2  2057               	addwfc	??__bootloader_program+2,w,c
 12859  000CA4  6E45               	movwf	fat_read_from_file@length+2,c
 12860  000CA6  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12861  000CA8  2058               	addwfc	??__bootloader_program+3,w,c
 12862  000CAA  6E46               	movwf	fat_read_from_file@length+3,c
 12863  000CAC  0EC0               	movlw	low _file_buffer
 12864  000CAE  6E47               	movwf	fat_read_from_file@data,c
 12865  000CB0  0E02               	movlw	high _file_buffer
 12866  000CB2  6E48               	movwf	fat_read_from_file@data+1,c
 12867  000CB4  51FE               	movf	_file_number& (0+255),w,b
 12868  000CB6  EC7A  F00F         	call	_fat_read_from_file
 12869  000CBA                     l2290:
 12870                           
 12871                           ;bootloader.c: 291: };bootloader.c: 294: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
 12872  000CBA  0EC0               	movlw	low _file_buffer
 12873  000CBC  6E0C               	movwf	parseHexFileEntry@data,c
 12874  000CBE  0E02               	movlw	high _file_buffer
 12875  000CC0  6E0D               	movwf	parseHexFileEntry@data+1,c
 12876  000CC2  0E00               	movlw	0
 12877  000CC4  6E0E               	movwf	parseHexFileEntry@offset,c
 12878  000CC6  0E00               	movlw	0
 12879  000CC8  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12880  000CCA  0E00               	movlw	0
 12881  000CCC  6E10               	movwf	parseHexFileEntry@offset+2,c
 12882  000CCE  0E00               	movlw	0
 12883  000CD0  6E11               	movwf	parseHexFileEntry@offset+3,c
 12884  000CD2  0EC4               	movlw	low _hex_file_entry
 12885  000CD4  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12886  000CD6  0E01               	movlw	high _hex_file_entry
 12887  000CD8  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12888  000CDA  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12889  000CDE  C00C  F0E8         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 12890  000CE2  C00D  F0E9         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 12891  000CE6  C00E  F0EA         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 12892  000CEA  C00F  F0EB         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 12893                           
 12894                           ;bootloader.c: 297: ++hex_file_entries;
 12895  000CEE  0101               	movlb	1	; () banked
 12896  000CF0  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
 12897  000CF2  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
 12898                           
 12899                           ; BSR set to: 1
 12900                           ;bootloader.c: 300: if(return_value>RecordErrorNoError)
 12901  000CF4  0EF1               	movlw	241
 12902  000CF6  0100               	movlb	0	; () banked
 12903  000CF8  5DE8               	subwf	__bootloader_program@return_value& (0+255),w,b
 12904  000CFA  0EFF               	movlw	255
 12905  000CFC  59E9               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 12906  000CFE  0EFF               	movlw	255
 12907  000D00  59EA               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 12908  000D02  0EFF               	movlw	255
 12909  000D04  59EB               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 12910  000D06  A0D8               	btfss	status,0,c
 12911  000D08  D005               	goto	l2291
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;bootloader.c: 301: {;bootloader.c: 303: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
 12915  000D0A  0E40               	movlw	64
 12916  000D0C  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12917                           
 12918                           ;bootloader.c: 304: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12919  000D0E  0E40               	movlw	64
 12920  000D10  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;bootloader.c: 305: return;
 12924  000D12  0012               	return	
 12925  000D14                     l2291:
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;bootloader.c: 307: else;bootloader.c: 308: {;bootloader.c: 310: hex_file_offset += retu
      +                          rn_value;
 12929                           
 12930                           ; BSR set to: 0
 12931  000D14  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
 12932  000D16  277C               	addwf	_hex_file_offset& (0+255),f,b
 12933  000D18  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12934  000D1A  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12935  000D1C  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12936  000D1E  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12937  000D20  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12938  000D22  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;bootloader.c: 311: };bootloader.c: 313: switch(hex_file_entry.recordType)
 12942  000D24  D0FC               	goto	l2294
 12943  000D26                     
 12944                           ;bootloader.c: 319: extended_linear_address = hex_file_entry.data[0];
 12945                           
 12946                           ; BSR set to: 0
 12947  000D26  0101               	movlb	1	; () banked
 12948  000D28  51C9               	movf	(_hex_file_entry+5)& (0+255),w,b
 12949  000D2A  6F40               	movwf	_extended_linear_address& (0+255),b
 12950  000D2C  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12951  000D2E  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12952  000D30  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12953                           
 12954                           ; BSR set to: 1
 12955                           ;bootloader.c: 320: extended_linear_address <<= 8;
 12956  000D32  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12957  000D36  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12958  000D3A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12959  000D3E  6B40               	clrf	_extended_linear_address& (0+255),b
 12960                           
 12961                           ; BSR set to: 1
 12962                           ;bootloader.c: 321: extended_linear_address |= hex_file_entry.data[1];
 12963  000D40  51CA               	movf	(_hex_file_entry+6)& (0+255),w,b
 12964  000D42  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12965                           
 12966                           ; BSR set to: 1
 12967                           ;bootloader.c: 322: extended_linear_address <<= 8;
 12968  000D44  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12969  000D48  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12970  000D4C  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12971  000D50  6B40               	clrf	_extended_linear_address& (0+255),b
 12972                           
 12973                           ; BSR set to: 1
 12974                           ;bootloader.c: 323: extended_linear_address <<= 8;
 12975  000D52  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12976  000D56  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12977  000D5A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12978  000D5E  6B40               	clrf	_extended_linear_address& (0+255),b
 12979                           
 12980                           ; BSR set to: 1
 12981                           ;bootloader.c: 325: break;
 12982                           
 12983                           ;bootloader.c: 324: continue;
 12984  000D60  D740               	goto	l2288
 12985  000D62                     l2298:
 12986                           
 12987                           ; BSR set to: 1
 12988                           ;bootloader.c: 330: start_from_byte = start_from_byte_next;
 12989  000D62  C095  F0F0         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 12990                           
 12991                           ; BSR set to: 1
 12992                           ;bootloader.c: 332: start_from_byte_next = 0;
 12993  000D66  0E00               	movlw	0
 12994  000D68  0100               	movlb	0	; () banked
 12995  000D6A  6F95               	movwf	_start_from_byte_next& (0+255),b
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;bootloader.c: 335: address32 = extended_linear_address + hex_file_entry.address;
 12999  000D6C  0101               	movlb	1	; () banked
 13000  000D6E  51C6               	movf	(_hex_file_entry+2)& (0+255),w,b
 13001  000D70  2540               	addwf	_extended_linear_address& (0+255),w,b
 13002  000D72  0100               	movlb	0	; () banked
 13003  000D74  6FEC               	movwf	__bootloader_program@address32& (0+255),b
 13004  000D76  0101               	movlb	1	; () banked
 13005  000D78  51C7               	movf	(_hex_file_entry+3)& (0+255),w,b
 13006  000D7A  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 13007  000D7C  0100               	movlb	0	; () banked
 13008  000D7E  6FED               	movwf	(__bootloader_program@address32+1)& (0+255),b
 13009  000D80  0E00               	movlw	0
 13010  000D82  0101               	movlb	1	; () banked
 13011  000D84  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 13012  000D86  0100               	movlb	0	; () banked
 13013  000D88  6FEE               	movwf	(__bootloader_program@address32+2)& (0+255),b
 13014  000D8A  0E00               	movlw	0
 13015  000D8C  0101               	movlb	1	; () banked
 13016  000D8E  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 13017  000D90  0100               	movlb	0	; () banked
 13018  000D92  6FEF               	movwf	(__bootloader_program@address32+3)& (0+255),b
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;bootloader.c: 336: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 13022  000D94  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13023  000D96  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13024  000D98  6E01               	movwf	internalFlash_pageFromAddress@address,c
 13025  000D9A  0E00               	movlw	0
 13026  000D9C  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13027  000D9E  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 13028  000DA0  0E00               	movlw	0
 13029  000DA2  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13030  000DA4  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 13031  000DA6  0E00               	movlw	0
 13032  000DA8  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13033  000DAA  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 13034  000DAC  EC15  F03E         	call	_internalFlash_pageFromAddress	;wreg free
 13035  000DB0  C001  F0E4         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 13036  000DB4  C002  F0E5         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 13037                           
 13038                           ;bootloader.c: 339: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 13039  000DB8  0100               	movlb	0	; () banked
 13040  000DBA  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13041  000DBC  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13042  000DBE  6E01               	movwf	__bootloader_check_address@address,c
 13043  000DC0  0E00               	movlw	0
 13044  000DC2  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13045  000DC4  6E02               	movwf	__bootloader_check_address@address+1,c
 13046  000DC6  0E00               	movlw	0
 13047  000DC8  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13048  000DCA  6E03               	movwf	__bootloader_check_address@address+2,c
 13049  000DCC  0E00               	movlw	0
 13050  000DCE  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13051  000DD0  6E04               	movwf	__bootloader_check_address@address+3,c
 13052  000DD2  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13053  000DD4  0800               	sublw	0
 13054  000DD6  0101               	movlb	1	; () banked
 13055  000DD8  25C4               	addwf	_hex_file_entry& (0+255),w,b
 13056  000DDA  6E05               	movwf	__bootloader_check_address@dataLength,c
 13057  000DDC  ECD6  F025         	call	__bootloader_check_address	;wreg free
 13058  000DE0  0900               	iorlw	0
 13059  000DE2  A4D8               	btfss	status,2,c
 13060  000DE4  D6FE               	goto	l2288
 13061                           
 13062                           ;bootloader.c: 342: };bootloader.c: 344: if(page_to_write==0)
 13063                           
 13064                           ;bootloader.c: 340: {;bootloader.c: 341: break;
 13065  000DE6  0100               	movlb	0	; () banked
 13066  000DE8  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13067  000DEA  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13068  000DEC  A4D8               	btfss	status,2,c
 13069  000DEE  D010               	goto	l2300
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;bootloader.c: 345: {;bootloader.c: 349: page_to_write = entry_page;
 13073  000DF0  C0E4  F0F3         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 13074  000DF4  C0E5  F0F4         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;bootloader.c: 350: internalFlash_readPage(page_to_write);
 13078  000DF8  C0F3  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 13079  000DFC  C0F4  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 13080  000E00  EC75  F03A         	call	_internalFlash_readPage	;wreg free
 13081                           
 13082                           ;bootloader.c: 351: buffer = internalFlash_getBuffer();
 13083  000E04  ECB4  F03E         	call	_internalFlash_getBuffer	;wreg free
 13084  000E08  C001  F0E2         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 13085  000E0C  C002  F0E3         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 13086  000E10                     l2300:
 13087                           
 13088                           ;bootloader.c: 352: };bootloader.c: 354: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
 13089  000E10  C0F0  F0F1         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 13090  000E14  0100               	movlb	0	; () banked
 13091  000E16  6BF2               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 13092  000E18  D05D               	goto	l2301
 13093  000E1A                     
 13094                           ; BSR set to: 0
 13095                           ;bootloader.c: 355: {;bootloader.c: 358: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
 13096                           
 13097                           ; BSR set to: 0
 13098  000E1A  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
 13099  000E1C  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13100  000E1E  6E01               	movwf	internalFlash_pageFromAddress@address,c
 13101  000E20  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 13102  000E22  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13103  000E24  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 13104  000E26  0E00               	movlw	0
 13105  000E28  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13106  000E2A  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 13107  000E2C  0E00               	movlw	0
 13108  000E2E  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13109  000E30  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 13110  000E32  EC15  F03E         	call	_internalFlash_pageFromAddress	;wreg free
 13111  000E36  0100               	movlb	0	; () banked
 13112  000E38  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13113  000E3A  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 13114  000E3C  E12A               	bnz	l14060
 13115  000E3E  51F4               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13116  000E40  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 13117  000E42  A4D8               	btfss	status,2,c
 13118  000E44  D026               	goto	l2303
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;bootloader.c: 359: {;bootloader.c: 360: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
 13122  000E46  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
 13123  000E48  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13124  000E4A  6E09               	movwf	internalFlash_addressWithinPage@address,c
 13125  000E4C  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 13126  000E4E  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13127  000E50  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 13128  000E52  0E00               	movlw	0
 13129  000E54  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13130  000E56  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 13131  000E58  0E00               	movlw	0
 13132  000E5A  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13133  000E5C  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 13134  000E5E  C0F3  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 13135  000E62  C0F4  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 13136  000E66  EC3F  F036         	call	_internalFlash_addressWithinPage	;wreg free
 13137  000E6A  C009  F0E6         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 13138  000E6E  C00A  F0E7         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 13139                           
 13140                           ;bootloader.c: 361: buffer[address_within_page] = hex_file_entry.data[cntr];
 13141  000E72  0EC9               	movlw	low (_hex_file_entry+5)
 13142  000E74  0100               	movlb	0	; () banked
 13143  000E76  25F1               	addwf	__bootloader_program@cntr& (0+255),w,b
 13144  000E78  6ED9               	movwf	fsr2l,c
 13145  000E7A  0E01               	movlw	high (_hex_file_entry+5)
 13146  000E7C  21F2               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 13147  000E7E  6EDA               	movwf	fsr2h,c
 13148  000E80  51E6               	movf	__bootloader_program@address_within_page& (0+255),w,b
 13149  000E82  25E2               	addwf	__bootloader_program@buffer& (0+255),w,b
 13150  000E84  6EE1               	movwf	fsr1l,c
 13151  000E86  51E7               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 13152  000E88  21E3               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 13153  000E8A  6EE2               	movwf	fsr1h,c
 13154  000E8C  CFDF FFE7          	movff	indf2,indf1
 13155                           
 13156                           ;bootloader.c: 362: }
 13157  000E90  D01E               	goto	l2304
 13158  000E92                     l2303:
 13159  000E92                     l14060:
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;bootloader.c: 363: else;bootloader.c: 364: {;bootloader.c: 366: hex_file_offset -= retu
      +                          rn_value;
 13163  000E92  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
 13164  000E94  5F7C               	subwf	_hex_file_offset& (0+255),f,b
 13165  000E96  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 13166  000E98  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 13167  000E9A  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 13168  000E9C  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 13169  000E9E  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 13170  000EA0  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;bootloader.c: 367: --hex_file_entries;
 13174  000EA2  0101               	movlb	1	; () banked
 13175  000EA4  076A               	decf	_hex_file_entries& (0+255),f,b
 13176  000EA6  A0D8               	btfss	status,0,c
 13177  000EA8  076B               	decf	(_hex_file_entries+1)& (0+255),f,b
 13178                           
 13179                           ; BSR set to: 1
 13180                           ;bootloader.c: 369: start_from_byte_next = cntr;
 13181  000EAA  C0F1  F095         	movff	__bootloader_program@cntr,_start_from_byte_next
 13182                           
 13183                           ; BSR set to: 1
 13184                           ;bootloader.c: 371: internalFlash_erasePage(page_to_write);
 13185  000EAE  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 13186  000EB2  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 13187  000EB6  ECBA  F03B         	call	_internalFlash_erasePage	;wreg free
 13188                           
 13189                           ;bootloader.c: 372: internalFlash_writePage(page_to_write);
 13190  000EBA  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 13191  000EBE  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 13192  000EC2  ECB3  F031         	call	_internalFlash_writePage	;wreg free
 13193                           
 13194                           ;bootloader.c: 373: ++flash_pages_written;
 13195  000EC6  0101               	movlb	1	; () banked
 13196  000EC8  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 13197  000ECA  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;bootloader.c: 375: return;
 13201  000ECC  0012               	return	
 13202  000ECE                     l2304:
 13203                           
 13204                           ; BSR set to: 1
 13205  000ECE  0100               	movlb	0	; () banked
 13206  000ED0  4BF1               	infsnz	__bootloader_program@cntr& (0+255),f,b
 13207  000ED2  2BF2               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 13208  000ED4                     l2301:
 13209                           
 13210                           ; BSR set to: 0
 13211                           
 13212                           ; BSR set to: 0
 13213  000ED4  0101               	movlb	1	; () banked
 13214  000ED6  51C4               	movf	_hex_file_entry& (0+255),w,b
 13215  000ED8  0100               	movlb	0	; () banked
 13216  000EDA  5DF1               	subwf	__bootloader_program@cntr& (0+255),w,b
 13217  000EDC  0101               	movlb	1	; () banked
 13218  000EDE  51C5               	movf	(_hex_file_entry+1)& (0+255),w,b
 13219  000EE0  0100               	movlb	0	; () banked
 13220  000EE2  59F2               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 13221  000EE4  B0D8               	btfsc	status,0,c
 13222  000EE6  D67D               	goto	l2288
 13223  000EE8  D798               	goto	l2302
 13224  000EEA                     
 13225                           ;bootloader.c: 383: if(page_to_write!=0)
 13226                           
 13227                           ; BSR set to: 0
 13228  000EEA  0100               	movlb	0	; () banked
 13229  000EEC  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13230  000EEE  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13231  000EF0  B4D8               	btfsc	status,2,c
 13232  000EF2  0012               	return	
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;bootloader.c: 384: {;bootloader.c: 386: internalFlash_erasePage(page_to_write);
 13236  000EF4  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 13237  000EF8  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 13238  000EFC  ECBA  F03B         	call	_internalFlash_erasePage	;wreg free
 13239                           
 13240                           ;bootloader.c: 387: internalFlash_writePage(page_to_write);
 13241  000F00  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 13242  000F04  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 13243  000F08  ECB3  F031         	call	_internalFlash_writePage	;wreg free
 13244                           
 13245                           ;bootloader.c: 388: ++flash_pages_written;
 13246  000F0C  0101               	movlb	1	; () banked
 13247  000F0E  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 13248  000F10  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 13249                           
 13250                           ; BSR set to: 1
 13251                           ;bootloader.c: 390: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 13252  000F12  0E60               	movlw	96
 13253  000F14  0100               	movlb	0	; () banked
 13254  000F16  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;bootloader.c: 391: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 13258  000F18  0E60               	movlw	96
 13259  000F1A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;bootloader.c: 392: };bootloader.c: 394: return;
 13263                           
 13264                           ; BSR set to: 0
 13265  000F1C  0012               	return	
 13266  000F1E                     l2294:
 13267                           
 13268                           ; BSR set to: 0
 13269                           
 13270                           ; BSR set to: 0
 13271  000F1E  0101               	movlb	1	; () banked
 13272  000F20  51C8               	movf	(_hex_file_entry+4)& (0+255),w,b
 13273                           
 13274                           ; Switch size 1, requested type "space"
 13275                           ; Number of cases is 3, Range of values is 0 to 4
 13276                           ; switch strategies available:
 13277                           ; Name         Instructions Cycles
 13278                           ; simple_byte           10     6 (average)
 13279                           ;	Chosen strategy is simple_byte
 13280  000F22  0A00               	xorlw	0	; case 0
 13281  000F24  B4D8               	btfsc	status,2,c
 13282  000F26  D71D               	goto	l2298
 13283  000F28  0A01               	xorlw	1	; case 1
 13284  000F2A  B4D8               	btfsc	status,2,c
 13285  000F2C  D7DE               	goto	l2306
 13286  000F2E  0A05               	xorlw	5	; case 4
 13287  000F30  B4D8               	btfsc	status,2,c
 13288  000F32  D6F9               	goto	l2295
 13289                           
 13290                           ; BSR set to: 1
 13291                           
 13292                           ; BSR set to: 1
 13293  000F34  D656               	goto	l2288
 13294  000F36                     __end_of__bootloader_program:
 13295                           	opt stack 0
 13296                           tblptru	equ	0xFF8
 13297                           tblptrh	equ	0xFF7
 13298                           tblptrl	equ	0xFF6
 13299                           tablat	equ	0xFF5
 13300                           prodh	equ	0xFF4
 13301                           prodl	equ	0xFF3
 13302                           intcon	equ	0xFF2
 13303                           intcon2	equ	0xFF1
 13304                           intcon3	equ	0xFF0
 13305                           postinc0	equ	0xFEE
 13306                           wreg	equ	0xFE8
 13307                           indf1	equ	0xFE7
 13308                           postdec1	equ	0xFE5
 13309                           plusw1	equ	0xFE3
 13310                           fsr1h	equ	0xFE2
 13311                           fsr1l	equ	0xFE1
 13312                           indf2	equ	0xFDF
 13313                           postinc2	equ	0xFDE
 13314                           plusw2	equ	0xFDB
 13315                           fsr2h	equ	0xFDA
 13316                           fsr2l	equ	0xFD9
 13317                           status	equ	0xFD8
 13318                           
 13319 ;; *************** function _parseHexFileEntry *****************
 13320 ;; Defined at:
 13321 ;;		line 59 in file "hex.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  data            2   11[COMRAM] PTR unsigned char 
 13324 ;;		 -> file_buffer(50), 
 13325 ;;  offset          4   13[COMRAM] unsigned long 
 13326 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 13327 ;;		 -> hex_file_entry(23), 
 13328 ;; Auto vars:     Size  Location     Type
 13329 ;;  i               1   27[COMRAM] unsigned char 
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  4   11[COMRAM] unsigned long 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13334 ;; Tracked objects:
 13335 ;;		On entry : 0/0
 13336 ;;		On exit  : 0/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13339 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13341 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13342 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13343 ;;Total ram usage:       17 bytes
 13344 ;; Hardware stack levels used:    1
 13345 ;; Hardware stack levels required when called:    2
 13346 ;; This function calls:
 13347 ;;		_hexCharsToUint16
 13348 ;;		_hexCharsToUint8
 13349 ;; This function is called by:
 13350 ;;		__bootloader_verify_file
 13351 ;;		__bootloader_program
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           	psect	text53
 13356  000020                     __ptext53:
 13357                           	opt stack 0
 13358  000020                     _parseHexFileEntry:
 13359                           	opt stack 26
 13360                           
 13361                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
 13362                           
 13363                           ;incstack = 0
 13364  000020  500E               	movf	parseHexFileEntry@offset,w,c
 13365  000022  240C               	addwf	parseHexFileEntry@data,w,c
 13366  000024  6ED9               	movwf	fsr2l,c
 13367  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 13368  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13369  00002A  6EDA               	movwf	fsr2h,c
 13370  00002C  0E3A               	movlw	58
 13371  00002E  18DE               	xorwf	postinc2,w,c
 13372  000030  B4D8               	btfsc	status,2,c
 13373  000032  D005               	goto	l2158
 13374                           
 13375                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 13376  000034  680C               	setf	?_parseHexFileEntry,c
 13377  000036  680D               	setf	?_parseHexFileEntry+1,c
 13378  000038  680E               	setf	?_parseHexFileEntry+2,c
 13379  00003A  680F               	setf	?_parseHexFileEntry+3,c
 13380  00003C  0012               	return	
 13381  00003E                     l2158:
 13382                           
 13383                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
 13384  00003E  0E02               	movlw	2
 13385  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 13386  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13387  000044  0E00               	movlw	0
 13388  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13389  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13390  00004A  5014               	movf	??_parseHexFileEntry,w,c
 13391  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 13392  00004E  6ED9               	movwf	fsr2l,c
 13393  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 13394  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13395  000054  6EDA               	movwf	fsr2h,c
 13396  000056  50DF               	movf	indf2,w,c
 13397  000058  6E03               	movwf	hexCharsToUint8@c2,c
 13398  00005A  0E01               	movlw	1
 13399  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 13400  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13401  000060  0E00               	movlw	0
 13402  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13403  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13404  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 13405  000068  240C               	addwf	parseHexFileEntry@data,w,c
 13406  00006A  6ED9               	movwf	fsr2l,c
 13407  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 13408  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13409  000070  6EDA               	movwf	fsr2h,c
 13410  000072  50DF               	movf	indf2,w,c
 13411  000074  EC07  F03E         	call	_hexCharsToUint8
 13412  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13413  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 13414  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13415  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13416  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 13417  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 13418                           
 13419                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 13420  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13421  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13422  000094  0E01               	movlw	1
 13423  000096  50DB               	movf	plusw2,w,c
 13424  000098  E104               	bnz	u9660
 13425  00009A  0E11               	movlw	17
 13426  00009C  5CDE               	subwf	postinc2,w,c
 13427  00009E  A0D8               	btfss	status,0,c
 13428  0000A0  D009               	goto	l2160
 13429  0000A2                     u9660:
 13430                           
 13431                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 13432  0000A2  0EFC               	movlw	252
 13433  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 13434  0000A6  0EFF               	movlw	255
 13435  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 13436  0000AA  0EFF               	movlw	255
 13437  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 13438  0000AE  0EFF               	movlw	255
 13439  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 13440  0000B2  0012               	return	
 13441  0000B4                     l2160:
 13442                           
 13443                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
 13444  0000B4  0E04               	movlw	4
 13445  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 13446  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13447  0000BA  0E00               	movlw	0
 13448  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13449  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13450  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 13451  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 13452  0000C4  6ED9               	movwf	fsr2l,c
 13453  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 13454  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13455  0000CA  6EDA               	movwf	fsr2h,c
 13456  0000CC  50DF               	movf	indf2,w,c
 13457  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 13458  0000D0  0E05               	movlw	5
 13459  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 13460  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13461  0000D6  0E00               	movlw	0
 13462  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13463  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13464  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 13465  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 13466  0000E0  6ED9               	movwf	fsr2l,c
 13467  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 13468  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13469  0000E6  6EDA               	movwf	fsr2h,c
 13470  0000E8  50DF               	movf	indf2,w,c
 13471  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 13472  0000EC  0E06               	movlw	6
 13473  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 13474  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13475  0000F2  0E00               	movlw	0
 13476  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13477  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13478  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 13479  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 13480  0000FC  6ED9               	movwf	fsr2l,c
 13481  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 13482  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13483  000102  6EDA               	movwf	fsr2h,c
 13484  000104  50DF               	movf	indf2,w,c
 13485  000106  6E05               	movwf	hexCharsToUint16@c4,c
 13486  000108  0E03               	movlw	3
 13487  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 13488  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 13489  00010E  0E00               	movlw	0
 13490  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13491  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 13492  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 13493  000116  240C               	addwf	parseHexFileEntry@data,w,c
 13494  000118  6ED9               	movwf	fsr2l,c
 13495  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 13496  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13497  00011E  6EDA               	movwf	fsr2h,c
 13498  000120  50DF               	movf	indf2,w,c
 13499  000122  EC8F  F033         	call	_hexCharsToUint16
 13500  000126  EE20 F002          	lfsr	2,2
 13501  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13502  00012C  26D9               	addwf	fsr2l,f,c
 13503  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13504  000130  22DA               	addwfc	fsr2h,f,c
 13505  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 13506  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 13507                           
 13508                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 13509  00013A  EE20 F004          	lfsr	2,4
 13510  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13511  000140  26D9               	addwf	fsr2l,f,c
 13512  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13513  000144  22DA               	addwfc	fsr2h,f,c
 13514  000146  0E08               	movlw	8
 13515  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 13516  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13517  00014C  0E00               	movlw	0
 13518  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13519  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13520  000152  5014               	movf	??_parseHexFileEntry,w,c
 13521  000154  240C               	addwf	parseHexFileEntry@data,w,c
 13522  000156  6EE1               	movwf	fsr1l,c
 13523  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 13524  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13525  00015C  6EE2               	movwf	fsr1h,c
 13526  00015E  50E7               	movf	indf1,w,c
 13527  000160  6E03               	movwf	hexCharsToUint8@c2,c
 13528  000162  0E07               	movlw	7
 13529  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 13530  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13531  000168  0E00               	movlw	0
 13532  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13533  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13534  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 13535  000170  240C               	addwf	parseHexFileEntry@data,w,c
 13536  000172  6EE1               	movwf	fsr1l,c
 13537  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 13538  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13539  000178  6EE2               	movwf	fsr1h,c
 13540  00017A  50E7               	movf	indf1,w,c
 13541  00017C  EC07  F03E         	call	_hexCharsToUint8
 13542  000180  6EDF               	movwf	indf2,c
 13543                           
 13544                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 13545  000182  0E00               	movlw	0
 13546  000184  6E1C               	movwf	parseHexFileEntry@i,c
 13547  000186  D03D               	goto	l2161
 13548  000188                     
 13549                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
 13550  000188  501C               	movf	parseHexFileEntry@i,w,c
 13551  00018A  0D01               	mullw	1
 13552  00018C  0E05               	movlw	5
 13553  00018E  26F3               	addwf	prodl,f,c
 13554  000190  0E00               	movlw	0
 13555  000192  22F4               	addwfc	prodh,f,c
 13556  000194  50F3               	movf	prodl,w,c
 13557  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13558  000198  6ED9               	movwf	fsr2l,c
 13559  00019A  50F4               	movf	prodh,w,c
 13560  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13561  00019E  6EDA               	movwf	fsr2h,c
 13562  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 13563  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13564  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13565  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 13566  0001AA  0E00               	movlw	0
 13567  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13568  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 13569  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 13570  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 13571  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13572  0001B6  0E0A               	movlw	10
 13573  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 13574  0001BA  0E00               	movlw	0
 13575  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13576  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 13577  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 13578  0001C2  6EE1               	movwf	fsr1l,c
 13579  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 13580  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13581  0001C8  6EE2               	movwf	fsr1h,c
 13582  0001CA  50E7               	movf	indf1,w,c
 13583  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 13584  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 13585  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13586  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13587  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13588  0001D8  0E00               	movlw	0
 13589  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13590  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 13591  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 13592  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 13593  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13594  0001E4  0E09               	movlw	9
 13595  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13596  0001E8  0E00               	movlw	0
 13597  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13598  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 13599  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 13600  0001F0  6EE1               	movwf	fsr1l,c
 13601  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 13602  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13603  0001F6  6EE2               	movwf	fsr1h,c
 13604  0001F8  50E7               	movf	indf1,w,c
 13605  0001FA  EC07  F03E         	call	_hexCharsToUint8
 13606  0001FE  6EDF               	movwf	indf2,c
 13607  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 13608  000202                     l2161:
 13609  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13610  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13611  00020A  501C               	movf	parseHexFileEntry@i,w,c
 13612  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13613  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13614  000210  50DE               	movf	postinc2,w,c
 13615  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13616  000214  50DE               	movf	postinc2,w,c
 13617  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13618  000218  A0D8               	btfss	status,0,c
 13619  00021A  D7B6               	goto	l2162
 13620                           
 13621                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
 13622  00021C  EE20 F015          	lfsr	2,21
 13623  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13624  000222  26D9               	addwf	fsr2l,f,c
 13625  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13626  000226  22DA               	addwfc	fsr2h,f,c
 13627  000228  501C               	movf	parseHexFileEntry@i,w,c
 13628  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13629  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13630  000230  2614               	addwf	??_parseHexFileEntry,f,c
 13631  000232  0E00               	movlw	0
 13632  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13633  000236  500E               	movf	parseHexFileEntry@offset,w,c
 13634  000238  2614               	addwf	??_parseHexFileEntry,f,c
 13635  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13636  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13637  00023E  0E0A               	movlw	10
 13638  000240  2614               	addwf	??_parseHexFileEntry,f,c
 13639  000242  0E00               	movlw	0
 13640  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13641  000246  5014               	movf	??_parseHexFileEntry,w,c
 13642  000248  240C               	addwf	parseHexFileEntry@data,w,c
 13643  00024A  6EE1               	movwf	fsr1l,c
 13644  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 13645  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13646  000250  6EE2               	movwf	fsr1h,c
 13647  000252  50E7               	movf	indf1,w,c
 13648  000254  6E03               	movwf	hexCharsToUint8@c2,c
 13649  000256  501C               	movf	parseHexFileEntry@i,w,c
 13650  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13651  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13652  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13653  000260  0E00               	movlw	0
 13654  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13655  000264  500E               	movf	parseHexFileEntry@offset,w,c
 13656  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 13657  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 13658  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13659  00026C  0E09               	movlw	9
 13660  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13661  000270  0E00               	movlw	0
 13662  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13663  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 13664  000276  240C               	addwf	parseHexFileEntry@data,w,c
 13665  000278  6EE1               	movwf	fsr1l,c
 13666  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 13667  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13668  00027E  6EE2               	movwf	fsr1h,c
 13669  000280  50E7               	movf	indf1,w,c
 13670  000282  EC07  F03E         	call	_hexCharsToUint8
 13671  000286  6EDF               	movwf	indf2,c
 13672                           
 13673                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 13674  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13675  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13676  000290  EE10 F016          	lfsr	1,22
 13677  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13678  000296  26E1               	addwf	fsr1l,f,c
 13679  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13680  00029A  22E2               	addwfc	fsr1h,f,c
 13681  00029C  CFDF FFE7          	movff	indf2,indf1
 13682                           
 13683                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 13684  0002A0  EE20 F002          	lfsr	2,2
 13685  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13686  0002A6  26D9               	addwf	fsr2l,f,c
 13687  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13688  0002AA  22DA               	addwfc	fsr2h,f,c
 13689  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 13690  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 13691  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 13692  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 13693  0002BA  EE20 F016          	lfsr	2,22
 13694  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13695  0002C0  26D9               	addwf	fsr2l,f,c
 13696  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13697  0002C4  22DA               	addwfc	fsr2h,f,c
 13698  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 13699  0002C8  26DF               	addwf	indf2,f,c
 13700                           
 13701                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 13702  0002CA  EE20 F002          	lfsr	2,2
 13703  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13704  0002D0  26D9               	addwf	fsr2l,f,c
 13705  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13706  0002D4  22DA               	addwfc	fsr2h,f,c
 13707  0002D6  50DF               	movf	indf2,w,c
 13708  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13709  0002DA  EE20 F016          	lfsr	2,22
 13710  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13711  0002E0  26D9               	addwf	fsr2l,f,c
 13712  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13713  0002E4  22DA               	addwfc	fsr2h,f,c
 13714  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 13715  0002E8  26DF               	addwf	indf2,f,c
 13716                           
 13717                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 13718  0002EA  EE20 F004          	lfsr	2,4
 13719  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13720  0002F0  26D9               	addwf	fsr2l,f,c
 13721  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13722  0002F4  22DA               	addwfc	fsr2h,f,c
 13723  0002F6  50DF               	movf	indf2,w,c
 13724  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13725  0002FA  EE20 F016          	lfsr	2,22
 13726  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13727  000300  26D9               	addwf	fsr2l,f,c
 13728  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13729  000304  22DA               	addwfc	fsr2h,f,c
 13730  000306  5014               	movf	??_parseHexFileEntry,w,c
 13731  000308  26DF               	addwf	indf2,f,c
 13732                           
 13733                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 13734  00030A  0E00               	movlw	0
 13735  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 13736  00030E  D017               	goto	l2164
 13737  000310                     
 13738                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 13739  000310  501C               	movf	parseHexFileEntry@i,w,c
 13740  000312  0D01               	mullw	1
 13741  000314  0E05               	movlw	5
 13742  000316  26F3               	addwf	prodl,f,c
 13743  000318  0E00               	movlw	0
 13744  00031A  22F4               	addwfc	prodh,f,c
 13745  00031C  50F3               	movf	prodl,w,c
 13746  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13747  000320  6ED9               	movwf	fsr2l,c
 13748  000322  50F4               	movf	prodh,w,c
 13749  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13750  000326  6EDA               	movwf	fsr2h,c
 13751  000328  50DF               	movf	indf2,w,c
 13752  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13753  00032C  EE20 F016          	lfsr	2,22
 13754  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13755  000332  26D9               	addwf	fsr2l,f,c
 13756  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13757  000336  22DA               	addwfc	fsr2h,f,c
 13758  000338  5014               	movf	??_parseHexFileEntry,w,c
 13759  00033A  26DF               	addwf	indf2,f,c
 13760  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 13761  00033E                     l2164:
 13762  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13763  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13764  000346  501C               	movf	parseHexFileEntry@i,w,c
 13765  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13766  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13767  00034C  50DE               	movf	postinc2,w,c
 13768  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13769  000350  50DE               	movf	postinc2,w,c
 13770  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13771  000354  A0D8               	btfss	status,0,c
 13772  000356  D7DC               	goto	l2165
 13773                           
 13774                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 13775  000358  EE20 F015          	lfsr	2,21
 13776  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13777  00035E  26D9               	addwf	fsr2l,f,c
 13778  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13779  000362  22DA               	addwfc	fsr2h,f,c
 13780  000364  50DF               	movf	indf2,w,c
 13781  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13782  000368  EE20 F016          	lfsr	2,22
 13783  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13784  00036E  26D9               	addwf	fsr2l,f,c
 13785  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13786  000372  22DA               	addwfc	fsr2h,f,c
 13787  000374  5014               	movf	??_parseHexFileEntry,w,c
 13788  000376  26DF               	addwf	indf2,f,c
 13789                           
 13790                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 13791  000378  EE20 F016          	lfsr	2,22
 13792  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13793  00037E  26D9               	addwf	fsr2l,f,c
 13794  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13795  000382  22DA               	addwfc	fsr2h,f,c
 13796  000384  50DF               	movf	indf2,w,c
 13797  000386  B4D8               	btfsc	status,2,c
 13798  000388  D009               	goto	l2167
 13799                           
 13800                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 13801  00038A  0EFE               	movlw	254
 13802  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 13803  00038E  0EFF               	movlw	255
 13804  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 13805  000392  0EFF               	movlw	255
 13806  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 13807  000396  0EFF               	movlw	255
 13808  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 13809  00039A  0012               	return	
 13810  00039C                     l2167:
 13811                           
 13812                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 13813  00039C  EE20 F004          	lfsr	2,4
 13814  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13815  0003A2  26D9               	addwf	fsr2l,f,c
 13816  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13817  0003A6  22DA               	addwfc	fsr2h,f,c
 13818  0003A8  04DE               	decf	postinc2,w,c
 13819  0003AA  A4D8               	btfss	status,2,c
 13820  0003AC  D009               	goto	l2168
 13821                           
 13822                           ;hex.c: 110: {;hex.c: 112: return 0;
 13823  0003AE  0E00               	movlw	0
 13824  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 13825  0003B2  0E00               	movlw	0
 13826  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 13827  0003B6  0E00               	movlw	0
 13828  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 13829  0003BA  0E00               	movlw	0
 13830  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 13831                           
 13832                           ;hex.c: 113: }
 13833  0003BE  0012               	return	
 13834  0003C0                     l2168:
 13835                           
 13836                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
 13837  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 13838  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13839  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13840  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 13841  0003CA  0E00               	movlw	0
 13842  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13843  0003CE  0E0B               	movlw	11
 13844  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 13845  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13846  0003D4  0E00               	movlw	0
 13847  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 13848  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13849  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 13850  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 13851  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 13852  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 13853  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13854  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 13855  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 13856  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 13857  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13858  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 13859  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13860  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 13861  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13862                           
 13863                           ;hex.c: 117: if (data[++offset] == ':')
 13864  0003F4  0E01               	movlw	1
 13865  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 13866  0003F8  0E00               	movlw	0
 13867  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13868  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13869  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13870  000400  500E               	movf	parseHexFileEntry@offset,w,c
 13871  000402  240C               	addwf	parseHexFileEntry@data,w,c
 13872  000404  6ED9               	movwf	fsr2l,c
 13873  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 13874  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13875  00040A  6EDA               	movwf	fsr2h,c
 13876  00040C  0E3A               	movlw	58
 13877  00040E  18DE               	xorwf	postinc2,w,c
 13878  000410  A4D8               	btfss	status,2,c
 13879  000412  D009               	goto	l2170
 13880                           
 13881                           ;hex.c: 118: {;hex.c: 119: return offset;
 13882  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13883  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13884  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13885  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13886                           
 13887                           ;hex.c: 120: }
 13888  000424  0012               	return	
 13889  000426                     l2170:
 13890                           
 13891                           ;hex.c: 121: else if (data[++offset] == ':')
 13892  000426  0E01               	movlw	1
 13893  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 13894  00042A  0E00               	movlw	0
 13895  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13896  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13897  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13898  000432  500E               	movf	parseHexFileEntry@offset,w,c
 13899  000434  240C               	addwf	parseHexFileEntry@data,w,c
 13900  000436  6ED9               	movwf	fsr2l,c
 13901  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 13902  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13903  00043C  6EDA               	movwf	fsr2h,c
 13904  00043E  0E3A               	movlw	58
 13905  000440  18DE               	xorwf	postinc2,w,c
 13906  000442  A4D8               	btfss	status,2,c
 13907  000444  D009               	goto	l2172
 13908                           
 13909                           ;hex.c: 122: {;hex.c: 123: return offset;
 13910  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13911  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13912  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13913  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13914                           
 13915                           ;hex.c: 124: }
 13916  000456  0012               	return	
 13917  000458                     l2172:
 13918                           
 13919                           ;hex.c: 125: else if (data[++offset] == ':')
 13920  000458  0E01               	movlw	1
 13921  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 13922  00045C  0E00               	movlw	0
 13923  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13924  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13925  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13926  000464  500E               	movf	parseHexFileEntry@offset,w,c
 13927  000466  240C               	addwf	parseHexFileEntry@data,w,c
 13928  000468  6ED9               	movwf	fsr2l,c
 13929  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13930  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13931  00046E  6EDA               	movwf	fsr2h,c
 13932  000470  0E3A               	movlw	58
 13933  000472  18DE               	xorwf	postinc2,w,c
 13934  000474  A4D8               	btfss	status,2,c
 13935  000476  D009               	goto	l2174
 13936                           
 13937                           ;hex.c: 126: {;hex.c: 127: return offset;
 13938  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13939  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13940  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13941  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13942                           
 13943                           ;hex.c: 128: }
 13944  000488  0012               	return	
 13945  00048A                     l2174:
 13946                           
 13947                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 13948  00048A  0EFD               	movlw	253
 13949  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 13950  00048E  0EFF               	movlw	255
 13951  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 13952  000492  0EFF               	movlw	255
 13953  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 13954  000496  0EFF               	movlw	255
 13955  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 13956  00049A  0012               	return	
 13957  00049C                     __end_of_parseHexFileEntry:
 13958                           	opt stack 0
 13959                           tblptru	equ	0xFF8
 13960                           tblptrh	equ	0xFF7
 13961                           tblptrl	equ	0xFF6
 13962                           tablat	equ	0xFF5
 13963                           prodh	equ	0xFF4
 13964                           prodl	equ	0xFF3
 13965                           intcon	equ	0xFF2
 13966                           intcon2	equ	0xFF1
 13967                           intcon3	equ	0xFF0
 13968                           postinc0	equ	0xFEE
 13969                           wreg	equ	0xFE8
 13970                           indf1	equ	0xFE7
 13971                           postdec1	equ	0xFE5
 13972                           plusw1	equ	0xFE3
 13973                           fsr1h	equ	0xFE2
 13974                           fsr1l	equ	0xFE1
 13975                           indf2	equ	0xFDF
 13976                           postinc2	equ	0xFDE
 13977                           postdec2	equ	0xFDD
 13978                           plusw2	equ	0xFDB
 13979                           fsr2h	equ	0xFDA
 13980                           fsr2l	equ	0xFD9
 13981                           status	equ	0xFD8
 13982                           
 13983 ;; *************** function _hexCharsToUint8 *****************
 13984 ;; Defined at:
 13985 ;;		line 42 in file "hex.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;  c1              1    wreg     unsigned char 
 13988 ;;  c2              1    2[COMRAM] unsigned char 
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;  c1              1    4[COMRAM] unsigned char 
 13991 ;;  retVal          1    5[COMRAM] unsigned char 
 13992 ;; Return value:  Size  Location     Type
 13993 ;;                  1    wreg      unsigned char 
 13994 ;; Registers used:
 13995 ;;		wreg, status,2, status,0, cstack
 13996 ;; Tracked objects:
 13997 ;;		On entry : 0/0
 13998 ;;		On exit  : 0/0
 13999 ;;		Unchanged: 0/0
 14000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14001 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14005 ;;Total ram usage:        4 bytes
 14006 ;; Hardware stack levels used:    1
 14007 ;; Hardware stack levels required when called:    1
 14008 ;; This function calls:
 14009 ;;		_hexCharToUint8
 14010 ;; This function is called by:
 14011 ;;		_parseHexFileEntry
 14012 ;; This function uses a non-reentrant model
 14013 ;;
 14014                           
 14015                           	psect	text54
 14016  007C0E                     __ptext54:
 14017                           	opt stack 0
 14018  007C0E                     _hexCharsToUint8:
 14019                           	opt stack 26
 14020                           
 14021                           ;incstack = 0
 14022                           ;hexCharsToUint8@c1 stored from wreg
 14023  007C0E  6E05               	movwf	hexCharsToUint8@c1,c
 14024                           
 14025                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 14026  007C10  5005               	movf	hexCharsToUint8@c1,w,c
 14027  007C12  ECC9  F03C         	call	_hexCharToUint8
 14028  007C16  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 14029  007C18  3804               	swapf	??_hexCharsToUint8,w,c
 14030  007C1A  0BF0               	andlw	240
 14031  007C1C  6E06               	movwf	hexCharsToUint8@retVal,c
 14032                           
 14033                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 14034  007C1E  5003               	movf	hexCharsToUint8@c2,w,c
 14035  007C20  ECC9  F03C         	call	_hexCharToUint8
 14036  007C24  1206               	iorwf	hexCharsToUint8@retVal,f,c
 14037                           
 14038                           ;hex.c: 46: return retVal;
 14039  007C26  5006               	movf	hexCharsToUint8@retVal,w,c
 14040  007C28  0012               	return	
 14041  007C2A                     __end_of_hexCharsToUint8:
 14042                           	opt stack 0
 14043                           tblptru	equ	0xFF8
 14044                           tblptrh	equ	0xFF7
 14045                           tblptrl	equ	0xFF6
 14046                           tablat	equ	0xFF5
 14047                           prodh	equ	0xFF4
 14048                           prodl	equ	0xFF3
 14049                           intcon	equ	0xFF2
 14050                           intcon2	equ	0xFF1
 14051                           intcon3	equ	0xFF0
 14052                           postinc0	equ	0xFEE
 14053                           wreg	equ	0xFE8
 14054                           indf1	equ	0xFE7
 14055                           postdec1	equ	0xFE5
 14056                           plusw1	equ	0xFE3
 14057                           fsr1h	equ	0xFE2
 14058                           fsr1l	equ	0xFE1
 14059                           indf2	equ	0xFDF
 14060                           postinc2	equ	0xFDE
 14061                           postdec2	equ	0xFDD
 14062                           plusw2	equ	0xFDB
 14063                           fsr2h	equ	0xFDA
 14064                           fsr2l	equ	0xFD9
 14065                           status	equ	0xFD8
 14066                           
 14067 ;; *************** function _hexCharsToUint16 *****************
 14068 ;; Defined at:
 14069 ;;		line 49 in file "hex.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;  c1              1    wreg     unsigned char 
 14072 ;;  c2              1    2[COMRAM] unsigned char 
 14073 ;;  c3              1    3[COMRAM] unsigned char 
 14074 ;;  c4              1    4[COMRAM] unsigned char 
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;  c1              1    8[COMRAM] unsigned char 
 14077 ;;  retVal          2    9[COMRAM] unsigned int 
 14078 ;; Return value:  Size  Location     Type
 14079 ;;                  2    2[COMRAM] unsigned int 
 14080 ;; Registers used:
 14081 ;;		wreg, status,2, status,0, cstack
 14082 ;; Tracked objects:
 14083 ;;		On entry : 0/0
 14084 ;;		On exit  : 0/0
 14085 ;;		Unchanged: 0/0
 14086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14087 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14090 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14091 ;;Total ram usage:        9 bytes
 14092 ;; Hardware stack levels used:    1
 14093 ;; Hardware stack levels required when called:    1
 14094 ;; This function calls:
 14095 ;;		_hexCharToUint8
 14096 ;; This function is called by:
 14097 ;;		_parseHexFileEntry
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           	psect	text55
 14102  00671E                     __ptext55:
 14103                           	opt stack 0
 14104  00671E                     _hexCharsToUint16:
 14105                           	opt stack 26
 14106                           
 14107                           ;incstack = 0
 14108                           ;hexCharsToUint16@c1 stored from wreg
 14109  00671E  6E09               	movwf	hexCharsToUint16@c1,c
 14110                           
 14111                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 14112  006720  5009               	movf	hexCharsToUint16@c1,w,c
 14113  006722  ECC9  F03C         	call	_hexCharToUint8
 14114  006726  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14115  006728  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14116  00672A  0E0C               	movlw	12
 14117  00672C                     u8925:
 14118  00672C  90D8               	bcf	status,0,c
 14119  00672E  3606               	rlcf	??_hexCharsToUint16,f,c
 14120  006730  3607               	rlcf	??_hexCharsToUint16+1,f,c
 14121  006732  2EE8               	decfsz	wreg,f,c
 14122  006734  D7FB               	goto	u8925
 14123  006736  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 14124  00673A  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 14125                           
 14126                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 14127  00673E  5003               	movf	hexCharsToUint16@c2,w,c
 14128  006740  ECC9  F03C         	call	_hexCharToUint8
 14129  006744  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14130  006746  5006               	movf	??_hexCharsToUint16,w,c
 14131  006748  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 14132  00674A  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14133  00674C  5007               	movf	??_hexCharsToUint16+1,w,c
 14134  00674E  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14135  006750  5008               	movf	??_hexCharsToUint16+2,w,c
 14136  006752  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 14137                           
 14138                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 14139  006754  5004               	movf	hexCharsToUint16@c3,w,c
 14140  006756  ECC9  F03C         	call	_hexCharToUint8
 14141  00675A  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14142  00675C  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14143  00675E  3A06               	swapf	??_hexCharsToUint16,f,c
 14144  006760  3A07               	swapf	??_hexCharsToUint16+1,f,c
 14145  006762  0EF0               	movlw	240
 14146  006764  1607               	andwf	??_hexCharsToUint16+1,f,c
 14147  006766  5006               	movf	??_hexCharsToUint16,w,c
 14148  006768  0B0F               	andlw	15
 14149  00676A  1207               	iorwf	??_hexCharsToUint16+1,f,c
 14150  00676C  0EF0               	movlw	240
 14151  00676E  1606               	andwf	??_hexCharsToUint16,f,c
 14152  006770  5006               	movf	??_hexCharsToUint16,w,c
 14153  006772  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14154  006774  5007               	movf	??_hexCharsToUint16+1,w,c
 14155  006776  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 14156                           
 14157                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 14158  006778  5005               	movf	hexCharsToUint16@c4,w,c
 14159  00677A  ECC9  F03C         	call	_hexCharToUint8
 14160  00677E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14161  006780  5006               	movf	??_hexCharsToUint16,w,c
 14162  006782  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14163                           
 14164                           ;hex.c: 55: return retVal;
 14165  006784  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 14166  006788  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 14167  00678C  0012               	return	
 14168  00678E                     __end_of_hexCharsToUint16:
 14169                           	opt stack 0
 14170                           tblptru	equ	0xFF8
 14171                           tblptrh	equ	0xFF7
 14172                           tblptrl	equ	0xFF6
 14173                           tablat	equ	0xFF5
 14174                           prodh	equ	0xFF4
 14175                           prodl	equ	0xFF3
 14176                           intcon	equ	0xFF2
 14177                           intcon2	equ	0xFF1
 14178                           intcon3	equ	0xFF0
 14179                           postinc0	equ	0xFEE
 14180                           wreg	equ	0xFE8
 14181                           indf1	equ	0xFE7
 14182                           postdec1	equ	0xFE5
 14183                           plusw1	equ	0xFE3
 14184                           fsr1h	equ	0xFE2
 14185                           fsr1l	equ	0xFE1
 14186                           indf2	equ	0xFDF
 14187                           postinc2	equ	0xFDE
 14188                           postdec2	equ	0xFDD
 14189                           plusw2	equ	0xFDB
 14190                           fsr2h	equ	0xFDA
 14191                           fsr2l	equ	0xFD9
 14192                           status	equ	0xFD8
 14193                           
 14194 ;; *************** function _hexCharToUint8 *****************
 14195 ;; Defined at:
 14196 ;;		line 11 in file "hex.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;  c               1    wreg     unsigned char 
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;  c               1    0[COMRAM] unsigned char 
 14201 ;;  ascii           1    1[COMRAM] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  1    wreg      unsigned char 
 14204 ;; Registers used:
 14205 ;;		wreg, status,2, status,0
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14215 ;;Total ram usage:        2 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; This function calls:
 14218 ;;		Nothing
 14219 ;; This function is called by:
 14220 ;;		_hexCharsToUint8
 14221 ;;		_hexCharsToUint16
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text56
 14226  007992                     __ptext56:
 14227                           	opt stack 0
 14228  007992                     _hexCharToUint8:
 14229                           	opt stack 26
 14230                           
 14231                           ;incstack = 0
 14232                           ;hexCharToUint8@c stored from wreg
 14233  007992  6E01               	movwf	hexCharToUint8@c,c
 14234                           
 14235                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 14236  007994  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 14237                           
 14238                           ;hex.c: 16: if (ascii >= 97)
 14239  007998  0E60               	movlw	96
 14240  00799A  6402               	cpfsgt	hexCharToUint8@ascii,c
 14241  00799C  D002               	goto	l2143
 14242                           
 14243                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 14244  00799E  0E57               	movlw	87
 14245  0079A0  D006               	goto	L3
 14246  0079A2                     l2143:
 14247                           
 14248                           ;hex.c: 21: else if (ascii >= 65)
 14249  0079A2  0E40               	movlw	64
 14250  0079A4  6402               	cpfsgt	hexCharToUint8@ascii,c
 14251  0079A6  D002               	goto	l2145
 14252                           
 14253                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 14254  0079A8  0E37               	movlw	55
 14255  0079AA  D001               	goto	L3
 14256  0079AC                     l2145:
 14257                           
 14258                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 14259  0079AC  0E30               	movlw	48
 14260  0079AE                     L3:
 14261  0079AE  5E02               	subwf	hexCharToUint8@ascii,f,c
 14262                           
 14263                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 14264  0079B0  0E0F               	movlw	15
 14265  0079B2  6402               	cpfsgt	hexCharToUint8@ascii,c
 14266  0079B4  D002               	goto	l2147
 14267                           
 14268                           ;hex.c: 32: {;hex.c: 33: return 0;
 14269  0079B6  0E00               	movlw	0
 14270                           
 14271                           ;hex.c: 34: }
 14272  0079B8  0012               	return	
 14273  0079BA                     l2147:
 14274                           
 14275                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 14276  0079BA  5002               	movf	hexCharToUint8@ascii,w,c
 14277  0079BC  0012               	return	
 14278  0079BE                     __end_of_hexCharToUint8:
 14279                           	opt stack 0
 14280                           tblptru	equ	0xFF8
 14281                           tblptrh	equ	0xFF7
 14282                           tblptrl	equ	0xFF6
 14283                           tablat	equ	0xFF5
 14284                           prodh	equ	0xFF4
 14285                           prodl	equ	0xFF3
 14286                           intcon	equ	0xFF2
 14287                           intcon2	equ	0xFF1
 14288                           intcon3	equ	0xFF0
 14289                           postinc0	equ	0xFEE
 14290                           wreg	equ	0xFE8
 14291                           indf1	equ	0xFE7
 14292                           postdec1	equ	0xFE5
 14293                           plusw1	equ	0xFE3
 14294                           fsr1h	equ	0xFE2
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           plusw2	equ	0xFDB
 14300                           fsr2h	equ	0xFDA
 14301                           fsr2l	equ	0xFD9
 14302                           status	equ	0xFD8
 14303                           
 14304 ;; *************** function _internalFlash_writePage *****************
 14305 ;; Defined at:
 14306 ;;		line 63 in file "internal_flash.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;  page            2    2[COMRAM] unsigned int 
 14309 ;; Auto vars:     Size  Location     Type
 14310 ;;  address         4    4[COMRAM] unsigned long 
 14311 ;;  cntr            2    8[COMRAM] unsigned int 
 14312 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 14313 ;;  block_cntr      1   10[COMRAM] unsigned char 
 14314 ;;  i               1    0        unsigned char 
 14315 ;;  gie             1    0        unsigned char 
 14316 ;; Return value:  Size  Location     Type
 14317 ;;                  1    wreg      void 
 14318 ;; Registers used:
 14319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14320 ;; Tracked objects:
 14321 ;;		On entry : 0/0
 14322 ;;		On exit  : 0/0
 14323 ;;		Unchanged: 0/0
 14324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14326 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14328 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14329 ;;Total ram usage:       10 bytes
 14330 ;; Hardware stack levels used:    1
 14331 ;; Hardware stack levels required when called:    1
 14332 ;; This function calls:
 14333 ;;		__internalFlash_unlockAndActivate
 14334 ;; This function is called by:
 14335 ;;		__bootloader_program
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           	psect	text57
 14340  006366                     __ptext57:
 14341                           	opt stack 0
 14342  006366                     _internalFlash_writePage:
 14343                           	opt stack 27
 14344                           
 14345                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 14346                           
 14347                           ;incstack = 0
 14348  006366  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 14349  00636A  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 14350  00636E  6A07               	clrf	internalFlash_writePage@address+2,c
 14351  006370  6A08               	clrf	internalFlash_writePage@address+3,c
 14352                           
 14353                           ;internal_flash.c: 74: address <<= 10;
 14354  006372  0E0A               	movlw	10
 14355  006374                     u9835:
 14356  006374  90D8               	bcf	status,0,c
 14357  006376  3605               	rlcf	internalFlash_writePage@address,f,c
 14358  006378  3606               	rlcf	internalFlash_writePage@address+1,f,c
 14359  00637A  3607               	rlcf	internalFlash_writePage@address+2,f,c
 14360  00637C  3608               	rlcf	internalFlash_writePage@address+3,f,c
 14361  00637E  2EE8               	decfsz	wreg,f,c
 14362  006380  D7F9               	goto	u9835
 14363                           
 14364                           ;internal_flash.c: 76: TBLPTR = address;
 14365  006382  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 14366  006386  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 14367  00638A  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 14368                           
 14369                           ;internal_flash.c: 79: cntr = 0;
 14370  00638E  0E00               	movlw	0
 14371  006390  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 14372  006392  0E00               	movlw	0
 14373  006394  6E09               	movwf	internalFlash_writePage@cntr,c
 14374                           
 14375                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 14376  006396  0E00               	movlw	0
 14377  006398  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 14378  00639A                     l12832:
 14379  00639A  0E0F               	movlw	15
 14380  00639C  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 14381  00639E  D001               	goto	l2386
 14382  0063A0  0012               	return	
 14383  0063A2                     l2386:
 14384                           
 14385                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 14386  0063A2  0E00               	movlw	0
 14387  0063A4  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 14388  0063A6                     l12838:
 14389  0063A6  0E3F               	movlw	63
 14390  0063A8  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 14391  0063AA  D001               	goto	l2388
 14392  0063AC  D00D               	goto	u9860
 14393  0063AE                     l2388:
 14394                           
 14395                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 14396  0063AE  0E00               	movlw	low _pageBuffer
 14397  0063B0  2409               	addwf	internalFlash_writePage@cntr,w,c
 14398  0063B2  6ED9               	movwf	fsr2l,c
 14399  0063B4  0E08               	movlw	high _pageBuffer
 14400  0063B6  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 14401  0063B8  6EDA               	movwf	fsr2h,c
 14402  0063BA  50DF               	movf	indf2,w,c
 14403  0063BC  6EF5               	movwf	tablat,c	;volatile
 14404  0063BE  000D               	tblwt		*+	;# 
 14405                           
 14406                           ;internal_flash.c: 91: ++cntr;
 14407  0063C0  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 14408  0063C2  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 14409  0063C4  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 14410  0063C6  D7EF               	goto	l12838
 14411  0063C8                     u9860:
 14412  0063C8  000A               	tblrd		*-	;# 
 14413                           
 14414                           ;internal_flash.c: 98: EECON1 = 0x84;
 14415  0063CA  0E84               	movlw	132
 14416  0063CC  6EA6               	movwf	4006,c	;volsfr
 14417                           
 14418                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14419  0063CE  0EB5               	movlw	181
 14420  0063D0  EC34  F03D         	call	__internalFlash_unlockAndActivate
 14421                           
 14422                           ;internal_flash.c: 100: TBLPTR++;
 14423  0063D4  0E01               	movlw	1
 14424  0063D6  26F6               	addwf	tblptrl,f,c	;volatile
 14425  0063D8  0E00               	movlw	0
 14426  0063DA  22F7               	addwfc	tblptrh,f,c	;volatile
 14427  0063DC  0E00               	movlw	0
 14428  0063DE  22F8               	addwfc	tblptru,f,c	;volatile
 14429  0063E0  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 14430  0063E2  D7DB               	goto	l12832
 14431  0063E4                     __end_of_internalFlash_writePage:
 14432                           	opt stack 0
 14433                           tblptru	equ	0xFF8
 14434                           tblptrh	equ	0xFF7
 14435                           tblptrl	equ	0xFF6
 14436                           tablat	equ	0xFF5
 14437                           prodh	equ	0xFF4
 14438                           prodl	equ	0xFF3
 14439                           intcon	equ	0xFF2
 14440                           intcon2	equ	0xFF1
 14441                           intcon3	equ	0xFF0
 14442                           postinc0	equ	0xFEE
 14443                           wreg	equ	0xFE8
 14444                           indf1	equ	0xFE7
 14445                           postdec1	equ	0xFE5
 14446                           plusw1	equ	0xFE3
 14447                           fsr1h	equ	0xFE2
 14448                           fsr1l	equ	0xFE1
 14449                           indf2	equ	0xFDF
 14450                           postinc2	equ	0xFDE
 14451                           postdec2	equ	0xFDD
 14452                           plusw2	equ	0xFDB
 14453                           fsr2h	equ	0xFDA
 14454                           fsr2l	equ	0xFD9
 14455                           status	equ	0xFD8
 14456                           
 14457 ;; *************** function _internalFlash_readPage *****************
 14458 ;; Defined at:
 14459 ;;		line 37 in file "internal_flash.c"
 14460 ;; Parameters:    Size  Location     Type
 14461 ;;  page            2   21[COMRAM] unsigned int 
 14462 ;; Auto vars:     Size  Location     Type
 14463 ;;  address         4   23[COMRAM] unsigned long 
 14464 ;; Return value:  Size  Location     Type
 14465 ;;                  1    wreg      void 
 14466 ;; Registers used:
 14467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14468 ;; Tracked objects:
 14469 ;;		On entry : 0/0
 14470 ;;		On exit  : 0/0
 14471 ;;		Unchanged: 0/0
 14472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14477 ;;Total ram usage:        6 bytes
 14478 ;; Hardware stack levels used:    1
 14479 ;; Hardware stack levels required when called:    2
 14480 ;; This function calls:
 14481 ;;		_internalFlash_addressFromPage
 14482 ;;		_internalFlash_read
 14483 ;; This function is called by:
 14484 ;;		__bootloader_program
 14485 ;; This function uses a non-reentrant model
 14486 ;;
 14487                           
 14488                           	psect	text58
 14489  0074EA                     __ptext58:
 14490                           	opt stack 0
 14491  0074EA                     _internalFlash_readPage:
 14492                           	opt stack 26
 14493                           
 14494                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 14495                           
 14496                           ;incstack = 0
 14497  0074EA  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 14498  0074EE  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 14499  0074F2  EC9C  F03C         	call	_internalFlash_addressFromPage	;wreg free
 14500  0074F6  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 14501  0074FA  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 14502  0074FE  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 14503  007502  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 14504                           
 14505                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 14506  007506  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 14507  00750A  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 14508  00750E  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 14509  007512  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 14510  007516  0E04               	movlw	4
 14511  007518  6E13               	movwf	internalFlash_read@data_length+1,c
 14512  00751A  0E00               	movlw	0
 14513  00751C  6E12               	movwf	internalFlash_read@data_length,c
 14514  00751E  0E00               	movlw	low _pageBuffer
 14515  007520  6E14               	movwf	internalFlash_read@buffer,c
 14516  007522  0E08               	movlw	high _pageBuffer
 14517  007524  6E15               	movwf	internalFlash_read@buffer+1,c
 14518  007526  EC85  F03B         	call	_internalFlash_read	;wreg free
 14519  00752A  0012               	return		;funcret
 14520  00752C                     __end_of_internalFlash_readPage:
 14521                           	opt stack 0
 14522                           tblptru	equ	0xFF8
 14523                           tblptrh	equ	0xFF7
 14524                           tblptrl	equ	0xFF6
 14525                           tablat	equ	0xFF5
 14526                           prodh	equ	0xFF4
 14527                           prodl	equ	0xFF3
 14528                           intcon	equ	0xFF2
 14529                           intcon2	equ	0xFF1
 14530                           intcon3	equ	0xFF0
 14531                           postinc0	equ	0xFEE
 14532                           wreg	equ	0xFE8
 14533                           indf1	equ	0xFE7
 14534                           postdec1	equ	0xFE5
 14535                           plusw1	equ	0xFE3
 14536                           fsr1h	equ	0xFE2
 14537                           fsr1l	equ	0xFE1
 14538                           indf2	equ	0xFDF
 14539                           postinc2	equ	0xFDE
 14540                           postdec2	equ	0xFDD
 14541                           plusw2	equ	0xFDB
 14542                           fsr2h	equ	0xFDA
 14543                           fsr2l	equ	0xFD9
 14544                           status	equ	0xFD8
 14545                           
 14546 ;; *************** function _internalFlash_read *****************
 14547 ;; Defined at:
 14548 ;;		line 144 in file "internal_flash.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;  address         4   13[COMRAM] unsigned long 
 14551 ;;  data_length     2   17[COMRAM] unsigned int 
 14552 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 14553 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      unsigned char 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14565 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14568 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14569 ;;Total ram usage:        8 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:    1
 14572 ;; This function calls:
 14573 ;;		_memcpy
 14574 ;; This function is called by:
 14575 ;;		_internalFlash_readPage
 14576 ;;		__bootloader_verify_program_memory
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           	psect	text59
 14581  00770A                     __ptext59:
 14582                           	opt stack 0
 14583  00770A                     _internalFlash_read:
 14584                           	opt stack 26
 14585                           
 14586                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 14587                           
 14588                           ;incstack = 0
 14589  00770A  5011               	movf	internalFlash_read@address+3,w,c
 14590  00770C  E118               	bnz	l2402
 14591  00770E  280E               	incf	internalFlash_read@address,w,c
 14592  007710  0EFF               	movlw	255
 14593  007712  580F               	subwfb	internalFlash_read@address+1,w,c
 14594  007714  0E01               	movlw	1
 14595  007716  5810               	subwfb	internalFlash_read@address+2,w,c
 14596  007718  B0D8               	btfsc	status,0,c
 14597  00771A  0012               	return	
 14598                           
 14599                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 14600                           
 14601                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 14602  00771C  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 14603  007720  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 14604  007724  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 14605  007728  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 14606  00772C  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 14607  007730  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 14608  007734  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 14609  007738  ECAA  F035         	call	_memcpy	;wreg free
 14610  00773C  0012               	return	
 14611  00773E                     l2402:
 14612  00773E  0012               	return		;funcret
 14613  007740                     __end_of_internalFlash_read:
 14614                           	opt stack 0
 14615                           tblptru	equ	0xFF8
 14616                           tblptrh	equ	0xFF7
 14617                           tblptrl	equ	0xFF6
 14618                           tablat	equ	0xFF5
 14619                           prodh	equ	0xFF4
 14620                           prodl	equ	0xFF3
 14621                           intcon	equ	0xFF2
 14622                           intcon2	equ	0xFF1
 14623                           intcon3	equ	0xFF0
 14624                           postinc0	equ	0xFEE
 14625                           wreg	equ	0xFE8
 14626                           indf1	equ	0xFE7
 14627                           postdec1	equ	0xFE5
 14628                           plusw1	equ	0xFE3
 14629                           fsr1h	equ	0xFE2
 14630                           fsr1l	equ	0xFE1
 14631                           indf2	equ	0xFDF
 14632                           postinc2	equ	0xFDE
 14633                           postdec2	equ	0xFDD
 14634                           plusw2	equ	0xFDB
 14635                           fsr2h	equ	0xFDA
 14636                           fsr2l	equ	0xFD9
 14637                           status	equ	0xFD8
 14638                           
 14639 ;; *************** function _internalFlash_pageFromAddress *****************
 14640 ;; Defined at:
 14641 ;;		line 308 in file "internal_flash.c"
 14642 ;; Parameters:    Size  Location     Type
 14643 ;;  address         4    0[COMRAM] unsigned long 
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;		None
 14646 ;; Return value:  Size  Location     Type
 14647 ;;                  2    0[COMRAM] unsigned int 
 14648 ;; Registers used:
 14649 ;;		wreg, status,2, status,0
 14650 ;; Tracked objects:
 14651 ;;		On entry : 0/0
 14652 ;;		On exit  : 0/0
 14653 ;;		Unchanged: 0/0
 14654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14658 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14659 ;;Total ram usage:        5 bytes
 14660 ;; Hardware stack levels used:    1
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		__bootloader_program
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text60
 14669  007C2A                     __ptext60:
 14670                           	opt stack 0
 14671  007C2A                     _internalFlash_pageFromAddress:
 14672                           	opt stack 28
 14673                           
 14674                           ;internal_flash.c: 310: address >>= 10;
 14675                           
 14676                           ;incstack = 0
 14677  007C2A  0E0A               	movlw	10
 14678  007C2C  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 14679  007C2E                     u9815:
 14680  007C2E  90D8               	bcf	status,0,c
 14681  007C30  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 14682  007C32  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 14683  007C34  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 14684  007C36  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 14685  007C38  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 14686  007C3A  D7F9               	goto	u9815
 14687                           
 14688                           ;internal_flash.c: 311: return (uint16_t) address;
 14689  007C3C  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 14690  007C40  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 14691  007C44  0012               	return	
 14692  007C46                     __end_of_internalFlash_pageFromAddress:
 14693                           	opt stack 0
 14694                           tblptru	equ	0xFF8
 14695                           tblptrh	equ	0xFF7
 14696                           tblptrl	equ	0xFF6
 14697                           tablat	equ	0xFF5
 14698                           prodh	equ	0xFF4
 14699                           prodl	equ	0xFF3
 14700                           intcon	equ	0xFF2
 14701                           intcon2	equ	0xFF1
 14702                           intcon3	equ	0xFF0
 14703                           postinc0	equ	0xFEE
 14704                           wreg	equ	0xFE8
 14705                           indf1	equ	0xFE7
 14706                           postdec1	equ	0xFE5
 14707                           plusw1	equ	0xFE3
 14708                           fsr1h	equ	0xFE2
 14709                           fsr1l	equ	0xFE1
 14710                           indf2	equ	0xFDF
 14711                           postinc2	equ	0xFDE
 14712                           postdec2	equ	0xFDD
 14713                           plusw2	equ	0xFDB
 14714                           fsr2h	equ	0xFDA
 14715                           fsr2l	equ	0xFD9
 14716                           status	equ	0xFD8
 14717                           
 14718 ;; *************** function _internalFlash_getBuffer *****************
 14719 ;; Defined at:
 14720 ;;		line 32 in file "internal_flash.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;		None
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  2    0[COMRAM] PTR unsigned char 
 14727 ;; Registers used:
 14728 ;;		wreg, status,2, status,0
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14738 ;;Total ram usage:        2 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; This function calls:
 14741 ;;		Nothing
 14742 ;; This function is called by:
 14743 ;;		__bootloader_program
 14744 ;; This function uses a non-reentrant model
 14745 ;;
 14746                           
 14747                           	psect	text61
 14748  007D68                     __ptext61:
 14749                           	opt stack 0
 14750  007D68                     _internalFlash_getBuffer:
 14751                           	opt stack 28
 14752                           
 14753                           ;internal_flash.c: 34: return pageBuffer;
 14754                           
 14755                           ;incstack = 0
 14756  007D68  0E00               	movlw	low _pageBuffer
 14757  007D6A  6E01               	movwf	?_internalFlash_getBuffer,c
 14758  007D6C  0E08               	movlw	high _pageBuffer
 14759  007D6E  6E02               	movwf	?_internalFlash_getBuffer+1,c
 14760  007D70  0012               	return	
 14761  007D72                     __end_of_internalFlash_getBuffer:
 14762                           	opt stack 0
 14763                           tblptru	equ	0xFF8
 14764                           tblptrh	equ	0xFF7
 14765                           tblptrl	equ	0xFF6
 14766                           tablat	equ	0xFF5
 14767                           prodh	equ	0xFF4
 14768                           prodl	equ	0xFF3
 14769                           intcon	equ	0xFF2
 14770                           intcon2	equ	0xFF1
 14771                           intcon3	equ	0xFF0
 14772                           postinc0	equ	0xFEE
 14773                           wreg	equ	0xFE8
 14774                           indf1	equ	0xFE7
 14775                           postdec1	equ	0xFE5
 14776                           plusw1	equ	0xFE3
 14777                           fsr1h	equ	0xFE2
 14778                           fsr1l	equ	0xFE1
 14779                           indf2	equ	0xFDF
 14780                           postinc2	equ	0xFDE
 14781                           postdec2	equ	0xFDD
 14782                           plusw2	equ	0xFDB
 14783                           fsr2h	equ	0xFDA
 14784                           fsr2l	equ	0xFD9
 14785                           status	equ	0xFD8
 14786                           
 14787 ;; *************** function _internalFlash_erasePage *****************
 14788 ;; Defined at:
 14789 ;;		line 44 in file "internal_flash.c"
 14790 ;; Parameters:    Size  Location     Type
 14791 ;;  page            2    2[COMRAM] unsigned int 
 14792 ;; Auto vars:     Size  Location     Type
 14793 ;;  address         4    4[COMRAM] unsigned long 
 14794 ;; Return value:  Size  Location     Type
 14795 ;;                  1    wreg      void 
 14796 ;; Registers used:
 14797 ;;		wreg, status,2, status,0, cstack
 14798 ;; Tracked objects:
 14799 ;;		On entry : 0/0
 14800 ;;		On exit  : 0/0
 14801 ;;		Unchanged: 0/0
 14802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14807 ;;Total ram usage:        6 bytes
 14808 ;; Hardware stack levels used:    1
 14809 ;; Hardware stack levels required when called:    1
 14810 ;; This function calls:
 14811 ;;		__internalFlash_unlockAndActivate
 14812 ;; This function is called by:
 14813 ;;		__bootloader_program
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           	psect	text62
 14818  007774                     __ptext62:
 14819                           	opt stack 0
 14820  007774                     _internalFlash_erasePage:
 14821                           	opt stack 27
 14822                           
 14823                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 14824                           
 14825                           ;incstack = 0
 14826  007774  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 14827  007778  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 14828  00777C  6A07               	clrf	internalFlash_erasePage@address+2,c
 14829  00777E  6A08               	clrf	internalFlash_erasePage@address+3,c
 14830                           
 14831                           ;internal_flash.c: 50: address <<= 10;
 14832  007780  0E0A               	movlw	10
 14833  007782                     u9825:
 14834  007782  90D8               	bcf	status,0,c
 14835  007784  3605               	rlcf	internalFlash_erasePage@address,f,c
 14836  007786  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 14837  007788  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 14838  00778A  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 14839  00778C  2EE8               	decfsz	wreg,f,c
 14840  00778E  D7F9               	goto	u9825
 14841                           
 14842                           ;internal_flash.c: 51: TBLPTR = address;
 14843  007790  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 14844  007794  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 14845  007798  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 14846                           
 14847                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 14848  00779C  84A6               	bsf	4006,2,c	;volsfr
 14849                           
 14850                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 14851  00779E  88A6               	bsf	4006,4,c	;volsfr
 14852                           
 14853                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14854  0077A0  0EB5               	movlw	181
 14855  0077A2  EC34  F03D         	call	__internalFlash_unlockAndActivate
 14856  0077A6  0012               	return		;funcret
 14857  0077A8                     __end_of_internalFlash_erasePage:
 14858                           	opt stack 0
 14859                           tblptru	equ	0xFF8
 14860                           tblptrh	equ	0xFF7
 14861                           tblptrl	equ	0xFF6
 14862                           tablat	equ	0xFF5
 14863                           prodh	equ	0xFF4
 14864                           prodl	equ	0xFF3
 14865                           intcon	equ	0xFF2
 14866                           intcon2	equ	0xFF1
 14867                           intcon3	equ	0xFF0
 14868                           postinc0	equ	0xFEE
 14869                           wreg	equ	0xFE8
 14870                           indf1	equ	0xFE7
 14871                           postdec1	equ	0xFE5
 14872                           plusw1	equ	0xFE3
 14873                           fsr1h	equ	0xFE2
 14874                           fsr1l	equ	0xFE1
 14875                           indf2	equ	0xFDF
 14876                           postinc2	equ	0xFDE
 14877                           postdec2	equ	0xFDD
 14878                           plusw2	equ	0xFDB
 14879                           fsr2h	equ	0xFDA
 14880                           fsr2l	equ	0xFD9
 14881                           status	equ	0xFD8
 14882                           
 14883 ;; *************** function __internalFlash_unlockAndActivate *****************
 14884 ;; Defined at:
 14885 ;;		line 106 in file "internal_flash.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;  UnlockKey       1    wreg     unsigned char 
 14888 ;; Auto vars:     Size  Location     Type
 14889 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 14890 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1    wreg      void 
 14893 ;; Registers used:
 14894 ;;		wreg, status,2, status,0
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14904 ;;Total ram usage:        2 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; This function calls:
 14907 ;;		Nothing
 14908 ;; This function is called by:
 14909 ;;		_internalFlash_erasePage
 14910 ;;		_internalFlash_writePage
 14911 ;;		_EraseBlock
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           	psect	text63
 14916  007A68                     __ptext63:
 14917                           	opt stack 0
 14918  007A68                     __internalFlash_unlockAndActivate:
 14919                           	opt stack 27
 14920                           
 14921                           ;incstack = 0
 14922                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 14923  007A68  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 14924                           
 14925                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 14926  007A6A  0EB5               	movlw	181
 14927  007A6C  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 14928  007A6E  B4D8               	btfsc	status,2,c
 14929  007A70  D002               	goto	l2393
 14930                           
 14931                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 14932  007A72  94A6               	bcf	4006,2,c	;volsfr
 14933                           
 14934                           ;internal_flash.c: 118: return;
 14935  007A74  0012               	return	
 14936  007A76                     l2393:
 14937                           
 14938                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 14939  007A76  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 14940                           
 14941                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 14942  007A7A  9EF2               	bcf	intcon,7,c	;volatile
 14943                           
 14944                           ;internal_flash.c: 123: EECON2 = 0x55;
 14945  007A7C  0E55               	movlw	85
 14946  007A7E  6EA7               	movwf	4007,c	;volsfr
 14947                           
 14948                           ;internal_flash.c: 124: EECON2 = 0xAA;
 14949  007A80  0EAA               	movlw	170
 14950  007A82  6EA7               	movwf	4007,c	;volsfr
 14951                           
 14952                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 14953  007A84  82A6               	bsf	4006,1,c	;volsfr
 14954                           
 14955                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 14956  007A86  94A6               	bcf	4006,2,c	;volsfr
 14957                           
 14958                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 14959  007A88  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 14960  007A8A  0012               	return	
 14961                           
 14962                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 14963  007A8C  8EF2               	bsf	intcon,7,c	;volatile
 14964  007A8E  0012               	return	
 14965  007A90                     __end_of__internalFlash_unlockAndActivate:
 14966                           	opt stack 0
 14967                           tblptru	equ	0xFF8
 14968                           tblptrh	equ	0xFF7
 14969                           tblptrl	equ	0xFF6
 14970                           tablat	equ	0xFF5
 14971                           prodh	equ	0xFF4
 14972                           prodl	equ	0xFF3
 14973                           intcon	equ	0xFF2
 14974                           intcon2	equ	0xFF1
 14975                           intcon3	equ	0xFF0
 14976                           postinc0	equ	0xFEE
 14977                           wreg	equ	0xFE8
 14978                           indf1	equ	0xFE7
 14979                           postdec1	equ	0xFE5
 14980                           plusw1	equ	0xFE3
 14981                           fsr1h	equ	0xFE2
 14982                           fsr1l	equ	0xFE1
 14983                           indf2	equ	0xFDF
 14984                           postinc2	equ	0xFDE
 14985                           postdec2	equ	0xFDD
 14986                           plusw2	equ	0xFDB
 14987                           fsr2h	equ	0xFDA
 14988                           fsr2l	equ	0xFD9
 14989                           status	equ	0xFD8
 14990                           
 14991 ;; *************** function _internalFlash_addressWithinPage *****************
 14992 ;; Defined at:
 14993 ;;		line 322 in file "internal_flash.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;  address         4    8[COMRAM] unsigned long 
 14996 ;;  page            2   12[COMRAM] unsigned int 
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;  page_start_a    4   18[COMRAM] unsigned long 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  2    8[COMRAM] unsigned int 
 15001 ;; Registers used:
 15002 ;;		wreg, status,2, status,0, cstack
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15008 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15009 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15012 ;;Total ram usage:       14 bytes
 15013 ;; Hardware stack levels used:    1
 15014 ;; Hardware stack levels required when called:    1
 15015 ;; This function calls:
 15016 ;;		_internalFlash_addressFromPage
 15017 ;; This function is called by:
 15018 ;;		__bootloader_program
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           
 15022                           	psect	text64
 15023  006C7E                     __ptext64:
 15024                           	opt stack 0
 15025  006C7E                     _internalFlash_addressWithinPage:
 15026                           	opt stack 27
 15027                           
 15028                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 15029                           
 15030                           ;incstack = 0
 15031  006C7E  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 15032  006C82  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 15033  006C86  EC9C  F03C         	call	_internalFlash_addressFromPage	;wreg free
 15034  006C8A  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 15035  006C8E  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 15036  006C92  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 15037  006C96  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 15038                           
 15039                           ;internal_flash.c: 326: address = address - page_start_address;
 15040  006C9A  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 15041  006C9E  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 15042  006CA2  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 15043  006CA6  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 15044  006CAA  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 15045  006CAC  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 15046  006CAE  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 15047  006CB0  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 15048  006CB2  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 15049  006CB4  0E00               	movlw	0
 15050  006CB6  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 15051  006CB8  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 15052  006CBA  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 15053  006CBC  5009               	movf	internalFlash_addressWithinPage@address,w,c
 15054  006CBE  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 15055  006CC0  6E09               	movwf	internalFlash_addressWithinPage@address,c
 15056  006CC2  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 15057  006CC4  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 15058  006CC6  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 15059  006CC8  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 15060  006CCA  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 15061  006CCC  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 15062  006CCE  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 15063  006CD0  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 15064  006CD2  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 15065                           
 15066                           ;internal_flash.c: 327: return (uint16_t) address;
 15067  006CD4  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 15068  006CD8  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 15069  006CDC  0012               	return	
 15070  006CDE                     __end_of_internalFlash_addressWithinPage:
 15071                           	opt stack 0
 15072                           tblptru	equ	0xFF8
 15073                           tblptrh	equ	0xFF7
 15074                           tblptrl	equ	0xFF6
 15075                           tablat	equ	0xFF5
 15076                           prodh	equ	0xFF4
 15077                           prodl	equ	0xFF3
 15078                           intcon	equ	0xFF2
 15079                           intcon2	equ	0xFF1
 15080                           intcon3	equ	0xFF0
 15081                           postinc0	equ	0xFEE
 15082                           wreg	equ	0xFE8
 15083                           indf1	equ	0xFE7
 15084                           postdec1	equ	0xFE5
 15085                           plusw1	equ	0xFE3
 15086                           fsr1h	equ	0xFE2
 15087                           fsr1l	equ	0xFE1
 15088                           indf2	equ	0xFDF
 15089                           postinc2	equ	0xFDE
 15090                           postdec2	equ	0xFDD
 15091                           plusw2	equ	0xFDB
 15092                           fsr2h	equ	0xFDA
 15093                           fsr2l	equ	0xFD9
 15094                           status	equ	0xFD8
 15095                           
 15096 ;; *************** function _internalFlash_addressFromPage *****************
 15097 ;; Defined at:
 15098 ;;		line 314 in file "internal_flash.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  page            2    0[COMRAM] unsigned int 
 15101 ;; Auto vars:     Size  Location     Type
 15102 ;;  address         4    4[COMRAM] unsigned long 
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  4    0[COMRAM] unsigned long 
 15105 ;; Registers used:
 15106 ;;		wreg, status,2, status,0
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15116 ;;Total ram usage:        8 bytes
 15117 ;; Hardware stack levels used:    1
 15118 ;; This function calls:
 15119 ;;		Nothing
 15120 ;; This function is called by:
 15121 ;;		_internalFlash_readPage
 15122 ;;		_internalFlash_addressWithinPage
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           	psect	text65
 15127  007938                     __ptext65:
 15128                           	opt stack 0
 15129  007938                     _internalFlash_addressFromPage:
 15130                           	opt stack 27
 15131                           
 15132                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 15133                           
 15134                           ;incstack = 0
 15135  007938  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 15136  00793C  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 15137  007940  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 15138  007942  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 15139                           
 15140                           ;internal_flash.c: 318: address <<= 10;
 15141  007944  0E0A               	movlw	10
 15142  007946                     u8945:
 15143  007946  90D8               	bcf	status,0,c
 15144  007948  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 15145  00794A  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 15146  00794C  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 15147  00794E  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 15148  007950  2EE8               	decfsz	wreg,f,c
 15149  007952  D7F9               	goto	u8945
 15150                           
 15151                           ;internal_flash.c: 319: return address;
 15152  007954  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 15153  007958  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 15154  00795C  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 15155  007960  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 15156  007964  0012               	return	
 15157  007966                     __end_of_internalFlash_addressFromPage:
 15158                           	opt stack 0
 15159                           tblptru	equ	0xFF8
 15160                           tblptrh	equ	0xFF7
 15161                           tblptrl	equ	0xFF6
 15162                           tablat	equ	0xFF5
 15163                           prodh	equ	0xFF4
 15164                           prodl	equ	0xFF3
 15165                           intcon	equ	0xFF2
 15166                           intcon2	equ	0xFF1
 15167                           intcon3	equ	0xFF0
 15168                           postinc0	equ	0xFEE
 15169                           wreg	equ	0xFE8
 15170                           indf1	equ	0xFE7
 15171                           postdec1	equ	0xFE5
 15172                           plusw1	equ	0xFE3
 15173                           fsr1h	equ	0xFE2
 15174                           fsr1l	equ	0xFE1
 15175                           indf2	equ	0xFDF
 15176                           postinc2	equ	0xFDE
 15177                           postdec2	equ	0xFDD
 15178                           plusw2	equ	0xFDB
 15179                           fsr2h	equ	0xFDA
 15180                           fsr2l	equ	0xFD9
 15181                           status	equ	0xFD8
 15182                           
 15183 ;; *************** function __bootloader_check_address *****************
 15184 ;; Defined at:
 15185 ;;		line 100 in file "bootloader.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;  address         4    0[COMRAM] unsigned long 
 15188 ;;  dataLength      1    4[COMRAM] unsigned char 
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;  cntr            1   11[COMRAM] unsigned char 
 15191 ;;  byte_status     1   10[COMRAM] enum E6927
 15192 ;;  worst_case      1    9[COMRAM] enum E6927
 15193 ;; Return value:  Size  Location     Type
 15194 ;;                  1    wreg      enum E6927
 15195 ;; Registers used:
 15196 ;;		wreg, status,2, status,0
 15197 ;; Tracked objects:
 15198 ;;		On entry : 0/0
 15199 ;;		On exit  : 0/0
 15200 ;;		Unchanged: 0/0
 15201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15202 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15203 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15205 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15206 ;;Total ram usage:       12 bytes
 15207 ;; Hardware stack levels used:    1
 15208 ;; This function calls:
 15209 ;;		Nothing
 15210 ;; This function is called by:
 15211 ;;		__bootloader_verify_file
 15212 ;;		__bootloader_program
 15213 ;; This function uses a non-reentrant model
 15214 ;;
 15215                           
 15216                           	psect	text66
 15217  004BAC                     __ptext66:
 15218                           	opt stack 0
 15219  004BAC                     __bootloader_check_address:
 15220                           	opt stack 28
 15221                           
 15222                           ;bootloader.c: 102: addressCheckResult_t byte_status;;bootloader.c: 103: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 104: uint8_t cntr;;bootloader.c: 106: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 15223                           
 15224                           ;incstack = 0
 15225  004BAC  0E00               	movlw	0
 15226  004BAE  6E0A               	movwf	__bootloader_check_address@worst_case,c
 15227                           
 15228                           ;bootloader.c: 109: for(cntr=0; cntr<dataLength; ++cntr)
 15229  004BB0  0E00               	movlw	0
 15230  004BB2  6E0C               	movwf	__bootloader_check_address@cntr,c
 15231  004BB4  D062               	goto	l2255
 15232  004BB6                     
 15233                           ;bootloader.c: 110: {;bootloader.c: 112: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 15234  004BB6  500C               	movf	__bootloader_check_address@cntr,w,c
 15235  004BB8  2401               	addwf	__bootloader_check_address@address,w,c
 15236  004BBA  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15237  004BBC  0E00               	movlw	0
 15238  004BBE  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15239  004BC0  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15240  004BC2  0E00               	movlw	0
 15241  004BC4  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15242  004BC6  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15243  004BC8  0E00               	movlw	0
 15244  004BCA  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15245  004BCC  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15246  004BCE  5009               	movf	??__bootloader_check_address+3,w,c
 15247  004BD0  1008               	iorwf	??__bootloader_check_address+2,w,c
 15248  004BD2  E104               	bnz	u9740
 15249  004BD4  0E90               	movlw	144
 15250  004BD6  5C07               	subwf	??__bootloader_check_address+1,w,c
 15251  004BD8  A0D8               	btfss	status,0,c
 15252  004BDA  D018               	goto	l2257
 15253  004BDC                     u9740:
 15254  004BDC  500C               	movf	__bootloader_check_address@cntr,w,c
 15255  004BDE  2401               	addwf	__bootloader_check_address@address,w,c
 15256  004BE0  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15257  004BE2  0E00               	movlw	0
 15258  004BE4  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15259  004BE6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15260  004BE8  0E00               	movlw	0
 15261  004BEA  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15262  004BEC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15263  004BEE  0E00               	movlw	0
 15264  004BF0  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15265  004BF2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15266  004BF4  5009               	movf	??__bootloader_check_address+3,w,c
 15267  004BF6  E10A               	bnz	l12764
 15268  004BF8  0EF8               	movlw	248
 15269  004BFA  5C06               	subwf	??__bootloader_check_address,w,c
 15270  004BFC  0EFF               	movlw	255
 15271  004BFE  5807               	subwfb	??__bootloader_check_address+1,w,c
 15272  004C00  0E01               	movlw	1
 15273  004C02  5808               	subwfb	??__bootloader_check_address+2,w,c
 15274  004C04  B0D8               	btfsc	status,0,c
 15275  004C06  D002               	goto	l2257
 15276                           
 15277                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_OK;
 15278  004C08  0E00               	movlw	0
 15279  004C0A  D029               	goto	L4
 15280  004C0C                     l2257:
 15281  004C0C                     l12764:
 15282                           
 15283                           ;bootloader.c: 118: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 15284  004C0C  500C               	movf	__bootloader_check_address@cntr,w,c
 15285  004C0E  2401               	addwf	__bootloader_check_address@address,w,c
 15286  004C10  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15287  004C12  0E00               	movlw	0
 15288  004C14  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15289  004C16  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15290  004C18  0E00               	movlw	0
 15291  004C1A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15292  004C1C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15293  004C1E  0E00               	movlw	0
 15294  004C20  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15295  004C22  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15296  004C24  5009               	movf	??__bootloader_check_address+3,w,c
 15297  004C26  E108               	bnz	u9760
 15298  004C28  0EF8               	movlw	248
 15299  004C2A  5C06               	subwf	??__bootloader_check_address,w,c
 15300  004C2C  0EFF               	movlw	255
 15301  004C2E  5807               	subwfb	??__bootloader_check_address+1,w,c
 15302  004C30  0E01               	movlw	1
 15303  004C32  5808               	subwfb	??__bootloader_check_address+2,w,c
 15304  004C34  A0D8               	btfss	status,0,c
 15305  004C36  D015               	goto	l2259
 15306  004C38                     u9760:
 15307  004C38  500C               	movf	__bootloader_check_address@cntr,w,c
 15308  004C3A  2401               	addwf	__bootloader_check_address@address,w,c
 15309  004C3C  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15310  004C3E  0E00               	movlw	0
 15311  004C40  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15312  004C42  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15313  004C44  0E00               	movlw	0
 15314  004C46  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15315  004C48  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15316  004C4A  0E00               	movlw	0
 15317  004C4C  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15318  004C4E  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15319  004C50  5009               	movf	??__bootloader_check_address+3,w,c
 15320  004C52  E107               	bnz	l2259
 15321  004C54  0E02               	movlw	2
 15322  004C56  5C08               	subwf	??__bootloader_check_address+2,w,c
 15323  004C58  B0D8               	btfsc	status,0,c
 15324  004C5A  D003               	goto	l2259
 15325                           
 15326                           ;bootloader.c: 119: {;bootloader.c: 120: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 15327  004C5C  0E01               	movlw	1
 15328  004C5E                     L4:
 15329  004C5E  6E0B               	movwf	__bootloader_check_address@byte_status,c
 15330                           
 15331                           ;bootloader.c: 121: }
 15332  004C60  D001               	goto	l2260
 15333  004C62                     l2259:
 15334                           
 15335                           ;bootloader.c: 122: else;bootloader.c: 123: {;bootloader.c: 124: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 15336  004C62  680B               	setf	__bootloader_check_address@byte_status,c
 15337  004C64                     l2260:
 15338                           
 15339                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 15340  004C64  280B               	incf	__bootloader_check_address@byte_status,w,c
 15341  004C66  A4D8               	btfss	status,2,c
 15342  004C68  D002               	goto	l2261
 15343                           
 15344                           ;bootloader.c: 129: {;bootloader.c: 130: return ADDRESS_CHECK_RESULT_ERROR;
 15345  004C6A  0EFF               	movlw	255
 15346  004C6C  0012               	return	
 15347  004C6E                     l2261:
 15348                           
 15349                           ;bootloader.c: 131: };bootloader.c: 134: if(byte_status > worst_case)
 15350  004C6E  500B               	movf	__bootloader_check_address@byte_status,w,c
 15351  004C70  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 15352  004C72  A0D8               	btfss	status,0,c
 15353                           
 15354                           ;bootloader.c: 135: {;bootloader.c: 136: worst_case = byte_status;
 15355  004C74  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 15356  004C78  2A0C               	incf	__bootloader_check_address@cntr,f,c
 15357  004C7A                     l2255:
 15358  004C7A  5005               	movf	__bootloader_check_address@dataLength,w,c
 15359  004C7C  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 15360  004C7E  A0D8               	btfss	status,0,c
 15361  004C80  D79A               	goto	l2256
 15362                           
 15363                           ;bootloader.c: 137: };bootloader.c: 138: };bootloader.c: 140: return worst_case;
 15364  004C82  500A               	movf	__bootloader_check_address@worst_case,w,c
 15365  004C84  0012               	return	
 15366  004C86                     __end_of__bootloader_check_address:
 15367                           	opt stack 0
 15368                           tblptru	equ	0xFF8
 15369                           tblptrh	equ	0xFF7
 15370                           tblptrl	equ	0xFF6
 15371                           tablat	equ	0xFF5
 15372                           prodh	equ	0xFF4
 15373                           prodl	equ	0xFF3
 15374                           intcon	equ	0xFF2
 15375                           intcon2	equ	0xFF1
 15376                           intcon3	equ	0xFF0
 15377                           postinc0	equ	0xFEE
 15378                           wreg	equ	0xFE8
 15379                           indf1	equ	0xFE7
 15380                           postdec1	equ	0xFE5
 15381                           plusw1	equ	0xFE3
 15382                           fsr1h	equ	0xFE2
 15383                           fsr1l	equ	0xFE1
 15384                           indf2	equ	0xFDF
 15385                           postinc2	equ	0xFDE
 15386                           postdec2	equ	0xFDD
 15387                           plusw2	equ	0xFDB
 15388                           fsr2h	equ	0xFDA
 15389                           fsr2l	equ	0xFD9
 15390                           status	equ	0xFD8
 15391                           
 15392 ;; *************** function __bootloader_find_file *****************
 15393 ;; Defined at:
 15394 ;;		line 143 in file "bootloader.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;		None
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;		None
 15399 ;; Return value:  Size  Location     Type
 15400 ;;                  1    wreg      void 
 15401 ;; Registers used:
 15402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15403 ;; Tracked objects:
 15404 ;;		On entry : 0/0
 15405 ;;		On exit  : 0/0
 15406 ;;		Unchanged: 0/0
 15407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15412 ;;Total ram usage:        0 bytes
 15413 ;; Hardware stack levels used:    1
 15414 ;; Hardware stack levels required when called:    6
 15415 ;; This function calls:
 15416 ;;		_fat_find_file
 15417 ;;		_fat_get_file_size
 15418 ;; This function is called by:
 15419 ;;		_bootloader_run
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text67
 15424  005A42                     __ptext67:
 15425                           	opt stack 0
 15426  005A42                     __bootloader_find_file:
 15427                           	opt stack 23
 15428                           
 15429                           ;bootloader.c: 146: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 15430                           
 15431                           ;incstack = 0
 15432  005A42  0EB6               	movlw	low _bootloader_filename
 15433  005A44  6E30               	movwf	fat_find_file@name,c
 15434  005A46  0E8F               	movlw	high _bootloader_filename
 15435  005A48  6E31               	movwf	fat_find_file@name+1,c
 15436  005A4A  0EC7               	movlw	low _bootloader_extension
 15437  005A4C  6E32               	movwf	fat_find_file@extension,c
 15438  005A4E  0E8F               	movlw	high _bootloader_extension
 15439  005A50  6E33               	movwf	fat_find_file@extension+1,c
 15440  005A52  EC63  F029         	call	_fat_find_file	;wreg free
 15441  005A56  0100               	movlb	0	; () banked
 15442  005A58  6FFE               	movwf	_file_number& (0+255),b
 15443                           
 15444                           ; BSR set to: 0
 15445                           ;bootloader.c: 149: if(file_number!=0xFF)
 15446  005A5A  29FE               	incf	_file_number& (0+255),w,b
 15447  005A5C  B4D8               	btfsc	status,2,c
 15448  005A5E  D034               	goto	l2267
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;bootloader.c: 150: {;bootloader.c: 152: hex_file_size = fat_get_file_size(file_number);
 15452  005A60  51FE               	movf	_file_number& (0+255),w,b
 15453  005A62  EC56  F033         	call	_fat_get_file_size
 15454  005A66  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 15455  005A6A  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 15456  005A6E  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 15457  005A72  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 15458                           
 15459                           ;bootloader.c: 154: hex_file_entries = 0;
 15460  005A76  0E00               	movlw	0
 15461  005A78  0101               	movlb	1	; () banked
 15462  005A7A  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 15463  005A7C  0E00               	movlw	0
 15464  005A7E  6F6A               	movwf	_hex_file_entries& (0+255),b
 15465                           
 15466                           ; BSR set to: 1
 15467                           ;bootloader.c: 155: hex_file_offset = 0;
 15468  005A80  0E00               	movlw	0
 15469  005A82  0100               	movlb	0	; () banked
 15470  005A84  6F7C               	movwf	_hex_file_offset& (0+255),b
 15471  005A86  0E00               	movlw	0
 15472  005A88  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 15473  005A8A  0E00               	movlw	0
 15474  005A8C  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 15475  005A8E  0E00               	movlw	0
 15476  005A90  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 15477                           
 15478                           ; BSR set to: 0
 15479                           ;bootloader.c: 156: file_minimum_address = 0xFFFFFFFF;
 15480  005A92  0101               	movlb	1	; () banked
 15481  005A94  6948               	setf	_file_minimum_address& (0+255),b
 15482  005A96  6949               	setf	(_file_minimum_address+1)& (0+255),b
 15483  005A98  694A               	setf	(_file_minimum_address+2)& (0+255),b
 15484  005A9A  694B               	setf	(_file_minimum_address+3)& (0+255),b
 15485                           
 15486                           ; BSR set to: 1
 15487                           ;bootloader.c: 157: file_maximum_address = 0x00000000;
 15488  005A9C  0E00               	movlw	0
 15489  005A9E  6F44               	movwf	_file_maximum_address& (0+255),b
 15490  005AA0  0E00               	movlw	0
 15491  005AA2  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 15492  005AA4  0E00               	movlw	0
 15493  005AA6  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 15494  005AA8  0E00               	movlw	0
 15495  005AAA  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 15496                           
 15497                           ; BSR set to: 1
 15498                           ;bootloader.c: 158: extended_linear_address = 0x00000000;
 15499  005AAC  0E00               	movlw	0
 15500  005AAE  6F40               	movwf	_extended_linear_address& (0+255),b
 15501  005AB0  0E00               	movlw	0
 15502  005AB2  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 15503  005AB4  0E00               	movlw	0
 15504  005AB6  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 15505  005AB8  0E00               	movlw	0
 15506  005ABA  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 15507                           
 15508                           ; BSR set to: 1
 15509                           ;bootloader.c: 159: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 15510  005ABC  0E10               	movlw	16
 15511  005ABE  0100               	movlb	0	; () banked
 15512  005AC0  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15513                           
 15514                           ; BSR set to: 0
 15515                           ;bootloader.c: 160: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 15516  005AC2  0E10               	movlw	16
 15517  005AC4  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15518                           
 15519                           ;bootloader.c: 161: }
 15520  005AC6  0012               	return	
 15521  005AC8                     l2267:
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;bootloader.c: 163: else;bootloader.c: 164: {;bootloader.c: 166: hex_file_size = 0;
 15525                           
 15526                           ; BSR set to: 0
 15527  005AC8  0E00               	movlw	0
 15528  005ACA  6F78               	movwf	_hex_file_size& (0+255),b
 15529  005ACC  0E00               	movlw	0
 15530  005ACE  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 15531  005AD0  0E00               	movlw	0
 15532  005AD2  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 15533  005AD4  0E00               	movlw	0
 15534  005AD6  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 15535                           
 15536                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_START;
 15537  005AD8  0E00               	movlw	0
 15538  005ADA  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15539                           
 15540                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 15541  005ADC  0E00               	movlw	0
 15542  005ADE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15543  005AE0  0012               	return	
 15544  005AE2                     __end_of__bootloader_find_file:
 15545                           	opt stack 0
 15546                           tblptru	equ	0xFF8
 15547                           tblptrh	equ	0xFF7
 15548                           tblptrl	equ	0xFF6
 15549                           tablat	equ	0xFF5
 15550                           prodh	equ	0xFF4
 15551                           prodl	equ	0xFF3
 15552                           intcon	equ	0xFF2
 15553                           intcon2	equ	0xFF1
 15554                           intcon3	equ	0xFF0
 15555                           postinc0	equ	0xFEE
 15556                           wreg	equ	0xFE8
 15557                           indf1	equ	0xFE7
 15558                           postdec1	equ	0xFE5
 15559                           plusw1	equ	0xFE3
 15560                           fsr1h	equ	0xFE2
 15561                           fsr1l	equ	0xFE1
 15562                           indf2	equ	0xFDF
 15563                           postinc2	equ	0xFDE
 15564                           postdec2	equ	0xFDD
 15565                           plusw2	equ	0xFDB
 15566                           fsr2h	equ	0xFDA
 15567                           fsr2l	equ	0xFD9
 15568                           status	equ	0xFD8
 15569                           
 15570 ;; *************** function __normal_mode *****************
 15571 ;; Defined at:
 15572 ;;		line 202 in file "main.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;		None
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;		None
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1    wreg      unsigned char 
 15579 ;; Registers used:
 15580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15590 ;;Total ram usage:        0 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:    3
 15593 ;; This function calls:
 15594 ;;		_i2c_eeprom_readByte
 15595 ;;		_i2c_eeprom_writeByte
 15596 ;; This function is called by:
 15597 ;;		_main
 15598 ;; This function uses a non-reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text68
 15602  006DF4                     __ptext68:
 15603                           	opt stack 0
 15604  006DF4                     __normal_mode:
 15605                           	opt stack 27
 15606                           
 15607                           ;main.c: 204: if(i2c_eeprom_readByte(0x100)==0x94)
 15608                           
 15609                           ; BSR set to: 0
 15610                           ;incstack = 0
 15611  006DF4  0E01               	movlw	1
 15612  006DF6  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15613  006DF8  0E00               	movlw	0
 15614  006DFA  6E12               	movwf	i2c_eeprom_readByte@address,c
 15615  006DFC  EC55  F039         	call	_i2c_eeprom_readByte	;wreg free
 15616  006E00  0A94               	xorlw	148
 15617  006E02  A4D8               	btfss	status,2,c
 15618  006E04  D00A               	goto	l907
 15619                           
 15620                           ;main.c: 205: {;main.c: 207: i2c_eeprom_writeByte(0x100, 0x00);
 15621  006E06  0E01               	movlw	1
 15622  006E08  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15623  006E0A  0E00               	movlw	0
 15624  006E0C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15625  006E0E  0E00               	movlw	0
 15626  006E10  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15627  006E12  EC96  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 15628                           
 15629                           ;main.c: 209: return 0;
 15630  006E16  0E00               	movlw	0
 15631                           
 15632                           ;main.c: 210: }
 15633  006E18  0012               	return	
 15634  006E1A                     l907:
 15635                           
 15636                           ;main.c: 211: else if(i2c_eeprom_readByte(0x100)==0x78)
 15637  006E1A  0E01               	movlw	1
 15638  006E1C  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15639  006E1E  0E00               	movlw	0
 15640  006E20  6E12               	movwf	i2c_eeprom_readByte@address,c
 15641  006E22  EC55  F039         	call	_i2c_eeprom_readByte	;wreg free
 15642  006E26  0A78               	xorlw	120
 15643  006E28  A4D8               	btfss	status,2,c
 15644  006E2A  D00A               	goto	l910
 15645                           
 15646                           ;main.c: 212: {;main.c: 214: i2c_eeprom_writeByte(0x100, 0x00);
 15647  006E2C  0E01               	movlw	1
 15648  006E2E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15649  006E30  0E00               	movlw	0
 15650  006E32  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15651  006E34  0E00               	movlw	0
 15652  006E36  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15653  006E38  EC96  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 15654                           
 15655                           ;main.c: 216: return 1;
 15656  006E3C  0E01               	movlw	1
 15657                           
 15658                           ;main.c: 217: }
 15659  006E3E  0012               	return	
 15660  006E40                     l910:
 15661                           
 15662                           ;main.c: 218: else if(!PORTAbits.RA0)
 15663  006E40  B080               	btfsc	3968,0,c	;volatile
 15664  006E42  D002               	goto	l912
 15665                           
 15666                           ;main.c: 219: {;main.c: 221: return 0;
 15667  006E44  0E00               	movlw	0
 15668                           
 15669                           ;main.c: 222: }
 15670  006E46  0012               	return	
 15671  006E48                     l912:
 15672                           
 15673                           ;main.c: 223: else;main.c: 224: {;main.c: 226: return 1;
 15674  006E48  0E01               	movlw	1
 15675  006E4A  0012               	return	
 15676  006E4C                     __end_of__normal_mode:
 15677                           	opt stack 0
 15678                           tblptru	equ	0xFF8
 15679                           tblptrh	equ	0xFF7
 15680                           tblptrl	equ	0xFF6
 15681                           tablat	equ	0xFF5
 15682                           prodh	equ	0xFF4
 15683                           prodl	equ	0xFF3
 15684                           intcon	equ	0xFF2
 15685                           intcon2	equ	0xFF1
 15686                           intcon3	equ	0xFF0
 15687                           postinc0	equ	0xFEE
 15688                           wreg	equ	0xFE8
 15689                           indf1	equ	0xFE7
 15690                           postdec1	equ	0xFE5
 15691                           plusw1	equ	0xFE3
 15692                           fsr1h	equ	0xFE2
 15693                           fsr1l	equ	0xFE1
 15694                           indf2	equ	0xFDF
 15695                           postinc2	equ	0xFDE
 15696                           postdec2	equ	0xFDD
 15697                           plusw2	equ	0xFDB
 15698                           fsr2h	equ	0xFDA
 15699                           fsr2l	equ	0xFD9
 15700                           status	equ	0xFD8
 15701                           
 15702 ;; *************** function _i2c_eeprom_readByte *****************
 15703 ;; Defined at:
 15704 ;;		line 359 in file "i2c.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;  address         2   17[COMRAM] unsigned int 
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;  addr            1   23[COMRAM] unsigned char 
 15709 ;;  slave_addres    1   22[COMRAM] unsigned char 
 15710 ;; Return value:  Size  Location     Type
 15711 ;;                  1    wreg      unsigned char 
 15712 ;; Registers used:
 15713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15721 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15723 ;;Total ram usage:        7 bytes
 15724 ;; Hardware stack levels used:    1
 15725 ;; Hardware stack levels required when called:    2
 15726 ;; This function calls:
 15727 ;;		__i2c_read
 15728 ;;		__i2c_write
 15729 ;;		_i2c_set_frequency
 15730 ;; This function is called by:
 15731 ;;		__normal_mode
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text69
 15736  0072AA                     __ptext69:
 15737                           	opt stack 0
 15738  0072AA                     _i2c_eeprom_readByte:
 15739                           	opt stack 27
 15740                           
 15741                           ;i2c.c: 361: uint8_t slave_address;;i2c.c: 362: uint8_t addr;;i2c.c: 363: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 15742                           
 15743                           ;incstack = 0
 15744  0072AA  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 15745  0072AE  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 15746  0072B2  0E07               	movlw	7
 15747  0072B4  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 15748  0072B6                     u10395:
 15749  0072B6  90D8               	bcf	status,0,c
 15750  0072B8  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 15751  0072BA  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 15752  0072BC  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 15753  0072BE  D7FB               	goto	u10395
 15754  0072C0  5014               	movf	??_i2c_eeprom_readByte,w,c
 15755  0072C2  0B0E               	andlw	14
 15756  0072C4  09A0               	iorlw	160
 15757  0072C6  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 15758                           
 15759                           ;i2c.c: 364: addr = address & 0xFF;
 15760  0072C8  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 15761                           
 15762                           ;i2c.c: 367: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15763  0072CC  0E02               	movlw	2
 15764  0072CE  ECF5  F03C         	call	_i2c_set_frequency
 15765                           
 15766                           ;i2c.c: 369: _i2c_write(slave_address, &addr, 1);
 15767  0072D2  0E18               	movlw	low i2c_eeprom_readByte@addr
 15768  0072D4  6E06               	movwf	__i2c_write@data,c
 15769  0072D6  0E00               	movlw	high i2c_eeprom_readByte@addr
 15770  0072D8  6E07               	movwf	__i2c_write@data+1,c
 15771  0072DA  0E01               	movlw	1
 15772  0072DC  6E08               	movwf	__i2c_write@length,c
 15773  0072DE  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15774  0072E0  ECC9  F039         	call	__i2c_write
 15775                           
 15776                           ;i2c.c: 370: _i2c_read(slave_address, &addr, 1);
 15777  0072E4  0E18               	movlw	low i2c_eeprom_readByte@addr
 15778  0072E6  6E06               	movwf	__i2c_read@data,c
 15779  0072E8  0E00               	movlw	high i2c_eeprom_readByte@addr
 15780  0072EA  6E07               	movwf	__i2c_read@data+1,c
 15781  0072EC  0E01               	movlw	1
 15782  0072EE  6E08               	movwf	__i2c_read@length,c
 15783  0072F0  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15784  0072F2  EC62  F030         	call	__i2c_read
 15785                           
 15786                           ;i2c.c: 371: return addr;
 15787  0072F6  5018               	movf	i2c_eeprom_readByte@addr,w,c
 15788  0072F8  0012               	return	
 15789  0072FA                     __end_of_i2c_eeprom_readByte:
 15790                           	opt stack 0
 15791                           tblptru	equ	0xFF8
 15792                           tblptrh	equ	0xFF7
 15793                           tblptrl	equ	0xFF6
 15794                           tablat	equ	0xFF5
 15795                           prodh	equ	0xFF4
 15796                           prodl	equ	0xFF3
 15797                           intcon	equ	0xFF2
 15798                           intcon2	equ	0xFF1
 15799                           intcon3	equ	0xFF0
 15800                           postinc0	equ	0xFEE
 15801                           wreg	equ	0xFE8
 15802                           indf1	equ	0xFE7
 15803                           postdec1	equ	0xFE5
 15804                           plusw1	equ	0xFE3
 15805                           fsr1h	equ	0xFE2
 15806                           fsr1l	equ	0xFE1
 15807                           indf2	equ	0xFDF
 15808                           postinc2	equ	0xFDE
 15809                           postdec2	equ	0xFDD
 15810                           plusw2	equ	0xFDB
 15811                           fsr2h	equ	0xFDA
 15812                           fsr2l	equ	0xFD9
 15813                           status	equ	0xFD8
 15814                           
 15815 ;; *************** function __i2c_read *****************
 15816 ;; Defined at:
 15817 ;;		line 153 in file "i2c.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  slave_addres    1    wreg     unsigned char 
 15820 ;;  data            2    5[COMRAM] PTR unsigned char 
 15821 ;;		 -> i2c_eeprom_readByte@addr(1), 
 15822 ;;  length          1    7[COMRAM] unsigned char 
 15823 ;; Auto vars:     Size  Location     Type
 15824 ;;  slave_addres    1   15[COMRAM] unsigned char 
 15825 ;;  cntr            1   16[COMRAM] unsigned char 
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      void 
 15828 ;; Registers used:
 15829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15837 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15838 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15839 ;;Total ram usage:       12 bytes
 15840 ;; Hardware stack levels used:    1
 15841 ;; Hardware stack levels required when called:    1
 15842 ;; This function calls:
 15843 ;;		__i2c_acknowledge
 15844 ;;		__i2c_get
 15845 ;;		__i2c_not_acknowledge
 15846 ;;		__i2c_send
 15847 ;;		__i2c_start
 15848 ;;		__i2c_stop
 15849 ;;		__i2c_wait_idle
 15850 ;; This function is called by:
 15851 ;;		_i2c_eeprom_readByte
 15852 ;;		_i2c_eeprom_read
 15853 ;; This function uses a non-reentrant model
 15854 ;;
 15855                           
 15856                           	psect	text70
 15857  0060C4                     __ptext70:
 15858                           	opt stack 0
 15859  0060C4                     __i2c_read:
 15860                           	opt stack 27
 15861                           
 15862                           ;incstack = 0
 15863                           ;__i2c_read@slave_address stored from wreg
 15864  0060C4  6E10               	movwf	__i2c_read@slave_address,c
 15865                           
 15866                           ;i2c.c: 155: uint8_t cntr;;i2c.c: 157: _i2c_wait_idle();
 15867  0060C6  EC26  F037         	call	__i2c_wait_idle	;wreg free
 15868                           
 15869                           ;i2c.c: 158: _i2c_start();
 15870  0060CA  ECF8  F03E         	call	__i2c_start	;wreg free
 15871                           
 15872                           ;i2c.c: 159: _i2c_wait_idle();
 15873  0060CE  EC26  F037         	call	__i2c_wait_idle	;wreg free
 15874                           
 15875                           ;i2c.c: 160: _i2c_send(slave_address | 0x01);
 15876  0060D2  5010               	movf	__i2c_read@slave_address,w,c
 15877  0060D4  0901               	iorlw	1
 15878  0060D6  ECFC  F03E         	call	__i2c_send
 15879                           
 15880                           ;i2c.c: 161: _i2c_wait_idle();
 15881  0060DA  EC26  F037         	call	__i2c_wait_idle	;wreg free
 15882                           
 15883                           ;i2c.c: 163: for(cntr=0; cntr<length-1; ++cntr)
 15884  0060DE  0E00               	movlw	0
 15885  0060E0  6E11               	movwf	__i2c_read@cntr,c
 15886  0060E2  D00E               	goto	l1201
 15887  0060E4                     
 15888                           ;i2c.c: 164: {;i2c.c: 165: data[cntr] = _i2c_get();
 15889  0060E4  5011               	movf	__i2c_read@cntr,w,c
 15890  0060E6  0D01               	mullw	1
 15891  0060E8  50F3               	movf	prodl,w,c
 15892  0060EA  2406               	addwf	__i2c_read@data,w,c
 15893  0060EC  6ED9               	movwf	fsr2l,c
 15894  0060EE  50F4               	movf	prodh,w,c
 15895  0060F0  2007               	addwfc	__i2c_read@data+1,w,c
 15896  0060F2  6EDA               	movwf	fsr2h,c
 15897  0060F4  ECBE  F03E         	call	__i2c_get	;wreg free
 15898  0060F8  6EDF               	movwf	indf2,c
 15899                           
 15900                           ;i2c.c: 166: _i2c_acknowledge();
 15901  0060FA  ECC3  F03E         	call	__i2c_acknowledge	;wreg free
 15902  0060FE  2A11               	incf	__i2c_read@cntr,f,c
 15903  006100                     l1201:
 15904  006100  0EFF               	movlw	255
 15905  006102  6E09               	movwf	??__i2c_read& (0+255),c
 15906  006104  0EFF               	movlw	255
 15907  006106  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 15908  006108  5008               	movf	__i2c_read@length,w,c
 15909  00610A  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 15910  00610C  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 15911  00610E  5009               	movf	??__i2c_read,w,c
 15912  006110  260B               	addwf	??__i2c_read+2,f,c
 15913  006112  500A               	movf	??__i2c_read+1,w,c
 15914  006114  220C               	addwfc	??__i2c_read+3,f,c
 15915  006116  5011               	movf	__i2c_read@cntr,w,c
 15916  006118  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 15917  00611A  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 15918  00611C  500B               	movf	??__i2c_read+2,w,c
 15919  00611E  5C0D               	subwf	??__i2c_read+4,w,c
 15920  006120  500E               	movf	??__i2c_read+5,w,c
 15921  006122  0A80               	xorlw	128
 15922  006124  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 15923  006126  500C               	movf	??__i2c_read+3,w,c
 15924  006128  0A80               	xorlw	128
 15925  00612A  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 15926  00612C  A0D8               	btfss	status,0,c
 15927  00612E  D7DA               	goto	l1202
 15928                           
 15929                           ;i2c.c: 167: };i2c.c: 168: data[cntr] = _i2c_get();
 15930  006130  5011               	movf	__i2c_read@cntr,w,c
 15931  006132  0D01               	mullw	1
 15932  006134  50F3               	movf	prodl,w,c
 15933  006136  2406               	addwf	__i2c_read@data,w,c
 15934  006138  6ED9               	movwf	fsr2l,c
 15935  00613A  50F4               	movf	prodh,w,c
 15936  00613C  2007               	addwfc	__i2c_read@data+1,w,c
 15937  00613E  6EDA               	movwf	fsr2h,c
 15938  006140  ECBE  F03E         	call	__i2c_get	;wreg free
 15939  006144  6EDF               	movwf	indf2,c
 15940                           
 15941                           ;i2c.c: 169: _i2c_not_acknowledge();
 15942  006146  ECB9  F03E         	call	__i2c_not_acknowledge	;wreg free
 15943                           
 15944                           ;i2c.c: 171: _i2c_stop();
 15945  00614A  ECF4  F03E         	call	__i2c_stop	;wreg free
 15946  00614E  0012               	return		;funcret
 15947  006150                     __end_of__i2c_read:
 15948                           	opt stack 0
 15949                           tblptru	equ	0xFF8
 15950                           tblptrh	equ	0xFF7
 15951                           tblptrl	equ	0xFF6
 15952                           tablat	equ	0xFF5
 15953                           prodh	equ	0xFF4
 15954                           prodl	equ	0xFF3
 15955                           intcon	equ	0xFF2
 15956                           intcon2	equ	0xFF1
 15957                           intcon3	equ	0xFF0
 15958                           postinc0	equ	0xFEE
 15959                           wreg	equ	0xFE8
 15960                           indf1	equ	0xFE7
 15961                           postdec1	equ	0xFE5
 15962                           plusw1	equ	0xFE3
 15963                           fsr1h	equ	0xFE2
 15964                           fsr1l	equ	0xFE1
 15965                           indf2	equ	0xFDF
 15966                           postinc2	equ	0xFDE
 15967                           postdec2	equ	0xFDD
 15968                           plusw2	equ	0xFDB
 15969                           fsr2h	equ	0xFDA
 15970                           fsr2l	equ	0xFD9
 15971                           status	equ	0xFD8
 15972                           
 15973 ;; *************** function __i2c_not_acknowledge *****************
 15974 ;; Defined at:
 15975 ;;		line 90 in file "i2c.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;		None
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;		None
 15980 ;; Return value:  Size  Location     Type
 15981 ;;                  1    wreg      void 
 15982 ;; Registers used:
 15983 ;;		None
 15984 ;; Tracked objects:
 15985 ;;		On entry : 0/0
 15986 ;;		On exit  : 0/0
 15987 ;;		Unchanged: 0/0
 15988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15993 ;;Total ram usage:        0 bytes
 15994 ;; Hardware stack levels used:    1
 15995 ;; This function calls:
 15996 ;;		Nothing
 15997 ;; This function is called by:
 15998 ;;		__i2c_read
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           	psect	text71
 16003  007D72                     __ptext71:
 16004                           	opt stack 0
 16005  007D72                     __i2c_not_acknowledge:
 16006                           	opt stack 27
 16007                           
 16008                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 16009                           
 16010                           ;incstack = 0
 16011  007D72  8AC5               	bsf	4037,5,c	;volatile
 16012                           
 16013                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 16014  007D74  88C5               	bsf	4037,4,c	;volatile
 16015  007D76  A8C5               	btfss	4037,4,c	;volatile
 16016  007D78  0012               	return	
 16017  007D7A  D7FD               	goto	l1176
 16018  007D7C                     __end_of__i2c_not_acknowledge:
 16019                           	opt stack 0
 16020                           tblptru	equ	0xFF8
 16021                           tblptrh	equ	0xFF7
 16022                           tblptrl	equ	0xFF6
 16023                           tablat	equ	0xFF5
 16024                           prodh	equ	0xFF4
 16025                           prodl	equ	0xFF3
 16026                           intcon	equ	0xFF2
 16027                           intcon2	equ	0xFF1
 16028                           intcon3	equ	0xFF0
 16029                           postinc0	equ	0xFEE
 16030                           wreg	equ	0xFE8
 16031                           indf1	equ	0xFE7
 16032                           postdec1	equ	0xFE5
 16033                           plusw1	equ	0xFE3
 16034                           fsr1h	equ	0xFE2
 16035                           fsr1l	equ	0xFE1
 16036                           indf2	equ	0xFDF
 16037                           postinc2	equ	0xFDE
 16038                           postdec2	equ	0xFDD
 16039                           plusw2	equ	0xFDB
 16040                           fsr2h	equ	0xFDA
 16041                           fsr2l	equ	0xFD9
 16042                           status	equ	0xFD8
 16043                           
 16044 ;; *************** function __i2c_get *****************
 16045 ;; Defined at:
 16046 ;;		line 67 in file "i2c.c"
 16047 ;; Parameters:    Size  Location     Type
 16048 ;;		None
 16049 ;; Auto vars:     Size  Location     Type
 16050 ;;		None
 16051 ;; Return value:  Size  Location     Type
 16052 ;;                  1    wreg      unsigned char 
 16053 ;; Registers used:
 16054 ;;		wreg, status,2
 16055 ;; Tracked objects:
 16056 ;;		On entry : 0/0
 16057 ;;		On exit  : 0/0
 16058 ;;		Unchanged: 0/0
 16059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16064 ;;Total ram usage:        0 bytes
 16065 ;; Hardware stack levels used:    1
 16066 ;; This function calls:
 16067 ;;		Nothing
 16068 ;; This function is called by:
 16069 ;;		__i2c_read
 16070 ;; This function uses a non-reentrant model
 16071 ;;
 16072                           
 16073                           	psect	text72
 16074  007D7C                     __ptext72:
 16075                           	opt stack 0
 16076  007D7C                     __i2c_get:
 16077                           	opt stack 27
 16078                           
 16079                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 16080                           
 16081                           ;incstack = 0
 16082  007D7C  86C5               	bsf	4037,3,c	;volatile
 16083  007D7E  B6C5               	btfsc	4037,3,c	;volatile
 16084  007D80  D7FE               	goto	l1158
 16085                           
 16086                           ;i2c.c: 71: return SSP1BUF;
 16087  007D82  50C9               	movf	4041,w,c	;volatile
 16088  007D84  0012               	return	
 16089  007D86                     __end_of__i2c_get:
 16090                           	opt stack 0
 16091                           tblptru	equ	0xFF8
 16092                           tblptrh	equ	0xFF7
 16093                           tblptrl	equ	0xFF6
 16094                           tablat	equ	0xFF5
 16095                           prodh	equ	0xFF4
 16096                           prodl	equ	0xFF3
 16097                           intcon	equ	0xFF2
 16098                           intcon2	equ	0xFF1
 16099                           intcon3	equ	0xFF0
 16100                           postinc0	equ	0xFEE
 16101                           wreg	equ	0xFE8
 16102                           indf1	equ	0xFE7
 16103                           postdec1	equ	0xFE5
 16104                           plusw1	equ	0xFE3
 16105                           fsr1h	equ	0xFE2
 16106                           fsr1l	equ	0xFE1
 16107                           indf2	equ	0xFDF
 16108                           postinc2	equ	0xFDE
 16109                           postdec2	equ	0xFDD
 16110                           plusw2	equ	0xFDB
 16111                           fsr2h	equ	0xFDA
 16112                           fsr2l	equ	0xFD9
 16113                           status	equ	0xFD8
 16114                           
 16115 ;; *************** function __i2c_acknowledge *****************
 16116 ;; Defined at:
 16117 ;;		line 82 in file "i2c.c"
 16118 ;; Parameters:    Size  Location     Type
 16119 ;;		None
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;		None
 16122 ;; Return value:  Size  Location     Type
 16123 ;;                  1    wreg      void 
 16124 ;; Registers used:
 16125 ;;		None
 16126 ;; Tracked objects:
 16127 ;;		On entry : 0/0
 16128 ;;		On exit  : 0/0
 16129 ;;		Unchanged: 0/0
 16130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16135 ;;Total ram usage:        0 bytes
 16136 ;; Hardware stack levels used:    1
 16137 ;; This function calls:
 16138 ;;		Nothing
 16139 ;; This function is called by:
 16140 ;;		__i2c_read
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           	psect	text73
 16145  007D86                     __ptext73:
 16146                           	opt stack 0
 16147  007D86                     __i2c_acknowledge:
 16148                           	opt stack 27
 16149                           
 16150                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 16151                           
 16152                           ;incstack = 0
 16153  007D86  9AC5               	bcf	4037,5,c	;volatile
 16154                           
 16155                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 16156  007D88  88C5               	bsf	4037,4,c	;volatile
 16157  007D8A  A8C5               	btfss	4037,4,c	;volatile
 16158  007D8C  0012               	return	
 16159  007D8E  D7FD               	goto	l1170
 16160  007D90                     __end_of__i2c_acknowledge:
 16161                           	opt stack 0
 16162                           tblptru	equ	0xFF8
 16163                           tblptrh	equ	0xFF7
 16164                           tblptrl	equ	0xFF6
 16165                           tablat	equ	0xFF5
 16166                           prodh	equ	0xFF4
 16167                           prodl	equ	0xFF3
 16168                           intcon	equ	0xFF2
 16169                           intcon2	equ	0xFF1
 16170                           intcon3	equ	0xFF0
 16171                           postinc0	equ	0xFEE
 16172                           wreg	equ	0xFE8
 16173                           indf1	equ	0xFE7
 16174                           postdec1	equ	0xFE5
 16175                           plusw1	equ	0xFE3
 16176                           fsr1h	equ	0xFE2
 16177                           fsr1l	equ	0xFE1
 16178                           indf2	equ	0xFDF
 16179                           postinc2	equ	0xFDE
 16180                           postdec2	equ	0xFDD
 16181                           plusw2	equ	0xFDB
 16182                           fsr2h	equ	0xFDA
 16183                           fsr2l	equ	0xFD9
 16184                           status	equ	0xFD8
 16185                           
 16186 ;; *************** function _USBDeviceTasks *****************
 16187 ;; Defined at:
 16188 ;;		line 477 in file "usb_device.c"
 16189 ;; Parameters:    Size  Location     Type
 16190 ;;		None
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  i               1   31[COMRAM] unsigned char 
 16193 ;; Return value:  Size  Location     Type
 16194 ;;                  1    wreg      void 
 16195 ;; Registers used:
 16196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16197 ;; Tracked objects:
 16198 ;;		On entry : 0/0
 16199 ;;		On exit  : 0/0
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16206 ;;Total ram usage:        1 bytes
 16207 ;; Hardware stack levels used:    1
 16208 ;; Hardware stack levels required when called:    8
 16209 ;; This function calls:
 16210 ;;		_USBCtrlEPAllowStatusStage
 16211 ;;		_USBCtrlEPService
 16212 ;;		_USBDeviceInit
 16213 ;;		_USBIncrement1msInternalTimers
 16214 ;;		_USBStallHandler
 16215 ;;		_USBSuspend
 16216 ;;		_USBWakeFromSuspend
 16217 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16218 ;; This function is called by:
 16219 ;;		_main
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223                           	psect	text74
 16224  00321A                     __ptext74:
 16225                           	opt stack 0
 16226  00321A                     _USBDeviceTasks:
 16227                           	opt stack 22
 16228                           
 16229                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 16230                           
 16231                           ; BSR set to: 0
 16232                           
 16233                           ; BSR set to: 0
 16234                           ;usb_device.c: 543: return;
 16235                           
 16236                           ; BSR set to: 0
 16237                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 16238                           
 16239                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 16240                           
 16241                           ;usb_device.c: 511: UIE = 0;
 16242                           
 16243                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 16244                           
 16245                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 16246                           
 16247                           ;incstack = 0
 16248  00321A  0100               	movlb	0	; () banked
 16249  00321C  51B0               	movf	_USBDeviceState& (0+255),w,b
 16250  00321E  A4D8               	btfss	status,2,c
 16251  003220  D012               	goto	l150
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 16255  003222  0E00               	movlw	0
 16256  003224  6E65               	movwf	3941,c	;volatile
 16257                           
 16258                           ;usb_device.c: 572: UIE = 0;
 16259  003226  0E00               	movlw	0
 16260  003228  010F               	movlb	15	; () banked
 16261  00322A  6F36               	movwf	54,b	;volatile
 16262                           
 16263                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16264  00322C  0E16               	movlw	22
 16265  00322E  6F39               	movwf	57,b	;volatile
 16266  003230  0E9F               	movlw	159
 16267  003232  6F37               	movwf	55,b	;volatile
 16268  003234  0E7B               	movlw	123
 16269  003236  6F36               	movwf	54,b	;volatile
 16270                           
 16271                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16272  003238  D001               	goto	l151
 16273  00323A                     l152:
 16274  00323A  8665               	bsf	3941,3,c	;volatile
 16275  00323C                     l151:
 16276  00323C  A665               	btfss	3941,3,c	;volatile
 16277  00323E  D7FD               	goto	l152
 16278                           
 16279                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 16280  003240  0E01               	movlw	1
 16281  003242  0100               	movlb	0	; () banked
 16282  003244  6FB0               	movwf	_USBDeviceState& (0+255),b
 16283  003246                     l150:
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 16287                           
 16288                           ; BSR set to: 0
 16289  003246  05B0               	decf	_USBDeviceState& (0+255),w,b
 16290  003248  B4D8               	btfsc	status,2,c
 16291                           
 16292                           ; BSR set to: 0
 16293                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 16294  00324A  BA65               	btfsc	3941,5,c	;volatile
 16295  00324C  D00A               	goto	l155
 16296                           
 16297                           ; BSR set to: 0
 16298                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 16299  00324E  0E00               	movlw	0
 16300  003250  6E62               	movwf	3938,c	;volatile
 16301                           
 16302                           ;usb_device.c: 612: UIE=0;
 16303  003252  0E00               	movlw	0
 16304  003254  010F               	movlb	15	; () banked
 16305  003256  6F36               	movwf	54,b	;volatile
 16306                           
 16307                           ; BSR set to: 15
 16308                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 16309  003258  8136               	bsf	54,0,b	;volatile
 16310                           
 16311                           ; BSR set to: 15
 16312                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 16313  00325A  8936               	bsf	54,4,b	;volatile
 16314                           
 16315                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 16316  00325C  0E02               	movlw	2
 16317  00325E  0100               	movlb	0	; () banked
 16318  003260  6FB0               	movwf	_USBDeviceState& (0+255),b
 16319  003262                     l155:
 16320                           
 16321                           ; BSR set to: 0
 16322                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 16323                           
 16324                           ; BSR set to: 0
 16325                           
 16326                           ; BSR set to: 0
 16327  003262  A462               	btfss	3938,2,c	;volatile
 16328  003264  D006               	goto	l156
 16329                           
 16330                           ; BSR set to: 0
 16331  003266  010F               	movlb	15	; () banked
 16332  003268  A536               	btfss	54,2,b	;volatile
 16333  00326A  D003               	goto	l156
 16334                           
 16335                           ; BSR set to: 15
 16336                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 16337  00326C  9462               	bcf	3938,2,c	;volatile
 16338                           
 16339                           ; BSR set to: 15
 16340                           ;usb_device.c: 640: USBWakeFromSuspend();
 16341  00326E  EC69  F03B         	call	_USBWakeFromSuspend	;wreg free
 16342  003272                     l156:
 16343                           
 16344                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 16345  003272  A265               	btfss	3941,1,c	;volatile
 16346  003274  D002               	goto	l157
 16347                           
 16348                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 16349  003276  98A1               	bcf	4001,4,c	;volatile
 16350                           
 16351                           ;usb_device.c: 650: return;
 16352  003278  0012               	return	
 16353  00327A                     l157:
 16354                           
 16355                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 16356  00327A  A062               	btfss	3938,0,c	;volatile
 16357  00327C  D009               	goto	l158
 16358  00327E  010F               	movlb	15	; () banked
 16359  003280  A136               	btfss	54,0,b	;volatile
 16360  003282  D006               	goto	l158
 16361                           
 16362                           ; BSR set to: 15
 16363                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 16364  003284  ECA7  F01C         	call	_USBDeviceInit	;wreg free
 16365                           
 16366                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 16367  003288  0E04               	movlw	4
 16368  00328A  0100               	movlb	0	; () banked
 16369  00328C  6FB0               	movwf	_USBDeviceState& (0+255),b
 16370                           
 16371                           ; BSR set to: 0
 16372                           ;usb_device.c: 681: (UIR &= 0xFE);
 16373  00328E  9062               	bcf	3938,0,c	;volatile
 16374  003290                     l158:
 16375                           
 16376                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 16377                           
 16378                           ; BSR set to: 0
 16379  003290  A862               	btfss	3938,4,c	;volatile
 16380  003292  D004               	goto	l159
 16381  003294  010F               	movlb	15	; () banked
 16382  003296  B936               	btfsc	54,4,b	;volatile
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 16386  003298  EC84  F03C         	call	_USBSuspend	;wreg free
 16387  00329C                     l159:
 16388                           
 16389                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 16390  00329C  AC62               	btfss	3938,6,c	;volatile
 16391  00329E  D01C               	goto	l163
 16392                           
 16393                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 16394  0032A0  010F               	movlb	15	; () banked
 16395  0032A2  AD36               	btfss	54,6,b	;volatile
 16396  0032A4  D00E               	goto	l161
 16397                           
 16398                           ; BSR set to: 15
 16399                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 16400  0032A6  0E00               	movlw	0
 16401  0032A8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16402  0032AA  0E73               	movlw	115
 16403  0032AC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16404  0032AE  0E00               	movlw	0
 16405  0032B0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16406  0032B2  0E00               	movlw	0
 16407  0032B4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16408  0032B6  0E00               	movlw	0
 16409  0032B8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16410  0032BA  0E01               	movlw	1
 16411  0032BC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16412  0032BE  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16413  0032C2                     l161:
 16414                           
 16415                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 16416  0032C2  9C62               	bcf	3938,6,c	;volatile
 16417                           
 16418                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 16419  0032C4  ECC6  F03D         	call	_USBIncrement1msInternalTimers	;wreg free
 16420                           
 16421                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 16422  0032C8  0100               	movlb	0	; () banked
 16423  0032CA  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16424  0032CC  A4D8               	btfss	status,2,c
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 16428  0032CE  07A9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 16432                           
 16433                           ; BSR set to: 0
 16434  0032D0  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16435  0032D2  B4D8               	btfsc	status,2,c
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 16439  0032D4  EC3F  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16440  0032D8                     l163:
 16441                           
 16442                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 16443  0032D8  AA62               	btfss	3938,5,c	;volatile
 16444  0032DA  D004               	goto	l164
 16445  0032DC  010F               	movlb	15	; () banked
 16446  0032DE  BB36               	btfsc	54,5,b	;volatile
 16447                           
 16448                           ; BSR set to: 15
 16449                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 16450  0032E0  EC11  F03A         	call	_USBStallHandler	;wreg free
 16451  0032E4                     l164:
 16452                           
 16453                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 16454  0032E4  A262               	btfss	3938,1,c	;volatile
 16455  0032E6  D012               	goto	l165
 16456  0032E8  010F               	movlb	15	; () banked
 16457  0032EA  A336               	btfss	54,1,b	;volatile
 16458  0032EC  D00F               	goto	l165
 16459                           
 16460                           ; BSR set to: 15
 16461                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 16462  0032EE  0E7F               	movlw	127
 16463  0032F0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16464  0032F2  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16465  0032F4  0E00               	movlw	0
 16466  0032F6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16467  0032F8  0E00               	movlw	0
 16468  0032FA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16469  0032FC  0E00               	movlw	0
 16470  0032FE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16471  003300  0E01               	movlw	1
 16472  003302  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16473  003304  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16474                           
 16475                           ;usb_device.c: 759: {UEIR = 0;};
 16476  003308  0E00               	movlw	0
 16477  00330A  6E63               	movwf	3939,c	;volatile
 16478  00330C                     l165:
 16479                           
 16480                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16481  00330C  0E04               	movlw	4
 16482  00330E  0100               	movlb	0	; () banked
 16483  003310  61B0               	cpfslt	_USBDeviceState& (0+255),b
 16484  003312  D002               	goto	l166
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16488  003314  98A1               	bcf	4001,4,c	;volatile
 16489                           
 16490                           ;usb_device.c: 777: return;
 16491  003316  0012               	return	
 16492  003318                     l166:
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 16496  003318  010F               	movlb	15	; () banked
 16497  00331A  A736               	btfss	54,3,b	;volatile
 16498  00331C  D03C               	goto	u11290
 16499                           
 16500                           ; BSR set to: 15
 16501                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16502  00331E  0E00               	movlw	0
 16503  003320  6E20               	movwf	USBDeviceTasks@i,c
 16504  003322                     l14186:
 16505                           
 16506                           ; BSR set to: 15
 16507  003322  0E03               	movlw	3
 16508  003324  6420               	cpfsgt	USBDeviceTasks@i,c
 16509  003326  D001               	goto	l168
 16510  003328  D036               	goto	u11290
 16511  00332A                     l168:
 16512                           
 16513                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 16514  00332A  A662               	btfss	3938,3,c	;volatile
 16515  00332C  D034               	goto	u11290
 16516                           
 16517                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 16518  00332E  CF64 F0B3          	movff	3940,_USTATcopy	;volatile
 16519                           
 16520                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16521  003332  0100               	movlb	0	; () banked
 16522  003334  31B3               	rrcf	_USTATcopy& (0+255),w,b
 16523  003336  32E8               	rrcf	wreg,f,c
 16524  003338  32E8               	rrcf	wreg,f,c
 16525  00333A  0B0F               	andlw	15
 16526  00333C  6FAB               	movwf	_endpoint_number& (0+255),b
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;usb_device.c: 793: (UIR &= 0xF7);
 16530  00333E  9662               	bcf	3938,3,c	;volatile
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 16534  003340  B5B3               	btfsc	_USTATcopy& (0+255),2,b
 16535  003342  D007               	goto	l171
 16536                           
 16537                           ; BSR set to: 0
 16538                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 16539  003344  51AB               	movf	_endpoint_number& (0+255),w,b
 16540  003346  0D01               	mullw	1
 16541  003348  0E5E               	movlw	low _ep_data_out
 16542  00334A  24F3               	addwf	prodl,w,c
 16543  00334C  6ED9               	movwf	fsr2l,c
 16544  00334E  0E01               	movlw	high _ep_data_out
 16545  003350  D007               	goto	L5
 16546  003352                     l171:
 16547                           
 16548                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 16549                           
 16550                           ; BSR set to: 1
 16551  003352  0100               	movlb	0	; () banked
 16552  003354  51AB               	movf	_endpoint_number& (0+255),w,b
 16553  003356  0D01               	mullw	1
 16554  003358  0E61               	movlw	low _ep_data_in
 16555  00335A  24F3               	addwf	prodl,w,c
 16556  00335C  6ED9               	movwf	fsr2l,c
 16557  00335E  0E01               	movlw	high _ep_data_in
 16558  003360                     L5:
 16559  003360  20F4               	addwfc	prodh,w,c
 16560  003362  6EDA               	movwf	fsr2h,c
 16561  003364  0101               	movlb	1	; () banked
 16562  003366  70DF               	btg	indf2,0,c
 16563                           
 16564                           ; BSR set to: 1
 16565                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 16566                           
 16567                           ; BSR set to: 1
 16568  003368  0100               	movlb	0	; () banked
 16569  00336A  51AB               	movf	_endpoint_number& (0+255),w,b
 16570  00336C  A4D8               	btfss	status,2,c
 16571  00336E  D003               	goto	l173
 16572                           
 16573                           ; BSR set to: 0
 16574                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 16575  003370  EC2C  F02B         	call	_USBCtrlEPService	;wreg free
 16576                           
 16577                           ;usb_device.c: 813: }
 16578  003374  D00E               	goto	l175
 16579  003376                     l173:
 16580                           
 16581                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 16582  003376  0E00               	movlw	0
 16583  003378  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16584  00337A  0E72               	movlw	114
 16585  00337C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16586  00337E  0EB3               	movlw	low _USTATcopy
 16587  003380  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16588  003382  0E00               	movlw	high _USTATcopy
 16589  003384  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16590  003386  0E00               	movlw	0
 16591  003388  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16592  00338A  0E00               	movlw	0
 16593  00338C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16594  00338E  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16595  003392                     l175:
 16596  003392  2A20               	incf	USBDeviceTasks@i,f,c
 16597  003394  D7C6               	goto	l14186
 16598  003396                     u11290:
 16599                           
 16600                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 16601  003396  98A1               	bcf	4001,4,c	;volatile
 16602  003398  0012               	return		;funcret
 16603  00339A                     __end_of_USBDeviceTasks:
 16604                           	opt stack 0
 16605                           tblptru	equ	0xFF8
 16606                           tblptrh	equ	0xFF7
 16607                           tblptrl	equ	0xFF6
 16608                           tablat	equ	0xFF5
 16609                           prodh	equ	0xFF4
 16610                           prodl	equ	0xFF3
 16611                           intcon	equ	0xFF2
 16612                           intcon2	equ	0xFF1
 16613                           intcon3	equ	0xFF0
 16614                           postinc0	equ	0xFEE
 16615                           wreg	equ	0xFE8
 16616                           indf1	equ	0xFE7
 16617                           postdec1	equ	0xFE5
 16618                           plusw1	equ	0xFE3
 16619                           fsr1h	equ	0xFE2
 16620                           fsr1l	equ	0xFE1
 16621                           indf2	equ	0xFDF
 16622                           postinc2	equ	0xFDE
 16623                           postdec2	equ	0xFDD
 16624                           plusw2	equ	0xFDB
 16625                           fsr2h	equ	0xFDA
 16626                           fsr2l	equ	0xFD9
 16627                           status	equ	0xFD8
 16628                           
 16629 ;; *************** function _USBWakeFromSuspend *****************
 16630 ;; Defined at:
 16631 ;;		line 2305 in file "usb_device.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;		None
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;		None
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  1    wreg      void 
 16638 ;; Registers used:
 16639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16640 ;; Tracked objects:
 16641 ;;		On entry : 0/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16649 ;;Total ram usage:        0 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; Hardware stack levels required when called:    4
 16652 ;; This function calls:
 16653 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16654 ;; This function is called by:
 16655 ;;		_USBDeviceTasks
 16656 ;; This function uses a non-reentrant model
 16657 ;;
 16658                           
 16659                           	psect	text75
 16660  0076D2                     __ptext75:
 16661                           	opt stack 0
 16662  0076D2                     _USBWakeFromSuspend:
 16663                           	opt stack 25
 16664                           
 16665                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 16666                           
 16667                           ;incstack = 0
 16668  0076D2  0E00               	movlw	0
 16669  0076D4  0100               	movlb	0	; () banked
 16670  0076D6  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16674  0076D8  0E00               	movlw	0
 16675  0076DA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16676  0076DC  0E74               	movlw	116
 16677  0076DE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16678  0076E0  0E00               	movlw	0
 16679  0076E2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16680  0076E4  0E00               	movlw	0
 16681  0076E6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16682  0076E8  0E00               	movlw	0
 16683  0076EA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16684  0076EC  0E00               	movlw	0
 16685  0076EE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16686  0076F0  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16687                           
 16688                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 16689  0076F4  9265               	bcf	3941,1,c	;volatile
 16690                           
 16691                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 16692  0076F6  010F               	movlb	15	; () banked
 16693  0076F8  9536               	bcf	54,2,b	;volatile
 16694                           
 16695                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 16696  0076FA  D001               	goto	l303
 16697  0076FC                     
 16698                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 16699                           
 16700                           ; BSR set to: 15
 16701  0076FC  9462               	bcf	3938,2,c	;volatile
 16702  0076FE                     l303:
 16703  0076FE  B462               	btfsc	3938,2,c	;volatile
 16704  007700  D7FD               	goto	l304
 16705                           
 16706                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 16707  007702  0E00               	movlw	0
 16708  007704  0100               	movlb	0	; () banked
 16709  007706  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16710                           
 16711                           ; BSR set to: 0
 16712  007708  0012               	return		;funcret
 16713  00770A                     __end_of_USBWakeFromSuspend:
 16714                           	opt stack 0
 16715                           tblptru	equ	0xFF8
 16716                           tblptrh	equ	0xFF7
 16717                           tblptrl	equ	0xFF6
 16718                           tablat	equ	0xFF5
 16719                           prodh	equ	0xFF4
 16720                           prodl	equ	0xFF3
 16721                           intcon	equ	0xFF2
 16722                           intcon2	equ	0xFF1
 16723                           intcon3	equ	0xFF0
 16724                           postinc0	equ	0xFEE
 16725                           wreg	equ	0xFE8
 16726                           indf1	equ	0xFE7
 16727                           postdec1	equ	0xFE5
 16728                           plusw1	equ	0xFE3
 16729                           fsr1h	equ	0xFE2
 16730                           fsr1l	equ	0xFE1
 16731                           indf2	equ	0xFDF
 16732                           postinc2	equ	0xFDE
 16733                           postdec2	equ	0xFDD
 16734                           plusw2	equ	0xFDB
 16735                           fsr2h	equ	0xFDA
 16736                           fsr2l	equ	0xFD9
 16737                           status	equ	0xFD8
 16738                           
 16739 ;; *************** function _USBSuspend *****************
 16740 ;; Defined at:
 16741 ;;		line 2247 in file "usb_device.c"
 16742 ;; Parameters:    Size  Location     Type
 16743 ;;		None
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;		None
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  1    wreg      void 
 16748 ;; Registers used:
 16749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16759 ;;Total ram usage:        0 bytes
 16760 ;; Hardware stack levels used:    1
 16761 ;; Hardware stack levels required when called:    4
 16762 ;; This function calls:
 16763 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16764 ;; This function is called by:
 16765 ;;		_USBDeviceTasks
 16766 ;; This function uses a non-reentrant model
 16767 ;;
 16768                           
 16769                           	psect	text76
 16770  007908                     __ptext76:
 16771                           	opt stack 0
 16772  007908                     _USBSuspend:
 16773                           	opt stack 25
 16774                           
 16775                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 16776                           
 16777                           ; BSR set to: 0
 16778                           ;incstack = 0
 16779  007908  010F               	movlb	15	; () banked
 16780  00790A  8536               	bsf	54,2,b	;volatile
 16781                           
 16782                           ; BSR set to: 15
 16783                           ;usb_device.c: 2273: (UIR &= 0xEF);
 16784  00790C  9862               	bcf	3938,4,c	;volatile
 16785                           
 16786                           ; BSR set to: 15
 16787                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 16788  00790E  8265               	bsf	3941,1,c	;volatile
 16789                           
 16790                           ; BSR set to: 15
 16791                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 16792  007910  0E01               	movlw	1
 16793  007912  0100               	movlb	0	; () banked
 16794  007914  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 16798  007916  0E00               	movlw	0
 16799  007918  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16803  00791A  0E00               	movlw	0
 16804  00791C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16805  00791E  0E75               	movlw	117
 16806  007920  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16807  007922  0E00               	movlw	0
 16808  007924  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16809  007926  0E00               	movlw	0
 16810  007928  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16811  00792A  0E00               	movlw	0
 16812  00792C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16813  00792E  0E00               	movlw	0
 16814  007930  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16815  007932  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16816  007936  0012               	return		;funcret
 16817  007938                     __end_of_USBSuspend:
 16818                           	opt stack 0
 16819                           tblptru	equ	0xFF8
 16820                           tblptrh	equ	0xFF7
 16821                           tblptrl	equ	0xFF6
 16822                           tablat	equ	0xFF5
 16823                           prodh	equ	0xFF4
 16824                           prodl	equ	0xFF3
 16825                           intcon	equ	0xFF2
 16826                           intcon2	equ	0xFF1
 16827                           intcon3	equ	0xFF0
 16828                           postinc0	equ	0xFEE
 16829                           wreg	equ	0xFE8
 16830                           indf1	equ	0xFE7
 16831                           postdec1	equ	0xFE5
 16832                           plusw1	equ	0xFE3
 16833                           fsr1h	equ	0xFE2
 16834                           fsr1l	equ	0xFE1
 16835                           indf2	equ	0xFDF
 16836                           postinc2	equ	0xFDE
 16837                           postdec2	equ	0xFDD
 16838                           plusw2	equ	0xFDB
 16839                           fsr2h	equ	0xFDA
 16840                           fsr2l	equ	0xFD9
 16841                           status	equ	0xFD8
 16842                           
 16843 ;; *************** function _USBStallHandler *****************
 16844 ;; Defined at:
 16845 ;;		line 2204 in file "usb_device.c"
 16846 ;; Parameters:    Size  Location     Type
 16847 ;;		None
 16848 ;; Auto vars:     Size  Location     Type
 16849 ;;		None
 16850 ;; Return value:  Size  Location     Type
 16851 ;;                  1    wreg      void 
 16852 ;; Registers used:
 16853 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16854 ;; Tracked objects:
 16855 ;;		On entry : 0/0
 16856 ;;		On exit  : 0/0
 16857 ;;		Unchanged: 0/0
 16858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16863 ;;Total ram usage:        1 bytes
 16864 ;; Hardware stack levels used:    1
 16865 ;; This function calls:
 16866 ;;		Nothing
 16867 ;; This function is called by:
 16868 ;;		_USBDeviceTasks
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text77
 16873  007422                     __ptext77:
 16874                           	opt stack 0
 16875  007422                     _USBStallHandler:
 16876                           	opt stack 29
 16877                           
 16878                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 16879                           
 16880                           ;incstack = 0
 16881  007422  010F               	movlb	15	; () banked
 16882  007424  A126               	btfss	38,0,b	;volatile
 16883  007426  D01D               	goto	l295
 16884                           
 16885                           ; BSR set to: 15
 16886                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 16887  007428  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16888  00742C  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16889  007430  0E80               	movlw	128
 16890  007432  18DE               	xorwf	postinc2,w,c
 16891  007434  A4D8               	btfss	status,2,c
 16892  007436  D014               	goto	l296
 16893                           
 16894                           ; BSR set to: 15
 16895  007438  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 16896  00743C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16897  007440  0E84               	movlw	132
 16898  007442  18DE               	xorwf	postinc2,w,c
 16899  007444  A4D8               	btfss	status,2,c
 16900  007446  D00C               	goto	l296
 16901                           
 16902                           ; BSR set to: 15
 16903                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 16904  007448  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16905  00744C  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16906  007450  0E0C               	movlw	12
 16907  007452  6EDF               	movwf	indf2,c
 16908                           
 16909                           ; BSR set to: 15
 16910                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16911  007454  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16912  007458  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16913  00745C  0E00               	movlw	0
 16914  00745E  8EDB               	bsf	plusw2,7,c
 16915  007460                     l296:
 16916                           
 16917                           ; BSR set to: 15
 16918                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 16919                           
 16920                           ; BSR set to: 15
 16921  007460  9126               	bcf	38,0,b	;volatile
 16922  007462                     l295:
 16923                           
 16924                           ; BSR set to: 15
 16925                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 16926  007462  9A62               	bcf	3938,5,c	;volatile
 16927                           
 16928                           ; BSR set to: 15
 16929  007464  0012               	return		;funcret
 16930  007466                     __end_of_USBStallHandler:
 16931                           	opt stack 0
 16932                           tblptru	equ	0xFF8
 16933                           tblptrh	equ	0xFF7
 16934                           tblptrl	equ	0xFF6
 16935                           tablat	equ	0xFF5
 16936                           prodh	equ	0xFF4
 16937                           prodl	equ	0xFF3
 16938                           intcon	equ	0xFF2
 16939                           intcon2	equ	0xFF1
 16940                           intcon3	equ	0xFF0
 16941                           postinc0	equ	0xFEE
 16942                           wreg	equ	0xFE8
 16943                           indf1	equ	0xFE7
 16944                           postdec1	equ	0xFE5
 16945                           plusw1	equ	0xFE3
 16946                           fsr1h	equ	0xFE2
 16947                           fsr1l	equ	0xFE1
 16948                           indf2	equ	0xFDF
 16949                           postinc2	equ	0xFDE
 16950                           postdec2	equ	0xFDD
 16951                           plusw2	equ	0xFDB
 16952                           fsr2h	equ	0xFDA
 16953                           fsr2l	equ	0xFD9
 16954                           status	equ	0xFD8
 16955                           
 16956 ;; *************** function _USBIncrement1msInternalTimers *****************
 16957 ;; Defined at:
 16958 ;;		line 3027 in file "usb_device.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;		None
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  1    wreg      void 
 16965 ;; Registers used:
 16966 ;;		wreg, status,2, status,0
 16967 ;; Tracked objects:
 16968 ;;		On entry : 0/0
 16969 ;;		On exit  : 0/0
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16976 ;;Total ram usage:        0 bytes
 16977 ;; Hardware stack levels used:    1
 16978 ;; This function calls:
 16979 ;;		Nothing
 16980 ;; This function is called by:
 16981 ;;		_USBDeviceTasks
 16982 ;; This function uses a non-reentrant model
 16983 ;;
 16984                           
 16985                           	psect	text78
 16986  007B8C                     __ptext78:
 16987                           	opt stack 0
 16988  007B8C                     _USBIncrement1msInternalTimers:
 16989                           	opt stack 29
 16990                           
 16991                           ;usb_device.c: 3035: USB1msTickCount++;
 16992                           
 16993                           ; BSR set to: 15
 16994                           ;incstack = 0
 16995  007B8C  0E01               	movlw	1
 16996  007B8E  0101               	movlb	1	; () banked
 16997  007B90  2754               	addwf	_USB1msTickCount& (0+255),f,b
 16998  007B92  0E00               	movlw	0
 16999  007B94  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 17000  007B96  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 17001  007B98  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 17002                           
 17003                           ; BSR set to: 1
 17004                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 17005  007B9A  0100               	movlb	0	; () banked
 17006  007B9C  51AC               	movf	_USBBusIsSuspended& (0+255),w,b
 17007  007B9E  A4D8               	btfss	status,2,c
 17008  007BA0  0012               	return	
 17009                           
 17010                           ; BSR set to: 0
 17011                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 17012  007BA2  2BA3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 17016  007BA4  51A3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 17017  007BA6  A4D8               	btfss	status,2,c
 17018  007BA8  0012               	return	
 17019                           
 17020                           ; BSR set to: 0
 17021                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 17022  007BAA  69A3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 17023                           
 17024                           ; BSR set to: 0
 17025  007BAC  0012               	return	
 17026  007BAE                     __end_of_USBIncrement1msInternalTimers:
 17027                           	opt stack 0
 17028                           tblptru	equ	0xFF8
 17029                           tblptrh	equ	0xFF7
 17030                           tblptrl	equ	0xFF6
 17031                           tablat	equ	0xFF5
 17032                           prodh	equ	0xFF4
 17033                           prodl	equ	0xFF3
 17034                           intcon	equ	0xFF2
 17035                           intcon2	equ	0xFF1
 17036                           intcon3	equ	0xFF0
 17037                           postinc0	equ	0xFEE
 17038                           wreg	equ	0xFE8
 17039                           indf1	equ	0xFE7
 17040                           postdec1	equ	0xFE5
 17041                           plusw1	equ	0xFE3
 17042                           fsr1h	equ	0xFE2
 17043                           fsr1l	equ	0xFE1
 17044                           indf2	equ	0xFDF
 17045                           postinc2	equ	0xFDE
 17046                           postdec2	equ	0xFDD
 17047                           plusw2	equ	0xFDB
 17048                           fsr2h	equ	0xFDA
 17049                           fsr2l	equ	0xFD9
 17050                           status	equ	0xFD8
 17051                           
 17052 ;; *************** function _USBDeviceInit *****************
 17053 ;; Defined at:
 17054 ;;		line 277 in file "usb_device.c"
 17055 ;; Parameters:    Size  Location     Type
 17056 ;;		None
 17057 ;; Auto vars:     Size  Location     Type
 17058 ;;  i               1    8[COMRAM] unsigned char 
 17059 ;; Return value:  Size  Location     Type
 17060 ;;                  1    wreg      void 
 17061 ;; Registers used:
 17062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17063 ;; Tracked objects:
 17064 ;;		On entry : 0/0
 17065 ;;		On exit  : 0/0
 17066 ;;		Unchanged: 0/0
 17067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17072 ;;Total ram usage:        1 bytes
 17073 ;; Hardware stack levels used:    1
 17074 ;; Hardware stack levels required when called:    1
 17075 ;; This function calls:
 17076 ;;		_memset
 17077 ;; This function is called by:
 17078 ;;		_USBDeviceTasks
 17079 ;;		_main
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           	psect	text79
 17084  00394E                     __ptext79:
 17085                           	opt stack 0
 17086  00394E                     _USBDeviceInit:
 17087                           	opt stack 28
 17088                           
 17089                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 17090                           
 17091                           ; BSR set to: 0
 17092                           ;incstack = 0
 17093  00394E  98A0               	bcf	4000,4,c	;volatile
 17094                           
 17095                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 17096  003950  0E00               	movlw	0
 17097  003952  6E63               	movwf	3939,c	;volatile
 17098                           
 17099                           ;usb_device.c: 291: {UIR = 0;};
 17100  003954  0E00               	movlw	0
 17101  003956  6E62               	movwf	3938,c	;volatile
 17102                           
 17103                           ;usb_device.c: 294: UEP0 = 0;
 17104  003958  0E00               	movlw	0
 17105  00395A  010F               	movlb	15	; () banked
 17106  00395C  6F26               	movwf	38,b	;volatile
 17107                           
 17108                           ; BSR set to: 15
 17109                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 17110  00395E  0E27               	movlw	39
 17111  003960  6E01               	movwf	memset@p1,c
 17112  003962  0E0F               	movlw	15
 17113  003964  6E02               	movwf	memset@p1+1,c
 17114  003966  0E00               	movlw	0
 17115  003968  6E04               	movwf	memset@c+1,c
 17116  00396A  0E00               	movlw	0
 17117  00396C  6E03               	movwf	memset@c,c
 17118  00396E  0E00               	movlw	0
 17119  003970  6E06               	movwf	memset@n+1,c
 17120  003972  0E02               	movlw	2
 17121  003974  6E05               	movwf	memset@n,c
 17122  003976  ECDF  F03C         	call	_memset	;wreg free
 17123                           
 17124                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17125  00397A  0E16               	movlw	22
 17126  00397C  010F               	movlb	15	; () banked
 17127  00397E  6F39               	movwf	57,b	;volatile
 17128                           
 17129                           ; BSR set to: 15
 17130  003980  0E9F               	movlw	159
 17131  003982  6F37               	movwf	55,b	;volatile
 17132                           
 17133                           ; BSR set to: 15
 17134  003984  0E7B               	movlw	123
 17135  003986  6F36               	movwf	54,b	;volatile
 17136                           
 17137                           ; BSR set to: 15
 17138                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 17139  003988  0E00               	movlw	0
 17140  00398A  6E09               	movwf	USBDeviceInit@i,c
 17141  00398C                     l13154:
 17142                           
 17143                           ; BSR set to: 15
 17144  00398C  0E0B               	movlw	11
 17145  00398E  6409               	cpfsgt	USBDeviceInit@i,c
 17146  003990  D001               	goto	l139
 17147  003992  D00E               	goto	u9990
 17148  003994                     l139:
 17149                           
 17150                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 17151                           
 17152                           ; BSR set to: 15
 17153  003994  5009               	movf	USBDeviceInit@i,w,c
 17154  003996  0D04               	mullw	4
 17155  003998  0E00               	movlw	0
 17156  00399A  24F3               	addwf	prodl,w,c
 17157  00399C  6ED9               	movwf	fsr2l,c
 17158  00399E  0E0D               	movlw	13
 17159  0039A0  20F4               	addwfc	prodh,w,c
 17160  0039A2  6EDA               	movwf	fsr2h,c
 17161  0039A4  6ADE               	clrf	postinc2,c
 17162  0039A6  6ADE               	clrf	postinc2,c
 17163  0039A8  6ADE               	clrf	postinc2,c
 17164  0039AA  6ADD               	clrf	postdec2,c
 17165  0039AC  2A09               	incf	USBDeviceInit@i,f,c
 17166  0039AE  D7EE               	goto	l13154
 17167  0039B0                     u9990:
 17168                           
 17169                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 17170  0039B0  8C65               	bsf	3941,6,c	;volatile
 17171                           
 17172                           ;usb_device.c: 316: UADDR = 0x00;
 17173  0039B2  0E00               	movlw	0
 17174  0039B4  010F               	movlb	15	; () banked
 17175  0039B6  6F38               	movwf	56,b	;volatile
 17176                           
 17177                           ; BSR set to: 15
 17178                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 17179  0039B8  9865               	bcf	3941,4,c	;volatile
 17180                           
 17181                           ; BSR set to: 15
 17182                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 17183  0039BA  9C65               	bcf	3941,6,c	;volatile
 17184  0039BC                     
 17185                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 17186                           
 17187                           ; BSR set to: 15
 17188  0039BC  9662               	bcf	3938,3,c	;volatile
 17189                           
 17190                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 17191  0039BE  0E00               	movlw	0
 17192  0039C0  0100               	movlb	0	; () banked
 17193  0039C2  6F69               	movwf	(_inPipes+3)& (0+255),b
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 17197  0039C4  0E00               	movlw	0
 17198  0039C6  0101               	movlb	1	; () banked
 17199  0039C8  6F34               	movwf	(_outPipes+3)& (0+255),b
 17200                           
 17201                           ; BSR set to: 1
 17202                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 17203  0039CA  0E00               	movlw	0
 17204  0039CC  6F36               	movwf	(_outPipes+5)& (0+255),b
 17205  0039CE  0E00               	movlw	0
 17206  0039D0  6F35               	movwf	(_outPipes+4)& (0+255),b
 17207                           
 17208                           ; BSR set to: 1
 17209                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 17210  0039D2  B662               	btfsc	3938,3,c	;volatile
 17211  0039D4  D7F3               	goto	l141
 17212                           
 17213                           ; BSR set to: 1
 17214                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 17215                           
 17216                           ; BSR set to: 1
 17217  0039D6  0E01               	movlw	1
 17218  0039D8  0100               	movlb	0	; () banked
 17219  0039DA  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17220                           
 17221                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 17222  0039DC  0E01               	movlw	1
 17223  0039DE  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17224                           
 17225                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 17226  0039E0  0E00               	movlw	0
 17227  0039E2  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17228                           
 17229                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 17230  0039E4  0E00               	movlw	0
 17231  0039E6  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17232                           
 17233                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 17234  0039E8  0E00               	movlw	0
 17235  0039EA  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 17236                           
 17237                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 17238  0039EC  0E00               	movlw	0
 17239  0039EE  6E09               	movwf	USBDeviceInit@i,c
 17240  0039F0                     l13182:
 17241                           
 17242                           ; BSR set to: 0
 17243  0039F0  0E02               	movlw	2
 17244  0039F2  6409               	cpfsgt	USBDeviceInit@i,c
 17245  0039F4  D001               	goto	l143
 17246  0039F6  D02E               	goto	u10020
 17247  0039F8                     l143:
 17248                           
 17249                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 17250                           
 17251                           ; BSR set to: 0
 17252  0039F8  5009               	movf	USBDeviceInit@i,w,c
 17253  0039FA  0D02               	mullw	2
 17254  0039FC  0E6C               	movlw	low _pBDTEntryIn
 17255  0039FE  24F3               	addwf	prodl,w,c
 17256  003A00  6ED9               	movwf	fsr2l,c
 17257  003A02  0E00               	movlw	high _pBDTEntryIn
 17258  003A04  20F4               	addwfc	prodh,w,c
 17259  003A06  6EDA               	movwf	fsr2h,c
 17260  003A08  0E00               	movlw	0
 17261  003A0A  6EDE               	movwf	postinc2,c
 17262  003A0C  0E00               	movlw	0
 17263  003A0E  6EDD               	movwf	postdec2,c
 17264                           
 17265                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 17266  003A10  5009               	movf	USBDeviceInit@i,w,c
 17267  003A12  0D02               	mullw	2
 17268  003A14  0E72               	movlw	low _pBDTEntryOut
 17269  003A16  24F3               	addwf	prodl,w,c
 17270  003A18  6ED9               	movwf	fsr2l,c
 17271  003A1A  0E00               	movlw	high _pBDTEntryOut
 17272  003A1C  20F4               	addwfc	prodh,w,c
 17273  003A1E  6EDA               	movwf	fsr2h,c
 17274  003A20  0E00               	movlw	0
 17275  003A22  6EDE               	movwf	postinc2,c
 17276  003A24  0E00               	movlw	0
 17277  003A26  6EDD               	movwf	postdec2,c
 17278                           
 17279                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 17280  003A28  5009               	movf	USBDeviceInit@i,w,c
 17281  003A2A  0D01               	mullw	1
 17282  003A2C  0E61               	movlw	low _ep_data_in
 17283  003A2E  24F3               	addwf	prodl,w,c
 17284  003A30  6ED9               	movwf	fsr2l,c
 17285  003A32  0E01               	movlw	high _ep_data_in
 17286  003A34  20F4               	addwfc	prodh,w,c
 17287  003A36  6EDA               	movwf	fsr2h,c
 17288  003A38  0E00               	movlw	0
 17289  003A3A  6EDF               	movwf	indf2,c
 17290                           
 17291                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 17292  003A3C  5009               	movf	USBDeviceInit@i,w,c
 17293  003A3E  0D01               	mullw	1
 17294  003A40  0E5E               	movlw	low _ep_data_out
 17295  003A42  24F3               	addwf	prodl,w,c
 17296  003A44  6ED9               	movwf	fsr2l,c
 17297  003A46  0E01               	movlw	high _ep_data_out
 17298  003A48  20F4               	addwfc	prodh,w,c
 17299  003A4A  6EDA               	movwf	fsr2h,c
 17300  003A4C  0E00               	movlw	0
 17301  003A4E  6EDF               	movwf	indf2,c
 17302  003A50  2A09               	incf	USBDeviceInit@i,f,c
 17303  003A52  D7CE               	goto	l13182
 17304  003A54                     u10020:
 17305                           
 17306                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17307  003A54  0E08               	movlw	8
 17308  003A56  0100               	movlb	0	; () banked
 17309  003A58  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17310  003A5A  0E0D               	movlw	13
 17311  003A5C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17312                           
 17313                           ; BSR set to: 0
 17314                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 17315  003A5E  0E16               	movlw	22
 17316  003A60  010F               	movlb	15	; () banked
 17317  003A62  6F26               	movwf	38,b	;volatile
 17318                           
 17319                           ; BSR set to: 15
 17320                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17321  003A64  0E0D               	movlw	13
 17322  003A66  010D               	movlb	13	; () banked
 17323  003A68  6F03               	movwf	3,b	;volatile
 17324  003A6A  0E30               	movlw	48
 17325  003A6C  6F02               	movwf	2,b	;volatile
 17326                           
 17327                           ; BSR set to: 13
 17328                           ;usb_device.c: 359: BDT[0].CNT = 8;
 17329  003A6E  0E08               	movlw	8
 17330  003A70  6F01               	movwf	1,b	;volatile
 17331                           
 17332                           ; BSR set to: 13
 17333                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 17334  003A72  0E04               	movlw	4
 17335  003A74  6F00               	movwf	0,b	;volatile
 17336                           
 17337                           ; BSR set to: 13
 17338                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 17339  003A76  8F00               	bsf	0,7,b	;volatile
 17340                           
 17341                           ; BSR set to: 13
 17342                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 17343  003A78  0E00               	movlw	0
 17344  003A7A  0100               	movlb	0	; () banked
 17345  003A7C  6FB4               	movwf	_USBActiveConfiguration& (0+255),b
 17346                           
 17347                           ; BSR set to: 0
 17348                           ;usb_device.c: 366: USB1msTickCount = 0;
 17349  003A7E  0E00               	movlw	0
 17350  003A80  0101               	movlb	1	; () banked
 17351  003A82  6F54               	movwf	_USB1msTickCount& (0+255),b
 17352  003A84  0E00               	movlw	0
 17353  003A86  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 17354  003A88  0E00               	movlw	0
 17355  003A8A  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 17356  003A8C  0E00               	movlw	0
 17357  003A8E  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 17358                           
 17359                           ; BSR set to: 1
 17360                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 17361  003A90  0E00               	movlw	0
 17362  003A92  0100               	movlb	0	; () banked
 17363  003A94  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 17364                           
 17365                           ; BSR set to: 0
 17366                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 17367  003A96  0E00               	movlw	0
 17368  003A98  6FB0               	movwf	_USBDeviceState& (0+255),b
 17369                           
 17370                           ; BSR set to: 0
 17371  003A9A  0012               	return		;funcret
 17372  003A9C                     __end_of_USBDeviceInit:
 17373                           	opt stack 0
 17374                           tblptru	equ	0xFF8
 17375                           tblptrh	equ	0xFF7
 17376                           tblptrl	equ	0xFF6
 17377                           tablat	equ	0xFF5
 17378                           prodh	equ	0xFF4
 17379                           prodl	equ	0xFF3
 17380                           intcon	equ	0xFF2
 17381                           intcon2	equ	0xFF1
 17382                           intcon3	equ	0xFF0
 17383                           postinc0	equ	0xFEE
 17384                           wreg	equ	0xFE8
 17385                           indf1	equ	0xFE7
 17386                           postdec1	equ	0xFE5
 17387                           plusw1	equ	0xFE3
 17388                           fsr1h	equ	0xFE2
 17389                           fsr1l	equ	0xFE1
 17390                           indf2	equ	0xFDF
 17391                           postinc2	equ	0xFDE
 17392                           postdec2	equ	0xFDD
 17393                           plusw2	equ	0xFDB
 17394                           fsr2h	equ	0xFDA
 17395                           fsr2l	equ	0xFD9
 17396                           status	equ	0xFD8
 17397                           
 17398 ;; *************** function _USBCtrlEPService *****************
 17399 ;; Defined at:
 17400 ;;		line 2374 in file "usb_device.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;		None
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;		None
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  1    wreg      void 
 17407 ;; Registers used:
 17408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17418 ;;Total ram usage:        2 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:    7
 17421 ;; This function calls:
 17422 ;;		_USBCtrlTrfInHandler
 17423 ;;		_USBCtrlTrfOutHandler
 17424 ;;		_USBCtrlTrfSetupHandler
 17425 ;;		_memcpy
 17426 ;; This function is called by:
 17427 ;;		_USBDeviceTasks
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           	psect	text80
 17432  005658                     __ptext80:
 17433                           	opt stack 0
 17434  005658                     _USBCtrlEPService:
 17435                           	opt stack 22
 17436                           
 17437                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;incstack = 0
 17441  005658  0E2D               	movlw	45
 17442  00565A  0100               	movlb	0	; () banked
 17443  00565C  6FA9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 17447  00565E  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17448  005662  0EFD               	movlw	253
 17449  005664  161E               	andwf	??_USBCtrlEPService,f,c
 17450  005666  A4D8               	btfss	status,2,c
 17451  005668  D044               	goto	l309
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 17455  00566A  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17456  00566E  90D8               	bcf	status,0,c
 17457  005670  321E               	rrcf	??_USBCtrlEPService,f,c
 17458  005672  0E3F               	movlw	63
 17459  005674  161E               	andwf	??_USBCtrlEPService,f,c
 17460  005676  501E               	movf	??_USBCtrlEPService,w,c
 17461  005678  0D04               	mullw	4
 17462  00567A  0E00               	movlw	0
 17463  00567C  24F3               	addwf	prodl,w,c
 17464  00567E  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 17465  005680  0E0D               	movlw	13
 17466  005682  20F4               	addwfc	prodh,w,c
 17467  005684  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17471  005686  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17472  00568A  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17473                           
 17474                           ; BSR set to: 0
 17475                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17476  00568E  0E04               	movlw	4
 17477  005690  1990               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 17478  005692  6F90               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 17479  005694  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17480  005696  6F91               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17484  005698  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17485  00569C  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17486  0056A0  30DF               	rrcf	223,w,c
 17487  0056A2  32E8               	rrcf	wreg,f,c
 17488  0056A4  0B0F               	andlw	15
 17489  0056A6  0A0D               	xorlw	13
 17490  0056A8  A4D8               	btfss	status,2,c
 17491  0056AA  D020               	goto	l310
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 17495  0056AC  0E30               	movlw	48
 17496  0056AE  6E01               	movwf	memcpy@d1,c
 17497  0056B0  0E0D               	movlw	13
 17498  0056B2  6E02               	movwf	memcpy@d1+1,c
 17499  0056B4  EE20 F002          	lfsr	2,2
 17500  0056B8  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17501  0056BA  26D9               	addwf	fsr2l,f,c
 17502  0056BC  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17503  0056BE  22DA               	addwfc	fsr2h,f,c
 17504  0056C0  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 17505  0056C4  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 17506  0056C8  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 17507  0056CC  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 17508  0056D0  5003               	movf	memcpy@s1,w,c
 17509  0056D2  1004               	iorwf	memcpy@s1+1,w,c
 17510  0056D4  A4D8               	btfss	status,2,c
 17511  0056D6  0E20               	movlw	32
 17512  0056D8  6E05               	movwf	memcpy@s1+2,c
 17513  0056DA  0E00               	movlw	0
 17514  0056DC  6E07               	movwf	memcpy@n+1,c
 17515  0056DE  0E08               	movlw	8
 17516  0056E0  6E06               	movwf	memcpy@n,c
 17517  0056E2  ECAA  F035         	call	_memcpy	;wreg free
 17518                           
 17519                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 17520  0056E6  EC8B  F02F         	call	_USBCtrlTrfSetupHandler	;wreg free
 17521                           
 17522                           ;usb_device.c: 2411: }
 17523  0056EA  0012               	return	
 17524  0056EC                     l310:
 17525                           
 17526                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 17527  0056EC  EC6F  F036         	call	_USBCtrlTrfOutHandler	;wreg free
 17528                           
 17529                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 17530  0056F0  0012               	return	
 17531  0056F2                     l309:
 17532                           
 17533                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 17534  0056F2  0100               	movlb	0	; () banked
 17535  0056F4  51B3               	movf	_USTATcopy& (0+255),w,b
 17536  0056F6  0BFD               	andlw	253
 17537  0056F8  0A04               	xorlw	4
 17538  0056FA  A4D8               	btfss	status,2,c
 17539  0056FC  0012               	return	
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 17543  0056FE  EC79  F027         	call	_USBCtrlTrfInHandler	;wreg free
 17544  005702  0012               	return	
 17545  005704                     __end_of_USBCtrlEPService:
 17546                           	opt stack 0
 17547                           tblptru	equ	0xFF8
 17548                           tblptrh	equ	0xFF7
 17549                           tblptrl	equ	0xFF6
 17550                           tablat	equ	0xFF5
 17551                           prodh	equ	0xFF4
 17552                           prodl	equ	0xFF3
 17553                           intcon	equ	0xFF2
 17554                           intcon2	equ	0xFF1
 17555                           intcon3	equ	0xFF0
 17556                           postinc0	equ	0xFEE
 17557                           wreg	equ	0xFE8
 17558                           indf1	equ	0xFE7
 17559                           postdec1	equ	0xFE5
 17560                           plusw1	equ	0xFE3
 17561                           fsr1h	equ	0xFE2
 17562                           fsr1l	equ	0xFE1
 17563                           indf2	equ	0xFDF
 17564                           postinc2	equ	0xFDE
 17565                           postdec2	equ	0xFDD
 17566                           plusw2	equ	0xFDB
 17567                           fsr2h	equ	0xFDA
 17568                           fsr2l	equ	0xFD9
 17569                           status	equ	0xFD8
 17570                           
 17571 ;; *************** function _USBCtrlTrfSetupHandler *****************
 17572 ;; Defined at:
 17573 ;;		line 2467 in file "usb_device.c"
 17574 ;; Parameters:    Size  Location     Type
 17575 ;;		None
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;		None
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  1    wreg      void 
 17580 ;; Registers used:
 17581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17591 ;;Total ram usage:        0 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:    6
 17594 ;; This function calls:
 17595 ;;		_USBCheckStdRequest
 17596 ;;		_USBCtrlEPServiceComplete
 17597 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17598 ;; This function is called by:
 17599 ;;		_USBCtrlEPService
 17600 ;; This function uses a non-reentrant model
 17601 ;;
 17602                           
 17603                           	psect	text81
 17604  005F16                     __ptext81:
 17605                           	opt stack 0
 17606  005F16                     _USBCtrlTrfSetupHandler:
 17607                           	opt stack 22
 17608                           
 17609                           ;usb_device.c: 2472: shortPacketStatus = 0;
 17610                           
 17611                           ;incstack = 0
 17612  005F16  0E00               	movlw	0
 17613  005F18  0100               	movlb	0	; () banked
 17614  005F1A  6FAF               	movwf	_shortPacketStatus& (0+255),b
 17615                           
 17616                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 17617  005F1C  0E00               	movlw	0
 17618  005F1E  6FA8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 17619                           
 17620                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 17621  005F20  0E00               	movlw	0
 17622  005F22  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17623                           
 17624                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 17625  005F24  0E00               	movlw	0
 17626  005F26  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17627                           
 17628                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 17629  005F28  0E00               	movlw	0
 17630  005F2A  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17631                           
 17632                           ;usb_device.c: 2477: controlTransferState = 0;
 17633  005F2C  0E00               	movlw	0
 17634  005F2E  6FAE               	movwf	_controlTransferState& (0+255),b
 17635                           
 17636                           ; BSR set to: 0
 17637                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17638  005F30  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17639  005F34  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17640  005F38  0E7F               	movlw	127
 17641  005F3A  16DF               	andwf	indf2,f,c
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17645  005F3C  0E04               	movlw	4
 17646  005F3E  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17647  005F40  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17648  005F42  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17649  005F44  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17650                           
 17651                           ; BSR set to: 0
 17652                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17653  005F46  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17654  005F4A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17655  005F4E  0E7F               	movlw	127
 17656  005F50  16DF               	andwf	indf2,f,c
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17660  005F52  0E04               	movlw	4
 17661  005F54  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17662  005F56  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17663  005F58  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17664  005F5A  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 17668  005F5C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17669  005F60  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17670  005F64  0E7F               	movlw	127
 17671  005F66  16DF               	andwf	indf2,f,c
 17672                           
 17673                           ; BSR set to: 0
 17674                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 17675  005F68  0E00               	movlw	0
 17676  005F6A  6F69               	movwf	(_inPipes+3)& (0+255),b
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 17680  005F6C  0E00               	movlw	0
 17681  005F6E  6F6B               	movwf	(_inPipes+5)& (0+255),b
 17682  005F70  0E00               	movlw	0
 17683  005F72  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 17687  005F74  0E00               	movlw	0
 17688  005F76  0101               	movlb	1	; () banked
 17689  005F78  6F34               	movwf	(_outPipes+3)& (0+255),b
 17690                           
 17691                           ; BSR set to: 1
 17692                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 17693  005F7A  0E00               	movlw	0
 17694  005F7C  6F36               	movwf	(_outPipes+5)& (0+255),b
 17695  005F7E  0E00               	movlw	0
 17696  005F80  6F35               	movwf	(_outPipes+4)& (0+255),b
 17697                           
 17698                           ; BSR set to: 1
 17699                           ;usb_device.c: 2502: USBCheckStdRequest();
 17700  005F82  EC31  F023         	call	_USBCheckStdRequest	;wreg free
 17701                           
 17702                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 17703  005F86  0E00               	movlw	0
 17704  005F88  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17705  005F8A  0E03               	movlw	3
 17706  005F8C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17707  005F8E  0E00               	movlw	0
 17708  005F90  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17709  005F92  0E00               	movlw	0
 17710  005F94  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17711  005F96  0E00               	movlw	0
 17712  005F98  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17713  005F9A  0E00               	movlw	0
 17714  005F9C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17715  005F9E  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17716                           
 17717                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 17718  005FA2  EC31  F022         	call	_USBCtrlEPServiceComplete	;wreg free
 17719  005FA6  0012               	return		;funcret
 17720  005FA8                     __end_of_USBCtrlTrfSetupHandler:
 17721                           	opt stack 0
 17722                           tblptru	equ	0xFF8
 17723                           tblptrh	equ	0xFF7
 17724                           tblptrl	equ	0xFF6
 17725                           tablat	equ	0xFF5
 17726                           prodh	equ	0xFF4
 17727                           prodl	equ	0xFF3
 17728                           intcon	equ	0xFF2
 17729                           intcon2	equ	0xFF1
 17730                           intcon3	equ	0xFF0
 17731                           postinc0	equ	0xFEE
 17732                           wreg	equ	0xFE8
 17733                           indf1	equ	0xFE7
 17734                           postdec1	equ	0xFE5
 17735                           plusw1	equ	0xFE3
 17736                           fsr1h	equ	0xFE2
 17737                           fsr1l	equ	0xFE1
 17738                           indf2	equ	0xFDF
 17739                           postinc2	equ	0xFDE
 17740                           postdec2	equ	0xFDD
 17741                           plusw2	equ	0xFDB
 17742                           fsr2h	equ	0xFDA
 17743                           fsr2l	equ	0xFD9
 17744                           status	equ	0xFD8
 17745                           
 17746 ;; *************** function _USBCtrlEPServiceComplete *****************
 17747 ;; Defined at:
 17748 ;;		line 1618 in file "usb_device.c"
 17749 ;; Parameters:    Size  Location     Type
 17750 ;;		None
 17751 ;; Auto vars:     Size  Location     Type
 17752 ;;		None
 17753 ;; Return value:  Size  Location     Type
 17754 ;;                  1    wreg      void 
 17755 ;; Registers used:
 17756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17757 ;; Tracked objects:
 17758 ;;		On entry : 0/0
 17759 ;;		On exit  : 0/0
 17760 ;;		Unchanged: 0/0
 17761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17766 ;;Total ram usage:        0 bytes
 17767 ;; Hardware stack levels used:    1
 17768 ;; Hardware stack levels required when called:    2
 17769 ;; This function calls:
 17770 ;;		_USBCtrlEPAllowDataStage
 17771 ;;		_USBCtrlEPAllowStatusStage
 17772 ;; This function is called by:
 17773 ;;		_USBCtrlTrfSetupHandler
 17774 ;; This function uses a non-reentrant model
 17775 ;;
 17776                           
 17777                           	psect	text82
 17778  004462                     __ptext82:
 17779                           	opt stack 0
 17780  004462                     _USBCtrlEPServiceComplete:
 17781                           	opt stack 25
 17782                           
 17783                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 17784                           
 17785                           ;incstack = 0
 17786  004462  9865               	bcf	3941,4,c	;volatile
 17787                           
 17788                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 17789  004464  0100               	movlb	0	; () banked
 17790  004466  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 17791  004468  D03C               	goto	l219
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 17795  00446A  0101               	movlb	1	; () banked
 17796  00446C  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 17797  00446E  D00D               	goto	l220
 17798                           
 17799                           ; BSR set to: 1
 17800                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 17801  004470  0E02               	movlw	2
 17802  004472  0100               	movlb	0	; () banked
 17803  004474  6FAE               	movwf	_controlTransferState& (0+255),b
 17804                           
 17805                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 17806  004476  51A4               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 17807  004478  B4D8               	btfsc	status,2,c
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 17811  00447A  EC71  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 17812                           
 17813                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 17814  00447E  0E00               	movlw	0
 17815  004480  0100               	movlb	0	; () banked
 17816  004482  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 17820  004484  0E00               	movlw	0
 17821  004486  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17822                           
 17823                           ;usb_device.c: 1654: }
 17824  004488  0012               	return	
 17825  00448A                     l220:
 17826                           
 17827                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17828                           
 17829                           ; BSR set to: 0
 17830  00448A  0100               	movlb	0	; () banked
 17831  00448C  EE20 F001          	lfsr	2,1
 17832  004490  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17833  004492  26D9               	addwf	fsr2l,f,c
 17834  004494  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17835  004496  22DA               	addwfc	fsr2h,f,c
 17836  004498  0E08               	movlw	8
 17837  00449A  6EDF               	movwf	indf2,c
 17838                           
 17839                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17840  00449C  EE20 F002          	lfsr	2,2
 17841  0044A0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17842  0044A2  26D9               	addwf	fsr2l,f,c
 17843  0044A4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17844  0044A6  22DA               	addwfc	fsr2h,f,c
 17845  0044A8  0E30               	movlw	48
 17846  0044AA  6EDE               	movwf	postinc2,c
 17847  0044AC  0E0D               	movlw	13
 17848  0044AE  6EDD               	movwf	postdec2,c
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17852  0044B0  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17853  0044B4  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17854  0044B8  0E0C               	movlw	12
 17855  0044BA  6EDF               	movwf	indf2,c
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17859  0044BC  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17860  0044C0  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17861  0044C4  0E00               	movlw	0
 17862  0044C6  8EDB               	bsf	plusw2,7,c
 17863                           
 17864                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 17865  0044C8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17866  0044CC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17867  0044D0  0E04               	movlw	4
 17868  0044D2  6EDF               	movwf	indf2,c
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17872  0044D4  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17873  0044D8  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17874  0044DC  0E00               	movlw	0
 17875  0044DE  8EDB               	bsf	plusw2,7,c
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 17879  0044E0  0012               	return	
 17880  0044E2                     l219:
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 17884  0044E2  010D               	movlb	13	; () banked
 17885  0044E4  AF30               	btfss	48,7,b	;volatile
 17886  0044E6  D012               	goto	l224
 17887                           
 17888                           ; BSR set to: 13
 17889                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 17890  0044E8  0E01               	movlw	1
 17891  0044EA  0100               	movlb	0	; () banked
 17892  0044EC  6FAE               	movwf	_controlTransferState& (0+255),b
 17893                           
 17894                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 17895  0044EE  51A5               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17896  0044F0  B4D8               	btfsc	status,2,c
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 17900  0044F2  EC71  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 17901                           
 17902                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 17903  0044F6  0E00               	movlw	0
 17904  0044F8  0100               	movlb	0	; () banked
 17905  0044FA  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 17909  0044FC  0E00               	movlw	0
 17910  0044FE  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 17914  004500  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17915  004502  A4D8               	btfss	status,2,c
 17916  004504  0012               	return	
 17917                           
 17918                           ; BSR set to: 0
 17919                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 17920  004506  EC3F  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17921                           
 17922                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 17923  00450A  0012               	return	
 17924  00450C                     l224:
 17925                           
 17926                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 17927  00450C  0E02               	movlw	2
 17928  00450E  0100               	movlb	0	; () banked
 17929  004510  6FAE               	movwf	_controlTransferState& (0+255),b
 17930                           
 17931                           ; BSR set to: 0
 17932                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 17933  004512  EE20 F001          	lfsr	2,1
 17934  004516  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17935  004518  26D9               	addwf	fsr2l,f,c
 17936  00451A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17937  00451C  22DA               	addwfc	fsr2h,f,c
 17938  00451E  0E08               	movlw	8
 17939  004520  6EDF               	movwf	indf2,c
 17940                           
 17941                           ; BSR set to: 0
 17942                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17943  004522  EE20 F002          	lfsr	2,2
 17944  004526  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17945  004528  26D9               	addwf	fsr2l,f,c
 17946  00452A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17947  00452C  22DA               	addwfc	fsr2h,f,c
 17948  00452E  0E30               	movlw	48
 17949  004530  6EDE               	movwf	postinc2,c
 17950  004532  0E0D               	movlw	13
 17951  004534  6EDD               	movwf	postdec2,c
 17952                           
 17953                           ; BSR set to: 0
 17954                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17955  004536  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17956  00453A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17957  00453E  0E04               	movlw	4
 17958  004540  6EDF               	movwf	indf2,c
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17962  004542  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17963  004546  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17964  00454A  0E00               	movlw	0
 17965  00454C  8EDB               	bsf	plusw2,7,c
 17966                           
 17967                           ; BSR set to: 0
 17968                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 17969  00454E  0E00               	movlw	0
 17970  004550  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 17974  004552  0E00               	movlw	0
 17975  004554  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17976                           
 17977                           ; BSR set to: 0
 17978                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 17979  004556  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17980  004558  A4D8               	btfss	status,2,c
 17981  00455A  0012               	return	
 17982                           
 17983                           ; BSR set to: 0
 17984                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 17985  00455C  EC3F  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17986  004560  0012               	return	
 17987  004562                     __end_of_USBCtrlEPServiceComplete:
 17988                           	opt stack 0
 17989                           tblptru	equ	0xFF8
 17990                           tblptrh	equ	0xFF7
 17991                           tblptrl	equ	0xFF6
 17992                           tablat	equ	0xFF5
 17993                           prodh	equ	0xFF4
 17994                           prodl	equ	0xFF3
 17995                           intcon	equ	0xFF2
 17996                           intcon2	equ	0xFF1
 17997                           intcon3	equ	0xFF0
 17998                           postinc0	equ	0xFEE
 17999                           wreg	equ	0xFE8
 18000                           indf1	equ	0xFE7
 18001                           postdec1	equ	0xFE5
 18002                           plusw1	equ	0xFE3
 18003                           fsr1h	equ	0xFE2
 18004                           fsr1l	equ	0xFE1
 18005                           indf2	equ	0xFDF
 18006                           postinc2	equ	0xFDE
 18007                           postdec2	equ	0xFDD
 18008                           plusw2	equ	0xFDB
 18009                           fsr2h	equ	0xFDA
 18010                           fsr2l	equ	0xFD9
 18011                           status	equ	0xFD8
 18012                           
 18013 ;; *************** function _USBCtrlEPAllowDataStage *****************
 18014 ;; Defined at:
 18015 ;;		line 1490 in file "usb_device.c"
 18016 ;; Parameters:    Size  Location     Type
 18017 ;;		None
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;		None
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      void 
 18022 ;; Registers used:
 18023 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18033 ;;Total ram usage:        0 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    1
 18036 ;; This function calls:
 18037 ;;		_USBCtrlTrfTxService
 18038 ;; This function is called by:
 18039 ;;		_USBCtrlEPServiceComplete
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text83
 18044  005AE2                     __ptext83:
 18045                           	opt stack 0
 18046  005AE2                     _USBCtrlEPAllowDataStage:
 18047                           	opt stack 25
 18048                           
 18049                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 18050                           
 18051                           ;incstack = 0
 18052  005AE2  0E00               	movlw	0
 18053  005AE4  0100               	movlb	0	; () banked
 18054  005AE6  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18055                           
 18056                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 18057  005AE8  0E00               	movlw	0
 18058  005AEA  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;usb_device.c: 1495: if(controlTransferState == 2)
 18062  005AEC  0E02               	movlw	2
 18063  005AEE  19AE               	xorwf	_controlTransferState& (0+255),w,b
 18064  005AF0  A4D8               	btfss	status,2,c
 18065  005AF2  D01F               	goto	l208
 18066                           
 18067                           ; BSR set to: 0
 18068                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 18069  005AF4  EE20 F001          	lfsr	2,1
 18070  005AF8  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18071  005AFA  26D9               	addwf	fsr2l,f,c
 18072  005AFC  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18073  005AFE  22DA               	addwfc	fsr2h,f,c
 18074  005B00  0E08               	movlw	8
 18075  005B02  6EDF               	movwf	indf2,c
 18076                           
 18077                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18078  005B04  EE20 F002          	lfsr	2,2
 18079  005B08  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18080  005B0A  26D9               	addwf	fsr2l,f,c
 18081  005B0C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18082  005B0E  22DA               	addwfc	fsr2h,f,c
 18083  005B10  0E38               	movlw	56
 18084  005B12  6EDE               	movwf	postinc2,c
 18085  005B14  0E0D               	movlw	13
 18086  005B16  6EDD               	movwf	postdec2,c
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18090  005B18  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18091  005B1C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18092  005B20  0E48               	movlw	72
 18093  005B22  6EDF               	movwf	indf2,c
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18097  005B24  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18098  005B28  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18099  005B2C  0E00               	movlw	0
 18100  005B2E  8EDB               	bsf	plusw2,7,c
 18101                           
 18102                           ;usb_device.c: 1502: }
 18103  005B30  0012               	return	
 18104  005B32                     l208:
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 18108                           
 18109                           ; BSR set to: 0
 18110  005B32  516A               	movf	(_inPipes+4)& (0+255),w,b
 18111  005B34  010D               	movlb	13	; () banked
 18112  005B36  5D36               	subwf	54,w,b	;volatile
 18113  005B38  0100               	movlb	0	; () banked
 18114  005B3A  516B               	movf	(_inPipes+5)& (0+255),w,b
 18115  005B3C  010D               	movlb	13	; () banked
 18116  005B3E  5937               	subwfb	55,w,b	;volatile
 18117  005B40  B0D8               	btfsc	status,0,c
 18118  005B42  D004               	goto	l210
 18119                           
 18120                           ; BSR set to: 13
 18121                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 18122  005B44  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 18123  005B48  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 18124  005B4C                     l210:
 18125                           
 18126                           ; BSR set to: 13
 18127                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 18128                           
 18129                           ; BSR set to: 13
 18130  005B4C  EC13  F027         	call	_USBCtrlTrfTxService	;wreg free
 18131                           
 18132                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 18133  005B50  0100               	movlb	0	; () banked
 18134  005B52  EE20 F002          	lfsr	2,2
 18135  005B56  516C               	movf	_pBDTEntryIn& (0+255),w,b
 18136  005B58  26D9               	addwf	fsr2l,f,c
 18137  005B5A  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18138  005B5C  22DA               	addwfc	fsr2h,f,c
 18139  005B5E  0E38               	movlw	56
 18140  005B60  6EDE               	movwf	postinc2,c
 18141  005B62  0E0D               	movlw	13
 18142  005B64  6EDD               	movwf	postdec2,c
 18143                           
 18144                           ; BSR set to: 0
 18145                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18146  005B66  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18147  005B6A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18148  005B6E  0E48               	movlw	72
 18149  005B70  6EDF               	movwf	indf2,c
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18153  005B72  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18154  005B76  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18155  005B7A  0E00               	movlw	0
 18156  005B7C  8EDB               	bsf	plusw2,7,c
 18157  005B7E  0012               	return	
 18158  005B80                     __end_of_USBCtrlEPAllowDataStage:
 18159                           	opt stack 0
 18160                           tblptru	equ	0xFF8
 18161                           tblptrh	equ	0xFF7
 18162                           tblptrl	equ	0xFF6
 18163                           tablat	equ	0xFF5
 18164                           prodh	equ	0xFF4
 18165                           prodl	equ	0xFF3
 18166                           intcon	equ	0xFF2
 18167                           intcon2	equ	0xFF1
 18168                           intcon3	equ	0xFF0
 18169                           postinc0	equ	0xFEE
 18170                           wreg	equ	0xFE8
 18171                           indf1	equ	0xFE7
 18172                           postdec1	equ	0xFE5
 18173                           plusw1	equ	0xFE3
 18174                           fsr1h	equ	0xFE2
 18175                           fsr1l	equ	0xFE1
 18176                           indf2	equ	0xFDF
 18177                           postinc2	equ	0xFDE
 18178                           postdec2	equ	0xFDD
 18179                           plusw2	equ	0xFDB
 18180                           fsr2h	equ	0xFDA
 18181                           fsr2l	equ	0xFD9
 18182                           status	equ	0xFD8
 18183                           
 18184 ;; *************** function _USBCheckStdRequest *****************
 18185 ;; Defined at:
 18186 ;;		line 2688 in file "usb_device.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;		None
 18189 ;; Auto vars:     Size  Location     Type
 18190 ;;		None
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  1    wreg      void 
 18193 ;; Registers used:
 18194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/0
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18204 ;;Total ram usage:        0 bytes
 18205 ;; Hardware stack levels used:    1
 18206 ;; Hardware stack levels required when called:    5
 18207 ;; This function calls:
 18208 ;;		_USBStdFeatureReqHandler
 18209 ;;		_USBStdGetDscHandler
 18210 ;;		_USBStdGetStatusHandler
 18211 ;;		_USBStdSetCfgHandler
 18212 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18213 ;; This function is called by:
 18214 ;;		_USBCtrlTrfSetupHandler
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           	psect	text84
 18219  004662                     __ptext84:
 18220                           	opt stack 0
 18221  004662                     _USBCheckStdRequest:
 18222                           	opt stack 22
 18223                           
 18224                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;incstack = 0
 18228  004662  010D               	movlb	13	; () banked
 18229  004664  3930               	swapf	48,w,b	;volatile
 18230  004666  32E8               	rrcf	wreg,f,c
 18231  004668  0B03               	andlw	3
 18232  00466A  0900               	iorlw	0
 18233  00466C  A4D8               	btfss	status,2,c
 18234  00466E  0012               	return	
 18235  004670  D047               	goto	l343
 18236  004672                     l344:
 18237                           
 18238                           ; BSR set to: 13
 18239                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 18240  004672  0100               	movlb	0	; () banked
 18241  004674  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18242                           
 18243                           ; BSR set to: 0
 18244                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 18245  004676  0E08               	movlw	8
 18246  004678  6FB0               	movwf	_USBDeviceState& (0+255),b
 18247                           
 18248                           ;usb_device.c: 2698: break;
 18249  00467A  0012               	return	
 18250  00467C                     
 18251                           ;usb_device.c: 2700: USBStdGetDscHandler();
 18252                           
 18253                           ; BSR set to: 0
 18254  00467C  EC4E  F01D         	call	_USBStdGetDscHandler	;wreg free
 18255                           
 18256                           ;usb_device.c: 2701: break;
 18257  004680  0012               	return	
 18258  004682                     
 18259                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 18260  004682  ECA2  F023         	call	_USBStdSetCfgHandler	;wreg free
 18261                           
 18262                           ;usb_device.c: 2704: break;
 18263  004686  0012               	return	
 18264  004688                     
 18265                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 18266  004688  0EB4               	movlw	low _USBActiveConfiguration
 18267  00468A  0100               	movlb	0	; () banked
 18268  00468C  6F66               	movwf	_inPipes& (0+255),b
 18269  00468E  0E00               	movlw	high _USBActiveConfiguration
 18270  004690  6F67               	movwf	(_inPipes+1)& (0+255),b
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18274  004692  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 18278  004694  0E01               	movlw	1
 18279  004696  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 18283  004698  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18284                           
 18285                           ;usb_device.c: 2710: break;
 18286  00469A  0012               	return	
 18287  00469C                     
 18288                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 18289                           
 18290                           ; BSR set to: 0
 18291  00469C  EC82  F02B         	call	_USBStdGetStatusHandler	;wreg free
 18292                           
 18293                           ;usb_device.c: 2713: break;
 18294  0046A0  0012               	return	
 18295  0046A2                     
 18296                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 18297  0046A2  ECDA  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 18298                           
 18299                           ;usb_device.c: 2717: break;
 18300  0046A6  0012               	return	
 18301  0046A8                     
 18302                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 18303  0046A8  010D               	movlb	13	; () banked
 18304  0046AA  5134               	movf	52,w,b	;volatile
 18305  0046AC  0D01               	mullw	1
 18306  0046AE  0EE0               	movlw	low _USBAlternateInterface
 18307  0046B0  24F3               	addwf	prodl,w,c
 18308  0046B2  0100               	movlb	0	; () banked
 18309  0046B4  6F66               	movwf	_inPipes& (0+255),b
 18310  0046B6  0E01               	movlw	high _USBAlternateInterface
 18311  0046B8  20F4               	addwfc	prodh,w,c
 18312  0046BA  6F67               	movwf	(_inPipes+1)& (0+255),b
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18316  0046BC  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 18320  0046BE  0E01               	movlw	1
 18321  0046C0  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 18325  0046C2  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18326                           
 18327                           ;usb_device.c: 2723: break;
 18328  0046C4  0012               	return	
 18329  0046C6                     l353:
 18330                           
 18331                           ; BSR set to: 13
 18332                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 18333  0046C6  0100               	movlb	0	; () banked
 18334  0046C8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18335                           
 18336                           ; BSR set to: 0
 18337                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 18338  0046CA  010D               	movlb	13	; () banked
 18339  0046CC  5134               	movf	52,w,b	;volatile
 18340  0046CE  0D01               	mullw	1
 18341  0046D0  0EE0               	movlw	low _USBAlternateInterface
 18342  0046D2  24F3               	addwf	prodl,w,c
 18343  0046D4  6ED9               	movwf	fsr2l,c
 18344  0046D6  0E01               	movlw	high _USBAlternateInterface
 18345  0046D8  20F4               	addwfc	prodh,w,c
 18346  0046DA  6EDA               	movwf	fsr2h,c
 18347  0046DC  CD32 FFDF          	movff	3378,indf2	;volatile
 18348                           
 18349                           ;usb_device.c: 2727: break;
 18350  0046E0  0012               	return	
 18351  0046E2                     
 18352                           ; BSR set to: 13
 18353                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 18354                           
 18355                           ; BSR set to: 13
 18356  0046E2  0E00               	movlw	0
 18357  0046E4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18358  0046E6  0E02               	movlw	2
 18359  0046E8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18360  0046EA  0E00               	movlw	0
 18361  0046EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18362  0046EE  0E00               	movlw	0
 18363  0046F0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18364  0046F2  0E00               	movlw	0
 18365  0046F4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18366  0046F6  0E00               	movlw	0
 18367  0046F8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18368  0046FA  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18369                           
 18370                           ;usb_device.c: 2734: }
 18371                           
 18372                           ;usb_device.c: 2733: break;
 18373                           
 18374                           ;usb_device.c: 2732: default:
 18375                           
 18376                           ;usb_device.c: 2731: case 12:
 18377                           
 18378                           ;usb_device.c: 2730: break;
 18379  0046FE  0012               	return	
 18380  004700                     l343:
 18381  004700  010D               	movlb	13	; () banked
 18382  004702  5131               	movf	49,w,b	;volatile
 18383                           
 18384                           ; Switch size 1, requested type "space"
 18385                           ; Number of cases is 11, Range of values is 0 to 12
 18386                           ; switch strategies available:
 18387                           ; Name         Instructions Cycles
 18388                           ; simple_byte           34    18 (average)
 18389                           ;	Chosen strategy is simple_byte
 18390  004704  0A00               	xorlw	0	; case 0
 18391  004706  B4D8               	btfsc	status,2,c
 18392  004708  D7C9               	goto	l349
 18393  00470A  0A01               	xorlw	1	; case 1
 18394  00470C  B4D8               	btfsc	status,2,c
 18395  00470E  D7C9               	goto	l350
 18396  004710  0A02               	xorlw	2	; case 3
 18397  004712  B4D8               	btfsc	status,2,c
 18398  004714  D7C6               	goto	l350
 18399  004716  0A06               	xorlw	6	; case 5
 18400  004718  B4D8               	btfsc	status,2,c
 18401  00471A  D7AB               	goto	l344
 18402  00471C  0A03               	xorlw	3	; case 6
 18403  00471E  B4D8               	btfsc	status,2,c
 18404  004720  D7AD               	goto	l346
 18405  004722  0A01               	xorlw	1	; case 7
 18406  004724  B4D8               	btfsc	status,2,c
 18407  004726  D7DD               	goto	l354
 18408  004728  0A0F               	xorlw	15	; case 8
 18409  00472A  B4D8               	btfsc	status,2,c
 18410  00472C  D7AD               	goto	l348
 18411  00472E  0A01               	xorlw	1	; case 9
 18412  004730  B4D8               	btfsc	status,2,c
 18413  004732  D7A7               	goto	l347
 18414  004734  0A03               	xorlw	3	; case 10
 18415  004736  B4D8               	btfsc	status,2,c
 18416  004738  D7B7               	goto	l352
 18417  00473A  0A01               	xorlw	1	; case 11
 18418  00473C  B4D8               	btfsc	status,2,c
 18419  00473E  D7C3               	goto	l353
 18420  004740  0A07               	xorlw	7	; case 12
 18421  004742  0012               	return	
 18422  004744                     __end_of_USBCheckStdRequest:
 18423                           	opt stack 0
 18424                           tblptru	equ	0xFF8
 18425                           tblptrh	equ	0xFF7
 18426                           tblptrl	equ	0xFF6
 18427                           tablat	equ	0xFF5
 18428                           prodh	equ	0xFF4
 18429                           prodl	equ	0xFF3
 18430                           intcon	equ	0xFF2
 18431                           intcon2	equ	0xFF1
 18432                           intcon3	equ	0xFF0
 18433                           postinc0	equ	0xFEE
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           postdec1	equ	0xFE5
 18437                           plusw1	equ	0xFE3
 18438                           fsr1h	equ	0xFE2
 18439                           fsr1l	equ	0xFE1
 18440                           indf2	equ	0xFDF
 18441                           postinc2	equ	0xFDE
 18442                           postdec2	equ	0xFDD
 18443                           plusw2	equ	0xFDB
 18444                           fsr2h	equ	0xFDA
 18445                           fsr2l	equ	0xFD9
 18446                           status	equ	0xFD8
 18447                           
 18448 ;; *************** function _USBStdSetCfgHandler *****************
 18449 ;; Defined at:
 18450 ;;		line 1970 in file "usb_device.c"
 18451 ;; Parameters:    Size  Location     Type
 18452 ;;		None
 18453 ;; Auto vars:     Size  Location     Type
 18454 ;;  i               1   23[COMRAM] unsigned char 
 18455 ;; Return value:  Size  Location     Type
 18456 ;;                  1    wreg      void 
 18457 ;; Registers used:
 18458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18459 ;; Tracked objects:
 18460 ;;		On entry : 0/0
 18461 ;;		On exit  : 0/0
 18462 ;;		Unchanged: 0/0
 18463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18468 ;;Total ram usage:        1 bytes
 18469 ;; Hardware stack levels used:    1
 18470 ;; Hardware stack levels required when called:    4
 18471 ;; This function calls:
 18472 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18473 ;;		_memset
 18474 ;; This function is called by:
 18475 ;;		_USBCheckStdRequest
 18476 ;; This function uses a non-reentrant model
 18477 ;;
 18478                           
 18479                           	psect	text85
 18480  004744                     __ptext85:
 18481                           	opt stack 0
 18482  004744                     _USBStdSetCfgHandler:
 18483                           	opt stack 22
 18484                           
 18485                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 18486                           
 18487                           ;incstack = 0
 18488  004744  0100               	movlb	0	; () banked
 18489  004746  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18490                           
 18491                           ; BSR set to: 0
 18492                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 18493  004748  0E27               	movlw	39
 18494  00474A  6E01               	movwf	memset@p1,c
 18495  00474C  0E0F               	movlw	15
 18496  00474E  6E02               	movwf	memset@p1+1,c
 18497  004750  0E00               	movlw	0
 18498  004752  6E04               	movwf	memset@c+1,c
 18499  004754  0E00               	movlw	0
 18500  004756  6E03               	movwf	memset@c,c
 18501  004758  0E00               	movlw	0
 18502  00475A  6E06               	movwf	memset@n+1,c
 18503  00475C  0E02               	movlw	2
 18504  00475E  6E05               	movwf	memset@n,c
 18505  004760  ECDF  F03C         	call	_memset	;wreg free
 18506                           
 18507                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18508  004764  0E00               	movlw	0
 18509  004766  6E01               	movwf	memset@p1,c
 18510  004768  0E0D               	movlw	13
 18511  00476A  6E02               	movwf	memset@p1+1,c
 18512  00476C  0E00               	movlw	0
 18513  00476E  6E04               	movwf	memset@c+1,c
 18514  004770  0E00               	movlw	0
 18515  004772  6E03               	movwf	memset@c,c
 18516  004774  0E00               	movlw	0
 18517  004776  6E06               	movwf	memset@n+1,c
 18518  004778  0E30               	movlw	48
 18519  00477A  6E05               	movwf	memset@n,c
 18520  00477C  ECDF  F03C         	call	_memset	;wreg free
 18521                           
 18522                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 18523  004780  8C65               	bsf	3941,6,c	;volatile
 18524                           
 18525                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 18526  004782  0E00               	movlw	0
 18527  004784  6E18               	movwf	USBStdSetCfgHandler@i,c
 18528  004786                     l10748:
 18529  004786  0E02               	movlw	2
 18530  004788  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 18531  00478A  D001               	goto	l260
 18532  00478C  D016               	goto	u7810
 18533  00478E                     l260:
 18534                           
 18535                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 18536  00478E  5018               	movf	USBStdSetCfgHandler@i,w,c
 18537  004790  0D01               	mullw	1
 18538  004792  0E61               	movlw	low _ep_data_in
 18539  004794  24F3               	addwf	prodl,w,c
 18540  004796  6ED9               	movwf	fsr2l,c
 18541  004798  0E01               	movlw	high _ep_data_in
 18542  00479A  20F4               	addwfc	prodh,w,c
 18543  00479C  6EDA               	movwf	fsr2h,c
 18544  00479E  0E00               	movlw	0
 18545  0047A0  6EDF               	movwf	indf2,c
 18546                           
 18547                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 18548  0047A2  5018               	movf	USBStdSetCfgHandler@i,w,c
 18549  0047A4  0D01               	mullw	1
 18550  0047A6  0E5E               	movlw	low _ep_data_out
 18551  0047A8  24F3               	addwf	prodl,w,c
 18552  0047AA  6ED9               	movwf	fsr2l,c
 18553  0047AC  0E01               	movlw	high _ep_data_out
 18554  0047AE  20F4               	addwfc	prodh,w,c
 18555  0047B0  6EDA               	movwf	fsr2h,c
 18556  0047B2  0E00               	movlw	0
 18557  0047B4  6EDF               	movwf	indf2,c
 18558  0047B6  2A18               	incf	USBStdSetCfgHandler@i,f,c
 18559  0047B8  D7E6               	goto	l10748
 18560  0047BA                     u7810:
 18561                           
 18562                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 18563  0047BA  0EE0               	movlw	low _USBAlternateInterface
 18564  0047BC  6E01               	movwf	memset@p1,c
 18565  0047BE  0E01               	movlw	high _USBAlternateInterface
 18566  0047C0  6E02               	movwf	memset@p1+1,c
 18567  0047C2  0E00               	movlw	0
 18568  0047C4  6E04               	movwf	memset@c+1,c
 18569  0047C6  0E00               	movlw	0
 18570  0047C8  6E03               	movwf	memset@c,c
 18571  0047CA  0E00               	movlw	0
 18572  0047CC  6E06               	movwf	memset@n+1,c
 18573  0047CE  0E02               	movlw	2
 18574  0047D0  6E05               	movwf	memset@n,c
 18575  0047D2  ECDF  F03C         	call	_memset	;wreg free
 18576                           
 18577                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 18578  0047D6  9C65               	bcf	3941,6,c	;volatile
 18579                           
 18580                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18581  0047D8  0E08               	movlw	8
 18582  0047DA  0100               	movlb	0	; () banked
 18583  0047DC  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18584  0047DE  0E0D               	movlw	13
 18585  0047E0  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 18589  0047E2  0E00               	movlw	0
 18590  0047E4  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 18591  0047E6  0E0D               	movlw	13
 18592  0047E8  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18596  0047EA  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18597  0047EE  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18598                           
 18599                           ; BSR set to: 0
 18600                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 18601  0047F2  CD32 F0B4          	movff	3378,_USBActiveConfiguration	;volatile
 18602                           
 18603                           ; BSR set to: 0
 18604                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 18605  0047F6  51B4               	movf	_USBActiveConfiguration& (0+255),w,b
 18606  0047F8  A4D8               	btfss	status,2,c
 18607  0047FA  D003               	goto	l262
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 18611  0047FC  0E10               	movlw	16
 18612  0047FE  6FB0               	movwf	_USBDeviceState& (0+255),b
 18613                           
 18614                           ;usb_device.c: 2015: }
 18615  004800  0012               	return	
 18616  004802                     l262:
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 18620                           
 18621                           ; BSR set to: 0
 18622  004802  0E00               	movlw	0
 18623  004804  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18624  004806  0E01               	movlw	1
 18625  004808  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18626  00480A  0EB4               	movlw	low _USBActiveConfiguration
 18627  00480C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18628  00480E  0E00               	movlw	high _USBActiveConfiguration
 18629  004810  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18630  004812  0E00               	movlw	0
 18631  004814  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18632  004816  0E01               	movlw	1
 18633  004818  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18634  00481A  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18635                           
 18636                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 18637  00481E  0E20               	movlw	32
 18638  004820  0100               	movlb	0	; () banked
 18639  004822  6FB0               	movwf	_USBDeviceState& (0+255),b
 18640  004824  0012               	return	
 18641  004826                     __end_of_USBStdSetCfgHandler:
 18642                           	opt stack 0
 18643                           tblptru	equ	0xFF8
 18644                           tblptrh	equ	0xFF7
 18645                           tblptrl	equ	0xFF6
 18646                           tablat	equ	0xFF5
 18647                           prodh	equ	0xFF4
 18648                           prodl	equ	0xFF3
 18649                           intcon	equ	0xFF2
 18650                           intcon2	equ	0xFF1
 18651                           intcon3	equ	0xFF0
 18652                           postinc0	equ	0xFEE
 18653                           wreg	equ	0xFE8
 18654                           indf1	equ	0xFE7
 18655                           postdec1	equ	0xFE5
 18656                           plusw1	equ	0xFE3
 18657                           fsr1h	equ	0xFE2
 18658                           fsr1l	equ	0xFE1
 18659                           indf2	equ	0xFDF
 18660                           postinc2	equ	0xFDE
 18661                           postdec2	equ	0xFDD
 18662                           plusw2	equ	0xFDB
 18663                           fsr2h	equ	0xFDA
 18664                           fsr2l	equ	0xFD9
 18665                           status	equ	0xFD8
 18666                           
 18667 ;; *************** function _memset *****************
 18668 ;; Defined at:
 18669 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 18670 ;; Parameters:    Size  Location     Type
 18671 ;;  p1              2    0[COMRAM] PTR void 
 18672 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18673 ;;  c               2    2[COMRAM] int 
 18674 ;;  n               2    4[COMRAM] unsigned int 
 18675 ;; Auto vars:     Size  Location     Type
 18676 ;;  p               2    6[COMRAM] PTR unsigned char 
 18677 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18678 ;; Return value:  Size  Location     Type
 18679 ;;                  2    0[COMRAM] PTR void 
 18680 ;; Registers used:
 18681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18682 ;; Tracked objects:
 18683 ;;		On entry : 0/0
 18684 ;;		On exit  : 0/0
 18685 ;;		Unchanged: 0/0
 18686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18687 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18691 ;;Total ram usage:        8 bytes
 18692 ;; Hardware stack levels used:    1
 18693 ;; This function calls:
 18694 ;;		Nothing
 18695 ;; This function is called by:
 18696 ;;		_USBDeviceInit
 18697 ;;		_USBStdSetCfgHandler
 18698 ;; This function uses a non-reentrant model
 18699 ;;
 18700                           
 18701                           	psect	text86
 18702  0079BE                     __ptext86:
 18703                           	opt stack 0
 18704  0079BE                     _memset:
 18705                           	opt stack 28
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;incstack = 0
 18709  0079BE  C001  F007         	movff	memset@p1,memset@p
 18710  0079C2  C002  F008         	movff	memset@p1+1,memset@p+1
 18711  0079C6  D008               	goto	l3460
 18712  0079C8                     l10176:
 18713  0079C8  C007  FFD9         	movff	memset@p,fsr2l
 18714  0079CC  C008  FFDA         	movff	memset@p+1,fsr2h
 18715  0079D0  C003  FFDF         	movff	memset@c,indf2
 18716  0079D4  4A07               	infsnz	memset@p,f,c
 18717  0079D6  2A08               	incf	memset@p+1,f,c
 18718  0079D8                     l3460:
 18719  0079D8  0605               	decf	memset@n,f,c
 18720  0079DA  A0D8               	btfss	status,0,c
 18721  0079DC  0606               	decf	memset@n+1,f,c
 18722  0079DE  2805               	incf	memset@n,w,c
 18723  0079E0  E1F3               	bnz	l10176
 18724  0079E2  2806               	incf	memset@n+1,w,c
 18725  0079E4  B4D8               	btfsc	status,2,c
 18726  0079E6  0012               	return	
 18727  0079E8  D7EF               	goto	l3461
 18728  0079EA                     __end_of_memset:
 18729                           	opt stack 0
 18730                           tblptru	equ	0xFF8
 18731                           tblptrh	equ	0xFF7
 18732                           tblptrl	equ	0xFF6
 18733                           tablat	equ	0xFF5
 18734                           prodh	equ	0xFF4
 18735                           prodl	equ	0xFF3
 18736                           intcon	equ	0xFF2
 18737                           intcon2	equ	0xFF1
 18738                           intcon3	equ	0xFF0
 18739                           postinc0	equ	0xFEE
 18740                           wreg	equ	0xFE8
 18741                           indf1	equ	0xFE7
 18742                           postdec1	equ	0xFE5
 18743                           plusw1	equ	0xFE3
 18744                           fsr1h	equ	0xFE2
 18745                           fsr1l	equ	0xFE1
 18746                           indf2	equ	0xFDF
 18747                           postinc2	equ	0xFDE
 18748                           postdec2	equ	0xFDD
 18749                           plusw2	equ	0xFDB
 18750                           fsr2h	equ	0xFDA
 18751                           fsr2l	equ	0xFD9
 18752                           status	equ	0xFD8
 18753                           
 18754 ;; *************** function _USBStdGetStatusHandler *****************
 18755 ;; Defined at:
 18756 ;;		line 2131 in file "usb_device.c"
 18757 ;; Parameters:    Size  Location     Type
 18758 ;;		None
 18759 ;; Auto vars:     Size  Location     Type
 18760 ;;  p               2    1[COMRAM] PTR struct __BDT
 18761 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18762 ;; Return value:  Size  Location     Type
 18763 ;;                  1    wreg      void 
 18764 ;; Registers used:
 18765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18766 ;; Tracked objects:
 18767 ;;		On entry : 0/0
 18768 ;;		On exit  : 0/0
 18769 ;;		Unchanged: 0/0
 18770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18775 ;;Total ram usage:        3 bytes
 18776 ;; Hardware stack levels used:    1
 18777 ;; This function calls:
 18778 ;;		Nothing
 18779 ;; This function is called by:
 18780 ;;		_USBCheckStdRequest
 18781 ;; This function uses a non-reentrant model
 18782 ;;
 18783                           
 18784                           	psect	text87
 18785  005704                     __ptext87:
 18786                           	opt stack 0
 18787  005704                     _USBStdGetStatusHandler:
 18788                           	opt stack 26
 18789                           
 18790                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 18791                           
 18792                           ;incstack = 0
 18793  005704  0E00               	movlw	0
 18794  005706  010D               	movlb	13	; () banked
 18795  005708  6F38               	movwf	56,b	;volatile
 18796                           
 18797                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 18798  00570A  0E00               	movlw	0
 18799  00570C  6F39               	movwf	57,b	;volatile
 18800                           
 18801                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 18802  00570E  D039               	goto	l281
 18803  005710                     l282:
 18804                           
 18805                           ; BSR set to: 13
 18806                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 18807  005710  0100               	movlb	0	; () banked
 18808  005712  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18809                           
 18810                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 18811                           
 18812                           ; BSR set to: 13
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 18816                           
 18817                           ;usb_device.c: 2144: if(0 == 1)
 18818  005714  0100               	movlb	0	; () banked
 18819  005716  05AD               	decf	_RemoteWakeup& (0+255),w,b
 18820  005718  A4D8               	btfss	status,2,c
 18821  00571A  D03E               	goto	l285
 18822                           
 18823                           ; BSR set to: 0
 18824                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 18825  00571C  010D               	movlb	13	; () banked
 18826  00571E  8338               	bsf	56,1,b	;volatile
 18827                           
 18828                           ; BSR set to: 13
 18829                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 18830  005720  D03B               	goto	l285
 18831  005722                     l286:
 18832                           
 18833                           ; BSR set to: 13
 18834                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 18835  005722  0100               	movlb	0	; () banked
 18836  005724  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18837                           
 18838                           ;usb_device.c: 2156: break;
 18839  005726  D038               	goto	l285
 18840  005728                     l287:
 18841                           
 18842                           ; BSR set to: 13
 18843                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 18844  005728  0100               	movlb	0	; () banked
 18845  00572A  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18846                           
 18847                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 18848  00572C  010D               	movlb	13	; () banked
 18849  00572E  BF34               	btfsc	52,7,b	;volatile
 18850  005730  D00A               	goto	l288
 18851                           
 18852                           ; BSR set to: 13
 18853                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18854  005732  5134               	movf	52,w,b	;volatile
 18855  005734  0B0F               	andlw	15
 18856  005736  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18857  005738  5001               	movf	??_USBStdGetStatusHandler,w,c
 18858  00573A  0D02               	mullw	2
 18859  00573C  0E72               	movlw	low _pBDTEntryOut
 18860  00573E  24F3               	addwf	prodl,w,c
 18861  005740  6ED9               	movwf	fsr2l,c
 18862  005742  0E00               	movlw	high _pBDTEntryOut
 18863  005744  D009               	goto	L6
 18864  005746                     l288:
 18865                           
 18866                           ; BSR set to: 13
 18867                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 18868                           
 18869                           ; BSR set to: 13
 18870  005746  5134               	movf	52,w,b	;volatile
 18871  005748  0B0F               	andlw	15
 18872  00574A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18873  00574C  5001               	movf	??_USBStdGetStatusHandler,w,c
 18874  00574E  0D02               	mullw	2
 18875  005750  0E6C               	movlw	low _pBDTEntryIn
 18876  005752  24F3               	addwf	prodl,w,c
 18877  005754  6ED9               	movwf	fsr2l,c
 18878  005756  0E00               	movlw	high _pBDTEntryIn
 18879  005758                     L6:
 18880  005758  20F4               	addwfc	prodh,w,c
 18881  00575A  6EDA               	movwf	fsr2h,c
 18882  00575C  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 18883  005760  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 18884                           
 18885                           ; BSR set to: 13
 18886                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 18887                           
 18888                           ; BSR set to: 13
 18889  005764  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18890  005768  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18891  00576C  AEDF               	btfss	indf2,7,c
 18892  00576E  D014               	goto	l285
 18893                           
 18894                           ; BSR set to: 13
 18895  005770  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18896  005774  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18897  005778  A4DF               	btfss	indf2,2,c
 18898  00577A  D00E               	goto	l285
 18899                           
 18900                           ; BSR set to: 13
 18901                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 18902  00577C  0E01               	movlw	1
 18903  00577E  6F38               	movwf	56,b	;volatile
 18904                           
 18905                           ; BSR set to: 13
 18906                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 18907                           
 18908                           ; BSR set to: 13
 18909                           ;usb_device.c: 2176: break;
 18910  005780  D00B               	goto	l285
 18911  005782                     l281:
 18912                           
 18913                           ; BSR set to: 13
 18914                           
 18915                           ; BSR set to: 13
 18916  005782  5130               	movf	48,w,b	;volatile
 18917  005784  0B1F               	andlw	31
 18918                           
 18919                           ; Switch size 1, requested type "space"
 18920                           ; Number of cases is 3, Range of values is 0 to 2
 18921                           ; switch strategies available:
 18922                           ; Name         Instructions Cycles
 18923                           ; simple_byte           10     6 (average)
 18924                           ;	Chosen strategy is simple_byte
 18925  005786  0A00               	xorlw	0	; case 0
 18926  005788  B4D8               	btfsc	status,2,c
 18927  00578A  D7C2               	goto	l282
 18928  00578C  0A01               	xorlw	1	; case 1
 18929  00578E  B4D8               	btfsc	status,2,c
 18930  005790  D7C8               	goto	l286
 18931  005792  0A03               	xorlw	3	; case 2
 18932  005794  B4D8               	btfsc	status,2,c
 18933  005796  D7C8               	goto	l287
 18934  005798                     l285:
 18935                           
 18936                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 18937  005798  0100               	movlb	0	; () banked
 18938  00579A  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 18939  00579C  0012               	return	
 18940                           
 18941                           ; BSR set to: 0
 18942                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 18943  00579E  0E38               	movlw	56
 18944  0057A0  6F66               	movwf	_inPipes& (0+255),b
 18945  0057A2  0E0D               	movlw	13
 18946  0057A4  6F67               	movwf	(_inPipes+1)& (0+255),b
 18947                           
 18948                           ; BSR set to: 0
 18949                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18950  0057A6  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18951                           
 18952                           ; BSR set to: 0
 18953                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 18954  0057A8  0E02               	movlw	2
 18955  0057AA  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18956  0057AC  0012               	return	
 18957  0057AE                     __end_of_USBStdGetStatusHandler:
 18958                           	opt stack 0
 18959                           tblptru	equ	0xFF8
 18960                           tblptrh	equ	0xFF7
 18961                           tblptrl	equ	0xFF6
 18962                           tablat	equ	0xFF5
 18963                           prodh	equ	0xFF4
 18964                           prodl	equ	0xFF3
 18965                           intcon	equ	0xFF2
 18966                           intcon2	equ	0xFF1
 18967                           intcon3	equ	0xFF0
 18968                           postinc0	equ	0xFEE
 18969                           wreg	equ	0xFE8
 18970                           indf1	equ	0xFE7
 18971                           postdec1	equ	0xFE5
 18972                           plusw1	equ	0xFE3
 18973                           fsr1h	equ	0xFE2
 18974                           fsr1l	equ	0xFE1
 18975                           indf2	equ	0xFDF
 18976                           postinc2	equ	0xFDE
 18977                           postdec2	equ	0xFDD
 18978                           plusw2	equ	0xFDB
 18979                           fsr2h	equ	0xFDA
 18980                           fsr2l	equ	0xFD9
 18981                           status	equ	0xFD8
 18982                           
 18983 ;; *************** function _USBStdGetDscHandler *****************
 18984 ;; Defined at:
 18985 ;;		line 2045 in file "usb_device.c"
 18986 ;; Parameters:    Size  Location     Type
 18987 ;;		None
 18988 ;; Auto vars:     Size  Location     Type
 18989 ;;		None
 18990 ;; Return value:  Size  Location     Type
 18991 ;;                  1    wreg      void 
 18992 ;; Registers used:
 18993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18994 ;; Tracked objects:
 18995 ;;		On entry : 0/0
 18996 ;;		On exit  : 0/0
 18997 ;;		Unchanged: 0/0
 18998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19003 ;;Total ram usage:        2 bytes
 19004 ;; Hardware stack levels used:    1
 19005 ;; This function calls:
 19006 ;;		Nothing
 19007 ;; This function is called by:
 19008 ;;		_USBCheckStdRequest
 19009 ;; This function uses a non-reentrant model
 19010 ;;
 19011                           
 19012                           	psect	text88
 19013  003A9C                     __ptext88:
 19014                           	opt stack 0
 19015  003A9C                     _USBStdGetDscHandler:
 19016                           	opt stack 26
 19017                           
 19018                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 19019                           
 19020                           ; BSR set to: 0
 19021                           ;incstack = 0
 19022  003A9C  0E80               	movlw	128
 19023  003A9E  010D               	movlb	13	; () banked
 19024  003AA0  1930               	xorwf	48,w,b	;volatile
 19025  003AA2  A4D8               	btfss	status,2,c
 19026  003AA4  0012               	return	
 19027                           
 19028                           ; BSR set to: 13
 19029                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 19030  003AA6  0EC0               	movlw	192
 19031  003AA8  0100               	movlb	0	; () banked
 19032  003AAA  6F69               	movwf	(_inPipes+3)& (0+255),b
 19033                           
 19034                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 19035  003AAC  D088               	goto	l268
 19036  003AAE                     
 19037                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 19038                           
 19039                           ; BSR set to: 0
 19040  003AAE  0EA4               	movlw	low _device_dsc
 19041  003AB0  0100               	movlb	0	; () banked
 19042  003AB2  6F66               	movwf	_inPipes& (0+255),b
 19043  003AB4  0E8F               	movlw	high _device_dsc
 19044  003AB6  6F67               	movwf	(_inPipes+1)& (0+255),b
 19045                           
 19046                           ; BSR set to: 0
 19047                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 19048  003AB8  0E00               	movlw	0
 19049  003ABA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19050  003ABC  0E12               	movlw	18
 19051  003ABE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19052                           
 19053                           ;usb_device.c: 2060: break;
 19054  003AC0  0012               	return	
 19055  003AC2                     
 19056                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 19057                           
 19058                           ; BSR set to: 0
 19059  003AC2  010D               	movlb	13	; () banked
 19060  003AC4  5132               	movf	50,w,b	;volatile
 19061  003AC6  A4D8               	btfss	status,2,c
 19062  003AC8  D043               	goto	l272
 19063                           
 19064                           ; BSR set to: 13
 19065                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 19066  003ACA  5132               	movf	50,w,b	;volatile
 19067  003ACC  0D02               	mullw	2
 19068  003ACE  0EA5               	movlw	low _USB_CD_Ptr
 19069  003AD0  24F3               	addwf	prodl,w,c
 19070  003AD2  6EF6               	movwf	tblptrl,c
 19071  003AD4  0E8E               	movlw	high _USB_CD_Ptr
 19072  003AD6  20F4               	addwfc	prodh,w,c
 19073  003AD8  6EF7               	movwf	tblptrh,c
 19074  003ADA                     	if	1	;There are 3 active tblptr bytes
 19075  003ADA  6AF8               	clrf	tblptru,c
 19076  003ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 19077  003ADE  22F8               	addwfc	tblptru,f,c
 19078  003AE0                     	endif
 19079  003AE0  0009               	tblrd		*+
 19080  003AE2  CFF5 F066          	movff	tablat,_inPipes
 19081  003AE6  000A               	tblrd		*-
 19082  003AE8  CFF5 F067          	movff	tablat,_inPipes+1
 19083                           
 19084                           ; BSR set to: 13
 19085                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 19086  003AEC  0E02               	movlw	2
 19087  003AEE  0100               	movlb	0	; () banked
 19088  003AF0  2566               	addwf	_inPipes& (0+255),w,b
 19089  003AF2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19090  003AF4  0E00               	movlw	0
 19091  003AF6  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 19092  003AF8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19093  003AFA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19094  003AFE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19095  003B02  6AF8               	clrf	tblptru,c
 19096  003B04  0E0E               	movlw	(high __ramtop+-1)
 19097  003B06  64F7               	cpfsgt	tblptrh,c
 19098  003B08  D003               	bra	u7857
 19099  003B0A  0008               	tblrd		*
 19100  003B0C  50F5               	movf	tablat,w,c
 19101  003B0E  D005               	bra	u7850
 19102  003B10                     u7857:
 19103  003B10  CFF6 FFE9          	movff	tblptrl,fsr0l
 19104  003B14  CFF7 FFEA          	movff	tblptrh,fsr0h
 19105  003B18  50EF               	movf	indf0,w,c
 19106  003B1A                     u7850:
 19107  003B1A  0100               	movlb	0	; () banked
 19108  003B1C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19109                           
 19110                           ; BSR set to: 0
 19111                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 19112  003B1E  0E03               	movlw	3
 19113  003B20  2566               	addwf	_inPipes& (0+255),w,b
 19114  003B22  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19115  003B24  0E00               	movlw	0
 19116  003B26  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 19117  003B28  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19118  003B2A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19119  003B2E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19120  003B32  6AF8               	clrf	tblptru,c
 19121  003B34  0E0E               	movlw	(high __ramtop+-1)
 19122  003B36  64F7               	cpfsgt	tblptrh,c
 19123  003B38  D003               	bra	u7867
 19124  003B3A  0008               	tblrd		*
 19125  003B3C  50F5               	movf	tablat,w,c
 19126  003B3E  D005               	bra	u7860
 19127  003B40                     u7867:
 19128  003B40  CFF6 FFE9          	movff	tblptrl,fsr0l
 19129  003B44  CFF7 FFEA          	movff	tblptrh,fsr0h
 19130  003B48  50EF               	movf	indf0,w,c
 19131  003B4A                     u7860:
 19132  003B4A  0100               	movlb	0	; () banked
 19133  003B4C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19134                           
 19135                           ;usb_device.c: 2078: }
 19136  003B4E  0012               	return	
 19137  003B50                     l272:
 19138                           
 19139                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 19140                           
 19141                           ; BSR set to: 0
 19142  003B50  0E00               	movlw	0
 19143  003B52  0100               	movlb	0	; () banked
 19144  003B54  6F69               	movwf	(_inPipes+3)& (0+255),b
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 19148  003B56  0012               	return	
 19149  003B58                     
 19150                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 19151                           
 19152                           ; BSR set to: 0
 19153  003B58  0E04               	movlw	4
 19154  003B5A  010D               	movlb	13	; () banked
 19155  003B5C  6132               	cpfslt	50,b	;volatile
 19156  003B5E  D027               	goto	l275
 19157                           
 19158                           ; BSR set to: 13
 19159                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 19160  003B60  5132               	movf	50,w,b	;volatile
 19161  003B62  0D02               	mullw	2
 19162  003B64  0E7B               	movlw	low _USB_SD_Ptr
 19163  003B66  24F3               	addwf	prodl,w,c
 19164  003B68  6EF6               	movwf	tblptrl,c
 19165  003B6A  0E8E               	movlw	high _USB_SD_Ptr
 19166  003B6C  20F4               	addwfc	prodh,w,c
 19167  003B6E  6EF7               	movwf	tblptrh,c
 19168  003B70                     	if	1	;There are 3 active tblptr bytes
 19169  003B70  6AF8               	clrf	tblptru,c
 19170  003B72  0E00               	movlw	low (__mediumconst shr (0+16))
 19171  003B74  22F8               	addwfc	tblptru,f,c
 19172  003B76                     	endif
 19173  003B76  0009               	tblrd		*+
 19174  003B78  CFF5 F066          	movff	tablat,_inPipes
 19175  003B7C  000A               	tblrd		*-
 19176  003B7E  CFF5 F067          	movff	tablat,_inPipes+1
 19177                           
 19178                           ; BSR set to: 13
 19179                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 19180  003B82  C066  FFF6         	movff	_inPipes,tblptrl
 19181  003B86  C067  FFF7         	movff	_inPipes+1,tblptrh
 19182  003B8A  6AF8               	clrf	tblptru,c
 19183  003B8C  0E0E               	movlw	(high __ramtop+-1)
 19184  003B8E  64F7               	cpfsgt	tblptrh,c
 19185  003B90  D003               	bra	u7887
 19186  003B92  0008               	tblrd		*
 19187  003B94  50F5               	movf	tablat,w,c
 19188  003B96  D005               	bra	u7880
 19189  003B98                     u7887:
 19190  003B98  CFF6 FFE9          	movff	tblptrl,fsr0l
 19191  003B9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19192  003BA0  50EF               	movf	indf0,w,c
 19193  003BA2                     u7880:
 19194  003BA2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19195  003BA4  5001               	movf	??_USBStdGetDscHandler,w,c
 19196  003BA6  0100               	movlb	0	; () banked
 19197  003BA8  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19198  003BAA  6B6B               	clrf	(_inPipes+5)& (0+255),b
 19199                           
 19200                           ;usb_device.c: 2094: }
 19201  003BAC  0012               	return	
 19202  003BAE                     l275:
 19203                           
 19204                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 19205                           
 19206                           ; BSR set to: 0
 19207  003BAE  0E00               	movlw	0
 19208  003BB0  0100               	movlb	0	; () banked
 19209  003BB2  6F69               	movwf	(_inPipes+3)& (0+255),b
 19210                           
 19211                           ; BSR set to: 0
 19212                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 19213  003BB4  0012               	return	
 19214  003BB6                     
 19215                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 19216                           
 19217                           ; BSR set to: 0
 19218  003BB6  0E00               	movlw	0
 19219  003BB8  0100               	movlb	0	; () banked
 19220  003BBA  6F69               	movwf	(_inPipes+3)& (0+255),b
 19221                           
 19222                           ; BSR set to: 0
 19223                           ;usb_device.c: 2112: }
 19224                           
 19225                           ;usb_device.c: 2111: break;
 19226  003BBC  0012               	return	
 19227  003BBE                     l268:
 19228                           
 19229                           ; BSR set to: 0
 19230                           
 19231                           ; BSR set to: 0
 19232  003BBE  010D               	movlb	13	; () banked
 19233  003BC0  5133               	movf	51,w,b	;volatile
 19234                           
 19235                           ; Switch size 1, requested type "space"
 19236                           ; Number of cases is 3, Range of values is 1 to 3
 19237                           ; switch strategies available:
 19238                           ; Name         Instructions Cycles
 19239                           ; simple_byte           10     6 (average)
 19240                           ;	Chosen strategy is simple_byte
 19241  003BC2  0A01               	xorlw	1	; case 1
 19242  003BC4  B4D8               	btfsc	status,2,c
 19243  003BC6  D773               	goto	l269
 19244  003BC8  0A03               	xorlw	3	; case 2
 19245  003BCA  B4D8               	btfsc	status,2,c
 19246  003BCC  D77A               	goto	l271
 19247  003BCE  0A01               	xorlw	1	; case 3
 19248  003BD0  B4D8               	btfsc	status,2,c
 19249  003BD2  D7C2               	goto	l274
 19250  003BD4  D7F0               	goto	l277
 19251  003BD6                     __end_of_USBStdGetDscHandler:
 19252                           	opt stack 0
 19253                           tblptru	equ	0xFF8
 19254                           tblptrh	equ	0xFF7
 19255                           tblptrl	equ	0xFF6
 19256                           tablat	equ	0xFF5
 19257                           prodh	equ	0xFF4
 19258                           prodl	equ	0xFF3
 19259                           intcon	equ	0xFF2
 19260                           intcon2	equ	0xFF1
 19261                           intcon3	equ	0xFF0
 19262                           indf0	equ	0xFEF
 19263                           postinc0	equ	0xFEE
 19264                           fsr0h	equ	0xFEA
 19265                           fsr0l	equ	0xFE9
 19266                           wreg	equ	0xFE8
 19267                           indf1	equ	0xFE7
 19268                           postdec1	equ	0xFE5
 19269                           plusw1	equ	0xFE3
 19270                           fsr1h	equ	0xFE2
 19271                           fsr1l	equ	0xFE1
 19272                           indf2	equ	0xFDF
 19273                           postinc2	equ	0xFDE
 19274                           postdec2	equ	0xFDD
 19275                           plusw2	equ	0xFDB
 19276                           fsr2h	equ	0xFDA
 19277                           fsr2l	equ	0xFD9
 19278                           status	equ	0xFD8
 19279                           
 19280 ;; *************** function _USBStdFeatureReqHandler *****************
 19281 ;; Defined at:
 19282 ;;		line 2756 in file "usb_device.c"
 19283 ;; Parameters:    Size  Location     Type
 19284 ;;		None
 19285 ;; Auto vars:     Size  Location     Type
 19286 ;;  p               2   27[COMRAM] PTR struct __BDT
 19287 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 19288 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 19289 ;;		 -> UEP0(1), 
 19290 ;;  current_ep_d    1   26[COMRAM] struct .
 19291 ;; Return value:  Size  Location     Type
 19292 ;;                  1    wreg      void 
 19293 ;; Registers used:
 19294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19295 ;; Tracked objects:
 19296 ;;		On entry : 0/0
 19297 ;;		On exit  : 0/0
 19298 ;;		Unchanged: 0/0
 19299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19301 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19303 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19304 ;;Total ram usage:        6 bytes
 19305 ;; Hardware stack levels used:    1
 19306 ;; Hardware stack levels required when called:    4
 19307 ;; This function calls:
 19308 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19309 ;; This function is called by:
 19310 ;;		_USBCheckStdRequest
 19311 ;; This function uses a non-reentrant model
 19312 ;;
 19313                           
 19314                           	psect	text89
 19315  0017B4                     __ptext89:
 19316                           	opt stack 0
 19317  0017B4                     _USBStdFeatureReqHandler:
 19318                           	opt stack 22
 19319                           
 19320                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 19321                           
 19322                           ;incstack = 0
 19323  0017B4  010D               	movlb	13	; () banked
 19324  0017B6  0532               	decf	50,w,b	;volatile
 19325  0017B8  A4D8               	btfss	status,2,c
 19326  0017BA  D011               	goto	l361
 19327                           
 19328                           ; BSR set to: 13
 19329  0017BC  5130               	movf	48,w,b	;volatile
 19330  0017BE  0B1F               	andlw	31
 19331  0017C0  0900               	iorlw	0
 19332  0017C2  A4D8               	btfss	status,2,c
 19333  0017C4  D00C               	goto	l361
 19334                           
 19335                           ; BSR set to: 13
 19336                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 19337  0017C6  0100               	movlb	0	; () banked
 19338  0017C8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19339                           
 19340                           ; BSR set to: 0
 19341                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 19342  0017CA  0E03               	movlw	3
 19343  0017CC  010D               	movlb	13	; () banked
 19344  0017CE  1931               	xorwf	49,w,b	;volatile
 19345  0017D0  A4D8               	btfss	status,2,c
 19346  0017D2  D002               	goto	l360
 19347                           
 19348                           ; BSR set to: 13
 19349                           ;usb_device.c: 2806: RemoteWakeup = 1;
 19350  0017D4  0E01               	movlw	1
 19351  0017D6  D001               	goto	L7
 19352  0017D8                     l360:
 19353                           
 19354                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 19355                           
 19356                           ; BSR set to: 0
 19357  0017D8  0E00               	movlw	0
 19358  0017DA                     L7:
 19359  0017DA  0100               	movlb	0	; () banked
 19360  0017DC  6FAD               	movwf	_RemoteWakeup& (0+255),b
 19361  0017DE                     l361:
 19362                           
 19363                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 19364                           
 19365                           ; BSR set to: 0
 19366  0017DE  010D               	movlb	13	; () banked
 19367  0017E0  5132               	movf	50,w,b	;volatile
 19368  0017E2  A4D8               	btfss	status,2,c
 19369  0017E4  0012               	return	
 19370                           
 19371                           ; BSR set to: 13
 19372  0017E6  5130               	movf	48,w,b	;volatile
 19373  0017E8  0B1F               	andlw	31
 19374  0017EA  0A02               	xorlw	2
 19375  0017EC  A4D8               	btfss	status,2,c
 19376  0017EE  0012               	return	
 19377                           
 19378                           ; BSR set to: 13
 19379  0017F0  5134               	movf	52,w,b	;volatile
 19380  0017F2  0B0F               	andlw	15
 19381  0017F4  0900               	iorlw	0
 19382  0017F6  B4D8               	btfsc	status,2,c
 19383  0017F8  0012               	return	
 19384                           
 19385                           ; BSR set to: 13
 19386  0017FA  5134               	movf	52,w,b	;volatile
 19387  0017FC  0B0F               	andlw	15
 19388  0017FE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19389  001800  0E03               	movlw	3
 19390  001802  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 19391  001804  0012               	return	
 19392                           
 19393                           ; BSR set to: 13
 19394  001806  0E20               	movlw	32
 19395  001808  0100               	movlb	0	; () banked
 19396  00180A  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 19397  00180C  A4D8               	btfss	status,2,c
 19398  00180E  0012               	return	
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 19402  001810  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19403                           
 19404                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 19405  001812  010D               	movlb	13	; () banked
 19406  001814  BF34               	btfsc	52,7,b	;volatile
 19407  001816  D019               	goto	l363
 19408                           
 19409                           ; BSR set to: 13
 19410                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19411  001818  5134               	movf	52,w,b	;volatile
 19412  00181A  0B0F               	andlw	15
 19413  00181C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19414  00181E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19415  001820  0D02               	mullw	2
 19416  001822  0E72               	movlw	low _pBDTEntryOut
 19417  001824  24F3               	addwf	prodl,w,c
 19418  001826  6ED9               	movwf	fsr2l,c
 19419  001828  0E00               	movlw	high _pBDTEntryOut
 19420  00182A  20F4               	addwfc	prodh,w,c
 19421  00182C  6EDA               	movwf	fsr2h,c
 19422  00182E  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19423  001832  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19424                           
 19425                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19426  001836  5134               	movf	52,w,b	;volatile
 19427  001838  0B0F               	andlw	15
 19428  00183A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19429  00183C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19430  00183E  0D01               	mullw	1
 19431  001840  0E5E               	movlw	low _ep_data_out
 19432  001842  24F3               	addwf	prodl,w,c
 19433  001844  6ED9               	movwf	fsr2l,c
 19434  001846  0E01               	movlw	high _ep_data_out
 19435  001848  D018               	goto	L8
 19436  00184A                     l363:
 19437                           
 19438                           ; BSR set to: 13
 19439                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 19440                           
 19441                           ; BSR set to: 13
 19442  00184A  5134               	movf	52,w,b	;volatile
 19443  00184C  0B0F               	andlw	15
 19444  00184E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19445  001850  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19446  001852  0D02               	mullw	2
 19447  001854  0E6C               	movlw	low _pBDTEntryIn
 19448  001856  24F3               	addwf	prodl,w,c
 19449  001858  6ED9               	movwf	fsr2l,c
 19450  00185A  0E00               	movlw	high _pBDTEntryIn
 19451  00185C  20F4               	addwfc	prodh,w,c
 19452  00185E  6EDA               	movwf	fsr2h,c
 19453  001860  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19454  001864  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19455                           
 19456                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19457  001868  5134               	movf	52,w,b	;volatile
 19458  00186A  0B0F               	andlw	15
 19459  00186C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19460  00186E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19461  001870  0D01               	mullw	1
 19462  001872  0E61               	movlw	low _ep_data_in
 19463  001874  24F3               	addwf	prodl,w,c
 19464  001876  6ED9               	movwf	fsr2l,c
 19465  001878  0E01               	movlw	high _ep_data_in
 19466  00187A                     L8:
 19467  00187A  20F4               	addwfc	prodh,w,c
 19468  00187C  6EDA               	movwf	fsr2h,c
 19469  00187E  50DF               	movf	indf2,w,c
 19470  001880  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19471                           
 19472                           ; BSR set to: 13
 19473                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 19474                           
 19475                           ; BSR set to: 13
 19476  001882  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19477  001884  D006               	goto	l365
 19478                           
 19479                           ; BSR set to: 13
 19480                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19481  001886  0EFB               	movlw	251
 19482  001888  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 19483  00188A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19484  00188C  0EFF               	movlw	255
 19485  00188E  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19486  001890  D004               	goto	L9
 19487  001892                     l365:
 19488                           
 19489                           ; BSR set to: 13
 19490                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 19491                           
 19492                           ; BSR set to: 13
 19493  001892  0E04               	movlw	4
 19494  001894  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 19495  001896  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19496  001898  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19497  00189A                     L9:
 19498  00189A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19499                           
 19500                           ; BSR set to: 13
 19501                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 19502                           
 19503                           ; BSR set to: 13
 19504  00189C  BF34               	btfsc	52,7,b	;volatile
 19505  00189E  D00A               	goto	l367
 19506                           
 19507                           ; BSR set to: 13
 19508                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 19509  0018A0  5134               	movf	52,w,b	;volatile
 19510  0018A2  0B0F               	andlw	15
 19511  0018A4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19512  0018A6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19513  0018A8  0D02               	mullw	2
 19514  0018AA  0E72               	movlw	low _pBDTEntryOut
 19515  0018AC  24F3               	addwf	prodl,w,c
 19516  0018AE  6ED9               	movwf	fsr2l,c
 19517  0018B0  0E00               	movlw	high _pBDTEntryOut
 19518  0018B2  D009               	goto	L10
 19519  0018B4                     l367:
 19520                           
 19521                           ; BSR set to: 13
 19522                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 19523                           
 19524                           ; BSR set to: 13
 19525  0018B4  5134               	movf	52,w,b	;volatile
 19526  0018B6  0B0F               	andlw	15
 19527  0018B8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19528  0018BA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19529  0018BC  0D02               	mullw	2
 19530  0018BE  0E6C               	movlw	low _pBDTEntryIn
 19531  0018C0  24F3               	addwf	prodl,w,c
 19532  0018C2  6ED9               	movwf	fsr2l,c
 19533  0018C4  0E00               	movlw	high _pBDTEntryIn
 19534  0018C6                     L10:
 19535  0018C6  20F4               	addwfc	prodh,w,c
 19536  0018C8  6EDA               	movwf	fsr2h,c
 19537  0018CA  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19538  0018CE  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19539                           
 19540                           ; BSR set to: 13
 19541                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 19542                           
 19543                           ; BSR set to: 13
 19544  0018D2  0E03               	movlw	3
 19545  0018D4  1931               	xorwf	49,w,b	;volatile
 19546  0018D6  A4D8               	btfss	status,2,c
 19547  0018D8  D02D               	goto	l369
 19548                           
 19549                           ; BSR set to: 13
 19550                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 19551  0018DA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19552  0018DE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19553  0018E2  AEDF               	btfss	indf2,7,c
 19554  0018E4  D01A               	goto	l372
 19555                           
 19556                           ; BSR set to: 13
 19557                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 19558  0018E6  BF34               	btfsc	52,7,b	;volatile
 19559  0018E8  D00A               	goto	l371
 19560                           
 19561                           ; BSR set to: 13
 19562                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 19563  0018EA  5134               	movf	52,w,b	;volatile
 19564  0018EC  0B0F               	andlw	15
 19565  0018EE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19566  0018F0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19567  0018F2  0D01               	mullw	1
 19568  0018F4  0E5E               	movlw	low _ep_data_out
 19569  0018F6  24F3               	addwf	prodl,w,c
 19570  0018F8  6ED9               	movwf	fsr2l,c
 19571  0018FA  0E01               	movlw	high _ep_data_out
 19572  0018FC  D00A               	goto	L11
 19573  0018FE                     l371:
 19574                           
 19575                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 19576                           
 19577                           ; BSR set to: 1
 19578  0018FE  010D               	movlb	13	; () banked
 19579  001900  5134               	movf	52,w,b	;volatile
 19580  001902  0B0F               	andlw	15
 19581  001904  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19582  001906  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19583  001908  0D01               	mullw	1
 19584  00190A  0E61               	movlw	low _ep_data_in
 19585  00190C  24F3               	addwf	prodl,w,c
 19586  00190E  6ED9               	movwf	fsr2l,c
 19587  001910  0E01               	movlw	high _ep_data_in
 19588  001912                     L11:
 19589  001912  20F4               	addwfc	prodh,w,c
 19590  001914  6EDA               	movwf	fsr2h,c
 19591  001916  0101               	movlb	1	; () banked
 19592  001918  82DF               	bsf	indf2,1,c
 19593  00191A                     l372:
 19594                           
 19595                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 19596                           
 19597                           ; BSR set to: 1
 19598                           
 19599                           ; BSR set to: 1
 19600  00191A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19601  00191E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19602  001922  0E00               	movlw	0
 19603  001924  84DB               	bsf	plusw2,2,c
 19604                           
 19605                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 19606  001926  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19607  00192A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19608  00192E  0E00               	movlw	0
 19609  001930  8EDB               	bsf	plusw2,7,c
 19610                           
 19611                           ;usb_device.c: 2878: }
 19612  001932  0012               	return	
 19613  001934                     l369:
 19614                           
 19615                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 19616  001934  0E04               	movlw	4
 19617  001936  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19618  001938  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19619  00193A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19620  00193C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19621                           
 19622                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 19623  00193E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19624  001942  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19625  001946  AEDF               	btfss	indf2,7,c
 19626  001948  D01B               	goto	l374
 19627                           
 19628                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 19629  00194A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19630  00194E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19631  001952  0E7F               	movlw	127
 19632  001954  16DF               	andwf	indf2,f,c
 19633                           
 19634                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 19635  001956  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19636  00195A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19637  00195E  0E00               	movlw	0
 19638  001960  8CDB               	bsf	plusw2,6,c
 19639                           
 19640                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19641  001962  0E00               	movlw	0
 19642  001964  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19643  001966  0E05               	movlw	5
 19644  001968  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19645  00196A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19646  00196E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19647  001972  0E00               	movlw	0
 19648  001974  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19649  001976  0E02               	movlw	2
 19650  001978  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19651  00197A  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19652                           
 19653                           ;usb_device.c: 2893: }
 19654  00197E  D006               	goto	l375
 19655  001980                     l374:
 19656                           
 19657                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 19658  001980  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19659  001984  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19660  001988  0E00               	movlw	0
 19661  00198A  8CDB               	bsf	plusw2,6,c
 19662  00198C                     l375:
 19663                           
 19664                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19665  00198C  0E04               	movlw	4
 19666  00198E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19667  001990  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19668  001992  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19669  001994  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19670                           
 19671                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 19672  001996  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 19673  001998  D006               	goto	u8100
 19674  00199A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19675  00199E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19676  0019A2  AEDF               	btfss	indf2,7,c
 19677  0019A4  D030               	goto	l376
 19678  0019A6                     u8100:
 19679                           
 19680                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 19681  0019A6  010D               	movlb	13	; () banked
 19682  0019A8  BF34               	btfsc	52,7,b	;volatile
 19683  0019AA  D00A               	goto	l379
 19684                           
 19685                           ; BSR set to: 13
 19686                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 19687  0019AC  5134               	movf	52,w,b	;volatile
 19688  0019AE  0B0F               	andlw	15
 19689  0019B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19690  0019B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19691  0019B4  0D01               	mullw	1
 19692  0019B6  0E5E               	movlw	low _ep_data_out
 19693  0019B8  24F3               	addwf	prodl,w,c
 19694  0019BA  6ED9               	movwf	fsr2l,c
 19695  0019BC  0E01               	movlw	high _ep_data_out
 19696  0019BE  D00A               	goto	L12
 19697  0019C0                     l379:
 19698                           
 19699                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 19700                           
 19701                           ; BSR set to: 1
 19702  0019C0  010D               	movlb	13	; () banked
 19703  0019C2  5134               	movf	52,w,b	;volatile
 19704  0019C4  0B0F               	andlw	15
 19705  0019C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19706  0019C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19707  0019CA  0D01               	mullw	1
 19708  0019CC  0E61               	movlw	low _ep_data_in
 19709  0019CE  24F3               	addwf	prodl,w,c
 19710  0019D0  6ED9               	movwf	fsr2l,c
 19711  0019D2  0E01               	movlw	high _ep_data_in
 19712  0019D4                     L12:
 19713  0019D4  20F4               	addwfc	prodh,w,c
 19714  0019D6  6EDA               	movwf	fsr2h,c
 19715  0019D8  0101               	movlb	1	; () banked
 19716  0019DA  92DF               	bcf	indf2,1,c
 19717                           
 19718                           ; BSR set to: 1
 19719                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19720                           
 19721                           ; BSR set to: 1
 19722  0019DC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19723  0019E0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19724  0019E4  0E3B               	movlw	59
 19725  0019E6  16DF               	andwf	indf2,f,c
 19726                           
 19727                           ; BSR set to: 1
 19728                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19729  0019E8  0E00               	movlw	0
 19730  0019EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19731  0019EC  0E05               	movlw	5
 19732  0019EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19733  0019F0  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19734  0019F4  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19735  0019F8  0E00               	movlw	0
 19736  0019FA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19737  0019FC  0E02               	movlw	2
 19738  0019FE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19739  001A00  ECEE  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19740                           
 19741                           ;usb_device.c: 2923: }
 19742  001A04  D006               	goto	l381
 19743  001A06                     l376:
 19744                           
 19745                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 19746  001A06  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19747  001A0A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19748  001A0E  0E3B               	movlw	59
 19749  001A10  16DF               	andwf	indf2,f,c
 19750  001A12                     l381:
 19751                           
 19752                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 19753  001A12  010D               	movlb	13	; () banked
 19754  001A14  5134               	movf	52,w,b	;volatile
 19755  001A16  0B0F               	andlw	15
 19756  001A18  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19757  001A1A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19758  001A1C  0D01               	mullw	1
 19759  001A1E  0E26               	movlw	38
 19760  001A20  24F3               	addwf	prodl,w,c
 19761  001A22  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 19762  001A24  0E0F               	movlw	15
 19763  001A26  20F4               	addwfc	prodh,w,c
 19764  001A28  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 19765                           
 19766                           ; BSR set to: 13
 19767                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 19768  001A2A  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 19769  001A2E  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 19770  001A32  0EFE               	movlw	254
 19771  001A34  16DF               	andwf	indf2,f,c
 19772                           
 19773                           ; BSR set to: 13
 19774  001A36  0012               	return	
 19775  001A38                     __end_of_USBStdFeatureReqHandler:
 19776                           	opt stack 0
 19777                           tblptru	equ	0xFF8
 19778                           tblptrh	equ	0xFF7
 19779                           tblptrl	equ	0xFF6
 19780                           tablat	equ	0xFF5
 19781                           prodh	equ	0xFF4
 19782                           prodl	equ	0xFF3
 19783                           intcon	equ	0xFF2
 19784                           intcon2	equ	0xFF1
 19785                           intcon3	equ	0xFF0
 19786                           indf0	equ	0xFEF
 19787                           postinc0	equ	0xFEE
 19788                           fsr0h	equ	0xFEA
 19789                           fsr0l	equ	0xFE9
 19790                           wreg	equ	0xFE8
 19791                           indf1	equ	0xFE7
 19792                           postdec1	equ	0xFE5
 19793                           plusw1	equ	0xFE3
 19794                           fsr1h	equ	0xFE2
 19795                           fsr1l	equ	0xFE1
 19796                           indf2	equ	0xFDF
 19797                           postinc2	equ	0xFDE
 19798                           postdec2	equ	0xFDD
 19799                           plusw2	equ	0xFDB
 19800                           fsr2h	equ	0xFDA
 19801                           fsr2l	equ	0xFD9
 19802                           status	equ	0xFD8
 19803                           
 19804 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 19805 ;; Defined at:
 19806 ;;		line 54 in file "usb_events.c"
 19807 ;; Parameters:    Size  Location     Type
 19808 ;;  event           2   15[COMRAM] enum E6832
 19809 ;;  pdata           2   17[COMRAM] PTR void 
 19810 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 19811 ;;		 -> BDT(48), 
 19812 ;;  size            2   19[COMRAM] unsigned int 
 19813 ;; Auto vars:     Size  Location     Type
 19814 ;;		None
 19815 ;; Return value:  Size  Location     Type
 19816 ;;                  1    wreg      unsigned char 
 19817 ;; Registers used:
 19818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19819 ;; Tracked objects:
 19820 ;;		On entry : 0/0
 19821 ;;		On exit  : 0/0
 19822 ;;		Unchanged: 0/0
 19823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19824 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19827 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19828 ;;Total ram usage:        8 bytes
 19829 ;; Hardware stack levels used:    1
 19830 ;; Hardware stack levels required when called:    3
 19831 ;; This function calls:
 19832 ;;		_APP_DeviceCustomHIDInitialize
 19833 ;;		_APP_DeviceMSDInitialize
 19834 ;;		_MSDTransferTerminated
 19835 ;;		_SYSTEM_Initialize
 19836 ;;		_USBCheckHIDRequest
 19837 ;;		_USBCheckMSDRequest
 19838 ;; This function is called by:
 19839 ;;		_USBDeviceTasks
 19840 ;;		_USBStdSetCfgHandler
 19841 ;;		_USBSuspend
 19842 ;;		_USBWakeFromSuspend
 19843 ;;		_USBCtrlTrfSetupHandler
 19844 ;;		_USBCheckStdRequest
 19845 ;;		_USBStdFeatureReqHandler
 19846 ;; This function uses a non-reentrant model
 19847 ;;
 19848                           
 19849                           	psect	text90
 19850  0061DC                     __ptext90:
 19851                           	opt stack 0
 19852  0061DC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 19853                           	opt stack 26
 19854                           
 19855                           ;usb_events.c: 56: switch((int)event)
 19856                           
 19857                           ;incstack = 0
 19858  0061DC  D019               	goto	l800
 19859  0061DE                     
 19860                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 19861  0061DE  0E01               	movlw	1
 19862  0061E0  ECD9  F038         	call	_SYSTEM_Initialize
 19863                           
 19864                           ;usb_events.c: 79: break;
 19865  0061E4  0012               	return	
 19866  0061E6                     
 19867                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 19868  0061E6  0E02               	movlw	2
 19869  0061E8  ECD9  F038         	call	_SYSTEM_Initialize
 19870                           
 19871                           ;usb_events.c: 90: break;
 19872  0061EC  0012               	return	
 19873  0061EE                     
 19874                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 19875  0061EE  ECD4  F03B         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 19876                           
 19877                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 19878  0061F2  EC95  F03E         	call	_APP_DeviceMSDInitialize	;wreg free
 19879                           
 19880                           ;usb_events.c: 100: break;
 19881                           
 19882                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 19883                           
 19884                           ;usb_events.c: 97: break;
 19885  0061F6  0012               	return	
 19886  0061F8                     
 19887                           ;usb_events.c: 105: USBCheckHIDRequest();
 19888  0061F8  EC13  F024         	call	_USBCheckHIDRequest	;wreg free
 19889                           
 19890                           ;usb_events.c: 108: USBCheckMSDRequest();
 19891  0061FC  ECA1  F028         	call	_USBCheckMSDRequest	;wreg free
 19892                           
 19893                           ;usb_events.c: 112: break;
 19894                           
 19895                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 19896                           
 19897                           ;usb_events.c: 109: break;
 19898  006200  0012               	return	
 19899  006202                     
 19900                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 19901  006202  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 19902  006206  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 19903  00620A  EC58  F038         	call	_MSDTransferTerminated	;wreg free
 19904                           
 19905                           ;usb_events.c: 129: }
 19906                           
 19907                           ;usb_events.c: 128: break;
 19908                           
 19909                           ;usb_events.c: 127: default:
 19910                           
 19911                           ;usb_events.c: 125: break;
 19912  00620E  0012               	return	
 19913  006210                     l800:
 19914  006210  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 19915  006214  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 19916                           
 19917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19918                           ; Switch size 1, requested type "space"
 19919                           ; Number of cases is 2, Range of values is 0 to 127
 19920                           ; switch strategies available:
 19921                           ; Name         Instructions Cycles
 19922                           ; simple_byte            7     4 (average)
 19923                           ;	Chosen strategy is simple_byte
 19924  006218  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 19925  00621A  0A00               	xorlw	0	; case 0
 19926  00621C  B4D8               	btfsc	status,2,c
 19927  00621E  D004               	goto	l14958
 19928  006220  0A7F               	xorlw	127	; case 127
 19929  006222  A4D8               	btfss	status,2,c
 19930  006224  0012               	return	
 19931  006226  D01A               	goto	l14960
 19932  006228                     l14958:
 19933                           
 19934                           ; Switch size 1, requested type "space"
 19935                           ; Number of cases is 8, Range of values is 1 to 117
 19936                           ; switch strategies available:
 19937                           ; Name         Instructions Cycles
 19938                           ; simple_byte           25    13 (average)
 19939                           ;	Chosen strategy is simple_byte
 19940  006228  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19941  00622A  0A01               	xorlw	1	; case 1
 19942  00622C  B4D8               	btfsc	status,2,c
 19943  00622E  D7DF               	goto	l806
 19944  006230  0A03               	xorlw	3	; case 2
 19945  006232  B4D8               	btfsc	status,2,c
 19946  006234  0012               	return	
 19947  006236  0A01               	xorlw	1	; case 3
 19948  006238  B4D8               	btfsc	status,2,c
 19949  00623A  D7DE               	goto	l808
 19950  00623C  0A06               	xorlw	6	; case 5
 19951  00623E  B4D8               	btfsc	status,2,c
 19952  006240  D7E0               	goto	l810
 19953  006242  0A77               	xorlw	119	; case 114
 19954  006244  B4D8               	btfsc	status,2,c
 19955  006246  0012               	return	
 19956  006248  0A01               	xorlw	1	; case 115
 19957  00624A  B4D8               	btfsc	status,2,c
 19958  00624C  0012               	return	
 19959  00624E  0A07               	xorlw	7	; case 116
 19960  006250  B4D8               	btfsc	status,2,c
 19961  006252  D7C9               	goto	l805
 19962  006254  0A01               	xorlw	1	; case 117
 19963  006256  A4D8               	btfss	status,2,c
 19964  006258  0012               	return	
 19965  00625A  D7C1               	goto	l804
 19966  00625C                     l14960:
 19967                           
 19968                           ; Switch size 1, requested type "space"
 19969                           ; Number of cases is 1, Range of values is 255 to 255
 19970                           ; switch strategies available:
 19971                           ; Name         Instructions Cycles
 19972                           ; simple_byte            4     3 (average)
 19973                           ;	Chosen strategy is simple_byte
 19974  00625C  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19975  00625E  0AFF               	xorlw	255	; case 255
 19976  006260  0012               	return	
 19977  006262                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 19978                           	opt stack 0
 19979                           tblptru	equ	0xFF8
 19980                           tblptrh	equ	0xFF7
 19981                           tblptrl	equ	0xFF6
 19982                           tablat	equ	0xFF5
 19983                           prodh	equ	0xFF4
 19984                           prodl	equ	0xFF3
 19985                           intcon	equ	0xFF2
 19986                           intcon2	equ	0xFF1
 19987                           intcon3	equ	0xFF0
 19988                           indf0	equ	0xFEF
 19989                           postinc0	equ	0xFEE
 19990                           fsr0h	equ	0xFEA
 19991                           fsr0l	equ	0xFE9
 19992                           wreg	equ	0xFE8
 19993                           indf1	equ	0xFE7
 19994                           postdec1	equ	0xFE5
 19995                           plusw1	equ	0xFE3
 19996                           fsr1h	equ	0xFE2
 19997                           fsr1l	equ	0xFE1
 19998                           indf2	equ	0xFDF
 19999                           postinc2	equ	0xFDE
 20000                           postdec2	equ	0xFDD
 20001                           plusw2	equ	0xFDB
 20002                           fsr2h	equ	0xFDA
 20003                           fsr2l	equ	0xFD9
 20004                           status	equ	0xFD8
 20005                           
 20006 ;; *************** function _USBCheckMSDRequest *****************
 20007 ;; Defined at:
 20008 ;;		line 218 in file "usb_device_msd.c"
 20009 ;; Parameters:    Size  Location     Type
 20010 ;;		None
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;		None
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1    wreg      void 
 20015 ;; Registers used:
 20016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20023 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20026 ;;Total ram usage:        4 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:    1
 20029 ;; This function calls:
 20030 ;;		_USBTransferOnePacket
 20031 ;; This function is called by:
 20032 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text91
 20037  005142                     __ptext91:
 20038                           	opt stack 0
 20039  005142                     _USBCheckMSDRequest:
 20040                           	opt stack 27
 20041                           
 20042                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 20043                           
 20044                           ;incstack = 0
 20045  005142  010D               	movlb	13	; () banked
 20046  005144  5130               	movf	48,w,b	;volatile
 20047  005146  0B1F               	andlw	31
 20048  005148  06E8               	decf	wreg,f,c
 20049  00514A  A4D8               	btfss	status,2,c
 20050  00514C  0012               	return	
 20051                           
 20052                           ; BSR set to: 13
 20053                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 20054                           
 20055                           ; BSR set to: 13
 20056                           
 20057                           ; BSR set to: 13
 20058                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 20059  00514E  5134               	movf	52,w,b	;volatile
 20060  005150  A4D8               	btfss	status,2,c
 20061  005152  0012               	return	
 20062  005154  D04E               	goto	l529
 20063  005156                     
 20064                           ; BSR set to: 13
 20065                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 20066                           
 20067                           ; BSR set to: 13
 20068  005156  5132               	movf	50,w,b	;volatile
 20069  005158  1133               	iorwf	51,w,b	;volatile
 20070  00515A  A4D8               	btfss	status,2,c
 20071  00515C  0012               	return	
 20072                           
 20073                           ; BSR set to: 13
 20074  00515E  5136               	movf	54,w,b	;volatile
 20075  005160  1137               	iorwf	55,w,b	;volatile
 20076  005162  A4D8               	btfss	status,2,c
 20077  005164  0012               	return	
 20078                           
 20079                           ; BSR set to: 13
 20080                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 20081                           
 20082                           ; BSR set to: 13
 20083                           
 20084                           ; BSR set to: 13
 20085                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 20086  005166  0E00               	movlw	0
 20087  005168  0100               	movlb	0	; () banked
 20088  00516A  6FA2               	movwf	_MSD_State& (0+255),b
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 20092  00516C  69A1               	setf	_MSDCommandState& (0+255),b
 20093                           
 20094                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 20095  00516E  0E00               	movlw	0
 20096  005170  6FA0               	movwf	_MSDReadState& (0+255),b
 20097                           
 20098                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 20099  005172  0E00               	movlw	0
 20100  005174  6F9F               	movwf	_MSDWriteState& (0+255),b
 20101                           
 20102                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 20103  005176  0E01               	movlw	1
 20104  005178  6F9A               	movwf	_MSDCBWValid& (0+255),b
 20105                           
 20106                           ; BSR set to: 0
 20107                           
 20108                           ; BSR set to: 0
 20109                           
 20110                           ; BSR set to: 0
 20111                           
 20112                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 20113  00517A  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 20114  00517E  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 20115                           
 20116                           ; BSR set to: 0
 20117  005182  500C               	movf	_USBCheckMSDRequest$2319,w,c
 20118  005184  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 20119  005186  B4D8               	btfsc	status,2,c
 20120  005188  D00A               	goto	u6520
 20121                           
 20122                           ; BSR set to: 0
 20123                           
 20124                           ; BSR set to: 0
 20125                           
 20126                           ; BSR set to: 0
 20127                           
 20128                           ; BSR set to: 0
 20129  00518A  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 20130  00518E  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 20131                           
 20132                           ; BSR set to: 0
 20133                           
 20134                           ; BSR set to: 0
 20135  005192  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 20136  005196  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 20137  00519A  BEDF               	btfsc	indf2,7,c
 20138  00519C  D00F               	goto	l534
 20139  00519E                     u6520:
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 20143                           
 20144                           ; BSR set to: 0
 20145  00519E  0E00               	movlw	0
 20146  0051A0  6E01               	movwf	USBTransferOnePacket@dir,c
 20147  0051A2  0E40               	movlw	64
 20148  0051A4  6E02               	movwf	USBTransferOnePacket@data,c
 20149  0051A6  0E0D               	movlw	13
 20150  0051A8  6E03               	movwf	USBTransferOnePacket@data+1,c
 20151  0051AA  0E40               	movlw	64
 20152  0051AC  6E04               	movwf	USBTransferOnePacket@len,c
 20153  0051AE  0E02               	movlw	2
 20154  0051B0  ECB0  F021         	call	_USBTransferOnePacket
 20155  0051B4  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20156  0051B8  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20157  0051BC                     l534:
 20158                           
 20159                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 20160  0051BC  0E80               	movlw	128
 20161  0051BE  0100               	movlb	0	; () banked
 20162  0051C0  6F69               	movwf	(_inPipes+3)& (0+255),b
 20163                           
 20164                           ;usb_device_msd.c: 263: break;
 20165  0051C2  0012               	return	
 20166  0051C4                     
 20167                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 20168                           
 20169                           ; BSR set to: 0
 20170  0051C4  010D               	movlb	13	; () banked
 20171  0051C6  5132               	movf	50,w,b	;volatile
 20172  0051C8  1133               	iorwf	51,w,b	;volatile
 20173  0051CA  A4D8               	btfss	status,2,c
 20174  0051CC  0012               	return	
 20175                           
 20176                           ; BSR set to: 13
 20177  0051CE  0536               	decf	54,w,b	;volatile
 20178  0051D0  1137               	iorwf	55,w,b	;volatile
 20179  0051D2  A4D8               	btfss	status,2,c
 20180  0051D4  0012               	return	
 20181                           
 20182                           ; BSR set to: 13
 20183                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 20184                           
 20185                           ; BSR set to: 13
 20186                           
 20187                           ; BSR set to: 13
 20188                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 20189  0051D6  0E00               	movlw	0
 20190  0051D8  6F38               	movwf	56,b	;volatile
 20191                           
 20192                           ; BSR set to: 13
 20193                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20194  0051DA  0E38               	movlw	56
 20195  0051DC  0100               	movlb	0	; () banked
 20196  0051DE  6F66               	movwf	_inPipes& (0+255),b
 20197  0051E0  0E0D               	movlw	13
 20198  0051E2  6F67               	movwf	(_inPipes+1)& (0+255),b
 20199                           
 20200                           ; BSR set to: 0
 20201  0051E4  0E00               	movlw	0
 20202  0051E6  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20203  0051E8  0E01               	movlw	1
 20204  0051EA  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20205                           
 20206                           ; BSR set to: 0
 20207  0051EC  0EC1               	movlw	193
 20208  0051EE  6F69               	movwf	(_inPipes+3)& (0+255),b
 20209                           
 20210                           ; BSR set to: 0
 20211                           ;usb_device_msd.c: 278: }
 20212                           
 20213                           ;usb_device_msd.c: 277: break;
 20214  0051F0  0012               	return	
 20215  0051F2                     l529:
 20216                           
 20217                           ; BSR set to: 0
 20218  0051F2  010D               	movlb	13	; () banked
 20219  0051F4  5131               	movf	49,w,b	;volatile
 20220                           
 20221                           ; Switch size 1, requested type "space"
 20222                           ; Number of cases is 2, Range of values is 254 to 255
 20223                           ; switch strategies available:
 20224                           ; Name         Instructions Cycles
 20225                           ; simple_byte            7     4 (average)
 20226                           ;	Chosen strategy is simple_byte
 20227  0051F6  0AFE               	xorlw	254	; case 254
 20228  0051F8  B4D8               	btfsc	status,2,c
 20229  0051FA  D7E4               	goto	l546
 20230  0051FC  0A01               	xorlw	1	; case 255
 20231  0051FE  A4D8               	btfss	status,2,c
 20232  005200  0012               	return	
 20233  005202  D7A9               	goto	l530
 20234  005204                     __end_of_USBCheckMSDRequest:
 20235                           	opt stack 0
 20236                           tblptru	equ	0xFF8
 20237                           tblptrh	equ	0xFF7
 20238                           tblptrl	equ	0xFF6
 20239                           tablat	equ	0xFF5
 20240                           prodh	equ	0xFF4
 20241                           prodl	equ	0xFF3
 20242                           intcon	equ	0xFF2
 20243                           intcon2	equ	0xFF1
 20244                           intcon3	equ	0xFF0
 20245                           indf0	equ	0xFEF
 20246                           postinc0	equ	0xFEE
 20247                           fsr0h	equ	0xFEA
 20248                           fsr0l	equ	0xFE9
 20249                           wreg	equ	0xFE8
 20250                           indf1	equ	0xFE7
 20251                           postdec1	equ	0xFE5
 20252                           plusw1	equ	0xFE3
 20253                           fsr1h	equ	0xFE2
 20254                           fsr1l	equ	0xFE1
 20255                           indf2	equ	0xFDF
 20256                           postinc2	equ	0xFDE
 20257                           postdec2	equ	0xFDD
 20258                           plusw2	equ	0xFDB
 20259                           fsr2h	equ	0xFDA
 20260                           fsr2l	equ	0xFD9
 20261                           status	equ	0xFD8
 20262                           
 20263 ;; *************** function _USBCheckHIDRequest *****************
 20264 ;; Defined at:
 20265 ;;		line 153 in file "usb_device_hid.c"
 20266 ;; Parameters:    Size  Location     Type
 20267 ;;		None
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;		None
 20270 ;; Return value:  Size  Location     Type
 20271 ;;                  1    wreg      void 
 20272 ;; Registers used:
 20273 ;;		wreg, status,2, status,0
 20274 ;; Tracked objects:
 20275 ;;		On entry : 0/0
 20276 ;;		On exit  : 0/0
 20277 ;;		Unchanged: 0/0
 20278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20283 ;;Total ram usage:        0 bytes
 20284 ;; Hardware stack levels used:    1
 20285 ;; This function calls:
 20286 ;;		Nothing
 20287 ;; This function is called by:
 20288 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20289 ;; This function uses a non-reentrant model
 20290 ;;
 20291                           
 20292                           	psect	text92
 20293  004826                     __ptext92:
 20294                           	opt stack 0
 20295  004826                     _USBCheckHIDRequest:
 20296                           	opt stack 28
 20297                           
 20298                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 20299                           
 20300                           ;incstack = 0
 20301  004826  010D               	movlb	13	; () banked
 20302  004828  5130               	movf	48,w,b	;volatile
 20303  00482A  0B1F               	andlw	31
 20304  00482C  06E8               	decf	wreg,f,c
 20305  00482E  A4D8               	btfss	status,2,c
 20306  004830  0012               	return	
 20307                           
 20308                           ; BSR set to: 13
 20309                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 20310                           
 20311                           ; BSR set to: 13
 20312                           
 20313                           ; BSR set to: 13
 20314  004832  5134               	movf	52,w,b	;volatile
 20315  004834  A4D8               	btfss	status,2,c
 20316  004836  0012               	return	
 20317                           
 20318                           ; BSR set to: 13
 20319                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 20320                           
 20321                           ; BSR set to: 13
 20322                           
 20323                           ; BSR set to: 13
 20324  004838  0E06               	movlw	6
 20325  00483A  1931               	xorwf	49,w,b	;volatile
 20326  00483C  B4D8               	btfsc	status,2,c
 20327  00483E  D01A               	goto	l411
 20328  004840  D022               	goto	l414
 20329  004842                     
 20330                           ; BSR set to: 13
 20331                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 20332                           
 20333                           ; BSR set to: 13
 20334  004842  0100               	movlb	0	; () banked
 20335  004844  05B4               	decf	_USBActiveConfiguration& (0+255),w,b
 20336  004846  A4D8               	btfss	status,2,c
 20337  004848  D01E               	goto	l414
 20338                           
 20339                           ; BSR set to: 0
 20340                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 20341  00484A  0EB9               	movlw	low (_configDescriptor1+18)
 20342  00484C  6F66               	movwf	_inPipes& (0+255),b
 20343  00484E  0E8E               	movlw	high (_configDescriptor1+18)
 20344  004850  6F67               	movwf	(_inPipes+1)& (0+255),b
 20345                           
 20346                           ; BSR set to: 0
 20347  004852  0E00               	movlw	0
 20348  004854  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20349  004856  0E09               	movlw	9
 20350  004858  D00B               	goto	L13
 20351  00485A                     l9842:
 20352                           
 20353                           ; BSR set to: 0
 20354  00485A  0EC0               	movlw	192
 20355  00485C  6F69               	movwf	(_inPipes+3)& (0+255),b
 20356                           
 20357                           ; BSR set to: 0
 20358                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 20359  00485E  D013               	goto	l414
 20360  004860                     
 20361                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 20362                           
 20363                           ; BSR set to: 0
 20364  004860  0E6D               	movlw	low _hid_rpt01
 20365  004862  0100               	movlb	0	; () banked
 20366  004864  6F66               	movwf	_inPipes& (0+255),b
 20367  004866  0E8F               	movlw	high _hid_rpt01
 20368  004868  6F67               	movwf	(_inPipes+1)& (0+255),b
 20369                           
 20370                           ; BSR set to: 0
 20371  00486A  0E00               	movlw	0
 20372  00486C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20373  00486E  0E1D               	movlw	29
 20374  004870                     L13:
 20375  004870  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20376  004872  D7F3               	goto	l9842
 20377  004874                     l411:
 20378                           
 20379                           ; BSR set to: 0
 20380  004874  010D               	movlb	13	; () banked
 20381  004876  5133               	movf	51,w,b	;volatile
 20382                           
 20383                           ; Switch size 1, requested type "space"
 20384                           ; Number of cases is 3, Range of values is 33 to 35
 20385                           ; switch strategies available:
 20386                           ; Name         Instructions Cycles
 20387                           ; simple_byte           10     6 (average)
 20388                           ;	Chosen strategy is simple_byte
 20389  004878  0A21               	xorlw	33	; case 33
 20390  00487A  B4D8               	btfsc	status,2,c
 20391  00487C  D7E2               	goto	l412
 20392  00487E  0A03               	xorlw	3	; case 34
 20393  004880  B4D8               	btfsc	status,2,c
 20394  004882  D7EE               	goto	l415
 20395  004884  0A01               	xorlw	1	; case 35
 20396  004886                     l414:
 20397                           
 20398                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 20399                           
 20400                           ; BSR set to: 13
 20401                           
 20402                           ; BSR set to: 13
 20403  004886  010D               	movlb	13	; () banked
 20404  004888  3930               	swapf	48,w,b	;volatile
 20405  00488A  32E8               	rrcf	wreg,f,c
 20406  00488C  0B03               	andlw	3
 20407  00488E  06E8               	decf	wreg,f,c
 20408  004890  A4D8               	btfss	status,2,c
 20409  004892  0012               	return	
 20410  004894  D024               	goto	l418
 20411  004896                     
 20412                           ; BSR set to: 13
 20413                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20414                           
 20415                           ; BSR set to: 13
 20416  004896  0EB2               	movlw	low _idle_rate
 20417  004898  0100               	movlb	0	; () banked
 20418  00489A  6F66               	movwf	_inPipes& (0+255),b
 20419  00489C  0E00               	movlw	high _idle_rate
 20420  00489E  6F67               	movwf	(_inPipes+1)& (0+255),b
 20421                           
 20422                           ; BSR set to: 0
 20423  0048A0  0E00               	movlw	0
 20424  0048A2  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20425  0048A4  0E01               	movlw	1
 20426  0048A6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20427                           
 20428                           ; BSR set to: 0
 20429  0048A8  0EC1               	movlw	193
 20430  0048AA  6F69               	movwf	(_inPipes+3)& (0+255),b
 20431                           
 20432                           ;usb_device_hid.c: 223: break;
 20433  0048AC  0012               	return	
 20434  0048AE                     
 20435                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 20436                           
 20437                           ; BSR set to: 0
 20438  0048AE  0E80               	movlw	128
 20439  0048B0  0100               	movlb	0	; () banked
 20440  0048B2  6F69               	movwf	(_inPipes+3)& (0+255),b
 20441                           
 20442                           ; BSR set to: 0
 20443                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 20444  0048B4  CD33 F0B2          	movff	3379,_idle_rate	;volatile
 20445                           
 20446                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 20447  0048B8  0012               	return	
 20448  0048BA                     
 20449                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 20450                           
 20451                           ; BSR set to: 0
 20452  0048BA  0EB1               	movlw	low _active_protocol
 20453  0048BC  0100               	movlb	0	; () banked
 20454  0048BE  6F66               	movwf	_inPipes& (0+255),b
 20455  0048C0  0E00               	movlw	high _active_protocol
 20456  0048C2  6F67               	movwf	(_inPipes+1)& (0+255),b
 20457                           
 20458                           ; BSR set to: 0
 20459  0048C4  0E00               	movlw	0
 20460  0048C6  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20461  0048C8  0E01               	movlw	1
 20462  0048CA  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20463                           
 20464                           ; BSR set to: 0
 20465  0048CC  0E81               	movlw	129
 20466  0048CE  6F69               	movwf	(_inPipes+3)& (0+255),b
 20467                           
 20468                           ;usb_device_hid.c: 234: break;
 20469  0048D0  0012               	return	
 20470  0048D2                     
 20471                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 20472                           
 20473                           ; BSR set to: 0
 20474  0048D2  0E80               	movlw	128
 20475  0048D4  0100               	movlb	0	; () banked
 20476  0048D6  6F69               	movwf	(_inPipes+3)& (0+255),b
 20477                           
 20478                           ; BSR set to: 0
 20479                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 20480  0048D8  CD32 F0B1          	movff	3378,_active_protocol	;volatile
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;usb_device_hid.c: 239: }
 20484                           
 20485                           ;usb_device_hid.c: 238: break;
 20486  0048DC  0012               	return	
 20487  0048DE                     l418:
 20488                           
 20489                           ; BSR set to: 0
 20490  0048DE  010D               	movlb	13	; () banked
 20491  0048E0  5131               	movf	49,w,b	;volatile
 20492                           
 20493                           ; Switch size 1, requested type "space"
 20494                           ; Number of cases is 6, Range of values is 1 to 11
 20495                           ; switch strategies available:
 20496                           ; Name         Instructions Cycles
 20497                           ; simple_byte           19    10 (average)
 20498                           ;	Chosen strategy is simple_byte
 20499  0048E2  0A01               	xorlw	1	; case 1
 20500  0048E4  B4D8               	btfsc	status,2,c
 20501  0048E6  0012               	return	
 20502  0048E8  0A03               	xorlw	3	; case 2
 20503  0048EA  B4D8               	btfsc	status,2,c
 20504  0048EC  D7D4               	goto	l422
 20505  0048EE  0A01               	xorlw	1	; case 3
 20506  0048F0  B4D8               	btfsc	status,2,c
 20507  0048F2  D7E3               	goto	l424
 20508  0048F4  0A0A               	xorlw	10	; case 9
 20509  0048F6  B4D8               	btfsc	status,2,c
 20510  0048F8  0012               	return	
 20511  0048FA  0A03               	xorlw	3	; case 10
 20512  0048FC  B4D8               	btfsc	status,2,c
 20513  0048FE  D7D7               	goto	l423
 20514  004900  0A01               	xorlw	1	; case 11
 20515  004902  A4D8               	btfss	status,2,c
 20516  004904  0012               	return	
 20517  004906  D7E5               	goto	l425
 20518  004908                     __end_of_USBCheckHIDRequest:
 20519                           	opt stack 0
 20520                           tblptru	equ	0xFF8
 20521                           tblptrh	equ	0xFF7
 20522                           tblptrl	equ	0xFF6
 20523                           tablat	equ	0xFF5
 20524                           prodh	equ	0xFF4
 20525                           prodl	equ	0xFF3
 20526                           intcon	equ	0xFF2
 20527                           intcon2	equ	0xFF1
 20528                           intcon3	equ	0xFF0
 20529                           indf0	equ	0xFEF
 20530                           postinc0	equ	0xFEE
 20531                           fsr0h	equ	0xFEA
 20532                           fsr0l	equ	0xFE9
 20533                           wreg	equ	0xFE8
 20534                           indf1	equ	0xFE7
 20535                           postdec1	equ	0xFE5
 20536                           plusw1	equ	0xFE3
 20537                           fsr1h	equ	0xFE2
 20538                           fsr1l	equ	0xFE1
 20539                           indf2	equ	0xFDF
 20540                           postinc2	equ	0xFDE
 20541                           postdec2	equ	0xFDD
 20542                           plusw2	equ	0xFDB
 20543                           fsr2h	equ	0xFDA
 20544                           fsr2l	equ	0xFD9
 20545                           status	equ	0xFD8
 20546                           
 20547 ;; *************** function _SYSTEM_Initialize *****************
 20548 ;; Defined at:
 20549 ;;		line 80 in file "system.c"
 20550 ;; Parameters:    Size  Location     Type
 20551 ;;  state           1    wreg     enum E6623
 20552 ;; Auto vars:     Size  Location     Type
 20553 ;;  state           1    4[COMRAM] enum E6623
 20554 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 20555 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 20556 ;; Return value:  Size  Location     Type
 20557 ;;                  1    wreg      void 
 20558 ;; Registers used:
 20559 ;;		wreg, status,2, status,0
 20560 ;; Tracked objects:
 20561 ;;		On entry : 0/0
 20562 ;;		On exit  : 0/0
 20563 ;;		Unchanged: 0/0
 20564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20566 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20569 ;;Total ram usage:        5 bytes
 20570 ;; Hardware stack levels used:    1
 20571 ;; This function calls:
 20572 ;;		Nothing
 20573 ;; This function is called by:
 20574 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20575 ;;		_main
 20576 ;; This function uses a non-reentrant model
 20577 ;;
 20578                           
 20579                           	psect	text93
 20580  0071B2                     __ptext93:
 20581                           	opt stack 0
 20582  0071B2                     _SYSTEM_Initialize:
 20583                           	opt stack 28
 20584                           
 20585                           ;incstack = 0
 20586                           ;SYSTEM_Initialize@state stored from wreg
 20587  0071B2  6E05               	movwf	SYSTEM_Initialize@state,c
 20588                           
 20589                           ;system.c: 82: switch(state)
 20590  0071B4  D01D               	goto	l920
 20591  0071B6                     
 20592                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 20593  0071B6  0E02               	movlw	2
 20594  0071B8  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 20595  0071BA  0E58               	movlw	88
 20596  0071BC  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 20597                           
 20598                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 20599  0071BE  8C9B               	bsf	3995,6,c	;volatile
 20600  0071C0                     l10028:
 20601  0071C0  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 20602  0071C2  A0D8               	btfss	status,0,c
 20603  0071C4  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 20604  0071C6  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 20605  0071C8  E1FB               	bnz	l10028
 20606  0071CA  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 20607  0071CC  B4D8               	btfsc	status,2,c
 20608  0071CE  0012               	return	
 20609  0071D0  D7F7               	goto	l923
 20610  0071D2                     
 20611                           ;system.c: 119: OSCCON = 0x70;
 20612  0071D2  0E70               	movlw	112
 20613  0071D4  6ED3               	movwf	4051,c	;volatile
 20614                           
 20615                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 20616  0071D6  0E03               	movlw	3
 20617  0071D8  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3026+1,c
 20618  0071DA  0E20               	movlw	32
 20619  0071DC  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3026,c
 20620  0071DE                     l10032:
 20621  0071DE  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3026,f,c
 20622  0071E0  A0D8               	btfss	status,0,c
 20623  0071E2  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3026+1,f,c
 20624  0071E4  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3026,w,c
 20625  0071E6  E1FB               	bnz	l10032
 20626  0071E8  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3026+1,w,c
 20627  0071EA  B4D8               	btfsc	status,2,c
 20628  0071EC  0012               	return	
 20629  0071EE  D7F7               	goto	l929
 20630  0071F0                     l920:
 20631  0071F0  5005               	movf	SYSTEM_Initialize@state,w,c
 20632                           
 20633                           ; Switch size 1, requested type "space"
 20634                           ; Number of cases is 3, Range of values is 0 to 2
 20635                           ; switch strategies available:
 20636                           ; Name         Instructions Cycles
 20637                           ; simple_byte           10     6 (average)
 20638                           ;	Chosen strategy is simple_byte
 20639  0071F2  0A00               	xorlw	0	; case 0
 20640  0071F4  B4D8               	btfsc	status,2,c
 20641  0071F6  D7DF               	goto	l921
 20642  0071F8  0A01               	xorlw	1	; case 1
 20643  0071FA  B4D8               	btfsc	status,2,c
 20644  0071FC  0012               	return	
 20645  0071FE  0A03               	xorlw	3	; case 2
 20646  007200  A4D8               	btfss	status,2,c
 20647  007202  0012               	return	
 20648  007204  D7E6               	goto	l927
 20649  007206                     __end_of_SYSTEM_Initialize:
 20650                           	opt stack 0
 20651                           tblptru	equ	0xFF8
 20652                           tblptrh	equ	0xFF7
 20653                           tblptrl	equ	0xFF6
 20654                           tablat	equ	0xFF5
 20655                           prodh	equ	0xFF4
 20656                           prodl	equ	0xFF3
 20657                           intcon	equ	0xFF2
 20658                           intcon2	equ	0xFF1
 20659                           intcon3	equ	0xFF0
 20660                           indf0	equ	0xFEF
 20661                           postinc0	equ	0xFEE
 20662                           fsr0h	equ	0xFEA
 20663                           fsr0l	equ	0xFE9
 20664                           wreg	equ	0xFE8
 20665                           indf1	equ	0xFE7
 20666                           postdec1	equ	0xFE5
 20667                           plusw1	equ	0xFE3
 20668                           fsr1h	equ	0xFE2
 20669                           fsr1l	equ	0xFE1
 20670                           indf2	equ	0xFDF
 20671                           postinc2	equ	0xFDE
 20672                           postdec2	equ	0xFDD
 20673                           plusw2	equ	0xFDB
 20674                           fsr2h	equ	0xFDA
 20675                           fsr2l	equ	0xFD9
 20676                           status	equ	0xFD8
 20677                           
 20678 ;; *************** function _MSDTransferTerminated *****************
 20679 ;; Defined at:
 20680 ;;		line 1674 in file "usb_device_msd.c"
 20681 ;; Parameters:    Size  Location     Type
 20682 ;;  handle          2   11[COMRAM] PTR void 
 20683 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20684 ;;		 -> BDT(48), 
 20685 ;; Auto vars:     Size  Location     Type
 20686 ;;		None
 20687 ;; Return value:  Size  Location     Type
 20688 ;;                  1    wreg      void 
 20689 ;; Registers used:
 20690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20691 ;; Tracked objects:
 20692 ;;		On entry : 0/0
 20693 ;;		On exit  : 0/0
 20694 ;;		Unchanged: 0/0
 20695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20700 ;;Total ram usage:        4 bytes
 20701 ;; Hardware stack levels used:    1
 20702 ;; Hardware stack levels required when called:    1
 20703 ;; This function calls:
 20704 ;;		_USBStallEndpoint
 20705 ;;		_USBTransferOnePacket
 20706 ;; This function is called by:
 20707 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20708 ;; This function uses a non-reentrant model
 20709 ;;
 20710                           
 20711                           	psect	text94
 20712  0070B0                     __ptext94:
 20713                           	opt stack 0
 20714  0070B0                     _MSDTransferTerminated:
 20715                           	opt stack 27
 20716                           
 20717                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 20718                           
 20719                           ;incstack = 0
 20720  0070B0  0100               	movlb	0	; () banked
 20721  0070B2  519A               	movf	_MSDCBWValid& (0+255),w,b
 20722  0070B4  A4D8               	btfss	status,2,c
 20723  0070B6  D00B               	goto	l764
 20724                           
 20725                           ; BSR set to: 0
 20726                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 20727  0070B8  0E01               	movlw	1
 20728  0070BA  6E01               	movwf	USBStallEndpoint@dir,c
 20729  0070BC  0E02               	movlw	2
 20730  0070BE  EC26  F020         	call	_USBStallEndpoint
 20731                           
 20732                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 20733  0070C2  0E00               	movlw	0
 20734  0070C4  6E01               	movwf	USBStallEndpoint@dir,c
 20735  0070C6  0E02               	movlw	2
 20736  0070C8  EC26  F020         	call	_USBStallEndpoint
 20737                           
 20738                           ;usb_device_msd.c: 1681: }
 20739  0070CC  0012               	return	
 20740  0070CE                     l764:
 20741  0070CE  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 20742  0070D2  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 20743  0070D6  500E               	movf	_MSDTransferTerminated$2407,w,c
 20744  0070D8  180C               	xorwf	MSDTransferTerminated@handle,w,c
 20745  0070DA  E114               	bnz	l767
 20746  0070DC  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 20747  0070DE  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 20748  0070E0  A4D8               	btfss	status,2,c
 20749  0070E2  0012               	return	
 20750                           
 20751                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 20752  0070E4  0E00               	movlw	0
 20753  0070E6  6E01               	movwf	USBTransferOnePacket@dir,c
 20754  0070E8  0E40               	movlw	64
 20755  0070EA  6E02               	movwf	USBTransferOnePacket@data,c
 20756  0070EC  0E0D               	movlw	13
 20757  0070EE  6E03               	movwf	USBTransferOnePacket@data+1,c
 20758  0070F0  0E40               	movlw	64
 20759  0070F2  6E04               	movwf	USBTransferOnePacket@len,c
 20760  0070F4  0E02               	movlw	2
 20761  0070F6  ECB0  F021         	call	_USBTransferOnePacket
 20762  0070FA  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20763  0070FE  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20764  007102  0012               	return	
 20765  007104                     l767:
 20766  007104  0012               	return		;funcret
 20767  007106                     __end_of_MSDTransferTerminated:
 20768                           	opt stack 0
 20769                           tblptru	equ	0xFF8
 20770                           tblptrh	equ	0xFF7
 20771                           tblptrl	equ	0xFF6
 20772                           tablat	equ	0xFF5
 20773                           prodh	equ	0xFF4
 20774                           prodl	equ	0xFF3
 20775                           intcon	equ	0xFF2
 20776                           intcon2	equ	0xFF1
 20777                           intcon3	equ	0xFF0
 20778                           indf0	equ	0xFEF
 20779                           postinc0	equ	0xFEE
 20780                           fsr0h	equ	0xFEA
 20781                           fsr0l	equ	0xFE9
 20782                           wreg	equ	0xFE8
 20783                           indf1	equ	0xFE7
 20784                           postdec1	equ	0xFE5
 20785                           plusw1	equ	0xFE3
 20786                           fsr1h	equ	0xFE2
 20787                           fsr1l	equ	0xFE1
 20788                           indf2	equ	0xFDF
 20789                           postinc2	equ	0xFDE
 20790                           postdec2	equ	0xFDD
 20791                           plusw2	equ	0xFDB
 20792                           fsr2h	equ	0xFDA
 20793                           fsr2l	equ	0xFD9
 20794                           status	equ	0xFD8
 20795                           
 20796 ;; *************** function _APP_DeviceMSDInitialize *****************
 20797 ;; Defined at:
 20798 ;;		line 84 in file "app_device_msd.c"
 20799 ;; Parameters:    Size  Location     Type
 20800 ;;		None
 20801 ;; Auto vars:     Size  Location     Type
 20802 ;;		None
 20803 ;; Return value:  Size  Location     Type
 20804 ;;                  1    wreg      void 
 20805 ;; Registers used:
 20806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20807 ;; Tracked objects:
 20808 ;;		On entry : 0/0
 20809 ;;		On exit  : 0/0
 20810 ;;		Unchanged: 0/0
 20811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20816 ;;Total ram usage:        0 bytes
 20817 ;; Hardware stack levels used:    1
 20818 ;; Hardware stack levels required when called:    2
 20819 ;; This function calls:
 20820 ;;		_USBEnableEndpoint
 20821 ;;		_USBMSDInit
 20822 ;; This function is called by:
 20823 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20824 ;; This function uses a non-reentrant model
 20825 ;;
 20826                           
 20827                           	psect	text95
 20828  007D2A                     __ptext95:
 20829                           	opt stack 0
 20830  007D2A                     _APP_DeviceMSDInitialize:
 20831                           	opt stack 26
 20832                           
 20833                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 20834                           
 20835                           ;incstack = 0
 20836  007D2A  0E1E               	movlw	30
 20837  007D2C  6E09               	movwf	USBEnableEndpoint@options,c
 20838  007D2E  0E02               	movlw	2
 20839  007D30  ECF4  F03A         	call	_USBEnableEndpoint
 20840                           
 20841                           ;app_device_msd.c: 93: USBMSDInit();
 20842  007D34  ECAA  F020         	call	_USBMSDInit	;wreg free
 20843  007D38  0012               	return		;funcret
 20844  007D3A                     __end_of_APP_DeviceMSDInitialize:
 20845                           	opt stack 0
 20846                           tblptru	equ	0xFF8
 20847                           tblptrh	equ	0xFF7
 20848                           tblptrl	equ	0xFF6
 20849                           tablat	equ	0xFF5
 20850                           prodh	equ	0xFF4
 20851                           prodl	equ	0xFF3
 20852                           intcon	equ	0xFF2
 20853                           intcon2	equ	0xFF1
 20854                           intcon3	equ	0xFF0
 20855                           indf0	equ	0xFEF
 20856                           postinc0	equ	0xFEE
 20857                           fsr0h	equ	0xFEA
 20858                           fsr0l	equ	0xFE9
 20859                           wreg	equ	0xFE8
 20860                           indf1	equ	0xFE7
 20861                           postdec1	equ	0xFE5
 20862                           plusw1	equ	0xFE3
 20863                           fsr1h	equ	0xFE2
 20864                           fsr1l	equ	0xFE1
 20865                           indf2	equ	0xFDF
 20866                           postinc2	equ	0xFDE
 20867                           postdec2	equ	0xFDD
 20868                           plusw2	equ	0xFDB
 20869                           fsr2h	equ	0xFDA
 20870                           fsr2l	equ	0xFD9
 20871                           status	equ	0xFD8
 20872                           
 20873 ;; *************** function _USBMSDInit *****************
 20874 ;; Defined at:
 20875 ;;		line 142 in file "usb_device_msd.c"
 20876 ;; Parameters:    Size  Location     Type
 20877 ;;		None
 20878 ;; Auto vars:     Size  Location     Type
 20879 ;;		None
 20880 ;; Return value:  Size  Location     Type
 20881 ;;                  1    wreg      void 
 20882 ;; Registers used:
 20883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20884 ;; Tracked objects:
 20885 ;;		On entry : 0/0
 20886 ;;		On exit  : 0/0
 20887 ;;		Unchanged: 0/0
 20888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20893 ;;Total ram usage:        3 bytes
 20894 ;; Hardware stack levels used:    1
 20895 ;; Hardware stack levels required when called:    1
 20896 ;; This function calls:
 20897 ;;		_ExternalFlash_MediaDetect
 20898 ;;		_ExternalFlash_MediaInitialize
 20899 ;;		_ResetSenseData
 20900 ;;		_USBTransferOnePacket
 20901 ;; This function is called by:
 20902 ;;		_APP_DeviceMSDInitialize
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text96
 20907  004154                     __ptext96:
 20908                           	opt stack 0
 20909  004154                     _USBMSDInit:
 20910                           	opt stack 26
 20911                           
 20912                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 20913                           
 20914                           ;incstack = 0
 20915  004154  0E00               	movlw	0
 20916  004156  6E01               	movwf	USBTransferOnePacket@dir,c
 20917  004158  0E40               	movlw	64
 20918  00415A  6E02               	movwf	USBTransferOnePacket@data,c
 20919  00415C  0E0D               	movlw	13
 20920  00415E  6E03               	movwf	USBTransferOnePacket@data+1,c
 20921  004160  0E40               	movlw	64
 20922  004162  6E04               	movwf	USBTransferOnePacket@len,c
 20923  004164  0E02               	movlw	2
 20924  004166  ECB0  F021         	call	_USBTransferOnePacket
 20925  00416A  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20926  00416E  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20927  004172  C070  F088         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 20928  004176  C071  F089         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 20929                           
 20930                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 20931  00417A  0E00               	movlw	0
 20932  00417C  0100               	movlb	0	; () banked
 20933  00417E  6FA2               	movwf	_MSD_State& (0+255),b
 20934                           
 20935                           ; BSR set to: 0
 20936                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 20937  004180  69A1               	setf	_MSDCommandState& (0+255),b
 20938                           
 20939                           ; BSR set to: 0
 20940                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 20941  004182  0E00               	movlw	0
 20942  004184  6FA0               	movwf	_MSDReadState& (0+255),b
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 20946  004186  0E00               	movlw	0
 20947  004188  6F9F               	movwf	_MSDWriteState& (0+255),b
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 20951  00418A  0E00               	movlw	0
 20952  00418C  6F9B               	movwf	_MSDHostNoData& (0+255),b
 20953                           
 20954                           ; BSR set to: 0
 20955                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 20956  00418E  0E00               	movlw	0
 20957  004190  0101               	movlb	1	; () banked
 20958  004192  6F50               	movwf	_gblNumBLKS& (0+255),b
 20959  004194  0E00               	movlw	0
 20960  004196  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 20961  004198  0E00               	movlw	0
 20962  00419A  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 20963  00419C  0E00               	movlw	0
 20964  00419E  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 20965                           
 20966                           ; BSR set to: 1
 20967                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 20968  0041A0  0E00               	movlw	0
 20969  0041A2  6F4C               	movwf	_gblBLKLen& (0+255),b
 20970  0041A4  0E00               	movlw	0
 20971  0041A6  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 20972  0041A8  0E00               	movlw	0
 20973  0041AA  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 20974  0041AC  0E00               	movlw	0
 20975  0041AE  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 20976                           
 20977                           ; BSR set to: 1
 20978                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 20979  0041B0  0E01               	movlw	1
 20980  0041B2  0100               	movlb	0	; () banked
 20981  0041B4  6F9A               	movwf	_MSDCBWValid& (0+255),b
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 20985  0041B6  0E00               	movlw	0
 20986  0041B8  0101               	movlb	1	; () banked
 20987  0041BA  6F71               	movwf	(_gblMediaPresent+1)& (0+255),b
 20988  0041BC  0E00               	movlw	0
 20989  0041BE  6F70               	movwf	_gblMediaPresent& (0+255),b
 20990                           
 20991                           ; BSR set to: 1
 20992                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 20993  0041C0  0E00               	movlw	0
 20994  0041C2  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 20995  0041C4  D046               	goto	l518
 20996  0041C6                     
 20997                           ; BSR set to: 1
 20998                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 20999                           
 21000                           ; BSR set to: 1
 21001  0041C6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 21002  0041C8  0D01               	mullw	1
 21003  0041CA  0E9C               	movlw	low _SoftDetach
 21004  0041CC  24F3               	addwf	prodl,w,c
 21005  0041CE  6ED9               	movwf	fsr2l,c
 21006  0041D0  0E00               	movlw	high _SoftDetach
 21007  0041D2  20F4               	addwfc	prodh,w,c
 21008  0041D4  6EDA               	movwf	fsr2h,c
 21009  0041D6  0E00               	movlw	0
 21010  0041D8  6EDF               	movwf	indf2,c
 21011                           
 21012                           ; BSR set to: 1
 21013                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 21014  0041DA  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 21015  0041DE  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 21016  0041E2  D801               	call	u6258
 21017  0041E4  D009               	goto	u6259
 21018  0041E6                     u6258:
 21019  0041E6  0005               	push	
 21020  0041E8  6EFA               	movwf	pclath,c
 21021  0041EA  51E8               	movf	(_LUN+6)& (0+255),w,b
 21022  0041EC  6EFD               	movwf	tosl,c
 21023  0041EE  51E9               	movf	(_LUN+7)& (0+255),w,b
 21024  0041F0  6EFE               	movwf	tosh,c
 21025  0041F2  6AFF               	clrf	tosu,c
 21026  0041F4  50FA               	movf	pclath,w,c
 21027  0041F6  0012               	return		;indir
 21028  0041F8                     u6259:
 21029  0041F8  0900               	iorlw	0
 21030  0041FA  B4D8               	btfsc	status,2,c
 21031  0041FC  D026               	goto	l521
 21032                           
 21033                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 21034  0041FE  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 21035  004202  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 21036  004206  D801               	call	u6278
 21037  004208  D00A               	goto	u6279
 21038  00420A                     u6278:
 21039  00420A  0005               	push	
 21040  00420C  6EFA               	movwf	pclath,c
 21041  00420E  0101               	movlb	1	; () banked
 21042  004210  51E2               	movf	_LUN& (0+255),w,b
 21043  004212  6EFD               	movwf	tosl,c
 21044  004214  51E3               	movf	(_LUN+1)& (0+255),w,b
 21045  004216  6EFE               	movwf	tosh,c
 21046  004218  6AFF               	clrf	tosu,c
 21047  00421A  50FA               	movf	pclath,w,c
 21048  00421C  0012               	return		;indir
 21049  00421E                     u6279:
 21050  00421E  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 21051  004220  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 21052  004222  B4D8               	btfsc	status,2,c
 21053  004224  D012               	goto	l521
 21054                           
 21055                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 21056  004226  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 21057  00422A  0E01               	movlw	1
 21058  00422C  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 21059  00422E  0E00               	movlw	0
 21060  004230  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 21061  004232  2A0C               	incf	??_USBMSDInit,f,c
 21062  004234  D003               	goto	u6294
 21063  004236                     u6295:
 21064  004236  90D8               	bcf	status,0,c
 21065  004238  360D               	rlcf	??_USBMSDInit+1,f,c
 21066  00423A  360E               	rlcf	??_USBMSDInit+2,f,c
 21067  00423C                     u6294:
 21068  00423C  2E0C               	decfsz	??_USBMSDInit,f,c
 21069  00423E  D7FB               	goto	u6295
 21070  004240  500D               	movf	??_USBMSDInit+1,w,c
 21071  004242  0101               	movlb	1	; () banked
 21072  004244  1370               	iorwf	_gblMediaPresent& (0+255),f,b
 21073  004246  500E               	movf	??_USBMSDInit+2,w,c
 21074  004248  1371               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 21075  00424A                     l521:
 21076                           
 21077                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 21078                           
 21079                           ; BSR set to: 1
 21080                           
 21081                           ; BSR set to: 1
 21082  00424A  EC0E  F036         	call	_ResetSenseData	;wreg free
 21083  00424E  0101               	movlb	1	; () banked
 21084  004250  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 21085  004252                     l518:
 21086                           
 21087                           ; BSR set to: 1
 21088                           
 21089                           ; BSR set to: 1
 21090  004252  510D               	movf	(_gblCBW+13)& (0+255),w,b
 21091  004254  A4D8               	btfss	status,2,c
 21092  004256  0012               	return	
 21093  004258  D7B6               	goto	l519
 21094  00425A                     __end_of_USBMSDInit:
 21095                           	opt stack 0
 21096                           tosu	equ	0xFFF
 21097                           tosh	equ	0xFFE
 21098                           tosl	equ	0xFFD
 21099                           pclath	equ	0xFFA
 21100                           tblptru	equ	0xFF8
 21101                           tblptrh	equ	0xFF7
 21102                           tblptrl	equ	0xFF6
 21103                           tablat	equ	0xFF5
 21104                           prodh	equ	0xFF4
 21105                           prodl	equ	0xFF3
 21106                           intcon	equ	0xFF2
 21107                           intcon2	equ	0xFF1
 21108                           intcon3	equ	0xFF0
 21109                           indf0	equ	0xFEF
 21110                           postinc0	equ	0xFEE
 21111                           fsr0h	equ	0xFEA
 21112                           fsr0l	equ	0xFE9
 21113                           wreg	equ	0xFE8
 21114                           indf1	equ	0xFE7
 21115                           postdec1	equ	0xFE5
 21116                           plusw1	equ	0xFE3
 21117                           fsr1h	equ	0xFE2
 21118                           fsr1l	equ	0xFE1
 21119                           indf2	equ	0xFDF
 21120                           postinc2	equ	0xFDE
 21121                           postdec2	equ	0xFDD
 21122                           plusw2	equ	0xFDB
 21123                           fsr2h	equ	0xFDA
 21124                           fsr2l	equ	0xFD9
 21125                           status	equ	0xFD8
 21126                           
 21127 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 21128 ;; Defined at:
 21129 ;;		line 47 in file "app_device_custom_hid.c"
 21130 ;; Parameters:    Size  Location     Type
 21131 ;;		None
 21132 ;; Auto vars:     Size  Location     Type
 21133 ;;		None
 21134 ;; Return value:  Size  Location     Type
 21135 ;;                  1    wreg      void 
 21136 ;; Registers used:
 21137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21138 ;; Tracked objects:
 21139 ;;		On entry : 0/0
 21140 ;;		On exit  : 0/0
 21141 ;;		Unchanged: 0/0
 21142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21147 ;;Total ram usage:        0 bytes
 21148 ;; Hardware stack levels used:    1
 21149 ;; Hardware stack levels required when called:    2
 21150 ;; This function calls:
 21151 ;;		_USBEnableEndpoint
 21152 ;;		_USBTransferOnePacket
 21153 ;; This function is called by:
 21154 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21155 ;; This function uses a non-reentrant model
 21156 ;;
 21157                           
 21158                           	psect	text97
 21159  0077A8                     __ptext97:
 21160                           	opt stack 0
 21161  0077A8                     _APP_DeviceCustomHIDInitialize:
 21162                           	opt stack 26
 21163                           
 21164                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 21165                           
 21166                           ; BSR set to: 1
 21167                           ;incstack = 0
 21168  0077A8  0E00               	movlw	0
 21169  0077AA  0101               	movlb	1	; () banked
 21170  0077AC  6F6E               	movwf	_USBInHandle& (0+255),b
 21171  0077AE  0E00               	movlw	0
 21172  0077B0  6F6F               	movwf	(_USBInHandle+1)& (0+255),b
 21173                           
 21174                           ; BSR set to: 1
 21175                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 21176  0077B2  0E1E               	movlw	30
 21177  0077B4  6E09               	movwf	USBEnableEndpoint@options,c
 21178  0077B6  0E01               	movlw	1
 21179  0077B8  ECF4  F03A         	call	_USBEnableEndpoint
 21180                           
 21181                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 21182  0077BC  0E00               	movlw	0
 21183  0077BE  6E01               	movwf	USBTransferOnePacket@dir,c
 21184  0077C0  0E80               	movlw	low _ReceivedDataBuffer
 21185  0077C2  6E02               	movwf	USBTransferOnePacket@data,c
 21186  0077C4  0E02               	movlw	high _ReceivedDataBuffer
 21187  0077C6  6E03               	movwf	USBTransferOnePacket@data+1,c
 21188  0077C8  0E40               	movlw	64
 21189  0077CA  6E04               	movwf	USBTransferOnePacket@len,c
 21190  0077CC  0E01               	movlw	1
 21191  0077CE  ECB0  F021         	call	_USBTransferOnePacket
 21192  0077D2  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 21193  0077D6  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 21194  0077DA  0012               	return		;funcret
 21195  0077DC                     __end_of_APP_DeviceCustomHIDInitialize:
 21196                           	opt stack 0
 21197                           tosu	equ	0xFFF
 21198                           tosh	equ	0xFFE
 21199                           tosl	equ	0xFFD
 21200                           pclath	equ	0xFFA
 21201                           tblptru	equ	0xFF8
 21202                           tblptrh	equ	0xFF7
 21203                           tblptrl	equ	0xFF6
 21204                           tablat	equ	0xFF5
 21205                           prodh	equ	0xFF4
 21206                           prodl	equ	0xFF3
 21207                           intcon	equ	0xFF2
 21208                           intcon2	equ	0xFF1
 21209                           intcon3	equ	0xFF0
 21210                           indf0	equ	0xFEF
 21211                           postinc0	equ	0xFEE
 21212                           fsr0h	equ	0xFEA
 21213                           fsr0l	equ	0xFE9
 21214                           wreg	equ	0xFE8
 21215                           indf1	equ	0xFE7
 21216                           postdec1	equ	0xFE5
 21217                           plusw1	equ	0xFE3
 21218                           fsr1h	equ	0xFE2
 21219                           fsr1l	equ	0xFE1
 21220                           indf2	equ	0xFDF
 21221                           postinc2	equ	0xFDE
 21222                           postdec2	equ	0xFDD
 21223                           plusw2	equ	0xFDB
 21224                           fsr2h	equ	0xFDA
 21225                           fsr2l	equ	0xFD9
 21226                           status	equ	0xFD8
 21227                           
 21228 ;; *************** function _USBEnableEndpoint *****************
 21229 ;; Defined at:
 21230 ;;		line 878 in file "usb_device.c"
 21231 ;; Parameters:    Size  Location     Type
 21232 ;;  ep              1    wreg     unsigned char 
 21233 ;;  options         1    8[COMRAM] unsigned char 
 21234 ;; Auto vars:     Size  Location     Type
 21235 ;;  ep              1   11[COMRAM] unsigned char 
 21236 ;;  p               2    9[COMRAM] PTR unsigned char 
 21237 ;;		 -> UEP0(1), 
 21238 ;; Return value:  Size  Location     Type
 21239 ;;                  1    wreg      void 
 21240 ;; Registers used:
 21241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21242 ;; Tracked objects:
 21243 ;;		On entry : 0/0
 21244 ;;		On exit  : 0/0
 21245 ;;		Unchanged: 0/0
 21246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21247 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21248 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21251 ;;Total ram usage:        4 bytes
 21252 ;; Hardware stack levels used:    1
 21253 ;; Hardware stack levels required when called:    1
 21254 ;; This function calls:
 21255 ;;		_USBConfigureEndpoint
 21256 ;; This function is called by:
 21257 ;;		_APP_DeviceCustomHIDInitialize
 21258 ;;		_APP_DeviceMSDInitialize
 21259 ;; This function uses a non-reentrant model
 21260 ;;
 21261                           
 21262                           	psect	text98
 21263  0075E8                     __ptext98:
 21264                           	opt stack 0
 21265  0075E8                     _USBEnableEndpoint:
 21266                           	opt stack 26
 21267                           
 21268                           ;incstack = 0
 21269                           ;USBEnableEndpoint@ep stored from wreg
 21270  0075E8  6E0C               	movwf	USBEnableEndpoint@ep,c
 21271                           
 21272                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 21273  0075EA  A409               	btfss	USBEnableEndpoint@options,2,c
 21274  0075EC  D005               	goto	l178
 21275                           
 21276                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 21277  0075EE  0E00               	movlw	0
 21278  0075F0  6E01               	movwf	USBConfigureEndpoint@direction,c
 21279  0075F2  500C               	movf	USBEnableEndpoint@ep,w,c
 21280  0075F4  ECF7  F02E         	call	_USBConfigureEndpoint
 21281  0075F8                     l178:
 21282                           
 21283                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 21284  0075F8  A209               	btfss	USBEnableEndpoint@options,1,c
 21285  0075FA  D005               	goto	l179
 21286                           
 21287                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 21288  0075FC  0E01               	movlw	1
 21289  0075FE  6E01               	movwf	USBConfigureEndpoint@direction,c
 21290  007600  500C               	movf	USBEnableEndpoint@ep,w,c
 21291  007602  ECF7  F02E         	call	_USBConfigureEndpoint
 21292  007606                     l179:
 21293                           
 21294                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 21295  007606  500C               	movf	USBEnableEndpoint@ep,w,c
 21296  007608  0D01               	mullw	1
 21297  00760A  0E26               	movlw	38
 21298  00760C  24F3               	addwf	prodl,w,c
 21299  00760E  6E0A               	movwf	USBEnableEndpoint@p,c
 21300  007610  0E0F               	movlw	15
 21301  007612  20F4               	addwfc	prodh,w,c
 21302  007614  6E0B               	movwf	USBEnableEndpoint@p+1,c
 21303                           
 21304                           ;usb_device.c: 901: *p = options;
 21305  007616  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 21306  00761A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 21307  00761E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 21308  007622  0012               	return		;funcret
 21309  007624                     __end_of_USBEnableEndpoint:
 21310                           	opt stack 0
 21311                           tosu	equ	0xFFF
 21312                           tosh	equ	0xFFE
 21313                           tosl	equ	0xFFD
 21314                           pclath	equ	0xFFA
 21315                           tblptru	equ	0xFF8
 21316                           tblptrh	equ	0xFF7
 21317                           tblptrl	equ	0xFF6
 21318                           tablat	equ	0xFF5
 21319                           prodh	equ	0xFF4
 21320                           prodl	equ	0xFF3
 21321                           intcon	equ	0xFF2
 21322                           intcon2	equ	0xFF1
 21323                           intcon3	equ	0xFF0
 21324                           indf0	equ	0xFEF
 21325                           postinc0	equ	0xFEE
 21326                           fsr0h	equ	0xFEA
 21327                           fsr0l	equ	0xFE9
 21328                           wreg	equ	0xFE8
 21329                           indf1	equ	0xFE7
 21330                           postdec1	equ	0xFE5
 21331                           plusw1	equ	0xFE3
 21332                           fsr1h	equ	0xFE2
 21333                           fsr1l	equ	0xFE1
 21334                           indf2	equ	0xFDF
 21335                           postinc2	equ	0xFDE
 21336                           postdec2	equ	0xFDD
 21337                           plusw2	equ	0xFDB
 21338                           fsr2h	equ	0xFDA
 21339                           fsr2l	equ	0xFD9
 21340                           status	equ	0xFD8
 21341                           
 21342 ;; *************** function _USBConfigureEndpoint *****************
 21343 ;; Defined at:
 21344 ;;		line 1545 in file "usb_device.c"
 21345 ;; Parameters:    Size  Location     Type
 21346 ;;  EPNum           1    wreg     unsigned char 
 21347 ;;  direction       1    0[COMRAM] unsigned char 
 21348 ;; Auto vars:     Size  Location     Type
 21349 ;;  EPNum           1    5[COMRAM] unsigned char 
 21350 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 21351 ;;		 -> BDT(48), 
 21352 ;; Return value:  Size  Location     Type
 21353 ;;                  1    wreg      void 
 21354 ;; Registers used:
 21355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21356 ;; Tracked objects:
 21357 ;;		On entry : 0/0
 21358 ;;		On exit  : 0/0
 21359 ;;		Unchanged: 0/0
 21360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21362 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21363 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21364 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21365 ;;Total ram usage:        8 bytes
 21366 ;; Hardware stack levels used:    1
 21367 ;; This function calls:
 21368 ;;		Nothing
 21369 ;; This function is called by:
 21370 ;;		_USBEnableEndpoint
 21371 ;; This function uses a non-reentrant model
 21372 ;;
 21373                           
 21374                           	psect	text99
 21375  005DEE                     __ptext99:
 21376                           	opt stack 0
 21377  005DEE                     _USBConfigureEndpoint:
 21378                           	opt stack 26
 21379                           
 21380                           ;incstack = 0
 21381                           ;USBConfigureEndpoint@EPNum stored from wreg
 21382  005DEE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 21383                           
 21384                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 21385  005DF0  0E00               	movlw	0
 21386  005DF2  6E07               	movwf	USBConfigureEndpoint@handle,c
 21387  005DF4  0E0D               	movlw	13
 21388  005DF6  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 21389                           
 21390                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 21391  005DF8  5001               	movf	USBConfigureEndpoint@direction,w,c
 21392  005DFA  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 21393  005DFC  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 21394  005DFE  90D8               	bcf	status,0,c
 21395  005E00  3602               	rlcf	??_USBConfigureEndpoint,f,c
 21396  005E02  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 21397  005E04  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21398  005E06  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 21399  005E08  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 21400  005E0A  90D8               	bcf	status,0,c
 21401  005E0C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21402  005E0E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21403  005E10  90D8               	bcf	status,0,c
 21404  005E12  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21405  005E14  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21406  005E16  5002               	movf	??_USBConfigureEndpoint,w,c
 21407  005E18  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 21408  005E1A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 21409  005E1C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 21410  005E1E  90D8               	bcf	status,0,c
 21411  005E20  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21412  005E22  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21413  005E24  90D8               	bcf	status,0,c
 21414  005E26  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21415  005E28  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21416  005E2A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 21417  005E2C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 21418  005E2E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 21419  005E30  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 21420                           
 21421                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 21422  005E32  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21423  005E36  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21424  005E3A  9EDF               	bcf	indf2,7,c
 21425                           
 21426                           ;usb_device.c: 1559: if(direction == 0)
 21427  005E3C  5001               	movf	USBConfigureEndpoint@direction,w,c
 21428  005E3E  A4D8               	btfss	status,2,c
 21429  005E40  D007               	goto	l214
 21430                           
 21431                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 21432  005E42  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21433  005E44  0D02               	mullw	2
 21434  005E46  0E72               	movlw	low _pBDTEntryOut
 21435  005E48  24F3               	addwf	prodl,w,c
 21436  005E4A  6ED9               	movwf	fsr2l,c
 21437  005E4C  0E00               	movlw	high _pBDTEntryOut
 21438  005E4E  D006               	goto	L14
 21439  005E50                     l214:
 21440                           
 21441                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 21442  005E50  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21443  005E52  0D02               	mullw	2
 21444  005E54  0E6C               	movlw	low _pBDTEntryIn
 21445  005E56  24F3               	addwf	prodl,w,c
 21446  005E58  6ED9               	movwf	fsr2l,c
 21447  005E5A  0E00               	movlw	high _pBDTEntryIn
 21448  005E5C                     L14:
 21449  005E5C  20F4               	addwfc	prodh,w,c
 21450  005E5E  6EDA               	movwf	fsr2h,c
 21451  005E60  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 21452  005E64  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 21453                           
 21454                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 21455  005E68  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21456  005E6C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21457  005E70  9CDF               	bcf	indf2,6,c
 21458                           
 21459                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 21460  005E72  EE20 F004          	lfsr	2,4
 21461  005E76  5007               	movf	USBConfigureEndpoint@handle,w,c
 21462  005E78  26D9               	addwf	fsr2l,f,c
 21463  005E7A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21464  005E7C  22DA               	addwfc	fsr2h,f,c
 21465  005E7E  8CDF               	bsf	indf2,6,c
 21466  005E80  0012               	return		;funcret
 21467  005E82                     __end_of_USBConfigureEndpoint:
 21468                           	opt stack 0
 21469                           tosu	equ	0xFFF
 21470                           tosh	equ	0xFFE
 21471                           tosl	equ	0xFFD
 21472                           pclath	equ	0xFFA
 21473                           tblptru	equ	0xFF8
 21474                           tblptrh	equ	0xFF7
 21475                           tblptrl	equ	0xFF6
 21476                           tablat	equ	0xFF5
 21477                           prodh	equ	0xFF4
 21478                           prodl	equ	0xFF3
 21479                           intcon	equ	0xFF2
 21480                           intcon2	equ	0xFF1
 21481                           intcon3	equ	0xFF0
 21482                           indf0	equ	0xFEF
 21483                           postinc0	equ	0xFEE
 21484                           fsr0h	equ	0xFEA
 21485                           fsr0l	equ	0xFE9
 21486                           wreg	equ	0xFE8
 21487                           indf1	equ	0xFE7
 21488                           postdec1	equ	0xFE5
 21489                           plusw1	equ	0xFE3
 21490                           fsr1h	equ	0xFE2
 21491                           fsr1l	equ	0xFE1
 21492                           indf2	equ	0xFDF
 21493                           postinc2	equ	0xFDE
 21494                           postdec2	equ	0xFDD
 21495                           plusw2	equ	0xFDB
 21496                           fsr2h	equ	0xFDA
 21497                           fsr2l	equ	0xFD9
 21498                           status	equ	0xFD8
 21499                           
 21500 ;; *************** function _USBCtrlTrfOutHandler *****************
 21501 ;; Defined at:
 21502 ;;		line 2540 in file "usb_device.c"
 21503 ;; Parameters:    Size  Location     Type
 21504 ;;		None
 21505 ;; Auto vars:     Size  Location     Type
 21506 ;;		None
 21507 ;; Return value:  Size  Location     Type
 21508 ;;                  1    wreg      void 
 21509 ;; Registers used:
 21510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21511 ;; Tracked objects:
 21512 ;;		On entry : 0/0
 21513 ;;		On exit  : 0/0
 21514 ;;		Unchanged: 0/0
 21515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21520 ;;Total ram usage:        0 bytes
 21521 ;; Hardware stack levels used:    1
 21522 ;; Hardware stack levels required when called:    2
 21523 ;; This function calls:
 21524 ;;		_USBCtrlTrfRxService
 21525 ;; This function is called by:
 21526 ;;		_USBCtrlEPService
 21527 ;; This function uses a non-reentrant model
 21528 ;;
 21529                           
 21530                           	psect	text100
 21531  006CDE                     __ptext100:
 21532                           	opt stack 0
 21533  006CDE                     _USBCtrlTrfOutHandler:
 21534                           	opt stack 26
 21535                           
 21536                           ;usb_device.c: 2542: if(controlTransferState == 2)
 21537                           
 21538                           ;incstack = 0
 21539  006CDE  0E02               	movlw	2
 21540  006CE0  0100               	movlb	0	; () banked
 21541  006CE2  19AE               	xorwf	_controlTransferState& (0+255),w,b
 21542  006CE4  A4D8               	btfss	status,2,c
 21543  006CE6  D003               	goto	l320
 21544                           
 21545                           ; BSR set to: 0
 21546                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 21547  006CE8  EC11  F01F         	call	_USBCtrlTrfRxService	;wreg free
 21548                           
 21549                           ;usb_device.c: 2545: }
 21550  006CEC  0012               	return	
 21551  006CEE                     l320:
 21552                           
 21553                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 21554  006CEE  0E00               	movlw	0
 21555  006CF0  0100               	movlb	0	; () banked
 21556  006CF2  6FAE               	movwf	_controlTransferState& (0+255),b
 21557                           
 21558                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 21559  006CF4  51AA               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 21560  006CF6  A4D8               	btfss	status,2,c
 21561  006CF8  D01F               	goto	l322
 21562                           
 21563                           ; BSR set to: 0
 21564                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 21565  006CFA  EE20 F001          	lfsr	2,1
 21566  006CFE  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21567  006D00  26D9               	addwf	fsr2l,f,c
 21568  006D02  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21569  006D04  22DA               	addwfc	fsr2h,f,c
 21570  006D06  0E08               	movlw	8
 21571  006D08  6EDF               	movwf	indf2,c
 21572                           
 21573                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21574  006D0A  EE20 F002          	lfsr	2,2
 21575  006D0E  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21576  006D10  26D9               	addwf	fsr2l,f,c
 21577  006D12  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21578  006D14  22DA               	addwfc	fsr2h,f,c
 21579  006D16  0E30               	movlw	48
 21580  006D18  6EDE               	movwf	postinc2,c
 21581  006D1A  0E0D               	movlw	13
 21582  006D1C  6EDD               	movwf	postdec2,c
 21583                           
 21584                           ; BSR set to: 0
 21585                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21586  006D1E  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21587  006D22  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21588  006D26  0E0C               	movlw	12
 21589  006D28  6EDF               	movwf	indf2,c
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21593  006D2A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21594  006D2E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21595  006D32  0E00               	movlw	0
 21596  006D34  8EDB               	bsf	plusw2,7,c
 21597                           
 21598                           ;usb_device.c: 2563: }
 21599  006D36  0012               	return	
 21600  006D38                     l322:
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 21604                           
 21605                           ; BSR set to: 0
 21606  006D38  0E00               	movlw	0
 21607  006D3A  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21608                           
 21609                           ; BSR set to: 0
 21610  006D3C  0012               	return	
 21611  006D3E                     __end_of_USBCtrlTrfOutHandler:
 21612                           	opt stack 0
 21613                           tosu	equ	0xFFF
 21614                           tosh	equ	0xFFE
 21615                           tosl	equ	0xFFD
 21616                           pclath	equ	0xFFA
 21617                           tblptru	equ	0xFF8
 21618                           tblptrh	equ	0xFF7
 21619                           tblptrl	equ	0xFF6
 21620                           tablat	equ	0xFF5
 21621                           prodh	equ	0xFF4
 21622                           prodl	equ	0xFF3
 21623                           intcon	equ	0xFF2
 21624                           intcon2	equ	0xFF1
 21625                           intcon3	equ	0xFF0
 21626                           indf0	equ	0xFEF
 21627                           postinc0	equ	0xFEE
 21628                           fsr0h	equ	0xFEA
 21629                           fsr0l	equ	0xFE9
 21630                           wreg	equ	0xFE8
 21631                           indf1	equ	0xFE7
 21632                           postdec1	equ	0xFE5
 21633                           plusw1	equ	0xFE3
 21634                           fsr1h	equ	0xFE2
 21635                           fsr1l	equ	0xFE1
 21636                           indf2	equ	0xFDF
 21637                           postinc2	equ	0xFDE
 21638                           postdec2	equ	0xFDD
 21639                           plusw2	equ	0xFDB
 21640                           fsr2h	equ	0xFDA
 21641                           fsr2l	equ	0xFD9
 21642                           status	equ	0xFD8
 21643                           
 21644 ;; *************** function _USBCtrlTrfRxService *****************
 21645 ;; Defined at:
 21646 ;;		line 1854 in file "usb_device.c"
 21647 ;; Parameters:    Size  Location     Type
 21648 ;;		None
 21649 ;; Auto vars:     Size  Location     Type
 21650 ;;  byteToRead      1    1[COMRAM] unsigned char 
 21651 ;;  i               1    0[COMRAM] unsigned char 
 21652 ;; Return value:  Size  Location     Type
 21653 ;;                  1    wreg      void 
 21654 ;; Registers used:
 21655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21656 ;; Tracked objects:
 21657 ;;		On entry : 0/0
 21658 ;;		On exit  : 0/0
 21659 ;;		Unchanged: 0/0
 21660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21665 ;;Total ram usage:        2 bytes
 21666 ;; Hardware stack levels used:    1
 21667 ;; Hardware stack levels required when called:    1
 21668 ;; This function calls:
 21669 ;;		_USBCtrlEPAllowStatusStage
 21670 ;; This function is called by:
 21671 ;;		_USBCtrlTrfOutHandler
 21672 ;; This function uses a non-reentrant model
 21673 ;;
 21674                           
 21675                           	psect	text101
 21676  003E22                     __ptext101:
 21677                           	opt stack 0
 21678  003E22                     _USBCtrlTrfRxService:
 21679                           	opt stack 26
 21680                           
 21681                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21682                           
 21683                           ;incstack = 0
 21684  003E22  0100               	movlb	0	; () banked
 21685  003E24  EE20 F001          	lfsr	2,1
 21686  003E28  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21687  003E2A  26D9               	addwf	fsr2l,f,c
 21688  003E2C  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21689  003E2E  22DA               	addwfc	fsr2h,f,c
 21690  003E30  50DF               	movf	indf2,w,c
 21691  003E32  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 21692                           
 21693                           ; BSR set to: 0
 21694                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 21695  003E34  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21696  003E36  0101               	movlb	1	; () banked
 21697  003E38  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 21698  003E3A  0E00               	movlw	0
 21699  003E3C  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 21700  003E3E  A0D8               	btfss	status,0,c
 21701                           
 21702                           ; BSR set to: 1
 21703                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 21704  003E40  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 21705                           
 21706                           ; BSR set to: 1
 21707                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 21708                           
 21709                           ; BSR set to: 1
 21710  003E44  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21711  003E46  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 21712  003E48  0E00               	movlw	0
 21713  003E4A  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 21717  003E4C  0E00               	movlw	0
 21718  003E4E  6E01               	movwf	USBCtrlTrfRxService@i,c
 21719  003E50  D011               	goto	l248
 21720  003E52                     
 21721                           ; BSR set to: 1
 21722                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21723                           
 21724                           ; BSR set to: 1
 21725  003E52  5001               	movf	USBCtrlTrfRxService@i,w,c
 21726  003E54  0D01               	mullw	1
 21727  003E56  0E38               	movlw	56
 21728  003E58  24F3               	addwf	prodl,w,c
 21729  003E5A  6ED9               	movwf	fsr2l,c
 21730  003E5C  0E0D               	movlw	13
 21731  003E5E  20F4               	addwfc	prodh,w,c
 21732  003E60  6EDA               	movwf	fsr2h,c
 21733  003E62  C131  FFE1         	movff	_outPipes,fsr1l
 21734  003E66  C132  FFE2         	movff	_outPipes+1,fsr1h
 21735  003E6A  CFDF FFE7          	movff	indf2,indf1
 21736                           
 21737                           ; BSR set to: 1
 21738  003E6E  4B31               	infsnz	_outPipes& (0+255),f,b
 21739  003E70  2B32               	incf	(_outPipes+1)& (0+255),f,b
 21740                           
 21741                           ; BSR set to: 1
 21742  003E72  2A01               	incf	USBCtrlTrfRxService@i,f,c
 21743  003E74                     l248:
 21744                           
 21745                           ; BSR set to: 1
 21746                           
 21747                           ; BSR set to: 1
 21748  003E74  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21749  003E76  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 21750  003E78  A0D8               	btfss	status,0,c
 21751  003E7A  D7EB               	goto	l249
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 21755                           
 21756                           ; BSR set to: 1
 21757  003E7C  5135               	movf	(_outPipes+4)& (0+255),w,b
 21758  003E7E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 21759  003E80  B4D8               	btfsc	status,2,c
 21760  003E82  D033               	goto	l251
 21761                           
 21762                           ; BSR set to: 1
 21763                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 21764  003E84  0100               	movlb	0	; () banked
 21765  003E86  EE20 F001          	lfsr	2,1
 21766  003E8A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21767  003E8C  26D9               	addwf	fsr2l,f,c
 21768  003E8E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21769  003E90  22DA               	addwfc	fsr2h,f,c
 21770  003E92  0E08               	movlw	8
 21771  003E94  6EDF               	movwf	indf2,c
 21772                           
 21773                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21774  003E96  EE20 F002          	lfsr	2,2
 21775  003E9A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21776  003E9C  26D9               	addwf	fsr2l,f,c
 21777  003E9E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21778  003EA0  22DA               	addwfc	fsr2h,f,c
 21779  003EA2  0E38               	movlw	56
 21780  003EA4  6EDE               	movwf	postinc2,c
 21781  003EA6  0E0D               	movlw	13
 21782  003EA8  6EDD               	movwf	postdec2,c
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21786  003EAA  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21787  003EAE  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21788  003EB2  BCDF               	btfsc	indf2,6,c
 21789  003EB4  D00D               	goto	l252
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 21793  003EB6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21794  003EBA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21795  003EBE  0E48               	movlw	72
 21796  003EC0  6EDF               	movwf	indf2,c
 21797                           
 21798                           ; BSR set to: 0
 21799                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21800  003EC2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21801  003EC6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21802  003ECA  0E00               	movlw	0
 21803  003ECC  8EDB               	bsf	plusw2,7,c
 21804                           
 21805                           ;usb_device.c: 1891: }
 21806  003ECE  0012               	return	
 21807  003ED0                     l252:
 21808                           
 21809                           ; BSR set to: 0
 21810                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 21811                           
 21812                           ; BSR set to: 0
 21813  003ED0  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21814  003ED4  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21815  003ED8  0E08               	movlw	8
 21816  003EDA  6EDF               	movwf	indf2,c
 21817                           
 21818                           ; BSR set to: 0
 21819                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21820  003EDC  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21821  003EE0  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21822  003EE4  0E00               	movlw	0
 21823  003EE6  8EDB               	bsf	plusw2,7,c
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 21827  003EE8  0012               	return	
 21828  003EEA                     l251:
 21829                           
 21830                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 21831                           
 21832                           ; BSR set to: 0
 21833  003EEA  0100               	movlb	0	; () banked
 21834  003EEC  EE20 F001          	lfsr	2,1
 21835  003EF0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21836  003EF2  26D9               	addwf	fsr2l,f,c
 21837  003EF4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21838  003EF6  22DA               	addwfc	fsr2h,f,c
 21839  003EF8  0E08               	movlw	8
 21840  003EFA  6EDF               	movwf	indf2,c
 21841                           
 21842                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21843  003EFC  EE20 F002          	lfsr	2,2
 21844  003F00  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21845  003F02  26D9               	addwf	fsr2l,f,c
 21846  003F04  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21847  003F06  22DA               	addwfc	fsr2h,f,c
 21848  003F08  0E30               	movlw	48
 21849  003F0A  6EDE               	movwf	postinc2,c
 21850  003F0C  0E0D               	movlw	13
 21851  003F0E  6EDD               	movwf	postdec2,c
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21855  003F10  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21856  003F14  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21857  003F18  0E04               	movlw	4
 21858  003F1A  6EDF               	movwf	indf2,c
 21859                           
 21860                           ; BSR set to: 0
 21861                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21862  003F1C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21863  003F20  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21864  003F24  0E00               	movlw	0
 21865  003F26  8EDB               	bsf	plusw2,7,c
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 21869                           
 21870                           ; BSR set to: 0
 21871  003F28  0101               	movlb	1	; () banked
 21872  003F2A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21873                           
 21874                           ; BSR set to: 1
 21875                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 21876  003F2C  0100               	movlb	0	; () banked
 21877  003F2E  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21878  003F30  A4D8               	btfss	status,2,c
 21879  003F32  0012               	return	
 21880                           
 21881                           ; BSR set to: 0
 21882                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 21883  003F34  EC3F  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21884  003F38  0012               	return	
 21885  003F3A                     __end_of_USBCtrlTrfRxService:
 21886                           	opt stack 0
 21887                           tosu	equ	0xFFF
 21888                           tosh	equ	0xFFE
 21889                           tosl	equ	0xFFD
 21890                           pclath	equ	0xFFA
 21891                           tblptru	equ	0xFF8
 21892                           tblptrh	equ	0xFF7
 21893                           tblptrl	equ	0xFF6
 21894                           tablat	equ	0xFF5
 21895                           prodh	equ	0xFF4
 21896                           prodl	equ	0xFF3
 21897                           intcon	equ	0xFF2
 21898                           intcon2	equ	0xFF1
 21899                           intcon3	equ	0xFF0
 21900                           indf0	equ	0xFEF
 21901                           postinc0	equ	0xFEE
 21902                           fsr0h	equ	0xFEA
 21903                           fsr0l	equ	0xFE9
 21904                           wreg	equ	0xFE8
 21905                           indf1	equ	0xFE7
 21906                           postdec1	equ	0xFE5
 21907                           plusw1	equ	0xFE3
 21908                           fsr1h	equ	0xFE2
 21909                           fsr1l	equ	0xFE1
 21910                           indf2	equ	0xFDF
 21911                           postinc2	equ	0xFDE
 21912                           postdec2	equ	0xFDD
 21913                           plusw2	equ	0xFDB
 21914                           fsr2h	equ	0xFDA
 21915                           fsr2l	equ	0xFD9
 21916                           status	equ	0xFD8
 21917                           
 21918 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21919 ;; Defined at:
 21920 ;;		line 1418 in file "usb_device.c"
 21921 ;; Parameters:    Size  Location     Type
 21922 ;;		None
 21923 ;; Auto vars:     Size  Location     Type
 21924 ;;		None
 21925 ;; Return value:  Size  Location     Type
 21926 ;;                  1    wreg      void 
 21927 ;; Registers used:
 21928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21929 ;; Tracked objects:
 21930 ;;		On entry : 0/0
 21931 ;;		On exit  : 0/0
 21932 ;;		Unchanged: 0/0
 21933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21938 ;;Total ram usage:        0 bytes
 21939 ;; Hardware stack levels used:    1
 21940 ;; This function calls:
 21941 ;;		Nothing
 21942 ;; This function is called by:
 21943 ;;		_USBDeviceTasks
 21944 ;;		_USBCtrlEPServiceComplete
 21945 ;;		_USBCtrlTrfRxService
 21946 ;; This function uses a non-reentrant model
 21947 ;;
 21948                           
 21949                           	psect	text102
 21950  00507E                     __ptext102:
 21951                           	opt stack 0
 21952  00507E                     _USBCtrlEPAllowStatusStage:
 21953                           	opt stack 26
 21954                           
 21955                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 21956                           
 21957                           ;incstack = 0
 21958  00507E  0100               	movlb	0	; () banked
 21959  005080  51A7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21960  005082  A4D8               	btfss	status,2,c
 21961  005084  0012               	return	
 21962                           
 21963                           ; BSR set to: 0
 21964                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 21965  005086  0E01               	movlw	1
 21966  005088  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21967                           
 21968                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 21969  00508A  51A6               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21970  00508C  A4D8               	btfss	status,2,c
 21971  00508E  0012               	return	
 21972                           
 21973                           ; BSR set to: 0
 21974                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 21975  005090  0E01               	movlw	1
 21976  005092  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21977                           
 21978                           ; BSR set to: 0
 21979                           ;usb_device.c: 1434: if(controlTransferState == 2)
 21980  005094  0E02               	movlw	2
 21981  005096  19AE               	xorwf	_controlTransferState& (0+255),w,b
 21982  005098  A4D8               	btfss	status,2,c
 21983  00509A  D015               	goto	l202
 21984                           
 21985                           ; BSR set to: 0
 21986                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 21987  00509C  EE20 F001          	lfsr	2,1
 21988  0050A0  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21989  0050A2  26D9               	addwf	fsr2l,f,c
 21990  0050A4  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21991  0050A6  22DA               	addwfc	fsr2h,f,c
 21992  0050A8  0E00               	movlw	0
 21993  0050AA  6EDF               	movwf	indf2,c
 21994                           
 21995                           ; BSR set to: 0
 21996                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21997  0050AC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21998  0050B0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21999  0050B4  0E48               	movlw	72
 22000  0050B6  6EDF               	movwf	indf2,c
 22001                           
 22002                           ; BSR set to: 0
 22003                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22004  0050B8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22005  0050BC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22006  0050C0  0E00               	movlw	0
 22007  0050C2  8EDB               	bsf	plusw2,7,c
 22008                           
 22009                           ;usb_device.c: 1439: }
 22010  0050C4  0012               	return	
 22011  0050C6                     l202:
 22012                           
 22013                           ; BSR set to: 0
 22014                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 22015                           
 22016                           ; BSR set to: 0
 22017  0050C6  05AE               	decf	_controlTransferState& (0+255),w,b
 22018  0050C8  A4D8               	btfss	status,2,c
 22019  0050CA  0012               	return	
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 22023  0050CC  0E00               	movlw	0
 22024  0050CE  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22025                           
 22026                           ; BSR set to: 0
 22027                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 22028  0050D0  EE20 F001          	lfsr	2,1
 22029  0050D4  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22030  0050D6  26D9               	addwf	fsr2l,f,c
 22031  0050D8  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22032  0050DA  22DA               	addwfc	fsr2h,f,c
 22033  0050DC  0E08               	movlw	8
 22034  0050DE  6EDF               	movwf	indf2,c
 22035                           
 22036                           ; BSR set to: 0
 22037                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22038  0050E0  EE20 F002          	lfsr	2,2
 22039  0050E4  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22040  0050E6  26D9               	addwf	fsr2l,f,c
 22041  0050E8  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22042  0050EA  22DA               	addwfc	fsr2h,f,c
 22043  0050EC  0E30               	movlw	48
 22044  0050EE  6EDE               	movwf	postinc2,c
 22045  0050F0  0E0D               	movlw	13
 22046  0050F2  6EDD               	movwf	postdec2,c
 22047                           
 22048                           ; BSR set to: 0
 22049                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 22050  0050F4  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22051  0050F8  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22052  0050FC  0E04               	movlw	4
 22053  0050FE  6EDF               	movwf	indf2,c
 22054                           
 22055                           ; BSR set to: 0
 22056                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22057  005100  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22058  005104  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22059  005108  0E00               	movlw	0
 22060  00510A  8EDB               	bsf	plusw2,7,c
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 22064  00510C  0E01               	movlw	1
 22065  00510E  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 22069  005110  EE20 F001          	lfsr	2,1
 22070  005114  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22071  005116  26D9               	addwf	fsr2l,f,c
 22072  005118  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22073  00511A  22DA               	addwfc	fsr2h,f,c
 22074  00511C  0E08               	movlw	8
 22075  00511E  6EDF               	movwf	indf2,c
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22079  005120  EE20 F002          	lfsr	2,2
 22080  005124  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22081  005126  26D9               	addwf	fsr2l,f,c
 22082  005128  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22083  00512A  22DA               	addwfc	fsr2h,f,c
 22084  00512C  0E30               	movlw	48
 22085  00512E  6EDE               	movwf	postinc2,c
 22086  005130  0E0D               	movlw	13
 22087  005132  6EDD               	movwf	postdec2,c
 22088                           
 22089                           ; BSR set to: 0
 22090                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 22091  005134  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22092  005138  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22093  00513C  0E80               	movlw	128
 22094  00513E  6EDF               	movwf	indf2,c
 22095                           
 22096                           ; BSR set to: 0
 22097                           
 22098                           ; BSR set to: 0
 22099                           
 22100                           ; BSR set to: 0
 22101  005140  0012               	return	
 22102  005142                     __end_of_USBCtrlEPAllowStatusStage:
 22103                           	opt stack 0
 22104                           tosu	equ	0xFFF
 22105                           tosh	equ	0xFFE
 22106                           tosl	equ	0xFFD
 22107                           pclath	equ	0xFFA
 22108                           tblptru	equ	0xFF8
 22109                           tblptrh	equ	0xFF7
 22110                           tblptrl	equ	0xFF6
 22111                           tablat	equ	0xFF5
 22112                           prodh	equ	0xFF4
 22113                           prodl	equ	0xFF3
 22114                           intcon	equ	0xFF2
 22115                           intcon2	equ	0xFF1
 22116                           intcon3	equ	0xFF0
 22117                           indf0	equ	0xFEF
 22118                           postinc0	equ	0xFEE
 22119                           fsr0h	equ	0xFEA
 22120                           fsr0l	equ	0xFE9
 22121                           wreg	equ	0xFE8
 22122                           indf1	equ	0xFE7
 22123                           postdec1	equ	0xFE5
 22124                           plusw1	equ	0xFE3
 22125                           fsr1h	equ	0xFE2
 22126                           fsr1l	equ	0xFE1
 22127                           indf2	equ	0xFDF
 22128                           postinc2	equ	0xFDE
 22129                           postdec2	equ	0xFDD
 22130                           plusw2	equ	0xFDB
 22131                           fsr2h	equ	0xFDA
 22132                           fsr2l	equ	0xFD9
 22133                           status	equ	0xFD8
 22134                           
 22135 ;; *************** function _USBCtrlTrfInHandler *****************
 22136 ;; Defined at:
 22137 ;;		line 2594 in file "usb_device.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;		None
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;  lastDTS         1    1[COMRAM] unsigned char 
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  1    wreg      void 
 22144 ;; Registers used:
 22145 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/0
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22155 ;;Total ram usage:        1 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:    1
 22158 ;; This function calls:
 22159 ;;		_USBCtrlTrfTxService
 22160 ;; This function is called by:
 22161 ;;		_USBCtrlEPService
 22162 ;; This function uses a non-reentrant model
 22163 ;;
 22164                           
 22165                           	psect	text103
 22166  004EF2                     __ptext103:
 22167                           	opt stack 0
 22168  004EF2                     _USBCtrlTrfInHandler:
 22169                           	opt stack 27
 22170                           
 22171                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;incstack = 0
 22175  004EF2  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22176  004EF6  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22177  004EFA  0100               	movlb	0	; () banked
 22178  004EFC  0E00               	movlw	0
 22179  004EFE  BCDF               	btfsc	indf2,6,c
 22180  004F00  0E01               	movlw	1
 22181  004F02  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 22185  004F04  0E04               	movlw	4
 22186  004F06  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 22187  004F08  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 22188  004F0A  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22189  004F0C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22190                           
 22191                           ; BSR set to: 0
 22192                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 22193  004F0E  0E08               	movlw	8
 22194  004F10  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 22195  004F12  A4D8               	btfss	status,2,c
 22196  004F14  D00D               	goto	l329
 22197                           
 22198                           ; BSR set to: 0
 22199                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 22200  004F16  010D               	movlb	13	; () banked
 22201  004F18  5132               	movf	50,w,b	;volatile
 22202  004F1A  0B7F               	andlw	127
 22203  004F1C  010F               	movlb	15	; () banked
 22204  004F1E  6F38               	movwf	56,b	;volatile
 22205                           
 22206                           ; BSR set to: 15
 22207                           ;usb_device.c: 2609: if(UADDR != 0u)
 22208  004F20  5138               	movf	56,w,b	;volatile
 22209  004F22  B4D8               	btfsc	status,2,c
 22210  004F24  D002               	goto	l328
 22211                           
 22212                           ; BSR set to: 15
 22213                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 22214  004F26  0E10               	movlw	16
 22215  004F28  D001               	goto	L15
 22216  004F2A                     l328:
 22217                           
 22218                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 22219                           
 22220                           ; BSR set to: 0
 22221  004F2A  0E04               	movlw	4
 22222  004F2C                     L15:
 22223  004F2C  0100               	movlb	0	; () banked
 22224  004F2E  6FB0               	movwf	_USBDeviceState& (0+255),b
 22225  004F30                     l329:
 22226                           
 22227                           ; BSR set to: 0
 22228                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 22229                           
 22230                           ; BSR set to: 0
 22231                           
 22232                           ; BSR set to: 0
 22233  004F30  05AE               	decf	_controlTransferState& (0+255),w,b
 22234  004F32  A4D8               	btfss	status,2,c
 22235  004F34  D03B               	goto	l330
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 22239  004F36  EE20 F002          	lfsr	2,2
 22240  004F3A  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22241  004F3C  26D9               	addwf	fsr2l,f,c
 22242  004F3E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22243  004F40  22DA               	addwfc	fsr2h,f,c
 22244  004F42  0E38               	movlw	56
 22245  004F44  6EDE               	movwf	postinc2,c
 22246  004F46  0E0D               	movlw	13
 22247  004F48  6EDD               	movwf	postdec2,c
 22248                           
 22249                           ; BSR set to: 0
 22250                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 22251  004F4A  EC13  F027         	call	_USBCtrlTrfTxService	;wreg free
 22252                           
 22253                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 22254  004F4E  0E02               	movlw	2
 22255  004F50  0100               	movlb	0	; () banked
 22256  004F52  19AF               	xorwf	_shortPacketStatus& (0+255),w,b
 22257  004F54  A4D8               	btfss	status,2,c
 22258  004F56  D00D               	goto	l331
 22259                           
 22260                           ; BSR set to: 0
 22261                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 22262  004F58  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22263  004F5C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22264  004F60  0E04               	movlw	4
 22265  004F62  6EDF               	movwf	indf2,c
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22269  004F64  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22270  004F68  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22271  004F6C  0E00               	movlw	0
 22272  004F6E  8EDB               	bsf	plusw2,7,c
 22273                           
 22274                           ;usb_device.c: 2635: }
 22275  004F70  0012               	return	
 22276  004F72                     l331:
 22277                           
 22278                           ; BSR set to: 0
 22279                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 22280                           
 22281                           ; BSR set to: 0
 22282  004F72  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 22283  004F74  A4D8               	btfss	status,2,c
 22284  004F76  D00D               	goto	l333
 22285                           
 22286                           ; BSR set to: 0
 22287                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 22288  004F78  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22289  004F7C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22290  004F80  0E48               	movlw	72
 22291  004F82  6EDF               	movwf	indf2,c
 22292                           
 22293                           ; BSR set to: 0
 22294                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22295  004F84  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22296  004F88  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22297  004F8C  0E00               	movlw	0
 22298  004F8E  8EDB               	bsf	plusw2,7,c
 22299                           
 22300                           ;usb_device.c: 2642: }
 22301  004F90  0012               	return	
 22302  004F92                     l333:
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 22306                           
 22307                           ; BSR set to: 0
 22308  004F92  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22309  004F96  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22310  004F9A  0E08               	movlw	8
 22311  004F9C  6EDF               	movwf	indf2,c
 22312                           
 22313                           ; BSR set to: 0
 22314                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22315  004F9E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22316  004FA2  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22317  004FA6  0E00               	movlw	0
 22318  004FA8  8EDB               	bsf	plusw2,7,c
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 22322                           
 22323                           ; BSR set to: 0
 22324  004FAA  0012               	return	
 22325  004FAC                     l330:
 22326                           
 22327                           ; BSR set to: 0
 22328                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 22329  004FAC  0101               	movlb	1	; () banked
 22330  004FAE  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 22331                           
 22332                           ; BSR set to: 1
 22333                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 22334                           
 22335                           ; BSR set to: 1
 22336  004FB0  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 22337                           
 22338                           ; BSR set to: 1
 22339                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 22340                           
 22341                           ; BSR set to: 1
 22342  004FB2  0E00               	movlw	0
 22343  004FB4  0100               	movlb	0	; () banked
 22344  004FB6  6FAE               	movwf	_controlTransferState& (0+255),b
 22345  004FB8  0012               	return	
 22346  004FBA                     __end_of_USBCtrlTrfInHandler:
 22347                           	opt stack 0
 22348                           tosu	equ	0xFFF
 22349                           tosh	equ	0xFFE
 22350                           tosl	equ	0xFFD
 22351                           pclath	equ	0xFFA
 22352                           tblptru	equ	0xFF8
 22353                           tblptrh	equ	0xFF7
 22354                           tblptrl	equ	0xFF6
 22355                           tablat	equ	0xFF5
 22356                           prodh	equ	0xFF4
 22357                           prodl	equ	0xFF3
 22358                           intcon	equ	0xFF2
 22359                           intcon2	equ	0xFF1
 22360                           intcon3	equ	0xFF0
 22361                           indf0	equ	0xFEF
 22362                           postinc0	equ	0xFEE
 22363                           fsr0h	equ	0xFEA
 22364                           fsr0l	equ	0xFE9
 22365                           wreg	equ	0xFE8
 22366                           indf1	equ	0xFE7
 22367                           postdec1	equ	0xFE5
 22368                           plusw1	equ	0xFE3
 22369                           fsr1h	equ	0xFE2
 22370                           fsr1l	equ	0xFE1
 22371                           indf2	equ	0xFDF
 22372                           postinc2	equ	0xFDE
 22373                           postdec2	equ	0xFDD
 22374                           plusw2	equ	0xFDB
 22375                           fsr2h	equ	0xFDA
 22376                           fsr2l	equ	0xFD9
 22377                           status	equ	0xFD8
 22378                           
 22379 ;; *************** function _USBCtrlTrfTxService *****************
 22380 ;; Defined at:
 22381 ;;		line 1773 in file "usb_device.c"
 22382 ;; Parameters:    Size  Location     Type
 22383 ;;		None
 22384 ;; Auto vars:     Size  Location     Type
 22385 ;;  byteToSend      1    0[COMRAM] unsigned char 
 22386 ;; Return value:  Size  Location     Type
 22387 ;;                  1    wreg      void 
 22388 ;; Registers used:
 22389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22390 ;; Tracked objects:
 22391 ;;		On entry : 0/0
 22392 ;;		On exit  : 0/0
 22393 ;;		Unchanged: 0/0
 22394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22399 ;;Total ram usage:        1 bytes
 22400 ;; Hardware stack levels used:    1
 22401 ;; This function calls:
 22402 ;;		Nothing
 22403 ;; This function is called by:
 22404 ;;		_USBCtrlEPAllowDataStage
 22405 ;;		_USBCtrlTrfInHandler
 22406 ;; This function uses a non-reentrant model
 22407 ;;
 22408                           
 22409                           	psect	text104
 22410  004E26                     __ptext104:
 22411                           	opt stack 0
 22412  004E26                     _USBCtrlTrfTxService:
 22413                           	opt stack 25
 22414                           
 22415                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 22416                           
 22417                           ; BSR set to: 0
 22418                           ;incstack = 0
 22419  004E26  0E08               	movlw	8
 22420  004E28  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 22421                           
 22422                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 22423  004E2A  0100               	movlb	0	; () banked
 22424  004E2C  516B               	movf	(_inPipes+5)& (0+255),w,b
 22425  004E2E  E110               	bnz	l10224
 22426  004E30  0E08               	movlw	8
 22427  004E32  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 22428  004E34  B0D8               	btfsc	status,0,c
 22429  004E36  D00C               	goto	l235
 22430                           
 22431                           ; BSR set to: 0
 22432                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 22433  004E38  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 22434                           
 22435                           ; BSR set to: 0
 22436                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 22437  004E3C  51AF               	movf	_shortPacketStatus& (0+255),w,b
 22438  004E3E  A4D8               	btfss	status,2,c
 22439  004E40  D002               	goto	l233
 22440                           
 22441                           ; BSR set to: 0
 22442                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 22443  004E42  0E01               	movlw	1
 22444  004E44  D004               	goto	L16
 22445  004E46                     l233:
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 22449                           
 22450                           ; BSR set to: 0
 22451  004E46  05AF               	decf	_shortPacketStatus& (0+255),w,b
 22452  004E48  A4D8               	btfss	status,2,c
 22453  004E4A  D002               	goto	l235
 22454                           
 22455                           ; BSR set to: 0
 22456                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 22457  004E4C  0E02               	movlw	2
 22458  004E4E                     L16:
 22459  004E4E  6FAF               	movwf	_shortPacketStatus& (0+255),b
 22460  004E50                     l235:
 22461  004E50                     l10224:
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 22465  004E50  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22466  004E52  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 22467  004E54  0E00               	movlw	0
 22468  004E56  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 22469                           
 22470                           ; BSR set to: 0
 22471                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 22472  004E58  EE20 F001          	lfsr	2,1
 22473  004E5C  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22474  004E5E  26D9               	addwf	fsr2l,f,c
 22475  004E60  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22476  004E62  22DA               	addwfc	fsr2h,f,c
 22477  004E64  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 22481  004E68  0E38               	movlw	56
 22482  004E6A  6F8E               	movwf	_pDst& (0+255),b
 22483  004E6C  0E0D               	movlw	13
 22484  004E6E  6F8F               	movwf	(_pDst+1)& (0+255),b
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22488  004E70  A169               	btfss	(_inPipes+3)& (0+255),0,b
 22489  004E72  D01C               	goto	l237
 22490  004E74  D03A               	goto	l241
 22491  004E76                     
 22492                           ; BSR set to: 0
 22493                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 22494                           
 22495                           ; BSR set to: 0
 22496  004E76  C066  FFF6         	movff	_inPipes,tblptrl
 22497  004E7A  C067  FFF7         	movff	_inPipes+1,tblptrh
 22498  004E7E  6AF8               	clrf	tblptru,c
 22499  004E80  C08E  FFD9         	movff	_pDst,fsr2l
 22500  004E84  C08F  FFDA         	movff	_pDst+1,fsr2h
 22501  004E88  0E0E               	movlw	(high __ramtop+-1)
 22502  004E8A  64F7               	cpfsgt	tblptrh,c
 22503  004E8C  D003               	bra	u7017
 22504  004E8E  0008               	tblrd		*
 22505  004E90  50F5               	movf	tablat,w,c
 22506  004E92  D005               	bra	u7010
 22507  004E94                     u7017:
 22508  004E94  CFF6 FFE9          	movff	tblptrl,fsr0l
 22509  004E98  CFF7 FFEA          	movff	tblptrh,fsr0h
 22510  004E9C  50EF               	movf	indf0,w,c
 22511  004E9E                     u7010:
 22512  004E9E  6EDF               	movwf	indf2,c
 22513  004EA0  0100               	movlb	0	; () banked
 22514  004EA2  4B66               	infsnz	_inPipes& (0+255),f,b
 22515  004EA4  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22516                           
 22517                           ; BSR set to: 0
 22518  004EA6  4B8E               	infsnz	_pDst& (0+255),f,b
 22519  004EA8  2B8F               	incf	(_pDst+1)& (0+255),f,b
 22520                           
 22521                           ; BSR set to: 0
 22522                           ;usb_device.c: 1816: byteToSend--;
 22523  004EAA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22524  004EAC                     l237:
 22525                           
 22526                           ; BSR set to: 0
 22527                           
 22528                           ; BSR set to: 0
 22529  004EAC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22530  004EAE  B4D8               	btfsc	status,2,c
 22531  004EB0  0012               	return	
 22532  004EB2  D7E1               	goto	l238
 22533  004EB4                     
 22534                           ; BSR set to: 0
 22535                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 22536                           
 22537                           ; BSR set to: 0
 22538  004EB4  C066  FFF6         	movff	_inPipes,tblptrl
 22539  004EB8  C067  FFF7         	movff	_inPipes+1,tblptrh
 22540  004EBC  6AF8               	clrf	tblptru,c
 22541  004EBE  C08E  FFD9         	movff	_pDst,fsr2l
 22542  004EC2  C08F  FFDA         	movff	_pDst+1,fsr2h
 22543  004EC6  0E0E               	movlw	(high __ramtop+-1)
 22544  004EC8  64F7               	cpfsgt	tblptrh,c
 22545  004ECA  D003               	bra	u7037
 22546  004ECC  0008               	tblrd		*
 22547  004ECE  50F5               	movf	tablat,w,c
 22548  004ED0  D005               	bra	u7030
 22549  004ED2                     u7037:
 22550  004ED2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22551  004ED6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22552  004EDA  50EF               	movf	indf0,w,c
 22553  004EDC                     u7030:
 22554  004EDC  6EDF               	movwf	indf2,c
 22555  004EDE  0100               	movlb	0	; () banked
 22556  004EE0  4B66               	infsnz	_inPipes& (0+255),f,b
 22557  004EE2  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22558                           
 22559                           ; BSR set to: 0
 22560  004EE4  4B8E               	infsnz	_pDst& (0+255),f,b
 22561  004EE6  2B8F               	incf	(_pDst+1)& (0+255),f,b
 22562                           
 22563                           ; BSR set to: 0
 22564                           ;usb_device.c: 1824: byteToSend--;
 22565  004EE8  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22566  004EEA                     l241:
 22567                           
 22568                           ; BSR set to: 0
 22569                           
 22570                           ; BSR set to: 0
 22571  004EEA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22572  004EEC  B4D8               	btfsc	status,2,c
 22573  004EEE  0012               	return	
 22574  004EF0  D7E1               	goto	l242
 22575  004EF2                     __end_of_USBCtrlTrfTxService:
 22576                           	opt stack 0
 22577                           tosu	equ	0xFFF
 22578                           tosh	equ	0xFFE
 22579                           tosl	equ	0xFFD
 22580                           pclath	equ	0xFFA
 22581                           tblptru	equ	0xFF8
 22582                           tblptrh	equ	0xFF7
 22583                           tblptrl	equ	0xFF6
 22584                           tablat	equ	0xFF5
 22585                           prodh	equ	0xFF4
 22586                           prodl	equ	0xFF3
 22587                           intcon	equ	0xFF2
 22588                           intcon2	equ	0xFF1
 22589                           intcon3	equ	0xFF0
 22590                           indf0	equ	0xFEF
 22591                           postinc0	equ	0xFEE
 22592                           fsr0h	equ	0xFEA
 22593                           fsr0l	equ	0xFE9
 22594                           wreg	equ	0xFE8
 22595                           indf1	equ	0xFE7
 22596                           postdec1	equ	0xFE5
 22597                           plusw1	equ	0xFE3
 22598                           fsr1h	equ	0xFE2
 22599                           fsr1l	equ	0xFE1
 22600                           indf2	equ	0xFDF
 22601                           postinc2	equ	0xFDE
 22602                           postdec2	equ	0xFDD
 22603                           plusw2	equ	0xFDB
 22604                           fsr2h	equ	0xFDA
 22605                           fsr2l	equ	0xFD9
 22606                           status	equ	0xFD8
 22607                           
 22608 ;; *************** function _APP_DeviceMSDTasks *****************
 22609 ;; Defined at:
 22610 ;;		line 110 in file "app_device_msd.c"
 22611 ;; Parameters:    Size  Location     Type
 22612 ;;		None
 22613 ;; Auto vars:     Size  Location     Type
 22614 ;;		None
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  1    wreg      void 
 22617 ;; Registers used:
 22618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22628 ;;Total ram usage:        0 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:   11
 22631 ;; This function calls:
 22632 ;;		_MSDTasks
 22633 ;; This function is called by:
 22634 ;;		_main
 22635 ;; This function uses a non-reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text105
 22639  007CD2                     __ptext105:
 22640                           	opt stack 0
 22641  007CD2                     _APP_DeviceMSDTasks:
 22642                           	opt stack 19
 22643                           
 22644                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 22645                           
 22646                           ; BSR set to: 0
 22647                           ;incstack = 0
 22648  007CD2  0E20               	movlw	32
 22649  007CD4  0100               	movlb	0	; () banked
 22650  007CD6  61B0               	cpfslt	_USBDeviceState& (0+255),b
 22651  007CD8  D001               	goto	l1002
 22652  007CDA  0012               	return	
 22653  007CDC                     l1002:
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 22657  007CDC  B265               	btfsc	3941,1,c	;volatile
 22658  007CDE  0012               	return	
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 22662                           
 22663                           ; BSR set to: 0
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 22667  007CE0  EC4E  F00E         	call	_MSDTasks	;wreg free
 22668  007CE4  0012               	return		;funcret
 22669  007CE6                     __end_of_APP_DeviceMSDTasks:
 22670                           	opt stack 0
 22671                           tosu	equ	0xFFF
 22672                           tosh	equ	0xFFE
 22673                           tosl	equ	0xFFD
 22674                           pclath	equ	0xFFA
 22675                           tblptru	equ	0xFF8
 22676                           tblptrh	equ	0xFF7
 22677                           tblptrl	equ	0xFF6
 22678                           tablat	equ	0xFF5
 22679                           prodh	equ	0xFF4
 22680                           prodl	equ	0xFF3
 22681                           intcon	equ	0xFF2
 22682                           intcon2	equ	0xFF1
 22683                           intcon3	equ	0xFF0
 22684                           indf0	equ	0xFEF
 22685                           postinc0	equ	0xFEE
 22686                           fsr0h	equ	0xFEA
 22687                           fsr0l	equ	0xFE9
 22688                           wreg	equ	0xFE8
 22689                           indf1	equ	0xFE7
 22690                           postdec1	equ	0xFE5
 22691                           plusw1	equ	0xFE3
 22692                           fsr1h	equ	0xFE2
 22693                           fsr1l	equ	0xFE1
 22694                           indf2	equ	0xFDF
 22695                           postinc2	equ	0xFDE
 22696                           postdec2	equ	0xFDD
 22697                           plusw2	equ	0xFDB
 22698                           fsr2h	equ	0xFDA
 22699                           fsr2l	equ	0xFD9
 22700                           status	equ	0xFD8
 22701                           
 22702 ;; *************** function _MSDTasks *****************
 22703 ;; Defined at:
 22704 ;;		line 335 in file "usb_device_msd.c"
 22705 ;; Parameters:    Size  Location     Type
 22706 ;;		None
 22707 ;; Auto vars:     Size  Location     Type
 22708 ;;  i               1   81[COMRAM] unsigned char 
 22709 ;; Return value:  Size  Location     Type
 22710 ;;                  1    wreg      unsigned char 
 22711 ;; Registers used:
 22712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22713 ;; Tracked objects:
 22714 ;;		On entry : 0/0
 22715 ;;		On exit  : 0/0
 22716 ;;		Unchanged: 0/0
 22717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22719 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22722 ;;Total ram usage:        6 bytes
 22723 ;; Hardware stack levels used:    1
 22724 ;; Hardware stack levels required when called:   10
 22725 ;; This function calls:
 22726 ;;		_MSDProcessCommand
 22727 ;;		_USBStallEndpoint
 22728 ;;		_USBTransferOnePacket
 22729 ;; This function is called by:
 22730 ;;		_APP_DeviceMSDTasks
 22731 ;; This function uses a non-reentrant model
 22732 ;;
 22733                           
 22734                           	psect	text106
 22735  001C9C                     __ptext106:
 22736                           	opt stack 0
 22737  001C9C                     _MSDTasks:
 22738                           	opt stack 19
 22739                           
 22740                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 22741                           
 22742                           ;incstack = 0
 22743  001C9C  0E20               	movlw	32
 22744  001C9E  0100               	movlb	0	; () banked
 22745  001CA0  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 22746  001CA2  A4D8               	btfss	status,2,c
 22747  001CA4  0012               	return	
 22748  001CA6  D117               	goto	l554
 22749  001CA8                     
 22750                           ; BSR set to: 0
 22751                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 22752                           
 22753                           ; BSR set to: 0
 22754  001CA8  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 22755  001CAA  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22756  001CAC  B4D8               	btfsc	status,2,c
 22757  001CAE  D006               	goto	u10140
 22758                           
 22759                           ; BSR set to: 0
 22760  001CB0  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22761  001CB4  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22762  001CB8  BEDF               	btfsc	indf2,7,c
 22763  001CBA  0012               	return	
 22764  001CBC                     u10140:
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 22768                           
 22769                           ; BSR set to: 0
 22770  001CBC  0E00               	movlw	0
 22771  001CBE  6E52               	movwf	MSDTasks@i,c
 22772  001CC0                     l13292:
 22773                           
 22774                           ; BSR set to: 0
 22775  001CC0  0E1E               	movlw	30
 22776  001CC2  6452               	cpfsgt	MSDTasks@i,c
 22777  001CC4  D001               	goto	l559
 22778  001CC6  D014               	goto	u10160
 22779  001CC8                     l559:
 22780                           
 22781                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 22782                           
 22783                           ; BSR set to: 0
 22784  001CC8  5052               	movf	MSDTasks@i,w,c
 22785  001CCA  0D01               	mullw	1
 22786  001CCC  0E40               	movlw	64
 22787  001CCE  24F3               	addwf	prodl,w,c
 22788  001CD0  6ED9               	movwf	fsr2l,c
 22789  001CD2  0E0D               	movlw	13
 22790  001CD4  20F4               	addwfc	prodh,w,c
 22791  001CD6  6EDA               	movwf	fsr2h,c
 22792  001CD8  5052               	movf	MSDTasks@i,w,c
 22793  001CDA  0D01               	mullw	1
 22794  001CDC  0E00               	movlw	low _gblCBW
 22795  001CDE  24F3               	addwf	prodl,w,c
 22796  001CE0  6EE1               	movwf	fsr1l,c
 22797  001CE2  0E01               	movlw	high _gblCBW
 22798  001CE4  20F4               	addwfc	prodh,w,c
 22799  001CE6  6EE2               	movwf	fsr1h,c
 22800  001CE8  CFDF FFE7          	movff	indf2,indf1
 22801  001CEC  2A52               	incf	MSDTasks@i,f,c
 22802  001CEE  D7E8               	goto	l13292
 22803  001CF0                     u10160:
 22804                           
 22805                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 22806  001CF0  0100               	movlb	0	; () banked
 22807  001CF2  EE20 F001          	lfsr	2,1
 22808  001CF6  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 22809  001CF8  26D9               	addwf	fsr2l,f,c
 22810  001CFA  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22811  001CFC  22DA               	addwfc	fsr2h,f,c
 22812  001CFE  0E1F               	movlw	31
 22813  001D00  18DE               	xorwf	postinc2,w,c
 22814  001D02  A4D8               	btfss	status,2,c
 22815  001D04  D072               	goto	l561
 22816                           
 22817                           ; BSR set to: 0
 22818  001D06  0E55               	movlw	85
 22819  001D08  0101               	movlb	1	; () banked
 22820  001D0A  1900               	xorwf	_gblCBW& (0+255),w,b
 22821  001D0C  E16E               	bnz	l561
 22822  001D0E  0E53               	movlw	83
 22823  001D10  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 22824  001D12  E16B               	bnz	l561
 22825  001D14  0E42               	movlw	66
 22826  001D16  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 22827  001D18  E168               	bnz	l561
 22828  001D1A  0E43               	movlw	67
 22829  001D1C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 22830  001D1E  A4D8               	btfss	status,2,c
 22831  001D20  D064               	goto	l561
 22832                           
 22833                           ; BSR set to: 1
 22834                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 22835  001D22  0E01               	movlw	1
 22836  001D24  0100               	movlb	0	; () banked
 22837  001D26  6F9A               	movwf	_MSDCBWValid& (0+255),b
 22838                           
 22839                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 22840  001D28  0101               	movlb	1	; () banked
 22841  001D2A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22842  001D2C  A4D8               	btfss	status,2,c
 22843  001D2E  D052               	goto	l562
 22844                           
 22845                           ; BSR set to: 1
 22846  001D30  0E11               	movlw	17
 22847  001D32  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 22848  001D34  D04F               	goto	l562
 22849                           
 22850                           ; BSR set to: 1
 22851  001D36  510E               	movf	(_gblCBW+14)& (0+255),w,b
 22852  001D38  B4D8               	btfsc	status,2,c
 22853  001D3A  D04C               	goto	l562
 22854                           
 22855                           ; BSR set to: 1
 22856  001D3C  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 22857  001D40  0E3F               	movlw	63
 22858  001D42  164D               	andwf	??_MSDTasks,f,c
 22859  001D44  A4D8               	btfss	status,2,c
 22860  001D46  D046               	goto	l562
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 22864  001D48  0E55               	movlw	85
 22865  001D4A  010D               	movlb	13	; () banked
 22866  001D4C  6F80               	movwf	128,b	;volatile
 22867  001D4E  0E53               	movlw	83
 22868  001D50  6F81               	movwf	129,b	;volatile
 22869  001D52  0E42               	movlw	66
 22870  001D54  6F82               	movwf	130,b	;volatile
 22871  001D56  0E53               	movlw	83
 22872  001D58  6F83               	movwf	131,b	;volatile
 22873                           
 22874                           ; BSR set to: 13
 22875                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 22876  001D5A  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 22877  001D5E  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 22878  001D62  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 22879  001D66  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 22880                           
 22881                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 22882  001D6A  0E00               	movlw	0
 22883  001D6C  6F88               	movwf	136,b	;volatile
 22884  001D6E  0E00               	movlw	0
 22885  001D70  6F89               	movwf	137,b	;volatile
 22886  001D72  0E00               	movlw	0
 22887  001D74  6F8A               	movwf	138,b	;volatile
 22888  001D76  0E00               	movlw	0
 22889  001D78  6F8B               	movwf	139,b	;volatile
 22890                           
 22891                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 22892  001D7A  0E00               	movlw	0
 22893  001D7C  6F8C               	movwf	140,b	;volatile
 22894                           
 22895                           ; BSR set to: 13
 22896                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 22897  001D7E  0100               	movlb	0	; () banked
 22898  001D80  69A1               	setf	_MSDCommandState& (0+255),b
 22899                           
 22900                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 22901  001D82  0E00               	movlw	0
 22902  001D84  6FA0               	movwf	_MSDReadState& (0+255),b
 22903                           
 22904                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 22905  001D86  0E00               	movlw	0
 22906  001D88  6F9F               	movwf	_MSDWriteState& (0+255),b
 22907                           
 22908                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 22909  001D8A  0E00               	movlw	0
 22910  001D8C  6F9E               	movwf	_MSDRetryAttempt& (0+255),b
 22911                           
 22912                           ; BSR set to: 0
 22913                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 22914  001D8E  0E03               	movlw	3
 22915  001D90  0101               	movlb	1	; () banked
 22916  001D92  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 22917  001D94  B4D8               	btfsc	status,2,c
 22918  001D96  D008               	goto	l563
 22919                           
 22920                           ; BSR set to: 1
 22921                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 22922  001D98  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22923  001D9A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22924  001D9C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22925  001D9E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22926                           
 22927                           ; BSR set to: 1
 22928                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 22929  001DA0  0E00               	movlw	0
 22930  001DA2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22931                           
 22932                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 22933  001DA4  0E00               	movlw	0
 22934  001DA6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22935  001DA8                     l563:
 22936                           
 22937                           ; BSR set to: 1
 22938                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 22939                           
 22940                           ; BSR set to: 1
 22941  001DA8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 22942  001DAA  D002               	goto	l564
 22943                           
 22944                           ; BSR set to: 1
 22945                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 22946  001DAC  0E01               	movlw	1
 22947  001DAE  D001               	goto	L17
 22948  001DB0                     l564:
 22949                           
 22950                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 22951                           
 22952                           ; BSR set to: 0
 22953  001DB0  0E02               	movlw	2
 22954  001DB2                     L17:
 22955  001DB2  0100               	movlb	0	; () banked
 22956  001DB4  6FA2               	movwf	_MSD_State& (0+255),b
 22957                           
 22958                           ; BSR set to: 0
 22959                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 22960                           
 22961                           ; BSR set to: 0
 22962  001DB6  0101               	movlb	1	; () banked
 22963  001DB8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22964  001DBA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22965  001DBC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22966  001DBE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22967  001DC0  B4D8               	btfsc	status,2,c
 22968  001DC2  D002               	goto	l566
 22969                           
 22970                           ; BSR set to: 1
 22971                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 22972  001DC4  0E00               	movlw	0
 22973  001DC6  D001               	goto	L18
 22974  001DC8                     l566:
 22975                           
 22976                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 22977                           
 22978                           ; BSR set to: 0
 22979  001DC8  0E01               	movlw	1
 22980  001DCA                     L18:
 22981  001DCA  0100               	movlb	0	; () banked
 22982  001DCC  6F9B               	movwf	_MSDHostNoData& (0+255),b
 22983                           
 22984                           ; BSR set to: 0
 22985                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 22986                           
 22987                           ; BSR set to: 0
 22988  001DCE  C10F  F0A1         	movff	_gblCBW+15,_MSDCommandState
 22989                           
 22990                           ;usb_device_msd.c: 454: }
 22991  001DD2  0012               	return	
 22992  001DD4                     l562:
 22993                           
 22994                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 22995                           
 22996                           ; BSR set to: 0
 22997  001DD4  0E01               	movlw	1
 22998  001DD6  6E01               	movwf	USBStallEndpoint@dir,c
 22999  001DD8  0E02               	movlw	2
 23000  001DDA  EC26  F020         	call	_USBStallEndpoint
 23001                           
 23002                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 23003  001DDE  0E00               	movlw	0
 23004  001DE0  6E01               	movwf	USBStallEndpoint@dir,c
 23005  001DE2  0E02               	movlw	2
 23006  001DE4  EC26  F020         	call	_USBStallEndpoint
 23007                           
 23008                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 23009  001DE8  0012               	return	
 23010  001DEA                     l561:
 23011                           
 23012                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 23013  001DEA  0E01               	movlw	1
 23014  001DEC  6E01               	movwf	USBStallEndpoint@dir,c
 23015  001DEE  0E02               	movlw	2
 23016  001DF0  EC26  F020         	call	_USBStallEndpoint
 23017                           
 23018                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 23019  001DF4  0E00               	movlw	0
 23020  001DF6  6E01               	movwf	USBStallEndpoint@dir,c
 23021  001DF8  0E02               	movlw	2
 23022  001DFA  EC26  F020         	call	_USBStallEndpoint
 23023                           
 23024                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 23025  001DFE  0E00               	movlw	0
 23026  001E00  0100               	movlb	0	; () banked
 23027  001E02  6F9A               	movwf	_MSDCBWValid& (0+255),b
 23028                           
 23029                           ; BSR set to: 0
 23030                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 23031                           
 23032                           ; BSR set to: 0
 23033  001E04  0012               	return	
 23034  001E06                     
 23035                           ; BSR set to: 0
 23036                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 23037                           
 23038                           ; BSR set to: 0
 23039  001E06  EC9D  F01F         	call	_MSDProcessCommand	;wreg free
 23040  001E0A  0AFF               	xorlw	255
 23041  001E0C  A4D8               	btfss	status,2,c
 23042  001E0E  0012               	return	
 23043                           
 23044                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 23045  001E10  0E03               	movlw	3
 23046  001E12  0100               	movlb	0	; () banked
 23047  001E14  6FA2               	movwf	_MSD_State& (0+255),b
 23048                           
 23049                           ; BSR set to: 0
 23050                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 23051  001E16  0012               	return	
 23052  001E18                     
 23053                           ; BSR set to: 0
 23054                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 23055                           
 23056                           ; BSR set to: 0
 23057  001E18  EC9D  F01F         	call	_MSDProcessCommand	;wreg free
 23058  001E1C  0AFF               	xorlw	255
 23059  001E1E  A4D8               	btfss	status,2,c
 23060  001E20  0012               	return	
 23061                           
 23062                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 23063  001E22  010D               	movlb	13	; () banked
 23064  001E24  518C               	movf	140,w,b	;volatile
 23065  001E26  A4D8               	btfss	status,2,c
 23066  001E28  D008               	goto	l575
 23067                           
 23068                           ; BSR set to: 13
 23069  001E2A  5188               	movf	136,w,b	;volatile
 23070  001E2C  1189               	iorwf	137,w,b	;volatile
 23071  001E2E  118A               	iorwf	138,w,b	;volatile
 23072  001E30  118B               	iorwf	139,w,b	;volatile
 23073  001E32  B4D8               	btfsc	status,2,c
 23074  001E34  D002               	goto	l575
 23075                           
 23076                           ; BSR set to: 13
 23077                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 23078  001E36  0E02               	movlw	2
 23079  001E38  6F8C               	movwf	140,b	;volatile
 23080  001E3A                     l575:
 23081                           
 23082                           ; BSR set to: 13
 23083                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 23084  001E3A  0E03               	movlw	3
 23085  001E3C  0100               	movlb	0	; () banked
 23086  001E3E  6FA2               	movwf	_MSD_State& (0+255),b
 23087                           
 23088                           ; BSR set to: 0
 23089                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 23090  001E40  0012               	return	
 23091  001E42                     
 23092                           ; BSR set to: 0
 23093                           
 23094                           ; BSR set to: 0
 23095  001E42  C070  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 23096  001E46  C071  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 23097                           
 23098                           ; BSR set to: 0
 23099                           
 23100                           ; BSR set to: 0
 23101                           
 23102                           ; BSR set to: 0
 23103  001E4A  504E               	movf	_MSDTasks$2372,w,c
 23104  001E4C  104F               	iorwf	_MSDTasks$2372+1,w,c
 23105  001E4E  B4D8               	btfsc	status,2,c
 23106  001E50  D00A               	goto	l577
 23107                           
 23108                           ; BSR set to: 0
 23109  001E52  C070  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 23110  001E56  C071  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 23111                           
 23112                           ; BSR set to: 0
 23113                           
 23114                           ; BSR set to: 0
 23115                           
 23116                           ; BSR set to: 0
 23117                           
 23118                           ; BSR set to: 0
 23119  001E5A  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 23120  001E5E  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 23121  001E62  BEDF               	btfsc	indf2,7,c
 23122  001E64  0012               	return	
 23123  001E66                     l577:
 23124                           
 23125                           ; BSR set to: 0
 23126                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 23127                           
 23128                           ; BSR set to: 0
 23129  001E66  0E01               	movlw	1
 23130  001E68  6E01               	movwf	USBTransferOnePacket@dir,c
 23131  001E6A  0E80               	movlw	128
 23132  001E6C  6E02               	movwf	USBTransferOnePacket@data,c
 23133  001E6E  0E0D               	movlw	13
 23134  001E70  6E03               	movwf	USBTransferOnePacket@data+1,c
 23135  001E72  0E0D               	movlw	13
 23136  001E74  6E04               	movwf	USBTransferOnePacket@len,c
 23137  001E76  0E02               	movlw	2
 23138  001E78  ECB0  F021         	call	_USBTransferOnePacket
 23139  001E7C  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23140  001E80  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23141                           
 23142                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 23143  001E84  0100               	movlb	0	; () banked
 23144  001E86  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 23145  001E88  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23146  001E8A  B4D8               	btfsc	status,2,c
 23147  001E8C  D006               	goto	u10330
 23148                           
 23149                           ; BSR set to: 0
 23150  001E8E  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23151  001E92  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23152  001E96  BEDF               	btfsc	indf2,7,c
 23153  001E98  D00F               	goto	l586
 23154  001E9A                     u10330:
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 23158                           
 23159                           ; BSR set to: 0
 23160  001E9A  0E00               	movlw	0
 23161  001E9C  6E01               	movwf	USBTransferOnePacket@dir,c
 23162  001E9E  0E40               	movlw	64
 23163  001EA0  6E02               	movwf	USBTransferOnePacket@data,c
 23164  001EA2  0E0D               	movlw	13
 23165  001EA4  6E03               	movwf	USBTransferOnePacket@data+1,c
 23166  001EA6  0E40               	movlw	64
 23167  001EA8  6E04               	movwf	USBTransferOnePacket@len,c
 23168  001EAA  0E02               	movlw	2
 23169  001EAC  ECB0  F021         	call	_USBTransferOnePacket
 23170  001EB0  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23171  001EB4  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23172  001EB8                     l586:
 23173                           
 23174                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 23175  001EB8  0E00               	movlw	0
 23176  001EBA  0100               	movlb	0	; () banked
 23177  001EBC  6FA2               	movwf	_MSD_State& (0+255),b
 23178                           
 23179                           ;usb_device_msd.c: 513: break;
 23180  001EBE  0012               	return	
 23181  001EC0                     
 23182                           ; BSR set to: 0
 23183                           ;usb_device_msd.c: 518: MSD_State=0x00;
 23184                           
 23185                           ; BSR set to: 0
 23186  001EC0  0E00               	movlw	0
 23187  001EC2  6FA2               	movwf	_MSD_State& (0+255),b
 23188                           
 23189                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 23190  001EC4  0E02               	movlw	2
 23191  001EC6  010D               	movlb	13	; () banked
 23192  001EC8  6F8C               	movwf	140,b	;volatile
 23193                           
 23194                           ; BSR set to: 13
 23195                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 23196  001ECA  0E00               	movlw	0
 23197  001ECC  6E01               	movwf	USBStallEndpoint@dir,c
 23198  001ECE  0E02               	movlw	2
 23199  001ED0  EC26  F020         	call	_USBStallEndpoint
 23200                           
 23201                           ;usb_device_msd.c: 521: }
 23202  001ED4  0012               	return	
 23203  001ED6                     l554:
 23204  001ED6  0100               	movlb	0	; () banked
 23205  001ED8  51A2               	movf	_MSD_State& (0+255),w,b
 23206                           
 23207                           ; Switch size 1, requested type "space"
 23208                           ; Number of cases is 4, Range of values is 0 to 3
 23209                           ; switch strategies available:
 23210                           ; Name         Instructions Cycles
 23211                           ; simple_byte           13     7 (average)
 23212                           ;	Chosen strategy is simple_byte
 23213  001EDA  0A00               	xorlw	0	; case 0
 23214  001EDC  B4D8               	btfsc	status,2,c
 23215  001EDE  D6E4               	goto	l555
 23216  001EE0  0A01               	xorlw	1	; case 1
 23217  001EE2  B4D8               	btfsc	status,2,c
 23218  001EE4  D790               	goto	l571
 23219  001EE6  0A03               	xorlw	3	; case 2
 23220  001EE8  B4D8               	btfsc	status,2,c
 23221  001EEA  D796               	goto	l573
 23222  001EEC  0A01               	xorlw	1	; case 3
 23223  001EEE  B4D8               	btfsc	status,2,c
 23224  001EF0  D7A8               	goto	l576
 23225  001EF2  D7E6               	goto	l589
 23226  001EF4                     __end_of_MSDTasks:
 23227                           	opt stack 0
 23228                           tosu	equ	0xFFF
 23229                           tosh	equ	0xFFE
 23230                           tosl	equ	0xFFD
 23231                           pclath	equ	0xFFA
 23232                           tblptru	equ	0xFF8
 23233                           tblptrh	equ	0xFF7
 23234                           tblptrl	equ	0xFF6
 23235                           tablat	equ	0xFF5
 23236                           prodh	equ	0xFF4
 23237                           prodl	equ	0xFF3
 23238                           intcon	equ	0xFF2
 23239                           intcon2	equ	0xFF1
 23240                           intcon3	equ	0xFF0
 23241                           indf0	equ	0xFEF
 23242                           postinc0	equ	0xFEE
 23243                           fsr0h	equ	0xFEA
 23244                           fsr0l	equ	0xFE9
 23245                           wreg	equ	0xFE8
 23246                           indf1	equ	0xFE7
 23247                           postdec1	equ	0xFE5
 23248                           plusw1	equ	0xFE3
 23249                           fsr1h	equ	0xFE2
 23250                           fsr1l	equ	0xFE1
 23251                           indf2	equ	0xFDF
 23252                           postinc2	equ	0xFDE
 23253                           postdec2	equ	0xFDD
 23254                           plusw2	equ	0xFDB
 23255                           fsr2h	equ	0xFDA
 23256                           fsr2l	equ	0xFD9
 23257                           status	equ	0xFD8
 23258                           
 23259 ;; *************** function _MSDProcessCommand *****************
 23260 ;; Defined at:
 23261 ;;		line 553 in file "usb_device_msd.c"
 23262 ;; Parameters:    Size  Location     Type
 23263 ;;		None
 23264 ;; Auto vars:     Size  Location     Type
 23265 ;;		None
 23266 ;; Return value:  Size  Location     Type
 23267 ;;                  1    wreg      unsigned char 
 23268 ;; Registers used:
 23269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23270 ;; Tracked objects:
 23271 ;;		On entry : 0/0
 23272 ;;		On exit  : 0/0
 23273 ;;		Unchanged: 0/0
 23274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23277 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23278 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23279 ;;Total ram usage:        5 bytes
 23280 ;; Hardware stack levels used:    1
 23281 ;; Hardware stack levels required when called:    9
 23282 ;; This function calls:
 23283 ;;		_ExternalFlash_MediaDetect
 23284 ;;		_ExternalFlash_MediaInitialize
 23285 ;;		_MSDProcessCommandMediaAbsent
 23286 ;;		_MSDProcessCommandMediaPresent
 23287 ;; This function is called by:
 23288 ;;		_MSDTasks
 23289 ;; This function uses a non-reentrant model
 23290 ;;
 23291                           
 23292                           	psect	text107
 23293  003F3A                     __ptext107:
 23294                           	opt stack 0
 23295  003F3A                     _MSDProcessCommand:
 23296                           	opt stack 19
 23297                           
 23298                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 23299                           
 23300                           ;incstack = 0
 23301  003F3A  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 23302  003F3E  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 23303  003F42  D801               	call	u9238
 23304  003F44  D00A               	goto	u9239
 23305  003F46                     u9238:
 23306  003F46  0005               	push	
 23307  003F48  6EFA               	movwf	pclath,c
 23308  003F4A  0101               	movlb	1	; () banked
 23309  003F4C  51E8               	movf	(_LUN+6)& (0+255),w,b
 23310  003F4E  6EFD               	movwf	tosl,c
 23311  003F50  51E9               	movf	(_LUN+7)& (0+255),w,b
 23312  003F52  6EFE               	movwf	tosh,c
 23313  003F54  6AFF               	clrf	tosu,c
 23314  003F56  50FA               	movf	pclath,w,c
 23315  003F58  0012               	return		;indir
 23316  003F5A                     u9239:
 23317  003F5A  0900               	iorlw	0
 23318  003F5C  B4D8               	btfsc	status,2,c
 23319  003F5E  D00C               	goto	u9250
 23320  003F60  0101               	movlb	1	; () banked
 23321  003F62  510D               	movf	(_gblCBW+13)& (0+255),w,b
 23322  003F64  0D01               	mullw	1
 23323  003F66  0E9C               	movlw	low _SoftDetach
 23324  003F68  24F3               	addwf	prodl,w,c
 23325  003F6A  6ED9               	movwf	fsr2l,c
 23326  003F6C  0E00               	movlw	high _SoftDetach
 23327  003F6E  20F4               	addwfc	prodh,w,c
 23328  003F70  6EDA               	movwf	fsr2h,c
 23329  003F72  04DE               	decf	postinc2,w,c
 23330  003F74  A4D8               	btfss	status,2,c
 23331  003F76  D019               	goto	l592
 23332  003F78                     u9250:
 23333                           
 23334                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 23335                           
 23336                           ; BSR set to: 1
 23337  003F78  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23338  003F7C  0E01               	movlw	1
 23339  003F7E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23340  003F80  0E00               	movlw	0
 23341  003F82  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23342  003F84  2A48               	incf	??_MSDProcessCommand,f,c
 23343  003F86  D003               	goto	u9264
 23344  003F88                     u9265:
 23345  003F88  90D8               	bcf	status,0,c
 23346  003F8A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23347  003F8C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23348  003F8E                     u9264:
 23349  003F8E  2E48               	decfsz	??_MSDProcessCommand,f,c
 23350  003F90  D7FB               	goto	u9265
 23351  003F92  1C49               	comf	??_MSDProcessCommand+1,w,c
 23352  003F94  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 23353  003F96  1C4A               	comf	??_MSDProcessCommand+2,w,c
 23354  003F98  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 23355  003F9A  504B               	movf	??_MSDProcessCommand+3,w,c
 23356  003F9C  0101               	movlb	1	; () banked
 23357  003F9E  1770               	andwf	_gblMediaPresent& (0+255),f,b
 23358  003FA0  504C               	movf	??_MSDProcessCommand+4,w,c
 23359  003FA2  1771               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 23360                           
 23361                           ; BSR set to: 1
 23362                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 23363  003FA4  ECDD  F035         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23364                           
 23365                           ;usb_device_msd.c: 563: }
 23366  003FA8  D04E               	goto	l599
 23367  003FAA                     l592:
 23368                           
 23369                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 23370  003FAA  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23371  003FAE  0E01               	movlw	1
 23372  003FB0  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23373  003FB2  0E00               	movlw	0
 23374  003FB4  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23375  003FB6  2A48               	incf	??_MSDProcessCommand,f,c
 23376  003FB8  D003               	goto	u9274
 23377  003FBA                     u9275:
 23378  003FBA  90D8               	bcf	status,0,c
 23379  003FBC  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23380  003FBE  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23381  003FC0                     u9274:
 23382  003FC0  2E48               	decfsz	??_MSDProcessCommand,f,c
 23383  003FC2  D7FB               	goto	u9275
 23384  003FC4  0101               	movlb	1	; () banked
 23385  003FC6  5170               	movf	_gblMediaPresent& (0+255),w,b
 23386  003FC8  1649               	andwf	??_MSDProcessCommand+1,f,c
 23387  003FCA  5171               	movf	(_gblMediaPresent+1)& (0+255),w,b
 23388  003FCC  164A               	andwf	??_MSDProcessCommand+2,f,c
 23389  003FCE  5049               	movf	??_MSDProcessCommand+1,w,c
 23390  003FD0  104A               	iorwf	??_MSDProcessCommand+2,w,c
 23391  003FD2  A4D8               	btfss	status,2,c
 23392  003FD4  D036               	goto	l596
 23393                           
 23394                           ; BSR set to: 1
 23395                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 23396  003FD6  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 23397  003FDA  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 23398  003FDE  D801               	call	u9298
 23399  003FE0  D009               	goto	u9299
 23400  003FE2                     u9298:
 23401  003FE2  0005               	push	
 23402  003FE4  6EFA               	movwf	pclath,c
 23403  003FE6  51E2               	movf	_LUN& (0+255),w,b
 23404  003FE8  6EFD               	movwf	tosl,c
 23405  003FEA  51E3               	movf	(_LUN+1)& (0+255),w,b
 23406  003FEC  6EFE               	movwf	tosh,c
 23407  003FEE  6AFF               	clrf	tosu,c
 23408  003FF0  50FA               	movf	pclath,w,c
 23409  003FF2  0012               	return		;indir
 23410  003FF4                     u9299:
 23411  003FF4  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 23412  003FF6  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 23413  003FF8  B4D8               	btfsc	status,2,c
 23414  003FFA  D020               	goto	l597
 23415                           
 23416                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 23417  003FFC  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23418  004000  0E01               	movlw	1
 23419  004002  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23420  004004  0E00               	movlw	0
 23421  004006  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23422  004008  2A48               	incf	??_MSDProcessCommand,f,c
 23423  00400A  D003               	goto	u9314
 23424  00400C                     u9315:
 23425  00400C  90D8               	bcf	status,0,c
 23426  00400E  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23427  004010  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23428  004012                     u9314:
 23429  004012  2E48               	decfsz	??_MSDProcessCommand,f,c
 23430  004014  D7FB               	goto	u9315
 23431  004016  5049               	movf	??_MSDProcessCommand+1,w,c
 23432  004018  0101               	movlb	1	; () banked
 23433  00401A  1370               	iorwf	_gblMediaPresent& (0+255),f,b
 23434  00401C  504A               	movf	??_MSDProcessCommand+2,w,c
 23435  00401E  1371               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 23436                           
 23437                           ; BSR set to: 1
 23438                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 23439  004020  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23440  004022  0BF0               	andlw	-16
 23441  004024  0906               	iorlw	6
 23442  004026  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23443                           
 23444                           ; BSR set to: 1
 23445                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 23446  004028  0E28               	movlw	40
 23447  00402A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23448                           
 23449                           ; BSR set to: 1
 23450                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 23451  00402C  0E00               	movlw	0
 23452  00402E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23453                           
 23454                           ; BSR set to: 1
 23455                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 23456  004030  0E01               	movlw	1
 23457  004032  010D               	movlb	13	; () banked
 23458  004034  6F8C               	movwf	140,b	;volatile
 23459                           
 23460                           ; BSR set to: 13
 23461                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 23462  004036  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23463                           
 23464                           ;usb_device_msd.c: 589: }
 23465  00403A  D005               	goto	l599
 23466  00403C                     l597:
 23467                           
 23468                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23469  00403C  ECDD  F035         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23470                           
 23471                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23472  004040  D002               	goto	l599
 23473  004042                     l596:
 23474                           
 23475                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23476  004042  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23477  004046                     l599:
 23478                           
 23479                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23480  004046  0100               	movlb	0	; () banked
 23481  004048  51A1               	movf	_MSDCommandState& (0+255),w,b
 23482  00404A  0012               	return	
 23483  00404C                     __end_of_MSDProcessCommand:
 23484                           	opt stack 0
 23485                           tosu	equ	0xFFF
 23486                           tosh	equ	0xFFE
 23487                           tosl	equ	0xFFD
 23488                           pclath	equ	0xFFA
 23489                           tblptru	equ	0xFF8
 23490                           tblptrh	equ	0xFF7
 23491                           tblptrl	equ	0xFF6
 23492                           tablat	equ	0xFF5
 23493                           prodh	equ	0xFF4
 23494                           prodl	equ	0xFF3
 23495                           intcon	equ	0xFF2
 23496                           intcon2	equ	0xFF1
 23497                           intcon3	equ	0xFF0
 23498                           indf0	equ	0xFEF
 23499                           postinc0	equ	0xFEE
 23500                           fsr0h	equ	0xFEA
 23501                           fsr0l	equ	0xFE9
 23502                           wreg	equ	0xFE8
 23503                           indf1	equ	0xFE7
 23504                           postdec1	equ	0xFE5
 23505                           plusw1	equ	0xFE3
 23506                           fsr1h	equ	0xFE2
 23507                           fsr1l	equ	0xFE1
 23508                           indf2	equ	0xFDF
 23509                           postinc2	equ	0xFDE
 23510                           postdec2	equ	0xFDD
 23511                           plusw2	equ	0xFDB
 23512                           fsr2h	equ	0xFDA
 23513                           fsr2l	equ	0xFD9
 23514                           status	equ	0xFD8
 23515                           
 23516 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23517 ;; Defined at:
 23518 ;;		line 635 in file "usb_device_msd.c"
 23519 ;; Parameters:    Size  Location     Type
 23520 ;;		None
 23521 ;; Auto vars:     Size  Location     Type
 23522 ;;		None
 23523 ;; Return value:  Size  Location     Type
 23524 ;;                  1    wreg      void 
 23525 ;; Registers used:
 23526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23527 ;; Tracked objects:
 23528 ;;		On entry : 0/0
 23529 ;;		On exit  : 0/0
 23530 ;;		Unchanged: 0/0
 23531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23536 ;;Total ram usage:        0 bytes
 23537 ;; Hardware stack levels used:    1
 23538 ;; Hardware stack levels required when called:    8
 23539 ;; This function calls:
 23540 ;;		_MSDErrorHandler
 23541 ;;		_MSDProcessCommandMediaPresent
 23542 ;;		_ResetSenseData
 23543 ;; This function is called by:
 23544 ;;		_MSDProcessCommand
 23545 ;; This function uses a non-reentrant model
 23546 ;;
 23547                           
 23548                           	psect	text108
 23549  006BBA                     __ptext108:
 23550                           	opt stack 0
 23551  006BBA                     _MSDProcessCommandMediaAbsent:
 23552                           	opt stack 19
 23553                           
 23554                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 23555                           
 23556                           ; BSR set to: 0
 23557                           ;incstack = 0
 23558  006BBA  D01E               	goto	l603
 23559  006BBC                     
 23560                           ;usb_device_msd.c: 646: ResetSenseData();
 23561  006BBC  EC0E  F036         	call	_ResetSenseData	;wreg free
 23562                           
 23563                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 23564  006BC0  0101               	movlb	1	; () banked
 23565  006BC2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23566  006BC4  0BF0               	andlw	-16
 23567  006BC6  0902               	iorlw	2
 23568  006BC8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23569                           
 23570                           ; BSR set to: 1
 23571                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 23572  006BCA  0E3A               	movlw	58
 23573  006BCC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23574                           
 23575                           ; BSR set to: 1
 23576                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 23577  006BCE  0E00               	movlw	0
 23578  006BD0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23579                           
 23580                           ; BSR set to: 1
 23581                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 23582  006BD2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23583                           
 23584                           ;usb_device_msd.c: 655: break;
 23585  006BD6  0012               	return	
 23586  006BD8                     
 23587                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 23588  006BD8  0E01               	movlw	1
 23589  006BDA  010D               	movlb	13	; () banked
 23590  006BDC  6F8C               	movwf	140,b	;volatile
 23591                           
 23592                           ; BSR set to: 13
 23593                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 23594  006BDE  0100               	movlb	0	; () banked
 23595  006BE0  69A1               	setf	_MSDCommandState& (0+255),b
 23596                           
 23597                           ;usb_device_msd.c: 665: break;
 23598  006BE2  0012               	return	
 23599  006BE4                     
 23600                           ; BSR set to: 0
 23601                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 23602                           
 23603                           ; BSR set to: 0
 23604  006BE4  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23605                           
 23606                           ;usb_device_msd.c: 671: break;
 23607  006BE8  0012               	return	
 23608  006BEA                     
 23609                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 23610  006BEA  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23611                           
 23612                           ;usb_device_msd.c: 677: break;
 23613  006BEE  0012               	return	
 23614  006BF0                     
 23615                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 23616  006BF0  0E7F               	movlw	127
 23617  006BF2  EC2D  F021         	call	_MSDErrorHandler
 23618                           
 23619                           ;usb_device_msd.c: 685: }
 23620                           
 23621                           ;usb_device_msd.c: 684: break;
 23622  006BF6  0012               	return	
 23623  006BF8                     l603:
 23624  006BF8  0100               	movlb	0	; () banked
 23625  006BFA  51A1               	movf	_MSDCommandState& (0+255),w,b
 23626                           
 23627                           ; Switch size 1, requested type "space"
 23628                           ; Number of cases is 5, Range of values is 0 to 253
 23629                           ; switch strategies available:
 23630                           ; Name         Instructions Cycles
 23631                           ; simple_byte           16     9 (average)
 23632                           ;	Chosen strategy is simple_byte
 23633  006BFC  0A00               	xorlw	0	; case 0
 23634  006BFE  B4D8               	btfsc	status,2,c
 23635  006C00  D7EB               	goto	l606
 23636  006C02  0A03               	xorlw	3	; case 3
 23637  006C04  B4D8               	btfsc	status,2,c
 23638  006C06  D7DA               	goto	l604
 23639  006C08  0A11               	xorlw	17	; case 18
 23640  006C0A  B4D8               	btfsc	status,2,c
 23641  006C0C  D7EB               	goto	l608
 23642  006C0E  0A0C               	xorlw	12	; case 30
 23643  006C10  B4D8               	btfsc	status,2,c
 23644  006C12  D7E2               	goto	l606
 23645  006C14  0AE3               	xorlw	227	; case 253
 23646  006C16  B4D8               	btfsc	status,2,c
 23647  006C18  D7E8               	goto	l609
 23648  006C1A  D7EA               	goto	l610
 23649  006C1C                     __end_of_MSDProcessCommandMediaAbsent:
 23650                           	opt stack 0
 23651                           tosu	equ	0xFFF
 23652                           tosh	equ	0xFFE
 23653                           tosl	equ	0xFFD
 23654                           pclath	equ	0xFFA
 23655                           tblptru	equ	0xFF8
 23656                           tblptrh	equ	0xFF7
 23657                           tblptrl	equ	0xFF6
 23658                           tablat	equ	0xFF5
 23659                           prodh	equ	0xFF4
 23660                           prodl	equ	0xFF3
 23661                           intcon	equ	0xFF2
 23662                           intcon2	equ	0xFF1
 23663                           intcon3	equ	0xFF0
 23664                           indf0	equ	0xFEF
 23665                           postinc0	equ	0xFEE
 23666                           fsr0h	equ	0xFEA
 23667                           fsr0l	equ	0xFE9
 23668                           wreg	equ	0xFE8
 23669                           indf1	equ	0xFE7
 23670                           postdec1	equ	0xFE5
 23671                           plusw1	equ	0xFE3
 23672                           fsr1h	equ	0xFE2
 23673                           fsr1l	equ	0xFE1
 23674                           indf2	equ	0xFDF
 23675                           postinc2	equ	0xFDE
 23676                           postdec2	equ	0xFDD
 23677                           plusw2	equ	0xFDB
 23678                           fsr2h	equ	0xFDA
 23679                           fsr2l	equ	0xFD9
 23680                           status	equ	0xFD8
 23681                           
 23682 ;; *************** function _MSDProcessCommandMediaPresent *****************
 23683 ;; Defined at:
 23684 ;;		line 712 in file "usb_device_msd.c"
 23685 ;; Parameters:    Size  Location     Type
 23686 ;;		None
 23687 ;; Auto vars:     Size  Location     Type
 23688 ;;  capacity        4   66[COMRAM] struct .
 23689 ;;  sectorSize      4   62[COMRAM] struct .
 23690 ;;  i               1   70[COMRAM] unsigned char 
 23691 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 23692 ;; Return value:  Size  Location     Type
 23693 ;;                  1    wreg      void 
 23694 ;; Registers used:
 23695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23696 ;; Tracked objects:
 23697 ;;		On entry : 0/0
 23698 ;;		On exit  : 0/0
 23699 ;;		Unchanged: 0/0
 23700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23702 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23704 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23705 ;;Total ram usage:       14 bytes
 23706 ;; Hardware stack levels used:    1
 23707 ;; Hardware stack levels required when called:    7
 23708 ;; This function calls:
 23709 ;;		_ExternalFlash_CapacityRead
 23710 ;;		_ExternalFlash_SectorSizeRead
 23711 ;;		_ExternalFlash_WriteProtectStateGet
 23712 ;;		_MSDCheckForErrorCases
 23713 ;;		_MSDComputeDeviceInAndResidue
 23714 ;;		_MSDErrorHandler
 23715 ;;		_MSDReadHandler
 23716 ;;		_MSDWriteHandler
 23717 ;;		_ResetSenseData
 23718 ;;		_USBTransferOnePacket
 23719 ;;		_memcpy
 23720 ;; This function is called by:
 23721 ;;		_MSDProcessCommand
 23722 ;;		_MSDProcessCommandMediaAbsent
 23723 ;; This function uses a non-reentrant model
 23724 ;;
 23725                           
 23726                           	psect	text109
 23727  00049C                     __ptext109:
 23728                           	opt stack 0
 23729  00049C                     _MSDProcessCommandMediaPresent:
 23730                           	opt stack 20
 23731                           
 23732                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 23733                           
 23734                           ;incstack = 0
 23735  00049C  D1B9               	goto	l614
 23736  00049E                     
 23737                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 23738  00049E  EC8D  F015         	call	_MSDReadHandler	;wreg free
 23739  0004A2  0900               	iorlw	0
 23740  0004A4  A4D8               	btfss	status,2,c
 23741  0004A6  0012               	return	
 23742                           
 23743                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 23744  0004A8  0100               	movlb	0	; () banked
 23745  0004AA  69A1               	setf	_MSDCommandState& (0+255),b
 23746                           
 23747                           ; BSR set to: 0
 23748                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 23749  0004AC  0012               	return	
 23750  0004AE                     
 23751                           ; BSR set to: 0
 23752                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 23753                           
 23754                           ; BSR set to: 0
 23755  0004AE  EC80  F00A         	call	_MSDWriteHandler	;wreg free
 23756  0004B2  0900               	iorlw	0
 23757  0004B4  A4D8               	btfss	status,2,c
 23758  0004B6  0012               	return	
 23759                           
 23760                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 23761  0004B8  0100               	movlb	0	; () banked
 23762  0004BA  69A1               	setf	_MSDCommandState& (0+255),b
 23763                           
 23764                           ; BSR set to: 0
 23765                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 23766  0004BC  0012               	return	
 23767  0004BE                     
 23768                           ; BSR set to: 0
 23769                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 23770                           
 23771                           ; BSR set to: 0
 23772  0004BE  059B               	decf	_MSDHostNoData& (0+255),w,b
 23773  0004C0  A4D8               	btfss	status,2,c
 23774  0004C2  D002               	goto	l621
 23775                           
 23776                           ; BSR set to: 0
 23777                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 23778  0004C4  69A1               	setf	_MSDCommandState& (0+255),b
 23779                           
 23780                           ;usb_device_msd.c: 751: break;
 23781  0004C6  0012               	return	
 23782  0004C8                     l621:
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 23786  0004C8  C112  F087         	movff	_gblCBW+18,_TransferLength+1
 23787                           
 23788                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 23789  0004CC  C113  F086         	movff	_gblCBW+19,_TransferLength
 23790                           
 23791                           ; BSR set to: 0
 23792                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 23793  0004D0  C086  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 23794  0004D4  C087  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 23795  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 23796  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 23797  0004DC  EC84  F024         	call	_MSDCheckForErrorCases	;wreg free
 23798  0004E0  0900               	iorlw	0
 23799  0004E2  A4D8               	btfss	status,2,c
 23800  0004E4  0012               	return	
 23801                           
 23802                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 23803                           
 23804                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 23805  0004E6  0E00               	movlw	0
 23806  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23807  0004EA  0E24               	movlw	36
 23808  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23809  0004EE  EC5E  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23810                           
 23811                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 23812  0004F2  0E00               	movlw	0
 23813  0004F4  6E01               	movwf	memcpy@d1,c
 23814  0004F6  0E06               	movlw	6
 23815  0004F8  6E02               	movwf	memcpy@d1+1,c
 23816  0004FA  0E49               	movlw	low _inq_resp
 23817  0004FC  6E03               	movwf	memcpy@s1,c
 23818  0004FE  0E8F               	movlw	high _inq_resp
 23819  000500  6E04               	movwf	memcpy@s1+1,c
 23820  000502  5003               	movf	memcpy@s1,w,c
 23821  000504  1004               	iorwf	memcpy@s1+1,w,c
 23822  000506  A4D8               	btfss	status,2,c
 23823  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 23824  00050A  6E05               	movwf	memcpy@s1+2,c
 23825  00050C  0E00               	movlw	0
 23826  00050E  6E07               	movwf	memcpy@n+1,c
 23827  000510  0E24               	movlw	36
 23828  000512  6E06               	movwf	memcpy@n,c
 23829  000514  ECAA  F035         	call	_memcpy	;wreg free
 23830                           
 23831                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 23832  000518  0EFD               	movlw	253
 23833  00051A  0100               	movlb	0	; () banked
 23834  00051C  6FA1               	movwf	_MSDCommandState& (0+255),b
 23835                           
 23836                           ;usb_device_msd.c: 773: break;
 23837  00051E  0012               	return	
 23838  000520                     
 23839                           ; BSR set to: 0
 23840                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 23841                           
 23842                           ; BSR set to: 0
 23843  000520  C1F0  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 23844  000524  C1F1  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 23845  000528  D801               	call	u8168
 23846  00052A  D00A               	goto	u8169
 23847  00052C                     u8168:
 23848  00052C  0005               	push	
 23849  00052E  6EFA               	movwf	pclath,c
 23850  000530  0101               	movlb	1	; () banked
 23851  000532  51E4               	movf	(_LUN+2)& (0+255),w,b
 23852  000534  6EFD               	movwf	tosl,c
 23853  000536  51E5               	movf	(_LUN+3)& (0+255),w,b
 23854  000538  6EFE               	movwf	tosh,c
 23855  00053A  6AFF               	clrf	tosu,c
 23856  00053C  50FA               	movf	pclath,w,c
 23857  00053E  0012               	return		;indir
 23858  000540                     u8169:
 23859  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 23860  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 23861  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 23862  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 23863                           
 23864                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 23865  000550  C1F0  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 23866  000554  C1F1  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 23867  000558  D801               	call	u8178
 23868  00055A  D00A               	goto	u8179
 23869  00055C                     u8178:
 23870  00055C  0005               	push	
 23871  00055E  6EFA               	movwf	pclath,c
 23872  000560  0101               	movlb	1	; () banked
 23873  000562  51E6               	movf	(_LUN+4)& (0+255),w,b
 23874  000564  6EFD               	movwf	tosl,c
 23875  000566  51E7               	movf	(_LUN+5)& (0+255),w,b
 23876  000568  6EFE               	movwf	tosh,c
 23877  00056A  6AFF               	clrf	tosu,c
 23878  00056C  50FA               	movf	pclath,w,c
 23879  00056E  0012               	return		;indir
 23880  000570                     u8179:
 23881  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 23882  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 23883  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 23884  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 23885                           
 23886                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 23887  00057C  EE26 F000          	lfsr	2,1536
 23888  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 23889                           
 23890                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 23891  000584  EE26 F001          	lfsr	2,1537	;volatile
 23892  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 23893                           
 23894                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 23895  00058C  EE26 F002          	lfsr	2,1538	;volatile
 23896  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 23897                           
 23898                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 23899  000594  EE26 F003          	lfsr	2,1539	;volatile
 23900  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 23901                           
 23902                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 23903  00059C  EE26 F004          	lfsr	2,1540	;volatile
 23904  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 23905                           
 23906                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 23907  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 23908  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 23909                           
 23910                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 23911  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 23912  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 23913                           
 23914                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 23915  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 23916  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 23917                           
 23918                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 23919  0005BC  0E00               	movlw	0
 23920  0005BE  0100               	movlb	0	; () banked
 23921  0005C0  6F87               	movwf	(_TransferLength+1)& (0+255),b
 23922  0005C2  0E08               	movlw	8
 23923  0005C4  6F86               	movwf	_TransferLength& (0+255),b
 23924                           
 23925                           ; BSR set to: 0
 23926                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 23927  0005C6  0E00               	movlw	0
 23928  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23929  0005CA  0E08               	movlw	8
 23930  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23931  0005CE  EC5E  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23932                           
 23933                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 23934  0005D2  0EFD               	movlw	253
 23935  0005D4  0100               	movlb	0	; () banked
 23936  0005D6  6FA1               	movwf	_MSDCommandState& (0+255),b
 23937                           
 23938                           ;usb_device_msd.c: 802: break;
 23939  0005D8  0012               	return	
 23940  0005DA                     
 23941                           ; BSR set to: 0
 23942                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 23943                           
 23944                           ; BSR set to: 0
 23945  0005DA  059B               	decf	_MSDHostNoData& (0+255),w,b
 23946  0005DC  A4D8               	btfss	status,2,c
 23947  0005DE  D002               	goto	l625
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 23951  0005E0  69A1               	setf	_MSDCommandState& (0+255),b
 23952                           
 23953                           ;usb_device_msd.c: 814: break;
 23954  0005E2  0012               	return	
 23955  0005E4                     l625:
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 23959                           
 23960                           ; BSR set to: 0
 23961  0005E4  0E00               	movlw	0
 23962  0005E6  6F87               	movwf	(_TransferLength+1)& (0+255),b
 23963  0005E8  0E12               	movlw	18
 23964  0005EA  6F86               	movwf	_TransferLength& (0+255),b
 23965                           
 23966                           ; BSR set to: 0
 23967                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 23968  0005EC  0E00               	movlw	0
 23969  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23970  0005F0  0E12               	movlw	18
 23971  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23972  0005F4  EC5E  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23973                           
 23974                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 23975  0005F8  0E00               	movlw	0
 23976  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 23977  0005FC                     l10980:
 23978  0005FC  0E11               	movlw	17
 23979  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 23980  000600  D001               	goto	l626
 23981  000602  D014               	goto	u8200
 23982  000604                     l626:
 23983                           
 23984                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 23985  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23986  000606  0D01               	mullw	1
 23987  000608  0E1F               	movlw	low _gblSenseData
 23988  00060A  24F3               	addwf	prodl,w,c
 23989  00060C  6ED9               	movwf	fsr2l,c
 23990  00060E  0E01               	movlw	high _gblSenseData
 23991  000610  20F4               	addwfc	prodh,w,c
 23992  000612  6EDA               	movwf	fsr2h,c
 23993  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23994  000616  0D01               	mullw	1
 23995  000618  0E00               	movlw	0
 23996  00061A  24F3               	addwf	prodl,w,c
 23997  00061C  6EE1               	movwf	fsr1l,c
 23998  00061E  0E06               	movlw	6
 23999  000620  20F4               	addwfc	prodh,w,c
 24000  000622  6EE2               	movwf	fsr1h,c
 24001  000624  CFDF FFE7          	movff	indf2,indf1
 24002  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 24003  00062A  D7E8               	goto	l10980
 24004  00062C                     u8200:
 24005                           
 24006                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 24007  00062C  0EFD               	movlw	253
 24008  00062E  0100               	movlb	0	; () banked
 24009  000630  6FA1               	movwf	_MSDCommandState& (0+255),b
 24010                           
 24011                           ;usb_device_msd.c: 827: break;
 24012  000632  0012               	return	
 24013  000634                     l628:
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 24017  000634  0E03               	movlw	3
 24018  000636  CFE8 F600          	movff	wreg,1536
 24019                           
 24020                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 24021  00063A  0E00               	movlw	0
 24022  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 24023                           
 24024                           ; BSR set to: 0
 24025                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 24026  000640  C1F0  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24027  000644  C1F1  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24028  000648  D801               	call	u8218
 24029  00064A  D00A               	goto	u8219
 24030  00064C                     u8218:
 24031  00064C  0005               	push	
 24032  00064E  6EFA               	movwf	pclath,c
 24033  000650  0101               	movlb	1	; () banked
 24034  000652  51EC               	movf	(_LUN+10)& (0+255),w,b
 24035  000654  6EFD               	movwf	tosl,c
 24036  000656  51ED               	movf	(_LUN+11)& (0+255),w,b
 24037  000658  6EFE               	movwf	tosh,c
 24038  00065A  6AFF               	clrf	tosu,c
 24039  00065C  50FA               	movf	pclath,w,c
 24040  00065E  0012               	return		;indir
 24041  000660                     u8219:
 24042  000660  0900               	iorlw	0
 24043  000662  A4D8               	btfss	status,2,c
 24044  000664  D004               	goto	l630
 24045  000666  0E00               	movlw	0
 24046  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 24047  00066A  0E00               	movlw	0
 24048  00066C  D003               	goto	L19
 24049  00066E                     l630:
 24050  00066E  0E00               	movlw	0
 24051  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 24052  000672  0E80               	movlw	128
 24053  000674                     L19:
 24054  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 24055  000676  EE26 F002          	lfsr	2,1538	;volatile
 24056  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 24057                           
 24058                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 24059  00067E  0E00               	movlw	0
 24060  000680  CFE8 F603          	movff	wreg,1539	;volatile
 24061                           
 24062                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 24063  000684  0E00               	movlw	0
 24064  000686  0100               	movlb	0	; () banked
 24065  000688  6F87               	movwf	(_TransferLength+1)& (0+255),b
 24066  00068A  0E04               	movlw	4
 24067  00068C  6F86               	movwf	_TransferLength& (0+255),b
 24068                           
 24069                           ; BSR set to: 0
 24070                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 24071  00068E  0E00               	movlw	0
 24072  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 24073  000692  0E04               	movlw	4
 24074  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 24075  000696  EC5E  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24076                           
 24077                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 24078  00069A  0EFD               	movlw	253
 24079  00069C  0100               	movlb	0	; () banked
 24080  00069E  6FA1               	movwf	_MSDCommandState& (0+255),b
 24081                           
 24082                           ;usb_device_msd.c: 839: break;
 24083  0006A0  0012               	return	
 24084  0006A2                     
 24085                           ; BSR set to: 0
 24086                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 24087                           
 24088                           ; BSR set to: 0
 24089  0006A2  0101               	movlb	1	; () banked
 24090  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24091  0006A6  0BF0               	andlw	-16
 24092  0006A8  0905               	iorlw	5
 24093  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24094                           
 24095                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 24096  0006AC  0E20               	movlw	32
 24097  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24098                           
 24099                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 24100  0006B0  0E00               	movlw	0
 24101  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24102                           
 24103                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 24104  0006B4  0E01               	movlw	1
 24105  0006B6  010D               	movlb	13	; () banked
 24106  0006B8  6F8C               	movwf	140,b	;volatile
 24107                           
 24108                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 24109  0006BA  0E00               	movlw	0
 24110  0006BC  6F88               	movwf	136,b	;volatile
 24111  0006BE  0E00               	movlw	0
 24112  0006C0  6F89               	movwf	137,b	;volatile
 24113  0006C2  0E00               	movlw	0
 24114  0006C4  6F8A               	movwf	138,b	;volatile
 24115  0006C6  0E00               	movlw	0
 24116  0006C8  6F8B               	movwf	139,b	;volatile
 24117                           
 24118                           ; BSR set to: 13
 24119                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 24120  0006CA  0100               	movlb	0	; () banked
 24121  0006CC  69A1               	setf	_MSDCommandState& (0+255),b
 24122                           
 24123                           ;usb_device_msd.c: 848: break;
 24124  0006CE  0012               	return	
 24125  0006D0                     
 24126                           ; BSR set to: 0
 24127                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 24128                           
 24129                           ; BSR set to: 0
 24130  0006D0  0E00               	movlw	0
 24131  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 24132  0006D4  0E00               	movlw	0
 24133  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 24134  0006D8  0E00               	movlw	0
 24135  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 24136  0006DC  0E00               	movlw	0
 24137  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 24138  0006E0  EC84  F024         	call	_MSDCheckForErrorCases	;wreg free
 24139  0006E4  0900               	iorlw	0
 24140  0006E6  A4D8               	btfss	status,2,c
 24141  0006E8  0012               	return	
 24142                           
 24143                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 24144                           
 24145                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 24146  0006EA  0101               	movlb	1	; () banked
 24147  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24148  0006EE  0B0F               	andlw	15
 24149  0006F0  0A06               	xorlw	6
 24150  0006F2  A4D8               	btfss	status,2,c
 24151  0006F4  D007               	goto	l636
 24152                           
 24153                           ; BSR set to: 1
 24154  0006F6  010D               	movlb	13	; () banked
 24155  0006F8  058C               	decf	140,w,b	;volatile
 24156  0006FA  A4D8               	btfss	status,2,c
 24157  0006FC  D003               	goto	l636
 24158                           
 24159                           ; BSR set to: 13
 24160                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 24161  0006FE  0100               	movlb	0	; () banked
 24162  000700  69A1               	setf	_MSDCommandState& (0+255),b
 24163                           
 24164                           ;usb_device_msd.c: 870: }
 24165  000702  0012               	return	
 24166  000704                     l636:
 24167                           
 24168                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 24169                           
 24170                           ; BSR set to: 0
 24171  000704  EC0E  F036         	call	_ResetSenseData	;wreg free
 24172                           
 24173                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 24174  000708  0E00               	movlw	0
 24175  00070A  010D               	movlb	13	; () banked
 24176  00070C  6F88               	movwf	136,b	;volatile
 24177  00070E  0E00               	movlw	0
 24178  000710  6F89               	movwf	137,b	;volatile
 24179  000712  0E00               	movlw	0
 24180  000714  6F8A               	movwf	138,b	;volatile
 24181  000716  0E00               	movlw	0
 24182  000718  6F8B               	movwf	139,b	;volatile
 24183                           
 24184                           ; BSR set to: 13
 24185                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 24186  00071A  0100               	movlb	0	; () banked
 24187  00071C  69A1               	setf	_MSDCommandState& (0+255),b
 24188                           
 24189                           ; BSR set to: 0
 24190                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 24191  00071E  0012               	return	
 24192  000720                     
 24193                           ; BSR set to: 0
 24194                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 24195                           
 24196                           ; BSR set to: 0
 24197                           
 24198                           ; BSR set to: 0
 24199  000720  0E00               	movlw	0
 24200  000722  010D               	movlb	13	; () banked
 24201  000724  6F88               	movwf	136,b	;volatile
 24202  000726  0E00               	movlw	0
 24203  000728  6F89               	movwf	137,b	;volatile
 24204  00072A  0E00               	movlw	0
 24205  00072C  6F8A               	movwf	138,b	;volatile
 24206  00072E  0E00               	movlw	0
 24207  000730  6F8B               	movwf	139,b	;volatile
 24208                           
 24209                           ; BSR set to: 13
 24210                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 24211  000732  0100               	movlb	0	; () banked
 24212  000734  69A1               	setf	_MSDCommandState& (0+255),b
 24213                           
 24214                           ;usb_device_msd.c: 885: break;
 24215  000736  0012               	return	
 24216  000738                     
 24217                           ; BSR set to: 0
 24218                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 24219                           
 24220                           ; BSR set to: 0
 24221  000738  5188               	movf	_USBMSDInHandle& (0+255),w,b
 24222  00073A  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 24223  00073C  B4D8               	btfsc	status,2,c
 24224  00073E  D006               	goto	u8270
 24225                           
 24226                           ; BSR set to: 0
 24227  000740  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 24228  000744  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 24229  000748  BEDF               	btfsc	indf2,7,c
 24230  00074A  0012               	return	
 24231  00074C                     u8270:
 24232                           
 24233                           ; BSR set to: 0
 24234                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 24235                           
 24236                           ; BSR set to: 0
 24237  00074C  0101               	movlb	1	; () banked
 24238  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 24239  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24240  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24241  000754  E104               	bnz	u8280
 24242  000756  0E40               	movlw	64
 24243  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 24244  00075A  A0D8               	btfss	status,0,c
 24245  00075C  D009               	goto	l644
 24246  00075E                     u8280:
 24247                           
 24248                           ; BSR set to: 1
 24249                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 24250  00075E  0E40               	movlw	64
 24251  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 24252                           
 24253                           ; BSR set to: 1
 24254                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 24255  000762  0E40               	movlw	64
 24256  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24257  000766  0E00               	movlw	0
 24258  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24259  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24260  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24261                           
 24262                           ;usb_device_msd.c: 900: }
 24263  00076E  D00A               	goto	l645
 24264  000770                     l644:
 24265                           
 24266                           ; BSR set to: 1
 24267                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 24268  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 24269                           
 24270                           ; BSR set to: 1
 24271                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 24272  000774  0E00               	movlw	0
 24273  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 24274  000778  0E00               	movlw	0
 24275  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 24276  00077C  0E00               	movlw	0
 24277  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 24278  000780  0E00               	movlw	0
 24279  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 24280  000784                     l645:
 24281                           
 24282                           ; BSR set to: 1
 24283                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 24284                           
 24285                           ; BSR set to: 1
 24286  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24287  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 24288  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 24289  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 24290  00078C  0100               	movlb	0	; () banked
 24291  00078E  5D86               	subwf	_TransferLength& (0+255),w,b
 24292  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 24293  000792  5987               	subwfb	(_TransferLength+1)& (0+255),w,b
 24294  000794  A0D8               	btfss	status,0,c
 24295  000796  D005               	goto	l646
 24296                           
 24297                           ; BSR set to: 0
 24298                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 24299  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24300  00079A  5F86               	subwf	_TransferLength& (0+255),f,b
 24301  00079C  0E00               	movlw	0
 24302  00079E  5B87               	subwfb	(_TransferLength+1)& (0+255),f,b
 24303                           
 24304                           ;usb_device_msd.c: 918: }
 24305  0007A0  D01A               	goto	u8310
 24306  0007A2                     l646:
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 24310                           
 24311                           ; BSR set to: 0
 24312  0007A2  0E00               	movlw	0
 24313  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 24314  0007A6  D013               	goto	l648
 24315  0007A8                     
 24316                           ; BSR set to: 0
 24317                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 24318                           
 24319                           ; BSR set to: 0
 24320  0007A8  5186               	movf	_TransferLength& (0+255),w,b
 24321  0007AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 24322  0007AC  B4D8               	btfsc	status,2,c
 24323  0007AE  D004               	goto	l650
 24324                           
 24325                           ; BSR set to: 0
 24326                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 24327  0007B0  0786               	decf	_TransferLength& (0+255),f,b
 24328  0007B2  A0D8               	btfss	status,0,c
 24329  0007B4  0787               	decf	(_TransferLength+1)& (0+255),f,b
 24330                           
 24331                           ;usb_device_msd.c: 932: }
 24332  0007B6  D00A               	goto	l651
 24333  0007B8                     l650:
 24334                           
 24335                           ; BSR set to: 0
 24336                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 24337                           
 24338                           ; BSR set to: 0
 24339  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 24340  0007BA  0D01               	mullw	1
 24341  0007BC  0E00               	movlw	0
 24342  0007BE  24F3               	addwf	prodl,w,c
 24343  0007C0  6ED9               	movwf	fsr2l,c
 24344  0007C2  0E06               	movlw	6
 24345  0007C4  20F4               	addwfc	prodh,w,c
 24346  0007C6  6EDA               	movwf	fsr2h,c
 24347  0007C8  0E00               	movlw	0
 24348  0007CA  6EDF               	movwf	indf2,c
 24349  0007CC                     l651:
 24350                           
 24351                           ; BSR set to: 0
 24352                           
 24353                           ; BSR set to: 0
 24354  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 24355  0007CE                     l648:
 24356                           
 24357                           ; BSR set to: 0
 24358                           
 24359                           ; BSR set to: 0
 24360  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24361  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 24362  0007D2  A0D8               	btfss	status,0,c
 24363  0007D4  D7E9               	goto	l649
 24364  0007D6                     u8310:
 24365                           
 24366                           ; BSR set to: 0
 24367                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 24368                           
 24369                           ; BSR set to: 0
 24370                           
 24371                           ; BSR set to: 0
 24372  0007D6  0E01               	movlw	1
 24373  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 24374  0007DA  0E00               	movlw	0
 24375  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 24376  0007DE  0E06               	movlw	6
 24377  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 24378  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 24379  0007E6  0E02               	movlw	2
 24380  0007E8  ECB0  F021         	call	_USBTransferOnePacket
 24381  0007EC  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 24382  0007F0  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 24383                           
 24384                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 24385  0007F4  0101               	movlb	1	; () banked
 24386  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 24387  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24388  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24389  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 24390  0007FE  A4D8               	btfss	status,2,c
 24391  000800  0012               	return	
 24392                           
 24393                           ; BSR set to: 1
 24394                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 24395  000802  0100               	movlb	0	; () banked
 24396  000804  69A1               	setf	_MSDCommandState& (0+255),b
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 24400                           
 24401                           ; BSR set to: 0
 24402                           
 24403                           ;usb_device_msd.c: 949: break;
 24404  000806  0012               	return	
 24405  000808                     
 24406                           ; BSR set to: 0
 24407                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 24408                           
 24409                           ; BSR set to: 0
 24410                           
 24411                           ;usb_device_msd.c: 954: default:
 24412                           
 24413                           ; BSR set to: 0
 24414  000808  0E7F               	movlw	127
 24415  00080A  EC2D  F021         	call	_MSDErrorHandler
 24416                           
 24417                           ;usb_device_msd.c: 960: }
 24418                           
 24419                           ;usb_device_msd.c: 959: break;
 24420  00080E  0012               	return	
 24421  000810                     l614:
 24422  000810  0100               	movlb	0	; () banked
 24423  000812  51A1               	movf	_MSDCommandState& (0+255),w,b
 24424                           
 24425                           ; Switch size 1, requested type "space"
 24426                           ; Number of cases is 12, Range of values is 0 to 254
 24427                           ; switch strategies available:
 24428                           ; Name         Instructions Cycles
 24429                           ; simple_byte           37    19 (average)
 24430                           ;	Chosen strategy is simple_byte
 24431  000814  0A00               	xorlw	0	; case 0
 24432  000816  B4D8               	btfsc	status,2,c
 24433  000818  D75B               	goto	l634
 24434  00081A  0A03               	xorlw	3	; case 3
 24435  00081C  B4D8               	btfsc	status,2,c
 24436  00081E  D6DD               	goto	l624
 24437  000820  0A11               	xorlw	17	; case 18
 24438  000822  B4D8               	btfsc	status,2,c
 24439  000824  D64C               	goto	l620
 24440  000826  0A08               	xorlw	8	; case 26
 24441  000828  B4D8               	btfsc	status,2,c
 24442  00082A  D704               	goto	l628
 24443  00082C  0A01               	xorlw	1	; case 27
 24444  00082E  B4D8               	btfsc	status,2,c
 24445  000830  D777               	goto	l638
 24446  000832  0A05               	xorlw	5	; case 30
 24447  000834  B4D8               	btfsc	status,2,c
 24448  000836  D735               	goto	l633
 24449  000838  0A3B               	xorlw	59	; case 37
 24450  00083A  B4D8               	btfsc	status,2,c
 24451  00083C  D671               	goto	l623
 24452  00083E  0A0D               	xorlw	13	; case 40
 24453  000840  B4D8               	btfsc	status,2,c
 24454  000842  D62D               	goto	l615
 24455  000844  0A02               	xorlw	2	; case 42
 24456  000846  B4D8               	btfsc	status,2,c
 24457  000848  D632               	goto	l618
 24458  00084A  0A05               	xorlw	5	; case 47
 24459  00084C  B4D8               	btfsc	status,2,c
 24460  00084E  D768               	goto	l638
 24461  000850  0AD2               	xorlw	210	; case 253
 24462  000852  B4D8               	btfsc	status,2,c
 24463  000854  D771               	goto	l640
 24464  000856  0A03               	xorlw	3	; case 254
 24465  000858  D7D7               	goto	l654
 24466  00085A                     __end_of_MSDProcessCommandMediaPresent:
 24467                           	opt stack 0
 24468                           tosu	equ	0xFFF
 24469                           tosh	equ	0xFFE
 24470                           tosl	equ	0xFFD
 24471                           pclath	equ	0xFFA
 24472                           tblptru	equ	0xFF8
 24473                           tblptrh	equ	0xFF7
 24474                           tblptrl	equ	0xFF6
 24475                           tablat	equ	0xFF5
 24476                           prodh	equ	0xFF4
 24477                           prodl	equ	0xFF3
 24478                           intcon	equ	0xFF2
 24479                           intcon2	equ	0xFF1
 24480                           intcon3	equ	0xFF0
 24481                           indf0	equ	0xFEF
 24482                           postinc0	equ	0xFEE
 24483                           fsr0h	equ	0xFEA
 24484                           fsr0l	equ	0xFE9
 24485                           wreg	equ	0xFE8
 24486                           indf1	equ	0xFE7
 24487                           postdec1	equ	0xFE5
 24488                           plusw1	equ	0xFE3
 24489                           fsr1h	equ	0xFE2
 24490                           fsr1l	equ	0xFE1
 24491                           indf2	equ	0xFDF
 24492                           postinc2	equ	0xFDE
 24493                           postdec2	equ	0xFDD
 24494                           plusw2	equ	0xFDB
 24495                           fsr2h	equ	0xFDA
 24496                           fsr2l	equ	0xFD9
 24497                           status	equ	0xFD8
 24498                           
 24499 ;; *************** function _MSDWriteHandler *****************
 24500 ;; Defined at:
 24501 ;;		line 1188 in file "usb_device_msd.c"
 24502 ;; Parameters:    Size  Location     Type
 24503 ;;		None
 24504 ;; Auto vars:     Size  Location     Type
 24505 ;;		None
 24506 ;; Return value:  Size  Location     Type
 24507 ;;                  1    wreg      unsigned char 
 24508 ;; Registers used:
 24509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24510 ;; Tracked objects:
 24511 ;;		On entry : 0/0
 24512 ;;		On exit  : 0/0
 24513 ;;		Unchanged: 0/0
 24514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24517 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24518 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24519 ;;Total ram usage:        5 bytes
 24520 ;; Hardware stack levels used:    1
 24521 ;; Hardware stack levels required when called:    6
 24522 ;; This function calls:
 24523 ;;		_ExternalFlash_SectorWrite
 24524 ;;		_ExternalFlash_WriteProtectStateGet
 24525 ;;		_MSDCheckForErrorCases
 24526 ;;		_USBStallEndpoint
 24527 ;;		_USBTransferOnePacket
 24528 ;; This function is called by:
 24529 ;;		_MSDProcessCommandMediaPresent
 24530 ;; This function uses a non-reentrant model
 24531 ;;
 24532                           
 24533                           	psect	text110
 24534  001500                     __ptext110:
 24535                           	opt stack 0
 24536  001500                     _MSDWriteHandler:
 24537                           	opt stack 20
 24538                           
 24539                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 24540                           
 24541                           ;incstack = 0
 24542  001500  D144               	goto	l684
 24543  001502                     l685:
 24544                           
 24545                           ; BSR set to: 0
 24546                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 24547  001502  C111  F083         	movff	_gblCBW+17,_LBA+3
 24548                           
 24549                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 24550  001506  C112  F082         	movff	_gblCBW+18,_LBA+2
 24551                           
 24552                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 24553  00150A  C113  F081         	movff	_gblCBW+19,_LBA+1
 24554                           
 24555                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 24556  00150E  C114  F080         	movff	_gblCBW+20,_LBA
 24557                           
 24558                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 24559  001512  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 24560                           
 24561                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 24562  001516  C117  F086         	movff	_gblCBW+23,_TransferLength
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24566  00151A  5186               	movf	_TransferLength& (0+255),w,b
 24567  00151C  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24568  00151E  5187               	movf	(_TransferLength+1)& (0+255),w,b
 24569  001520  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 24570  001522  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24571  001524  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24572  001526  0E09               	movlw	9
 24573  001528                     u7185:
 24574  001528  90D8               	bcf	status,0,c
 24575  00152A  3630               	rlcf	??_MSDWriteHandler,f,c
 24576  00152C  3631               	rlcf	??_MSDWriteHandler+1,f,c
 24577  00152E  3632               	rlcf	??_MSDWriteHandler+2,f,c
 24578  001530  3633               	rlcf	??_MSDWriteHandler+3,f,c
 24579  001532  2EE8               	decfsz	wreg,f,c
 24580  001534  D7F9               	goto	u7185
 24581  001536  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 24582  00153A  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 24583  00153E  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 24584  001542  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 24585  001546  EC84  F024         	call	_MSDCheckForErrorCases	;wreg free
 24586  00154A  0900               	iorlw	0
 24587  00154C  A4D8               	btfss	status,2,c
 24588  00154E  D12F               	goto	l687
 24589                           
 24590                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 24591                           
 24592                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 24593  001550  C1F0  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24594  001554  C1F1  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24595  001558  D801               	call	u7208
 24596  00155A  D00A               	goto	u7209
 24597  00155C                     u7208:
 24598  00155C  0005               	push	
 24599  00155E  6EFA               	movwf	pclath,c
 24600  001560  0101               	movlb	1	; () banked
 24601  001562  51EC               	movf	(_LUN+10)& (0+255),w,b
 24602  001564  6EFD               	movwf	tosl,c
 24603  001566  51ED               	movf	(_LUN+11)& (0+255),w,b
 24604  001568  6EFE               	movwf	tosh,c
 24605  00156A  6AFF               	clrf	tosu,c
 24606  00156C  50FA               	movf	pclath,w,c
 24607  00156E  0012               	return		;indir
 24608  001570                     u7209:
 24609  001570  0900               	iorlw	0
 24610  001572  B4D8               	btfsc	status,2,c
 24611  001574  D016               	goto	l688
 24612                           
 24613                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 24614  001576  0E01               	movlw	1
 24615  001578  010D               	movlb	13	; () banked
 24616  00157A  6F8C               	movwf	140,b	;volatile
 24617                           
 24618                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 24619  00157C  0101               	movlb	1	; () banked
 24620  00157E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24621  001580  0BF0               	andlw	-16
 24622  001582  0907               	iorlw	7
 24623  001584  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24624                           
 24625                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 24626  001586  0E27               	movlw	39
 24627  001588  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24628                           
 24629                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 24630  00158A  0E00               	movlw	0
 24631  00158C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24632                           
 24633                           ; BSR set to: 1
 24634                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 24635  00158E  0E00               	movlw	0
 24636  001590  6E01               	movwf	USBStallEndpoint@dir,c
 24637  001592  0E02               	movlw	2
 24638  001594  EC26  F020         	call	_USBStallEndpoint
 24639                           
 24640                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 24641  001598  0E00               	movlw	0
 24642  00159A  0100               	movlb	0	; () banked
 24643  00159C  6F9F               	movwf	_MSDWriteState& (0+255),b
 24644                           
 24645                           ; BSR set to: 0
 24646                           ;usb_device_msd.c: 1228: return MSDWriteState;
 24647  00159E  519F               	movf	_MSDWriteState& (0+255),w,b
 24648                           
 24649                           ; BSR set to: 0
 24650  0015A0  0012               	return	
 24651  0015A2                     l688:
 24652                           
 24653                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 24654                           
 24655                           ; BSR set to: 0
 24656  0015A2  0E01               	movlw	1
 24657  0015A4  0100               	movlb	0	; () banked
 24658  0015A6  6FA2               	movwf	_MSD_State& (0+255),b
 24659  0015A8                     
 24660                           ; BSR set to: 0
 24661                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 24662                           
 24663                           ; BSR set to: 0
 24664  0015A8  5186               	movf	_TransferLength& (0+255),w,b
 24665  0015AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 24666  0015AC  A4D8               	btfss	status,2,c
 24667  0015AE  D002               	goto	l691
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 24671  0015B0  0E00               	movlw	0
 24672  0015B2  D0E9               	goto	L23
 24673  0015B4                     l691:
 24674                           
 24675                           ; BSR set to: 0
 24676                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 24677                           
 24678                           ; BSR set to: 0
 24679  0015B4  0E03               	movlw	3
 24680  0015B6  6F9F               	movwf	_MSDWriteState& (0+255),b
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 24684  0015B8  0E00               	movlw	0
 24685  0015BA  6F8C               	movwf	_ptrNextData& (0+255),b
 24686  0015BC  0E06               	movlw	6
 24687  0015BE  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 24691  0015C0  0E00               	movlw	0
 24692  0015C2  010D               	movlb	13	; () banked
 24693  0015C4  6F88               	movwf	136,b	;volatile
 24694  0015C6  0E02               	movlw	2
 24695  0015C8  6F89               	movwf	137,b	;volatile
 24696  0015CA  0E00               	movlw	0
 24697  0015CC  6F8A               	movwf	138,b	;volatile
 24698  0015CE  0E00               	movlw	0
 24699  0015D0  6F8B               	movwf	139,b	;volatile
 24700  0015D2                     l692:
 24701                           
 24702                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 24703  0015D2  010D               	movlb	13	; () banked
 24704  0015D4  5188               	movf	136,w,b	;volatile
 24705  0015D6  1189               	iorwf	137,w,b	;volatile
 24706  0015D8  118A               	iorwf	138,w,b	;volatile
 24707  0015DA  118B               	iorwf	139,w,b	;volatile
 24708  0015DC  B4D8               	btfsc	status,2,c
 24709  0015DE  D01E               	goto	l693
 24710                           
 24711                           ; BSR set to: 13
 24712                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 24713  0015E0  0100               	movlb	0	; () banked
 24714  0015E2  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24715  0015E4  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24716  0015E6  B4D8               	btfsc	status,2,c
 24717  0015E8  D006               	goto	l694
 24718                           
 24719                           ; BSR set to: 0
 24720  0015EA  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24721  0015EE  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24722  0015F2  BEDF               	btfsc	indf2,7,c
 24723  0015F4  D0DC               	goto	l687
 24724  0015F6                     l694:
 24725                           
 24726                           ; BSR set to: 0
 24727                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 24728                           
 24729                           ; BSR set to: 0
 24730  0015F6  0E00               	movlw	0
 24731  0015F8  6E01               	movwf	USBTransferOnePacket@dir,c
 24732  0015FA  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 24733  0015FE  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 24734  001602  0E40               	movlw	64
 24735  001604  6E04               	movwf	USBTransferOnePacket@len,c
 24736  001606  0E02               	movlw	2
 24737  001608  ECB0  F021         	call	_USBTransferOnePacket
 24738  00160C  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24739  001610  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24740                           
 24741                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 24742  001614  0E04               	movlw	4
 24743  001616  0100               	movlb	0	; () banked
 24744  001618  6F9F               	movwf	_MSDWriteState& (0+255),b
 24745                           
 24746                           ;usb_device_msd.c: 1260: }
 24747  00161A  D021               	goto	l695
 24748  00161C                     l693:
 24749                           
 24750                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 24751                           
 24752                           ; BSR set to: 0
 24753  00161C  C1F0  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24754  001620  C1F1  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24755  001624  D801               	call	u7268
 24756  001626  D00A               	goto	u7269
 24757  001628                     u7268:
 24758  001628  0005               	push	
 24759  00162A  6EFA               	movwf	pclath,c
 24760  00162C  0101               	movlb	1	; () banked
 24761  00162E  51EC               	movf	(_LUN+10)& (0+255),w,b
 24762  001630  6EFD               	movwf	tosl,c
 24763  001632  51ED               	movf	(_LUN+11)& (0+255),w,b
 24764  001634  6EFE               	movwf	tosh,c
 24765  001636  6AFF               	clrf	tosu,c
 24766  001638  50FA               	movf	pclath,w,c
 24767  00163A  0012               	return		;indir
 24768  00163C                     u7269:
 24769  00163C  0900               	iorlw	0
 24770  00163E  B4D8               	btfsc	status,2,c
 24771  001640  D00C               	goto	l696
 24772                           
 24773                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 24774  001642  0E01               	movlw	1
 24775  001644  010D               	movlb	13	; () banked
 24776  001646  6F8C               	movwf	140,b	;volatile
 24777                           
 24778                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 24779  001648  0101               	movlb	1	; () banked
 24780  00164A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24781  00164C  0BF0               	andlw	-16
 24782  00164E  0902               	iorlw	2
 24783  001650  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24784                           
 24785                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 24786  001652  0E27               	movlw	39
 24787  001654  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24788                           
 24789                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 24790  001656  0E00               	movlw	0
 24791  001658  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24792  00165A                     l696:
 24793                           
 24794                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 24795  00165A  0E02               	movlw	2
 24796  00165C  D093               	goto	L43
 24797  00165E                     l695:
 24798                           
 24799                           ; BSR set to: 0
 24800                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 24801                           
 24802                           ; BSR set to: 0
 24803                           
 24804                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 24805                           
 24806                           ; BSR set to: 0
 24807  00165E  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24808  001660  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24809  001662  B4D8               	btfsc	status,2,c
 24810  001664  D006               	goto	l698
 24811                           
 24812                           ; BSR set to: 0
 24813  001666  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24814  00166A  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24815  00166E  BEDF               	btfsc	indf2,7,c
 24816  001670  D09E               	goto	l687
 24817  001672                     l698:
 24818                           
 24819                           ; BSR set to: 0
 24820                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 24821                           
 24822                           ; BSR set to: 0
 24823  001672  EE20 F001          	lfsr	2,1
 24824  001676  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24825  001678  26D9               	addwf	fsr2l,f,c
 24826  00167A  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24827  00167C  22DA               	addwfc	fsr2h,f,c
 24828  00167E  50DF               	movf	indf2,w,c
 24829  001680  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24830  001682  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24831  001686  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24832  001688  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24833  00168A  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24834  00168C  5031               	movf	??_MSDWriteHandler+1,w,c
 24835  00168E  0101               	movlb	1	; () banked
 24836  001690  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24837  001692  5032               	movf	??_MSDWriteHandler+2,w,c
 24838  001694  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24839  001696  5033               	movf	??_MSDWriteHandler+3,w,c
 24840  001698  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24841  00169A  5034               	movf	??_MSDWriteHandler+4,w,c
 24842  00169C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24843                           
 24844                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 24845  00169E  0100               	movlb	0	; () banked
 24846  0016A0  EE20 F001          	lfsr	2,1
 24847  0016A4  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24848  0016A6  26D9               	addwf	fsr2l,f,c
 24849  0016A8  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24850  0016AA  22DA               	addwfc	fsr2h,f,c
 24851  0016AC  50DF               	movf	indf2,w,c
 24852  0016AE  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24853  0016B0  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24854  0016B4  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24855  0016B6  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24856  0016B8  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24857  0016BA  5031               	movf	??_MSDWriteHandler+1,w,c
 24858  0016BC  010D               	movlb	13	; () banked
 24859  0016BE  5F88               	subwf	136,f,b	;volatile
 24860  0016C0  5032               	movf	??_MSDWriteHandler+2,w,c
 24861  0016C2  5B89               	subwfb	137,f,b	;volatile
 24862  0016C4  5033               	movf	??_MSDWriteHandler+3,w,c
 24863  0016C6  5B8A               	subwfb	138,f,b	;volatile
 24864  0016C8  5034               	movf	??_MSDWriteHandler+4,w,c
 24865  0016CA  5B8B               	subwfb	139,f,b	;volatile
 24866                           
 24867                           ; BSR set to: 13
 24868                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 24869  0016CC  0E40               	movlw	64
 24870  0016CE  0100               	movlb	0	; () banked
 24871  0016D0  278C               	addwf	_ptrNextData& (0+255),f,b
 24872  0016D2  0E00               	movlw	0
 24873  0016D4  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 24874                           
 24875                           ; BSR set to: 0
 24876                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 24877  0016D6  0E03               	movlw	3
 24878  0016D8  D056               	goto	L23
 24879  0016DA                     
 24880                           ; BSR set to: 0
 24881                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 24882                           
 24883                           ; BSR set to: 0
 24884  0016DA  010D               	movlb	13	; () banked
 24885  0016DC  518C               	movf	140,w,b	;volatile
 24886  0016DE  A4D8               	btfss	status,2,c
 24887  0016E0  D03C               	goto	l703
 24888                           
 24889                           ; BSR set to: 13
 24890                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 24891  0016E2  C1F0  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 24892  0016E6  C1F1  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 24893  0016EA  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 24894  0016EE  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 24895  0016F2  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 24896  0016F6  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 24897  0016FA  0E00               	movlw	0
 24898  0016FC  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 24899  0016FE  0E06               	movlw	6
 24900  001700  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 24901  001702  0100               	movlb	0	; () banked
 24902  001704  5180               	movf	_LBA& (0+255),w,b
 24903  001706  1181               	iorwf	(_LBA+1)& (0+255),w,b
 24904  001708  1182               	iorwf	(_LBA+2)& (0+255),w,b
 24905  00170A  1183               	iorwf	(_LBA+3)& (0+255),w,b
 24906  00170C  A4D8               	btfss	status,2,c
 24907  00170E  D002               	goto	u7310
 24908  001710  0E01               	movlw	1
 24909  001712  D001               	goto	u7320
 24910  001714                     u7310:
 24911  001714  0E00               	movlw	0
 24912  001716                     u7320:
 24913  001716  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 24914  001718  D801               	call	u7338
 24915  00171A  D00A               	goto	u7339
 24916  00171C                     u7338:
 24917  00171C  0005               	push	
 24918  00171E  6EFA               	movwf	pclath,c
 24919  001720  0101               	movlb	1	; () banked
 24920  001722  51EE               	movf	(_LUN+12)& (0+255),w,b
 24921  001724  6EFD               	movwf	tosl,c
 24922  001726  51EF               	movf	(_LUN+13)& (0+255),w,b
 24923  001728  6EFE               	movwf	tosh,c
 24924  00172A  6AFF               	clrf	tosu,c
 24925  00172C  50FA               	movf	pclath,w,c
 24926  00172E  0012               	return		;indir
 24927  001730                     u7339:
 24928  001730  06E8               	decf	wreg,f,c
 24929  001732  B4D8               	btfsc	status,2,c
 24930  001734  D012               	goto	l703
 24931                           
 24932                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 24933  001736  0E64               	movlw	100
 24934  001738  0100               	movlb	0	; () banked
 24935  00173A  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 24936  00173C  D002               	goto	l702
 24937                           
 24938                           ; BSR set to: 0
 24939                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 24940  00173E  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 24941                           
 24942                           ;usb_device_msd.c: 1314: break;
 24943  001740  D036               	goto	l687
 24944  001742                     l702:
 24945                           
 24946                           ; BSR set to: 0
 24947                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 24948                           
 24949                           ; BSR set to: 0
 24950  001742  0E01               	movlw	1
 24951  001744  010D               	movlb	13	; () banked
 24952  001746  6F8C               	movwf	140,b	;volatile
 24953                           
 24954                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 24955  001748  0101               	movlb	1	; () banked
 24956  00174A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24957  00174C  0BF0               	andlw	-16
 24958  00174E  0903               	iorlw	3
 24959  001750  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24960                           
 24961                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 24962  001752  0E00               	movlw	0
 24963  001754  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24964                           
 24965                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 24966  001756  0E00               	movlw	0
 24967  001758  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24968  00175A                     l703:
 24969                           
 24970                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 24971                           
 24972                           ; BSR set to: 1
 24973                           
 24974                           ; BSR set to: 1
 24975                           
 24976                           ; BSR set to: 1
 24977  00175A  0E01               	movlw	1
 24978  00175C  0100               	movlb	0	; () banked
 24979  00175E  2780               	addwf	_LBA& (0+255),f,b
 24980  001760  0E00               	movlw	0
 24981  001762  2381               	addwfc	(_LBA+1)& (0+255),f,b
 24982  001764  2382               	addwfc	(_LBA+2)& (0+255),f,b
 24983  001766  2383               	addwfc	(_LBA+3)& (0+255),f,b
 24984                           
 24985                           ; BSR set to: 0
 24986                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 24987  001768  0786               	decf	_TransferLength& (0+255),f,b
 24988  00176A  A0D8               	btfss	status,0,c
 24989  00176C  0787               	decf	(_TransferLength+1)& (0+255),f,b
 24990                           
 24991                           ; BSR set to: 0
 24992                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 24993  00176E  0E01               	movlw	1
 24994  001770  D00A               	goto	L23
 24995  001772                     
 24996                           ; BSR set to: 0
 24997                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 24998                           
 24999                           ; BSR set to: 0
 25000  001772  0E02               	movlw	2
 25001  001774  010D               	movlb	13	; () banked
 25002  001776  6F8C               	movwf	140,b	;volatile
 25003                           
 25004                           ; BSR set to: 13
 25005                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 25006  001778  0E00               	movlw	0
 25007  00177A  6E01               	movwf	USBStallEndpoint@dir,c
 25008  00177C  0E02               	movlw	2
 25009  00177E  EC26  F020         	call	_USBStallEndpoint
 25010                           
 25011                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 25012  001782  0E00               	movlw	0
 25013  001784                     L43:
 25014  001784  0100               	movlb	0	; () banked
 25015  001786                     L23:
 25016  001786  6F9F               	movwf	_MSDWriteState& (0+255),b
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;usb_device_msd.c: 1345: }
 25020                           
 25021                           ;usb_device_msd.c: 1344: break;
 25022  001788  D012               	goto	l687
 25023  00178A                     l684:
 25024                           
 25025                           ; BSR set to: 0
 25026  00178A  0100               	movlb	0	; () banked
 25027  00178C  519F               	movf	_MSDWriteState& (0+255),w,b
 25028                           
 25029                           ; Switch size 1, requested type "space"
 25030                           ; Number of cases is 5, Range of values is 0 to 4
 25031                           ; switch strategies available:
 25032                           ; Name         Instructions Cycles
 25033                           ; simple_byte           16     9 (average)
 25034                           ;	Chosen strategy is simple_byte
 25035  00178E  0A00               	xorlw	0	; case 0
 25036  001790  B4D8               	btfsc	status,2,c
 25037  001792  D6B7               	goto	l685
 25038  001794  0A01               	xorlw	1	; case 1
 25039  001796  B4D8               	btfsc	status,2,c
 25040  001798  D707               	goto	l690
 25041  00179A  0A03               	xorlw	3	; case 2
 25042  00179C  B4D8               	btfsc	status,2,c
 25043  00179E  D79D               	goto	l699
 25044  0017A0  0A01               	xorlw	1	; case 3
 25045  0017A2  B4D8               	btfsc	status,2,c
 25046  0017A4  D716               	goto	l692
 25047  0017A6  0A07               	xorlw	7	; case 4
 25048  0017A8  B4D8               	btfsc	status,2,c
 25049  0017AA  D759               	goto	l695
 25050  0017AC  D7E2               	goto	l704
 25051  0017AE                     l687:
 25052                           
 25053                           ;usb_device_msd.c: 1347: return MSDWriteState;
 25054                           
 25055                           ; BSR set to: 0
 25056  0017AE  0100               	movlb	0	; () banked
 25057  0017B0  519F               	movf	_MSDWriteState& (0+255),w,b
 25058  0017B2  0012               	return	
 25059  0017B4                     __end_of_MSDWriteHandler:
 25060                           	opt stack 0
 25061                           tosu	equ	0xFFF
 25062                           tosh	equ	0xFFE
 25063                           tosl	equ	0xFFD
 25064                           pclath	equ	0xFFA
 25065                           tblptru	equ	0xFF8
 25066                           tblptrh	equ	0xFF7
 25067                           tblptrl	equ	0xFF6
 25068                           tablat	equ	0xFF5
 25069                           prodh	equ	0xFF4
 25070                           prodl	equ	0xFF3
 25071                           intcon	equ	0xFF2
 25072                           intcon2	equ	0xFF1
 25073                           intcon3	equ	0xFF0
 25074                           indf0	equ	0xFEF
 25075                           postinc0	equ	0xFEE
 25076                           fsr0h	equ	0xFEA
 25077                           fsr0l	equ	0xFE9
 25078                           wreg	equ	0xFE8
 25079                           indf1	equ	0xFE7
 25080                           postdec1	equ	0xFE5
 25081                           plusw1	equ	0xFE3
 25082                           fsr1h	equ	0xFE2
 25083                           fsr1l	equ	0xFE1
 25084                           indf2	equ	0xFDF
 25085                           postinc2	equ	0xFDE
 25086                           postdec2	equ	0xFDD
 25087                           plusw2	equ	0xFDB
 25088                           fsr2h	equ	0xFDA
 25089                           fsr2l	equ	0xFD9
 25090                           status	equ	0xFD8
 25091                           
 25092 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 25093 ;; Defined at:
 25094 ;;		line 34 in file "external_flash.c"
 25095 ;; Parameters:    Size  Location     Type
 25096 ;;  config          2    0[COMRAM] PTR void 
 25097 ;;		 -> NULL(0), 
 25098 ;; Auto vars:     Size  Location     Type
 25099 ;;		None
 25100 ;; Return value:  Size  Location     Type
 25101 ;;                  1    wreg      unsigned char 
 25102 ;; Registers used:
 25103 ;;		wreg
 25104 ;; Tracked objects:
 25105 ;;		On entry : 0/0
 25106 ;;		On exit  : 0/0
 25107 ;;		Unchanged: 0/0
 25108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25113 ;;Total ram usage:        2 bytes
 25114 ;; Hardware stack levels used:    1
 25115 ;; This function calls:
 25116 ;;		Nothing
 25117 ;; This function is called by:
 25118 ;;		_MSDWriteHandler
 25119 ;;		_MSDProcessCommandMediaPresent
 25120 ;; This function uses a non-reentrant model
 25121 ;;
 25122                           
 25123                           	psect	text111
 25124  007E1E                     __ptext111:
 25125                           	opt stack 0
 25126  007E1E                     _ExternalFlash_WriteProtectStateGet:
 25127                           	opt stack 25
 25128                           
 25129                           ;external_flash.c: 37: return 0;
 25130                           
 25131                           ; BSR set to: 0
 25132                           ;incstack = 0
 25133  007E1E  0E00               	movlw	0
 25134  007E20  0012               	return	
 25135  007E22                     __end_of_ExternalFlash_WriteProtectStateGet:
 25136                           	opt stack 0
 25137                           tosu	equ	0xFFF
 25138                           tosh	equ	0xFFE
 25139                           tosl	equ	0xFFD
 25140                           pclath	equ	0xFFA
 25141                           tblptru	equ	0xFF8
 25142                           tblptrh	equ	0xFF7
 25143                           tblptrl	equ	0xFF6
 25144                           tablat	equ	0xFF5
 25145                           prodh	equ	0xFF4
 25146                           prodl	equ	0xFF3
 25147                           intcon	equ	0xFF2
 25148                           intcon2	equ	0xFF1
 25149                           intcon3	equ	0xFF0
 25150                           indf0	equ	0xFEF
 25151                           postinc0	equ	0xFEE
 25152                           fsr0h	equ	0xFEA
 25153                           fsr0l	equ	0xFE9
 25154                           wreg	equ	0xFE8
 25155                           indf1	equ	0xFE7
 25156                           postdec1	equ	0xFE5
 25157                           plusw1	equ	0xFE3
 25158                           fsr1h	equ	0xFE2
 25159                           fsr1l	equ	0xFE1
 25160                           indf2	equ	0xFDF
 25161                           postinc2	equ	0xFDE
 25162                           postdec2	equ	0xFDD
 25163                           plusw2	equ	0xFDB
 25164                           fsr2h	equ	0xFDA
 25165                           fsr2l	equ	0xFD9
 25166                           status	equ	0xFD8
 25167                           
 25168 ;; *************** function _ExternalFlash_SectorWrite *****************
 25169 ;; Defined at:
 25170 ;;		line 56 in file "external_flash.c"
 25171 ;; Parameters:    Size  Location     Type
 25172 ;;  config          2   36[COMRAM] PTR void 
 25173 ;;		 -> NULL(0), 
 25174 ;;  sector_addr     4   38[COMRAM] unsigned long 
 25175 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 25176 ;;		 -> msd_buffer(512), 
 25177 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 25178 ;; Auto vars:     Size  Location     Type
 25179 ;;  page            2   45[COMRAM] unsigned int 
 25180 ;; Return value:  Size  Location     Type
 25181 ;;                  1    wreg      unsigned char 
 25182 ;; Registers used:
 25183 ;;		wreg, status,2, status,0, cstack
 25184 ;; Tracked objects:
 25185 ;;		On entry : 0/0
 25186 ;;		On exit  : 0/0
 25187 ;;		Unchanged: 0/0
 25188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25189 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25192 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25193 ;;Total ram usage:       11 bytes
 25194 ;; Hardware stack levels used:    1
 25195 ;; Hardware stack levels required when called:    5
 25196 ;; This function calls:
 25197 ;;		_flash_page_write
 25198 ;; This function is called by:
 25199 ;;		_MSDWriteHandler
 25200 ;; This function uses a non-reentrant model
 25201 ;;
 25202                           
 25203                           	psect	text112
 25204  0077DC                     __ptext112:
 25205                           	opt stack 0
 25206  0077DC                     _ExternalFlash_SectorWrite:
 25207                           	opt stack 20
 25208                           
 25209                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 25210                           
 25211                           ;incstack = 0
 25212  0077DC  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 25213  0077E0  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 25214                           
 25215                           ;external_flash.c: 61: if(sector_addr >= 8192)
 25216  0077E4  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 25217  0077E6  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 25218  0077E8  E104               	bnz	u6800
 25219  0077EA  0E20               	movlw	32
 25220  0077EC  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 25221  0077EE  A0D8               	btfss	status,0,c
 25222  0077F0  D002               	goto	l1825
 25223  0077F2                     u6800:
 25224                           
 25225                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 25226  0077F2  0E00               	movlw	0
 25227  0077F4  0012               	return	
 25228  0077F6                     l1825:
 25229                           
 25230                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 25231  0077F6  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 25232  0077FA  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 25233  0077FE  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 25234  007802  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 25235  007806  EC83  F038         	call	_flash_page_write	;wreg free
 25236                           
 25237                           ;external_flash.c: 69: return 1;
 25238  00780A  0E01               	movlw	1
 25239  00780C  0012               	return	
 25240  00780E                     __end_of_ExternalFlash_SectorWrite:
 25241                           	opt stack 0
 25242                           tosu	equ	0xFFF
 25243                           tosh	equ	0xFFE
 25244                           tosl	equ	0xFFD
 25245                           pclath	equ	0xFFA
 25246                           tblptru	equ	0xFF8
 25247                           tblptrh	equ	0xFF7
 25248                           tblptrl	equ	0xFF6
 25249                           tablat	equ	0xFF5
 25250                           prodh	equ	0xFF4
 25251                           prodl	equ	0xFF3
 25252                           intcon	equ	0xFF2
 25253                           intcon2	equ	0xFF1
 25254                           intcon3	equ	0xFF0
 25255                           indf0	equ	0xFEF
 25256                           postinc0	equ	0xFEE
 25257                           fsr0h	equ	0xFEA
 25258                           fsr0l	equ	0xFE9
 25259                           wreg	equ	0xFE8
 25260                           indf1	equ	0xFE7
 25261                           postdec1	equ	0xFE5
 25262                           plusw1	equ	0xFE3
 25263                           fsr1h	equ	0xFE2
 25264                           fsr1l	equ	0xFE1
 25265                           indf2	equ	0xFDF
 25266                           postinc2	equ	0xFDE
 25267                           postdec2	equ	0xFDD
 25268                           plusw2	equ	0xFDB
 25269                           fsr2h	equ	0xFDA
 25270                           fsr2l	equ	0xFD9
 25271                           status	equ	0xFD8
 25272                           
 25273 ;; *************** function _flash_page_write *****************
 25274 ;; Defined at:
 25275 ;;		line 433 in file "flash.c"
 25276 ;; Parameters:    Size  Location     Type
 25277 ;;  page            2   31[COMRAM] unsigned int 
 25278 ;;  data            2   33[COMRAM] PTR unsigned char 
 25279 ;;		 -> buffer(512), msd_buffer(512), 
 25280 ;; Auto vars:     Size  Location     Type
 25281 ;;  match           1   35[COMRAM] enum E6886
 25282 ;; Return value:  Size  Location     Type
 25283 ;;                  1    wreg      void 
 25284 ;; Registers used:
 25285 ;;		wreg, status,2, status,0, cstack
 25286 ;; Tracked objects:
 25287 ;;		On entry : 0/0
 25288 ;;		On exit  : 0/0
 25289 ;;		Unchanged: 0/0
 25290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25294 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25295 ;;Total ram usage:        5 bytes
 25296 ;; Hardware stack levels used:    1
 25297 ;; Hardware stack levels required when called:    4
 25298 ;; This function calls:
 25299 ;;		__flash_compare_page_to_buffer
 25300 ;;		__flash_write_page_from_buffer
 25301 ;;		__flash_write_to_buffer
 25302 ;;		_spi_set_configuration
 25303 ;; This function is called by:
 25304 ;;		_ExternalFlash_SectorWrite
 25305 ;;		_fat_format
 25306 ;; This function uses a non-reentrant model
 25307 ;;
 25308                           
 25309                           	psect	text113
 25310  007106                     __ptext113:
 25311                           	opt stack 0
 25312  007106                     _flash_page_write:
 25313                           	opt stack 23
 25314                           
 25315                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 25316                           
 25317                           ;incstack = 0
 25318  007106  0E00               	movlw	0
 25319  007108  ECB1  F022         	call	_spi_set_configuration
 25320                           
 25321                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 25322  00710C  0E00               	movlw	0
 25323  00710E  6E15               	movwf	__flash_write_to_buffer@start+1,c
 25324  007110  0E00               	movlw	0
 25325  007112  6E14               	movwf	__flash_write_to_buffer@start,c
 25326  007114  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 25327  007118  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 25328  00711C  0E02               	movlw	2
 25329  00711E  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 25330  007120  0E00               	movlw	0
 25331  007122  6E18               	movwf	__flash_write_to_buffer@data_length,c
 25332  007124  0E00               	movlw	0
 25333  007126  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 25334  007128  EC7D  F039         	call	__flash_write_to_buffer	;wreg free
 25335                           
 25336                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 25337  00712C  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 25338  007130  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 25339  007134  0E00               	movlw	0
 25340  007136  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 25341  007138  EC2F  F032         	call	__flash_compare_page_to_buffer	;wreg free
 25342  00713C  6E24               	movwf	flash_page_write@match,c
 25343                           
 25344                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 25345  00713E  0424               	decf	flash_page_write@match,w,c
 25346  007140  A4D8               	btfss	status,2,c
 25347  007142  D008               	goto	l1782
 25348                           
 25349                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 25350  007144  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 25351  007148  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 25352  00714C  0E00               	movlw	0
 25353  00714E  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 25354  007150  EC7E  F037         	call	__flash_write_page_from_buffer	;wreg free
 25355  007154                     l1782:
 25356                           
 25357                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 25358  007154  0E01               	movlw	1
 25359  007156  ECB1  F022         	call	_spi_set_configuration
 25360  00715A  0012               	return		;funcret
 25361  00715C                     __end_of_flash_page_write:
 25362                           	opt stack 0
 25363                           tosu	equ	0xFFF
 25364                           tosh	equ	0xFFE
 25365                           tosl	equ	0xFFD
 25366                           pclath	equ	0xFFA
 25367                           tblptru	equ	0xFF8
 25368                           tblptrh	equ	0xFF7
 25369                           tblptrl	equ	0xFF6
 25370                           tablat	equ	0xFF5
 25371                           prodh	equ	0xFF4
 25372                           prodl	equ	0xFF3
 25373                           intcon	equ	0xFF2
 25374                           intcon2	equ	0xFF1
 25375                           intcon3	equ	0xFF0
 25376                           indf0	equ	0xFEF
 25377                           postinc0	equ	0xFEE
 25378                           fsr0h	equ	0xFEA
 25379                           fsr0l	equ	0xFE9
 25380                           wreg	equ	0xFE8
 25381                           indf1	equ	0xFE7
 25382                           postdec1	equ	0xFE5
 25383                           plusw1	equ	0xFE3
 25384                           fsr1h	equ	0xFE2
 25385                           fsr1l	equ	0xFE1
 25386                           indf2	equ	0xFDF
 25387                           postinc2	equ	0xFDE
 25388                           postdec2	equ	0xFDD
 25389                           plusw2	equ	0xFDB
 25390                           fsr2h	equ	0xFDA
 25391                           fsr2l	equ	0xFD9
 25392                           status	equ	0xFD8
 25393                           
 25394 ;; *************** function _MSDReadHandler *****************
 25395 ;; Defined at:
 25396 ;;		line 1038 in file "usb_device_msd.c"
 25397 ;; Parameters:    Size  Location     Type
 25398 ;;		None
 25399 ;; Auto vars:     Size  Location     Type
 25400 ;;		None
 25401 ;; Return value:  Size  Location     Type
 25402 ;;                  1    wreg      unsigned char 
 25403 ;; Registers used:
 25404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25405 ;; Tracked objects:
 25406 ;;		On entry : 0/0
 25407 ;;		On exit  : 0/0
 25408 ;;		Unchanged: 0/0
 25409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25413 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25414 ;;Total ram usage:        4 bytes
 25415 ;; Hardware stack levels used:    1
 25416 ;; Hardware stack levels required when called:    6
 25417 ;; This function calls:
 25418 ;;		_ExternalFlash_SectorRead
 25419 ;;		_MSDCheckForErrorCases
 25420 ;;		_USBStallEndpoint
 25421 ;;		_USBTransferOnePacket
 25422 ;; This function is called by:
 25423 ;;		_MSDProcessCommandMediaPresent
 25424 ;; This function uses a non-reentrant model
 25425 ;;
 25426                           
 25427                           	psect	text114
 25428  002B1A                     __ptext114:
 25429                           	opt stack 0
 25430  002B1A                     _MSDReadHandler:
 25431                           	opt stack 20
 25432                           
 25433                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 25434                           
 25435                           ;incstack = 0
 25436  002B1A  D0D6               	goto	l665
 25437  002B1C                     l666:
 25438                           
 25439                           ; BSR set to: 0
 25440                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 25441  002B1C  C111  F083         	movff	_gblCBW+17,_LBA+3
 25442                           
 25443                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 25444  002B20  C112  F082         	movff	_gblCBW+18,_LBA+2
 25445                           
 25446                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 25447  002B24  C113  F081         	movff	_gblCBW+19,_LBA+1
 25448                           
 25449                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 25450  002B28  C114  F080         	movff	_gblCBW+20,_LBA
 25451                           
 25452                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 25453  002B2C  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 25454                           
 25455                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 25456  002B30  C117  F086         	movff	_gblCBW+23,_TransferLength
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25460  002B34  5186               	movf	_TransferLength& (0+255),w,b
 25461  002B36  6E36               	movwf	??_MSDReadHandler& (0+255),c
 25462  002B38  5187               	movf	(_TransferLength+1)& (0+255),w,b
 25463  002B3A  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 25464  002B3C  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 25465  002B3E  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 25466  002B40  0E09               	movlw	9
 25467  002B42                     u7075:
 25468  002B42  90D8               	bcf	status,0,c
 25469  002B44  3636               	rlcf	??_MSDReadHandler,f,c
 25470  002B46  3637               	rlcf	??_MSDReadHandler+1,f,c
 25471  002B48  3638               	rlcf	??_MSDReadHandler+2,f,c
 25472  002B4A  3639               	rlcf	??_MSDReadHandler+3,f,c
 25473  002B4C  2EE8               	decfsz	wreg,f,c
 25474  002B4E  D7F9               	goto	u7075
 25475  002B50  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25476  002B54  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25477  002B58  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25478  002B5C  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25479  002B60  EC84  F024         	call	_MSDCheckForErrorCases	;wreg free
 25480  002B64  0900               	iorlw	0
 25481  002B66  A4D8               	btfss	status,2,c
 25482  002B68  D0C1               	goto	l668
 25483                           
 25484                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25485                           
 25486                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25487  002B6A  0E01               	movlw	1
 25488  002B6C  0100               	movlb	0	; () banked
 25489  002B6E  6FA0               	movwf	_MSDReadState& (0+255),b
 25490  002B70                     
 25491                           ; BSR set to: 0
 25492                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25493                           
 25494                           ; BSR set to: 0
 25495  002B70  5186               	movf	_TransferLength& (0+255),w,b
 25496  002B72  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 25497  002B74  A4D8               	btfss	status,2,c
 25498  002B76  D002               	goto	l670
 25499                           
 25500                           ; BSR set to: 0
 25501                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25502  002B78  0E00               	movlw	0
 25503  002B7A  D046               	goto	L24
 25504  002B7C                     l670:
 25505                           
 25506                           ; BSR set to: 0
 25507                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25508                           
 25509                           ; BSR set to: 0
 25510  002B7C  0786               	decf	_TransferLength& (0+255),f,b
 25511  002B7E  A0D8               	btfss	status,0,c
 25512  002B80  0787               	decf	(_TransferLength+1)& (0+255),f,b
 25513                           
 25514                           ; BSR set to: 0
 25515                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25516  002B82  0E02               	movlw	2
 25517  002B84  6FA0               	movwf	_MSDReadState& (0+255),b
 25518  002B86                     
 25519                           ; BSR set to: 0
 25520                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25521                           
 25522                           ; BSR set to: 0
 25523  002B86  5188               	movf	_USBMSDInHandle& (0+255),w,b
 25524  002B88  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25525  002B8A  B4D8               	btfsc	status,2,c
 25526  002B8C  D006               	goto	l672
 25527                           
 25528                           ; BSR set to: 0
 25529  002B8E  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 25530  002B92  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25531  002B96  BEDF               	btfsc	indf2,7,c
 25532  002B98  D0A9               	goto	l668
 25533  002B9A                     l672:
 25534                           
 25535                           ; BSR set to: 0
 25536                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 25537                           
 25538                           ; BSR set to: 0
 25539  002B9A  C1F0  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 25540  002B9E  C1F1  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 25541  002BA2  C080  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 25542  002BA6  C081  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 25543  002BAA  C082  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 25544  002BAE  C083  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 25545  002BB2  0E00               	movlw	0
 25546  002BB4  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 25547  002BB6  0E06               	movlw	6
 25548  002BB8  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 25549  002BBA  D801               	call	u7128
 25550  002BBC  D00A               	goto	u7129
 25551  002BBE                     u7128:
 25552  002BBE  0005               	push	
 25553  002BC0  6EFA               	movwf	pclath,c
 25554  002BC2  0101               	movlb	1	; () banked
 25555  002BC4  51EA               	movf	(_LUN+8)& (0+255),w,b
 25556  002BC6  6EFD               	movwf	tosl,c
 25557  002BC8  51EB               	movf	(_LUN+9)& (0+255),w,b
 25558  002BCA  6EFE               	movwf	tosh,c
 25559  002BCC  6AFF               	clrf	tosu,c
 25560  002BCE  50FA               	movf	pclath,w,c
 25561  002BD0  0012               	return		;indir
 25562  002BD2                     u7129:
 25563  002BD2  06E8               	decf	wreg,f,c
 25564  002BD4  B4D8               	btfsc	status,2,c
 25565  002BD6  D01A               	goto	l675
 25566                           
 25567                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 25568  002BD8  0E64               	movlw	100
 25569  002BDA  0100               	movlb	0	; () banked
 25570  002BDC  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 25571  002BDE  D002               	goto	l674
 25572                           
 25573                           ; BSR set to: 0
 25574                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 25575  002BE0  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 25576                           
 25577                           ;usb_device_msd.c: 1088: break;
 25578  002BE2  D084               	goto	l668
 25579  002BE4                     l674:
 25580                           
 25581                           ; BSR set to: 0
 25582                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 25583                           
 25584                           ; BSR set to: 0
 25585  002BE4  0E02               	movlw	2
 25586  002BE6  010D               	movlb	13	; () banked
 25587  002BE8  6F8C               	movwf	140,b	;volatile
 25588                           
 25589                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 25590  002BEA  0101               	movlb	1	; () banked
 25591  002BEC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25592  002BEE  0BF0               	andlw	-16
 25593  002BF0  0903               	iorlw	3
 25594  002BF2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25595                           
 25596                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 25597  002BF4  0E00               	movlw	0
 25598  002BF6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25599                           
 25600                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 25601  002BF8  0E00               	movlw	0
 25602  002BFA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25603                           
 25604                           ; BSR set to: 1
 25605                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 25606  002BFC  0E01               	movlw	1
 25607  002BFE  6E01               	movwf	USBStallEndpoint@dir,c
 25608  002C00  0E02               	movlw	2
 25609  002C02  EC26  F020         	call	_USBStallEndpoint
 25610  002C06  D05D               	goto	l10334
 25611  002C08                     L24:
 25612  002C08  6FA0               	movwf	_MSDReadState& (0+255),b
 25613                           
 25614                           ;usb_device_msd.c: 1109: break;
 25615  002C0A  D070               	goto	l668
 25616  002C0C                     l675:
 25617                           
 25618                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 25619                           
 25620                           ; BSR set to: 0
 25621                           
 25622                           ; BSR set to: 0
 25623  002C0C  0E01               	movlw	1
 25624  002C0E  0100               	movlb	0	; () banked
 25625  002C10  2780               	addwf	_LBA& (0+255),f,b
 25626  002C12  0E00               	movlw	0
 25627  002C14  2381               	addwfc	(_LBA+1)& (0+255),f,b
 25628  002C16  2382               	addwfc	(_LBA+2)& (0+255),f,b
 25629  002C18  2383               	addwfc	(_LBA+3)& (0+255),f,b
 25630                           
 25631                           ; BSR set to: 0
 25632                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 25633  002C1A  0E00               	movlw	0
 25634  002C1C  010D               	movlb	13	; () banked
 25635  002C1E  6F88               	movwf	136,b	;volatile
 25636  002C20  0E02               	movlw	2
 25637  002C22  6F89               	movwf	137,b	;volatile
 25638  002C24  0E00               	movlw	0
 25639  002C26  6F8A               	movwf	138,b	;volatile
 25640  002C28  0E00               	movlw	0
 25641  002C2A  6F8B               	movwf	139,b	;volatile
 25642                           
 25643                           ; BSR set to: 13
 25644                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 25645  002C2C  0E00               	movlw	0
 25646  002C2E  0100               	movlb	0	; () banked
 25647  002C30  6F8C               	movwf	_ptrNextData& (0+255),b
 25648  002C32  0E06               	movlw	6
 25649  002C34  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 25650                           
 25651                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 25652  002C36  0E03               	movlw	3
 25653  002C38  6FA0               	movwf	_MSDReadState& (0+255),b
 25654  002C3A                     
 25655                           ; BSR set to: 0
 25656                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 25657                           
 25658                           ; BSR set to: 0
 25659  002C3A  010D               	movlb	13	; () banked
 25660  002C3C  5188               	movf	136,w,b	;volatile
 25661  002C3E  1189               	iorwf	137,w,b	;volatile
 25662  002C40  118A               	iorwf	138,w,b	;volatile
 25663  002C42  118B               	iorwf	139,w,b	;volatile
 25664  002C44  A4D8               	btfss	status,2,c
 25665  002C46  D002               	goto	l677
 25666                           
 25667                           ; BSR set to: 13
 25668                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 25669  002C48  0E01               	movlw	1
 25670  002C4A  D03C               	goto	L26
 25671  002C4C                     l677:
 25672                           
 25673                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 25674                           
 25675                           ; BSR set to: 0
 25676  002C4C  0E04               	movlw	4
 25677  002C4E  0100               	movlb	0	; () banked
 25678  002C50  6FA0               	movwf	_MSDReadState& (0+255),b
 25679  002C52                     
 25680                           ; BSR set to: 0
 25681                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 25682                           
 25683                           ; BSR set to: 0
 25684  002C52  5188               	movf	_USBMSDInHandle& (0+255),w,b
 25685  002C54  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25686  002C56  B4D8               	btfsc	status,2,c
 25687  002C58  D006               	goto	l679
 25688                           
 25689                           ; BSR set to: 0
 25690  002C5A  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 25691  002C5E  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25692  002C62  BEDF               	btfsc	indf2,7,c
 25693  002C64  D043               	goto	l668
 25694  002C66                     l679:
 25695                           
 25696                           ; BSR set to: 0
 25697                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 25698                           
 25699                           ; BSR set to: 0
 25700  002C66  0E01               	movlw	1
 25701  002C68  6E01               	movwf	USBTransferOnePacket@dir,c
 25702  002C6A  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 25703  002C6E  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25704  002C72  0E40               	movlw	64
 25705  002C74  6E04               	movwf	USBTransferOnePacket@len,c
 25706  002C76  0E02               	movlw	2
 25707  002C78  ECB0  F021         	call	_USBTransferOnePacket
 25708  002C7C  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25709  002C80  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25710                           
 25711                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 25712  002C84  0E03               	movlw	3
 25713  002C86  0100               	movlb	0	; () banked
 25714  002C88  6FA0               	movwf	_MSDReadState& (0+255),b
 25715                           
 25716                           ; BSR set to: 0
 25717                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 25718  002C8A  0E40               	movlw	64
 25719  002C8C  0101               	movlb	1	; () banked
 25720  002C8E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25721  002C90  0E00               	movlw	0
 25722  002C92  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25723  002C94  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25724  002C96  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25725                           
 25726                           ; BSR set to: 1
 25727                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 25728  002C98  0E40               	movlw	64
 25729  002C9A  010D               	movlb	13	; () banked
 25730  002C9C  5F88               	subwf	136,f,b	;volatile
 25731  002C9E  0E00               	movlw	0
 25732  002CA0  5B89               	subwfb	137,f,b	;volatile
 25733  002CA2  5B8A               	subwfb	138,f,b	;volatile
 25734  002CA4  5B8B               	subwfb	139,f,b	;volatile
 25735                           
 25736                           ; BSR set to: 13
 25737                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 25738  002CA6  0E40               	movlw	64
 25739  002CA8  0100               	movlb	0	; () banked
 25740  002CAA  278C               	addwf	_ptrNextData& (0+255),f,b
 25741  002CAC  0E00               	movlw	0
 25742  002CAE  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25743                           
 25744                           ;usb_device_msd.c: 1149: break;
 25745  002CB0  D01D               	goto	l668
 25746  002CB2                     
 25747                           ; BSR set to: 0
 25748                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 25749                           
 25750                           ; BSR set to: 0
 25751  002CB2  0E02               	movlw	2
 25752  002CB4  010D               	movlb	13	; () banked
 25753  002CB6  6F8C               	movwf	140,b	;volatile
 25754                           
 25755                           ; BSR set to: 13
 25756                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 25757  002CB8  0E01               	movlw	1
 25758  002CBA  6E01               	movwf	USBStallEndpoint@dir,c
 25759  002CBC  0E02               	movlw	2
 25760  002CBE  EC26  F020         	call	_USBStallEndpoint
 25761  002CC2                     l10334:
 25762                           
 25763                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 25764  002CC2  0E00               	movlw	0
 25765  002CC4                     L26:
 25766  002CC4  0100               	movlb	0	; () banked
 25767  002CC6  D7A0               	goto	L24
 25768  002CC8                     l665:
 25769                           
 25770                           ; BSR set to: 0
 25771  002CC8  0100               	movlb	0	; () banked
 25772  002CCA  51A0               	movf	_MSDReadState& (0+255),w,b
 25773                           
 25774                           ; Switch size 1, requested type "space"
 25775                           ; Number of cases is 5, Range of values is 0 to 4
 25776                           ; switch strategies available:
 25777                           ; Name         Instructions Cycles
 25778                           ; simple_byte           16     9 (average)
 25779                           ;	Chosen strategy is simple_byte
 25780  002CCC  0A00               	xorlw	0	; case 0
 25781  002CCE  B4D8               	btfsc	status,2,c
 25782  002CD0  D725               	goto	l666
 25783  002CD2  0A01               	xorlw	1	; case 1
 25784  002CD4  B4D8               	btfsc	status,2,c
 25785  002CD6  D74C               	goto	l669
 25786  002CD8  0A03               	xorlw	3	; case 2
 25787  002CDA  B4D8               	btfsc	status,2,c
 25788  002CDC  D754               	goto	l671
 25789  002CDE  0A01               	xorlw	1	; case 3
 25790  002CE0  B4D8               	btfsc	status,2,c
 25791  002CE2  D7AB               	goto	l676
 25792  002CE4  0A07               	xorlw	7	; case 4
 25793  002CE6  B4D8               	btfsc	status,2,c
 25794  002CE8  D7B4               	goto	l678
 25795  002CEA  D7E3               	goto	l680
 25796  002CEC                     l668:
 25797                           
 25798                           ;usb_device_msd.c: 1161: return MSDReadState;
 25799                           
 25800                           ; BSR set to: 0
 25801  002CEC  0100               	movlb	0	; () banked
 25802  002CEE  51A0               	movf	_MSDReadState& (0+255),w,b
 25803  002CF0  0012               	return	
 25804  002CF2                     __end_of_MSDReadHandler:
 25805                           	opt stack 0
 25806                           tosu	equ	0xFFF
 25807                           tosh	equ	0xFFE
 25808                           tosl	equ	0xFFD
 25809                           pclath	equ	0xFFA
 25810                           tblptru	equ	0xFF8
 25811                           tblptrh	equ	0xFF7
 25812                           tblptrl	equ	0xFF6
 25813                           tablat	equ	0xFF5
 25814                           prodh	equ	0xFF4
 25815                           prodl	equ	0xFF3
 25816                           intcon	equ	0xFF2
 25817                           intcon2	equ	0xFF1
 25818                           intcon3	equ	0xFF0
 25819                           indf0	equ	0xFEF
 25820                           postinc0	equ	0xFEE
 25821                           fsr0h	equ	0xFEA
 25822                           fsr0l	equ	0xFE9
 25823                           wreg	equ	0xFE8
 25824                           indf1	equ	0xFE7
 25825                           postdec1	equ	0xFE5
 25826                           plusw1	equ	0xFE3
 25827                           fsr1h	equ	0xFE2
 25828                           fsr1l	equ	0xFE1
 25829                           indf2	equ	0xFDF
 25830                           postinc2	equ	0xFDE
 25831                           postdec2	equ	0xFDD
 25832                           plusw2	equ	0xFDB
 25833                           fsr2h	equ	0xFDA
 25834                           fsr2l	equ	0xFD9
 25835                           status	equ	0xFD8
 25836                           
 25837 ;; *************** function _MSDCheckForErrorCases *****************
 25838 ;; Defined at:
 25839 ;;		line 1434 in file "usb_device_msd.c"
 25840 ;; Parameters:    Size  Location     Type
 25841 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 25842 ;; Auto vars:     Size  Location     Type
 25843 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 25844 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 25845 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 25846 ;; Return value:  Size  Location     Type
 25847 ;;                  1    wreg      unsigned char 
 25848 ;; Registers used:
 25849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25850 ;; Tracked objects:
 25851 ;;		On entry : 0/0
 25852 ;;		On exit  : 0/0
 25853 ;;		Unchanged: 0/0
 25854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25856 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25858 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25859 ;;Total ram usage:        7 bytes
 25860 ;; Hardware stack levels used:    1
 25861 ;; Hardware stack levels required when called:    2
 25862 ;; This function calls:
 25863 ;;		_MSDErrorHandler
 25864 ;; This function is called by:
 25865 ;;		_MSDProcessCommandMediaPresent
 25866 ;;		_MSDReadHandler
 25867 ;;		_MSDWriteHandler
 25868 ;; This function uses a non-reentrant model
 25869 ;;
 25870                           
 25871                           	psect	text115
 25872  004908                     __ptext115:
 25873                           	opt stack 0
 25874  004908                     _MSDCheckForErrorCases:
 25875                           	opt stack 23
 25876                           
 25877                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 25878                           
 25879                           ; BSR set to: 0
 25880                           ;incstack = 0
 25881  004908  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25882  00490A  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25883  00490C  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25884  00490E  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25885  004910  A4D8               	btfss	status,2,c
 25886  004912  D002               	goto	l710
 25887                           
 25888                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 25889  004914  0E01               	movlw	1
 25890  004916  D001               	goto	L27
 25891  004918                     l710:
 25892                           
 25893                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 25894  004918  0E00               	movlw	0
 25895  00491A                     L27:
 25896  00491A  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 25897                           
 25898                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 25899  00491C  0100               	movlb	0	; () banked
 25900  00491E  059B               	decf	_MSDHostNoData& (0+255),w,b
 25901  004920  A4D8               	btfss	status,2,c
 25902  004922  D005               	goto	l712
 25903                           
 25904                           ; BSR set to: 0
 25905  004924  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25906  004926  A4D8               	btfss	status,2,c
 25907  004928  D002               	goto	l712
 25908                           
 25909                           ; BSR set to: 0
 25910                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 25911  00492A  0E00               	movlw	0
 25912                           
 25913                           ; BSR set to: 0
 25914  00492C  0012               	return	
 25915  00492E                     l712:
 25916                           
 25917                           ; BSR set to: 0
 25918                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 25919                           
 25920                           ; BSR set to: 0
 25921  00492E  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25922  004930  0101               	movlb	1	; () banked
 25923  004932  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 25924  004934  E11A               	bnz	l9960
 25925  004936  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25926  004938  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 25927  00493A  E117               	bnz	l9960
 25928  00493C  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25929  00493E  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 25930  004940  E114               	bnz	l9960
 25931  004942  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25932  004944  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 25933  004946  A4D8               	btfss	status,2,c
 25934  004948  D010               	goto	l718
 25935                           
 25936                           ; BSR set to: 1
 25937                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 25938  00494A  0100               	movlb	0	; () banked
 25939  00494C  05A2               	decf	_MSD_State& (0+255),w,b
 25940  00494E  A4D8               	btfss	status,2,c
 25941  004950  D006               	goto	l715
 25942                           
 25943                           ; BSR set to: 0
 25944                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 25945  004952  0E2A               	movlw	42
 25946  004954  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 25947  004956  B4D8               	btfsc	status,2,c
 25948  004958  D008               	goto	l718
 25949                           
 25950                           ; BSR set to: 0
 25951                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 25952  00495A  0E00               	movlw	0
 25953                           
 25954                           ; BSR set to: 0
 25955  00495C  0012               	return	
 25956  00495E                     l715:
 25957                           
 25958                           ; BSR set to: 0
 25959                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 25960                           
 25961                           ; BSR set to: 0
 25962  00495E  0E2A               	movlw	42
 25963  004960  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 25964  004962  A4D8               	btfss	status,2,c
 25965  004964  D002               	goto	l718
 25966                           
 25967                           ; BSR set to: 0
 25968                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 25969  004966  0E00               	movlw	0
 25970                           
 25971                           ; BSR set to: 0
 25972  004968  0012               	return	
 25973  00496A                     l718:
 25974  00496A                     l9960:
 25975                           
 25976                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 25977  00496A  0101               	movlb	1	; () banked
 25978  00496C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25979  00496E  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 25980  004970  5109               	movf	(_gblCBW+9)& (0+255),w,b
 25981  004972  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25982  004974  510A               	movf	(_gblCBW+10)& (0+255),w,b
 25983  004976  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25984  004978  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25985  00497A  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25986  00497C  B0D8               	btfsc	status,0,c
 25987  00497E  D002               	goto	l719
 25988                           
 25989                           ; BSR set to: 1
 25990                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 25991  004980  0E01               	movlw	1
 25992  004982  D001               	goto	L28
 25993  004984                     l719:
 25994                           
 25995                           ; BSR set to: 1
 25996                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 25997                           
 25998                           ; BSR set to: 1
 25999  004984  0E00               	movlw	0
 26000  004986                     L28:
 26001  004986  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 26002                           
 26003                           ; BSR set to: 1
 26004                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 26005                           
 26006                           ; BSR set to: 1
 26007  004988  0E02               	movlw	2
 26008  00498A  0100               	movlb	0	; () banked
 26009  00498C  19A2               	xorwf	_MSD_State& (0+255),w,b
 26010  00498E  A4D8               	btfss	status,2,c
 26011  004990  D014               	goto	l721
 26012                           
 26013                           ; BSR set to: 0
 26014                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 26015  004992  0E2A               	movlw	42
 26016  004994  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26017  004996  B4D8               	btfsc	status,2,c
 26018  004998  D005               	goto	l722
 26019                           
 26020                           ; BSR set to: 0
 26021  00499A  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 26022  00499C  A4D8               	btfss	status,2,c
 26023  00499E  D002               	goto	l722
 26024  0049A0                     u6650:
 26025                           
 26026                           ; BSR set to: 0
 26027                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 26028  0049A0  0E05               	movlw	5
 26029  0049A2  D01D               	goto	L31
 26030  0049A4                     l722:
 26031                           
 26032                           ; BSR set to: 0
 26033                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 26034                           
 26035                           ; BSR set to: 0
 26036  0049A4  059B               	decf	_MSDHostNoData& (0+255),w,b
 26037  0049A6  B4D8               	btfsc	status,2,c
 26038  0049A8  D00F               	goto	u6700
 26039                           
 26040                           ; BSR set to: 0
 26041                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 26042                           
 26043                           ; BSR set to: 0
 26044                           
 26045                           ; BSR set to: 0
 26046                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 26047  0049AA  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26048  0049AC  B4D8               	btfsc	status,2,c
 26049  0049AE  D003               	goto	u6680
 26050                           
 26051                           ; BSR set to: 0
 26052                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 26053                           
 26054                           ; BSR set to: 0
 26055                           
 26056                           ; BSR set to: 0
 26057                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 26058  0049B0  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 26059  0049B2  A4D8               	btfss	status,2,c
 26060  0049B4  D7F5               	goto	u6650
 26061  0049B6                     u6680:
 26062                           
 26063                           ; BSR set to: 0
 26064                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 26065  0049B6  0E04               	movlw	4
 26066  0049B8  D012               	goto	L31
 26067  0049BA                     l721:
 26068                           
 26069                           ; BSR set to: 0
 26070                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 26071                           
 26072                           ; BSR set to: 0
 26073  0049BA  0E2A               	movlw	42
 26074  0049BC  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26075  0049BE  B4D8               	btfsc	status,2,c
 26076  0049C0  D00D               	goto	l737
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 26080                           
 26081                           ; BSR set to: 0
 26082                           
 26083                           ; BSR set to: 0
 26084                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 26085  0049C2  059B               	decf	_MSDHostNoData& (0+255),w,b
 26086  0049C4  A4D8               	btfss	status,2,c
 26087  0049C6  D002               	goto	l733
 26088  0049C8                     u6700:
 26089                           
 26090                           ; BSR set to: 0
 26091                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 26092  0049C8  0E01               	movlw	1
 26093  0049CA  D009               	goto	L31
 26094  0049CC                     l733:
 26095                           
 26096                           ; BSR set to: 0
 26097                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 26098                           
 26099                           ; BSR set to: 0
 26100  0049CC  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26101  0049CE  B4D8               	btfsc	status,2,c
 26102  0049D0  D003               	goto	u6720
 26103                           
 26104                           ; BSR set to: 0
 26105                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 26106                           
 26107                           ; BSR set to: 0
 26108                           
 26109                           ; BSR set to: 0
 26110                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 26111  0049D2  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 26112  0049D4  A4D8               	btfss	status,2,c
 26113  0049D6  D002               	goto	l737
 26114  0049D8                     u6720:
 26115                           
 26116                           ; BSR set to: 0
 26117                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 26118  0049D8  0E02               	movlw	2
 26119  0049DA  D001               	goto	L31
 26120  0049DC                     l737:
 26121                           
 26122                           ; BSR set to: 0
 26123                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 26124                           
 26125                           ; BSR set to: 0
 26126  0049DC  0E03               	movlw	3
 26127  0049DE                     L31:
 26128  0049DE  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 26129                           
 26130                           ; BSR set to: 0
 26131                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 26132                           
 26133                           ; BSR set to: 0
 26134                           
 26135                           ; BSR set to: 0
 26136                           
 26137                           ; BSR set to: 0
 26138                           
 26139                           ; BSR set to: 0
 26140                           
 26141                           ; BSR set to: 0
 26142  0049E0  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 26143  0049E2  EC2D  F021         	call	_MSDErrorHandler
 26144                           
 26145                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 26146  0049E6  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 26147  0049E8  0012               	return	
 26148  0049EA                     __end_of_MSDCheckForErrorCases:
 26149                           	opt stack 0
 26150                           tosu	equ	0xFFF
 26151                           tosh	equ	0xFFE
 26152                           tosl	equ	0xFFD
 26153                           pclath	equ	0xFFA
 26154                           tblptru	equ	0xFF8
 26155                           tblptrh	equ	0xFF7
 26156                           tblptrl	equ	0xFF6
 26157                           tablat	equ	0xFF5
 26158                           prodh	equ	0xFF4
 26159                           prodl	equ	0xFF3
 26160                           intcon	equ	0xFF2
 26161                           intcon2	equ	0xFF1
 26162                           intcon3	equ	0xFF0
 26163                           indf0	equ	0xFEF
 26164                           postinc0	equ	0xFEE
 26165                           fsr0h	equ	0xFEA
 26166                           fsr0l	equ	0xFE9
 26167                           wreg	equ	0xFE8
 26168                           indf1	equ	0xFE7
 26169                           postdec1	equ	0xFE5
 26170                           plusw1	equ	0xFE3
 26171                           fsr1h	equ	0xFE2
 26172                           fsr1l	equ	0xFE1
 26173                           indf2	equ	0xFDF
 26174                           postinc2	equ	0xFDE
 26175                           postdec2	equ	0xFDD
 26176                           plusw2	equ	0xFDB
 26177                           fsr2h	equ	0xFDA
 26178                           fsr2l	equ	0xFD9
 26179                           status	equ	0xFD8
 26180                           
 26181 ;; *************** function _MSDErrorHandler *****************
 26182 ;; Defined at:
 26183 ;;		line 1577 in file "usb_device_msd.c"
 26184 ;; Parameters:    Size  Location     Type
 26185 ;;  ErrorCase       1    wreg     unsigned char 
 26186 ;; Auto vars:     Size  Location     Type
 26187 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 26188 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 26189 ;; Return value:  Size  Location     Type
 26190 ;;                  1    wreg      void 
 26191 ;; Registers used:
 26192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26193 ;; Tracked objects:
 26194 ;;		On entry : 0/0
 26195 ;;		On exit  : 0/0
 26196 ;;		Unchanged: 0/0
 26197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26202 ;;Total ram usage:        2 bytes
 26203 ;; Hardware stack levels used:    1
 26204 ;; Hardware stack levels required when called:    1
 26205 ;; This function calls:
 26206 ;;		_ResetSenseData
 26207 ;;		_USBStallEndpoint
 26208 ;; This function is called by:
 26209 ;;		_MSDProcessCommandMediaAbsent
 26210 ;;		_MSDProcessCommandMediaPresent
 26211 ;;		_MSDCheckForErrorCases
 26212 ;; This function uses a non-reentrant model
 26213 ;;
 26214                           
 26215                           	psect	text116
 26216  00425A                     __ptext116:
 26217                           	opt stack 0
 26218  00425A                     _MSDErrorHandler:
 26219                           	opt stack 23
 26220                           
 26221                           ;incstack = 0
 26222                           ;MSDErrorHandler@ErrorCase stored from wreg
 26223  00425A  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 26224                           
 26225                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 26226  00425C  0100               	movlb	0	; () banked
 26227  00425E  5188               	movf	_USBMSDInHandle& (0+255),w,b
 26228  004260  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26229  004262  B4D8               	btfsc	status,2,c
 26230  004264  D006               	goto	u6320
 26231                           
 26232                           ; BSR set to: 0
 26233  004266  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 26234  00426A  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26235  00426E  BEDF               	btfsc	indf2,7,c
 26236  004270  0012               	return	
 26237  004272                     u6320:
 26238                           
 26239                           ; BSR set to: 0
 26240                           
 26241                           ; BSR set to: 0
 26242  004272  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 26243  004274  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26244  004276  B4D8               	btfsc	status,2,c
 26245  004278  D006               	goto	l741
 26246                           
 26247                           ; BSR set to: 0
 26248  00427A  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26249  00427E  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26250  004282  BEDF               	btfsc	indf2,7,c
 26251  004284  0012               	return	
 26252  004286                     l741:
 26253                           
 26254                           ; BSR set to: 0
 26255                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 26256  004286  C0A2  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 26257                           
 26258                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 26259  00428A  69A1               	setf	_MSDCommandState& (0+255),b
 26260                           
 26261                           ; BSR set to: 0
 26262                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 26263  00428C  0E00               	movlw	0
 26264  00428E  6FA0               	movwf	_MSDReadState& (0+255),b
 26265                           
 26266                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 26267  004290  0E00               	movlw	0
 26268  004292  6F9F               	movwf	_MSDWriteState& (0+255),b
 26269                           
 26270                           ; BSR set to: 0
 26271                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 26272  004294  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 26273  004298  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 26274  00429C  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 26275  0042A0  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 26276                           
 26277                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 26278  0042A4  0E01               	movlw	1
 26279  0042A6  010D               	movlb	13	; () banked
 26280  0042A8  6F8C               	movwf	140,b	;volatile
 26281                           
 26282                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 26283  0042AA  0E03               	movlw	3
 26284  0042AC  0100               	movlb	0	; () banked
 26285  0042AE  6FA2               	movwf	_MSD_State& (0+255),b
 26286                           
 26287                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 26288  0042B0  D043               	goto	l747
 26289  0042B2                     
 26290                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 26291                           
 26292                           ; BSR set to: 0
 26293  0042B2  0E02               	movlw	2
 26294  0042B4  010D               	movlb	13	; () banked
 26295  0042B6  6F8C               	movwf	140,b	;volatile
 26296                           
 26297                           ;usb_device_msd.c: 1607: break;
 26298  0042B8  0012               	return	
 26299  0042BA                     
 26300                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 26301                           
 26302                           ; BSR set to: 13
 26303  0042BA  0E01               	movlw	1
 26304  0042BC  6E01               	movwf	USBStallEndpoint@dir,c
 26305  0042BE  0E02               	movlw	2
 26306  0042C0  EC26  F020         	call	_USBStallEndpoint
 26307                           
 26308                           ;usb_device_msd.c: 1611: break;
 26309  0042C4  0012               	return	
 26310  0042C6                     
 26311                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 26312  0042C6  0E02               	movlw	2
 26313  0042C8  010D               	movlb	13	; () banked
 26314  0042CA  6F8C               	movwf	140,b	;volatile
 26315                           
 26316                           ; BSR set to: 13
 26317                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 26318  0042CC  0E01               	movlw	1
 26319  0042CE  6E01               	movwf	USBStallEndpoint@dir,c
 26320  0042D0  0E02               	movlw	2
 26321  0042D2  EC26  F020         	call	_USBStallEndpoint
 26322                           
 26323                           ;usb_device_msd.c: 1616: break;
 26324  0042D6  0012               	return	
 26325  0042D8                     
 26326                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 26327  0042D8  0E00               	movlw	0
 26328  0042DA  6E01               	movwf	USBStallEndpoint@dir,c
 26329  0042DC  0E02               	movlw	2
 26330  0042DE  EC26  F020         	call	_USBStallEndpoint
 26331                           
 26332                           ;usb_device_msd.c: 1620: break;
 26333  0042E2  0012               	return	
 26334  0042E4                     
 26335                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 26336  0042E4  0E02               	movlw	2
 26337  0042E6  010D               	movlb	13	; () banked
 26338  0042E8  6F8C               	movwf	140,b	;volatile
 26339                           
 26340                           ; BSR set to: 13
 26341                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 26342  0042EA  0E00               	movlw	0
 26343  0042EC  6E01               	movwf	USBStallEndpoint@dir,c
 26344  0042EE  0E02               	movlw	2
 26345  0042F0  EC26  F020         	call	_USBStallEndpoint
 26346                           
 26347                           ;usb_device_msd.c: 1625: break;
 26348  0042F4  0012               	return	
 26349  0042F6                     
 26350                           ;usb_device_msd.c: 1628: ResetSenseData();
 26351  0042F6  EC0E  F036         	call	_ResetSenseData	;wreg free
 26352                           
 26353                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 26354  0042FA  0101               	movlb	1	; () banked
 26355  0042FC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26356  0042FE  0BF0               	andlw	-16
 26357  004300  0905               	iorlw	5
 26358  004302  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26359                           
 26360                           ; BSR set to: 1
 26361                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 26362  004304  0E20               	movlw	32
 26363  004306  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26364                           
 26365                           ; BSR set to: 1
 26366                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 26367  004308  0E00               	movlw	0
 26368  00430A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26369                           
 26370                           ; BSR set to: 1
 26371                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 26372  00430C  0E02               	movlw	2
 26373  00430E  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 26374  004310  A4D8               	btfss	status,2,c
 26375  004312  D00C               	goto	l755
 26376                           
 26377                           ; BSR set to: 1
 26378  004314  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26379  004316  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 26380  004318  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 26381  00431A  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 26382  00431C  B4D8               	btfsc	status,2,c
 26383  00431E  D006               	goto	l755
 26384                           
 26385                           ; BSR set to: 1
 26386                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 26387  004320  0E00               	movlw	0
 26388  004322  6E01               	movwf	USBStallEndpoint@dir,c
 26389  004324  0E02               	movlw	2
 26390  004326  EC26  F020         	call	_USBStallEndpoint
 26391                           
 26392                           ;usb_device_msd.c: 1636: }
 26393  00432A  0012               	return	
 26394  00432C                     l755:
 26395                           
 26396                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 26397  00432C  0E01               	movlw	1
 26398  00432E  6E01               	movwf	USBStallEndpoint@dir,c
 26399  004330  0E02               	movlw	2
 26400  004332  EC26  F020         	call	_USBStallEndpoint
 26401                           
 26402                           ;usb_device_msd.c: 1644: }
 26403                           
 26404                           ;usb_device_msd.c: 1643: break;
 26405                           
 26406                           ;usb_device_msd.c: 1642: default:
 26407                           
 26408                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 26409  004336  0012               	return	
 26410  004338                     l747:
 26411  004338  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 26412                           
 26413                           ; Switch size 1, requested type "space"
 26414                           ; Number of cases is 6, Range of values is 1 to 127
 26415                           ; switch strategies available:
 26416                           ; Name         Instructions Cycles
 26417                           ; simple_byte           19    10 (average)
 26418                           ;	Chosen strategy is simple_byte
 26419  00433A  0A01               	xorlw	1	; case 1
 26420  00433C  B4D8               	btfsc	status,2,c
 26421  00433E  D7B9               	goto	l748
 26422  004340  0A03               	xorlw	3	; case 2
 26423  004342  B4D8               	btfsc	status,2,c
 26424  004344  D7BA               	goto	l750
 26425  004346  0A01               	xorlw	1	; case 3
 26426  004348  B4D8               	btfsc	status,2,c
 26427  00434A  D7BD               	goto	l751
 26428  00434C  0A07               	xorlw	7	; case 4
 26429  00434E  B4D8               	btfsc	status,2,c
 26430  004350  D7C3               	goto	l752
 26431  004352  0A01               	xorlw	1	; case 5
 26432  004354  B4D8               	btfsc	status,2,c
 26433  004356  D7C6               	goto	l753
 26434  004358  0A7A               	xorlw	122	; case 127
 26435  00435A  A4D8               	btfss	status,2,c
 26436  00435C  0012               	return	
 26437  00435E  D7CB               	goto	l754
 26438  004360                     __end_of_MSDErrorHandler:
 26439                           	opt stack 0
 26440                           tosu	equ	0xFFF
 26441                           tosh	equ	0xFFE
 26442                           tosl	equ	0xFFD
 26443                           pclath	equ	0xFFA
 26444                           tblptru	equ	0xFF8
 26445                           tblptrh	equ	0xFF7
 26446                           tblptrl	equ	0xFF6
 26447                           tablat	equ	0xFF5
 26448                           prodh	equ	0xFF4
 26449                           prodl	equ	0xFF3
 26450                           intcon	equ	0xFF2
 26451                           intcon2	equ	0xFF1
 26452                           intcon3	equ	0xFF0
 26453                           indf0	equ	0xFEF
 26454                           postinc0	equ	0xFEE
 26455                           fsr0h	equ	0xFEA
 26456                           fsr0l	equ	0xFE9
 26457                           wreg	equ	0xFE8
 26458                           indf1	equ	0xFE7
 26459                           postdec1	equ	0xFE5
 26460                           plusw1	equ	0xFE3
 26461                           fsr1h	equ	0xFE2
 26462                           fsr1l	equ	0xFE1
 26463                           indf2	equ	0xFDF
 26464                           postinc2	equ	0xFDE
 26465                           postdec2	equ	0xFDD
 26466                           plusw2	equ	0xFDB
 26467                           fsr2h	equ	0xFDA
 26468                           fsr2l	equ	0xFD9
 26469                           status	equ	0xFD8
 26470                           
 26471 ;; *************** function _USBStallEndpoint *****************
 26472 ;; Defined at:
 26473 ;;		line 1073 in file "usb_device.c"
 26474 ;; Parameters:    Size  Location     Type
 26475 ;;  ep              1    wreg     unsigned char 
 26476 ;;  dir             1    0[COMRAM] unsigned char 
 26477 ;; Auto vars:     Size  Location     Type
 26478 ;;  ep              1    5[COMRAM] unsigned char 
 26479 ;;  p               2    6[COMRAM] PTR struct __BDT
 26480 ;;		 -> BDT(48), 
 26481 ;; Return value:  Size  Location     Type
 26482 ;;                  1    wreg      void 
 26483 ;; Registers used:
 26484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26485 ;; Tracked objects:
 26486 ;;		On entry : 0/0
 26487 ;;		On exit  : 0/0
 26488 ;;		Unchanged: 0/0
 26489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26490 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26491 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26493 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26494 ;;Total ram usage:        8 bytes
 26495 ;; Hardware stack levels used:    1
 26496 ;; This function calls:
 26497 ;;		Nothing
 26498 ;; This function is called by:
 26499 ;;		_MSDTasks
 26500 ;;		_MSDReadHandler
 26501 ;;		_MSDWriteHandler
 26502 ;;		_MSDErrorHandler
 26503 ;;		_MSDTransferTerminated
 26504 ;; This function uses a non-reentrant model
 26505 ;;
 26506                           
 26507                           	psect	text117
 26508  00404C                     __ptext117:
 26509                           	opt stack 0
 26510  00404C                     _USBStallEndpoint:
 26511                           	opt stack 27
 26512                           
 26513                           ;incstack = 0
 26514                           ;USBStallEndpoint@ep stored from wreg
 26515  00404C  6E06               	movwf	USBStallEndpoint@ep,c
 26516                           
 26517                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26518  00404E  5006               	movf	USBStallEndpoint@ep,w,c
 26519  004050  A4D8               	btfss	status,2,c
 26520  004052  D02C               	goto	l191
 26521                           
 26522                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26523  004054  0100               	movlb	0	; () banked
 26524  004056  EE20 F001          	lfsr	2,1
 26525  00405A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26526  00405C  26D9               	addwf	fsr2l,f,c
 26527  00405E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26528  004060  22DA               	addwfc	fsr2h,f,c
 26529  004062  0E08               	movlw	8
 26530  004064  6EDF               	movwf	indf2,c
 26531                           
 26532                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26533  004066  EE20 F002          	lfsr	2,2
 26534  00406A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26535  00406C  26D9               	addwf	fsr2l,f,c
 26536  00406E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26537  004070  22DA               	addwfc	fsr2h,f,c
 26538  004072  0E30               	movlw	48
 26539  004074  6EDE               	movwf	postinc2,c
 26540  004076  0E0D               	movlw	13
 26541  004078  6EDD               	movwf	postdec2,c
 26542                           
 26543                           ; BSR set to: 0
 26544                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26545  00407A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26546  00407E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26547  004082  0E0C               	movlw	12
 26548  004084  6EDF               	movwf	indf2,c
 26549                           
 26550                           ; BSR set to: 0
 26551                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26552  004086  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26553  00408A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26554  00408E  0E00               	movlw	0
 26555  004090  8EDB               	bsf	plusw2,7,c
 26556                           
 26557                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 26558  004092  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26559  004096  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26560  00409A  0E04               	movlw	4
 26561  00409C  6EDF               	movwf	indf2,c
 26562                           
 26563                           ; BSR set to: 0
 26564                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26565  00409E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26566  0040A2  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26567  0040A6  0E00               	movlw	0
 26568  0040A8  8EDB               	bsf	plusw2,7,c
 26569                           
 26570                           ;usb_device.c: 1089: }
 26571  0040AA  0012               	return	
 26572  0040AC                     l191:
 26573                           
 26574                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 26575                           
 26576                           ; BSR set to: 0
 26577  0040AC  5001               	movf	USBStallEndpoint@dir,w,c
 26578  0040AE  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 26579  0040B0  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 26580  0040B2  90D8               	bcf	status,0,c
 26581  0040B4  3602               	rlcf	??_USBStallEndpoint,f,c
 26582  0040B6  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26583  0040B8  5006               	movf	USBStallEndpoint@ep,w,c
 26584  0040BA  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 26585  0040BC  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 26586  0040BE  90D8               	bcf	status,0,c
 26587  0040C0  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26588  0040C2  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26589  0040C4  90D8               	bcf	status,0,c
 26590  0040C6  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26591  0040C8  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26592  0040CA  5002               	movf	??_USBStallEndpoint,w,c
 26593  0040CC  2604               	addwf	??_USBStallEndpoint+2,f,c
 26594  0040CE  5003               	movf	??_USBStallEndpoint+1,w,c
 26595  0040D0  2205               	addwfc	??_USBStallEndpoint+3,f,c
 26596  0040D2  90D8               	bcf	status,0,c
 26597  0040D4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26598  0040D6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26599  0040D8  90D8               	bcf	status,0,c
 26600  0040DA  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26601  0040DC  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26602  0040DE  0E00               	movlw	0
 26603  0040E0  2404               	addwf	??_USBStallEndpoint+2,w,c
 26604  0040E2  6E07               	movwf	USBStallEndpoint@p,c
 26605  0040E4  0E0D               	movlw	13
 26606  0040E6  2005               	addwfc	??_USBStallEndpoint+3,w,c
 26607  0040E8  6E08               	movwf	USBStallEndpoint@p+1,c
 26608                           
 26609                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 26610  0040EA  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26611  0040EE  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26612  0040F2  0E00               	movlw	0
 26613  0040F4  84DB               	bsf	plusw2,2,c
 26614                           
 26615                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 26616  0040F6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26617  0040FA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26618  0040FE  0E00               	movlw	0
 26619  004100  8EDB               	bsf	plusw2,7,c
 26620                           
 26621                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 26622  004102  5006               	movf	USBStallEndpoint@ep,w,c
 26623  004104  0D04               	mullw	4
 26624  004106  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 26625  00410A  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 26626  00410E  5001               	movf	USBStallEndpoint@dir,w,c
 26627  004110  0D02               	mullw	2
 26628  004112  50F3               	movf	prodl,w,c
 26629  004114  2602               	addwf	??_USBStallEndpoint,f,c
 26630  004116  50F4               	movf	prodh,w,c
 26631  004118  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26632  00411A  90D8               	bcf	status,0,c
 26633  00411C  3602               	rlcf	??_USBStallEndpoint,f,c
 26634  00411E  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26635  004120  90D8               	bcf	status,0,c
 26636  004122  3602               	rlcf	??_USBStallEndpoint,f,c
 26637  004124  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26638  004126  0E04               	movlw	4
 26639  004128  2602               	addwf	??_USBStallEndpoint,f,c
 26640  00412A  0E00               	movlw	0
 26641  00412C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26642  00412E  0E00               	movlw	0
 26643  004130  2402               	addwf	??_USBStallEndpoint,w,c
 26644  004132  6E07               	movwf	USBStallEndpoint@p,c
 26645  004134  0E0D               	movlw	13
 26646  004136  2003               	addwfc	??_USBStallEndpoint+1,w,c
 26647  004138  6E08               	movwf	USBStallEndpoint@p+1,c
 26648                           
 26649                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 26650  00413A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26651  00413E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26652  004142  0E00               	movlw	0
 26653  004144  84DB               	bsf	plusw2,2,c
 26654                           
 26655                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 26656  004146  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26657  00414A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26658  00414E  0E00               	movlw	0
 26659  004150  8EDB               	bsf	plusw2,7,c
 26660  004152  0012               	return	
 26661  004154                     __end_of_USBStallEndpoint:
 26662                           	opt stack 0
 26663                           tosu	equ	0xFFF
 26664                           tosh	equ	0xFFE
 26665                           tosl	equ	0xFFD
 26666                           pclath	equ	0xFFA
 26667                           tblptru	equ	0xFF8
 26668                           tblptrh	equ	0xFF7
 26669                           tblptrl	equ	0xFF6
 26670                           tablat	equ	0xFF5
 26671                           prodh	equ	0xFF4
 26672                           prodl	equ	0xFF3
 26673                           intcon	equ	0xFF2
 26674                           intcon2	equ	0xFF1
 26675                           intcon3	equ	0xFF0
 26676                           indf0	equ	0xFEF
 26677                           postinc0	equ	0xFEE
 26678                           fsr0h	equ	0xFEA
 26679                           fsr0l	equ	0xFE9
 26680                           wreg	equ	0xFE8
 26681                           indf1	equ	0xFE7
 26682                           postdec1	equ	0xFE5
 26683                           plusw1	equ	0xFE3
 26684                           fsr1h	equ	0xFE2
 26685                           fsr1l	equ	0xFE1
 26686                           indf2	equ	0xFDF
 26687                           postinc2	equ	0xFDE
 26688                           postdec2	equ	0xFDD
 26689                           plusw2	equ	0xFDB
 26690                           fsr2h	equ	0xFDA
 26691                           fsr2l	equ	0xFD9
 26692                           status	equ	0xFD8
 26693                           
 26694 ;; *************** function _ResetSenseData *****************
 26695 ;; Defined at:
 26696 ;;		line 1373 in file "usb_device_msd.c"
 26697 ;; Parameters:    Size  Location     Type
 26698 ;;		None
 26699 ;; Auto vars:     Size  Location     Type
 26700 ;;		None
 26701 ;; Return value:  Size  Location     Type
 26702 ;;                  1    wreg      void 
 26703 ;; Registers used:
 26704 ;;		wreg, status,2
 26705 ;; Tracked objects:
 26706 ;;		On entry : 0/0
 26707 ;;		On exit  : 0/0
 26708 ;;		Unchanged: 0/0
 26709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26714 ;;Total ram usage:        0 bytes
 26715 ;; Hardware stack levels used:    1
 26716 ;; This function calls:
 26717 ;;		Nothing
 26718 ;; This function is called by:
 26719 ;;		_USBMSDInit
 26720 ;;		_MSDProcessCommandMediaAbsent
 26721 ;;		_MSDProcessCommandMediaPresent
 26722 ;;		_MSDErrorHandler
 26723 ;; This function uses a non-reentrant model
 26724 ;;
 26725                           
 26726                           	psect	text118
 26727  006C1C                     __ptext118:
 26728                           	opt stack 0
 26729  006C1C                     _ResetSenseData:
 26730                           	opt stack 26
 26731                           
 26732                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 26733                           
 26734                           ;incstack = 0
 26735  006C1C  0101               	movlb	1	; () banked
 26736  006C1E  911F               	bcf	_gblSenseData& (0+255),0,b
 26737  006C20  931F               	bcf	_gblSenseData& (0+255),1,b
 26738  006C22  951F               	bcf	_gblSenseData& (0+255),2,b
 26739  006C24  971F               	bcf	_gblSenseData& (0+255),3,b
 26740  006C26  891F               	bsf	_gblSenseData& (0+255),4,b
 26741  006C28  8B1F               	bsf	_gblSenseData& (0+255),5,b
 26742  006C2A  8D1F               	bsf	_gblSenseData& (0+255),6,b
 26743                           
 26744                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 26745  006C2C  9F1F               	bcf	_gblSenseData& (0+255),7,b
 26746                           
 26747                           ; BSR set to: 1
 26748                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 26749  006C2E  0E00               	movlw	0
 26750  006C30  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 26754  006C32  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26755  006C34  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26756  006C36  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26757  006C38  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26758                           
 26759                           ; BSR set to: 1
 26760                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 26761  006C3A  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 26762                           
 26763                           ; BSR set to: 1
 26764                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 26765  006C3C  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 26766                           
 26767                           ; BSR set to: 1
 26768                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 26769  006C3E  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 26770                           
 26771                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 26772  006C40  0E00               	movlw	0
 26773  006C42  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 26774                           
 26775                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 26776  006C44  0E00               	movlw	0
 26777  006C46  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 26778                           
 26779                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 26780  006C48  0E00               	movlw	0
 26781  006C4A  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 26782                           
 26783                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 26784  006C4C  0E00               	movlw	0
 26785  006C4E  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 26786                           
 26787                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 26788  006C50  0E0A               	movlw	10
 26789  006C52  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 26790                           
 26791                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 26792  006C54  0E00               	movlw	0
 26793  006C56  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 26794  006C58  0E00               	movlw	0
 26795  006C5A  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 26796  006C5C  0E00               	movlw	0
 26797  006C5E  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 26798  006C60  0E00               	movlw	0
 26799  006C62  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 26800                           
 26801                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 26802  006C64  0E00               	movlw	0
 26803  006C66  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26804                           
 26805                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 26806  006C68  0E00               	movlw	0
 26807  006C6A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26808                           
 26809                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 26810  006C6C  0E00               	movlw	0
 26811  006C6E  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 26812                           
 26813                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 26814  006C70  0E00               	movlw	0
 26815  006C72  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 26816                           
 26817                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 26818  006C74  0E00               	movlw	0
 26819  006C76  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 26820                           
 26821                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 26822  006C78  0E00               	movlw	0
 26823  006C7A  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 26824                           
 26825                           ; BSR set to: 1
 26826  006C7C  0012               	return		;funcret
 26827  006C7E                     __end_of_ResetSenseData:
 26828                           	opt stack 0
 26829                           tosu	equ	0xFFF
 26830                           tosh	equ	0xFFE
 26831                           tosl	equ	0xFFD
 26832                           pclath	equ	0xFFA
 26833                           tblptru	equ	0xFF8
 26834                           tblptrh	equ	0xFF7
 26835                           tblptrl	equ	0xFF6
 26836                           tablat	equ	0xFF5
 26837                           prodh	equ	0xFF4
 26838                           prodl	equ	0xFF3
 26839                           intcon	equ	0xFF2
 26840                           intcon2	equ	0xFF1
 26841                           intcon3	equ	0xFF0
 26842                           indf0	equ	0xFEF
 26843                           postinc0	equ	0xFEE
 26844                           fsr0h	equ	0xFEA
 26845                           fsr0l	equ	0xFE9
 26846                           wreg	equ	0xFE8
 26847                           indf1	equ	0xFE7
 26848                           postdec1	equ	0xFE5
 26849                           plusw1	equ	0xFE3
 26850                           fsr1h	equ	0xFE2
 26851                           fsr1l	equ	0xFE1
 26852                           indf2	equ	0xFDF
 26853                           postinc2	equ	0xFDE
 26854                           postdec2	equ	0xFDD
 26855                           plusw2	equ	0xFDB
 26856                           fsr2h	equ	0xFDA
 26857                           fsr2l	equ	0xFD9
 26858                           status	equ	0xFD8
 26859                           
 26860 ;; *************** function _ExternalFlash_SectorRead *****************
 26861 ;; Defined at:
 26862 ;;		line 40 in file "external_flash.c"
 26863 ;; Parameters:    Size  Location     Type
 26864 ;;  config          2   43[COMRAM] PTR void 
 26865 ;;		 -> NULL(0), 
 26866 ;;  sector_addr     4   45[COMRAM] unsigned long 
 26867 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 26868 ;;		 -> msd_buffer(512), 
 26869 ;; Auto vars:     Size  Location     Type
 26870 ;;  page            2   51[COMRAM] unsigned int 
 26871 ;; Return value:  Size  Location     Type
 26872 ;;                  1    wreg      unsigned char 
 26873 ;; Registers used:
 26874 ;;		wreg, status,2, status,0, cstack
 26875 ;; Tracked objects:
 26876 ;;		On entry : 0/0
 26877 ;;		On exit  : 0/0
 26878 ;;		Unchanged: 0/0
 26879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26880 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26883 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26884 ;;Total ram usage:       10 bytes
 26885 ;; Hardware stack levels used:    1
 26886 ;; Hardware stack levels required when called:    5
 26887 ;; This function calls:
 26888 ;;		_flash_page_read
 26889 ;; This function is called by:
 26890 ;;		_MSDReadHandler
 26891 ;; This function uses a non-reentrant model
 26892 ;;
 26893                           
 26894                           	psect	text119
 26895  00780E                     __ptext119:
 26896                           	opt stack 0
 26897  00780E                     _ExternalFlash_SectorRead:
 26898                           	opt stack 20
 26899                           
 26900                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 26901                           
 26902                           ; BSR set to: 1
 26903                           ;incstack = 0
 26904  00780E  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 26905  007812  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 26906                           
 26907                           ;external_flash.c: 45: if(sector_addr >= 8192)
 26908  007816  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 26909  007818  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 26910  00781A  E104               	bnz	u6790
 26911  00781C  0E20               	movlw	32
 26912  00781E  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 26913  007820  A0D8               	btfss	status,0,c
 26914  007822  D002               	goto	l1821
 26915  007824                     u6790:
 26916                           
 26917                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 26918  007824  0E00               	movlw	0
 26919  007826  0012               	return	
 26920  007828                     l1821:
 26921                           
 26922                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 26923  007828  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 26924  00782C  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 26925  007830  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 26926  007834  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 26927  007838  EC20  F03C         	call	_flash_page_read	;wreg free
 26928                           
 26929                           ;external_flash.c: 53: return 1;
 26930  00783C  0E01               	movlw	1
 26931  00783E  0012               	return	
 26932  007840                     __end_of_ExternalFlash_SectorRead:
 26933                           	opt stack 0
 26934                           tosu	equ	0xFFF
 26935                           tosh	equ	0xFFE
 26936                           tosl	equ	0xFFD
 26937                           pclath	equ	0xFFA
 26938                           tblptru	equ	0xFF8
 26939                           tblptrh	equ	0xFF7
 26940                           tblptrl	equ	0xFF6
 26941                           tablat	equ	0xFF5
 26942                           prodh	equ	0xFF4
 26943                           prodl	equ	0xFF3
 26944                           intcon	equ	0xFF2
 26945                           intcon2	equ	0xFF1
 26946                           intcon3	equ	0xFF0
 26947                           indf0	equ	0xFEF
 26948                           postinc0	equ	0xFEE
 26949                           fsr0h	equ	0xFEA
 26950                           fsr0l	equ	0xFE9
 26951                           wreg	equ	0xFE8
 26952                           indf1	equ	0xFE7
 26953                           postdec1	equ	0xFE5
 26954                           plusw1	equ	0xFE3
 26955                           fsr1h	equ	0xFE2
 26956                           fsr1l	equ	0xFE1
 26957                           indf2	equ	0xFDF
 26958                           postinc2	equ	0xFDE
 26959                           postdec2	equ	0xFDD
 26960                           plusw2	equ	0xFDB
 26961                           fsr2h	equ	0xFDA
 26962                           fsr2l	equ	0xFD9
 26963                           status	equ	0xFD8
 26964                           
 26965 ;; *************** function _flash_page_read *****************
 26966 ;; Defined at:
 26967 ;;		line 419 in file "flash.c"
 26968 ;; Parameters:    Size  Location     Type
 26969 ;;  page            2   39[COMRAM] unsigned int 
 26970 ;;  data            2   41[COMRAM] PTR unsigned char 
 26971 ;;		 -> buffer(512), msd_buffer(512), 
 26972 ;; Auto vars:     Size  Location     Type
 26973 ;;		None
 26974 ;; Return value:  Size  Location     Type
 26975 ;;                  1    wreg      void 
 26976 ;; Registers used:
 26977 ;;		wreg, status,2, status,0, cstack
 26978 ;; Tracked objects:
 26979 ;;		On entry : 0/0
 26980 ;;		On exit  : 0/0
 26981 ;;		Unchanged: 0/0
 26982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26987 ;;Total ram usage:        4 bytes
 26988 ;; Hardware stack levels used:    1
 26989 ;; Hardware stack levels required when called:    4
 26990 ;; This function calls:
 26991 ;;		__flash_partial_read
 26992 ;;		_spi_set_configuration
 26993 ;; This function is called by:
 26994 ;;		_ExternalFlash_SectorRead
 26995 ;;		_fat_get_format_status
 26996 ;; This function uses a non-reentrant model
 26997 ;;
 26998                           
 26999                           	psect	text120
 27000  007840                     __ptext120:
 27001                           	opt stack 0
 27002  007840                     _flash_page_read:
 27003                           	opt stack 23
 27004                           
 27005                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 27006                           
 27007                           ;incstack = 0
 27008  007840  0E00               	movlw	0
 27009  007842  ECB1  F022         	call	_spi_set_configuration
 27010                           
 27011                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 27012  007846  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 27013  00784A  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 27014  00784E  0E00               	movlw	0
 27015  007850  6E17               	movwf	__flash_partial_read@start+1,c
 27016  007852  0E00               	movlw	0
 27017  007854  6E16               	movwf	__flash_partial_read@start,c
 27018  007856  0E02               	movlw	2
 27019  007858  6E19               	movwf	__flash_partial_read@length+1,c
 27020  00785A  0E00               	movlw	0
 27021  00785C  6E18               	movwf	__flash_partial_read@length,c
 27022  00785E  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 27023  007862  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 27024  007866  EC6B  F032         	call	__flash_partial_read	;wreg free
 27025                           
 27026                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 27027  00786A  0E01               	movlw	1
 27028  00786C  ECB1  F022         	call	_spi_set_configuration
 27029  007870  0012               	return		;funcret
 27030  007872                     __end_of_flash_page_read:
 27031                           	opt stack 0
 27032                           tosu	equ	0xFFF
 27033                           tosh	equ	0xFFE
 27034                           tosl	equ	0xFFD
 27035                           pclath	equ	0xFFA
 27036                           tblptru	equ	0xFF8
 27037                           tblptrh	equ	0xFF7
 27038                           tblptrl	equ	0xFF6
 27039                           tablat	equ	0xFF5
 27040                           prodh	equ	0xFF4
 27041                           prodl	equ	0xFF3
 27042                           intcon	equ	0xFF2
 27043                           intcon2	equ	0xFF1
 27044                           intcon3	equ	0xFF0
 27045                           indf0	equ	0xFEF
 27046                           postinc0	equ	0xFEE
 27047                           fsr0h	equ	0xFEA
 27048                           fsr0l	equ	0xFE9
 27049                           wreg	equ	0xFE8
 27050                           indf1	equ	0xFE7
 27051                           postdec1	equ	0xFE5
 27052                           plusw1	equ	0xFE3
 27053                           fsr1h	equ	0xFE2
 27054                           fsr1l	equ	0xFE1
 27055                           indf2	equ	0xFDF
 27056                           postinc2	equ	0xFDE
 27057                           postdec2	equ	0xFDD
 27058                           plusw2	equ	0xFDB
 27059                           fsr2h	equ	0xFDA
 27060                           fsr2l	equ	0xFD9
 27061                           status	equ	0xFD8
 27062                           
 27063 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 27064 ;; Defined at:
 27065 ;;		line 993 in file "usb_device_msd.c"
 27066 ;; Parameters:    Size  Location     Type
 27067 ;;  DiExpected      2    0[COMRAM] unsigned int 
 27068 ;; Auto vars:     Size  Location     Type
 27069 ;;		None
 27070 ;; Return value:  Size  Location     Type
 27071 ;;                  1    wreg      void 
 27072 ;; Registers used:
 27073 ;;		wreg, status,2, status,0
 27074 ;; Tracked objects:
 27075 ;;		On entry : 0/0
 27076 ;;		On exit  : 0/0
 27077 ;;		Unchanged: 0/0
 27078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27081 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27083 ;;Total ram usage:        6 bytes
 27084 ;; Hardware stack levels used:    1
 27085 ;; This function calls:
 27086 ;;		Nothing
 27087 ;; This function is called by:
 27088 ;;		_MSDProcessCommandMediaPresent
 27089 ;; This function uses a non-reentrant model
 27090 ;;
 27091                           
 27092                           	psect	text121
 27093  005CBC                     __ptext121:
 27094                           	opt stack 0
 27095  005CBC                     _MSDComputeDeviceInAndResidue:
 27096                           	opt stack 26
 27097                           
 27098                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 27099                           
 27100                           ;incstack = 0
 27101  005CBC  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 27102  005CBE  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 27103  005CC0  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 27104  005CC2  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 27105  005CC4  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 27106  005CC6  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 27107  005CC8  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 27108  005CCA  0101               	movlb	1	; () banked
 27109  005CCC  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 27110  005CCE  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 27111  005CD0  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 27112  005CD2  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 27113  005CD4  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 27114  005CD6  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 27115  005CD8  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 27116  005CDA  B0D8               	btfsc	status,0,c
 27117  005CDC  D00E               	goto	l659
 27118                           
 27119                           ; BSR set to: 1
 27120                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 27121  005CDE  0E00               	movlw	0
 27122  005CE0  010D               	movlb	13	; () banked
 27123  005CE2  6F88               	movwf	136,b	;volatile
 27124  005CE4  0E00               	movlw	0
 27125  005CE6  6F89               	movwf	137,b	;volatile
 27126  005CE8  0E00               	movlw	0
 27127  005CEA  6F8A               	movwf	138,b	;volatile
 27128  005CEC  0E00               	movlw	0
 27129  005CEE  6F8B               	movwf	139,b	;volatile
 27130                           
 27131                           ; BSR set to: 13
 27132                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 27133  005CF0  C108  F086         	movff	_gblCBW+8,_TransferLength
 27134  005CF4  C109  F087         	movff	_gblCBW+9,_TransferLength+1
 27135                           
 27136                           ;usb_device_msd.c: 1002: }
 27137  005CF8  0012               	return	
 27138  005CFA                     l659:
 27139                           
 27140                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 27141                           
 27142                           ; BSR set to: 13
 27143  005CFA  0100               	movlb	0	; () banked
 27144  005CFC  5186               	movf	_TransferLength& (0+255),w,b
 27145  005CFE  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 27146  005D00  5187               	movf	(_TransferLength+1)& (0+255),w,b
 27147  005D02  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 27148  005D04  B0D8               	btfsc	status,0,c
 27149  005D06  D004               	goto	l661
 27150                           
 27151                           ; BSR set to: 0
 27152                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 27153  005D08  C001  F086         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 27154  005D0C  C002  F087         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 27155  005D10                     l661:
 27156                           
 27157                           ; BSR set to: 0
 27158                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 27159                           
 27160                           ; BSR set to: 0
 27161  005D10  5186               	movf	_TransferLength& (0+255),w,b
 27162  005D12  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 27163  005D14  5187               	movf	(_TransferLength+1)& (0+255),w,b
 27164  005D16  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 27165  005D18  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 27166  005D1A  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 27167  005D1C  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 27168  005D1E  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 27169  005D20  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 27170  005D22  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 27171  005D24  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 27172  005D26  0E00               	movlw	0
 27173  005D28  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 27174  005D2A  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 27175  005D2C  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 27176  005D2E  0101               	movlb	1	; () banked
 27177  005D30  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27178  005D32  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 27179  005D34  010D               	movlb	13	; () banked
 27180  005D36  6F88               	movwf	136,b	;volatile
 27181  005D38  0101               	movlb	1	; () banked
 27182  005D3A  5109               	movf	(_gblCBW+9)& (0+255),w,b
 27183  005D3C  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 27184  005D3E  010D               	movlb	13	; () banked
 27185  005D40  6F89               	movwf	137,b	;volatile
 27186  005D42  0101               	movlb	1	; () banked
 27187  005D44  510A               	movf	(_gblCBW+10)& (0+255),w,b
 27188  005D46  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 27189  005D48  010D               	movlb	13	; () banked
 27190  005D4A  6F8A               	movwf	138,b	;volatile
 27191  005D4C  0101               	movlb	1	; () banked
 27192  005D4E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 27193  005D50  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 27194  005D52  010D               	movlb	13	; () banked
 27195  005D54  6F8B               	movwf	139,b	;volatile
 27196  005D56  0012               	return	
 27197  005D58                     __end_of_MSDComputeDeviceInAndResidue:
 27198                           	opt stack 0
 27199                           tosu	equ	0xFFF
 27200                           tosh	equ	0xFFE
 27201                           tosl	equ	0xFFD
 27202                           pclath	equ	0xFFA
 27203                           tblptru	equ	0xFF8
 27204                           tblptrh	equ	0xFF7
 27205                           tblptrl	equ	0xFF6
 27206                           tablat	equ	0xFF5
 27207                           prodh	equ	0xFF4
 27208                           prodl	equ	0xFF3
 27209                           intcon	equ	0xFF2
 27210                           intcon2	equ	0xFF1
 27211                           intcon3	equ	0xFF0
 27212                           indf0	equ	0xFEF
 27213                           postinc0	equ	0xFEE
 27214                           fsr0h	equ	0xFEA
 27215                           fsr0l	equ	0xFE9
 27216                           wreg	equ	0xFE8
 27217                           indf1	equ	0xFE7
 27218                           postdec1	equ	0xFE5
 27219                           plusw1	equ	0xFE3
 27220                           fsr1h	equ	0xFE2
 27221                           fsr1l	equ	0xFE1
 27222                           indf2	equ	0xFDF
 27223                           postinc2	equ	0xFDE
 27224                           postdec2	equ	0xFDD
 27225                           plusw2	equ	0xFDB
 27226                           fsr2h	equ	0xFDA
 27227                           fsr2l	equ	0xFD9
 27228                           status	equ	0xFD8
 27229                           
 27230 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 27231 ;; Defined at:
 27232 ;;		line 18 in file "external_flash.c"
 27233 ;; Parameters:    Size  Location     Type
 27234 ;;  config          2    0[COMRAM] PTR void 
 27235 ;;		 -> NULL(0), 
 27236 ;; Auto vars:     Size  Location     Type
 27237 ;;		None
 27238 ;; Return value:  Size  Location     Type
 27239 ;;                  2    0[COMRAM] unsigned int 
 27240 ;; Registers used:
 27241 ;;		wreg, status,2
 27242 ;; Tracked objects:
 27243 ;;		On entry : 0/0
 27244 ;;		On exit  : 0/0
 27245 ;;		Unchanged: 0/0
 27246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27251 ;;Total ram usage:        2 bytes
 27252 ;; Hardware stack levels used:    1
 27253 ;; This function calls:
 27254 ;;		Nothing
 27255 ;; This function is called by:
 27256 ;;		_MSDProcessCommandMediaPresent
 27257 ;; This function uses a non-reentrant model
 27258 ;;
 27259                           
 27260                           	psect	text122
 27261  007D90                     __ptext122:
 27262                           	opt stack 0
 27263  007D90                     _ExternalFlash_SectorSizeRead:
 27264                           	opt stack 26
 27265                           
 27266                           ;external_flash.c: 20: return 512;
 27267                           
 27268                           ; BSR set to: 13
 27269                           ;incstack = 0
 27270  007D90  0E02               	movlw	2
 27271  007D92  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 27272  007D94  0E00               	movlw	0
 27273  007D96  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 27274  007D98  0012               	return	
 27275  007D9A                     __end_of_ExternalFlash_SectorSizeRead:
 27276                           	opt stack 0
 27277                           tosu	equ	0xFFF
 27278                           tosh	equ	0xFFE
 27279                           tosl	equ	0xFFD
 27280                           pclath	equ	0xFFA
 27281                           tblptru	equ	0xFF8
 27282                           tblptrh	equ	0xFF7
 27283                           tblptrl	equ	0xFF6
 27284                           tablat	equ	0xFF5
 27285                           prodh	equ	0xFF4
 27286                           prodl	equ	0xFF3
 27287                           intcon	equ	0xFF2
 27288                           intcon2	equ	0xFF1
 27289                           intcon3	equ	0xFF0
 27290                           indf0	equ	0xFEF
 27291                           postinc0	equ	0xFEE
 27292                           fsr0h	equ	0xFEA
 27293                           fsr0l	equ	0xFE9
 27294                           wreg	equ	0xFE8
 27295                           indf1	equ	0xFE7
 27296                           postdec1	equ	0xFE5
 27297                           plusw1	equ	0xFE3
 27298                           fsr1h	equ	0xFE2
 27299                           fsr1l	equ	0xFE1
 27300                           indf2	equ	0xFDF
 27301                           postinc2	equ	0xFDE
 27302                           postdec2	equ	0xFDD
 27303                           plusw2	equ	0xFDB
 27304                           fsr2h	equ	0xFDA
 27305                           fsr2l	equ	0xFD9
 27306                           status	equ	0xFD8
 27307                           
 27308 ;; *************** function _ExternalFlash_CapacityRead *****************
 27309 ;; Defined at:
 27310 ;;		line 23 in file "external_flash.c"
 27311 ;; Parameters:    Size  Location     Type
 27312 ;;  config          2    0[COMRAM] PTR void 
 27313 ;;		 -> NULL(0), 
 27314 ;; Auto vars:     Size  Location     Type
 27315 ;;		None
 27316 ;; Return value:  Size  Location     Type
 27317 ;;                  4    0[COMRAM] unsigned long 
 27318 ;; Registers used:
 27319 ;;		wreg, status,2
 27320 ;; Tracked objects:
 27321 ;;		On entry : 0/0
 27322 ;;		On exit  : 0/0
 27323 ;;		Unchanged: 0/0
 27324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27329 ;;Total ram usage:        4 bytes
 27330 ;; Hardware stack levels used:    1
 27331 ;; This function calls:
 27332 ;;		Nothing
 27333 ;; This function is called by:
 27334 ;;		_MSDProcessCommandMediaPresent
 27335 ;; This function uses a non-reentrant model
 27336 ;;
 27337                           
 27338                           	psect	text123
 27339  007CE6                     __ptext123:
 27340                           	opt stack 0
 27341  007CE6                     _ExternalFlash_CapacityRead:
 27342                           	opt stack 26
 27343                           
 27344                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 27345                           
 27346                           ;incstack = 0
 27347  007CE6  0EFF               	movlw	255
 27348  007CE8  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 27349  007CEA  0E1F               	movlw	31
 27350  007CEC  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 27351  007CEE  0E00               	movlw	0
 27352  007CF0  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 27353  007CF2  0E00               	movlw	0
 27354  007CF4  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 27355  007CF6  0012               	return	
 27356  007CF8                     __end_of_ExternalFlash_CapacityRead:
 27357                           	opt stack 0
 27358                           tosu	equ	0xFFF
 27359                           tosh	equ	0xFFE
 27360                           tosl	equ	0xFFD
 27361                           pclath	equ	0xFFA
 27362                           tblptru	equ	0xFF8
 27363                           tblptrh	equ	0xFF7
 27364                           tblptrl	equ	0xFF6
 27365                           tablat	equ	0xFF5
 27366                           prodh	equ	0xFF4
 27367                           prodl	equ	0xFF3
 27368                           intcon	equ	0xFF2
 27369                           intcon2	equ	0xFF1
 27370                           intcon3	equ	0xFF0
 27371                           indf0	equ	0xFEF
 27372                           postinc0	equ	0xFEE
 27373                           fsr0h	equ	0xFEA
 27374                           fsr0l	equ	0xFE9
 27375                           wreg	equ	0xFE8
 27376                           indf1	equ	0xFE7
 27377                           postdec1	equ	0xFE5
 27378                           plusw1	equ	0xFE3
 27379                           fsr1h	equ	0xFE2
 27380                           fsr1l	equ	0xFE1
 27381                           indf2	equ	0xFDF
 27382                           postinc2	equ	0xFDE
 27383                           postdec2	equ	0xFDD
 27384                           plusw2	equ	0xFDB
 27385                           fsr2h	equ	0xFDA
 27386                           fsr2l	equ	0xFD9
 27387                           status	equ	0xFD8
 27388                           
 27389 ;; *************** function _ExternalFlash_MediaInitialize *****************
 27390 ;; Defined at:
 27391 ;;		line 10 in file "external_flash.c"
 27392 ;; Parameters:    Size  Location     Type
 27393 ;;  config          2    0[COMRAM] PTR void 
 27394 ;;		 -> NULL(0), 
 27395 ;; Auto vars:     Size  Location     Type
 27396 ;;		None
 27397 ;; Return value:  Size  Location     Type
 27398 ;;                  2    0[COMRAM] PTR struct .
 27399 ;; Registers used:
 27400 ;;		wreg, status,2, status,0
 27401 ;; Tracked objects:
 27402 ;;		On entry : 0/0
 27403 ;;		On exit  : 0/0
 27404 ;;		Unchanged: 0/0
 27405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27410 ;;Total ram usage:        2 bytes
 27411 ;; Hardware stack levels used:    1
 27412 ;; This function calls:
 27413 ;;		Nothing
 27414 ;; This function is called by:
 27415 ;;		_USBMSDInit
 27416 ;;		_MSDProcessCommand
 27417 ;; This function uses a non-reentrant model
 27418 ;;
 27419                           
 27420                           	psect	text124
 27421  007C60                     __ptext124:
 27422                           	opt stack 0
 27423  007C60                     _ExternalFlash_MediaInitialize:
 27424                           	opt stack 26
 27425                           
 27426                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 27427                           
 27428                           ;incstack = 0
 27429  007C60  0101               	movlb	1	; () banked
 27430  007C62  81DC               	bsf	(_mediaInformation+1)& (0+255),0,b
 27431                           
 27432                           ; BSR set to: 1
 27433                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 27434  007C64  0E02               	movlw	2
 27435  007C66  6FDE               	movwf	(_mediaInformation+3)& (0+255),b
 27436  007C68  0E00               	movlw	0
 27437  007C6A  6FDD               	movwf	(_mediaInformation+2)& (0+255),b
 27438                           
 27439                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 27440  007C6C  0E00               	movlw	0
 27441  007C6E  6FDB               	movwf	_mediaInformation& (0+255),b
 27442                           
 27443                           ; BSR set to: 1
 27444                           ;external_flash.c: 15: return &mediaInformation;
 27445  007C70  0EDB               	movlw	low _mediaInformation
 27446  007C72  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 27447  007C74  0E01               	movlw	high _mediaInformation
 27448  007C76  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 27449  007C78  0012               	return	
 27450  007C7A                     __end_of_ExternalFlash_MediaInitialize:
 27451                           	opt stack 0
 27452                           tosu	equ	0xFFF
 27453                           tosh	equ	0xFFE
 27454                           tosl	equ	0xFFD
 27455                           pclath	equ	0xFFA
 27456                           tblptru	equ	0xFF8
 27457                           tblptrh	equ	0xFF7
 27458                           tblptrl	equ	0xFF6
 27459                           tablat	equ	0xFF5
 27460                           prodh	equ	0xFF4
 27461                           prodl	equ	0xFF3
 27462                           intcon	equ	0xFF2
 27463                           intcon2	equ	0xFF1
 27464                           intcon3	equ	0xFF0
 27465                           indf0	equ	0xFEF
 27466                           postinc0	equ	0xFEE
 27467                           fsr0h	equ	0xFEA
 27468                           fsr0l	equ	0xFE9
 27469                           wreg	equ	0xFE8
 27470                           indf1	equ	0xFE7
 27471                           postdec1	equ	0xFE5
 27472                           plusw1	equ	0xFE3
 27473                           fsr1h	equ	0xFE2
 27474                           fsr1l	equ	0xFE1
 27475                           indf2	equ	0xFDF
 27476                           postinc2	equ	0xFDE
 27477                           postdec2	equ	0xFDD
 27478                           plusw2	equ	0xFDB
 27479                           fsr2h	equ	0xFDA
 27480                           fsr2l	equ	0xFD9
 27481                           status	equ	0xFD8
 27482                           
 27483 ;; *************** function _ExternalFlash_MediaDetect *****************
 27484 ;; Defined at:
 27485 ;;		line 29 in file "external_flash.c"
 27486 ;; Parameters:    Size  Location     Type
 27487 ;;  config          2    0[COMRAM] PTR void 
 27488 ;;		 -> NULL(0), 
 27489 ;; Auto vars:     Size  Location     Type
 27490 ;;		None
 27491 ;; Return value:  Size  Location     Type
 27492 ;;                  1    wreg      unsigned char 
 27493 ;; Registers used:
 27494 ;;		wreg
 27495 ;; Tracked objects:
 27496 ;;		On entry : 0/0
 27497 ;;		On exit  : 0/0
 27498 ;;		Unchanged: 0/0
 27499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27504 ;;Total ram usage:        2 bytes
 27505 ;; Hardware stack levels used:    1
 27506 ;; This function calls:
 27507 ;;		Nothing
 27508 ;; This function is called by:
 27509 ;;		_USBMSDInit
 27510 ;;		_MSDProcessCommand
 27511 ;; This function uses a non-reentrant model
 27512 ;;
 27513                           
 27514                           	psect	text125
 27515  007E22                     __ptext125:
 27516                           	opt stack 0
 27517  007E22                     _ExternalFlash_MediaDetect:
 27518                           	opt stack 26
 27519                           
 27520                           ;external_flash.c: 31: return 1;
 27521                           
 27522                           ; BSR set to: 1
 27523                           ;incstack = 0
 27524  007E22  0E01               	movlw	1
 27525  007E24  0012               	return	
 27526  007E26                     __end_of_ExternalFlash_MediaDetect:
 27527                           	opt stack 0
 27528                           tosu	equ	0xFFF
 27529                           tosh	equ	0xFFE
 27530                           tosl	equ	0xFFD
 27531                           pclath	equ	0xFFA
 27532                           tblptru	equ	0xFF8
 27533                           tblptrh	equ	0xFF7
 27534                           tblptrl	equ	0xFF6
 27535                           tablat	equ	0xFF5
 27536                           prodh	equ	0xFF4
 27537                           prodl	equ	0xFF3
 27538                           intcon	equ	0xFF2
 27539                           intcon2	equ	0xFF1
 27540                           intcon3	equ	0xFF0
 27541                           indf0	equ	0xFEF
 27542                           postinc0	equ	0xFEE
 27543                           fsr0h	equ	0xFEA
 27544                           fsr0l	equ	0xFE9
 27545                           wreg	equ	0xFE8
 27546                           indf1	equ	0xFE7
 27547                           postdec1	equ	0xFE5
 27548                           plusw1	equ	0xFE3
 27549                           fsr1h	equ	0xFE2
 27550                           fsr1l	equ	0xFE1
 27551                           indf2	equ	0xFDF
 27552                           postinc2	equ	0xFDE
 27553                           postdec2	equ	0xFDD
 27554                           plusw2	equ	0xFDB
 27555                           fsr2h	equ	0xFDA
 27556                           fsr2l	equ	0xFD9
 27557                           status	equ	0xFD8
 27558                           
 27559 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 27560 ;; Defined at:
 27561 ;;		line 74 in file "app_device_custom_hid.c"
 27562 ;; Parameters:    Size  Location     Type
 27563 ;;		None
 27564 ;; Auto vars:     Size  Location     Type
 27565 ;;  idx             1    0        unsigned char 
 27566 ;; Return value:  Size  Location     Type
 27567 ;;                  1    wreg      void 
 27568 ;; Registers used:
 27569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27570 ;; Tracked objects:
 27571 ;;		On entry : 0/0
 27572 ;;		On exit  : 0/0
 27573 ;;		Unchanged: 0/0
 27574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27577 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27578 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27579 ;;Total ram usage:        4 bytes
 27580 ;; Hardware stack levels used:    1
 27581 ;; Hardware stack levels required when called:   11
 27582 ;; This function calls:
 27583 ;;		_USBTransferOnePacket
 27584 ;;		_api_parse
 27585 ;;		_api_prepare
 27586 ;; This function is called by:
 27587 ;;		_main
 27588 ;; This function uses a non-reentrant model
 27589 ;;
 27590                           
 27591                           	psect	text126
 27592  0057AE                     __ptext126:
 27593                           	opt stack 0
 27594  0057AE                     _APP_DeviceCustomHIDTasks:
 27595                           	opt stack 19
 27596                           
 27597                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 27598                           
 27599                           ;incstack = 0
 27600  0057AE  0E20               	movlw	32
 27601  0057B0  0100               	movlb	0	; () banked
 27602  0057B2  61B0               	cpfslt	_USBDeviceState& (0+255),b
 27603  0057B4  D001               	goto	l960
 27604  0057B6  0012               	return	
 27605  0057B8                     l960:
 27606                           
 27607                           ; BSR set to: 0
 27608                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 27609  0057B8  B265               	btfsc	3941,1,c	;volatile
 27610  0057BA  0012               	return	
 27611                           
 27612                           ; BSR set to: 0
 27613                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 27614                           
 27615                           ; BSR set to: 0
 27616                           
 27617                           ; BSR set to: 0
 27618                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 27619  0057BC  5184               	movf	_USBOutHandle& (0+255),w,b
 27620  0057BE  1185               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 27621  0057C0  B4D8               	btfsc	status,2,c
 27622  0057C2  D006               	goto	u11380
 27623                           
 27624                           ; BSR set to: 0
 27625  0057C4  C084  FFD9         	movff	_USBOutHandle,fsr2l
 27626  0057C8  C085  FFDA         	movff	_USBOutHandle+1,fsr2h
 27627  0057CC  BEDF               	btfsc	indf2,7,c
 27628  0057CE  0012               	return	
 27629  0057D0                     u11380:
 27630                           
 27631                           ; BSR set to: 0
 27632                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 27633                           
 27634                           ; BSR set to: 0
 27635  0057D0  0101               	movlb	1	; () banked
 27636  0057D2  516E               	movf	_USBInHandle& (0+255),w,b
 27637  0057D4  116F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 27638  0057D6  B4D8               	btfsc	status,2,c
 27639  0057D8  D006               	goto	u11400
 27640                           
 27641                           ; BSR set to: 1
 27642  0057DA  C16E  FFD9         	movff	_USBInHandle,fsr2l
 27643  0057DE  C16F  FFDA         	movff	_USBInHandle+1,fsr2h
 27644  0057E2  BEDF               	btfsc	indf2,7,c
 27645  0057E4  D020               	goto	l966
 27646  0057E6                     u11400:
 27647                           
 27648                           ; BSR set to: 1
 27649                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 27650                           
 27651                           ; BSR set to: 1
 27652  0057E6  0E80               	movlw	_ReceivedDataBuffer& (0+255)
 27653  0057E8  0100               	movlb	0	; () banked
 27654  0057EA  6FF2               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 27655  0057EC  6BF3               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 27656  0057EE  C0F2  F0EE         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 27657  0057F2  C0F3  F0EF         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 27658  0057F6  0E00               	movlw	_ToSendDataBuffer& (0+255)
 27659  0057F8  6FF4               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 27660  0057FA  6BF5               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 27661  0057FC  C0F4  F0F0         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 27662  005800  C0F5  F0F1         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 27663  005804  EC81  F01E         	call	_api_prepare	;wreg free
 27664                           
 27665                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 27666  005808  0E01               	movlw	1
 27667  00580A  6E01               	movwf	USBTransferOnePacket@dir,c
 27668  00580C  0E00               	movlw	low _ToSendDataBuffer
 27669  00580E  6E02               	movwf	USBTransferOnePacket@data,c
 27670  005810  0E03               	movlw	high _ToSendDataBuffer
 27671  005812  6E03               	movwf	USBTransferOnePacket@data+1,c
 27672  005814  0E40               	movlw	64
 27673  005816  6E04               	movwf	USBTransferOnePacket@len,c
 27674  005818  0E01               	movlw	1
 27675  00581A  ECB0  F021         	call	_USBTransferOnePacket
 27676  00581E  C001  F16E         	movff	?_USBTransferOnePacket,_USBInHandle
 27677  005822  C002  F16F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 27678  005826                     l966:
 27679                           
 27680                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 27681  005826  0E80               	movlw	low _ReceivedDataBuffer
 27682  005828  0100               	movlb	0	; () banked
 27683  00582A  6FE8               	movwf	api_parse@inBuffer& (0+255),b
 27684  00582C  0E02               	movlw	high _ReceivedDataBuffer
 27685  00582E  6FE9               	movwf	(api_parse@inBuffer+1)& (0+255),b
 27686  005830  0E40               	movlw	64
 27687  005832  6FEA               	movwf	api_parse@receivedDataLength& (0+255),b
 27688  005834  EC43  F026         	call	_api_parse	;wreg free
 27689                           
 27690                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 27691  005838  0E00               	movlw	0
 27692  00583A  6E01               	movwf	USBTransferOnePacket@dir,c
 27693  00583C  0E80               	movlw	low _ReceivedDataBuffer
 27694  00583E  6E02               	movwf	USBTransferOnePacket@data,c
 27695  005840  0E02               	movlw	high _ReceivedDataBuffer
 27696  005842  6E03               	movwf	USBTransferOnePacket@data+1,c
 27697  005844  0E40               	movlw	64
 27698  005846  6E04               	movwf	USBTransferOnePacket@len,c
 27699  005848  0E01               	movlw	1
 27700  00584A  ECB0  F021         	call	_USBTransferOnePacket
 27701  00584E  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 27702  005852  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 27703  005856  0012               	return	
 27704  005858                     __end_of_APP_DeviceCustomHIDTasks:
 27705                           	opt stack 0
 27706                           tosu	equ	0xFFF
 27707                           tosh	equ	0xFFE
 27708                           tosl	equ	0xFFD
 27709                           pclath	equ	0xFFA
 27710                           tblptru	equ	0xFF8
 27711                           tblptrh	equ	0xFF7
 27712                           tblptrl	equ	0xFF6
 27713                           tablat	equ	0xFF5
 27714                           prodh	equ	0xFF4
 27715                           prodl	equ	0xFF3
 27716                           intcon	equ	0xFF2
 27717                           intcon2	equ	0xFF1
 27718                           intcon3	equ	0xFF0
 27719                           indf0	equ	0xFEF
 27720                           postinc0	equ	0xFEE
 27721                           fsr0h	equ	0xFEA
 27722                           fsr0l	equ	0xFE9
 27723                           wreg	equ	0xFE8
 27724                           indf1	equ	0xFE7
 27725                           postdec1	equ	0xFE5
 27726                           plusw1	equ	0xFE3
 27727                           fsr1h	equ	0xFE2
 27728                           fsr1l	equ	0xFE1
 27729                           indf2	equ	0xFDF
 27730                           postinc2	equ	0xFDE
 27731                           postdec2	equ	0xFDD
 27732                           plusw2	equ	0xFDB
 27733                           fsr2h	equ	0xFDA
 27734                           fsr2l	equ	0xFD9
 27735                           status	equ	0xFD8
 27736                           
 27737 ;; *************** function _api_prepare *****************
 27738 ;; Defined at:
 27739 ;;		line 52 in file "api.c"
 27740 ;; Parameters:    Size  Location     Type
 27741 ;;  inBuffer        2   57[BANK0 ] PTR unsigned char 
 27742 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 27743 ;;  outBuffer       2   59[BANK0 ] PTR unsigned char 
 27744 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 27745 ;; Auto vars:     Size  Location     Type
 27746 ;;  command         1   92[COMRAM] enum E6715
 27747 ;; Return value:  Size  Location     Type
 27748 ;;                  1    wreg      void 
 27749 ;; Registers used:
 27750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27751 ;; Tracked objects:
 27752 ;;		On entry : 0/0
 27753 ;;		On exit  : 0/0
 27754 ;;		Unchanged: 0/0
 27755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27756 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27759 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27760 ;;Total ram usage:        5 bytes
 27761 ;; Hardware stack levels used:    1
 27762 ;; Hardware stack levels required when called:    9
 27763 ;; This function calls:
 27764 ;;		__fill_buffer_find_file
 27765 ;;		__fill_buffer_get_bootloader_details
 27766 ;;		__fill_buffer_get_configuration
 27767 ;;		__fill_buffer_get_display
 27768 ;;		__fill_buffer_get_file_details
 27769 ;;		__fill_buffer_get_status
 27770 ;;		__fill_buffer_read_file
 27771 ;;		_flash_is_busy
 27772 ;;		_memcpy
 27773 ;; This function is called by:
 27774 ;;		_main
 27775 ;;		_APP_DeviceCustomHIDTasks
 27776 ;; This function uses a non-reentrant model
 27777 ;;
 27778                           
 27779                           	psect	text127
 27780  003D02                     __ptext127:
 27781                           	opt stack 0
 27782  003D02                     _api_prepare:
 27783                           	opt stack 21
 27784                           
 27785                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 27786                           
 27787                           ;incstack = 0
 27788  003D02  C0EE  FFD9         	movff	api_prepare@inBuffer,fsr2l
 27789  003D06  C0EF  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 27790  003D0A  50DF               	movf	indf2,w,c
 27791  003D0C  6E5D               	movwf	api_prepare@command,c
 27792                           
 27793                           ;api.c: 56: if(command>0x7F)
 27794  003D0E  0E7F               	movlw	127
 27795  003D10  645D               	cpfsgt	api_prepare@command,c
 27796  003D12  D073               	goto	l2519
 27797                           
 27798                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 27799  003D14  EC54  F03E         	call	_flash_is_busy	;wreg free
 27800  003D18  0900               	iorlw	0
 27801  003D1A  B4D8               	btfsc	status,2,c
 27802  003D1C  D028               	goto	l2513
 27803                           
 27804                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 27805  003D1E  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27806  003D22  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27807  003D26  ECF5  F024         	call	__fill_buffer_get_status	;wreg free
 27808                           
 27809                           ;api.c: 64: return;
 27810  003D2A  0012               	return	
 27811  003D2C                     
 27812                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 27813  003D2C  C0EE  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 27814  003D30  C0EF  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 27815  003D34  C0F0  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 27816  003D38  C0F1  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 27817  003D3C  EC36  F034         	call	__fill_buffer_get_file_details	;wreg free
 27818                           
 27819                           ;api.c: 73: break;
 27820  003D40  0012               	return	
 27821  003D42                     
 27822                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 27823  003D42  C0EE  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 27824  003D46  C0EF  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 27825  003D4A  C0F0  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 27826  003D4E  C0F1  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 27827  003D52  ECD0  F02C         	call	__fill_buffer_find_file	;wreg free
 27828                           
 27829                           ;api.c: 78: break;
 27830  003D56  0012               	return	
 27831  003D58                     
 27832                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 27833  003D58  C0EE  F055         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 27834  003D5C  C0EF  F056         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 27835  003D60  C0F0  F057         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 27836  003D64  C0F1  F058         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 27837  003D68  EC9D  F011         	call	__fill_buffer_read_file	;wreg free
 27838                           
 27839                           ;api.c: 84: }
 27840                           
 27841                           ;api.c: 83: break;
 27842  003D6C  0012               	return	
 27843  003D6E                     l2513:
 27844  003D6E  505D               	movf	api_prepare@command,w,c
 27845                           
 27846                           ; Switch size 1, requested type "space"
 27847                           ; Number of cases is 3, Range of values is 128 to 130
 27848                           ; switch strategies available:
 27849                           ; Name         Instructions Cycles
 27850                           ; simple_byte           10     6 (average)
 27851                           ;	Chosen strategy is simple_byte
 27852  003D70  0A80               	xorlw	128	; case 128
 27853  003D72  B4D8               	btfsc	status,2,c
 27854  003D74  D7DB               	goto	l2514
 27855  003D76  0A01               	xorlw	1	; case 129
 27856  003D78  B4D8               	btfsc	status,2,c
 27857  003D7A  D7E3               	goto	l2516
 27858  003D7C  0A03               	xorlw	3	; case 130
 27859  003D7E  A4D8               	btfss	status,2,c
 27860                           
 27861                           ;api.c: 85: }
 27862  003D80  0012               	return	
 27863  003D82  D7EA               	goto	l2517
 27864  003D84                     
 27865                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 27866  003D84  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27867  003D88  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27868  003D8C  ECF5  F024         	call	__fill_buffer_get_status	;wreg free
 27869                           
 27870                           ;api.c: 94: break;
 27871  003D90  0012               	return	
 27872  003D92                     
 27873                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 27874  003D92  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27875  003D96  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27876  003D9A  0E00               	movlw	0
 27877  003D9C  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27878  003D9E  EC7A  F02A         	call	__fill_buffer_get_display	;wreg free
 27879                           
 27880                           ;api.c: 99: break;
 27881  003DA2  0012               	return	
 27882  003DA4                     
 27883                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 27884  003DA4  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27885  003DA8  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27886  003DAC  0E01               	movlw	1
 27887  003DAE  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27888  003DB0  EC7A  F02A         	call	__fill_buffer_get_display	;wreg free
 27889                           
 27890                           ;api.c: 104: break;
 27891  003DB4  0012               	return	
 27892  003DB6                     
 27893                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 27894  003DB6  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 27895  003DBA  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 27896  003DBE  ECA7  F013         	call	__fill_buffer_get_bootloader_details	;wreg free
 27897                           
 27898                           ;api.c: 109: break;
 27899  003DC2  0012               	return	
 27900  003DC4                     
 27901                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 27902  003DC4  C0F0  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 27903  003DC8  C0F1  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 27904  003DCC  ECC0  F02D         	call	__fill_buffer_get_configuration	;wreg free
 27905                           
 27906                           ;api.c: 114: break;
 27907  003DD0  0012               	return	
 27908  003DD2                     
 27909                           ;api.c: 118: memcpy(outBuffer, inBuffer, 64);
 27910  003DD2  C0F0  F001         	movff	api_prepare@outBuffer,memcpy@d1
 27911  003DD6  C0F1  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 27912  003DDA  C0EE  F003         	movff	api_prepare@inBuffer,memcpy@s1
 27913  003DDE  C0EF  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 27914  003DE2  5003               	movf	memcpy@s1,w,c
 27915  003DE4  1004               	iorwf	memcpy@s1+1,w,c
 27916  003DE6  A4D8               	btfss	status,2,c
 27917  003DE8  0E20               	movlw	32
 27918  003DEA  6E05               	movwf	memcpy@s1+2,c
 27919  003DEC  0E00               	movlw	0
 27920  003DEE  6E07               	movwf	memcpy@n+1,c
 27921  003DF0  0E40               	movlw	64
 27922  003DF2  6E06               	movwf	memcpy@n,c
 27923  003DF4  ECAA  F035         	call	_memcpy	;wreg free
 27924                           
 27925                           ;api.c: 120: }
 27926                           
 27927                           ;api.c: 119: break;
 27928  003DF8  0012               	return	
 27929  003DFA                     l2519:
 27930  003DFA  505D               	movf	api_prepare@command,w,c
 27931                           
 27932                           ; Switch size 1, requested type "space"
 27933                           ; Number of cases is 6, Range of values is 16 to 32
 27934                           ; switch strategies available:
 27935                           ; Name         Instructions Cycles
 27936                           ; simple_byte           19    10 (average)
 27937                           ;	Chosen strategy is simple_byte
 27938  003DFC  0A10               	xorlw	16	; case 16
 27939  003DFE  B4D8               	btfsc	status,2,c
 27940  003E00  D7C1               	goto	l2520
 27941  003E02  0A01               	xorlw	1	; case 17
 27942  003E04  B4D8               	btfsc	status,2,c
 27943  003E06  D7C5               	goto	l2522
 27944  003E08  0A03               	xorlw	3	; case 18
 27945  003E0A  B4D8               	btfsc	status,2,c
 27946  003E0C  D7CB               	goto	l2523
 27947  003E0E  0A01               	xorlw	1	; case 19
 27948  003E10  B4D8               	btfsc	status,2,c
 27949  003E12  D7D1               	goto	l2524
 27950  003E14  0A07               	xorlw	7	; case 20
 27951  003E16  B4D8               	btfsc	status,2,c
 27952  003E18  D7D5               	goto	l2525
 27953  003E1A  0A34               	xorlw	52	; case 32
 27954  003E1C  A4D8               	btfss	status,2,c
 27955  003E1E  0012               	return	
 27956  003E20  D7D8               	goto	l2526
 27957  003E22                     __end_of_api_prepare:
 27958                           	opt stack 0
 27959                           tosu	equ	0xFFF
 27960                           tosh	equ	0xFFE
 27961                           tosl	equ	0xFFD
 27962                           pclath	equ	0xFFA
 27963                           tblptru	equ	0xFF8
 27964                           tblptrh	equ	0xFF7
 27965                           tblptrl	equ	0xFF6
 27966                           tablat	equ	0xFF5
 27967                           prodh	equ	0xFF4
 27968                           prodl	equ	0xFF3
 27969                           intcon	equ	0xFF2
 27970                           intcon2	equ	0xFF1
 27971                           intcon3	equ	0xFF0
 27972                           indf0	equ	0xFEF
 27973                           postinc0	equ	0xFEE
 27974                           fsr0h	equ	0xFEA
 27975                           fsr0l	equ	0xFE9
 27976                           wreg	equ	0xFE8
 27977                           indf1	equ	0xFE7
 27978                           postdec1	equ	0xFE5
 27979                           plusw1	equ	0xFE3
 27980                           fsr1h	equ	0xFE2
 27981                           fsr1l	equ	0xFE1
 27982                           indf2	equ	0xFDF
 27983                           postinc2	equ	0xFDE
 27984                           postdec2	equ	0xFDD
 27985                           plusw2	equ	0xFDB
 27986                           fsr2h	equ	0xFDA
 27987                           fsr2l	equ	0xFD9
 27988                           status	equ	0xFD8
 27989                           
 27990 ;; *************** function __fill_buffer_read_file *****************
 27991 ;; Defined at:
 27992 ;;		line 368 in file "api.c"
 27993 ;; Parameters:    Size  Location     Type
 27994 ;;  inBuffer        2   84[COMRAM] PTR unsigned char 
 27995 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 27996 ;;  outBuffer       2   86[COMRAM] PTR unsigned char 
 27997 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 27998 ;; Auto vars:     Size  Location     Type
 27999 ;;  start           4   53[BANK0 ] unsigned long 
 28000 ;;  data_length     4   49[BANK0 ] unsigned long 
 28001 ;;  file_size       4   45[BANK0 ] unsigned long 
 28002 ;; Return value:  Size  Location     Type
 28003 ;;                  1    wreg      void 
 28004 ;; Registers used:
 28005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28006 ;; Tracked objects:
 28007 ;;		On entry : 0/0
 28008 ;;		On exit  : 0/0
 28009 ;;		Unchanged: 0/0
 28010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28012 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28014 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28015 ;;Total ram usage:       20 bytes
 28016 ;; Hardware stack levels used:    1
 28017 ;; Hardware stack levels required when called:    8
 28018 ;; This function calls:
 28019 ;;		_fat_get_file_size
 28020 ;;		_fat_read_from_file
 28021 ;; This function is called by:
 28022 ;;		_api_prepare
 28023 ;; This function uses a non-reentrant model
 28024 ;;
 28025                           
 28026                           	psect	text128
 28027  00233A                     __ptext128:
 28028                           	opt stack 0
 28029  00233A                     __fill_buffer_read_file:
 28030                           	opt stack 21
 28031                           
 28032                           ;api.c: 370: uint32_t start;;api.c: 371: uint32_t file_size;;api.c: 372: uint32_t data_l
      +                          ength;;api.c: 375: outBuffer[0] = DATAREQUEST_FIND_FILE;
 28033                           
 28034                           ;incstack = 0
 28035  00233A  C057  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 28036  00233E  C058  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 28037  002342  0E81               	movlw	129
 28038  002344  6EDF               	movwf	indf2,c
 28039                           
 28040                           ;api.c: 378: outBuffer[1] = 0xC125 >> 8;
 28041  002346  EE20 F001          	lfsr	2,1
 28042  00234A  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28043  00234C  26D9               	addwf	fsr2l,f,c
 28044  00234E  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28045  002350  22DA               	addwfc	fsr2h,f,c
 28046  002352  0EC1               	movlw	193
 28047  002354  6EDF               	movwf	indf2,c
 28048                           
 28049                           ;api.c: 379: outBuffer[2] = (uint8_t) 0xC125;
 28050  002356  EE20 F002          	lfsr	2,2
 28051  00235A  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28052  00235C  26D9               	addwf	fsr2l,f,c
 28053  00235E  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28054  002360  22DA               	addwfc	fsr2h,f,c
 28055  002362  0E25               	movlw	37
 28056  002364  6EDF               	movwf	indf2,c
 28057                           
 28058                           ;api.c: 382: outBuffer[3] = inBuffer[1];
 28059  002366  EE20 F001          	lfsr	2,1
 28060  00236A  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28061  00236C  26D9               	addwf	fsr2l,f,c
 28062  00236E  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28063  002370  22DA               	addwfc	fsr2h,f,c
 28064  002372  EE10 F003          	lfsr	1,3
 28065  002376  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28066  002378  26E1               	addwf	fsr1l,f,c
 28067  00237A  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28068  00237C  22E2               	addwfc	fsr1h,f,c
 28069  00237E  CFDF FFE7          	movff	indf2,indf1
 28070                           
 28071                           ;api.c: 385: outBuffer[4] = inBuffer[1];
 28072  002382  EE20 F001          	lfsr	2,1
 28073  002386  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28074  002388  26D9               	addwf	fsr2l,f,c
 28075  00238A  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28076  00238C  22DA               	addwfc	fsr2h,f,c
 28077  00238E  EE10 F004          	lfsr	1,4
 28078  002392  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28079  002394  26E1               	addwf	fsr1l,f,c
 28080  002396  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28081  002398  22E2               	addwfc	fsr1h,f,c
 28082  00239A  CFDF FFE7          	movff	indf2,indf1
 28083                           
 28084                           ;api.c: 386: outBuffer[5] = inBuffer[2];
 28085  00239E  EE20 F002          	lfsr	2,2
 28086  0023A2  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28087  0023A4  26D9               	addwf	fsr2l,f,c
 28088  0023A6  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28089  0023A8  22DA               	addwfc	fsr2h,f,c
 28090  0023AA  EE10 F005          	lfsr	1,5
 28091  0023AE  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28092  0023B0  26E1               	addwf	fsr1l,f,c
 28093  0023B2  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28094  0023B4  22E2               	addwfc	fsr1h,f,c
 28095  0023B6  CFDF FFE7          	movff	indf2,indf1
 28096                           
 28097                           ;api.c: 387: outBuffer[6] = inBuffer[3];
 28098  0023BA  EE20 F003          	lfsr	2,3
 28099  0023BE  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28100  0023C0  26D9               	addwf	fsr2l,f,c
 28101  0023C2  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28102  0023C4  22DA               	addwfc	fsr2h,f,c
 28103  0023C6  EE10 F006          	lfsr	1,6
 28104  0023CA  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28105  0023CC  26E1               	addwf	fsr1l,f,c
 28106  0023CE  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28107  0023D0  22E2               	addwfc	fsr1h,f,c
 28108  0023D2  CFDF FFE7          	movff	indf2,indf1
 28109                           
 28110                           ;api.c: 388: outBuffer[7] = inBuffer[4];
 28111  0023D6  EE20 F004          	lfsr	2,4
 28112  0023DA  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28113  0023DC  26D9               	addwf	fsr2l,f,c
 28114  0023DE  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28115  0023E0  22DA               	addwfc	fsr2h,f,c
 28116  0023E2  EE10 F007          	lfsr	1,7
 28117  0023E6  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28118  0023E8  26E1               	addwf	fsr1l,f,c
 28119  0023EA  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28120  0023EC  22E2               	addwfc	fsr1h,f,c
 28121  0023EE  CFDF FFE7          	movff	indf2,indf1
 28122                           
 28123                           ;api.c: 391: start = inBuffer[4];
 28124  0023F2  EE20 F004          	lfsr	2,4
 28125  0023F6  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28126  0023F8  26D9               	addwf	fsr2l,f,c
 28127  0023FA  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28128  0023FC  22DA               	addwfc	fsr2h,f,c
 28129  0023FE  50DF               	movf	indf2,w,c
 28130  002400  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28131  002402  5059               	movf	??__fill_buffer_read_file,w,c
 28132  002404  0100               	movlb	0	; () banked
 28133  002406  6FEA               	movwf	__fill_buffer_read_file@start& (0+255),b
 28134  002408  6BEB               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 28135  00240A  6BEC               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 28136  00240C  6BED               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 28137                           
 28138                           ; BSR set to: 0
 28139                           ;api.c: 392: start <<= 8;
 28140  00240E  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28141  002412  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28142  002416  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28143  00241A  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28144                           
 28145                           ; BSR set to: 0
 28146                           ;api.c: 393: start |= inBuffer[3];
 28147  00241C  EE20 F003          	lfsr	2,3
 28148  002420  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28149  002422  26D9               	addwf	fsr2l,f,c
 28150  002424  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28151  002426  22DA               	addwfc	fsr2h,f,c
 28152  002428  50DF               	movf	indf2,w,c
 28153  00242A  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28154  00242C  5059               	movf	??__fill_buffer_read_file,w,c
 28155  00242E  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;api.c: 394: start <<= 8;
 28159  002430  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28160  002434  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28161  002438  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28162  00243C  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28163                           
 28164                           ; BSR set to: 0
 28165                           ;api.c: 395: start |= inBuffer[2];
 28166  00243E  EE20 F002          	lfsr	2,2
 28167  002442  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28168  002444  26D9               	addwf	fsr2l,f,c
 28169  002446  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28170  002448  22DA               	addwfc	fsr2h,f,c
 28171  00244A  50DF               	movf	indf2,w,c
 28172  00244C  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28173  00244E  5059               	movf	??__fill_buffer_read_file,w,c
 28174  002450  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28175                           
 28176                           ; BSR set to: 0
 28177                           ;api.c: 396: start <<= 8;
 28178  002452  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28179  002456  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28180  00245A  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28181  00245E  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28182                           
 28183                           ; BSR set to: 0
 28184                           ;api.c: 397: start |= inBuffer[1];
 28185  002460  EE20 F001          	lfsr	2,1
 28186  002464  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28187  002466  26D9               	addwf	fsr2l,f,c
 28188  002468  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28189  00246A  22DA               	addwfc	fsr2h,f,c
 28190  00246C  50DF               	movf	indf2,w,c
 28191  00246E  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28192  002470  5059               	movf	??__fill_buffer_read_file,w,c
 28193  002472  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28194                           
 28195                           ; BSR set to: 0
 28196                           ;api.c: 400: file_size = fat_get_file_size(inBuffer[1]);
 28197  002474  EE20 F001          	lfsr	2,1
 28198  002478  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28199  00247A  26D9               	addwf	fsr2l,f,c
 28200  00247C  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28201  00247E  22DA               	addwfc	fsr2h,f,c
 28202  002480  50DF               	movf	indf2,w,c
 28203  002482  EC56  F033         	call	_fat_get_file_size
 28204  002486  C030  F0E2         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 28205  00248A  C031  F0E3         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 28206  00248E  C032  F0E4         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 28207  002492  C033  F0E5         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 28208                           
 28209                           ;api.c: 401: data_length = file_size - start;
 28210  002496  C0EA  F059         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 28211  00249A  C0EB  F05A         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 28212  00249E  C0EC  F05B         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 28213  0024A2  C0ED  F05C         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 28214  0024A6  1E59               	comf	??__fill_buffer_read_file,f,c
 28215  0024A8  1E5A               	comf	??__fill_buffer_read_file+1,f,c
 28216  0024AA  1E5B               	comf	??__fill_buffer_read_file+2,f,c
 28217  0024AC  1E5C               	comf	??__fill_buffer_read_file+3,f,c
 28218  0024AE  2A59               	incf	??__fill_buffer_read_file,f,c
 28219  0024B0  0E00               	movlw	0
 28220  0024B2  225A               	addwfc	??__fill_buffer_read_file+1,f,c
 28221  0024B4  225B               	addwfc	??__fill_buffer_read_file+2,f,c
 28222  0024B6  225C               	addwfc	??__fill_buffer_read_file+3,f,c
 28223  0024B8  0100               	movlb	0	; () banked
 28224  0024BA  51E2               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 28225  0024BC  2459               	addwf	??__fill_buffer_read_file,w,c
 28226  0024BE  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 28227  0024C0  51E3               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 28228  0024C2  205A               	addwfc	??__fill_buffer_read_file+1,w,c
 28229  0024C4  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 28230  0024C6  51E4               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 28231  0024C8  205B               	addwfc	??__fill_buffer_read_file+2,w,c
 28232  0024CA  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 28233  0024CC  51E5               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 28234  0024CE  205C               	addwfc	??__fill_buffer_read_file+3,w,c
 28235  0024D0  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 28236                           
 28237                           ; BSR set to: 0
 28238                           ;api.c: 402: if(data_length>54)
 28239  0024D2  51E9               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 28240  0024D4  11E8               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 28241  0024D6  11E7               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 28242  0024D8  E104               	bnz	u9900
 28243  0024DA  0E37               	movlw	55
 28244  0024DC  5DE6               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 28245  0024DE  A0D8               	btfss	status,0,c
 28246  0024E0  D008               	goto	l2576
 28247  0024E2                     u9900:
 28248                           
 28249                           ; BSR set to: 0
 28250                           ;api.c: 403: {;api.c: 405: data_length = 54;
 28251  0024E2  0E36               	movlw	54
 28252  0024E4  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 28253  0024E6  0E00               	movlw	0
 28254  0024E8  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 28255  0024EA  0E00               	movlw	0
 28256  0024EC  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 28257  0024EE  0E00               	movlw	0
 28258  0024F0  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 28259  0024F2                     l2576:
 28260                           
 28261                           ; BSR set to: 0
 28262                           ;api.c: 406: };api.c: 409: outBuffer[8] = (uint8_t) data_length;
 28263                           
 28264                           ; BSR set to: 0
 28265  0024F2  EE20 F008          	lfsr	2,8
 28266  0024F6  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28267  0024F8  26D9               	addwf	fsr2l,f,c
 28268  0024FA  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28269  0024FC  22DA               	addwfc	fsr2h,f,c
 28270  0024FE  C0E6  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 28271                           
 28272                           ; BSR set to: 0
 28273                           ;api.c: 412: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 28274  002502  EE20 F009          	lfsr	2,9
 28275  002506  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28276  002508  26D9               	addwf	fsr2l,f,c
 28277  00250A  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28278  00250C  22DA               	addwfc	fsr2h,f,c
 28279  00250E  C0EA  F03F         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 28280  002512  C0EB  F040         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 28281  002516  C0EC  F041         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 28282  00251A  C0ED  F042         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 28283  00251E  C0E6  F043         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 28284  002522  C0E7  F044         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 28285  002526  C0E8  F045         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 28286  00252A  C0E9  F046         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 28287  00252E  0E0A               	movlw	10
 28288  002530  2457               	addwf	__fill_buffer_read_file@outBuffer,w,c
 28289  002532  6E47               	movwf	fat_read_from_file@data,c
 28290  002534  0E00               	movlw	0
 28291  002536  2058               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 28292  002538  6E48               	movwf	fat_read_from_file@data+1,c
 28293  00253A  EE10 F001          	lfsr	1,1
 28294  00253E  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28295  002540  26E1               	addwf	fsr1l,f,c
 28296  002542  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28297  002544  22E2               	addwfc	fsr1h,f,c
 28298  002546  50E7               	movf	indf1,w,c
 28299  002548  EC7A  F00F         	call	_fat_read_from_file
 28300  00254C  6EDF               	movwf	indf2,c
 28301  00254E  0012               	return		;funcret
 28302  002550                     __end_of__fill_buffer_read_file:
 28303                           	opt stack 0
 28304                           tosu	equ	0xFFF
 28305                           tosh	equ	0xFFE
 28306                           tosl	equ	0xFFD
 28307                           pclath	equ	0xFFA
 28308                           tblptru	equ	0xFF8
 28309                           tblptrh	equ	0xFF7
 28310                           tblptrl	equ	0xFF6
 28311                           tablat	equ	0xFF5
 28312                           prodh	equ	0xFF4
 28313                           prodl	equ	0xFF3
 28314                           intcon	equ	0xFF2
 28315                           intcon2	equ	0xFF1
 28316                           intcon3	equ	0xFF0
 28317                           indf0	equ	0xFEF
 28318                           postinc0	equ	0xFEE
 28319                           fsr0h	equ	0xFEA
 28320                           fsr0l	equ	0xFE9
 28321                           wreg	equ	0xFE8
 28322                           indf1	equ	0xFE7
 28323                           postdec1	equ	0xFE5
 28324                           plusw1	equ	0xFE3
 28325                           fsr1h	equ	0xFE2
 28326                           fsr1l	equ	0xFE1
 28327                           indf2	equ	0xFDF
 28328                           postinc2	equ	0xFDE
 28329                           postdec2	equ	0xFDD
 28330                           plusw2	equ	0xFDB
 28331                           fsr2h	equ	0xFDA
 28332                           fsr2l	equ	0xFD9
 28333                           status	equ	0xFD8
 28334                           
 28335 ;; *************** function _fat_read_from_file *****************
 28336 ;; Defined at:
 28337 ;;		line 559 in file "fat16.c"
 28338 ;; Parameters:    Size  Location     Type
 28339 ;;  file_number     1    wreg     unsigned char 
 28340 ;;  start_byte      4   62[COMRAM] unsigned long 
 28341 ;;  length          4   66[COMRAM] unsigned long 
 28342 ;;  data            2   70[COMRAM] PTR unsigned char 
 28343 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 28344 ;; Auto vars:     Size  Location     Type
 28345 ;;  file_number     1    2[BANK0 ] unsigned char 
 28346 ;;  root           32    3[BANK0 ] struct .
 28347 ;;  position        4   41[BANK0 ] unsigned long 
 28348 ;;  read_length     2   39[BANK0 ] unsigned int 
 28349 ;;  offset          2   37[BANK0 ] unsigned int 
 28350 ;;  cluster         2   35[BANK0 ] unsigned int 
 28351 ;;  sector          2    0[BANK0 ] unsigned int 
 28352 ;; Return value:  Size  Location     Type
 28353 ;;                  1    wreg      unsigned char 
 28354 ;; Registers used:
 28355 ;;		wreg, status,2, status,0, cstack
 28356 ;; Tracked objects:
 28357 ;;		On entry : 0/0
 28358 ;;		On exit  : 0/0
 28359 ;;		Unchanged: 0/0
 28360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28361 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28362 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28363 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28364 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28365 ;;Total ram usage:       67 bytes
 28366 ;; Hardware stack levels used:    1
 28367 ;; Hardware stack levels required when called:    7
 28368 ;; This function calls:
 28369 ;;		__read_fat
 28370 ;;		__sector_from_cluster
 28371 ;;		_fat_get_file_information
 28372 ;;		_flash_partial_read
 28373 ;; This function is called by:
 28374 ;;		__bootloader_verify_file
 28375 ;;		__bootloader_program
 28376 ;;		__fill_buffer_read_file
 28377 ;; This function uses a non-reentrant model
 28378 ;;
 28379                           
 28380                           	psect	text129
 28381  001EF4                     __ptext129:
 28382                           	opt stack 0
 28383  001EF4                     _fat_read_from_file:
 28384                           	opt stack 21
 28385                           
 28386                           ;incstack = 0
 28387                           ;fat_read_from_file@file_number stored from wreg
 28388  001EF4  0100               	movlb	0	; () banked
 28389  001EF6  6FB7               	movwf	fat_read_from_file@file_number& (0+255),b
 28390                           
 28391                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 28392  001EF8  0EB8               	movlw	low fat_read_from_file@root
 28393  001EFA  6E37               	movwf	fat_get_file_information@data,c
 28394  001EFC  0E00               	movlw	high fat_read_from_file@root
 28395  001EFE  6E38               	movwf	fat_get_file_information@data+1,c
 28396  001F00  0100               	movlb	0	; () banked
 28397  001F02  51B7               	movf	fat_read_from_file@file_number& (0+255),w,b
 28398  001F04  ECE2  F032         	call	_fat_get_file_information
 28399                           
 28400                           ;fat16.c: 570: cluster = root.firstCluster;
 28401  001F08  C0D2  F0D8         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 28402  001F0C  C0D3  F0D9         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 28403                           
 28404                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 28405  001F10  5043               	movf	fat_read_from_file@length,w,c
 28406  001F12  243F               	addwf	fat_read_from_file@start_byte,w,c
 28407  001F14  6E49               	movwf	??_fat_read_from_file& (0+255),c
 28408  001F16  5044               	movf	fat_read_from_file@length+1,w,c
 28409  001F18  2040               	addwfc	fat_read_from_file@start_byte+1,w,c
 28410  001F1A  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28411  001F1C  5045               	movf	fat_read_from_file@length+2,w,c
 28412  001F1E  2041               	addwfc	fat_read_from_file@start_byte+2,w,c
 28413  001F20  6E4B               	movwf	(??_fat_read_from_file+2)& (0+255),c
 28414  001F22  5046               	movf	fat_read_from_file@length+3,w,c
 28415  001F24  2042               	addwfc	fat_read_from_file@start_byte+3,w,c
 28416  001F26  6E4C               	movwf	(??_fat_read_from_file+3)& (0+255),c
 28417  001F28  5049               	movf	??_fat_read_from_file,w,c
 28418  001F2A  0100               	movlb	0	; () banked
 28419  001F2C  5DD4               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 28420  001F2E  504A               	movf	??_fat_read_from_file+1,w,c
 28421  001F30  59D5               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 28422  001F32  504B               	movf	??_fat_read_from_file+2,w,c
 28423  001F34  59D6               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 28424  001F36  504C               	movf	??_fat_read_from_file+3,w,c
 28425  001F38  59D7               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 28426  001F3A  B0D8               	btfsc	status,0,c
 28427  001F3C  D002               	goto	l1966
 28428                           
 28429                           ; BSR set to: 0
 28430                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 28431  001F3E  0EFF               	movlw	255
 28432                           
 28433                           ; BSR set to: 0
 28434  001F40  0012               	return	
 28435  001F42                     l1966:
 28436                           
 28437                           ; BSR set to: 0
 28438                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 28439                           
 28440                           ; BSR set to: 0
 28441  001F42  0E00               	movlw	0
 28442  001F44  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 28443  001F46  0E00               	movlw	0
 28444  001F48  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28445  001F4A  0E00               	movlw	0
 28446  001F4C  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28447  001F4E  0E00               	movlw	0
 28448  001F50  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28449                           
 28450                           ;fat16.c: 581: while((start_byte-position) >= 512)
 28451  001F52  D013               	goto	l1968
 28452  001F54                     l11590:
 28453                           
 28454                           ; BSR set to: 0
 28455                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 28456  001F54  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28457  001F58  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28458  001F5C  ECED  F039         	call	__read_fat	;wreg free
 28459  001F60  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 28460  001F64  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28461                           
 28462                           ;fat16.c: 584: position += 512;
 28463  001F68  0E00               	movlw	0
 28464  001F6A  0100               	movlb	0	; () banked
 28465  001F6C  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 28466  001F6E  0E02               	movlw	2
 28467  001F70  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28468  001F72  0E00               	movlw	0
 28469  001F74  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28470  001F76  0E00               	movlw	0
 28471  001F78  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28472  001F7A                     l1968:
 28473                           
 28474                           ; BSR set to: 0
 28475                           
 28476                           ; BSR set to: 0
 28477  001F7A  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28478  001F7E  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28479  001F82  C0E0  F04B         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 28480  001F86  C0E1  F04C         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 28481  001F8A  1E49               	comf	??_fat_read_from_file,f,c
 28482  001F8C  1E4A               	comf	??_fat_read_from_file+1,f,c
 28483  001F8E  1E4B               	comf	??_fat_read_from_file+2,f,c
 28484  001F90  1E4C               	comf	??_fat_read_from_file+3,f,c
 28485  001F92  2A49               	incf	??_fat_read_from_file,f,c
 28486  001F94  0E00               	movlw	0
 28487  001F96  224A               	addwfc	??_fat_read_from_file+1,f,c
 28488  001F98  224B               	addwfc	??_fat_read_from_file+2,f,c
 28489  001F9A  224C               	addwfc	??_fat_read_from_file+3,f,c
 28490  001F9C  503F               	movf	fat_read_from_file@start_byte,w,c
 28491  001F9E  2449               	addwf	??_fat_read_from_file,w,c
 28492  001FA0  6E4D               	movwf	(??_fat_read_from_file+4)& (0+255),c
 28493  001FA2  5040               	movf	fat_read_from_file@start_byte+1,w,c
 28494  001FA4  204A               	addwfc	??_fat_read_from_file+1,w,c
 28495  001FA6  6E4E               	movwf	(??_fat_read_from_file+5)& (0+255),c
 28496  001FA8  5041               	movf	fat_read_from_file@start_byte+2,w,c
 28497  001FAA  204B               	addwfc	??_fat_read_from_file+2,w,c
 28498  001FAC  6E4F               	movwf	(??_fat_read_from_file+6)& (0+255),c
 28499  001FAE  5042               	movf	fat_read_from_file@start_byte+3,w,c
 28500  001FB0  204C               	addwfc	??_fat_read_from_file+3,w,c
 28501  001FB2  6E50               	movwf	(??_fat_read_from_file+7)& (0+255),c
 28502  001FB4  5050               	movf	??_fat_read_from_file+7,w,c
 28503  001FB6  104F               	iorwf	??_fat_read_from_file+6,w,c
 28504  001FB8  E1CD               	bnz	l11590
 28505  001FBA  0E02               	movlw	2
 28506  001FBC  5C4E               	subwf	??_fat_read_from_file+5,w,c
 28507  001FBE  B0D8               	btfsc	status,0,c
 28508  001FC0  D7C9               	goto	l1969
 28509                           
 28510                           ; BSR set to: 0
 28511                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 28512                           
 28513                           ; BSR set to: 0
 28514  001FC2  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28515  001FC6  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28516  001FCA  1E49               	comf	??_fat_read_from_file,f,c
 28517  001FCC  1E4A               	comf	??_fat_read_from_file+1,f,c
 28518  001FCE  4A49               	infsnz	??_fat_read_from_file,f,c
 28519  001FD0  2A4A               	incf	??_fat_read_from_file+1,f,c
 28520  001FD2  503F               	movf	fat_read_from_file@start_byte,w,c
 28521  001FD4  2449               	addwf	??_fat_read_from_file,w,c
 28522  001FD6  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 28523  001FD8  5040               	movf	fat_read_from_file@start_byte+1,w,c
 28524  001FDA  204A               	addwfc	??_fat_read_from_file+1,w,c
 28525  001FDC  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28526                           
 28527                           ; BSR set to: 0
 28528                           ;fat16.c: 591: position = 0;
 28529  001FDE  0E00               	movlw	0
 28530  001FE0  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 28531  001FE2  0E00               	movlw	0
 28532  001FE4  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28533  001FE6  0E00               	movlw	0
 28534  001FE8  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28535  001FEA  0E00               	movlw	0
 28536  001FEC  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28537                           
 28538                           ;fat16.c: 592: while(position < length)
 28539  001FEE  D089               	goto	l1971
 28540  001FF0                     
 28541                           ; BSR set to: 0
 28542                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 28543                           
 28544                           ; BSR set to: 0
 28545  001FF0  0E02               	movlw	2
 28546  001FF2  19DB               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 28547  001FF4  11DA               	iorwf	fat_read_from_file@offset& (0+255),w,b
 28548  001FF6  A4D8               	btfss	status,2,c
 28549  001FF8  D00F               	goto	l1973
 28550                           
 28551                           ; BSR set to: 0
 28552                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 28553  001FFA  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28554  001FFE  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28555  002002  ECED  F039         	call	__read_fat	;wreg free
 28556  002006  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 28557  00200A  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28558                           
 28559                           ;fat16.c: 599: offset = 0;
 28560  00200E  0E00               	movlw	0
 28561  002010  0100               	movlb	0	; () banked
 28562  002012  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28563  002014  0E00               	movlw	0
 28564  002016  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 28565  002018                     l1973:
 28566                           
 28567                           ; BSR set to: 0
 28568                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 28569                           
 28570                           ; BSR set to: 0
 28571  002018  C0D8  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 28572  00201C  C0D9  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 28573  002020  EC9D  F03E         	call	__sector_from_cluster	;wreg free
 28574  002024  C001  F0B5         	movff	?__sector_from_cluster,fat_read_from_file@sector
 28575  002028  C002  F0B6         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 28576                           
 28577                           ;fat16.c: 606: read_length = 512 - offset;
 28578  00202C  C0DA  F049         	movff	fat_read_from_file@offset,??_fat_read_from_file
 28579  002030  C0DB  F04A         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 28580  002034  1E49               	comf	??_fat_read_from_file,f,c
 28581  002036  1E4A               	comf	??_fat_read_from_file+1,f,c
 28582  002038  4A49               	infsnz	??_fat_read_from_file,f,c
 28583  00203A  2A4A               	incf	??_fat_read_from_file+1,f,c
 28584  00203C  0E00               	movlw	0
 28585  00203E  2449               	addwf	??_fat_read_from_file,w,c
 28586  002040  0100               	movlb	0	; () banked
 28587  002042  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 28588  002044  0E02               	movlw	2
 28589  002046  204A               	addwfc	??_fat_read_from_file+1,w,c
 28590  002048  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28591                           
 28592                           ; BSR set to: 0
 28593                           ;fat16.c: 607: if(read_length > (length-position))
 28594  00204A  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 28595  00204C  6E49               	movwf	??_fat_read_from_file& (0+255),c
 28596  00204E  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28597  002050  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28598  002052  6A4B               	clrf	(??_fat_read_from_file+2)& (0+255),c
 28599  002054  6A4C               	clrf	(??_fat_read_from_file+3)& (0+255),c
 28600  002056  C0DE  F04D         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 28601  00205A  C0DF  F04E         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 28602  00205E  C0E0  F04F         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 28603  002062  C0E1  F050         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 28604  002066  1E4D               	comf	??_fat_read_from_file+4,f,c
 28605  002068  1E4E               	comf	??_fat_read_from_file+5,f,c
 28606  00206A  1E4F               	comf	??_fat_read_from_file+6,f,c
 28607  00206C  1E50               	comf	??_fat_read_from_file+7,f,c
 28608  00206E  2A4D               	incf	??_fat_read_from_file+4,f,c
 28609  002070  0E00               	movlw	0
 28610  002072  224E               	addwfc	??_fat_read_from_file+5,f,c
 28611  002074  224F               	addwfc	??_fat_read_from_file+6,f,c
 28612  002076  2250               	addwfc	??_fat_read_from_file+7,f,c
 28613  002078  5043               	movf	fat_read_from_file@length,w,c
 28614  00207A  244D               	addwf	??_fat_read_from_file+4,w,c
 28615  00207C  6E51               	movwf	(??_fat_read_from_file+8)& (0+255),c
 28616  00207E  5044               	movf	fat_read_from_file@length+1,w,c
 28617  002080  204E               	addwfc	??_fat_read_from_file+5,w,c
 28618  002082  6E52               	movwf	(??_fat_read_from_file+9)& (0+255),c
 28619  002084  5045               	movf	fat_read_from_file@length+2,w,c
 28620  002086  204F               	addwfc	??_fat_read_from_file+6,w,c
 28621  002088  6E53               	movwf	(??_fat_read_from_file+10)& (0+255),c
 28622  00208A  5046               	movf	fat_read_from_file@length+3,w,c
 28623  00208C  2050               	addwfc	??_fat_read_from_file+7,w,c
 28624  00208E  6E54               	movwf	(??_fat_read_from_file+11)& (0+255),c
 28625  002090  5049               	movf	??_fat_read_from_file,w,c
 28626  002092  5C51               	subwf	??_fat_read_from_file+8,w,c
 28627  002094  504A               	movf	??_fat_read_from_file+1,w,c
 28628  002096  5852               	subwfb	??_fat_read_from_file+9,w,c
 28629  002098  504B               	movf	??_fat_read_from_file+2,w,c
 28630  00209A  5853               	subwfb	??_fat_read_from_file+10,w,c
 28631  00209C  504C               	movf	??_fat_read_from_file+3,w,c
 28632  00209E  5854               	subwfb	??_fat_read_from_file+11,w,c
 28633  0020A0  B0D8               	btfsc	status,0,c
 28634  0020A2  D00E               	goto	l1974
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 28638  0020A4  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28639  0020A8  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28640  0020AC  1E49               	comf	??_fat_read_from_file,f,c
 28641  0020AE  1E4A               	comf	??_fat_read_from_file+1,f,c
 28642  0020B0  4A49               	infsnz	??_fat_read_from_file,f,c
 28643  0020B2  2A4A               	incf	??_fat_read_from_file+1,f,c
 28644  0020B4  5043               	movf	fat_read_from_file@length,w,c
 28645  0020B6  2449               	addwf	??_fat_read_from_file,w,c
 28646  0020B8  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 28647  0020BA  5044               	movf	fat_read_from_file@length+1,w,c
 28648  0020BC  204A               	addwfc	??_fat_read_from_file+1,w,c
 28649  0020BE  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28650  0020C0                     l1974:
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 28654                           
 28655                           ; BSR set to: 0
 28656  0020C0  C0B5  F028         	movff	fat_read_from_file@sector,flash_partial_read@page
 28657  0020C4  C0B6  F029         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 28658  0020C8  C0DA  F02A         	movff	fat_read_from_file@offset,flash_partial_read@start
 28659  0020CC  C0DB  F02B         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 28660  0020D0  C0DC  F02C         	movff	fat_read_from_file@read_length,flash_partial_read@length
 28661  0020D4  C0DD  F02D         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 28662  0020D8  51DE               	movf	fat_read_from_file@position& (0+255),w,b
 28663  0020DA  2447               	addwf	fat_read_from_file@data,w,c
 28664  0020DC  6E2E               	movwf	flash_partial_read@data,c
 28665  0020DE  51DF               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 28666  0020E0  2048               	addwfc	fat_read_from_file@data+1,w,c
 28667  0020E2  6E2F               	movwf	flash_partial_read@data+1,c
 28668  0020E4  EC52  F03C         	call	_flash_partial_read	;wreg free
 28669                           
 28670                           ;fat16.c: 617: position += read_length;
 28671  0020E8  0100               	movlb	0	; () banked
 28672  0020EA  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 28673  0020EC  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 28674  0020EE  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28675  0020F0  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28676  0020F2  0E00               	movlw	0
 28677  0020F4  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28678  0020F6  0E00               	movlw	0
 28679  0020F8  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28680                           
 28681                           ; BSR set to: 0
 28682                           ;fat16.c: 618: offset += read_length;
 28683  0020FA  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 28684  0020FC  27DA               	addwf	fat_read_from_file@offset& (0+255),f,b
 28685  0020FE  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28686  002100  23DB               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 28687  002102                     l1971:
 28688                           
 28689                           ; BSR set to: 0
 28690                           
 28691                           ; BSR set to: 0
 28692  002102  5043               	movf	fat_read_from_file@length,w,c
 28693  002104  5DDE               	subwf	fat_read_from_file@position& (0+255),w,b
 28694  002106  5044               	movf	fat_read_from_file@length+1,w,c
 28695  002108  59DF               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 28696  00210A  5045               	movf	fat_read_from_file@length+2,w,c
 28697  00210C  59E0               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 28698  00210E  5046               	movf	fat_read_from_file@length+3,w,c
 28699  002110  59E1               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 28700  002112  A0D8               	btfss	status,0,c
 28701  002114  D76D               	goto	l1972
 28702                           
 28703                           ; BSR set to: 0
 28704                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 28705                           
 28706                           ; BSR set to: 0
 28707  002116  0E00               	movlw	0
 28708  002118  0012               	return	
 28709  00211A                     __end_of_fat_read_from_file:
 28710                           	opt stack 0
 28711                           tosu	equ	0xFFF
 28712                           tosh	equ	0xFFE
 28713                           tosl	equ	0xFFD
 28714                           pclath	equ	0xFFA
 28715                           tblptru	equ	0xFF8
 28716                           tblptrh	equ	0xFF7
 28717                           tblptrl	equ	0xFF6
 28718                           tablat	equ	0xFF5
 28719                           prodh	equ	0xFF4
 28720                           prodl	equ	0xFF3
 28721                           intcon	equ	0xFF2
 28722                           intcon2	equ	0xFF1
 28723                           intcon3	equ	0xFF0
 28724                           indf0	equ	0xFEF
 28725                           postinc0	equ	0xFEE
 28726                           fsr0h	equ	0xFEA
 28727                           fsr0l	equ	0xFE9
 28728                           wreg	equ	0xFE8
 28729                           indf1	equ	0xFE7
 28730                           postdec1	equ	0xFE5
 28731                           plusw1	equ	0xFE3
 28732                           fsr1h	equ	0xFE2
 28733                           fsr1l	equ	0xFE1
 28734                           indf2	equ	0xFDF
 28735                           postinc2	equ	0xFDE
 28736                           postdec2	equ	0xFDD
 28737                           plusw2	equ	0xFDB
 28738                           fsr2h	equ	0xFDA
 28739                           fsr2l	equ	0xFD9
 28740                           status	equ	0xFD8
 28741                           
 28742 ;; *************** function _fat_get_file_size *****************
 28743 ;; Defined at:
 28744 ;;		line 294 in file "fat16.c"
 28745 ;; Parameters:    Size  Location     Type
 28746 ;;  file_number     1    wreg     unsigned char 
 28747 ;; Auto vars:     Size  Location     Type
 28748 ;;  file_number     1   60[COMRAM] unsigned char 
 28749 ;;  file_size       4   54[COMRAM] unsigned long 
 28750 ;;  offset          2   58[COMRAM] unsigned int 
 28751 ;;  sector          2   52[COMRAM] unsigned int 
 28752 ;; Return value:  Size  Location     Type
 28753 ;;                  4   47[COMRAM] unsigned long 
 28754 ;; Registers used:
 28755 ;;		wreg, status,2, status,0, cstack
 28756 ;; Tracked objects:
 28757 ;;		On entry : 0/0
 28758 ;;		On exit  : 0/0
 28759 ;;		Unchanged: 0/0
 28760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28762 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28764 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28765 ;;Total ram usage:       14 bytes
 28766 ;; Hardware stack levels used:    1
 28767 ;; Hardware stack levels required when called:    5
 28768 ;; This function calls:
 28769 ;;		_flash_partial_read
 28770 ;; This function is called by:
 28771 ;;		__bootloader_find_file
 28772 ;;		__bootloader_verify_file
 28773 ;;		__fill_buffer_read_file
 28774 ;; This function uses a non-reentrant model
 28775 ;;
 28776                           
 28777                           	psect	text130
 28778  0066AC                     __ptext130:
 28779                           	opt stack 0
 28780  0066AC                     _fat_get_file_size:
 28781                           	opt stack 23
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;incstack = 0
 28785                           ;fat_get_file_size@file_number stored from wreg
 28786  0066AC  6E3D               	movwf	fat_get_file_size@file_number,c
 28787                           
 28788                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 28789  0066AE  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 28790  0066B2  3A34               	swapf	??_fat_get_file_size,f,c
 28791  0066B4  0E0F               	movlw	15
 28792  0066B6  1634               	andwf	??_fat_get_file_size,f,c
 28793  0066B8  5034               	movf	??_fat_get_file_size,w,c
 28794  0066BA  6E35               	movwf	fat_get_file_size@sector,c
 28795  0066BC  6A36               	clrf	fat_get_file_size@sector+1,c
 28796                           
 28797                           ;fat16.c: 300: sector += 34;
 28798  0066BE  0E22               	movlw	34
 28799  0066C0  2635               	addwf	fat_get_file_size@sector,f,c
 28800  0066C2  0E00               	movlw	0
 28801  0066C4  2236               	addwfc	fat_get_file_size@sector+1,f,c
 28802                           
 28803                           ;fat16.c: 301: offset = file_number;
 28804  0066C6  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 28805  0066CA  6A3C               	clrf	fat_get_file_size@offset+1,c
 28806                           
 28807                           ;fat16.c: 302: offset <<= 5;
 28808  0066CC  0E05               	movlw	5
 28809  0066CE                     u8795:
 28810  0066CE  90D8               	bcf	status,0,c
 28811  0066D0  363B               	rlcf	fat_get_file_size@offset,f,c
 28812  0066D2  363C               	rlcf	fat_get_file_size@offset+1,f,c
 28813  0066D4  2EE8               	decfsz	wreg,f,c
 28814  0066D6  D7FB               	goto	u8795
 28815                           
 28816                           ;fat16.c: 303: offset &= 0b111111111;
 28817  0066D8  0EFF               	movlw	255
 28818  0066DA  163B               	andwf	fat_get_file_size@offset,f,c
 28819  0066DC  0E01               	movlw	1
 28820  0066DE  163C               	andwf	fat_get_file_size@offset+1,f,c
 28821                           
 28822                           ;fat16.c: 304: offset += 28;
 28823  0066E0  0E1C               	movlw	28
 28824  0066E2  263B               	addwf	fat_get_file_size@offset,f,c
 28825  0066E4  0E00               	movlw	0
 28826  0066E6  223C               	addwfc	fat_get_file_size@offset+1,f,c
 28827                           
 28828                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 28829  0066E8  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 28830  0066EC  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 28831  0066F0  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 28832  0066F4  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 28833  0066F8  0E00               	movlw	0
 28834  0066FA  6E2D               	movwf	flash_partial_read@length+1,c
 28835  0066FC  0E04               	movlw	4
 28836  0066FE  6E2C               	movwf	flash_partial_read@length,c
 28837  006700  0E37               	movlw	low fat_get_file_size@file_size
 28838  006702  6E2E               	movwf	flash_partial_read@data,c
 28839  006704  0E00               	movlw	high fat_get_file_size@file_size
 28840  006706  6E2F               	movwf	flash_partial_read@data+1,c
 28841  006708  EC52  F03C         	call	_flash_partial_read	;wreg free
 28842                           
 28843                           ;fat16.c: 306: return file_size;
 28844  00670C  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 28845  006710  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 28846  006714  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 28847  006718  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 28848  00671C  0012               	return	
 28849  00671E                     __end_of_fat_get_file_size:
 28850                           	opt stack 0
 28851                           tosu	equ	0xFFF
 28852                           tosh	equ	0xFFE
 28853                           tosl	equ	0xFFD
 28854                           pclath	equ	0xFFA
 28855                           tblptru	equ	0xFF8
 28856                           tblptrh	equ	0xFF7
 28857                           tblptrl	equ	0xFF6
 28858                           tablat	equ	0xFF5
 28859                           prodh	equ	0xFF4
 28860                           prodl	equ	0xFF3
 28861                           intcon	equ	0xFF2
 28862                           intcon2	equ	0xFF1
 28863                           intcon3	equ	0xFF0
 28864                           indf0	equ	0xFEF
 28865                           postinc0	equ	0xFEE
 28866                           fsr0h	equ	0xFEA
 28867                           fsr0l	equ	0xFE9
 28868                           wreg	equ	0xFE8
 28869                           indf1	equ	0xFE7
 28870                           postdec1	equ	0xFE5
 28871                           plusw1	equ	0xFE3
 28872                           fsr1h	equ	0xFE2
 28873                           fsr1l	equ	0xFE1
 28874                           indf2	equ	0xFDF
 28875                           postinc2	equ	0xFDE
 28876                           postdec2	equ	0xFDD
 28877                           plusw2	equ	0xFDB
 28878                           fsr2h	equ	0xFDA
 28879                           fsr2l	equ	0xFD9
 28880                           status	equ	0xFD8
 28881                           
 28882 ;; *************** function __fill_buffer_get_status *****************
 28883 ;; Defined at:
 28884 ;;		line 176 in file "api.c"
 28885 ;; Parameters:    Size  Location     Type
 28886 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 28887 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 28888 ;; Auto vars:     Size  Location     Type
 28889 ;;		None
 28890 ;; Return value:  Size  Location     Type
 28891 ;;                  1    wreg      void 
 28892 ;; Registers used:
 28893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28894 ;; Tracked objects:
 28895 ;;		On entry : 0/0
 28896 ;;		On exit  : 0/0
 28897 ;;		Unchanged: 0/0
 28898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28903 ;;Total ram usage:        2 bytes
 28904 ;; Hardware stack levels used:    1
 28905 ;; Hardware stack levels required when called:    4
 28906 ;; This function calls:
 28907 ;;		_flash_is_busy
 28908 ;;		_ui_get_status
 28909 ;; This function is called by:
 28910 ;;		_api_prepare
 28911 ;; This function uses a non-reentrant model
 28912 ;;
 28913                           
 28914                           	psect	text131
 28915  0049EA                     __ptext131:
 28916                           	opt stack 0
 28917  0049EA                     __fill_buffer_get_status:
 28918                           	opt stack 25
 28919                           
 28920                           ;api.c: 179: outBuffer[0] = DATAREQUEST_GET_STATUS;
 28921                           
 28922                           ;incstack = 0
 28923  0049EA  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 28924  0049EE  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 28925  0049F2  0E10               	movlw	16
 28926  0049F4  6EDF               	movwf	indf2,c
 28927                           
 28928                           ;api.c: 182: outBuffer[1] = 0xC125 >> 8;
 28929  0049F6  EE20 F001          	lfsr	2,1
 28930  0049FA  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28931  0049FC  26D9               	addwf	fsr2l,f,c
 28932  0049FE  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28933  004A00  22DA               	addwfc	fsr2h,f,c
 28934  004A02  0EC1               	movlw	193
 28935  004A04  6EDF               	movwf	indf2,c
 28936                           
 28937                           ;api.c: 183: outBuffer[2] = (uint8_t) 0xC125;
 28938  004A06  EE20 F002          	lfsr	2,2
 28939  004A0A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28940  004A0C  26D9               	addwf	fsr2l,f,c
 28941  004A0E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28942  004A10  22DA               	addwfc	fsr2h,f,c
 28943  004A12  0E25               	movlw	37
 28944  004A14  6EDF               	movwf	indf2,c
 28945                           
 28946                           ;api.c: 187: outBuffer[3] = (uint8_t) flash_is_busy();
 28947  004A16  EE20 F003          	lfsr	2,3
 28948  004A1A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28949  004A1C  26D9               	addwf	fsr2l,f,c
 28950  004A1E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28951  004A20  22DA               	addwfc	fsr2h,f,c
 28952  004A22  EC54  F03E         	call	_flash_is_busy	;wreg free
 28953  004A26  6EDF               	movwf	indf2,c
 28954                           
 28955                           ;api.c: 190: outBuffer[4] = 0x00;
 28956  004A28  EE20 F004          	lfsr	2,4
 28957  004A2C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28958  004A2E  26D9               	addwf	fsr2l,f,c
 28959  004A30  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28960  004A32  22DA               	addwfc	fsr2h,f,c
 28961  004A34  0E00               	movlw	0
 28962  004A36  6EDF               	movwf	indf2,c
 28963                           
 28964                           ;api.c: 191: outBuffer[5] = 0x01;
 28965  004A38  EE20 F005          	lfsr	2,5
 28966  004A3C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28967  004A3E  26D9               	addwf	fsr2l,f,c
 28968  004A40  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28969  004A42  22DA               	addwfc	fsr2h,f,c
 28970  004A44  0E01               	movlw	1
 28971  004A46  6EDF               	movwf	indf2,c
 28972                           
 28973                           ;api.c: 192: outBuffer[6] = 0x00;
 28974  004A48  EE20 F006          	lfsr	2,6
 28975  004A4C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28976  004A4E  26D9               	addwf	fsr2l,f,c
 28977  004A50  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28978  004A52  22DA               	addwfc	fsr2h,f,c
 28979  004A54  0E00               	movlw	0
 28980  004A56  6EDF               	movwf	indf2,c
 28981                           
 28982                           ;api.c: 195: outBuffer[7] = ui_get_status();
 28983  004A58  EE20 F007          	lfsr	2,7
 28984  004A5C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28985  004A5E  26D9               	addwf	fsr2l,f,c
 28986  004A60  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28987  004A62  22DA               	addwfc	fsr2h,f,c
 28988  004A64  EC00  F03F         	call	_ui_get_status	;wreg free
 28989  004A68  6EDF               	movwf	indf2,c
 28990                           
 28991                           ;api.c: 198: outBuffer[8] = os.encoderCount;
 28992  004A6A  EE20 F008          	lfsr	2,8
 28993  004A6E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28994  004A70  26D9               	addwf	fsr2l,f,c
 28995  004A72  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28996  004A74  22DA               	addwfc	fsr2h,f,c
 28997  004A76  C060  FFDF         	movff	_os,indf2	;volatile
 28998                           
 28999                           ;api.c: 199: outBuffer[9] = os.buttonCount;
 29000  004A7A  EE20 F009          	lfsr	2,9
 29001  004A7E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29002  004A80  26D9               	addwf	fsr2l,f,c
 29003  004A82  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29004  004A84  22DA               	addwfc	fsr2h,f,c
 29005  004A86  C061  FFDF         	movff	_os+1,indf2	;volatile
 29006                           
 29007                           ;api.c: 200: outBuffer[10] = os.timeSlot;
 29008  004A8A  EE20 F00A          	lfsr	2,10
 29009  004A8E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29010  004A90  26D9               	addwf	fsr2l,f,c
 29011  004A92  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29012  004A94  22DA               	addwfc	fsr2h,f,c
 29013  004A96  C062  FFDF         	movff	_os+2,indf2	;volatile
 29014                           
 29015                           ;api.c: 201: outBuffer[11] = os.done;
 29016  004A9A  EE20 F00B          	lfsr	2,11
 29017  004A9E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29018  004AA0  26D9               	addwf	fsr2l,f,c
 29019  004AA2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29020  004AA4  22DA               	addwfc	fsr2h,f,c
 29021  004AA6  C063  FFDF         	movff	_os+3,indf2	;volatile
 29022                           
 29023                           ;api.c: 202: outBuffer[12] = os.bootloader_mode;
 29024  004AAA  EE20 F00C          	lfsr	2,12
 29025  004AAE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29026  004AB0  26D9               	addwf	fsr2l,f,c
 29027  004AB2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29028  004AB4  22DA               	addwfc	fsr2h,f,c
 29029  004AB6  C064  FFDF         	movff	_os+4,indf2	;volatile
 29030                           
 29031                           ;api.c: 203: outBuffer[13] = os.display_mode;
 29032  004ABA  EE20 F00D          	lfsr	2,13
 29033  004ABE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29034  004AC0  26D9               	addwf	fsr2l,f,c
 29035  004AC2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29036  004AC4  22DA               	addwfc	fsr2h,f,c
 29037  004AC6  C065  FFDF         	movff	_os+5,indf2	;volatile
 29038  004ACA  0012               	return		;funcret
 29039  004ACC                     __end_of__fill_buffer_get_status:
 29040                           	opt stack 0
 29041                           tosu	equ	0xFFF
 29042                           tosh	equ	0xFFE
 29043                           tosl	equ	0xFFD
 29044                           pclath	equ	0xFFA
 29045                           tblptru	equ	0xFF8
 29046                           tblptrh	equ	0xFF7
 29047                           tblptrl	equ	0xFF6
 29048                           tablat	equ	0xFF5
 29049                           prodh	equ	0xFF4
 29050                           prodl	equ	0xFF3
 29051                           intcon	equ	0xFF2
 29052                           intcon2	equ	0xFF1
 29053                           intcon3	equ	0xFF0
 29054                           indf0	equ	0xFEF
 29055                           postinc0	equ	0xFEE
 29056                           fsr0h	equ	0xFEA
 29057                           fsr0l	equ	0xFE9
 29058                           wreg	equ	0xFE8
 29059                           indf1	equ	0xFE7
 29060                           postdec1	equ	0xFE5
 29061                           plusw1	equ	0xFE3
 29062                           fsr1h	equ	0xFE2
 29063                           fsr1l	equ	0xFE1
 29064                           indf2	equ	0xFDF
 29065                           postinc2	equ	0xFDE
 29066                           postdec2	equ	0xFDD
 29067                           plusw2	equ	0xFDB
 29068                           fsr2h	equ	0xFDA
 29069                           fsr2l	equ	0xFD9
 29070                           status	equ	0xFD8
 29071                           
 29072 ;; *************** function _ui_get_status *****************
 29073 ;; Defined at:
 29074 ;;		line 85 in file "ui.c"
 29075 ;; Parameters:    Size  Location     Type
 29076 ;;		None
 29077 ;; Auto vars:     Size  Location     Type
 29078 ;;		None
 29079 ;; Return value:  Size  Location     Type
 29080 ;;                  1    wreg      enum E7920
 29081 ;; Registers used:
 29082 ;;		wreg, status,2
 29083 ;; Tracked objects:
 29084 ;;		On entry : 0/0
 29085 ;;		On exit  : 0/0
 29086 ;;		Unchanged: 0/0
 29087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29092 ;;Total ram usage:        0 bytes
 29093 ;; Hardware stack levels used:    1
 29094 ;; This function calls:
 29095 ;;		Nothing
 29096 ;; This function is called by:
 29097 ;;		_main
 29098 ;;		__fill_buffer_get_status
 29099 ;; This function uses a non-reentrant model
 29100 ;;
 29101                           
 29102                           	psect	text132
 29103  007E00                     __ptext132:
 29104                           	opt stack 0
 29105  007E00                     _ui_get_status:
 29106                           	opt stack 30
 29107                           
 29108                           ;ui.c: 87: return userInterfaceStatus;
 29109                           
 29110                           ;incstack = 0
 29111  007E00  0100               	movlb	0	; () banked
 29112  007E02  5198               	movf	_userInterfaceStatus& (0+255),w,b
 29113  007E04  0012               	return	
 29114  007E06                     __end_of_ui_get_status:
 29115                           	opt stack 0
 29116                           tosu	equ	0xFFF
 29117                           tosh	equ	0xFFE
 29118                           tosl	equ	0xFFD
 29119                           pclath	equ	0xFFA
 29120                           tblptru	equ	0xFF8
 29121                           tblptrh	equ	0xFF7
 29122                           tblptrl	equ	0xFF6
 29123                           tablat	equ	0xFF5
 29124                           prodh	equ	0xFF4
 29125                           prodl	equ	0xFF3
 29126                           intcon	equ	0xFF2
 29127                           intcon2	equ	0xFF1
 29128                           intcon3	equ	0xFF0
 29129                           indf0	equ	0xFEF
 29130                           postinc0	equ	0xFEE
 29131                           fsr0h	equ	0xFEA
 29132                           fsr0l	equ	0xFE9
 29133                           wreg	equ	0xFE8
 29134                           indf1	equ	0xFE7
 29135                           postdec1	equ	0xFE5
 29136                           plusw1	equ	0xFE3
 29137                           fsr1h	equ	0xFE2
 29138                           fsr1l	equ	0xFE1
 29139                           indf2	equ	0xFDF
 29140                           postinc2	equ	0xFDE
 29141                           postdec2	equ	0xFDD
 29142                           plusw2	equ	0xFDB
 29143                           fsr2h	equ	0xFDA
 29144                           fsr2l	equ	0xFD9
 29145                           status	equ	0xFD8
 29146                           
 29147 ;; *************** function __fill_buffer_get_file_details *****************
 29148 ;; Defined at:
 29149 ;;		line 329 in file "api.c"
 29150 ;; Parameters:    Size  Location     Type
 29151 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 29152 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 29153 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 29154 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29155 ;; Auto vars:     Size  Location     Type
 29156 ;;  file_number     1   66[COMRAM] unsigned char 
 29157 ;; Return value:  Size  Location     Type
 29158 ;;                  1    wreg      void 
 29159 ;; Registers used:
 29160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29161 ;; Tracked objects:
 29162 ;;		On entry : 0/0
 29163 ;;		On exit  : 0/0
 29164 ;;		Unchanged: 0/0
 29165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29170 ;;Total ram usage:        5 bytes
 29171 ;; Hardware stack levels used:    1
 29172 ;; Hardware stack levels required when called:    7
 29173 ;; This function calls:
 29174 ;;		_fat_get_file_information
 29175 ;; This function is called by:
 29176 ;;		_api_prepare
 29177 ;; This function uses a non-reentrant model
 29178 ;;
 29179                           
 29180                           	psect	text133
 29181  00686C                     __ptext133:
 29182                           	opt stack 0
 29183  00686C                     __fill_buffer_get_file_details:
 29184                           	opt stack 22
 29185                           
 29186                           ;api.c: 331: uint8_t file_number = inBuffer[1];
 29187                           
 29188                           ; BSR set to: 0
 29189                           ;incstack = 0
 29190  00686C  EE20 F001          	lfsr	2,1
 29191  006870  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 29192  006872  26D9               	addwf	fsr2l,f,c
 29193  006874  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 29194  006876  22DA               	addwfc	fsr2h,f,c
 29195  006878  50DF               	movf	indf2,w,c
 29196  00687A  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 29197                           
 29198                           ;api.c: 334: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 29199  00687C  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 29200  006880  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 29201  006884  0E80               	movlw	128
 29202  006886  6EDF               	movwf	indf2,c
 29203                           
 29204                           ;api.c: 337: outBuffer[1] = 0xC125 >> 8;
 29205  006888  EE20 F001          	lfsr	2,1
 29206  00688C  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29207  00688E  26D9               	addwf	fsr2l,f,c
 29208  006890  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29209  006892  22DA               	addwfc	fsr2h,f,c
 29210  006894  0EC1               	movlw	193
 29211  006896  6EDF               	movwf	indf2,c
 29212                           
 29213                           ;api.c: 338: outBuffer[2] = (uint8_t) 0xC125;
 29214  006898  EE20 F002          	lfsr	2,2
 29215  00689C  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29216  00689E  26D9               	addwf	fsr2l,f,c
 29217  0068A0  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29218  0068A2  22DA               	addwfc	fsr2h,f,c
 29219  0068A4  0E25               	movlw	37
 29220  0068A6  6EDF               	movwf	indf2,c
 29221                           
 29222                           ;api.c: 341: outBuffer[3] = file_number;
 29223  0068A8  EE20 F003          	lfsr	2,3
 29224  0068AC  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29225  0068AE  26D9               	addwf	fsr2l,f,c
 29226  0068B0  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29227  0068B2  22DA               	addwfc	fsr2h,f,c
 29228  0068B4  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 29229                           
 29230                           ;api.c: 344: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 29231  0068B8  EE20 F004          	lfsr	2,4
 29232  0068BC  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29233  0068BE  26D9               	addwf	fsr2l,f,c
 29234  0068C0  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29235  0068C2  22DA               	addwfc	fsr2h,f,c
 29236  0068C4  0E05               	movlw	5
 29237  0068C6  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 29238  0068C8  6E37               	movwf	fat_get_file_information@data,c
 29239  0068CA  0E00               	movlw	0
 29240  0068CC  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 29241  0068CE  6E38               	movwf	fat_get_file_information@data+1,c
 29242  0068D0  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 29243  0068D2  ECE2  F032         	call	_fat_get_file_information
 29244  0068D6  6EDF               	movwf	indf2,c
 29245  0068D8  0012               	return		;funcret
 29246  0068DA                     __end_of__fill_buffer_get_file_details:
 29247                           	opt stack 0
 29248                           tosu	equ	0xFFF
 29249                           tosh	equ	0xFFE
 29250                           tosl	equ	0xFFD
 29251                           pclath	equ	0xFFA
 29252                           tblptru	equ	0xFF8
 29253                           tblptrh	equ	0xFF7
 29254                           tblptrl	equ	0xFF6
 29255                           tablat	equ	0xFF5
 29256                           prodh	equ	0xFF4
 29257                           prodl	equ	0xFF3
 29258                           intcon	equ	0xFF2
 29259                           intcon2	equ	0xFF1
 29260                           intcon3	equ	0xFF0
 29261                           indf0	equ	0xFEF
 29262                           postinc0	equ	0xFEE
 29263                           fsr0h	equ	0xFEA
 29264                           fsr0l	equ	0xFE9
 29265                           wreg	equ	0xFE8
 29266                           indf1	equ	0xFE7
 29267                           postdec1	equ	0xFE5
 29268                           plusw1	equ	0xFE3
 29269                           fsr1h	equ	0xFE2
 29270                           fsr1l	equ	0xFE1
 29271                           indf2	equ	0xFDF
 29272                           postinc2	equ	0xFDE
 29273                           postdec2	equ	0xFDD
 29274                           plusw2	equ	0xFDB
 29275                           fsr2h	equ	0xFDA
 29276                           fsr2l	equ	0xFD9
 29277                           status	equ	0xFD8
 29278                           
 29279 ;; *************** function __fill_buffer_get_display *****************
 29280 ;; Defined at:
 29281 ;;		line 207 in file "api.c"
 29282 ;; Parameters:    Size  Location     Type
 29283 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29284 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29285 ;;  secondHalf      1    6[COMRAM] unsigned char 
 29286 ;; Auto vars:     Size  Location     Type
 29287 ;;  position        1   15[COMRAM] unsigned char 
 29288 ;;  start_line      1   14[COMRAM] unsigned char 
 29289 ;;  line            1   13[COMRAM] unsigned char 
 29290 ;;  cntr            1   12[COMRAM] unsigned char 
 29291 ;; Return value:  Size  Location     Type
 29292 ;;                  1    wreg      void 
 29293 ;; Registers used:
 29294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29295 ;; Tracked objects:
 29296 ;;		On entry : 0/0
 29297 ;;		On exit  : 0/0
 29298 ;;		Unchanged: 0/0
 29299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29300 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29302 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29303 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29304 ;;Total ram usage:       12 bytes
 29305 ;; Hardware stack levels used:    1
 29306 ;; Hardware stack levels required when called:    1
 29307 ;; This function calls:
 29308 ;;		_display_get_character
 29309 ;; This function is called by:
 29310 ;;		_api_prepare
 29311 ;; This function uses a non-reentrant model
 29312 ;;
 29313                           
 29314                           	psect	text134
 29315  0054F4                     __ptext134:
 29316                           	opt stack 0
 29317  0054F4                     __fill_buffer_get_display:
 29318                           	opt stack 28
 29319                           
 29320                           ;api.c: 209: uint8_t cntr;;api.c: 210: uint8_t line;;api.c: 211: uint8_t start_line;;api
      +                          .c: 212: uint8_t position;;api.c: 215: if(secondHalf)
 29321                           
 29322                           ;incstack = 0
 29323  0054F4  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 29324  0054F6  B4D8               	btfsc	status,2,c
 29325  0054F8  D006               	goto	l2546
 29326                           
 29327                           ;api.c: 216: {;api.c: 217: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 29328  0054FA  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29329  0054FE  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29330  005502  0E12               	movlw	18
 29331  005504  D005               	goto	L32
 29332  005506                     l2546:
 29333                           
 29334                           ;api.c: 219: else;api.c: 220: {;api.c: 221: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 29335  005506  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29336  00550A  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29337  00550E  0E11               	movlw	17
 29338  005510                     L32:
 29339  005510  6EDF               	movwf	indf2,c
 29340                           
 29341                           ;api.c: 222: };api.c: 225: outBuffer[1] = 0xC125 >> 8;
 29342  005512  EE20 F001          	lfsr	2,1
 29343  005516  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 29344  005518  26D9               	addwf	fsr2l,f,c
 29345  00551A  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 29346  00551C  22DA               	addwfc	fsr2h,f,c
 29347  00551E  0EC1               	movlw	193
 29348  005520  6EDF               	movwf	indf2,c
 29349                           
 29350                           ;api.c: 226: outBuffer[2] = (uint8_t) 0xC125;
 29351  005522  EE20 F002          	lfsr	2,2
 29352  005526  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 29353  005528  26D9               	addwf	fsr2l,f,c
 29354  00552A  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 29355  00552C  22DA               	addwfc	fsr2h,f,c
 29356  00552E  0E25               	movlw	37
 29357  005530  6EDF               	movwf	indf2,c
 29358                           
 29359                           ;api.c: 229: cntr = 3;
 29360  005532  0E03               	movlw	3
 29361  005534  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 29362                           
 29363                           ;api.c: 230: if(secondHalf)
 29364  005536  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 29365  005538  B4D8               	btfsc	status,2,c
 29366  00553A  D002               	goto	l2548
 29367                           
 29368                           ;api.c: 231: {;api.c: 232: start_line = 2;
 29369  00553C  0E02               	movlw	2
 29370  00553E  D001               	goto	L33
 29371  005540                     l2548:
 29372                           
 29373                           ;api.c: 234: else;api.c: 235: {;api.c: 236: start_line = 0;
 29374  005540  0E00               	movlw	0
 29375  005542                     L33:
 29376  005542  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 29377                           
 29378                           ;api.c: 237: };api.c: 238: for(line=start_line; line<start_line+2; ++line)
 29379  005544  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 29380  005548  D01A               	goto	l2550
 29381  00554A                     
 29382                           ;api.c: 239: {;api.c: 240: for(position=0; position<20; ++position)
 29383  00554A  0E00               	movlw	0
 29384  00554C  6E10               	movwf	__fill_buffer_get_display@position,c
 29385  00554E                     l12984:
 29386  00554E  0E13               	movlw	19
 29387  005550  6410               	cpfsgt	__fill_buffer_get_display@position,c
 29388  005552  D001               	goto	l2552
 29389  005554  D013               	goto	u9940
 29390  005556                     l2552:
 29391                           
 29392                           ;api.c: 241: {;api.c: 242: outBuffer[cntr] = display_get_character(line, position);
 29393  005556  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 29394  00555A  500E               	movf	__fill_buffer_get_display@line,w,c
 29395  00555C  EC0B  F03D         	call	_display_get_character
 29396  005560  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 29397  005562  500D               	movf	__fill_buffer_get_display@cntr,w,c
 29398  005564  0D01               	mullw	1
 29399  005566  50F3               	movf	prodl,w,c
 29400  005568  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 29401  00556A  6ED9               	movwf	fsr2l,c
 29402  00556C  50F4               	movf	prodh,w,c
 29403  00556E  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 29404  005570  6EDA               	movwf	fsr2h,c
 29405  005572  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 29406                           
 29407                           ;api.c: 243: ++cntr;
 29408  005576  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 29409  005578  2A10               	incf	__fill_buffer_get_display@position,f,c
 29410  00557A  D7E9               	goto	l12984
 29411  00557C                     u9940:
 29412  00557C  2A0E               	incf	__fill_buffer_get_display@line,f,c
 29413  00557E                     l2550:
 29414  00557E  500F               	movf	__fill_buffer_get_display@start_line,w,c
 29415  005580  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 29416  005582  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 29417  005584  0E02               	movlw	2
 29418  005586  2608               	addwf	??__fill_buffer_get_display,f,c
 29419  005588  0E00               	movlw	0
 29420  00558A  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 29421  00558C  500E               	movf	__fill_buffer_get_display@line,w,c
 29422  00558E  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 29423  005590  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 29424  005592  5008               	movf	??__fill_buffer_get_display,w,c
 29425  005594  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 29426  005596  500B               	movf	??__fill_buffer_get_display+3,w,c
 29427  005598  0A80               	xorlw	128
 29428  00559A  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 29429  00559C  5009               	movf	??__fill_buffer_get_display+1,w,c
 29430  00559E  0A80               	xorlw	128
 29431  0055A0  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 29432  0055A2  B0D8               	btfsc	status,0,c
 29433  0055A4  0012               	return	
 29434  0055A6  D7D1               	goto	l2551
 29435  0055A8                     __end_of__fill_buffer_get_display:
 29436                           	opt stack 0
 29437                           tosu	equ	0xFFF
 29438                           tosh	equ	0xFFE
 29439                           tosl	equ	0xFFD
 29440                           pclath	equ	0xFFA
 29441                           tblptru	equ	0xFF8
 29442                           tblptrh	equ	0xFF7
 29443                           tblptrl	equ	0xFF6
 29444                           tablat	equ	0xFF5
 29445                           prodh	equ	0xFF4
 29446                           prodl	equ	0xFF3
 29447                           intcon	equ	0xFF2
 29448                           intcon2	equ	0xFF1
 29449                           intcon3	equ	0xFF0
 29450                           indf0	equ	0xFEF
 29451                           postinc0	equ	0xFEE
 29452                           fsr0h	equ	0xFEA
 29453                           fsr0l	equ	0xFE9
 29454                           wreg	equ	0xFE8
 29455                           indf1	equ	0xFE7
 29456                           postdec1	equ	0xFE5
 29457                           plusw1	equ	0xFE3
 29458                           fsr1h	equ	0xFE2
 29459                           fsr1l	equ	0xFE1
 29460                           indf2	equ	0xFDF
 29461                           postinc2	equ	0xFDE
 29462                           postdec2	equ	0xFDD
 29463                           plusw2	equ	0xFDB
 29464                           fsr2h	equ	0xFDA
 29465                           fsr2l	equ	0xFD9
 29466                           status	equ	0xFD8
 29467                           
 29468 ;; *************** function _display_get_character *****************
 29469 ;; Defined at:
 29470 ;;		line 61 in file "display.c"
 29471 ;; Parameters:    Size  Location     Type
 29472 ;;  line            1    wreg     unsigned char 
 29473 ;;  position        1    0[COMRAM] unsigned char 
 29474 ;; Auto vars:     Size  Location     Type
 29475 ;;  line            1    3[COMRAM] unsigned char 
 29476 ;; Return value:  Size  Location     Type
 29477 ;;                  1    wreg      unsigned char 
 29478 ;; Registers used:
 29479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29480 ;; Tracked objects:
 29481 ;;		On entry : 0/0
 29482 ;;		On exit  : 0/0
 29483 ;;		Unchanged: 0/0
 29484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29485 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29489 ;;Total ram usage:        4 bytes
 29490 ;; Hardware stack levels used:    1
 29491 ;; This function calls:
 29492 ;;		Nothing
 29493 ;; This function is called by:
 29494 ;;		__fill_buffer_get_display
 29495 ;; This function uses a non-reentrant model
 29496 ;;
 29497                           
 29498                           	psect	text135
 29499  007A16                     __ptext135:
 29500                           	opt stack 0
 29501  007A16                     _display_get_character:
 29502                           	opt stack 28
 29503                           
 29504                           ;incstack = 0
 29505                           ;display_get_character@line stored from wreg
 29506  007A16  6E04               	movwf	display_get_character@line,c
 29507                           
 29508                           ;display.c: 63: return display_content[line][position];
 29509  007A18  5004               	movf	display_get_character@line,w,c
 29510  007A1A  0D14               	mullw	20
 29511  007A1C  0E74               	movlw	low _display_content
 29512  007A1E  6E02               	movwf	??_display_get_character& (0+255),c
 29513  007A20  0E01               	movlw	high _display_content
 29514  007A22  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 29515  007A24  50F3               	movf	prodl,w,c
 29516  007A26  2602               	addwf	??_display_get_character,f,c
 29517  007A28  50F4               	movf	prodh,w,c
 29518  007A2A  2203               	addwfc	??_display_get_character+1,f,c
 29519  007A2C  5001               	movf	display_get_character@position,w,c
 29520  007A2E  0D01               	mullw	1
 29521  007A30  50F3               	movf	prodl,w,c
 29522  007A32  2402               	addwf	??_display_get_character,w,c
 29523  007A34  6ED9               	movwf	fsr2l,c
 29524  007A36  50F4               	movf	prodh,w,c
 29525  007A38  2003               	addwfc	??_display_get_character+1,w,c
 29526  007A3A  6EDA               	movwf	fsr2h,c
 29527  007A3C  50DF               	movf	indf2,w,c
 29528  007A3E  0012               	return	
 29529  007A40                     __end_of_display_get_character:
 29530                           	opt stack 0
 29531                           tosu	equ	0xFFF
 29532                           tosh	equ	0xFFE
 29533                           tosl	equ	0xFFD
 29534                           pclath	equ	0xFFA
 29535                           tblptru	equ	0xFF8
 29536                           tblptrh	equ	0xFF7
 29537                           tblptrl	equ	0xFF6
 29538                           tablat	equ	0xFF5
 29539                           prodh	equ	0xFF4
 29540                           prodl	equ	0xFF3
 29541                           intcon	equ	0xFF2
 29542                           intcon2	equ	0xFF1
 29543                           intcon3	equ	0xFF0
 29544                           indf0	equ	0xFEF
 29545                           postinc0	equ	0xFEE
 29546                           fsr0h	equ	0xFEA
 29547                           fsr0l	equ	0xFE9
 29548                           wreg	equ	0xFE8
 29549                           indf1	equ	0xFE7
 29550                           postdec1	equ	0xFE5
 29551                           plusw1	equ	0xFE3
 29552                           fsr1h	equ	0xFE2
 29553                           fsr1l	equ	0xFE1
 29554                           indf2	equ	0xFDF
 29555                           postinc2	equ	0xFDE
 29556                           postdec2	equ	0xFDD
 29557                           plusw2	equ	0xFDB
 29558                           fsr2h	equ	0xFDA
 29559                           fsr2l	equ	0xFD9
 29560                           status	equ	0xFD8
 29561                           
 29562 ;; *************** function __fill_buffer_get_configuration *****************
 29563 ;; Defined at:
 29564 ;;		line 308 in file "api.c"
 29565 ;; Parameters:    Size  Location     Type
 29566 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 29567 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29568 ;; Auto vars:     Size  Location     Type
 29569 ;;		None
 29570 ;; Return value:  Size  Location     Type
 29571 ;;                  1    wreg      void 
 29572 ;; Registers used:
 29573 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29574 ;; Tracked objects:
 29575 ;;		On entry : 0/0
 29576 ;;		On exit  : 0/0
 29577 ;;		Unchanged: 0/0
 29578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29583 ;;Total ram usage:        2 bytes
 29584 ;; Hardware stack levels used:    1
 29585 ;; This function calls:
 29586 ;;		Nothing
 29587 ;; This function is called by:
 29588 ;;		_api_prepare
 29589 ;; This function uses a non-reentrant model
 29590 ;;
 29591                           
 29592                           	psect	text136
 29593  005B80                     __ptext136:
 29594                           	opt stack 0
 29595  005B80                     __fill_buffer_get_configuration:
 29596                           	opt stack 29
 29597                           
 29598                           ;api.c: 311: outBuffer[0] = DATAREQUEST_GET_STATUS;
 29599                           
 29600                           ;incstack = 0
 29601  005B80  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 29602  005B84  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 29603  005B88  0E10               	movlw	16
 29604  005B8A  6EDF               	movwf	indf2,c
 29605                           
 29606                           ;api.c: 314: outBuffer[1] = 0xC125 >> 8;
 29607  005B8C  EE20 F001          	lfsr	2,1
 29608  005B90  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29609  005B92  26D9               	addwf	fsr2l,f,c
 29610  005B94  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29611  005B96  22DA               	addwfc	fsr2h,f,c
 29612  005B98  0EC1               	movlw	193
 29613  005B9A  6EDF               	movwf	indf2,c
 29614                           
 29615                           ;api.c: 315: outBuffer[2] = (uint8_t) 0xC125;
 29616  005B9C  EE20 F002          	lfsr	2,2
 29617  005BA0  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29618  005BA2  26D9               	addwf	fsr2l,f,c
 29619  005BA4  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29620  005BA6  22DA               	addwfc	fsr2h,f,c
 29621  005BA8  0E25               	movlw	37
 29622  005BAA  6EDF               	movwf	indf2,c
 29623                           
 29624                           ;api.c: 318: outBuffer[3] = communicationSettings.spiMode;
 29625  005BAC  EE20 F003          	lfsr	2,3
 29626  005BB0  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29627  005BB2  26D9               	addwf	fsr2l,f,c
 29628  005BB4  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29629  005BB6  22DA               	addwfc	fsr2h,f,c
 29630  005BB8  C139  FFDF         	movff	_communicationSettings,indf2
 29631                           
 29632                           ;api.c: 319: outBuffer[4] = communicationSettings.spiFrequency;
 29633  005BBC  EE20 F004          	lfsr	2,4
 29634  005BC0  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29635  005BC2  26D9               	addwf	fsr2l,f,c
 29636  005BC4  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29637  005BC6  22DA               	addwfc	fsr2h,f,c
 29638  005BC8  C13A  FFDF         	movff	_communicationSettings+1,indf2
 29639                           
 29640                           ;api.c: 320: outBuffer[5] = communicationSettings.spiPolarity;
 29641  005BCC  EE20 F005          	lfsr	2,5
 29642  005BD0  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29643  005BD2  26D9               	addwf	fsr2l,f,c
 29644  005BD4  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29645  005BD6  22DA               	addwfc	fsr2h,f,c
 29646  005BD8  C13B  FFDF         	movff	_communicationSettings+2,indf2
 29647                           
 29648                           ;api.c: 323: outBuffer[6] = communicationSettings.i2cMode;
 29649  005BDC  EE20 F006          	lfsr	2,6
 29650  005BE0  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29651  005BE2  26D9               	addwf	fsr2l,f,c
 29652  005BE4  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29653  005BE6  22DA               	addwfc	fsr2h,f,c
 29654  005BE8  C13C  FFDF         	movff	_communicationSettings+3,indf2
 29655                           
 29656                           ;api.c: 324: outBuffer[7] = communicationSettings.i2cFrequency;
 29657  005BEC  EE20 F007          	lfsr	2,7
 29658  005BF0  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29659  005BF2  26D9               	addwf	fsr2l,f,c
 29660  005BF4  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29661  005BF6  22DA               	addwfc	fsr2h,f,c
 29662  005BF8  C13D  FFDF         	movff	_communicationSettings+4,indf2
 29663                           
 29664                           ;api.c: 325: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 29665  005BFC  EE20 F008          	lfsr	2,8
 29666  005C00  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29667  005C02  26D9               	addwf	fsr2l,f,c
 29668  005C04  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29669  005C06  22DA               	addwfc	fsr2h,f,c
 29670  005C08  C13E  FFDF         	movff	_communicationSettings+5,indf2
 29671                           
 29672                           ;api.c: 326: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 29673  005C0C  EE20 F009          	lfsr	2,9
 29674  005C10  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29675  005C12  26D9               	addwf	fsr2l,f,c
 29676  005C14  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29677  005C16  22DA               	addwfc	fsr2h,f,c
 29678  005C18  C13F  FFDF         	movff	_communicationSettings+6,indf2
 29679  005C1C  0012               	return		;funcret
 29680  005C1E                     __end_of__fill_buffer_get_configuration:
 29681                           	opt stack 0
 29682                           tosu	equ	0xFFF
 29683                           tosh	equ	0xFFE
 29684                           tosl	equ	0xFFD
 29685                           pclath	equ	0xFFA
 29686                           tblptru	equ	0xFF8
 29687                           tblptrh	equ	0xFF7
 29688                           tblptrl	equ	0xFF6
 29689                           tablat	equ	0xFF5
 29690                           prodh	equ	0xFF4
 29691                           prodl	equ	0xFF3
 29692                           intcon	equ	0xFF2
 29693                           intcon2	equ	0xFF1
 29694                           intcon3	equ	0xFF0
 29695                           indf0	equ	0xFEF
 29696                           postinc0	equ	0xFEE
 29697                           fsr0h	equ	0xFEA
 29698                           fsr0l	equ	0xFE9
 29699                           wreg	equ	0xFE8
 29700                           indf1	equ	0xFE7
 29701                           postdec1	equ	0xFE5
 29702                           plusw1	equ	0xFE3
 29703                           fsr1h	equ	0xFE2
 29704                           fsr1l	equ	0xFE1
 29705                           indf2	equ	0xFDF
 29706                           postinc2	equ	0xFDE
 29707                           postdec2	equ	0xFDD
 29708                           plusw2	equ	0xFDB
 29709                           fsr2h	equ	0xFDA
 29710                           fsr2l	equ	0xFD9
 29711                           status	equ	0xFD8
 29712                           
 29713 ;; *************** function __fill_buffer_get_bootloader_details *****************
 29714 ;; Defined at:
 29715 ;;		line 248 in file "api.c"
 29716 ;; Parameters:    Size  Location     Type
 29717 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29718 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29719 ;; Auto vars:     Size  Location     Type
 29720 ;;  buffer_large    4   11[COMRAM] unsigned long 
 29721 ;;  buffer_small    2   15[COMRAM] unsigned int 
 29722 ;;  cntr            1   10[COMRAM] unsigned char 
 29723 ;;  data_length     1    9[COMRAM] unsigned char 
 29724 ;; Return value:  Size  Location     Type
 29725 ;;                  1    wreg      void 
 29726 ;; Registers used:
 29727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29728 ;; Tracked objects:
 29729 ;;		On entry : 0/0
 29730 ;;		On exit  : 0/0
 29731 ;;		Unchanged: 0/0
 29732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29734 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29736 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29737 ;;Total ram usage:       13 bytes
 29738 ;; Hardware stack levels used:    1
 29739 ;; Hardware stack levels required when called:    1
 29740 ;; This function calls:
 29741 ;;		_bootloader_get_entries
 29742 ;;		_bootloader_get_error
 29743 ;;		_bootloader_get_file_size
 29744 ;;		_bootloader_get_flashPagesWritten
 29745 ;;		_bootloader_get_rec_address
 29746 ;;		_bootloader_get_rec_checksum
 29747 ;;		_bootloader_get_rec_checksumCheck
 29748 ;;		_bootloader_get_rec_data
 29749 ;;		_bootloader_get_rec_dataLength
 29750 ;;		_bootloader_get_rec_recordType
 29751 ;;		_bootloader_get_total_entries
 29752 ;; This function is called by:
 29753 ;;		_api_prepare
 29754 ;; This function uses a non-reentrant model
 29755 ;;
 29756                           
 29757                           	psect	text137
 29758  00274E                     __ptext137:
 29759                           	opt stack 0
 29760  00274E                     __fill_buffer_get_bootloader_details:
 29761                           	opt stack 28
 29762                           
 29763                           ;api.c: 250: uint8_t cntr;;api.c: 251: uint8_t data_length;;api.c: 252: uint16_t buffer_
      +                          small;;api.c: 253: uint32_t buffer_large;;api.c: 256: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 29764                           
 29765                           ;incstack = 0
 29766  00274E  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 29767  002752  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 29768  002756  0E13               	movlw	19
 29769  002758  6EDF               	movwf	indf2,c
 29770                           
 29771                           ;api.c: 259: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 29772  00275A  EE20 F001          	lfsr	2,1
 29773  00275E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29774  002760  26D9               	addwf	fsr2l,f,c
 29775  002762  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29776  002764  22DA               	addwfc	fsr2h,f,c
 29777  002766  0EC1               	movlw	193
 29778  002768  6EDF               	movwf	indf2,c
 29779                           
 29780                           ;api.c: 260: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 29781  00276A  EE20 F002          	lfsr	2,2
 29782  00276E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29783  002770  26D9               	addwf	fsr2l,f,c
 29784  002772  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29785  002774  22DA               	addwfc	fsr2h,f,c
 29786  002776  0E25               	movlw	37
 29787  002778  6EDF               	movwf	indf2,c
 29788                           
 29789                           ;api.c: 263: buffer_large = bootloader_get_file_size();
 29790  00277A  EC7C  F03E         	call	_bootloader_get_file_size	;wreg free
 29791  00277E  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 29792  002782  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 29793  002786  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 29794  00278A  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 29795                           
 29796                           ;api.c: 264: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 29797  00278E  EE20 F003          	lfsr	2,3
 29798  002792  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29799  002794  26D9               	addwf	fsr2l,f,c
 29800  002796  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29801  002798  22DA               	addwfc	fsr2h,f,c
 29802  00279A  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 29803  00279C  6EDF               	movwf	indf2,c
 29804                           
 29805                           ;api.c: 265: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 29806  00279E  EE20 F004          	lfsr	2,4
 29807  0027A2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29808  0027A4  26D9               	addwf	fsr2l,f,c
 29809  0027A6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29810  0027A8  22DA               	addwfc	fsr2h,f,c
 29811  0027AA  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 29812                           
 29813                           ;api.c: 266: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 29814  0027AE  EE20 F005          	lfsr	2,5
 29815  0027B2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29816  0027B4  26D9               	addwf	fsr2l,f,c
 29817  0027B6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29818  0027B8  22DA               	addwfc	fsr2h,f,c
 29819  0027BA  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 29820  0027BC  6EDF               	movwf	indf2,c
 29821                           
 29822                           ;api.c: 267: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 29823  0027BE  EE20 F006          	lfsr	2,6
 29824  0027C2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29825  0027C4  26D9               	addwf	fsr2l,f,c
 29826  0027C6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29827  0027C8  22DA               	addwfc	fsr2h,f,c
 29828  0027CA  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29829                           
 29830                           ;api.c: 269: buffer_small = bootloader_get_entries();
 29831  0027CE  ECE1  F03E         	call	_bootloader_get_entries	;wreg free
 29832  0027D2  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 29833  0027D6  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 29834                           
 29835                           ;api.c: 270: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 29836  0027DA  EE20 F007          	lfsr	2,7
 29837  0027DE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29838  0027E0  26D9               	addwf	fsr2l,f,c
 29839  0027E2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29840  0027E4  22DA               	addwfc	fsr2h,f,c
 29841  0027E6  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29842  0027E8  6EDF               	movwf	indf2,c
 29843                           
 29844                           ;api.c: 271: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 29845  0027EA  EE20 F008          	lfsr	2,8
 29846  0027EE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29847  0027F0  26D9               	addwf	fsr2l,f,c
 29848  0027F2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29849  0027F4  22DA               	addwfc	fsr2h,f,c
 29850  0027F6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29851                           
 29852                           ;api.c: 273: buffer_small = bootloader_get_total_entries();
 29853  0027FA  ECCD  F03E         	call	_bootloader_get_total_entries	;wreg free
 29854  0027FE  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 29855  002802  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 29856                           
 29857                           ;api.c: 274: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 29858  002806  EE20 F009          	lfsr	2,9
 29859  00280A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29860  00280C  26D9               	addwf	fsr2l,f,c
 29861  00280E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29862  002810  22DA               	addwfc	fsr2h,f,c
 29863  002812  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29864  002814  6EDF               	movwf	indf2,c
 29865                           
 29866                           ;api.c: 275: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 29867  002816  EE20 F00A          	lfsr	2,10
 29868  00281A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29869  00281C  26D9               	addwf	fsr2l,f,c
 29870  00281E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29871  002820  22DA               	addwfc	fsr2h,f,c
 29872  002822  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29873                           
 29874                           ;api.c: 277: outBuffer[11] = (uint8_t) bootloader_get_error();
 29875  002826  EE20 F00B          	lfsr	2,11
 29876  00282A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29877  00282C  26D9               	addwf	fsr2l,f,c
 29878  00282E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29879  002830  22DA               	addwfc	fsr2h,f,c
 29880  002832  EC0C  F03F         	call	_bootloader_get_error	;wreg free
 29881  002836  6EDF               	movwf	indf2,c
 29882                           
 29883                           ;api.c: 279: buffer_small = bootloader_get_flashPagesWritten();
 29884  002838  ECDC  F03E         	call	_bootloader_get_flashPagesWritten	;wreg free
 29885  00283C  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 29886  002840  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 29887                           
 29888                           ;api.c: 280: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 29889  002844  EE20 F00C          	lfsr	2,12
 29890  002848  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29891  00284A  26D9               	addwf	fsr2l,f,c
 29892  00284C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29893  00284E  22DA               	addwfc	fsr2h,f,c
 29894  002850  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29895  002852  6EDF               	movwf	indf2,c
 29896                           
 29897                           ;api.c: 281: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 29898  002854  EE20 F00D          	lfsr	2,13
 29899  002858  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29900  00285A  26D9               	addwf	fsr2l,f,c
 29901  00285C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29902  00285E  22DA               	addwfc	fsr2h,f,c
 29903  002860  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29904                           
 29905                           ;api.c: 284: buffer_small = bootloader_get_rec_dataLength();
 29906  002864  ECD2  F03E         	call	_bootloader_get_rec_dataLength	;wreg free
 29907  002868  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 29908  00286C  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 29909                           
 29910                           ;api.c: 285: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 29911  002870  EE20 F00E          	lfsr	2,14
 29912  002874  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29913  002876  26D9               	addwf	fsr2l,f,c
 29914  002878  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29915  00287A  22DA               	addwfc	fsr2h,f,c
 29916  00287C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29917  00287E  6EDF               	movwf	indf2,c
 29918                           
 29919                           ;api.c: 286: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 29920  002880  EE20 F00F          	lfsr	2,15
 29921  002884  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29922  002886  26D9               	addwf	fsr2l,f,c
 29923  002888  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29924  00288A  22DA               	addwfc	fsr2h,f,c
 29925  00288C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29926                           
 29927                           ;api.c: 288: buffer_small = bootloader_get_rec_address();
 29928  002890  ECD7  F03E         	call	_bootloader_get_rec_address	;wreg free
 29929  002894  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 29930  002898  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 29931                           
 29932                           ;api.c: 289: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 29933  00289C  EE20 F010          	lfsr	2,16
 29934  0028A0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29935  0028A2  26D9               	addwf	fsr2l,f,c
 29936  0028A4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29937  0028A6  22DA               	addwfc	fsr2h,f,c
 29938  0028A8  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29939  0028AA  6EDF               	movwf	indf2,c
 29940                           
 29941                           ;api.c: 290: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 29942  0028AC  EE20 F011          	lfsr	2,17
 29943  0028B0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29944  0028B2  26D9               	addwf	fsr2l,f,c
 29945  0028B4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29946  0028B6  22DA               	addwfc	fsr2h,f,c
 29947  0028B8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29948                           
 29949                           ;api.c: 292: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 29950  0028BC  EE20 F012          	lfsr	2,18
 29951  0028C0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29952  0028C2  26D9               	addwf	fsr2l,f,c
 29953  0028C4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29954  0028C6  22DA               	addwfc	fsr2h,f,c
 29955  0028C8  EC03  F03F         	call	_bootloader_get_rec_recordType	;wreg free
 29956  0028CC  6EDF               	movwf	indf2,c
 29957                           
 29958                           ;api.c: 293: outBuffer[19] = bootloader_get_rec_checksum();
 29959  0028CE  EE20 F013          	lfsr	2,19
 29960  0028D2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29961  0028D4  26D9               	addwf	fsr2l,f,c
 29962  0028D6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29963  0028D8  22DA               	addwfc	fsr2h,f,c
 29964  0028DA  EC09  F03F         	call	_bootloader_get_rec_checksum	;wreg free
 29965  0028DE  6EDF               	movwf	indf2,c
 29966                           
 29967                           ;api.c: 294: outBuffer[20] = bootloader_get_rec_checksumCheck();
 29968  0028E0  EE20 F014          	lfsr	2,20
 29969  0028E4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29970  0028E6  26D9               	addwf	fsr2l,f,c
 29971  0028E8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29972  0028EA  22DA               	addwfc	fsr2h,f,c
 29973  0028EC  EC06  F03F         	call	_bootloader_get_rec_checksumCheck	;wreg free
 29974  0028F0  6EDF               	movwf	indf2,c
 29975                           
 29976                           ;api.c: 296: data_length = (uint8_t) bootloader_get_rec_dataLength();
 29977  0028F2  ECD2  F03E         	call	_bootloader_get_rec_dataLength	;wreg free
 29978  0028F6  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 29979  0028F8  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29980                           
 29981                           ;api.c: 297: if(data_length>43)
 29982  0028FA  0E2B               	movlw	43
 29983  0028FC  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 29984  0028FE  D002               	goto	l2558
 29985                           
 29986                           ;api.c: 298: {;api.c: 300: data_length = 43;
 29987  002900  0E2B               	movlw	43
 29988  002902  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29989  002904                     l2558:
 29990                           
 29991                           ;api.c: 301: };api.c: 302: for(cntr=0; cntr<data_length; ++cntr)
 29992  002904  0E00               	movlw	0
 29993  002906  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 29994  002908  D014               	goto	l2559
 29995  00290A                     
 29996                           ;api.c: 303: {;api.c: 304: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 29997  00290A  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29998  00290C  EC49  F03E         	call	_bootloader_get_rec_data
 29999  002910  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 30000  002912  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 30001  002914  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 30002  002916  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 30003  002918  0E15               	movlw	21
 30004  00291A  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 30005  00291C  0E00               	movlw	0
 30006  00291E  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 30007  002920  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 30008  002922  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30009  002924  6ED9               	movwf	fsr2l,c
 30010  002926  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 30011  002928  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30012  00292A  6EDA               	movwf	fsr2h,c
 30013  00292C  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 30014  002930  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 30015  002932                     l2559:
 30016  002932  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 30017  002934  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 30018  002936  B0D8               	btfsc	status,0,c
 30019  002938  0012               	return	
 30020  00293A  D7E7               	goto	l2560
 30021  00293C                     __end_of__fill_buffer_get_bootloader_details:
 30022                           	opt stack 0
 30023                           tosu	equ	0xFFF
 30024                           tosh	equ	0xFFE
 30025                           tosl	equ	0xFFD
 30026                           pclath	equ	0xFFA
 30027                           tblptru	equ	0xFF8
 30028                           tblptrh	equ	0xFF7
 30029                           tblptrl	equ	0xFF6
 30030                           tablat	equ	0xFF5
 30031                           prodh	equ	0xFF4
 30032                           prodl	equ	0xFF3
 30033                           intcon	equ	0xFF2
 30034                           intcon2	equ	0xFF1
 30035                           intcon3	equ	0xFF0
 30036                           indf0	equ	0xFEF
 30037                           postinc0	equ	0xFEE
 30038                           fsr0h	equ	0xFEA
 30039                           fsr0l	equ	0xFE9
 30040                           wreg	equ	0xFE8
 30041                           indf1	equ	0xFE7
 30042                           postdec1	equ	0xFE5
 30043                           plusw1	equ	0xFE3
 30044                           fsr1h	equ	0xFE2
 30045                           fsr1l	equ	0xFE1
 30046                           indf2	equ	0xFDF
 30047                           postinc2	equ	0xFDE
 30048                           postdec2	equ	0xFDD
 30049                           plusw2	equ	0xFDB
 30050                           fsr2h	equ	0xFDA
 30051                           fsr2l	equ	0xFD9
 30052                           status	equ	0xFD8
 30053                           
 30054 ;; *************** function _bootloader_get_total_entries *****************
 30055 ;; Defined at:
 30056 ;;		line 434 in file "bootloader.c"
 30057 ;; Parameters:    Size  Location     Type
 30058 ;;		None
 30059 ;; Auto vars:     Size  Location     Type
 30060 ;;		None
 30061 ;; Return value:  Size  Location     Type
 30062 ;;                  2    0[COMRAM] unsigned int 
 30063 ;; Registers used:
 30064 ;;		None
 30065 ;; Tracked objects:
 30066 ;;		On entry : 0/0
 30067 ;;		On exit  : 0/0
 30068 ;;		Unchanged: 0/0
 30069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30074 ;;Total ram usage:        2 bytes
 30075 ;; Hardware stack levels used:    1
 30076 ;; This function calls:
 30077 ;;		Nothing
 30078 ;; This function is called by:
 30079 ;;		__display_checked
 30080 ;;		__display_programming
 30081 ;;		__fill_buffer_get_bootloader_details
 30082 ;; This function uses a non-reentrant model
 30083 ;;
 30084                           
 30085                           	psect	text138
 30086  007D9A                     __ptext138:
 30087                           	opt stack 0
 30088  007D9A                     _bootloader_get_total_entries:
 30089                           	opt stack 28
 30090                           
 30091                           ;bootloader.c: 436: return total_hex_file_entries;
 30092                           
 30093                           ;incstack = 0
 30094  007D9A  C168  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30095  007D9E  C169  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30096  007DA2  0012               	return		;funcret
 30097  007DA4                     __end_of_bootloader_get_total_entries:
 30098                           	opt stack 0
 30099                           tosu	equ	0xFFF
 30100                           tosh	equ	0xFFE
 30101                           tosl	equ	0xFFD
 30102                           pclath	equ	0xFFA
 30103                           tblptru	equ	0xFF8
 30104                           tblptrh	equ	0xFF7
 30105                           tblptrl	equ	0xFF6
 30106                           tablat	equ	0xFF5
 30107                           prodh	equ	0xFF4
 30108                           prodl	equ	0xFF3
 30109                           intcon	equ	0xFF2
 30110                           intcon2	equ	0xFF1
 30111                           intcon3	equ	0xFF0
 30112                           indf0	equ	0xFEF
 30113                           postinc0	equ	0xFEE
 30114                           fsr0h	equ	0xFEA
 30115                           fsr0l	equ	0xFE9
 30116                           wreg	equ	0xFE8
 30117                           indf1	equ	0xFE7
 30118                           postdec1	equ	0xFE5
 30119                           plusw1	equ	0xFE3
 30120                           fsr1h	equ	0xFE2
 30121                           fsr1l	equ	0xFE1
 30122                           indf2	equ	0xFDF
 30123                           postinc2	equ	0xFDE
 30124                           postdec2	equ	0xFDD
 30125                           plusw2	equ	0xFDB
 30126                           fsr2h	equ	0xFDA
 30127                           fsr2l	equ	0xFD9
 30128                           status	equ	0xFD8
 30129                           
 30130 ;; *************** function _bootloader_get_rec_recordType *****************
 30131 ;; Defined at:
 30132 ;;		line 455 in file "bootloader.c"
 30133 ;; Parameters:    Size  Location     Type
 30134 ;;		None
 30135 ;; Auto vars:     Size  Location     Type
 30136 ;;		None
 30137 ;; Return value:  Size  Location     Type
 30138 ;;                  1    wreg      enum E6764
 30139 ;; Registers used:
 30140 ;;		wreg, status,2
 30141 ;; Tracked objects:
 30142 ;;		On entry : 0/0
 30143 ;;		On exit  : 0/0
 30144 ;;		Unchanged: 0/0
 30145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30150 ;;Total ram usage:        0 bytes
 30151 ;; Hardware stack levels used:    1
 30152 ;; This function calls:
 30153 ;;		Nothing
 30154 ;; This function is called by:
 30155 ;;		__fill_buffer_get_bootloader_details
 30156 ;; This function uses a non-reentrant model
 30157 ;;
 30158                           
 30159                           	psect	text139
 30160  007E06                     __ptext139:
 30161                           	opt stack 0
 30162  007E06                     _bootloader_get_rec_recordType:
 30163                           	opt stack 28
 30164                           
 30165                           ;bootloader.c: 457: return hex_file_entry.recordType;
 30166                           
 30167                           ;incstack = 0
 30168  007E06  0101               	movlb	1	; () banked
 30169  007E08  51C8               	movf	(_hex_file_entry+4)& (0+255),w,b
 30170  007E0A  0012               	return	
 30171  007E0C                     __end_of_bootloader_get_rec_recordType:
 30172                           	opt stack 0
 30173                           tosu	equ	0xFFF
 30174                           tosh	equ	0xFFE
 30175                           tosl	equ	0xFFD
 30176                           pclath	equ	0xFFA
 30177                           tblptru	equ	0xFF8
 30178                           tblptrh	equ	0xFF7
 30179                           tblptrl	equ	0xFF6
 30180                           tablat	equ	0xFF5
 30181                           prodh	equ	0xFF4
 30182                           prodl	equ	0xFF3
 30183                           intcon	equ	0xFF2
 30184                           intcon2	equ	0xFF1
 30185                           intcon3	equ	0xFF0
 30186                           indf0	equ	0xFEF
 30187                           postinc0	equ	0xFEE
 30188                           fsr0h	equ	0xFEA
 30189                           fsr0l	equ	0xFE9
 30190                           wreg	equ	0xFE8
 30191                           indf1	equ	0xFE7
 30192                           postdec1	equ	0xFE5
 30193                           plusw1	equ	0xFE3
 30194                           fsr1h	equ	0xFE2
 30195                           fsr1l	equ	0xFE1
 30196                           indf2	equ	0xFDF
 30197                           postinc2	equ	0xFDE
 30198                           postdec2	equ	0xFDD
 30199                           plusw2	equ	0xFDB
 30200                           fsr2h	equ	0xFDA
 30201                           fsr2l	equ	0xFD9
 30202                           status	equ	0xFD8
 30203                           
 30204 ;; *************** function _bootloader_get_rec_dataLength *****************
 30205 ;; Defined at:
 30206 ;;		line 444 in file "bootloader.c"
 30207 ;; Parameters:    Size  Location     Type
 30208 ;;		None
 30209 ;; Auto vars:     Size  Location     Type
 30210 ;;		None
 30211 ;; Return value:  Size  Location     Type
 30212 ;;                  2    0[COMRAM] unsigned int 
 30213 ;; Registers used:
 30214 ;;		None
 30215 ;; Tracked objects:
 30216 ;;		On entry : 0/0
 30217 ;;		On exit  : 0/0
 30218 ;;		Unchanged: 0/0
 30219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30224 ;;Total ram usage:        2 bytes
 30225 ;; Hardware stack levels used:    1
 30226 ;; This function calls:
 30227 ;;		Nothing
 30228 ;; This function is called by:
 30229 ;;		__fill_buffer_get_bootloader_details
 30230 ;; This function uses a non-reentrant model
 30231 ;;
 30232                           
 30233                           	psect	text140
 30234  007DA4                     __ptext140:
 30235                           	opt stack 0
 30236  007DA4                     _bootloader_get_rec_dataLength:
 30237                           	opt stack 28
 30238                           
 30239                           ;bootloader.c: 446: return hex_file_entry.dataLength;
 30240                           
 30241                           ; BSR set to: 1
 30242                           ;incstack = 0
 30243  007DA4  C1C4  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 30244  007DA8  C1C5  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 30245  007DAC  0012               	return		;funcret
 30246  007DAE                     __end_of_bootloader_get_rec_dataLength:
 30247                           	opt stack 0
 30248                           tosu	equ	0xFFF
 30249                           tosh	equ	0xFFE
 30250                           tosl	equ	0xFFD
 30251                           pclath	equ	0xFFA
 30252                           tblptru	equ	0xFF8
 30253                           tblptrh	equ	0xFF7
 30254                           tblptrl	equ	0xFF6
 30255                           tablat	equ	0xFF5
 30256                           prodh	equ	0xFF4
 30257                           prodl	equ	0xFF3
 30258                           intcon	equ	0xFF2
 30259                           intcon2	equ	0xFF1
 30260                           intcon3	equ	0xFF0
 30261                           indf0	equ	0xFEF
 30262                           postinc0	equ	0xFEE
 30263                           fsr0h	equ	0xFEA
 30264                           fsr0l	equ	0xFE9
 30265                           wreg	equ	0xFE8
 30266                           indf1	equ	0xFE7
 30267                           postdec1	equ	0xFE5
 30268                           plusw1	equ	0xFE3
 30269                           fsr1h	equ	0xFE2
 30270                           fsr1l	equ	0xFE1
 30271                           indf2	equ	0xFDF
 30272                           postinc2	equ	0xFDE
 30273                           postdec2	equ	0xFDD
 30274                           plusw2	equ	0xFDB
 30275                           fsr2h	equ	0xFDA
 30276                           fsr2l	equ	0xFD9
 30277                           status	equ	0xFD8
 30278                           
 30279 ;; *************** function _bootloader_get_rec_data *****************
 30280 ;; Defined at:
 30281 ;;		line 460 in file "bootloader.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;  index           1    wreg     unsigned char 
 30284 ;; Auto vars:     Size  Location     Type
 30285 ;;  index           1    0[COMRAM] unsigned char 
 30286 ;; Return value:  Size  Location     Type
 30287 ;;                  1    wreg      unsigned char 
 30288 ;; Registers used:
 30289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30290 ;; Tracked objects:
 30291 ;;		On entry : 0/0
 30292 ;;		On exit  : 0/0
 30293 ;;		Unchanged: 0/0
 30294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30299 ;;Total ram usage:        1 bytes
 30300 ;; Hardware stack levels used:    1
 30301 ;; This function calls:
 30302 ;;		Nothing
 30303 ;; This function is called by:
 30304 ;;		__fill_buffer_get_bootloader_details
 30305 ;; This function uses a non-reentrant model
 30306 ;;
 30307                           
 30308                           	psect	text141
 30309  007C92                     __ptext141:
 30310                           	opt stack 0
 30311  007C92                     _bootloader_get_rec_data:
 30312                           	opt stack 28
 30313                           
 30314                           ;incstack = 0
 30315                           ;bootloader_get_rec_data@index stored from wreg
 30316  007C92  6E01               	movwf	bootloader_get_rec_data@index,c
 30317                           
 30318                           ;bootloader.c: 462: return hex_file_entry.data[index];
 30319  007C94  5001               	movf	bootloader_get_rec_data@index,w,c
 30320  007C96  0D01               	mullw	1
 30321  007C98  0EC9               	movlw	low (_hex_file_entry+5)
 30322  007C9A  24F3               	addwf	prodl,w,c
 30323  007C9C  6ED9               	movwf	fsr2l,c
 30324  007C9E  0E01               	movlw	high (_hex_file_entry+5)
 30325  007CA0  20F4               	addwfc	prodh,w,c
 30326  007CA2  6EDA               	movwf	fsr2h,c
 30327  007CA4  50DF               	movf	indf2,w,c
 30328  007CA6  0012               	return	
 30329  007CA8                     __end_of_bootloader_get_rec_data:
 30330                           	opt stack 0
 30331                           tosu	equ	0xFFF
 30332                           tosh	equ	0xFFE
 30333                           tosl	equ	0xFFD
 30334                           pclath	equ	0xFFA
 30335                           tblptru	equ	0xFF8
 30336                           tblptrh	equ	0xFF7
 30337                           tblptrl	equ	0xFF6
 30338                           tablat	equ	0xFF5
 30339                           prodh	equ	0xFF4
 30340                           prodl	equ	0xFF3
 30341                           intcon	equ	0xFF2
 30342                           intcon2	equ	0xFF1
 30343                           intcon3	equ	0xFF0
 30344                           indf0	equ	0xFEF
 30345                           postinc0	equ	0xFEE
 30346                           fsr0h	equ	0xFEA
 30347                           fsr0l	equ	0xFE9
 30348                           wreg	equ	0xFE8
 30349                           indf1	equ	0xFE7
 30350                           postdec1	equ	0xFE5
 30351                           plusw1	equ	0xFE3
 30352                           fsr1h	equ	0xFE2
 30353                           fsr1l	equ	0xFE1
 30354                           indf2	equ	0xFDF
 30355                           postinc2	equ	0xFDE
 30356                           postdec2	equ	0xFDD
 30357                           plusw2	equ	0xFDB
 30358                           fsr2h	equ	0xFDA
 30359                           fsr2l	equ	0xFD9
 30360                           status	equ	0xFD8
 30361                           
 30362 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 30363 ;; Defined at:
 30364 ;;		line 470 in file "bootloader.c"
 30365 ;; Parameters:    Size  Location     Type
 30366 ;;		None
 30367 ;; Auto vars:     Size  Location     Type
 30368 ;;		None
 30369 ;; Return value:  Size  Location     Type
 30370 ;;                  1    wreg      unsigned char 
 30371 ;; Registers used:
 30372 ;;		wreg, status,2
 30373 ;; Tracked objects:
 30374 ;;		On entry : 0/0
 30375 ;;		On exit  : 0/0
 30376 ;;		Unchanged: 0/0
 30377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30382 ;;Total ram usage:        0 bytes
 30383 ;; Hardware stack levels used:    1
 30384 ;; This function calls:
 30385 ;;		Nothing
 30386 ;; This function is called by:
 30387 ;;		__fill_buffer_get_bootloader_details
 30388 ;; This function uses a non-reentrant model
 30389 ;;
 30390                           
 30391                           	psect	text142
 30392  007E0C                     __ptext142:
 30393                           	opt stack 0
 30394  007E0C                     _bootloader_get_rec_checksumCheck:
 30395                           	opt stack 28
 30396                           
 30397                           ;bootloader.c: 472: return hex_file_entry.checksumCheck;
 30398                           
 30399                           ;incstack = 0
 30400  007E0C  0101               	movlb	1	; () banked
 30401  007E0E  51DA               	movf	(_hex_file_entry+22)& (0+255),w,b
 30402  007E10  0012               	return	
 30403  007E12                     __end_of_bootloader_get_rec_checksumCheck:
 30404                           	opt stack 0
 30405                           tosu	equ	0xFFF
 30406                           tosh	equ	0xFFE
 30407                           tosl	equ	0xFFD
 30408                           pclath	equ	0xFFA
 30409                           tblptru	equ	0xFF8
 30410                           tblptrh	equ	0xFF7
 30411                           tblptrl	equ	0xFF6
 30412                           tablat	equ	0xFF5
 30413                           prodh	equ	0xFF4
 30414                           prodl	equ	0xFF3
 30415                           intcon	equ	0xFF2
 30416                           intcon2	equ	0xFF1
 30417                           intcon3	equ	0xFF0
 30418                           indf0	equ	0xFEF
 30419                           postinc0	equ	0xFEE
 30420                           fsr0h	equ	0xFEA
 30421                           fsr0l	equ	0xFE9
 30422                           wreg	equ	0xFE8
 30423                           indf1	equ	0xFE7
 30424                           postdec1	equ	0xFE5
 30425                           plusw1	equ	0xFE3
 30426                           fsr1h	equ	0xFE2
 30427                           fsr1l	equ	0xFE1
 30428                           indf2	equ	0xFDF
 30429                           postinc2	equ	0xFDE
 30430                           postdec2	equ	0xFDD
 30431                           plusw2	equ	0xFDB
 30432                           fsr2h	equ	0xFDA
 30433                           fsr2l	equ	0xFD9
 30434                           status	equ	0xFD8
 30435                           
 30436 ;; *************** function _bootloader_get_rec_checksum *****************
 30437 ;; Defined at:
 30438 ;;		line 465 in file "bootloader.c"
 30439 ;; Parameters:    Size  Location     Type
 30440 ;;		None
 30441 ;; Auto vars:     Size  Location     Type
 30442 ;;		None
 30443 ;; Return value:  Size  Location     Type
 30444 ;;                  1    wreg      unsigned char 
 30445 ;; Registers used:
 30446 ;;		wreg, status,2
 30447 ;; Tracked objects:
 30448 ;;		On entry : 0/0
 30449 ;;		On exit  : 0/0
 30450 ;;		Unchanged: 0/0
 30451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30456 ;;Total ram usage:        0 bytes
 30457 ;; Hardware stack levels used:    1
 30458 ;; This function calls:
 30459 ;;		Nothing
 30460 ;; This function is called by:
 30461 ;;		__fill_buffer_get_bootloader_details
 30462 ;; This function uses a non-reentrant model
 30463 ;;
 30464                           
 30465                           	psect	text143
 30466  007E12                     __ptext143:
 30467                           	opt stack 0
 30468  007E12                     _bootloader_get_rec_checksum:
 30469                           	opt stack 28
 30470                           
 30471                           ;bootloader.c: 467: return hex_file_entry.checksum;
 30472                           
 30473                           ; BSR set to: 1
 30474                           ;incstack = 0
 30475  007E12  0101               	movlb	1	; () banked
 30476  007E14  51D9               	movf	(_hex_file_entry+21)& (0+255),w,b
 30477  007E16  0012               	return	
 30478  007E18                     __end_of_bootloader_get_rec_checksum:
 30479                           	opt stack 0
 30480                           tosu	equ	0xFFF
 30481                           tosh	equ	0xFFE
 30482                           tosl	equ	0xFFD
 30483                           pclath	equ	0xFFA
 30484                           tblptru	equ	0xFF8
 30485                           tblptrh	equ	0xFF7
 30486                           tblptrl	equ	0xFF6
 30487                           tablat	equ	0xFF5
 30488                           prodh	equ	0xFF4
 30489                           prodl	equ	0xFF3
 30490                           intcon	equ	0xFF2
 30491                           intcon2	equ	0xFF1
 30492                           intcon3	equ	0xFF0
 30493                           indf0	equ	0xFEF
 30494                           postinc0	equ	0xFEE
 30495                           fsr0h	equ	0xFEA
 30496                           fsr0l	equ	0xFE9
 30497                           wreg	equ	0xFE8
 30498                           indf1	equ	0xFE7
 30499                           postdec1	equ	0xFE5
 30500                           plusw1	equ	0xFE3
 30501                           fsr1h	equ	0xFE2
 30502                           fsr1l	equ	0xFE1
 30503                           indf2	equ	0xFDF
 30504                           postinc2	equ	0xFDE
 30505                           postdec2	equ	0xFDD
 30506                           plusw2	equ	0xFDB
 30507                           fsr2h	equ	0xFDA
 30508                           fsr2l	equ	0xFD9
 30509                           status	equ	0xFD8
 30510                           
 30511 ;; *************** function _bootloader_get_rec_address *****************
 30512 ;; Defined at:
 30513 ;;		line 449 in file "bootloader.c"
 30514 ;; Parameters:    Size  Location     Type
 30515 ;;		None
 30516 ;; Auto vars:     Size  Location     Type
 30517 ;;		None
 30518 ;; Return value:  Size  Location     Type
 30519 ;;                  2    0[COMRAM] unsigned int 
 30520 ;; Registers used:
 30521 ;;		None
 30522 ;; Tracked objects:
 30523 ;;		On entry : 0/0
 30524 ;;		On exit  : 0/0
 30525 ;;		Unchanged: 0/0
 30526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30531 ;;Total ram usage:        2 bytes
 30532 ;; Hardware stack levels used:    1
 30533 ;; This function calls:
 30534 ;;		Nothing
 30535 ;; This function is called by:
 30536 ;;		__display_failed
 30537 ;;		__fill_buffer_get_bootloader_details
 30538 ;; This function uses a non-reentrant model
 30539 ;;
 30540                           
 30541                           	psect	text144
 30542  007DAE                     __ptext144:
 30543                           	opt stack 0
 30544  007DAE                     _bootloader_get_rec_address:
 30545                           	opt stack 28
 30546                           
 30547                           ;bootloader.c: 452: return hex_file_entry.address;
 30548                           
 30549                           ; BSR set to: 1
 30550                           ;incstack = 0
 30551  007DAE  C1C6  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30552  007DB2  C1C7  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30553  007DB6  0012               	return		;funcret
 30554  007DB8                     __end_of_bootloader_get_rec_address:
 30555                           	opt stack 0
 30556                           tosu	equ	0xFFF
 30557                           tosh	equ	0xFFE
 30558                           tosl	equ	0xFFD
 30559                           pclath	equ	0xFFA
 30560                           tblptru	equ	0xFF8
 30561                           tblptrh	equ	0xFF7
 30562                           tblptrl	equ	0xFF6
 30563                           tablat	equ	0xFF5
 30564                           prodh	equ	0xFF4
 30565                           prodl	equ	0xFF3
 30566                           intcon	equ	0xFF2
 30567                           intcon2	equ	0xFF1
 30568                           intcon3	equ	0xFF0
 30569                           indf0	equ	0xFEF
 30570                           postinc0	equ	0xFEE
 30571                           fsr0h	equ	0xFEA
 30572                           fsr0l	equ	0xFE9
 30573                           wreg	equ	0xFE8
 30574                           indf1	equ	0xFE7
 30575                           postdec1	equ	0xFE5
 30576                           plusw1	equ	0xFE3
 30577                           fsr1h	equ	0xFE2
 30578                           fsr1l	equ	0xFE1
 30579                           indf2	equ	0xFDF
 30580                           postinc2	equ	0xFDE
 30581                           postdec2	equ	0xFDD
 30582                           plusw2	equ	0xFDB
 30583                           fsr2h	equ	0xFDA
 30584                           fsr2l	equ	0xFD9
 30585                           status	equ	0xFD8
 30586                           
 30587 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30588 ;; Defined at:
 30589 ;;		line 475 in file "bootloader.c"
 30590 ;; Parameters:    Size  Location     Type
 30591 ;;		None
 30592 ;; Auto vars:     Size  Location     Type
 30593 ;;		None
 30594 ;; Return value:  Size  Location     Type
 30595 ;;                  2    0[COMRAM] unsigned int 
 30596 ;; Registers used:
 30597 ;;		None
 30598 ;; Tracked objects:
 30599 ;;		On entry : 0/0
 30600 ;;		On exit  : 0/0
 30601 ;;		Unchanged: 0/0
 30602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30607 ;;Total ram usage:        2 bytes
 30608 ;; Hardware stack levels used:    1
 30609 ;; This function calls:
 30610 ;;		Nothing
 30611 ;; This function is called by:
 30612 ;;		__display_programming
 30613 ;;		__display_done
 30614 ;;		__fill_buffer_get_bootloader_details
 30615 ;; This function uses a non-reentrant model
 30616 ;;
 30617                           
 30618                           	psect	text145
 30619  007DB8                     __ptext145:
 30620                           	opt stack 0
 30621  007DB8                     _bootloader_get_flashPagesWritten:
 30622                           	opt stack 28
 30623                           
 30624                           ;bootloader.c: 477: return flash_pages_written;
 30625                           
 30626                           ;incstack = 0
 30627  007DB8  C166  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30628  007DBC  C167  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30629  007DC0  0012               	return		;funcret
 30630  007DC2                     __end_of_bootloader_get_flashPagesWritten:
 30631                           	opt stack 0
 30632                           tosu	equ	0xFFF
 30633                           tosh	equ	0xFFE
 30634                           tosl	equ	0xFFD
 30635                           pclath	equ	0xFFA
 30636                           tblptru	equ	0xFF8
 30637                           tblptrh	equ	0xFF7
 30638                           tblptrl	equ	0xFF6
 30639                           tablat	equ	0xFF5
 30640                           prodh	equ	0xFF4
 30641                           prodl	equ	0xFF3
 30642                           intcon	equ	0xFF2
 30643                           intcon2	equ	0xFF1
 30644                           intcon3	equ	0xFF0
 30645                           indf0	equ	0xFEF
 30646                           postinc0	equ	0xFEE
 30647                           fsr0h	equ	0xFEA
 30648                           fsr0l	equ	0xFE9
 30649                           wreg	equ	0xFE8
 30650                           indf1	equ	0xFE7
 30651                           postdec1	equ	0xFE5
 30652                           plusw1	equ	0xFE3
 30653                           fsr1h	equ	0xFE2
 30654                           fsr1l	equ	0xFE1
 30655                           indf2	equ	0xFDF
 30656                           postinc2	equ	0xFDE
 30657                           postdec2	equ	0xFDD
 30658                           plusw2	equ	0xFDB
 30659                           fsr2h	equ	0xFDA
 30660                           fsr2l	equ	0xFD9
 30661                           status	equ	0xFD8
 30662                           
 30663 ;; *************** function _bootloader_get_file_size *****************
 30664 ;; Defined at:
 30665 ;;		line 424 in file "bootloader.c"
 30666 ;; Parameters:    Size  Location     Type
 30667 ;;		None
 30668 ;; Auto vars:     Size  Location     Type
 30669 ;;		None
 30670 ;; Return value:  Size  Location     Type
 30671 ;;                  4    0[COMRAM] unsigned long 
 30672 ;; Registers used:
 30673 ;;		None
 30674 ;; Tracked objects:
 30675 ;;		On entry : 0/0
 30676 ;;		On exit  : 0/0
 30677 ;;		Unchanged: 0/0
 30678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30683 ;;Total ram usage:        4 bytes
 30684 ;; Hardware stack levels used:    1
 30685 ;; This function calls:
 30686 ;;		Nothing
 30687 ;; This function is called by:
 30688 ;;		__display_found
 30689 ;;		__fill_buffer_get_bootloader_details
 30690 ;; This function uses a non-reentrant model
 30691 ;;
 30692                           
 30693                           	psect	text146
 30694  007CF8                     __ptext146:
 30695                           	opt stack 0
 30696  007CF8                     _bootloader_get_file_size:
 30697                           	opt stack 28
 30698                           
 30699                           ;bootloader.c: 426: return hex_file_size;
 30700                           
 30701                           ;incstack = 0
 30702  007CF8  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 30703  007CFC  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 30704  007D00  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 30705  007D04  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 30706  007D08  0012               	return		;funcret
 30707  007D0A                     __end_of_bootloader_get_file_size:
 30708                           	opt stack 0
 30709                           tosu	equ	0xFFF
 30710                           tosh	equ	0xFFE
 30711                           tosl	equ	0xFFD
 30712                           pclath	equ	0xFFA
 30713                           tblptru	equ	0xFF8
 30714                           tblptrh	equ	0xFF7
 30715                           tblptrl	equ	0xFF6
 30716                           tablat	equ	0xFF5
 30717                           prodh	equ	0xFF4
 30718                           prodl	equ	0xFF3
 30719                           intcon	equ	0xFF2
 30720                           intcon2	equ	0xFF1
 30721                           intcon3	equ	0xFF0
 30722                           indf0	equ	0xFEF
 30723                           postinc0	equ	0xFEE
 30724                           fsr0h	equ	0xFEA
 30725                           fsr0l	equ	0xFE9
 30726                           wreg	equ	0xFE8
 30727                           indf1	equ	0xFE7
 30728                           postdec1	equ	0xFE5
 30729                           plusw1	equ	0xFE3
 30730                           fsr1h	equ	0xFE2
 30731                           fsr1l	equ	0xFE1
 30732                           indf2	equ	0xFDF
 30733                           postinc2	equ	0xFDE
 30734                           postdec2	equ	0xFDD
 30735                           plusw2	equ	0xFDB
 30736                           fsr2h	equ	0xFDA
 30737                           fsr2l	equ	0xFD9
 30738                           status	equ	0xFD8
 30739                           
 30740 ;; *************** function _bootloader_get_error *****************
 30741 ;; Defined at:
 30742 ;;		line 439 in file "bootloader.c"
 30743 ;; Parameters:    Size  Location     Type
 30744 ;;		None
 30745 ;; Auto vars:     Size  Location     Type
 30746 ;;		None
 30747 ;; Return value:  Size  Location     Type
 30748 ;;                  1    wreg      enum E7006
 30749 ;; Registers used:
 30750 ;;		wreg, status,2
 30751 ;; Tracked objects:
 30752 ;;		On entry : 0/0
 30753 ;;		On exit  : 0/0
 30754 ;;		Unchanged: 0/0
 30755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30760 ;;Total ram usage:        0 bytes
 30761 ;; Hardware stack levels used:    1
 30762 ;; This function calls:
 30763 ;;		Nothing
 30764 ;; This function is called by:
 30765 ;;		__display_failed
 30766 ;;		__fill_buffer_get_bootloader_details
 30767 ;; This function uses a non-reentrant model
 30768 ;;
 30769                           
 30770                           	psect	text147
 30771  007E18                     __ptext147:
 30772                           	opt stack 0
 30773  007E18                     _bootloader_get_error:
 30774                           	opt stack 28
 30775                           
 30776                           ;bootloader.c: 441: return last_error;
 30777                           
 30778                           ;incstack = 0
 30779  007E18  0100               	movlb	0	; () banked
 30780  007E1A  5196               	movf	_last_error& (0+255),w,b
 30781  007E1C  0012               	return	
 30782  007E1E                     __end_of_bootloader_get_error:
 30783                           	opt stack 0
 30784                           tosu	equ	0xFFF
 30785                           tosh	equ	0xFFE
 30786                           tosl	equ	0xFFD
 30787                           pclath	equ	0xFFA
 30788                           tblptru	equ	0xFF8
 30789                           tblptrh	equ	0xFF7
 30790                           tblptrl	equ	0xFF6
 30791                           tablat	equ	0xFF5
 30792                           prodh	equ	0xFF4
 30793                           prodl	equ	0xFF3
 30794                           intcon	equ	0xFF2
 30795                           intcon2	equ	0xFF1
 30796                           intcon3	equ	0xFF0
 30797                           indf0	equ	0xFEF
 30798                           postinc0	equ	0xFEE
 30799                           fsr0h	equ	0xFEA
 30800                           fsr0l	equ	0xFE9
 30801                           wreg	equ	0xFE8
 30802                           indf1	equ	0xFE7
 30803                           postdec1	equ	0xFE5
 30804                           plusw1	equ	0xFE3
 30805                           fsr1h	equ	0xFE2
 30806                           fsr1l	equ	0xFE1
 30807                           indf2	equ	0xFDF
 30808                           postinc2	equ	0xFDE
 30809                           postdec2	equ	0xFDD
 30810                           plusw2	equ	0xFDB
 30811                           fsr2h	equ	0xFDA
 30812                           fsr2l	equ	0xFD9
 30813                           status	equ	0xFD8
 30814                           
 30815 ;; *************** function _bootloader_get_entries *****************
 30816 ;; Defined at:
 30817 ;;		line 429 in file "bootloader.c"
 30818 ;; Parameters:    Size  Location     Type
 30819 ;;		None
 30820 ;; Auto vars:     Size  Location     Type
 30821 ;;		None
 30822 ;; Return value:  Size  Location     Type
 30823 ;;                  2    0[COMRAM] unsigned int 
 30824 ;; Registers used:
 30825 ;;		None
 30826 ;; Tracked objects:
 30827 ;;		On entry : 0/0
 30828 ;;		On exit  : 0/0
 30829 ;;		Unchanged: 0/0
 30830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30835 ;;Total ram usage:        2 bytes
 30836 ;; Hardware stack levels used:    1
 30837 ;; This function calls:
 30838 ;;		Nothing
 30839 ;; This function is called by:
 30840 ;;		__display_verify
 30841 ;;		__display_failed
 30842 ;;		__display_programming
 30843 ;;		__fill_buffer_get_bootloader_details
 30844 ;; This function uses a non-reentrant model
 30845 ;;
 30846                           
 30847                           	psect	text148
 30848  007DC2                     __ptext148:
 30849                           	opt stack 0
 30850  007DC2                     _bootloader_get_entries:
 30851                           	opt stack 28
 30852                           
 30853                           ;bootloader.c: 431: return hex_file_entries;
 30854                           
 30855                           ; BSR set to: 0
 30856                           ;incstack = 0
 30857  007DC2  C16A  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30858  007DC6  C16B  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30859  007DCA  0012               	return		;funcret
 30860  007DCC                     __end_of_bootloader_get_entries:
 30861                           	opt stack 0
 30862                           tosu	equ	0xFFF
 30863                           tosh	equ	0xFFE
 30864                           tosl	equ	0xFFD
 30865                           pclath	equ	0xFFA
 30866                           tblptru	equ	0xFF8
 30867                           tblptrh	equ	0xFF7
 30868                           tblptrl	equ	0xFF6
 30869                           tablat	equ	0xFF5
 30870                           prodh	equ	0xFF4
 30871                           prodl	equ	0xFF3
 30872                           intcon	equ	0xFF2
 30873                           intcon2	equ	0xFF1
 30874                           intcon3	equ	0xFF0
 30875                           indf0	equ	0xFEF
 30876                           postinc0	equ	0xFEE
 30877                           fsr0h	equ	0xFEA
 30878                           fsr0l	equ	0xFE9
 30879                           wreg	equ	0xFE8
 30880                           indf1	equ	0xFE7
 30881                           postdec1	equ	0xFE5
 30882                           plusw1	equ	0xFE3
 30883                           fsr1h	equ	0xFE2
 30884                           fsr1l	equ	0xFE1
 30885                           indf2	equ	0xFDF
 30886                           postinc2	equ	0xFDE
 30887                           postdec2	equ	0xFDD
 30888                           plusw2	equ	0xFDB
 30889                           fsr2h	equ	0xFDA
 30890                           fsr2l	equ	0xFD9
 30891                           status	equ	0xFD8
 30892                           
 30893 ;; *************** function __fill_buffer_find_file *****************
 30894 ;; Defined at:
 30895 ;;		line 347 in file "api.c"
 30896 ;; Parameters:    Size  Location     Type
 30897 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 30898 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 30899 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 30900 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 30901 ;; Auto vars:     Size  Location     Type
 30902 ;;  cntr            1   75[COMRAM] unsigned char 
 30903 ;; Return value:  Size  Location     Type
 30904 ;;                  1    wreg      void 
 30905 ;; Registers used:
 30906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30907 ;; Tracked objects:
 30908 ;;		On entry : 0/0
 30909 ;;		On exit  : 0/0
 30910 ;;		Unchanged: 0/0
 30911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30914 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30915 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30916 ;;Total ram usage:        9 bytes
 30917 ;; Hardware stack levels used:    1
 30918 ;; Hardware stack levels required when called:    6
 30919 ;; This function calls:
 30920 ;;		_fat_find_file
 30921 ;; This function is called by:
 30922 ;;		_api_prepare
 30923 ;; This function uses a non-reentrant model
 30924 ;;
 30925                           
 30926                           	psect	text149
 30927  0059A0                     __ptext149:
 30928                           	opt stack 0
 30929  0059A0                     __fill_buffer_find_file:
 30930                           	opt stack 23
 30931                           
 30932                           ;api.c: 349: uint8_t cntr;;api.c: 352: outBuffer[0] = DATAREQUEST_FIND_FILE;
 30933                           
 30934                           ;incstack = 0
 30935  0059A0  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 30936  0059A4  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 30937  0059A8  0E81               	movlw	129
 30938  0059AA  6EDF               	movwf	indf2,c
 30939                           
 30940                           ;api.c: 355: outBuffer[1] = 0xC125 >> 8;
 30941  0059AC  EE20 F001          	lfsr	2,1
 30942  0059B0  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 30943  0059B2  26D9               	addwf	fsr2l,f,c
 30944  0059B4  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30945  0059B6  22DA               	addwfc	fsr2h,f,c
 30946  0059B8  0EC1               	movlw	193
 30947  0059BA  6EDF               	movwf	indf2,c
 30948                           
 30949                           ;api.c: 356: outBuffer[2] = (uint8_t) 0xC125;
 30950  0059BC  EE20 F002          	lfsr	2,2
 30951  0059C0  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 30952  0059C2  26D9               	addwf	fsr2l,f,c
 30953  0059C4  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30954  0059C6  22DA               	addwfc	fsr2h,f,c
 30955  0059C8  0E25               	movlw	37
 30956  0059CA  6EDF               	movwf	indf2,c
 30957                           
 30958                           ;api.c: 359: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 30959  0059CC  0E01               	movlw	1
 30960  0059CE  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30961  0059D0  6E30               	movwf	fat_find_file@name,c
 30962  0059D2  0E00               	movlw	0
 30963  0059D4  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30964  0059D6  6E31               	movwf	fat_find_file@name+1,c
 30965  0059D8  0E09               	movlw	9
 30966  0059DA  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30967  0059DC  6E32               	movwf	fat_find_file@extension,c
 30968  0059DE  0E00               	movlw	0
 30969  0059E0  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30970  0059E2  6E33               	movwf	fat_find_file@extension+1,c
 30971  0059E4  EC63  F029         	call	_fat_find_file	;wreg free
 30972  0059E8  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 30973  0059EA  EE20 F003          	lfsr	2,3
 30974  0059EE  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 30975  0059F0  26D9               	addwf	fsr2l,f,c
 30976  0059F2  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30977  0059F4  22DA               	addwfc	fsr2h,f,c
 30978  0059F6  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 30979                           
 30980                           ;api.c: 362: for(cntr=0; cntr<11; ++cntr)
 30981  0059FA  0E00               	movlw	0
 30982  0059FC  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 30983  0059FE                     l12910:
 30984  0059FE  0E0A               	movlw	10
 30985  005A00  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 30986  005A02  D001               	goto	l2571
 30987  005A04  0012               	return	
 30988  005A06                     l2571:
 30989                           
 30990                           ;api.c: 363: {;api.c: 364: outBuffer[cntr+12] = inBuffer[cntr+1];
 30991  005A06  504C               	movf	__fill_buffer_find_file@cntr,w,c
 30992  005A08  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 30993  005A0A  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 30994  005A0C  0E01               	movlw	1
 30995  005A0E  2648               	addwf	??__fill_buffer_find_file,f,c
 30996  005A10  0E00               	movlw	0
 30997  005A12  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 30998  005A14  5048               	movf	??__fill_buffer_find_file,w,c
 30999  005A16  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 31000  005A18  6ED9               	movwf	fsr2l,c
 31001  005A1A  5049               	movf	??__fill_buffer_find_file+1,w,c
 31002  005A1C  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 31003  005A1E  6EDA               	movwf	fsr2h,c
 31004  005A20  504C               	movf	__fill_buffer_find_file@cntr,w,c
 31005  005A22  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 31006  005A24  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 31007  005A26  0E0C               	movlw	12
 31008  005A28  264A               	addwf	??__fill_buffer_find_file+2,f,c
 31009  005A2A  0E00               	movlw	0
 31010  005A2C  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 31011  005A2E  504A               	movf	??__fill_buffer_find_file+2,w,c
 31012  005A30  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 31013  005A32  6EE1               	movwf	fsr1l,c
 31014  005A34  504B               	movf	??__fill_buffer_find_file+3,w,c
 31015  005A36  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 31016  005A38  6EE2               	movwf	fsr1h,c
 31017  005A3A  CFDF FFE7          	movff	indf2,indf1
 31018  005A3E  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 31019  005A40  D7DE               	goto	l12910
 31020  005A42                     __end_of__fill_buffer_find_file:
 31021                           	opt stack 0
 31022                           tosu	equ	0xFFF
 31023                           tosh	equ	0xFFE
 31024                           tosl	equ	0xFFD
 31025                           pclath	equ	0xFFA
 31026                           tblptru	equ	0xFF8
 31027                           tblptrh	equ	0xFF7
 31028                           tblptrl	equ	0xFF6
 31029                           tablat	equ	0xFF5
 31030                           prodh	equ	0xFF4
 31031                           prodl	equ	0xFF3
 31032                           intcon	equ	0xFF2
 31033                           intcon2	equ	0xFF1
 31034                           intcon3	equ	0xFF0
 31035                           indf0	equ	0xFEF
 31036                           postinc0	equ	0xFEE
 31037                           fsr0h	equ	0xFEA
 31038                           fsr0l	equ	0xFE9
 31039                           wreg	equ	0xFE8
 31040                           indf1	equ	0xFE7
 31041                           postdec1	equ	0xFE5
 31042                           plusw1	equ	0xFE3
 31043                           fsr1h	equ	0xFE2
 31044                           fsr1l	equ	0xFE1
 31045                           indf2	equ	0xFDF
 31046                           postinc2	equ	0xFDE
 31047                           postdec2	equ	0xFDD
 31048                           plusw2	equ	0xFDB
 31049                           fsr2h	equ	0xFDA
 31050                           fsr2l	equ	0xFD9
 31051                           status	equ	0xFD8
 31052                           
 31053 ;; *************** function _api_parse *****************
 31054 ;; Defined at:
 31055 ;;		line 124 in file "api.c"
 31056 ;; Parameters:    Size  Location     Type
 31057 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 31058 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 31059 ;;  receivedData    1   53[BANK0 ] unsigned char 
 31060 ;; Auto vars:     Size  Location     Type
 31061 ;;  idx             1   87[COMRAM] unsigned char 
 31062 ;; Return value:  Size  Location     Type
 31063 ;;                  1    wreg      void 
 31064 ;; Registers used:
 31065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31066 ;; Tracked objects:
 31067 ;;		On entry : 0/0
 31068 ;;		On exit  : 0/0
 31069 ;;		Unchanged: 0/0
 31070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31071 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31074 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31075 ;;Total ram usage:        6 bytes
 31076 ;; Hardware stack levels used:    1
 31077 ;; Hardware stack levels required when called:   10
 31078 ;; This function calls:
 31079 ;;		__parse_command_long
 31080 ;;		__parse_command_short
 31081 ;; This function is called by:
 31082 ;;		_main
 31083 ;;		_APP_DeviceCustomHIDTasks
 31084 ;; This function uses a non-reentrant model
 31085 ;;
 31086                           
 31087                           	psect	text150
 31088  004C86                     __ptext150:
 31089                           	opt stack 0
 31090  004C86                     _api_parse:
 31091                           	opt stack 20
 31092                           
 31093                           ;api.c: 128: uint8_t idx;;api.c: 130: if(inBuffer[0]>0x7F)
 31094                           
 31095                           ;incstack = 0
 31096  004C86  C0E8  FFD9         	movff	api_parse@inBuffer,fsr2l
 31097  004C8A  C0E9  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 31098  004C8E  0E7F               	movlw	127
 31099  004C90  64DF               	cpfsgt	indf2,c
 31100  004C92  D001               	goto	l2529
 31101  004C94  0012               	return	
 31102  004C96                     l2529:
 31103                           
 31104                           ;api.c: 135: };api.c: 137: idx = 1;
 31105  004C96  0E01               	movlw	1
 31106  004C98  6E58               	movwf	api_parse@idx,c
 31107                           
 31108                           ;api.c: 138: while(idx<receivedDataLength)
 31109  004C9A  D058               	goto	l2536
 31110  004C9C                     
 31111                           ;api.c: 139: {;api.c: 141: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 31112  004C9C  5058               	movf	api_parse@idx,w,c
 31113  004C9E  0D01               	mullw	1
 31114  004CA0  50F3               	movf	prodl,w,c
 31115  004CA2  0100               	movlb	0	; () banked
 31116  004CA4  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31117  004CA6  6ED9               	movwf	fsr2l,c
 31118  004CA8  50F4               	movf	prodh,w,c
 31119  004CAA  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31120  004CAC  6EDA               	movwf	fsr2h,c
 31121  004CAE  0E99               	movlw	153
 31122  004CB0  18DE               	xorwf	postinc2,w,c
 31123  004CB2  B4D8               	btfsc	status,2,c
 31124  004CB4  0012               	return	
 31125  004CB6  D02E               	goto	l2534
 31126  004CB8                     
 31127                           ; BSR set to: 0
 31128                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 31129                           
 31130                           ; BSR set to: 0
 31131  004CB8  5058               	movf	api_parse@idx,w,c
 31132  004CBA  0D01               	mullw	1
 31133  004CBC  50F3               	movf	prodl,w,c
 31134  004CBE  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31135  004CC0  6ED9               	movwf	fsr2l,c
 31136  004CC2  50F4               	movf	prodh,w,c
 31137  004CC4  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31138  004CC6  6EDA               	movwf	fsr2h,c
 31139  004CC8  50DF               	movf	indf2,w,c
 31140  004CCA  EC0F  F02E         	call	__parse_command_short
 31141  004CCE  D00C               	goto	l13438
 31142  004CD0                     
 31143                           ;api.c: 154: _parse_command_short(inBuffer[idx]);
 31144  004CD0  5058               	movf	api_parse@idx,w,c
 31145  004CD2  0D01               	mullw	1
 31146  004CD4  50F3               	movf	prodl,w,c
 31147  004CD6  0100               	movlb	0	; () banked
 31148  004CD8  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31149  004CDA  6ED9               	movwf	fsr2l,c
 31150  004CDC  50F4               	movf	prodh,w,c
 31151  004CDE  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31152  004CE0  6EDA               	movwf	fsr2h,c
 31153  004CE2  50DF               	movf	indf2,w,c
 31154  004CE4  EC0F  F02E         	call	__parse_command_short
 31155  004CE8                     l13438:
 31156                           
 31157                           ;api.c: 155: ++idx;
 31158  004CE8  2A58               	incf	api_parse@idx,f,c
 31159                           
 31160                           ;api.c: 156: break;
 31161  004CEA  D030               	goto	l2536
 31162  004CEC                     
 31163                           ;api.c: 159: idx += _parse_command_long(inBuffer[idx]);
 31164  004CEC  5058               	movf	api_parse@idx,w,c
 31165  004CEE  0D01               	mullw	1
 31166  004CF0  50F3               	movf	prodl,w,c
 31167  004CF2  0100               	movlb	0	; () banked
 31168  004CF4  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31169  004CF6  6ED9               	movwf	fsr2l,c
 31170  004CF8  50F4               	movf	prodh,w,c
 31171  004CFA  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31172  004CFC  6EDA               	movwf	fsr2h,c
 31173  004CFE  50DF               	movf	indf2,w,c
 31174  004D00  6E56               	movwf	??_api_parse& (0+255),c
 31175  004D02  6A57               	clrf	(??_api_parse+1)& (0+255),c
 31176  004D04  C056  F053         	movff	??_api_parse,__parse_command_long@data
 31177  004D08  C057  F054         	movff	??_api_parse+1,__parse_command_long@data+1
 31178  004D0C  ECD4  F02F         	call	__parse_command_long	;wreg free
 31179  004D10  2658               	addwf	api_parse@idx,f,c
 31180                           
 31181                           ;api.c: 160: break;
 31182  004D12  D01C               	goto	l2536
 31183  004D14                     l2534:
 31184  004D14  5058               	movf	api_parse@idx,w,c
 31185  004D16  0D01               	mullw	1
 31186  004D18  50F3               	movf	prodl,w,c
 31187  004D1A  0100               	movlb	0	; () banked
 31188  004D1C  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31189  004D1E  6ED9               	movwf	fsr2l,c
 31190  004D20  50F4               	movf	prodh,w,c
 31191  004D22  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31192  004D24  6EDA               	movwf	fsr2h,c
 31193  004D26  50DF               	movf	indf2,w,c
 31194  004D28  0BF0               	andlw	240
 31195  004D2A  6E56               	movwf	??_api_parse& (0+255),c
 31196  004D2C  6A57               	clrf	(??_api_parse+1)& (0+255),c
 31197                           
 31198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31199                           ; Switch size 1, requested type "space"
 31200                           ; Number of cases is 1, Range of values is 0 to 0
 31201                           ; switch strategies available:
 31202                           ; Name         Instructions Cycles
 31203                           ; simple_byte            4     3 (average)
 31204                           ;	Chosen strategy is simple_byte
 31205  004D2E  5057               	movf	??_api_parse+1,w,c
 31206  004D30  0A00               	xorlw	0	; case 0
 31207  004D32  A4D8               	btfss	status,2,c
 31208  004D34  0012               	return	
 31209                           
 31210                           ; BSR set to: 0
 31211                           ; Switch size 1, requested type "space"
 31212                           ; Number of cases is 3, Range of values is 32 to 80
 31213                           ; switch strategies available:
 31214                           ; Name         Instructions Cycles
 31215                           ; simple_byte           10     6 (average)
 31216                           ;	Chosen strategy is simple_byte
 31217  004D36  5056               	movf	??_api_parse,w,c
 31218  004D38  0A20               	xorlw	32	; case 32
 31219  004D3A  B4D8               	btfsc	status,2,c
 31220  004D3C  D7BD               	goto	l2535
 31221  004D3E  0A10               	xorlw	16	; case 48
 31222  004D40  B4D8               	btfsc	status,2,c
 31223  004D42  D7C6               	goto	l2537
 31224  004D44  0A60               	xorlw	96	; case 80
 31225  004D46  A4D8               	btfss	status,2,c
 31226  004D48  0012               	return	
 31227  004D4A  D7D0               	goto	l2538
 31228  004D4C                     l2536:
 31229                           
 31230                           ; BSR set to: 0
 31231                           
 31232                           ; BSR set to: 0
 31233  004D4C  0100               	movlb	0	; () banked
 31234  004D4E  51EA               	movf	api_parse@receivedDataLength& (0+255),w,b
 31235  004D50  5C58               	subwf	api_parse@idx,w,c
 31236  004D52  B0D8               	btfsc	status,0,c
 31237  004D54  0012               	return	
 31238  004D56  D7A2               	goto	l2532
 31239  004D58                     __end_of_api_parse:
 31240                           	opt stack 0
 31241                           tosu	equ	0xFFF
 31242                           tosh	equ	0xFFE
 31243                           tosl	equ	0xFFD
 31244                           pclath	equ	0xFFA
 31245                           tblptru	equ	0xFF8
 31246                           tblptrh	equ	0xFF7
 31247                           tblptrl	equ	0xFF6
 31248                           tablat	equ	0xFF5
 31249                           prodh	equ	0xFF4
 31250                           prodl	equ	0xFF3
 31251                           intcon	equ	0xFF2
 31252                           intcon2	equ	0xFF1
 31253                           intcon3	equ	0xFF0
 31254                           indf0	equ	0xFEF
 31255                           postinc0	equ	0xFEE
 31256                           fsr0h	equ	0xFEA
 31257                           fsr0l	equ	0xFE9
 31258                           wreg	equ	0xFE8
 31259                           indf1	equ	0xFE7
 31260                           postdec1	equ	0xFE5
 31261                           plusw1	equ	0xFE3
 31262                           fsr1h	equ	0xFE2
 31263                           fsr1l	equ	0xFE1
 31264                           indf2	equ	0xFDF
 31265                           postinc2	equ	0xFDE
 31266                           postdec2	equ	0xFDD
 31267                           plusw2	equ	0xFDB
 31268                           fsr2h	equ	0xFDA
 31269                           fsr2l	equ	0xFD9
 31270                           status	equ	0xFD8
 31271                           
 31272 ;; *************** function __parse_command_short *****************
 31273 ;; Defined at:
 31274 ;;		line 416 in file "api.c"
 31275 ;; Parameters:    Size  Location     Type
 31276 ;;  cmd             1    wreg     unsigned char 
 31277 ;; Auto vars:     Size  Location     Type
 31278 ;;  cmd             1   19[COMRAM] unsigned char 
 31279 ;; Return value:  Size  Location     Type
 31280 ;;                  1    wreg      void 
 31281 ;; Registers used:
 31282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31283 ;; Tracked objects:
 31284 ;;		On entry : 0/0
 31285 ;;		On exit  : 0/0
 31286 ;;		Unchanged: 0/0
 31287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31292 ;;Total ram usage:        1 bytes
 31293 ;; Hardware stack levels used:    1
 31294 ;; Hardware stack levels required when called:    3
 31295 ;; This function calls:
 31296 ;;		_i2c_eeprom_writeByte
 31297 ;;		_jump_to_main_program
 31298 ;;		_reboot
 31299 ;;		_system_delay_ms
 31300 ;; This function is called by:
 31301 ;;		_api_parse
 31302 ;; This function uses a non-reentrant model
 31303 ;;
 31304                           
 31305                           	psect	text151
 31306  005C1E                     __ptext151:
 31307                           	opt stack 0
 31308  005C1E                     __parse_command_short:
 31309                           	opt stack 26
 31310                           
 31311                           ;incstack = 0
 31312                           ;__parse_command_short@cmd stored from wreg
 31313  005C1E  6E14               	movwf	__parse_command_short@cmd,c
 31314                           
 31315                           ;api.c: 418: switch(cmd)
 31316  005C20  D036               	goto	l2580
 31317  005C22                     
 31318                           ;api.c: 421: i2c_eeprom_writeByte(0x100, 0x00);
 31319  005C22  0E01               	movlw	1
 31320  005C24  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31321  005C26  0E00               	movlw	0
 31322  005C28  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31323  005C2A  0E00               	movlw	0
 31324  005C2C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31325  005C2E  EC96  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 31326                           
 31327                           ;api.c: 422: system_delay_ms(10);
 31328  005C32  0E0A               	movlw	10
 31329  005C34  EC80  F03D         	call	_system_delay_ms
 31330                           
 31331                           ;api.c: 423: reboot();
 31332  005C38  EC17  F03F         	call	_reboot	;wreg free
 31333                           
 31334                           ;api.c: 424: break;
 31335  005C3C  0012               	return	
 31336  005C3E                     
 31337                           ;api.c: 427: i2c_eeprom_writeByte(0x100, 0x94);
 31338  005C3E  0E01               	movlw	1
 31339  005C40  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31340  005C42  0E00               	movlw	0
 31341  005C44  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31342  005C46  0E94               	movlw	148
 31343  005C48  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31344  005C4A  EC96  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 31345                           
 31346                           ;api.c: 428: system_delay_ms(10);
 31347  005C4E  0E0A               	movlw	10
 31348  005C50  EC80  F03D         	call	_system_delay_ms
 31349                           
 31350                           ;api.c: 429: reboot();
 31351  005C54  EC17  F03F         	call	_reboot	;wreg free
 31352                           
 31353                           ;api.c: 430: break;
 31354  005C58  0012               	return	
 31355  005C5A                     
 31356                           ;api.c: 433: i2c_eeprom_writeByte(0x100, 0x78);
 31357  005C5A  0E01               	movlw	1
 31358  005C5C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31359  005C5E  0E00               	movlw	0
 31360  005C60  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31361  005C62  0E78               	movlw	120
 31362  005C64  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31363  005C66  EC96  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 31364                           
 31365                           ;api.c: 434: system_delay_ms(10);
 31366  005C6A  0E0A               	movlw	10
 31367  005C6C  EC80  F03D         	call	_system_delay_ms
 31368                           
 31369                           ;api.c: 435: reboot();
 31370  005C70  EC17  F03F         	call	_reboot	;wreg free
 31371                           
 31372                           ;api.c: 436: break;
 31373  005C74  0012               	return	
 31374  005C76                     
 31375                           ;api.c: 439: jump_to_main_program();
 31376  005C76  EC12  F03B         	call	_jump_to_main_program	;wreg free
 31377                           
 31378                           ;api.c: 440: break;
 31379  005C7A  0012               	return	
 31380  005C7C                     
 31381                           ;api.c: 443: --os.encoderCount;
 31382  005C7C  0100               	movlb	0	; () banked
 31383  005C7E  0760               	decf	_os& (0+255),f,b	;volatile
 31384                           
 31385                           ;api.c: 444: break;
 31386  005C80  0012               	return	
 31387  005C82                     
 31388                           ;api.c: 447: ++os.encoderCount;
 31389                           
 31390                           ; BSR set to: 0
 31391  005C82  0100               	movlb	0	; () banked
 31392  005C84  2B60               	incf	_os& (0+255),f,b	;volatile
 31393                           
 31394                           ;api.c: 448: break;
 31395  005C86  0012               	return	
 31396  005C88                     
 31397                           ;api.c: 451: ++os.buttonCount;
 31398                           
 31399                           ; BSR set to: 0
 31400  005C88  0100               	movlb	0	; () banked
 31401  005C8A  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 31402                           
 31403                           ; BSR set to: 0
 31404                           ;api.c: 453: }
 31405                           
 31406                           ;api.c: 452: break;
 31407  005C8C  0012               	return	
 31408  005C8E                     l2580:
 31409                           
 31410                           ; BSR set to: 0
 31411  005C8E  5014               	movf	__parse_command_short@cmd,w,c
 31412                           
 31413                           ; Switch size 1, requested type "space"
 31414                           ; Number of cases is 7, Range of values is 32 to 62
 31415                           ; switch strategies available:
 31416                           ; Name         Instructions Cycles
 31417                           ; simple_byte           22    12 (average)
 31418                           ;	Chosen strategy is simple_byte
 31419  005C90  0A20               	xorlw	32	; case 32
 31420  005C92  B4D8               	btfsc	status,2,c
 31421  005C94  D7C6               	goto	l2581
 31422  005C96  0A01               	xorlw	1	; case 33
 31423  005C98  B4D8               	btfsc	status,2,c
 31424  005C9A  D7D1               	goto	l2583
 31425  005C9C  0A03               	xorlw	3	; case 34
 31426  005C9E  B4D8               	btfsc	status,2,c
 31427  005CA0  D7DC               	goto	l2584
 31428  005CA2  0A01               	xorlw	1	; case 35
 31429  005CA4  B4D8               	btfsc	status,2,c
 31430  005CA6  D7E7               	goto	l2585
 31431  005CA8  0A1F               	xorlw	31	; case 60
 31432  005CAA  B4D8               	btfsc	status,2,c
 31433  005CAC  D7E7               	goto	l2586
 31434  005CAE  0A01               	xorlw	1	; case 61
 31435  005CB0  B4D8               	btfsc	status,2,c
 31436  005CB2  D7E7               	goto	l2587
 31437  005CB4  0A03               	xorlw	3	; case 62
 31438  005CB6  A4D8               	btfss	status,2,c
 31439  005CB8  0012               	return	
 31440  005CBA  D7E6               	goto	l2588
 31441  005CBC                     __end_of__parse_command_short:
 31442                           	opt stack 0
 31443                           tosu	equ	0xFFF
 31444                           tosh	equ	0xFFE
 31445                           tosl	equ	0xFFD
 31446                           pclath	equ	0xFFA
 31447                           tblptru	equ	0xFF8
 31448                           tblptrh	equ	0xFF7
 31449                           tblptrl	equ	0xFF6
 31450                           tablat	equ	0xFF5
 31451                           prodh	equ	0xFF4
 31452                           prodl	equ	0xFF3
 31453                           intcon	equ	0xFF2
 31454                           intcon2	equ	0xFF1
 31455                           intcon3	equ	0xFF0
 31456                           indf0	equ	0xFEF
 31457                           postinc0	equ	0xFEE
 31458                           fsr0h	equ	0xFEA
 31459                           fsr0l	equ	0xFE9
 31460                           wreg	equ	0xFE8
 31461                           indf1	equ	0xFE7
 31462                           postdec1	equ	0xFE5
 31463                           plusw1	equ	0xFE3
 31464                           fsr1h	equ	0xFE2
 31465                           fsr1l	equ	0xFE1
 31466                           indf2	equ	0xFDF
 31467                           postinc2	equ	0xFDE
 31468                           postdec2	equ	0xFDD
 31469                           plusw2	equ	0xFDB
 31470                           fsr2h	equ	0xFDA
 31471                           fsr2l	equ	0xFD9
 31472                           status	equ	0xFD8
 31473                           
 31474 ;; *************** function _system_delay_ms *****************
 31475 ;; Defined at:
 31476 ;;		line 62 in file "os.c"
 31477 ;; Parameters:    Size  Location     Type
 31478 ;;  ms              1    wreg     unsigned char 
 31479 ;; Auto vars:     Size  Location     Type
 31480 ;;  ms              1    1[COMRAM] unsigned char 
 31481 ;;  cntr            1    2[COMRAM] unsigned char 
 31482 ;; Return value:  Size  Location     Type
 31483 ;;                  1    wreg      void 
 31484 ;; Registers used:
 31485 ;;		wreg, status,2, status,0, cstack
 31486 ;; Tracked objects:
 31487 ;;		On entry : 0/0
 31488 ;;		On exit  : 0/0
 31489 ;;		Unchanged: 0/0
 31490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31494 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31495 ;;Total ram usage:        3 bytes
 31496 ;; Hardware stack levels used:    1
 31497 ;; This function calls:
 31498 ;;		Nothing
 31499 ;; This function is called by:
 31500 ;;		__parse_command_short
 31501 ;; This function uses a non-reentrant model
 31502 ;;
 31503                           
 31504                           	psect	text152
 31505  007B00                     __ptext152:
 31506                           	opt stack 0
 31507  007B00                     _system_delay_ms:
 31508                           	opt stack 28
 31509                           
 31510                           ;incstack = 0
 31511                           ;system_delay_ms@ms stored from wreg
 31512  007B00  6E02               	movwf	system_delay_ms@ms,c
 31513                           
 31514                           ;os.c: 64: uint8_t cntr;;os.c: 65: for(cntr=0; cntr<ms; ++cntr)
 31515  007B02  0E00               	movlw	0
 31516  007B04  6E03               	movwf	system_delay_ms@cntr,c
 31517  007B06  D009               	goto	l1094
 31518  007B08                     
 31519                           ;os.c: 66: {;os.c: 67: _delay((unsigned long)((6)*(8000000/4000.0)));
 31520  007B08  0E10               	movlw	16
 31521  007B0A  6E01               	movwf	??_system_delay_ms& (0+255),c
 31522  007B0C  0E94               	movlw	148
 31523  007B0E                     u11897:
 31524  007B0E  2EE8               	decfsz	wreg,f,c
 31525  007B10  D7FE               	bra	u11897
 31526  007B12  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 31527  007B14  D7FC               	bra	u11897
 31528  007B16  D000               	nop2	
 31529  007B18  2A03               	incf	system_delay_ms@cntr,f,c
 31530  007B1A                     l1094:
 31531  007B1A  5002               	movf	system_delay_ms@ms,w,c
 31532  007B1C  5C03               	subwf	system_delay_ms@cntr,w,c
 31533  007B1E  B0D8               	btfsc	status,0,c
 31534  007B20  0012               	return	
 31535  007B22  D7F2               	goto	l1095
 31536  007B24                     __end_of_system_delay_ms:
 31537                           	opt stack 0
 31538                           tosu	equ	0xFFF
 31539                           tosh	equ	0xFFE
 31540                           tosl	equ	0xFFD
 31541                           pclath	equ	0xFFA
 31542                           tblptru	equ	0xFF8
 31543                           tblptrh	equ	0xFF7
 31544                           tblptrl	equ	0xFF6
 31545                           tablat	equ	0xFF5
 31546                           prodh	equ	0xFF4
 31547                           prodl	equ	0xFF3
 31548                           intcon	equ	0xFF2
 31549                           intcon2	equ	0xFF1
 31550                           intcon3	equ	0xFF0
 31551                           indf0	equ	0xFEF
 31552                           postinc0	equ	0xFEE
 31553                           fsr0h	equ	0xFEA
 31554                           fsr0l	equ	0xFE9
 31555                           wreg	equ	0xFE8
 31556                           indf1	equ	0xFE7
 31557                           postdec1	equ	0xFE5
 31558                           plusw1	equ	0xFE3
 31559                           fsr1h	equ	0xFE2
 31560                           fsr1l	equ	0xFE1
 31561                           indf2	equ	0xFDF
 31562                           postinc2	equ	0xFDE
 31563                           postdec2	equ	0xFDD
 31564                           plusw2	equ	0xFDB
 31565                           fsr2h	equ	0xFDA
 31566                           fsr2l	equ	0xFD9
 31567                           status	equ	0xFD8
 31568                           
 31569 ;; *************** function _reboot *****************
 31570 ;; Defined at:
 31571 ;;		line 247 in file "os.c"
 31572 ;; Parameters:    Size  Location     Type
 31573 ;;		None
 31574 ;; Auto vars:     Size  Location     Type
 31575 ;;		None
 31576 ;; Return value:  Size  Location     Type
 31577 ;;                  1    wreg      void 
 31578 ;; Registers used:
 31579 ;;		None
 31580 ;; Tracked objects:
 31581 ;;		On entry : 0/0
 31582 ;;		On exit  : 0/0
 31583 ;;		Unchanged: 0/0
 31584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31589 ;;Total ram usage:        0 bytes
 31590 ;; Hardware stack levels used:    1
 31591 ;; This function calls:
 31592 ;;		Nothing
 31593 ;; This function is called by:
 31594 ;;		__parse_command_short
 31595 ;; This function uses a non-reentrant model
 31596 ;;
 31597                           
 31598                           	psect	text153
 31599  007E2E                     __ptext153:
 31600                           	opt stack 0
 31601  007E2E                     _reboot:
 31602                           	opt stack 28
 31603                           
 31604                           ;incstack = 0
 31605                           ;os.c: 271: while(1);
 31606  007E2E  D7FF               	goto	_reboot
 31607  007E30                     __end_of_reboot:
 31608                           	opt stack 0
 31609                           tosu	equ	0xFFF
 31610                           tosh	equ	0xFFE
 31611                           tosl	equ	0xFFD
 31612                           pclath	equ	0xFFA
 31613                           tblptru	equ	0xFF8
 31614                           tblptrh	equ	0xFF7
 31615                           tblptrl	equ	0xFF6
 31616                           tablat	equ	0xFF5
 31617                           prodh	equ	0xFF4
 31618                           prodl	equ	0xFF3
 31619                           intcon	equ	0xFF2
 31620                           intcon2	equ	0xFF1
 31621                           intcon3	equ	0xFF0
 31622                           indf0	equ	0xFEF
 31623                           postinc0	equ	0xFEE
 31624                           fsr0h	equ	0xFEA
 31625                           fsr0l	equ	0xFE9
 31626                           wreg	equ	0xFE8
 31627                           indf1	equ	0xFE7
 31628                           postdec1	equ	0xFE5
 31629                           plusw1	equ	0xFE3
 31630                           fsr1h	equ	0xFE2
 31631                           fsr1l	equ	0xFE1
 31632                           indf2	equ	0xFDF
 31633                           postinc2	equ	0xFDE
 31634                           postdec2	equ	0xFDD
 31635                           plusw2	equ	0xFDB
 31636                           fsr2h	equ	0xFDA
 31637                           fsr2l	equ	0xFD9
 31638                           status	equ	0xFD8
 31639                           
 31640 ;; *************** function _jump_to_main_program *****************
 31641 ;; Defined at:
 31642 ;;		line 226 in file "os.c"
 31643 ;; Parameters:    Size  Location     Type
 31644 ;;		None
 31645 ;; Auto vars:     Size  Location     Type
 31646 ;;		None
 31647 ;; Return value:  Size  Location     Type
 31648 ;;                  1    wreg      void 
 31649 ;; Registers used:
 31650 ;;		wreg, status,2
 31651 ;; Tracked objects:
 31652 ;;		On entry : 0/0
 31653 ;;		On exit  : 0/0
 31654 ;;		Unchanged: 0/0
 31655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31660 ;;Total ram usage:        0 bytes
 31661 ;; Hardware stack levels used:    1
 31662 ;; This function calls:
 31663 ;;		Nothing
 31664 ;; This function is called by:
 31665 ;;		_main
 31666 ;;		__ui_encoder
 31667 ;;		__parse_command_short
 31668 ;; This function uses a non-reentrant model
 31669 ;;
 31670                           
 31671                           	psect	text154
 31672  007624                     __ptext154:
 31673                           	opt stack 0
 31674  007624                     _jump_to_main_program:
 31675                           	opt stack 28
 31676                           
 31677                           ;os.c: 229: DMACON1bits.DMAEN = 0;
 31678                           
 31679                           ;incstack = 0
 31680  007624  9088               	bcf	3976,0,c	;volatile
 31681                           
 31682                           ;os.c: 230: SSP2CON1bits.SSPEN = 0;
 31683  007626  9A72               	bcf	3954,5,c	;volatile
 31684                           
 31685                           ;os.c: 231: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 31686  007628  0E55               	movlw	85
 31687  00762A  6EA7               	movwf	4007,c	;volsfr
 31688  00762C  0EAA               	movlw	170
 31689  00762E  6EA7               	movwf	4007,c	;volsfr
 31690  007630  010E               	movlb	14	; () banked
 31691  007632  91BF               	bcf	191,0,b	;volatile
 31692                           
 31693                           ;os.c: 232: RPOR23 = 0b00000;
 31694  007634  0E00               	movlw	0
 31695  007636  6FD7               	movwf	215,b	;volatile
 31696                           
 31697                           ;os.c: 233: RPINR21 = 0b11111;
 31698  007638  0E1F               	movlw	31
 31699  00763A  6FFC               	movwf	252,b	;volatile
 31700                           
 31701                           ;os.c: 234: RPINR23 = 0b11111;
 31702  00763C  0E1F               	movlw	31
 31703  00763E  6FFE               	movwf	254,b	;volatile
 31704                           
 31705                           ;os.c: 235: RPINR21 = 0b11111;
 31706  007640  0E1F               	movlw	31
 31707  007642  6FFC               	movwf	252,b	;volatile
 31708                           
 31709                           ;os.c: 236: RPOR21 = 0b00000;
 31710  007644  0E00               	movlw	0
 31711  007646  6FD5               	movwf	213,b	;volatile
 31712                           
 31713                           ;os.c: 237: RPOR22 = 0b00000;
 31714  007648  0E00               	movlw	0
 31715  00764A  6FD6               	movwf	214,b	;volatile
 31716                           
 31717                           ;os.c: 238: RPINR22 = 0b11111;
 31718  00764C  0E1F               	movlw	31
 31719  00764E  6FFD               	movwf	253,b	;volatile
 31720                           
 31721                           ;os.c: 239: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 31722  007650  0E55               	movlw	85
 31723  007652  6EA7               	movwf	4007,c	;volsfr
 31724  007654  0EAA               	movlw	170
 31725  007656  6EA7               	movwf	4007,c	;volsfr
 31726                           
 31727                           ; BSR set to: 14
 31728  007658  81BF               	bsf	191,0,b	;volatile
 31729  00765A  EF00 F048          	goto	36864	; ;# 
 31730  00765E  0012               	return		;funcret
 31731  007660                     __end_of_jump_to_main_program:
 31732                           	opt stack 0
 31733                           tosu	equ	0xFFF
 31734                           tosh	equ	0xFFE
 31735                           tosl	equ	0xFFD
 31736                           pclath	equ	0xFFA
 31737                           tblptru	equ	0xFF8
 31738                           tblptrh	equ	0xFF7
 31739                           tblptrl	equ	0xFF6
 31740                           tablat	equ	0xFF5
 31741                           prodh	equ	0xFF4
 31742                           prodl	equ	0xFF3
 31743                           intcon	equ	0xFF2
 31744                           intcon2	equ	0xFF1
 31745                           intcon3	equ	0xFF0
 31746                           indf0	equ	0xFEF
 31747                           postinc0	equ	0xFEE
 31748                           fsr0h	equ	0xFEA
 31749                           fsr0l	equ	0xFE9
 31750                           wreg	equ	0xFE8
 31751                           indf1	equ	0xFE7
 31752                           postdec1	equ	0xFE5
 31753                           plusw1	equ	0xFE3
 31754                           fsr1h	equ	0xFE2
 31755                           fsr1l	equ	0xFE1
 31756                           indf2	equ	0xFDF
 31757                           postinc2	equ	0xFDE
 31758                           postdec2	equ	0xFDD
 31759                           plusw2	equ	0xFDB
 31760                           fsr2h	equ	0xFDA
 31761                           fsr2l	equ	0xFD9
 31762                           status	equ	0xFD8
 31763                           
 31764 ;; *************** function _i2c_eeprom_writeByte *****************
 31765 ;; Defined at:
 31766 ;;		line 344 in file "i2c.c"
 31767 ;; Parameters:    Size  Location     Type
 31768 ;;  address         2   10[COMRAM] unsigned int 
 31769 ;;  data            1   12[COMRAM] unsigned char 
 31770 ;; Auto vars:     Size  Location     Type
 31771 ;;  dat             2   16[COMRAM] unsigned char [2]
 31772 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31773 ;; Return value:  Size  Location     Type
 31774 ;;                  1    wreg      void 
 31775 ;; Registers used:
 31776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31777 ;; Tracked objects:
 31778 ;;		On entry : 0/0
 31779 ;;		On exit  : 0/0
 31780 ;;		Unchanged: 0/0
 31781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31783 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31784 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31785 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31786 ;;Total ram usage:        9 bytes
 31787 ;; Hardware stack levels used:    1
 31788 ;; Hardware stack levels required when called:    2
 31789 ;; This function calls:
 31790 ;;		__i2c_write
 31791 ;;		_i2c_set_frequency
 31792 ;; This function is called by:
 31793 ;;		__normal_mode
 31794 ;;		__parse_command_short
 31795 ;; This function uses a non-reentrant model
 31796 ;;
 31797                           
 31798                           	psect	text155
 31799  00752C                     __ptext155:
 31800                           	opt stack 0
 31801  00752C                     _i2c_eeprom_writeByte:
 31802                           	opt stack 26
 31803                           
 31804                           ;i2c.c: 346: uint8_t slave_address;;i2c.c: 347: uint8_t dat[2];;i2c.c: 349: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31805                           
 31806                           ;incstack = 0
 31807  00752C  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31808  007530  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31809  007534  0E07               	movlw	7
 31810  007536  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31811  007538                     u8705:
 31812  007538  90D8               	bcf	status,0,c
 31813  00753A  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31814  00753C  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31815  00753E  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31816  007540  D7FB               	goto	u8705
 31817  007542  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31818  007544  0B0E               	andlw	14
 31819  007546  09A0               	iorlw	160
 31820  007548  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31821                           
 31822                           ;i2c.c: 350: dat[0] = address & 0xFF;
 31823  00754A  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31824                           
 31825                           ;i2c.c: 351: dat[1] = data;
 31826  00754E  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31827                           
 31828                           ;i2c.c: 354: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31829  007552  0E02               	movlw	2
 31830  007554  ECF5  F03C         	call	_i2c_set_frequency
 31831                           
 31832                           ;i2c.c: 356: _i2c_write(slave_address, &dat[0], 2);
 31833  007558  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31834  00755A  6E06               	movwf	__i2c_write@data,c
 31835  00755C  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31836  00755E  6E07               	movwf	__i2c_write@data+1,c
 31837  007560  0E02               	movlw	2
 31838  007562  6E08               	movwf	__i2c_write@length,c
 31839  007564  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31840  007566  ECC9  F039         	call	__i2c_write
 31841  00756A  0012               	return		;funcret
 31842  00756C                     __end_of_i2c_eeprom_writeByte:
 31843                           	opt stack 0
 31844                           tosu	equ	0xFFF
 31845                           tosh	equ	0xFFE
 31846                           tosl	equ	0xFFD
 31847                           pclath	equ	0xFFA
 31848                           tblptru	equ	0xFF8
 31849                           tblptrh	equ	0xFF7
 31850                           tblptrl	equ	0xFF6
 31851                           tablat	equ	0xFF5
 31852                           prodh	equ	0xFF4
 31853                           prodl	equ	0xFF3
 31854                           intcon	equ	0xFF2
 31855                           intcon2	equ	0xFF1
 31856                           intcon3	equ	0xFF0
 31857                           indf0	equ	0xFEF
 31858                           postinc0	equ	0xFEE
 31859                           fsr0h	equ	0xFEA
 31860                           fsr0l	equ	0xFE9
 31861                           wreg	equ	0xFE8
 31862                           indf1	equ	0xFE7
 31863                           postdec1	equ	0xFE5
 31864                           plusw1	equ	0xFE3
 31865                           fsr1h	equ	0xFE2
 31866                           fsr1l	equ	0xFE1
 31867                           indf2	equ	0xFDF
 31868                           postinc2	equ	0xFDE
 31869                           postdec2	equ	0xFDD
 31870                           plusw2	equ	0xFDB
 31871                           fsr2h	equ	0xFDA
 31872                           fsr2l	equ	0xFD9
 31873                           status	equ	0xFD8
 31874                           
 31875 ;; *************** function _i2c_set_frequency *****************
 31876 ;; Defined at:
 31877 ;;		line 115 in file "i2c.c"
 31878 ;; Parameters:    Size  Location     Type
 31879 ;;  frequency       1    wreg     enum E6622
 31880 ;; Auto vars:     Size  Location     Type
 31881 ;;  frequency       1    0[COMRAM] enum E6622
 31882 ;; Return value:  Size  Location     Type
 31883 ;;                  1    wreg      void 
 31884 ;; Registers used:
 31885 ;;		wreg, status,2, status,0
 31886 ;; Tracked objects:
 31887 ;;		On entry : 0/0
 31888 ;;		On exit  : 0/0
 31889 ;;		Unchanged: 0/0
 31890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31895 ;;Total ram usage:        1 bytes
 31896 ;; Hardware stack levels used:    1
 31897 ;; This function calls:
 31898 ;;		Nothing
 31899 ;; This function is called by:
 31900 ;;		_i2c_init
 31901 ;;		__ic2_display_set_address
 31902 ;;		_i2c_display_send_init_sequence
 31903 ;;		_i2c_display_cursor
 31904 ;;		_i2c_display_write_fixed
 31905 ;;		_i2c_digipot_reset_on
 31906 ;;		_i2c_digipot_reset_off
 31907 ;;		_i2c_digipot_backlight
 31908 ;;		_i2c_eeprom_writeByte
 31909 ;;		_i2c_eeprom_readByte
 31910 ;;		_i2c_display_write
 31911 ;;		_i2c_eeprom_write
 31912 ;;		_i2c_eeprom_read
 31913 ;; This function uses a non-reentrant model
 31914 ;;
 31915                           
 31916                           	psect	text156
 31917  0079EA                     __ptext156:
 31918                           	opt stack 0
 31919  0079EA                     _i2c_set_frequency:
 31920                           	opt stack 28
 31921                           
 31922                           ;incstack = 0
 31923                           ;i2c_set_frequency@frequency stored from wreg
 31924  0079EA  6E01               	movwf	i2c_set_frequency@frequency,c
 31925                           
 31926                           ;i2c.c: 117: switch(frequency)
 31927  0079EC  D007               	goto	l1187
 31928  0079EE                     
 31929                           ;i2c.c: 120: SSP1ADD = 119;
 31930  0079EE  0E77               	movlw	119
 31931  0079F0  D003               	goto	L35
 31932  0079F2                     
 31933                           ;i2c.c: 123: SSP1ADD = 59;
 31934  0079F2  0E3B               	movlw	59
 31935  0079F4  D001               	goto	L35
 31936  0079F6                     
 31937                           ;i2c.c: 126: SSP1ADD = 29;
 31938  0079F6  0E1D               	movlw	29
 31939  0079F8                     L35:
 31940  0079F8  6EC8               	movwf	4040,c	;volatile
 31941                           
 31942                           ;i2c.c: 128: }
 31943                           
 31944                           ;i2c.c: 127: break;
 31945  0079FA  D00A               	goto	l1189
 31946  0079FC                     l1187:
 31947  0079FC  5001               	movf	i2c_set_frequency@frequency,w,c
 31948                           
 31949                           ; Switch size 1, requested type "space"
 31950                           ; Number of cases is 3, Range of values is 0 to 2
 31951                           ; switch strategies available:
 31952                           ; Name         Instructions Cycles
 31953                           ; simple_byte           10     6 (average)
 31954                           ;	Chosen strategy is simple_byte
 31955  0079FE  0A00               	xorlw	0	; case 0
 31956  007A00  B4D8               	btfsc	status,2,c
 31957  007A02  D7F5               	goto	l1188
 31958  007A04  0A01               	xorlw	1	; case 1
 31959  007A06  B4D8               	btfsc	status,2,c
 31960  007A08  D7F4               	goto	l1190
 31961  007A0A  0A03               	xorlw	3	; case 2
 31962  007A0C  B4D8               	btfsc	status,2,c
 31963  007A0E  D7F3               	goto	l1191
 31964  007A10                     l1189:
 31965                           
 31966                           ;i2c.c: 130: i2c_frequency = frequency;
 31967  007A10  C001  F099         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31968  007A14  0012               	return		;funcret
 31969  007A16                     __end_of_i2c_set_frequency:
 31970                           	opt stack 0
 31971                           tosu	equ	0xFFF
 31972                           tosh	equ	0xFFE
 31973                           tosl	equ	0xFFD
 31974                           pclath	equ	0xFFA
 31975                           tblptru	equ	0xFF8
 31976                           tblptrh	equ	0xFF7
 31977                           tblptrl	equ	0xFF6
 31978                           tablat	equ	0xFF5
 31979                           prodh	equ	0xFF4
 31980                           prodl	equ	0xFF3
 31981                           intcon	equ	0xFF2
 31982                           intcon2	equ	0xFF1
 31983                           intcon3	equ	0xFF0
 31984                           indf0	equ	0xFEF
 31985                           postinc0	equ	0xFEE
 31986                           fsr0h	equ	0xFEA
 31987                           fsr0l	equ	0xFE9
 31988                           wreg	equ	0xFE8
 31989                           indf1	equ	0xFE7
 31990                           postdec1	equ	0xFE5
 31991                           plusw1	equ	0xFE3
 31992                           fsr1h	equ	0xFE2
 31993                           fsr1l	equ	0xFE1
 31994                           indf2	equ	0xFDF
 31995                           postinc2	equ	0xFDE
 31996                           postdec2	equ	0xFDD
 31997                           plusw2	equ	0xFDB
 31998                           fsr2h	equ	0xFDA
 31999                           fsr2l	equ	0xFD9
 32000                           status	equ	0xFD8
 32001                           
 32002 ;; *************** function __i2c_write *****************
 32003 ;; Defined at:
 32004 ;;		line 134 in file "i2c.c"
 32005 ;; Parameters:    Size  Location     Type
 32006 ;;  slave_addres    1    wreg     unsigned char 
 32007 ;;  data            2    5[COMRAM] PTR unsigned char 
 32008 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32009 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32010 ;;		 -> _ic2_display_set_address@data_array(2), 
 32011 ;;  length          1    7[COMRAM] unsigned char 
 32012 ;; Auto vars:     Size  Location     Type
 32013 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32014 ;;  cntr            1    9[COMRAM] unsigned char 
 32015 ;; Return value:  Size  Location     Type
 32016 ;;                  1    wreg      void 
 32017 ;; Registers used:
 32018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32019 ;; Tracked objects:
 32020 ;;		On entry : 0/0
 32021 ;;		On exit  : 0/0
 32022 ;;		Unchanged: 0/0
 32023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32024 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32027 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32028 ;;Total ram usage:        5 bytes
 32029 ;; Hardware stack levels used:    1
 32030 ;; Hardware stack levels required when called:    1
 32031 ;; This function calls:
 32032 ;;		__i2c_send
 32033 ;;		__i2c_start
 32034 ;;		__i2c_stop
 32035 ;;		__i2c_wait_idle
 32036 ;; This function is called by:
 32037 ;;		__ic2_display_set_address
 32038 ;;		_i2c_display_send_init_sequence
 32039 ;;		_i2c_digipot_reset_on
 32040 ;;		_i2c_digipot_reset_off
 32041 ;;		_i2c_digipot_backlight
 32042 ;;		_i2c_eeprom_writeByte
 32043 ;;		_i2c_eeprom_readByte
 32044 ;;		_i2c_eeprom_write
 32045 ;;		_i2c_eeprom_read
 32046 ;; This function uses a non-reentrant model
 32047 ;;
 32048                           
 32049                           	psect	text157
 32050  007392                     __ptext157:
 32051                           	opt stack 0
 32052  007392                     __i2c_write:
 32053                           	opt stack 27
 32054                           
 32055                           ;incstack = 0
 32056                           ;__i2c_write@slave_address stored from wreg
 32057  007392  6E09               	movwf	__i2c_write@slave_address,c
 32058                           
 32059                           ;i2c.c: 136: uint8_t cntr;;i2c.c: 138: _i2c_wait_idle();
 32060  007394  EC26  F037         	call	__i2c_wait_idle	;wreg free
 32061                           
 32062                           ;i2c.c: 139: _i2c_start();
 32063  007398  ECF8  F03E         	call	__i2c_start	;wreg free
 32064                           
 32065                           ;i2c.c: 140: _i2c_wait_idle();
 32066  00739C  EC26  F037         	call	__i2c_wait_idle	;wreg free
 32067                           
 32068                           ;i2c.c: 141: _i2c_send(slave_address);
 32069  0073A0  5009               	movf	__i2c_write@slave_address,w,c
 32070  0073A2  ECFC  F03E         	call	__i2c_send
 32071                           
 32072                           ;i2c.c: 142: _i2c_wait_idle();
 32073  0073A6  EC26  F037         	call	__i2c_wait_idle	;wreg free
 32074                           
 32075                           ;i2c.c: 144: for(cntr=0; cntr<length; ++cntr)
 32076  0073AA  0E00               	movlw	0
 32077  0073AC  6E0A               	movwf	__i2c_write@cntr,c
 32078  0073AE  D00E               	goto	l1195
 32079  0073B0                     
 32080                           ;i2c.c: 145: {;i2c.c: 146: _i2c_send(data[cntr]);
 32081  0073B0  500A               	movf	__i2c_write@cntr,w,c
 32082  0073B2  0D01               	mullw	1
 32083  0073B4  50F3               	movf	prodl,w,c
 32084  0073B6  2406               	addwf	__i2c_write@data,w,c
 32085  0073B8  6ED9               	movwf	fsr2l,c
 32086  0073BA  50F4               	movf	prodh,w,c
 32087  0073BC  2007               	addwfc	__i2c_write@data+1,w,c
 32088  0073BE  6EDA               	movwf	fsr2h,c
 32089  0073C0  50DF               	movf	indf2,w,c
 32090  0073C2  ECFC  F03E         	call	__i2c_send
 32091                           
 32092                           ;i2c.c: 147: _i2c_wait_idle();
 32093  0073C6  EC26  F037         	call	__i2c_wait_idle	;wreg free
 32094  0073CA  2A0A               	incf	__i2c_write@cntr,f,c
 32095  0073CC                     l1195:
 32096  0073CC  5008               	movf	__i2c_write@length,w,c
 32097  0073CE  5C0A               	subwf	__i2c_write@cntr,w,c
 32098  0073D0  A0D8               	btfss	status,0,c
 32099  0073D2  D7EE               	goto	l1196
 32100                           
 32101                           ;i2c.c: 148: };i2c.c: 150: _i2c_stop();
 32102  0073D4  ECF4  F03E         	call	__i2c_stop	;wreg free
 32103  0073D8  0012               	return		;funcret
 32104  0073DA                     __end_of__i2c_write:
 32105                           	opt stack 0
 32106                           tosu	equ	0xFFF
 32107                           tosh	equ	0xFFE
 32108                           tosl	equ	0xFFD
 32109                           pclath	equ	0xFFA
 32110                           tblptru	equ	0xFF8
 32111                           tblptrh	equ	0xFF7
 32112                           tblptrl	equ	0xFF6
 32113                           tablat	equ	0xFF5
 32114                           prodh	equ	0xFF4
 32115                           prodl	equ	0xFF3
 32116                           intcon	equ	0xFF2
 32117                           intcon2	equ	0xFF1
 32118                           intcon3	equ	0xFF0
 32119                           indf0	equ	0xFEF
 32120                           postinc0	equ	0xFEE
 32121                           fsr0h	equ	0xFEA
 32122                           fsr0l	equ	0xFE9
 32123                           wreg	equ	0xFE8
 32124                           indf1	equ	0xFE7
 32125                           postdec1	equ	0xFE5
 32126                           plusw1	equ	0xFE3
 32127                           fsr1h	equ	0xFE2
 32128                           fsr1l	equ	0xFE1
 32129                           indf2	equ	0xFDF
 32130                           postinc2	equ	0xFDE
 32131                           postdec2	equ	0xFDD
 32132                           plusw2	equ	0xFDB
 32133                           fsr2h	equ	0xFDA
 32134                           fsr2l	equ	0xFD9
 32135                           status	equ	0xFD8
 32136                           
 32137 ;; *************** function __i2c_wait_idle *****************
 32138 ;; Defined at:
 32139 ;;		line 48 in file "i2c.c"
 32140 ;; Parameters:    Size  Location     Type
 32141 ;;		None
 32142 ;; Auto vars:     Size  Location     Type
 32143 ;;		None
 32144 ;; Return value:  Size  Location     Type
 32145 ;;                  1    wreg      void 
 32146 ;; Registers used:
 32147 ;;		wreg, status,2, status,0
 32148 ;; Tracked objects:
 32149 ;;		On entry : 0/0
 32150 ;;		On exit  : 0/0
 32151 ;;		Unchanged: 0/0
 32152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32155 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32156 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32157 ;;Total ram usage:        5 bytes
 32158 ;; Hardware stack levels used:    1
 32159 ;; This function calls:
 32160 ;;		Nothing
 32161 ;; This function is called by:
 32162 ;;		__i2c_write
 32163 ;;		__i2c_read
 32164 ;;		_i2c_display_write_fixed
 32165 ;;		_i2c_display_write
 32166 ;; This function uses a non-reentrant model
 32167 ;;
 32168                           
 32169                           	psect	text158
 32170  006E4C                     __ptext158:
 32171                           	opt stack 0
 32172  006E4C                     __i2c_wait_idle:
 32173                           	opt stack 27
 32174                           
 32175                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32176                           
 32177                           ;incstack = 0
 32178  006E4C  A4C7               	btfss	4039,2,c	;volatile
 32179  006E4E  D003               	goto	u7380
 32180  006E50  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32181  006E52  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32182  006E54  D001               	goto	u7388
 32183  006E56                     u7380:
 32184  006E56  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32185  006E58                     u7388:
 32186  006E58  A0C5               	btfss	4037,0,c	;volatile
 32187  006E5A  D003               	goto	u7390
 32188  006E5C  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32189  006E5E  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32190  006E60  D001               	goto	u7398
 32191  006E62                     u7390:
 32192  006E62  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32193  006E64                     u7398:
 32194  006E64  A2C5               	btfss	4037,1,c	;volatile
 32195  006E66  D003               	goto	u7400
 32196  006E68  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32197  006E6A  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32198  006E6C  D001               	goto	u7408
 32199  006E6E                     u7400:
 32200  006E6E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32201  006E70                     u7408:
 32202  006E70  A4C5               	btfss	4037,2,c	;volatile
 32203  006E72  D003               	goto	u7410
 32204  006E74  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32205  006E76  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32206  006E78  D001               	goto	u7418
 32207  006E7A                     u7410:
 32208  006E7A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32209  006E7C                     u7418:
 32210  006E7C  A6C5               	btfss	4037,3,c	;volatile
 32211  006E7E  D003               	goto	u7420
 32212  006E80  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32213  006E82  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32214  006E84  D001               	goto	u7428
 32215  006E86                     u7420:
 32216  006E86  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32217  006E88                     u7428:
 32218  006E88  A8C5               	btfss	4037,4,c	;volatile
 32219  006E8A  D002               	goto	u7430
 32220  006E8C  0E01               	movlw	1
 32221  006E8E  D001               	goto	u7436
 32222  006E90                     u7430:
 32223  006E90  0E00               	movlw	0
 32224  006E92                     u7436:
 32225  006E92  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32226  006E94  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32227  006E96  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32228  006E98  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32229  006E9A  1001               	iorwf	??__i2c_wait_idle,w,c
 32230  006E9C  0900               	iorlw	0
 32231  006E9E  B4D8               	btfsc	status,2,c
 32232  006EA0  0012               	return	
 32233  006EA2  D7D4               	goto	__i2c_wait_idle
 32234  006EA4                     __end_of__i2c_wait_idle:
 32235                           	opt stack 0
 32236                           tosu	equ	0xFFF
 32237                           tosh	equ	0xFFE
 32238                           tosl	equ	0xFFD
 32239                           pclath	equ	0xFFA
 32240                           tblptru	equ	0xFF8
 32241                           tblptrh	equ	0xFF7
 32242                           tblptrl	equ	0xFF6
 32243                           tablat	equ	0xFF5
 32244                           prodh	equ	0xFF4
 32245                           prodl	equ	0xFF3
 32246                           intcon	equ	0xFF2
 32247                           intcon2	equ	0xFF1
 32248                           intcon3	equ	0xFF0
 32249                           indf0	equ	0xFEF
 32250                           postinc0	equ	0xFEE
 32251                           fsr0h	equ	0xFEA
 32252                           fsr0l	equ	0xFE9
 32253                           wreg	equ	0xFE8
 32254                           indf1	equ	0xFE7
 32255                           postdec1	equ	0xFE5
 32256                           plusw1	equ	0xFE3
 32257                           fsr1h	equ	0xFE2
 32258                           fsr1l	equ	0xFE1
 32259                           indf2	equ	0xFDF
 32260                           postinc2	equ	0xFDE
 32261                           postdec2	equ	0xFDD
 32262                           plusw2	equ	0xFDB
 32263                           fsr2h	equ	0xFDA
 32264                           fsr2l	equ	0xFD9
 32265                           status	equ	0xFD8
 32266                           
 32267 ;; *************** function __i2c_stop *****************
 32268 ;; Defined at:
 32269 ;;		line 75 in file "i2c.c"
 32270 ;; Parameters:    Size  Location     Type
 32271 ;;		None
 32272 ;; Auto vars:     Size  Location     Type
 32273 ;;		None
 32274 ;; Return value:  Size  Location     Type
 32275 ;;                  1    wreg      void 
 32276 ;; Registers used:
 32277 ;;		None
 32278 ;; Tracked objects:
 32279 ;;		On entry : 0/0
 32280 ;;		On exit  : 0/0
 32281 ;;		Unchanged: 0/0
 32282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32287 ;;Total ram usage:        0 bytes
 32288 ;; Hardware stack levels used:    1
 32289 ;; This function calls:
 32290 ;;		Nothing
 32291 ;; This function is called by:
 32292 ;;		__i2c_write
 32293 ;;		__i2c_read
 32294 ;;		_i2c_display_write_fixed
 32295 ;;		_i2c_display_write
 32296 ;; This function uses a non-reentrant model
 32297 ;;
 32298                           
 32299                           	psect	text159
 32300  007DE8                     __ptext159:
 32301                           	opt stack 0
 32302  007DE8                     __i2c_stop:
 32303                           	opt stack 27
 32304                           
 32305                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 32306                           
 32307                           ;incstack = 0
 32308  007DE8  84C5               	bsf	4037,2,c	;volatile
 32309  007DEA  A4C5               	btfss	4037,2,c	;volatile
 32310  007DEC  0012               	return	
 32311  007DEE  D7FD               	goto	l1164
 32312  007DF0                     __end_of__i2c_stop:
 32313                           	opt stack 0
 32314                           tosu	equ	0xFFF
 32315                           tosh	equ	0xFFE
 32316                           tosl	equ	0xFFD
 32317                           pclath	equ	0xFFA
 32318                           tblptru	equ	0xFF8
 32319                           tblptrh	equ	0xFF7
 32320                           tblptrl	equ	0xFF6
 32321                           tablat	equ	0xFF5
 32322                           prodh	equ	0xFF4
 32323                           prodl	equ	0xFF3
 32324                           intcon	equ	0xFF2
 32325                           intcon2	equ	0xFF1
 32326                           intcon3	equ	0xFF0
 32327                           indf0	equ	0xFEF
 32328                           postinc0	equ	0xFEE
 32329                           fsr0h	equ	0xFEA
 32330                           fsr0l	equ	0xFE9
 32331                           wreg	equ	0xFE8
 32332                           indf1	equ	0xFE7
 32333                           postdec1	equ	0xFE5
 32334                           plusw1	equ	0xFE3
 32335                           fsr1h	equ	0xFE2
 32336                           fsr1l	equ	0xFE1
 32337                           indf2	equ	0xFDF
 32338                           postinc2	equ	0xFDE
 32339                           postdec2	equ	0xFDD
 32340                           plusw2	equ	0xFDB
 32341                           fsr2h	equ	0xFDA
 32342                           fsr2l	equ	0xFD9
 32343                           status	equ	0xFD8
 32344                           
 32345 ;; *************** function __i2c_start *****************
 32346 ;; Defined at:
 32347 ;;		line 54 in file "i2c.c"
 32348 ;; Parameters:    Size  Location     Type
 32349 ;;		None
 32350 ;; Auto vars:     Size  Location     Type
 32351 ;;		None
 32352 ;; Return value:  Size  Location     Type
 32353 ;;                  1    wreg      void 
 32354 ;; Registers used:
 32355 ;;		None
 32356 ;; Tracked objects:
 32357 ;;		On entry : 0/0
 32358 ;;		On exit  : 0/0
 32359 ;;		Unchanged: 0/0
 32360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32365 ;;Total ram usage:        0 bytes
 32366 ;; Hardware stack levels used:    1
 32367 ;; This function calls:
 32368 ;;		Nothing
 32369 ;; This function is called by:
 32370 ;;		__i2c_write
 32371 ;;		__i2c_read
 32372 ;;		_i2c_display_write_fixed
 32373 ;;		_i2c_display_write
 32374 ;; This function uses a non-reentrant model
 32375 ;;
 32376                           
 32377                           	psect	text160
 32378  007DF0                     __ptext160:
 32379                           	opt stack 0
 32380  007DF0                     __i2c_start:
 32381                           	opt stack 27
 32382                           
 32383                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32384                           
 32385                           ;incstack = 0
 32386  007DF0  80C5               	bsf	4037,0,c	;volatile
 32387  007DF2  A0C5               	btfss	4037,0,c	;volatile
 32388  007DF4  0012               	return	
 32389  007DF6  D7FD               	goto	l1149
 32390  007DF8                     __end_of__i2c_start:
 32391                           	opt stack 0
 32392                           tosu	equ	0xFFF
 32393                           tosh	equ	0xFFE
 32394                           tosl	equ	0xFFD
 32395                           pclath	equ	0xFFA
 32396                           tblptru	equ	0xFF8
 32397                           tblptrh	equ	0xFF7
 32398                           tblptrl	equ	0xFF6
 32399                           tablat	equ	0xFF5
 32400                           prodh	equ	0xFF4
 32401                           prodl	equ	0xFF3
 32402                           intcon	equ	0xFF2
 32403                           intcon2	equ	0xFF1
 32404                           intcon3	equ	0xFF0
 32405                           indf0	equ	0xFEF
 32406                           postinc0	equ	0xFEE
 32407                           fsr0h	equ	0xFEA
 32408                           fsr0l	equ	0xFE9
 32409                           wreg	equ	0xFE8
 32410                           indf1	equ	0xFE7
 32411                           postdec1	equ	0xFE5
 32412                           plusw1	equ	0xFE3
 32413                           fsr1h	equ	0xFE2
 32414                           fsr1l	equ	0xFE1
 32415                           indf2	equ	0xFDF
 32416                           postinc2	equ	0xFDE
 32417                           postdec2	equ	0xFDD
 32418                           plusw2	equ	0xFDB
 32419                           fsr2h	equ	0xFDA
 32420                           fsr2l	equ	0xFD9
 32421                           status	equ	0xFD8
 32422                           
 32423 ;; *************** function __i2c_send *****************
 32424 ;; Defined at:
 32425 ;;		line 61 in file "i2c.c"
 32426 ;; Parameters:    Size  Location     Type
 32427 ;;  dat             1    wreg     unsigned char 
 32428 ;; Auto vars:     Size  Location     Type
 32429 ;;  dat             1    0[COMRAM] unsigned char 
 32430 ;; Return value:  Size  Location     Type
 32431 ;;                  1    wreg      void 
 32432 ;; Registers used:
 32433 ;;		wreg
 32434 ;; Tracked objects:
 32435 ;;		On entry : 0/0
 32436 ;;		On exit  : 0/0
 32437 ;;		Unchanged: 0/0
 32438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32443 ;;Total ram usage:        1 bytes
 32444 ;; Hardware stack levels used:    1
 32445 ;; This function calls:
 32446 ;;		Nothing
 32447 ;; This function is called by:
 32448 ;;		__i2c_write
 32449 ;;		__i2c_read
 32450 ;;		_i2c_display_write_fixed
 32451 ;;		_i2c_display_write
 32452 ;; This function uses a non-reentrant model
 32453 ;;
 32454                           
 32455                           	psect	text161
 32456  007DF8                     __ptext161:
 32457                           	opt stack 0
 32458  007DF8                     __i2c_send:
 32459                           	opt stack 27
 32460                           
 32461                           ;incstack = 0
 32462                           ;__i2c_send@dat stored from wreg
 32463  007DF8  6E01               	movwf	__i2c_send@dat,c
 32464                           
 32465                           ;i2c.c: 63: SSP1BUF = dat;
 32466  007DFA  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32467  007DFE  0012               	return		;funcret
 32468  007E00                     __end_of__i2c_send:
 32469                           	opt stack 0
 32470                           tosu	equ	0xFFF
 32471                           tosh	equ	0xFFE
 32472                           tosl	equ	0xFFD
 32473                           pclath	equ	0xFFA
 32474                           tblptru	equ	0xFF8
 32475                           tblptrh	equ	0xFF7
 32476                           tblptrl	equ	0xFF6
 32477                           tablat	equ	0xFF5
 32478                           prodh	equ	0xFF4
 32479                           prodl	equ	0xFF3
 32480                           intcon	equ	0xFF2
 32481                           intcon2	equ	0xFF1
 32482                           intcon3	equ	0xFF0
 32483                           indf0	equ	0xFEF
 32484                           postinc0	equ	0xFEE
 32485                           fsr0h	equ	0xFEA
 32486                           fsr0l	equ	0xFE9
 32487                           wreg	equ	0xFE8
 32488                           indf1	equ	0xFE7
 32489                           postdec1	equ	0xFE5
 32490                           plusw1	equ	0xFE3
 32491                           fsr1h	equ	0xFE2
 32492                           fsr1l	equ	0xFE1
 32493                           indf2	equ	0xFDF
 32494                           postinc2	equ	0xFDE
 32495                           postdec2	equ	0xFDD
 32496                           plusw2	equ	0xFDB
 32497                           fsr2h	equ	0xFDA
 32498                           fsr2l	equ	0xFD9
 32499                           status	equ	0xFD8
 32500                           
 32501 ;; *************** function __parse_command_long *****************
 32502 ;; Defined at:
 32503 ;;		line 456 in file "api.c"
 32504 ;; Parameters:    Size  Location     Type
 32505 ;;  data            2   82[COMRAM] PTR unsigned char 
 32506 ;;		 -> RAM(3759), 
 32507 ;; Auto vars:     Size  Location     Type
 32508 ;;  length          1   84[COMRAM] unsigned char 
 32509 ;; Return value:  Size  Location     Type
 32510 ;;                  1    wreg      unsigned char 
 32511 ;; Registers used:
 32512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32513 ;; Tracked objects:
 32514 ;;		On entry : 0/0
 32515 ;;		On exit  : 0/0
 32516 ;;		Unchanged: 0/0
 32517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32522 ;;Total ram usage:        3 bytes
 32523 ;; Hardware stack levels used:    1
 32524 ;; Hardware stack levels required when called:    9
 32525 ;; This function calls:
 32526 ;;		__parse_file_append
 32527 ;;		__parse_file_create
 32528 ;;		__parse_file_delete
 32529 ;;		__parse_file_modify
 32530 ;;		__parse_file_rename
 32531 ;;		__parse_file_truncate
 32532 ;; This function is called by:
 32533 ;;		_api_parse
 32534 ;; This function uses a non-reentrant model
 32535 ;;
 32536                           
 32537                           	psect	text162
 32538  005FA8                     __ptext162:
 32539                           	opt stack 0
 32540  005FA8                     __parse_command_long:
 32541                           	opt stack 20
 32542                           
 32543                           ;api.c: 458: uint8_t length = 65;
 32544                           
 32545                           ;incstack = 0
 32546  005FA8  0E41               	movlw	65
 32547  005FAA  6E55               	movwf	__parse_command_long@length,c
 32548                           
 32549                           ;api.c: 460: switch(data[0])
 32550  005FAC  D02B               	goto	l2592
 32551  005FAE                     
 32552                           ;api.c: 463: length = _parse_file_truncate(data);
 32553  005FAE  C053  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 32554  005FB2  C054  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 32555  005FB6  EC13  F03F         	call	__parse_file_truncate	;wreg free
 32556  005FBA  D022               	goto	L40
 32557  005FBC                     
 32558                           ;api.c: 467: length = _parse_file_delete(data);
 32559  005FBC  C053  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 32560  005FC0  C054  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32561  005FC4  EC2C  F039         	call	__parse_file_delete	;wreg free
 32562  005FC8  D01B               	goto	L40
 32563  005FCA                     
 32564                           ;api.c: 471: length = _parse_file_create(data);
 32565  005FCA  C053  F050         	movff	__parse_command_long@data,__parse_file_create@data
 32566  005FCE  C054  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32567  005FD2  EC6D  F034         	call	__parse_file_create	;wreg free
 32568  005FD6  D014               	goto	L40
 32569  005FD8                     
 32570                           ;api.c: 475: length = _parse_file_rename(data);
 32571  005FD8  C053  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 32572  005FDC  C054  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32573  005FE0  ECD8  F034         	call	__parse_file_rename	;wreg free
 32574  005FE4  D00D               	goto	L40
 32575  005FE6                     
 32576                           ;api.c: 479: length = _parse_file_append(data);
 32577  005FE6  C053  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 32578  005FEA  C054  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32579  005FEE  EC72  F031         	call	__parse_file_append	;wreg free
 32580  005FF2  D006               	goto	L40
 32581  005FF4                     
 32582                           ;api.c: 483: length = _parse_file_modify(data);
 32583  005FF4  C053  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 32584  005FF8  C054  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32585  005FFC  EC15  F03F         	call	__parse_file_modify	;wreg free
 32586  006000                     L40:
 32587  006000  6E55               	movwf	__parse_command_long@length,c
 32588                           
 32589                           ;api.c: 485: }
 32590                           
 32591                           ;api.c: 484: break;
 32592  006002  D017               	goto	l2594
 32593  006004                     l2592:
 32594  006004  C053  FFD9         	movff	__parse_command_long@data,fsr2l
 32595  006008  C054  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32596  00600C  50DF               	movf	indf2,w,c
 32597                           
 32598                           ; Switch size 1, requested type "space"
 32599                           ; Number of cases is 6, Range of values is 80 to 85
 32600                           ; switch strategies available:
 32601                           ; Name         Instructions Cycles
 32602                           ; simple_byte           19    10 (average)
 32603                           ;	Chosen strategy is simple_byte
 32604  00600E  0A50               	xorlw	80	; case 80
 32605  006010  B4D8               	btfsc	status,2,c
 32606  006012  D7CD               	goto	l2593
 32607  006014  0A01               	xorlw	1	; case 81
 32608  006016  B4D8               	btfsc	status,2,c
 32609  006018  D7D1               	goto	l2595
 32610  00601A  0A03               	xorlw	3	; case 82
 32611  00601C  B4D8               	btfsc	status,2,c
 32612  00601E  D7D5               	goto	l2596
 32613  006020  0A01               	xorlw	1	; case 83
 32614  006022  B4D8               	btfsc	status,2,c
 32615  006024  D7D9               	goto	l2597
 32616  006026  0A07               	xorlw	7	; case 84
 32617  006028  B4D8               	btfsc	status,2,c
 32618  00602A  D7DD               	goto	l2598
 32619  00602C  0A01               	xorlw	1	; case 85
 32620  00602E  B4D8               	btfsc	status,2,c
 32621  006030  D7E1               	goto	l2599
 32622  006032                     l2594:
 32623                           
 32624                           ;api.c: 487: return length;
 32625  006032  5055               	movf	__parse_command_long@length,w,c
 32626  006034  0012               	return	
 32627  006036                     __end_of__parse_command_long:
 32628                           	opt stack 0
 32629                           tosu	equ	0xFFF
 32630                           tosh	equ	0xFFE
 32631                           tosl	equ	0xFFD
 32632                           pclath	equ	0xFFA
 32633                           tblptru	equ	0xFF8
 32634                           tblptrh	equ	0xFF7
 32635                           tblptrl	equ	0xFF6
 32636                           tablat	equ	0xFF5
 32637                           prodh	equ	0xFF4
 32638                           prodl	equ	0xFF3
 32639                           intcon	equ	0xFF2
 32640                           intcon2	equ	0xFF1
 32641                           intcon3	equ	0xFF0
 32642                           indf0	equ	0xFEF
 32643                           postinc0	equ	0xFEE
 32644                           fsr0h	equ	0xFEA
 32645                           fsr0l	equ	0xFE9
 32646                           wreg	equ	0xFE8
 32647                           indf1	equ	0xFE7
 32648                           postdec1	equ	0xFE5
 32649                           plusw1	equ	0xFE3
 32650                           fsr1h	equ	0xFE2
 32651                           fsr1l	equ	0xFE1
 32652                           indf2	equ	0xFDF
 32653                           postinc2	equ	0xFDE
 32654                           postdec2	equ	0xFDD
 32655                           plusw2	equ	0xFDB
 32656                           fsr2h	equ	0xFDA
 32657                           fsr2l	equ	0xFD9
 32658                           status	equ	0xFD8
 32659                           
 32660 ;; *************** function __parse_file_truncate *****************
 32661 ;; Defined at:
 32662 ;;		line 490 in file "api.c"
 32663 ;; Parameters:    Size  Location     Type
 32664 ;;  data            2    0[COMRAM] PTR unsigned char 
 32665 ;;		 -> RAM(3759), 
 32666 ;; Auto vars:     Size  Location     Type
 32667 ;;		None
 32668 ;; Return value:  Size  Location     Type
 32669 ;;                  1    wreg      unsigned char 
 32670 ;; Registers used:
 32671 ;;		wreg
 32672 ;; Tracked objects:
 32673 ;;		On entry : 0/0
 32674 ;;		On exit  : 0/0
 32675 ;;		Unchanged: 0/0
 32676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32681 ;;Total ram usage:        2 bytes
 32682 ;; Hardware stack levels used:    1
 32683 ;; This function calls:
 32684 ;;		Nothing
 32685 ;; This function is called by:
 32686 ;;		__parse_command_long
 32687 ;; This function uses a non-reentrant model
 32688 ;;
 32689                           
 32690                           	psect	text163
 32691  007E26                     __ptext163:
 32692                           	opt stack 0
 32693  007E26                     __parse_file_truncate:
 32694                           	opt stack 28
 32695                           
 32696                           ;api.c: 494: return 65;
 32697                           
 32698                           ;incstack = 0
 32699  007E26  0E41               	movlw	65
 32700  007E28  0012               	return	
 32701  007E2A                     __end_of__parse_file_truncate:
 32702                           	opt stack 0
 32703                           tosu	equ	0xFFF
 32704                           tosh	equ	0xFFE
 32705                           tosl	equ	0xFFD
 32706                           pclath	equ	0xFFA
 32707                           tblptru	equ	0xFF8
 32708                           tblptrh	equ	0xFF7
 32709                           tblptrl	equ	0xFF6
 32710                           tablat	equ	0xFF5
 32711                           prodh	equ	0xFF4
 32712                           prodl	equ	0xFF3
 32713                           intcon	equ	0xFF2
 32714                           intcon2	equ	0xFF1
 32715                           intcon3	equ	0xFF0
 32716                           indf0	equ	0xFEF
 32717                           postinc0	equ	0xFEE
 32718                           fsr0h	equ	0xFEA
 32719                           fsr0l	equ	0xFE9
 32720                           wreg	equ	0xFE8
 32721                           indf1	equ	0xFE7
 32722                           postdec1	equ	0xFE5
 32723                           plusw1	equ	0xFE3
 32724                           fsr1h	equ	0xFE2
 32725                           fsr1l	equ	0xFE1
 32726                           indf2	equ	0xFDF
 32727                           postinc2	equ	0xFDE
 32728                           postdec2	equ	0xFDD
 32729                           plusw2	equ	0xFDB
 32730                           fsr2h	equ	0xFDA
 32731                           fsr2l	equ	0xFD9
 32732                           status	equ	0xFD8
 32733                           
 32734 ;; *************** function __parse_file_rename *****************
 32735 ;; Defined at:
 32736 ;;		line 523 in file "api.c"
 32737 ;; Parameters:    Size  Location     Type
 32738 ;;  data            2   66[COMRAM] PTR unsigned char 
 32739 ;;		 -> RAM(3759), 
 32740 ;; Auto vars:     Size  Location     Type
 32741 ;;		None
 32742 ;; Return value:  Size  Location     Type
 32743 ;;                  1    wreg      unsigned char 
 32744 ;; Registers used:
 32745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32746 ;; Tracked objects:
 32747 ;;		On entry : 0/0
 32748 ;;		On exit  : 0/0
 32749 ;;		Unchanged: 0/0
 32750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32755 ;;Total ram usage:        3 bytes
 32756 ;; Hardware stack levels used:    1
 32757 ;; Hardware stack levels required when called:    8
 32758 ;; This function calls:
 32759 ;;		_fat_rename_file
 32760 ;; This function is called by:
 32761 ;;		__parse_command_long
 32762 ;; This function uses a non-reentrant model
 32763 ;;
 32764                           
 32765                           	psect	text164
 32766  0069B0                     __ptext164:
 32767                           	opt stack 0
 32768  0069B0                     __parse_file_rename:
 32769                           	opt stack 20
 32770                           
 32771                           ;api.c: 526: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 32772                           
 32773                           ;incstack = 0
 32774  0069B0  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 32775  0069B4  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 32776  0069B8  0E53               	movlw	83
 32777  0069BA  18DE               	xorwf	postinc2,w,c
 32778  0069BC  A4D8               	btfss	status,2,c
 32779  0069BE  D014               	goto	u9050
 32780  0069C0  EE20 F00D          	lfsr	2,13
 32781  0069C4  5043               	movf	__parse_file_rename@data,w,c
 32782  0069C6  26D9               	addwf	fsr2l,f,c
 32783  0069C8  5044               	movf	__parse_file_rename@data+1,w,c
 32784  0069CA  22DA               	addwfc	fsr2h,f,c
 32785  0069CC  0E7E               	movlw	126
 32786  0069CE  18DE               	xorwf	postinc2,w,c
 32787  0069D0  A4D8               	btfss	status,2,c
 32788  0069D2  D00A               	goto	u9050
 32789  0069D4  EE20 F00E          	lfsr	2,14
 32790  0069D8  5043               	movf	__parse_file_rename@data,w,c
 32791  0069DA  26D9               	addwf	fsr2l,f,c
 32792  0069DC  5044               	movf	__parse_file_rename@data+1,w,c
 32793  0069DE  22DA               	addwfc	fsr2h,f,c
 32794  0069E0  0E18               	movlw	24
 32795  0069E2  18DE               	xorwf	postinc2,w,c
 32796  0069E4  B4D8               	btfsc	status,2,c
 32797  0069E6  D002               	goto	l2618
 32798  0069E8                     u9050:
 32799                           
 32800                           ;api.c: 527: {;api.c: 528: return 15;
 32801  0069E8  0E0F               	movlw	15
 32802  0069EA  0012               	return	
 32803  0069EC                     l2618:
 32804                           
 32805                           ;api.c: 529: };api.c: 532: fat_rename_file(data[1], &data[2], &data[10]);
 32806  0069EC  0E02               	movlw	2
 32807  0069EE  2443               	addwf	__parse_file_rename@data,w,c
 32808  0069F0  6E3F               	movwf	fat_rename_file@name,c
 32809  0069F2  0E00               	movlw	0
 32810  0069F4  2044               	addwfc	__parse_file_rename@data+1,w,c
 32811  0069F6  6E40               	movwf	fat_rename_file@name+1,c
 32812  0069F8  0E0A               	movlw	10
 32813  0069FA  2443               	addwf	__parse_file_rename@data,w,c
 32814  0069FC  6E41               	movwf	fat_rename_file@extension,c
 32815  0069FE  0E00               	movlw	0
 32816  006A00  2044               	addwfc	__parse_file_rename@data+1,w,c
 32817  006A02  6E42               	movwf	fat_rename_file@extension+1,c
 32818  006A04  EE20 F001          	lfsr	2,1
 32819  006A08  5043               	movf	__parse_file_rename@data,w,c
 32820  006A0A  26D9               	addwf	fsr2l,f,c
 32821  006A0C  5044               	movf	__parse_file_rename@data+1,w,c
 32822  006A0E  22DA               	addwfc	fsr2h,f,c
 32823  006A10  50DF               	movf	indf2,w,c
 32824  006A12  ECAC  F02E         	call	_fat_rename_file
 32825                           
 32826                           ;api.c: 533: return 15;
 32827  006A16  0E0F               	movlw	15
 32828  006A18  0012               	return	
 32829  006A1A                     __end_of__parse_file_rename:
 32830                           	opt stack 0
 32831                           tosu	equ	0xFFF
 32832                           tosh	equ	0xFFE
 32833                           tosl	equ	0xFFD
 32834                           pclath	equ	0xFFA
 32835                           tblptru	equ	0xFF8
 32836                           tblptrh	equ	0xFF7
 32837                           tblptrl	equ	0xFF6
 32838                           tablat	equ	0xFF5
 32839                           prodh	equ	0xFF4
 32840                           prodl	equ	0xFF3
 32841                           intcon	equ	0xFF2
 32842                           intcon2	equ	0xFF1
 32843                           intcon3	equ	0xFF0
 32844                           indf0	equ	0xFEF
 32845                           postinc0	equ	0xFEE
 32846                           fsr0h	equ	0xFEA
 32847                           fsr0l	equ	0xFE9
 32848                           wreg	equ	0xFE8
 32849                           indf1	equ	0xFE7
 32850                           postdec1	equ	0xFE5
 32851                           plusw1	equ	0xFE3
 32852                           fsr1h	equ	0xFE2
 32853                           fsr1l	equ	0xFE1
 32854                           indf2	equ	0xFDF
 32855                           postinc2	equ	0xFDE
 32856                           postdec2	equ	0xFDD
 32857                           plusw2	equ	0xFDB
 32858                           fsr2h	equ	0xFDA
 32859                           fsr2l	equ	0xFD9
 32860                           status	equ	0xFD8
 32861                           
 32862 ;; *************** function _fat_rename_file *****************
 32863 ;; Defined at:
 32864 ;;		line 536 in file "fat16.c"
 32865 ;; Parameters:    Size  Location     Type
 32866 ;;  file_number     1    wreg     unsigned char 
 32867 ;;  name            2   62[COMRAM] PTR unsigned char 
 32868 ;;		 -> RAM(3759), 
 32869 ;;  extension       2   64[COMRAM] PTR unsigned char 
 32870 ;;		 -> RAM(3759), 
 32871 ;; Auto vars:     Size  Location     Type
 32872 ;;  file_number     1    0[BANK0 ] unsigned char 
 32873 ;;  root           32    1[BANK0 ] struct .
 32874 ;;  cntr            1   33[BANK0 ] unsigned char 
 32875 ;; Return value:  Size  Location     Type
 32876 ;;                  1    wreg      void 
 32877 ;; Registers used:
 32878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32879 ;; Tracked objects:
 32880 ;;		On entry : 0/0
 32881 ;;		On exit  : 0/0
 32882 ;;		Unchanged: 0/0
 32883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32885 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32887 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32888 ;;Total ram usage:       38 bytes
 32889 ;; Hardware stack levels used:    1
 32890 ;; Hardware stack levels required when called:    7
 32891 ;; This function calls:
 32892 ;;		__write_root
 32893 ;;		_fat_get_file_information
 32894 ;; This function is called by:
 32895 ;;		__parse_file_rename
 32896 ;; This function uses a non-reentrant model
 32897 ;;
 32898                           
 32899                           	psect	text165
 32900  005D58                     __ptext165:
 32901                           	opt stack 0
 32902  005D58                     _fat_rename_file:
 32903                           	opt stack 20
 32904                           
 32905                           ;incstack = 0
 32906                           ;fat_rename_file@file_number stored from wreg
 32907  005D58  0100               	movlb	0	; () banked
 32908  005D5A  6FB5               	movwf	fat_rename_file@file_number& (0+255),b
 32909                           
 32910                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 32911  005D5C  0EB6               	movlw	low fat_rename_file@root
 32912  005D5E  6E37               	movwf	fat_get_file_information@data,c
 32913  005D60  0E00               	movlw	high fat_rename_file@root
 32914  005D62  6E38               	movwf	fat_get_file_information@data+1,c
 32915  005D64  0100               	movlb	0	; () banked
 32916  005D66  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 32917  005D68  ECE2  F032         	call	_fat_get_file_information
 32918                           
 32919                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 32920  005D6C  0E00               	movlw	0
 32921  005D6E  0100               	movlb	0	; () banked
 32922  005D70  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 32923  005D72                     l11258:
 32924                           
 32925                           ; BSR set to: 0
 32926  005D72  0E07               	movlw	7
 32927  005D74  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32928  005D76  D001               	goto	l1959
 32929  005D78  D014               	goto	u8510
 32930  005D7A                     l1959:
 32931                           
 32932                           ; BSR set to: 0
 32933                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 32934                           
 32935                           ; BSR set to: 0
 32936  005D7A  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 32937  005D7C  0D01               	mullw	1
 32938  005D7E  50F3               	movf	prodl,w,c
 32939  005D80  243F               	addwf	fat_rename_file@name,w,c
 32940  005D82  6ED9               	movwf	fsr2l,c
 32941  005D84  50F4               	movf	prodh,w,c
 32942  005D86  2040               	addwfc	fat_rename_file@name+1,w,c
 32943  005D88  6EDA               	movwf	fsr2h,c
 32944  005D8A  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 32945  005D8C  0D01               	mullw	1
 32946  005D8E  0EB6               	movlw	low fat_rename_file@root
 32947  005D90  24F3               	addwf	prodl,w,c
 32948  005D92  6EE1               	movwf	fsr1l,c
 32949  005D94  0E00               	movlw	high fat_rename_file@root
 32950  005D96  20F4               	addwfc	prodh,w,c
 32951  005D98  6EE2               	movwf	fsr1h,c
 32952  005D9A  CFDF FFE7          	movff	indf2,indf1
 32953                           
 32954                           ; BSR set to: 0
 32955  005D9E  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 32956  005DA0  D7E8               	goto	l11258
 32957  005DA2                     u8510:
 32958                           
 32959                           ; BSR set to: 0
 32960                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 32961                           
 32962                           ; BSR set to: 0
 32963  005DA2  0E00               	movlw	0
 32964  005DA4  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 32965  005DA6                     l11270:
 32966                           
 32967                           ; BSR set to: 0
 32968  005DA6  0E02               	movlw	2
 32969  005DA8  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32970  005DAA  D001               	goto	l1961
 32971  005DAC  D018               	goto	u8530
 32972  005DAE                     l1961:
 32973                           
 32974                           ; BSR set to: 0
 32975                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 32976                           
 32977                           ; BSR set to: 0
 32978  005DAE  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 32979  005DB0  0D01               	mullw	1
 32980  005DB2  50F3               	movf	prodl,w,c
 32981  005DB4  2441               	addwf	fat_rename_file@extension,w,c
 32982  005DB6  6ED9               	movwf	fsr2l,c
 32983  005DB8  50F4               	movf	prodh,w,c
 32984  005DBA  2042               	addwfc	fat_rename_file@extension+1,w,c
 32985  005DBC  6EDA               	movwf	fsr2h,c
 32986  005DBE  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 32987  005DC0  0D01               	mullw	1
 32988  005DC2  0E08               	movlw	8
 32989  005DC4  26F3               	addwf	prodl,f,c
 32990  005DC6  0E00               	movlw	0
 32991  005DC8  22F4               	addwfc	prodh,f,c
 32992  005DCA  0EB6               	movlw	low fat_rename_file@root
 32993  005DCC  24F3               	addwf	prodl,w,c
 32994  005DCE  6EE1               	movwf	fsr1l,c
 32995  005DD0  0E00               	movlw	high fat_rename_file@root
 32996  005DD2  20F4               	addwfc	prodh,w,c
 32997  005DD4  6EE2               	movwf	fsr1h,c
 32998  005DD6  CFDF FFE7          	movff	indf2,indf1
 32999                           
 33000                           ; BSR set to: 0
 33001  005DDA  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 33002  005DDC  D7E4               	goto	l11270
 33003  005DDE                     u8530:
 33004                           
 33005                           ; BSR set to: 0
 33006                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 33007                           
 33008                           ; BSR set to: 0
 33009  005DDE  0EB6               	movlw	low fat_rename_file@root
 33010  005DE0  6E29               	movwf	__write_root@data,c
 33011  005DE2  0E00               	movlw	high fat_rename_file@root
 33012  005DE4  6E2A               	movwf	__write_root@data+1,c
 33013  005DE6  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 33014  005DE8  EC52  F037         	call	__write_root
 33015  005DEC  0012               	return		;funcret
 33016  005DEE                     __end_of_fat_rename_file:
 33017                           	opt stack 0
 33018                           tosu	equ	0xFFF
 33019                           tosh	equ	0xFFE
 33020                           tosl	equ	0xFFD
 33021                           pclath	equ	0xFFA
 33022                           tblptru	equ	0xFF8
 33023                           tblptrh	equ	0xFF7
 33024                           tblptrl	equ	0xFF6
 33025                           tablat	equ	0xFF5
 33026                           prodh	equ	0xFF4
 33027                           prodl	equ	0xFF3
 33028                           intcon	equ	0xFF2
 33029                           intcon2	equ	0xFF1
 33030                           intcon3	equ	0xFF0
 33031                           indf0	equ	0xFEF
 33032                           postinc0	equ	0xFEE
 33033                           fsr0h	equ	0xFEA
 33034                           fsr0l	equ	0xFE9
 33035                           wreg	equ	0xFE8
 33036                           indf1	equ	0xFE7
 33037                           postdec1	equ	0xFE5
 33038                           plusw1	equ	0xFE3
 33039                           fsr1h	equ	0xFE2
 33040                           fsr1l	equ	0xFE1
 33041                           indf2	equ	0xFDF
 33042                           postinc2	equ	0xFDE
 33043                           postdec2	equ	0xFDD
 33044                           plusw2	equ	0xFDB
 33045                           fsr2h	equ	0xFDA
 33046                           fsr2l	equ	0xFD9
 33047                           status	equ	0xFD8
 33048                           
 33049 ;; *************** function __parse_file_modify *****************
 33050 ;; Defined at:
 33051 ;;		line 549 in file "api.c"
 33052 ;; Parameters:    Size  Location     Type
 33053 ;;  data            2    0[COMRAM] PTR unsigned char 
 33054 ;;		 -> RAM(3759), 
 33055 ;; Auto vars:     Size  Location     Type
 33056 ;;		None
 33057 ;; Return value:  Size  Location     Type
 33058 ;;                  1    wreg      unsigned char 
 33059 ;; Registers used:
 33060 ;;		wreg
 33061 ;; Tracked objects:
 33062 ;;		On entry : 0/0
 33063 ;;		On exit  : 0/0
 33064 ;;		Unchanged: 0/0
 33065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33070 ;;Total ram usage:        2 bytes
 33071 ;; Hardware stack levels used:    1
 33072 ;; This function calls:
 33073 ;;		Nothing
 33074 ;; This function is called by:
 33075 ;;		__parse_command_long
 33076 ;; This function uses a non-reentrant model
 33077 ;;
 33078                           
 33079                           	psect	text166
 33080  007E2A                     __ptext166:
 33081                           	opt stack 0
 33082  007E2A                     __parse_file_modify:
 33083                           	opt stack 28
 33084                           
 33085                           ;api.c: 553: return 65;
 33086                           
 33087                           ;incstack = 0
 33088  007E2A  0E41               	movlw	65
 33089  007E2C  0012               	return	
 33090  007E2E                     __end_of__parse_file_modify:
 33091                           	opt stack 0
 33092                           tosu	equ	0xFFF
 33093                           tosh	equ	0xFFE
 33094                           tosl	equ	0xFFD
 33095                           pclath	equ	0xFFA
 33096                           tblptru	equ	0xFF8
 33097                           tblptrh	equ	0xFF7
 33098                           tblptrl	equ	0xFF6
 33099                           tablat	equ	0xFF5
 33100                           prodh	equ	0xFF4
 33101                           prodl	equ	0xFF3
 33102                           intcon	equ	0xFF2
 33103                           intcon2	equ	0xFF1
 33104                           intcon3	equ	0xFF0
 33105                           indf0	equ	0xFEF
 33106                           postinc0	equ	0xFEE
 33107                           fsr0h	equ	0xFEA
 33108                           fsr0l	equ	0xFE9
 33109                           wreg	equ	0xFE8
 33110                           indf1	equ	0xFE7
 33111                           postdec1	equ	0xFE5
 33112                           plusw1	equ	0xFE3
 33113                           fsr1h	equ	0xFE2
 33114                           fsr1l	equ	0xFE1
 33115                           indf2	equ	0xFDF
 33116                           postinc2	equ	0xFDE
 33117                           postdec2	equ	0xFDD
 33118                           plusw2	equ	0xFDB
 33119                           fsr2h	equ	0xFDA
 33120                           fsr2l	equ	0xFD9
 33121                           status	equ	0xFD8
 33122                           
 33123 ;; *************** function __parse_file_delete *****************
 33124 ;; Defined at:
 33125 ;;		line 497 in file "api.c"
 33126 ;; Parameters:    Size  Location     Type
 33127 ;;  data            2   62[COMRAM] PTR unsigned char 
 33128 ;;		 -> RAM(3759), 
 33129 ;; Auto vars:     Size  Location     Type
 33130 ;;		None
 33131 ;; Return value:  Size  Location     Type
 33132 ;;                  1    wreg      unsigned char 
 33133 ;; Registers used:
 33134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33135 ;; Tracked objects:
 33136 ;;		On entry : 0/0
 33137 ;;		On exit  : 0/0
 33138 ;;		Unchanged: 0/0
 33139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33143 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33144 ;;Total ram usage:        3 bytes
 33145 ;; Hardware stack levels used:    1
 33146 ;; Hardware stack levels required when called:    7
 33147 ;; This function calls:
 33148 ;;		_fat_delete_file
 33149 ;; This function is called by:
 33150 ;;		__parse_command_long
 33151 ;; This function uses a non-reentrant model
 33152 ;;
 33153                           
 33154                           	psect	text167
 33155  007258                     __ptext167:
 33156                           	opt stack 0
 33157  007258                     __parse_file_delete:
 33158                           	opt stack 21
 33159                           
 33160                           ;api.c: 500: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 33161                           
 33162                           ;incstack = 0
 33163  007258  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 33164  00725C  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 33165  007260  0E51               	movlw	81
 33166  007262  18DE               	xorwf	postinc2,w,c
 33167  007264  A4D8               	btfss	status,2,c
 33168  007266  D014               	goto	u8990
 33169  007268  EE20 F002          	lfsr	2,2
 33170  00726C  503F               	movf	__parse_file_delete@data,w,c
 33171  00726E  26D9               	addwf	fsr2l,f,c
 33172  007270  5040               	movf	__parse_file_delete@data+1,w,c
 33173  007272  22DA               	addwfc	fsr2h,f,c
 33174  007274  0E66               	movlw	102
 33175  007276  18DE               	xorwf	postinc2,w,c
 33176  007278  A4D8               	btfss	status,2,c
 33177  00727A  D00A               	goto	u8990
 33178  00727C  EE20 F003          	lfsr	2,3
 33179  007280  503F               	movf	__parse_file_delete@data,w,c
 33180  007282  26D9               	addwf	fsr2l,f,c
 33181  007284  5040               	movf	__parse_file_delete@data+1,w,c
 33182  007286  22DA               	addwfc	fsr2h,f,c
 33183  007288  0EA0               	movlw	160
 33184  00728A  18DE               	xorwf	postinc2,w,c
 33185  00728C  B4D8               	btfsc	status,2,c
 33186  00728E  D002               	goto	l2606
 33187  007290                     u8990:
 33188                           
 33189                           ;api.c: 501: {;api.c: 502: return 4;
 33190  007290  0E04               	movlw	4
 33191  007292  0012               	return	
 33192  007294                     l2606:
 33193                           
 33194                           ;api.c: 503: };api.c: 506: fat_delete_file(data[1]);
 33195  007294  EE20 F001          	lfsr	2,1
 33196  007298  503F               	movf	__parse_file_delete@data,w,c
 33197  00729A  26D9               	addwf	fsr2l,f,c
 33198  00729C  5040               	movf	__parse_file_delete@data+1,w,c
 33199  00729E  22DA               	addwfc	fsr2h,f,c
 33200  0072A0  50DF               	movf	indf2,w,c
 33201  0072A2  EC0D  F035         	call	_fat_delete_file
 33202                           
 33203                           ;api.c: 507: return 4;
 33204  0072A6  0E04               	movlw	4
 33205  0072A8  0012               	return	
 33206  0072AA                     __end_of__parse_file_delete:
 33207                           	opt stack 0
 33208                           tosu	equ	0xFFF
 33209                           tosh	equ	0xFFE
 33210                           tosl	equ	0xFFD
 33211                           pclath	equ	0xFFA
 33212                           tblptru	equ	0xFF8
 33213                           tblptrh	equ	0xFF7
 33214                           tblptrl	equ	0xFF6
 33215                           tablat	equ	0xFF5
 33216                           prodh	equ	0xFF4
 33217                           prodl	equ	0xFF3
 33218                           intcon	equ	0xFF2
 33219                           intcon2	equ	0xFF1
 33220                           intcon3	equ	0xFF0
 33221                           indf0	equ	0xFEF
 33222                           postinc0	equ	0xFEE
 33223                           fsr0h	equ	0xFEA
 33224                           fsr0l	equ	0xFE9
 33225                           wreg	equ	0xFE8
 33226                           indf1	equ	0xFE7
 33227                           postdec1	equ	0xFE5
 33228                           plusw1	equ	0xFE3
 33229                           fsr1h	equ	0xFE2
 33230                           fsr1l	equ	0xFE1
 33231                           indf2	equ	0xFDF
 33232                           postinc2	equ	0xFDE
 33233                           postdec2	equ	0xFDD
 33234                           plusw2	equ	0xFDB
 33235                           fsr2h	equ	0xFDA
 33236                           fsr2l	equ	0xFD9
 33237                           status	equ	0xFD8
 33238                           
 33239 ;; *************** function _fat_delete_file *****************
 33240 ;; Defined at:
 33241 ;;		line 391 in file "fat16.c"
 33242 ;; Parameters:    Size  Location     Type
 33243 ;;  file_number     1    wreg     unsigned char 
 33244 ;; Auto vars:     Size  Location     Type
 33245 ;;  file_number     1   61[COMRAM] unsigned char 
 33246 ;;  first_cluste    2   59[COMRAM] unsigned int 
 33247 ;;  next_cluster    2   57[COMRAM] unsigned int 
 33248 ;; Return value:  Size  Location     Type
 33249 ;;                  1    wreg      void 
 33250 ;; Registers used:
 33251 ;;		wreg, status,2, status,0, cstack
 33252 ;; Tracked objects:
 33253 ;;		On entry : 0/0
 33254 ;;		On exit  : 0/0
 33255 ;;		Unchanged: 0/0
 33256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33258 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33260 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33261 ;;Total ram usage:        5 bytes
 33262 ;; Hardware stack levels used:    1
 33263 ;; Hardware stack levels required when called:    6
 33264 ;; This function calls:
 33265 ;;		__delete_root
 33266 ;;		__get_first_cluster
 33267 ;;		__read_fat
 33268 ;;		__root_is_available
 33269 ;;		__write_fat
 33270 ;; This function is called by:
 33271 ;;		__parse_file_delete
 33272 ;; This function uses a non-reentrant model
 33273 ;;
 33274                           
 33275                           	psect	text168
 33276  006A1A                     __ptext168:
 33277                           	opt stack 0
 33278  006A1A                     _fat_delete_file:
 33279                           	opt stack 21
 33280                           
 33281                           ;incstack = 0
 33282                           ;fat_delete_file@file_number stored from wreg
 33283  006A1A  6E3E               	movwf	fat_delete_file@file_number,c
 33284                           
 33285                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 33286  006A1C  0E3F               	movlw	63
 33287  006A1E  643E               	cpfsgt	fat_delete_file@file_number,c
 33288  006A20  D001               	goto	l1933
 33289  006A22  0012               	return	
 33290  006A24                     l1933:
 33291                           
 33292                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 33293  006A24  503E               	movf	fat_delete_file@file_number,w,c
 33294  006A26  ECA7  F032         	call	__root_is_available
 33295  006A2A  0900               	iorlw	0
 33296  006A2C  A4D8               	btfss	status,2,c
 33297  006A2E  0012               	return	
 33298                           
 33299                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 33300                           
 33301                           ;fat16.c: 405: {;fat16.c: 407: return;
 33302  006A30  503E               	movf	fat_delete_file@file_number,w,c
 33303  006A32  EC42  F035         	call	__get_first_cluster
 33304  006A36  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 33305  006A3A  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 33306  006A3E                     l1936:
 33307                           
 33308                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 33309  006A3E  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 33310  006A42  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 33311  006A46  ECED  F039         	call	__read_fat	;wreg free
 33312  006A4A  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 33313  006A4E  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 33314                           
 33315                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 33316  006A52  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 33317  006A56  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 33318  006A5A  0E00               	movlw	0
 33319  006A5C  6E2C               	movwf	__write_fat@value+1,c
 33320  006A5E  0E00               	movlw	0
 33321  006A60  6E2B               	movwf	__write_fat@value,c
 33322  006A62  ECB6  F03A         	call	__write_fat	;wreg free
 33323                           
 33324                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 33325  006A66  0EF1               	movlw	241
 33326  006A68  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 33327  006A6A  0EFF               	movlw	255
 33328  006A6C  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 33329  006A6E  B0D8               	btfsc	status,0,c
 33330  006A70  D005               	goto	l1938
 33331                           
 33332                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 33333                           
 33334                           ;fat16.c: 430: }
 33335                           
 33336                           ;fat16.c: 428: {;fat16.c: 429: break;
 33337  006A72  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 33338  006A76  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 33339  006A7A  D7E1               	goto	l1936
 33340  006A7C                     l1938:
 33341                           
 33342                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 33343  006A7C  503E               	movf	fat_delete_file@file_number,w,c
 33344  006A7E  EC9F  F036         	call	__delete_root
 33345  006A82  0012               	return		;funcret
 33346  006A84                     __end_of_fat_delete_file:
 33347                           	opt stack 0
 33348                           tosu	equ	0xFFF
 33349                           tosh	equ	0xFFE
 33350                           tosl	equ	0xFFD
 33351                           pclath	equ	0xFFA
 33352                           tblptru	equ	0xFF8
 33353                           tblptrh	equ	0xFF7
 33354                           tblptrl	equ	0xFF6
 33355                           tablat	equ	0xFF5
 33356                           prodh	equ	0xFF4
 33357                           prodl	equ	0xFF3
 33358                           intcon	equ	0xFF2
 33359                           intcon2	equ	0xFF1
 33360                           intcon3	equ	0xFF0
 33361                           indf0	equ	0xFEF
 33362                           postinc0	equ	0xFEE
 33363                           fsr0h	equ	0xFEA
 33364                           fsr0l	equ	0xFE9
 33365                           wreg	equ	0xFE8
 33366                           indf1	equ	0xFE7
 33367                           postdec1	equ	0xFE5
 33368                           plusw1	equ	0xFE3
 33369                           fsr1h	equ	0xFE2
 33370                           fsr1l	equ	0xFE1
 33371                           indf2	equ	0xFDF
 33372                           postinc2	equ	0xFDE
 33373                           postdec2	equ	0xFDD
 33374                           plusw2	equ	0xFDB
 33375                           fsr2h	equ	0xFDA
 33376                           fsr2l	equ	0xFD9
 33377                           status	equ	0xFD8
 33378                           
 33379 ;; *************** function __get_first_cluster *****************
 33380 ;; Defined at:
 33381 ;;		line 205 in file "fat16.c"
 33382 ;; Parameters:    Size  Location     Type
 33383 ;;  slot            1    wreg     unsigned char 
 33384 ;; Auto vars:     Size  Location     Type
 33385 ;;  slot            1   56[COMRAM] unsigned char 
 33386 ;;  first_cluste    2   54[COMRAM] unsigned int 
 33387 ;;  offset          2   52[COMRAM] unsigned int 
 33388 ;;  sector          2   50[COMRAM] unsigned int 
 33389 ;; Return value:  Size  Location     Type
 33390 ;;                  2   47[COMRAM] unsigned int 
 33391 ;; Registers used:
 33392 ;;		wreg, status,2, status,0, cstack
 33393 ;; Tracked objects:
 33394 ;;		On entry : 0/0
 33395 ;;		On exit  : 0/0
 33396 ;;		Unchanged: 0/0
 33397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33399 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33401 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33402 ;;Total ram usage:       10 bytes
 33403 ;; Hardware stack levels used:    1
 33404 ;; Hardware stack levels required when called:    5
 33405 ;; This function calls:
 33406 ;;		_flash_partial_read
 33407 ;; This function is called by:
 33408 ;;		_fat_delete_file
 33409 ;; This function uses a non-reentrant model
 33410 ;;
 33411                           
 33412                           	psect	text169
 33413  006A84                     __ptext169:
 33414                           	opt stack 0
 33415  006A84                     __get_first_cluster:
 33416                           	opt stack 21
 33417                           
 33418                           ;incstack = 0
 33419                           ;__get_first_cluster@slot stored from wreg
 33420  006A84  6E39               	movwf	__get_first_cluster@slot,c
 33421                           
 33422                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 33423  006A86  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 33424  006A8A  3A32               	swapf	??__get_first_cluster,f,c
 33425  006A8C  0E0F               	movlw	15
 33426  006A8E  1632               	andwf	??__get_first_cluster,f,c
 33427  006A90  5032               	movf	??__get_first_cluster,w,c
 33428  006A92  6E33               	movwf	__get_first_cluster@sector,c
 33429  006A94  6A34               	clrf	__get_first_cluster@sector+1,c
 33430                           
 33431                           ;fat16.c: 211: sector += 34;
 33432  006A96  0E22               	movlw	34
 33433  006A98  2633               	addwf	__get_first_cluster@sector,f,c
 33434  006A9A  0E00               	movlw	0
 33435  006A9C  2234               	addwfc	__get_first_cluster@sector+1,f,c
 33436                           
 33437                           ;fat16.c: 212: offset = slot & 0b1111;
 33438  006A9E  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 33439  006AA2  0E0F               	movlw	15
 33440  006AA4  1632               	andwf	??__get_first_cluster,f,c
 33441  006AA6  5032               	movf	??__get_first_cluster,w,c
 33442  006AA8  6E35               	movwf	__get_first_cluster@offset,c
 33443  006AAA  6A36               	clrf	__get_first_cluster@offset+1,c
 33444                           
 33445                           ;fat16.c: 213: offset <<= 5;
 33446  006AAC  0E05               	movlw	5
 33447  006AAE                     u7595:
 33448  006AAE  90D8               	bcf	status,0,c
 33449  006AB0  3635               	rlcf	__get_first_cluster@offset,f,c
 33450  006AB2  3636               	rlcf	__get_first_cluster@offset+1,f,c
 33451  006AB4  2EE8               	decfsz	wreg,f,c
 33452  006AB6  D7FB               	goto	u7595
 33453                           
 33454                           ;fat16.c: 214: offset += 26;
 33455  006AB8  0E1A               	movlw	26
 33456  006ABA  2635               	addwf	__get_first_cluster@offset,f,c
 33457  006ABC  0E00               	movlw	0
 33458  006ABE  2236               	addwfc	__get_first_cluster@offset+1,f,c
 33459                           
 33460                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 33461  006AC0  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 33462  006AC4  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 33463  006AC8  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 33464  006ACC  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 33465  006AD0  0E00               	movlw	0
 33466  006AD2  6E2D               	movwf	flash_partial_read@length+1,c
 33467  006AD4  0E02               	movlw	2
 33468  006AD6  6E2C               	movwf	flash_partial_read@length,c
 33469  006AD8  0E37               	movlw	low __get_first_cluster@first_cluster
 33470  006ADA  6E2E               	movwf	flash_partial_read@data,c
 33471  006ADC  0E00               	movlw	high __get_first_cluster@first_cluster
 33472  006ADE  6E2F               	movwf	flash_partial_read@data+1,c
 33473  006AE0  EC52  F03C         	call	_flash_partial_read	;wreg free
 33474                           
 33475                           ;fat16.c: 216: return first_cluster;
 33476  006AE4  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 33477  006AE8  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 33478  006AEC  0012               	return	
 33479  006AEE                     __end_of__get_first_cluster:
 33480                           	opt stack 0
 33481                           tosu	equ	0xFFF
 33482                           tosh	equ	0xFFE
 33483                           tosl	equ	0xFFD
 33484                           pclath	equ	0xFFA
 33485                           tblptru	equ	0xFF8
 33486                           tblptrh	equ	0xFF7
 33487                           tblptrl	equ	0xFF6
 33488                           tablat	equ	0xFF5
 33489                           prodh	equ	0xFF4
 33490                           prodl	equ	0xFF3
 33491                           intcon	equ	0xFF2
 33492                           intcon2	equ	0xFF1
 33493                           intcon3	equ	0xFF0
 33494                           indf0	equ	0xFEF
 33495                           postinc0	equ	0xFEE
 33496                           fsr0h	equ	0xFEA
 33497                           fsr0l	equ	0xFE9
 33498                           wreg	equ	0xFE8
 33499                           indf1	equ	0xFE7
 33500                           postdec1	equ	0xFE5
 33501                           plusw1	equ	0xFE3
 33502                           fsr1h	equ	0xFE2
 33503                           fsr1l	equ	0xFE1
 33504                           indf2	equ	0xFDF
 33505                           postinc2	equ	0xFDE
 33506                           postdec2	equ	0xFDD
 33507                           plusw2	equ	0xFDB
 33508                           fsr2h	equ	0xFDA
 33509                           fsr2l	equ	0xFD9
 33510                           status	equ	0xFD8
 33511                           
 33512 ;; *************** function __delete_root *****************
 33513 ;; Defined at:
 33514 ;;		line 192 in file "fat16.c"
 33515 ;; Parameters:    Size  Location     Type
 33516 ;;  slot            1    wreg     unsigned char 
 33517 ;; Auto vars:     Size  Location     Type
 33518 ;;  slot            1   46[COMRAM] unsigned char 
 33519 ;;  offset          2   43[COMRAM] unsigned int 
 33520 ;;  root_sector     2   41[COMRAM] unsigned int 
 33521 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 33522 ;; Return value:  Size  Location     Type
 33523 ;;                  1    wreg      void 
 33524 ;; Registers used:
 33525 ;;		wreg, status,2, status,0, cstack
 33526 ;; Tracked objects:
 33527 ;;		On entry : 0/0
 33528 ;;		On exit  : 0/0
 33529 ;;		Unchanged: 0/0
 33530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33532 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33534 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33535 ;;Total ram usage:        7 bytes
 33536 ;; Hardware stack levels used:    1
 33537 ;; Hardware stack levels required when called:    5
 33538 ;; This function calls:
 33539 ;;		_flash_partial_write
 33540 ;; This function is called by:
 33541 ;;		_fat_delete_file
 33542 ;; This function uses a non-reentrant model
 33543 ;;
 33544                           
 33545                           	psect	text170
 33546  006D3E                     __ptext170:
 33547                           	opt stack 0
 33548  006D3E                     __delete_root:
 33549                           	opt stack 21
 33550                           
 33551                           ;incstack = 0
 33552                           ;__delete_root@slot stored from wreg
 33553  006D3E  6E2F               	movwf	__delete_root@slot,c
 33554                           
 33555                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 34;
 33556  006D40  C02F  F029         	movff	__delete_root@slot,??__delete_root
 33557  006D44  3A29               	swapf	??__delete_root,f,c
 33558  006D46  0E0F               	movlw	15
 33559  006D48  1629               	andwf	??__delete_root,f,c
 33560  006D4A  0E22               	movlw	34
 33561  006D4C  2429               	addwf	??__delete_root,w,c
 33562  006D4E  6E2A               	movwf	__delete_root@root_sector,c
 33563  006D50  6A2B               	clrf	__delete_root@root_sector+1,c
 33564  006D52  0E00               	movlw	0
 33565  006D54  222B               	addwfc	__delete_root@root_sector+1,f,c
 33566                           
 33567                           ;fat16.c: 199: offset = (slot & 0b1111);
 33568  006D56  C02F  F029         	movff	__delete_root@slot,??__delete_root
 33569  006D5A  0E0F               	movlw	15
 33570  006D5C  1629               	andwf	??__delete_root,f,c
 33571  006D5E  5029               	movf	??__delete_root,w,c
 33572  006D60  6E2C               	movwf	__delete_root@offset,c
 33573  006D62  6A2D               	clrf	__delete_root@offset+1,c
 33574                           
 33575                           ;fat16.c: 200: offset <<= 5;
 33576  006D64  0E05               	movlw	5
 33577  006D66                     u7585:
 33578  006D66  90D8               	bcf	status,0,c
 33579  006D68  362C               	rlcf	__delete_root@offset,f,c
 33580  006D6A  362D               	rlcf	__delete_root@offset+1,f,c
 33581  006D6C  2EE8               	decfsz	wreg,f,c
 33582  006D6E  D7FB               	goto	u7585
 33583                           
 33584                           ;fat16.c: 201: deleted_value = 0xE5;
 33585  006D70  0EE5               	movlw	229
 33586  006D72  6E2E               	movwf	__delete_root@deleted_value,c
 33587                           
 33588                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 33589  006D74  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 33590  006D78  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 33591  006D7C  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 33592  006D80  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 33593  006D84  0E00               	movlw	0
 33594  006D86  6E25               	movwf	flash_partial_write@length+1,c
 33595  006D88  0E01               	movlw	1
 33596  006D8A  6E24               	movwf	flash_partial_write@length,c
 33597  006D8C  0E2E               	movlw	low __delete_root@deleted_value
 33598  006D8E  6E26               	movwf	flash_partial_write@data,c
 33599  006D90  0E00               	movlw	high __delete_root@deleted_value
 33600  006D92  6E27               	movwf	flash_partial_write@data+1,c
 33601  006D94  ECC7  F033         	call	_flash_partial_write	;wreg free
 33602  006D98  0012               	return		;funcret
 33603  006D9A                     __end_of__delete_root:
 33604                           	opt stack 0
 33605                           tosu	equ	0xFFF
 33606                           tosh	equ	0xFFE
 33607                           tosl	equ	0xFFD
 33608                           pclath	equ	0xFFA
 33609                           tblptru	equ	0xFF8
 33610                           tblptrh	equ	0xFF7
 33611                           tblptrl	equ	0xFF6
 33612                           tablat	equ	0xFF5
 33613                           prodh	equ	0xFF4
 33614                           prodl	equ	0xFF3
 33615                           intcon	equ	0xFF2
 33616                           intcon2	equ	0xFF1
 33617                           intcon3	equ	0xFF0
 33618                           indf0	equ	0xFEF
 33619                           postinc0	equ	0xFEE
 33620                           fsr0h	equ	0xFEA
 33621                           fsr0l	equ	0xFE9
 33622                           wreg	equ	0xFE8
 33623                           indf1	equ	0xFE7
 33624                           postdec1	equ	0xFE5
 33625                           plusw1	equ	0xFE3
 33626                           fsr1h	equ	0xFE2
 33627                           fsr1l	equ	0xFE1
 33628                           indf2	equ	0xFDF
 33629                           postinc2	equ	0xFDE
 33630                           postdec2	equ	0xFDD
 33631                           plusw2	equ	0xFDB
 33632                           fsr2h	equ	0xFDA
 33633                           fsr2l	equ	0xFD9
 33634                           status	equ	0xFD8
 33635                           
 33636 ;; *************** function __parse_file_create *****************
 33637 ;; Defined at:
 33638 ;;		line 510 in file "api.c"
 33639 ;; Parameters:    Size  Location     Type
 33640 ;;  data            2   79[COMRAM] PTR unsigned char 
 33641 ;;		 -> RAM(3759), 
 33642 ;; Auto vars:     Size  Location     Type
 33643 ;;		None
 33644 ;; Return value:  Size  Location     Type
 33645 ;;                  1    wreg      unsigned char 
 33646 ;; Registers used:
 33647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33648 ;; Tracked objects:
 33649 ;;		On entry : 0/0
 33650 ;;		On exit  : 0/0
 33651 ;;		Unchanged: 0/0
 33652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33656 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33657 ;;Total ram usage:        3 bytes
 33658 ;; Hardware stack levels used:    1
 33659 ;; Hardware stack levels required when called:    8
 33660 ;; This function calls:
 33661 ;;		_fat_create_file
 33662 ;; This function is called by:
 33663 ;;		__parse_command_long
 33664 ;; This function uses a non-reentrant model
 33665 ;;
 33666                           
 33667                           	psect	text171
 33668  0068DA                     __ptext171:
 33669                           	opt stack 0
 33670  0068DA                     __parse_file_create:
 33671                           	opt stack 20
 33672                           
 33673                           ;api.c: 513: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 33674                           
 33675                           ;incstack = 0
 33676  0068DA  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 33677  0068DE  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 33678  0068E2  0E52               	movlw	82
 33679  0068E4  18DE               	xorwf	postinc2,w,c
 33680  0068E6  A4D8               	btfss	status,2,c
 33681  0068E8  D014               	goto	u9020
 33682  0068EA  EE20 F00C          	lfsr	2,12
 33683  0068EE  5050               	movf	__parse_file_create@data,w,c
 33684  0068F0  26D9               	addwf	fsr2l,f,c
 33685  0068F2  5051               	movf	__parse_file_create@data+1,w,c
 33686  0068F4  22DA               	addwfc	fsr2h,f,c
 33687  0068F6  0EBD               	movlw	189
 33688  0068F8  18DE               	xorwf	postinc2,w,c
 33689  0068FA  A4D8               	btfss	status,2,c
 33690  0068FC  D00A               	goto	u9020
 33691  0068FE  EE20 F00D          	lfsr	2,13
 33692  006902  5050               	movf	__parse_file_create@data,w,c
 33693  006904  26D9               	addwf	fsr2l,f,c
 33694  006906  5051               	movf	__parse_file_create@data+1,w,c
 33695  006908  22DA               	addwfc	fsr2h,f,c
 33696  00690A  0E4F               	movlw	79
 33697  00690C  18DE               	xorwf	postinc2,w,c
 33698  00690E  B4D8               	btfsc	status,2,c
 33699  006910  D002               	goto	l2612
 33700  006912                     u9020:
 33701                           
 33702                           ;api.c: 514: {;api.c: 515: return 14;
 33703  006912  0E0E               	movlw	14
 33704  006914  0012               	return	
 33705  006916                     l2612:
 33706                           
 33707                           ;api.c: 516: };api.c: 519: fat_create_file(&data[1], &data[9], 0);
 33708  006916  0E01               	movlw	1
 33709  006918  2450               	addwf	__parse_file_create@data,w,c
 33710  00691A  6E44               	movwf	fat_create_file@name,c
 33711  00691C  0E00               	movlw	0
 33712  00691E  2051               	addwfc	__parse_file_create@data+1,w,c
 33713  006920  6E45               	movwf	fat_create_file@name+1,c
 33714  006922  0E09               	movlw	9
 33715  006924  2450               	addwf	__parse_file_create@data,w,c
 33716  006926  6E46               	movwf	fat_create_file@extension,c
 33717  006928  0E00               	movlw	0
 33718  00692A  2051               	addwfc	__parse_file_create@data+1,w,c
 33719  00692C  6E47               	movwf	fat_create_file@extension+1,c
 33720  00692E  0E00               	movlw	0
 33721  006930  6E48               	movwf	fat_create_file@size,c
 33722  006932  0E00               	movlw	0
 33723  006934  6E49               	movwf	fat_create_file@size+1,c
 33724  006936  0E00               	movlw	0
 33725  006938  6E4A               	movwf	fat_create_file@size+2,c
 33726  00693A  0E00               	movlw	0
 33727  00693C  6E4B               	movwf	fat_create_file@size+3,c
 33728  00693E  EC64  F017         	call	_fat_create_file	;wreg free
 33729                           
 33730                           ;api.c: 520: return 14;
 33731  006942  0E0E               	movlw	14
 33732  006944  0012               	return	
 33733  006946                     __end_of__parse_file_create:
 33734                           	opt stack 0
 33735                           tosu	equ	0xFFF
 33736                           tosh	equ	0xFFE
 33737                           tosl	equ	0xFFD
 33738                           pclath	equ	0xFFA
 33739                           tblptru	equ	0xFF8
 33740                           tblptrh	equ	0xFF7
 33741                           tblptrl	equ	0xFF6
 33742                           tablat	equ	0xFF5
 33743                           prodh	equ	0xFF4
 33744                           prodl	equ	0xFF3
 33745                           intcon	equ	0xFF2
 33746                           intcon2	equ	0xFF1
 33747                           intcon3	equ	0xFF0
 33748                           indf0	equ	0xFEF
 33749                           postinc0	equ	0xFEE
 33750                           fsr0h	equ	0xFEA
 33751                           fsr0l	equ	0xFE9
 33752                           wreg	equ	0xFE8
 33753                           indf1	equ	0xFE7
 33754                           postdec1	equ	0xFE5
 33755                           plusw1	equ	0xFE3
 33756                           fsr1h	equ	0xFE2
 33757                           fsr1l	equ	0xFE1
 33758                           indf2	equ	0xFDF
 33759                           postinc2	equ	0xFDE
 33760                           postdec2	equ	0xFDD
 33761                           plusw2	equ	0xFDB
 33762                           fsr2h	equ	0xFDA
 33763                           fsr2l	equ	0xFD9
 33764                           status	equ	0xFD8
 33765                           
 33766 ;; *************** function _fat_create_file *****************
 33767 ;; Defined at:
 33768 ;;		line 309 in file "fat16.c"
 33769 ;; Parameters:    Size  Location     Type
 33770 ;;  name            2   67[COMRAM] PTR unsigned char 
 33771 ;;		 -> RAM(3759), 
 33772 ;;  extension       2   69[COMRAM] PTR unsigned char 
 33773 ;;		 -> RAM(3759), 
 33774 ;;  size            4   71[COMRAM] unsigned long 
 33775 ;; Auto vars:     Size  Location     Type
 33776 ;;  root_entry     32    9[BANK0 ] struct .
 33777 ;;  cluster         2    7[BANK0 ] unsigned int 
 33778 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 33779 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 33780 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 33781 ;;  root_slot       1    4[BANK0 ] unsigned char 
 33782 ;; Return value:  Size  Location     Type
 33783 ;;                  1    wreg      unsigned char 
 33784 ;; Registers used:
 33785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33786 ;; Tracked objects:
 33787 ;;		On entry : 0/0
 33788 ;;		On exit  : 0/0
 33789 ;;		Unchanged: 0/0
 33790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33791 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33792 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33794 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33795 ;;Total ram usage:       53 bytes
 33796 ;; Hardware stack levels used:    1
 33797 ;; Hardware stack levels required when called:    7
 33798 ;; This function calls:
 33799 ;;		__get_available_root_entry
 33800 ;;		__get_date
 33801 ;;		__get_empty_cluster
 33802 ;;		__get_time
 33803 ;;		__write_fat
 33804 ;;		__write_root
 33805 ;;		_fat_find_file
 33806 ;;		_fat_get_empty_clusters
 33807 ;;		_memcpy
 33808 ;; This function is called by:
 33809 ;;		__parse_file_create
 33810 ;; This function uses a non-reentrant model
 33811 ;;
 33812                           
 33813                           	psect	text172
 33814  002EC8                     __ptext172:
 33815                           	opt stack 0
 33816  002EC8                     _fat_create_file:
 33817                           	opt stack 20
 33818                           
 33819                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 33820                           
 33821                           ;incstack = 0
 33822  002EC8  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 33823  002ECC  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 33824  002ED0  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 33825  002ED4  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 33826  002ED8  EC63  F029         	call	_fat_find_file	;wreg free
 33827  002EDC  0AFF               	xorlw	255
 33828  002EDE  A4D8               	btfss	status,2,c
 33829  002EE0  0012               	return	
 33830                           
 33831                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 33832                           
 33833                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 33834  002EE2  EC92  F03D         	call	__get_available_root_entry	;wreg free
 33835  002EE6  0100               	movlb	0	; () banked
 33836  002EE8  6FB9               	movwf	fat_create_file@root_slot& (0+255),b
 33837                           
 33838                           ; BSR set to: 0
 33839                           ;fat16.c: 330: if(root_slot == 0xFF)
 33840  002EEA  29B9               	incf	fat_create_file@root_slot& (0+255),w,b
 33841  002EEC  B4D8               	btfsc	status,2,c
 33842  002EEE  0012               	return	
 33843                           
 33844                           ; BSR set to: 0
 33845                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 33846                           
 33847                           ; BSR set to: 0
 33848                           
 33849                           ; BSR set to: 0
 33850                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 33851  002EF0  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 33852  002EF4  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 33853  002EF8  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 33854  002EFC  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 33855  002F00  0E0A               	movlw	10
 33856  002F02  D005               	goto	u8370
 33857  002F04                     u8375:
 33858  002F04  90D8               	bcf	status,0,c
 33859  002F06  324F               	rrcf	??_fat_create_file+3,f,c
 33860  002F08  324E               	rrcf	??_fat_create_file+2,f,c
 33861  002F0A  324D               	rrcf	??_fat_create_file+1,f,c
 33862  002F0C  324C               	rrcf	??_fat_create_file,f,c
 33863  002F0E                     u8370:
 33864  002F0E  2EE8               	decfsz	wreg,f,c
 33865  002F10  D7F9               	goto	u8375
 33866  002F12  0E01               	movlw	1
 33867  002F14  244C               	addwf	??_fat_create_file,w,c
 33868  002F16  6FBA               	movwf	fat_create_file@number_of_clusters& (0+255),b
 33869  002F18  0E00               	movlw	0
 33870  002F1A  204D               	addwfc	??_fat_create_file+1,w,c
 33871  002F1C  6FBB               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 33872                           
 33873                           ; BSR set to: 0
 33874                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 33875  002F1E  C0BA  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 33876  002F22  C0BB  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 33877  002F26  EC1B  F030         	call	_fat_get_empty_clusters	;wreg free
 33878  002F2A  0100               	movlb	0	; () banked
 33879  002F2C  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33880  002F2E  1830               	xorwf	?_fat_get_empty_clusters,w,c
 33881  002F30  E105               	bnz	u8380
 33882  002F32  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33883  002F34  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 33884  002F36  A4D8               	btfss	status,2,c
 33885  002F38  0012               	return	
 33886  002F3A  D001               	goto	l1925
 33887  002F3C                     u8380:
 33888                           
 33889                           ; BSR set to: 0
 33890                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 33891  002F3C  0012               	return	
 33892  002F3E                     l1925:
 33893                           
 33894                           ; BSR set to: 0
 33895                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 33896                           
 33897                           ; BSR set to: 0
 33898  002F3E  0E00               	movlw	0
 33899  002F40  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 33900  002F42  0E02               	movlw	2
 33901  002F44  6E30               	movwf	__get_empty_cluster@first_cluster,c
 33902  002F46  EC1C  F033         	call	__get_empty_cluster	;wreg free
 33903  002F4A  C030  F0BC         	movff	?__get_empty_cluster,fat_create_file@cluster
 33904  002F4E  C031  F0BD         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 33905                           
 33906                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 33907  002F52  0EBE               	movlw	low fat_create_file@root_entry
 33908  002F54  6E01               	movwf	memcpy@d1,c
 33909  002F56  0E00               	movlw	high fat_create_file@root_entry
 33910  002F58  6E02               	movwf	memcpy@d1+1,c
 33911  002F5A  C044  F003         	movff	fat_create_file@name,memcpy@s1
 33912  002F5E  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 33913  002F62  5003               	movf	memcpy@s1,w,c
 33914  002F64  1004               	iorwf	memcpy@s1+1,w,c
 33915  002F66  A4D8               	btfss	status,2,c
 33916  002F68  0E20               	movlw	32
 33917  002F6A  6E05               	movwf	memcpy@s1+2,c
 33918  002F6C  0E00               	movlw	0
 33919  002F6E  6E07               	movwf	memcpy@n+1,c
 33920  002F70  0E08               	movlw	8
 33921  002F72  6E06               	movwf	memcpy@n,c
 33922  002F74  ECAA  F035         	call	_memcpy	;wreg free
 33923                           
 33924                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 33925  002F78  0EC6               	movlw	low (fat_create_file@root_entry+8)
 33926  002F7A  6E01               	movwf	memcpy@d1,c
 33927  002F7C  0E00               	movlw	high (fat_create_file@root_entry+8)
 33928  002F7E  6E02               	movwf	memcpy@d1+1,c
 33929  002F80  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 33930  002F84  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 33931  002F88  5003               	movf	memcpy@s1,w,c
 33932  002F8A  1004               	iorwf	memcpy@s1+1,w,c
 33933  002F8C  A4D8               	btfss	status,2,c
 33934  002F8E  0E20               	movlw	32
 33935  002F90  6E05               	movwf	memcpy@s1+2,c
 33936  002F92  0E00               	movlw	0
 33937  002F94  6E07               	movwf	memcpy@n+1,c
 33938  002F96  0E03               	movlw	3
 33939  002F98  6E06               	movwf	memcpy@n,c
 33940  002F9A  ECAA  F035         	call	_memcpy	;wreg free
 33941                           
 33942                           ;fat16.c: 352: root_entry.attributes = 0x00;
 33943  002F9E  0E00               	movlw	0
 33944  002FA0  0100               	movlb	0	; () banked
 33945  002FA2  6FC9               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 33946                           
 33947                           ; BSR set to: 0
 33948                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 33949  002FA4  0E00               	movlw	0
 33950  002FA6  6FCA               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 33951                           
 33952                           ; BSR set to: 0
 33953                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 33954  002FA8  0E00               	movlw	0
 33955  002FAA  6FCB               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 33956                           
 33957                           ; BSR set to: 0
 33958                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 33959  002FAC  ECE6  F03E         	call	__get_time	;wreg free
 33960  002FB0  C001  F0CC         	movff	?__get_time,fat_create_file@root_entry+14
 33961  002FB4  C002  F0CD         	movff	?__get_time+1,fat_create_file@root_entry+15
 33962                           
 33963                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 33964  002FB8  ECEB  F03E         	call	__get_date	;wreg free
 33965  002FBC  C001  F0CE         	movff	?__get_date,fat_create_file@root_entry+16
 33966  002FC0  C002  F0CF         	movff	?__get_date+1,fat_create_file@root_entry+17
 33967                           
 33968                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 33969  002FC4  C0CE  F0D0         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 33970  002FC8  C0CF  F0D1         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 33971                           
 33972                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 33973  002FCC  0E00               	movlw	0
 33974  002FCE  0100               	movlb	0	; () banked
 33975  002FD0  6FD3               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 33976  002FD2  0E00               	movlw	0
 33977  002FD4  6FD2               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 33981  002FD6  C0CC  F0D4         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 33982  002FDA  C0CD  F0D5         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 33983                           
 33984                           ; BSR set to: 0
 33985                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 33986  002FDE  C0CE  F0D6         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 33987  002FE2  C0CF  F0D7         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 33988                           
 33989                           ; BSR set to: 0
 33990                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 33991  002FE6  C0BC  F0D8         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 33992  002FEA  C0BD  F0D9         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 33993                           
 33994                           ; BSR set to: 0
 33995                           ;fat16.c: 362: root_entry.fileSize = size;
 33996  002FEE  C048  F0DA         	movff	fat_create_file@size,fat_create_file@root_entry+28
 33997  002FF2  C049  F0DB         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 33998  002FF6  C04A  F0DC         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 33999  002FFA  C04B  F0DD         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 34000                           
 34001                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 34002  002FFE  0EBE               	movlw	low fat_create_file@root_entry
 34003  003000  6E29               	movwf	__write_root@data,c
 34004  003002  0E00               	movlw	high fat_create_file@root_entry
 34005  003004  6E2A               	movwf	__write_root@data+1,c
 34006  003006  51B9               	movf	fat_create_file@root_slot& (0+255),w,b
 34007  003008  EC52  F037         	call	__write_root
 34008                           
 34009                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 34010  00300C  0E00               	movlw	0
 34011  00300E  0100               	movlb	0	; () banked
 34012  003010  6FB8               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 34013  003012  0E01               	movlw	1
 34014  003014  6FB7               	movwf	fat_create_file@cluster_count& (0+255),b
 34015  003016  D02F               	goto	l1926
 34016  003018                     
 34017                           ; BSR set to: 0
 34018                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 34019                           
 34020                           ; BSR set to: 0
 34021  003018  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 34022  00301A  19B7               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 34023  00301C  E10E               	bnz	l11170
 34024  00301E  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34025  003020  19B8               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 34026  003022  A4D8               	btfss	status,2,c
 34027  003024  D00A               	goto	l1928
 34028                           
 34029                           ; BSR set to: 0
 34030                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 34031  003026  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 34032  00302A  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 34033  00302E  0EFF               	movlw	255
 34034  003030  6E2C               	movwf	__write_fat@value+1,c
 34035  003032  682B               	setf	__write_fat@value,c
 34036  003034  ECB6  F03A         	call	__write_fat	;wreg free
 34037                           
 34038                           ;fat16.c: 377: }
 34039  003038  D01B               	goto	l1929
 34040  00303A                     l1928:
 34041  00303A                     l11170:
 34042                           
 34043                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 34044  00303A  0E01               	movlw	1
 34045  00303C  0100               	movlb	0	; () banked
 34046  00303E  25BC               	addwf	fat_create_file@cluster& (0+255),w,b
 34047  003040  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34048  003042  0E00               	movlw	0
 34049  003044  21BD               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 34050  003046  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34051  003048  EC1C  F033         	call	__get_empty_cluster	;wreg free
 34052  00304C  C030  F0B5         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 34053  003050  C031  F0B6         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 34054                           
 34055                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 34056  003054  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 34057  003058  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 34058  00305C  C0B5  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 34059  003060  C0B6  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 34060  003064  ECB6  F03A         	call	__write_fat	;wreg free
 34061                           
 34062                           ;fat16.c: 385: cluster = next_cluster;
 34063  003068  C0B5  F0BC         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 34064  00306C  C0B6  F0BD         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 34065  003070                     l1929:
 34066  003070  0100               	movlb	0	; () banked
 34067  003072  4BB7               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 34068  003074  2BB8               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 34069  003076                     l1926:
 34070                           
 34071                           ; BSR set to: 0
 34072                           
 34073                           ; BSR set to: 0
 34074  003076  51B7               	movf	fat_create_file@cluster_count& (0+255),w,b
 34075  003078  5DBA               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 34076  00307A  51B8               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 34077  00307C  59BB               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34078  00307E  A0D8               	btfss	status,0,c
 34079  003080  0012               	return	
 34080  003082  D7CA               	goto	l1927
 34081  003084                     __end_of_fat_create_file:
 34082                           	opt stack 0
 34083                           tosu	equ	0xFFF
 34084                           tosh	equ	0xFFE
 34085                           tosl	equ	0xFFD
 34086                           pclath	equ	0xFFA
 34087                           tblptru	equ	0xFF8
 34088                           tblptrh	equ	0xFF7
 34089                           tblptrl	equ	0xFF6
 34090                           tablat	equ	0xFF5
 34091                           prodh	equ	0xFF4
 34092                           prodl	equ	0xFF3
 34093                           intcon	equ	0xFF2
 34094                           intcon2	equ	0xFF1
 34095                           intcon3	equ	0xFF0
 34096                           indf0	equ	0xFEF
 34097                           postinc0	equ	0xFEE
 34098                           fsr0h	equ	0xFEA
 34099                           fsr0l	equ	0xFE9
 34100                           wreg	equ	0xFE8
 34101                           indf1	equ	0xFE7
 34102                           postdec1	equ	0xFE5
 34103                           plusw1	equ	0xFE3
 34104                           fsr1h	equ	0xFE2
 34105                           fsr1l	equ	0xFE1
 34106                           indf2	equ	0xFDF
 34107                           postinc2	equ	0xFDE
 34108                           postdec2	equ	0xFDD
 34109                           plusw2	equ	0xFDB
 34110                           fsr2h	equ	0xFDA
 34111                           fsr2l	equ	0xFD9
 34112                           status	equ	0xFD8
 34113                           
 34114 ;; *************** function _memcpy *****************
 34115 ;; Defined at:
 34116 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 34117 ;; Parameters:    Size  Location     Type
 34118 ;;  d1              2    0[COMRAM] PTR void 
 34119 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 34120 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 34121 ;;  s1              3    2[COMRAM] PTR const void 
 34122 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 34123 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 34124 ;;  n               2    5[COMRAM] unsigned int 
 34125 ;; Auto vars:     Size  Location     Type
 34126 ;;  s               3    7[COMRAM] PTR const unsigned char 
 34127 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 34128 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 34129 ;;  d               2   10[COMRAM] PTR unsigned char 
 34130 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 34131 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 34132 ;;  tmp             1   12[COMRAM] unsigned char 
 34133 ;; Return value:  Size  Location     Type
 34134 ;;                  2    0[COMRAM] PTR void 
 34135 ;; Registers used:
 34136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34137 ;; Tracked objects:
 34138 ;;		On entry : 0/0
 34139 ;;		On exit  : 0/0
 34140 ;;		Unchanged: 0/0
 34141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34142 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34143 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34145 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34146 ;;Total ram usage:       13 bytes
 34147 ;; Hardware stack levels used:    1
 34148 ;; This function calls:
 34149 ;;		Nothing
 34150 ;; This function is called by:
 34151 ;;		_USBCtrlEPService
 34152 ;;		_MSDProcessCommandMediaPresent
 34153 ;;		__flash_set_page_size
 34154 ;;		_fat_create_file
 34155 ;;		_internalFlash_read
 34156 ;;		_api_prepare
 34157 ;; This function uses a non-reentrant model
 34158 ;;
 34159                           
 34160                           	psect	text173
 34161  006B54                     __ptext173:
 34162                           	opt stack 0
 34163  006B54                     _memcpy:
 34164                           	opt stack 27
 34165                           
 34166                           ;incstack = 0
 34167  006B54  C003  F008         	movff	memcpy@s1,memcpy@s
 34168  006B58  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 34169  006B5C  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 34170  006B60  C001  F00B         	movff	memcpy@d1,memcpy@d
 34171  006B64  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 34172  006B68  D01F               	goto	l3454
 34173  006B6A                     l10256:
 34174  006B6A  C008  FFF6         	movff	memcpy@s,tblptrl
 34175  006B6E  C009  FFF7         	movff	memcpy@s+1,tblptrh
 34176  006B72  C00A  FFF8         	movff	memcpy@s+2,tblptru
 34177  006B76  BAF8               	btfsc	tblptru,5,c
 34178  006B78  D003               	bra	u7057
 34179  006B7A  0008               	tblrd		*
 34180  006B7C  50F5               	movf	tablat,w,c
 34181  006B7E  D005               	bra	u7050
 34182  006B80                     u7057:
 34183  006B80  CFF6 FFE9          	movff	tblptrl,fsr0l
 34184  006B84  CFF7 FFEA          	movff	tblptrh,fsr0h
 34185  006B88  50EF               	movf	indf0,w,c
 34186  006B8A                     u7050:
 34187  006B8A  6E0D               	movwf	memcpy@tmp,c
 34188  006B8C  0E01               	movlw	1
 34189  006B8E  2608               	addwf	memcpy@s,f,c
 34190  006B90  0E00               	movlw	0
 34191  006B92  2209               	addwfc	memcpy@s+1,f,c
 34192  006B94  0E00               	movlw	0
 34193  006B96  220A               	addwfc	memcpy@s+2,f,c
 34194  006B98  C00B  FFD9         	movff	memcpy@d,fsr2l
 34195  006B9C  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 34196  006BA0  C00D  FFDF         	movff	memcpy@tmp,indf2
 34197  006BA4  4A0B               	infsnz	memcpy@d,f,c
 34198  006BA6  2A0C               	incf	memcpy@d+1,f,c
 34199  006BA8                     l3454:
 34200  006BA8  0606               	decf	memcpy@n,f,c
 34201  006BAA  A0D8               	btfss	status,0,c
 34202  006BAC  0607               	decf	memcpy@n+1,f,c
 34203  006BAE  2806               	incf	memcpy@n,w,c
 34204  006BB0  E1DC               	bnz	l10256
 34205  006BB2  2807               	incf	memcpy@n+1,w,c
 34206  006BB4  B4D8               	btfsc	status,2,c
 34207  006BB6  0012               	return	
 34208  006BB8  D7D8               	goto	l3455
 34209  006BBA                     __end_of_memcpy:
 34210                           	opt stack 0
 34211                           tosu	equ	0xFFF
 34212                           tosh	equ	0xFFE
 34213                           tosl	equ	0xFFD
 34214                           pclath	equ	0xFFA
 34215                           tblptru	equ	0xFF8
 34216                           tblptrh	equ	0xFF7
 34217                           tblptrl	equ	0xFF6
 34218                           tablat	equ	0xFF5
 34219                           prodh	equ	0xFF4
 34220                           prodl	equ	0xFF3
 34221                           intcon	equ	0xFF2
 34222                           intcon2	equ	0xFF1
 34223                           intcon3	equ	0xFF0
 34224                           indf0	equ	0xFEF
 34225                           postinc0	equ	0xFEE
 34226                           fsr0h	equ	0xFEA
 34227                           fsr0l	equ	0xFE9
 34228                           wreg	equ	0xFE8
 34229                           indf1	equ	0xFE7
 34230                           postdec1	equ	0xFE5
 34231                           plusw1	equ	0xFE3
 34232                           fsr1h	equ	0xFE2
 34233                           fsr1l	equ	0xFE1
 34234                           indf2	equ	0xFDF
 34235                           postinc2	equ	0xFDE
 34236                           postdec2	equ	0xFDD
 34237                           plusw2	equ	0xFDB
 34238                           fsr2h	equ	0xFDA
 34239                           fsr2l	equ	0xFD9
 34240                           status	equ	0xFD8
 34241                           
 34242 ;; *************** function _fat_get_empty_clusters *****************
 34243 ;; Defined at:
 34244 ;;		line 130 in file "fat16.c"
 34245 ;; Parameters:    Size  Location     Type
 34246 ;;  maximum         2   47[COMRAM] unsigned int 
 34247 ;; Auto vars:     Size  Location     Type
 34248 ;;  cluster         2   57[COMRAM] unsigned int 
 34249 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 34250 ;;  value           2   53[COMRAM] unsigned int 
 34251 ;;  offset          2   51[COMRAM] unsigned int 
 34252 ;;  fat_sector      2   49[COMRAM] unsigned int 
 34253 ;; Return value:  Size  Location     Type
 34254 ;;                  2   47[COMRAM] unsigned int 
 34255 ;; Registers used:
 34256 ;;		wreg, status,2, status,0, cstack
 34257 ;; Tracked objects:
 34258 ;;		On entry : 0/0
 34259 ;;		On exit  : 0/0
 34260 ;;		Unchanged: 0/0
 34261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34263 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34265 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34266 ;;Total ram usage:       12 bytes
 34267 ;; Hardware stack levels used:    1
 34268 ;; Hardware stack levels required when called:    5
 34269 ;; This function calls:
 34270 ;;		_flash_partial_read
 34271 ;; This function is called by:
 34272 ;;		_fat_create_file
 34273 ;; This function uses a non-reentrant model
 34274 ;;
 34275                           
 34276                           	psect	text174
 34277  006036                     __ptext174:
 34278                           	opt stack 0
 34279  006036                     _fat_get_empty_clusters:
 34280                           	opt stack 21
 34281                           
 34282                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 34283                           
 34284                           ;incstack = 0
 34285  006036  0E00               	movlw	0
 34286  006038  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 34287  00603A  0E00               	movlw	0
 34288  00603C  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 34289                           
 34290                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 34291  00603E  0E00               	movlw	0
 34292  006040  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 34293  006042  0E02               	movlw	2
 34294  006044  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 34295  006046  D033               	goto	l10538
 34296  006048                     
 34297                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 34298  006048  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 34299  00604A  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 34300  00604C  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 34301                           
 34302                           ;fat16.c: 142: fat_sector += 2;
 34303  00604E  0E02               	movlw	2
 34304  006050  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 34305  006052  0E00               	movlw	0
 34306  006054  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 34307                           
 34308                           ;fat16.c: 143: offset = cluster & 0xFF;
 34309  006056  503A               	movf	fat_get_empty_clusters@cluster,w,c
 34310  006058  6E34               	movwf	fat_get_empty_clusters@offset,c
 34311  00605A  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 34312                           
 34313                           ;fat16.c: 144: offset <<= 1;
 34314  00605C  90D8               	bcf	status,0,c
 34315  00605E  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 34316  006060  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 34317                           
 34318                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 34319  006062  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 34320  006066  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 34321  00606A  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 34322  00606E  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 34323  006072  0E00               	movlw	0
 34324  006074  6E2D               	movwf	flash_partial_read@length+1,c
 34325  006076  0E02               	movlw	2
 34326  006078  6E2C               	movwf	flash_partial_read@length,c
 34327  00607A  0E36               	movlw	low fat_get_empty_clusters@value
 34328  00607C  6E2E               	movwf	flash_partial_read@data,c
 34329  00607E  0E00               	movlw	high fat_get_empty_clusters@value
 34330  006080  6E2F               	movwf	flash_partial_read@data+1,c
 34331  006082  EC52  F03C         	call	_flash_partial_read	;wreg free
 34332                           
 34333                           ;fat16.c: 146: if(value==0x0000)
 34334  006086  5036               	movf	fat_get_empty_clusters@value,w,c
 34335  006088  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 34336  00608A  A4D8               	btfss	status,2,c
 34337  00608C  D00E               	goto	l1881
 34338                           
 34339                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 34340  00608E  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 34341  006090  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 34342                           
 34343                           ;fat16.c: 149: if(empty_clusters==maximum)
 34344  006092  5030               	movf	fat_get_empty_clusters@maximum,w,c
 34345  006094  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 34346  006096  E109               	bnz	l10536
 34347  006098  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 34348  00609A  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 34349  00609C  A4D8               	btfss	status,2,c
 34350  00609E  D005               	goto	l1881
 34351                           
 34352                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 34353  0060A0  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 34354  0060A4  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 34355  0060A8  0012               	return	
 34356  0060AA                     l1881:
 34357  0060AA                     l10536:
 34358  0060AA  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 34359  0060AC  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 34360  0060AE                     l10538:
 34361  0060AE  0EDC               	movlw	220
 34362  0060B0  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 34363  0060B2  0E1F               	movlw	31
 34364  0060B4  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 34365  0060B6  A0D8               	btfss	status,0,c
 34366  0060B8  D7C7               	goto	l1878
 34367                           
 34368                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 34369  0060BA  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 34370  0060BE  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 34371  0060C2  0012               	return		;funcret
 34372  0060C4                     __end_of_fat_get_empty_clusters:
 34373                           	opt stack 0
 34374                           tosu	equ	0xFFF
 34375                           tosh	equ	0xFFE
 34376                           tosl	equ	0xFFD
 34377                           pclath	equ	0xFFA
 34378                           tblptru	equ	0xFF8
 34379                           tblptrh	equ	0xFF7
 34380                           tblptrl	equ	0xFF6
 34381                           tablat	equ	0xFF5
 34382                           prodh	equ	0xFF4
 34383                           prodl	equ	0xFF3
 34384                           intcon	equ	0xFF2
 34385                           intcon2	equ	0xFF1
 34386                           intcon3	equ	0xFF0
 34387                           indf0	equ	0xFEF
 34388                           postinc0	equ	0xFEE
 34389                           fsr0h	equ	0xFEA
 34390                           fsr0l	equ	0xFE9
 34391                           wreg	equ	0xFE8
 34392                           indf1	equ	0xFE7
 34393                           postdec1	equ	0xFE5
 34394                           plusw1	equ	0xFE3
 34395                           fsr1h	equ	0xFE2
 34396                           fsr1l	equ	0xFE1
 34397                           indf2	equ	0xFDF
 34398                           postinc2	equ	0xFDE
 34399                           postdec2	equ	0xFDD
 34400                           plusw2	equ	0xFDB
 34401                           fsr2h	equ	0xFDA
 34402                           fsr2l	equ	0xFD9
 34403                           status	equ	0xFD8
 34404                           
 34405 ;; *************** function _fat_find_file *****************
 34406 ;; Defined at:
 34407 ;;		line 250 in file "fat16.c"
 34408 ;; Parameters:    Size  Location     Type
 34409 ;;  name            2   47[COMRAM] PTR unsigned char 
 34410 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), RAM(3759), 
 34411 ;;  extension       2   49[COMRAM] PTR unsigned char 
 34412 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), RAM(3759), 
 34413 ;; Auto vars:     Size  Location     Type
 34414 ;;  buffer         11   51[COMRAM] unsigned char [11]
 34415 ;;  offset          2   65[COMRAM] unsigned int 
 34416 ;;  sector          2   63[COMRAM] unsigned int 
 34417 ;;  slot            1   62[COMRAM] unsigned char 
 34418 ;; Return value:  Size  Location     Type
 34419 ;;                  1    wreg      unsigned char 
 34420 ;; Registers used:
 34421 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34422 ;; Tracked objects:
 34423 ;;		On entry : 0/0
 34424 ;;		On exit  : 0/0
 34425 ;;		Unchanged: 0/0
 34426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34428 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34430 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34431 ;;Total ram usage:       20 bytes
 34432 ;; Hardware stack levels used:    1
 34433 ;; Hardware stack levels required when called:    5
 34434 ;; This function calls:
 34435 ;;		_flash_partial_read
 34436 ;;		_strncmp
 34437 ;; This function is called by:
 34438 ;;		_fat_create_file
 34439 ;;		__bootloader_find_file
 34440 ;;		__fill_buffer_find_file
 34441 ;; This function uses a non-reentrant model
 34442 ;;
 34443                           
 34444                           	psect	text175
 34445  0052C6                     __ptext175:
 34446                           	opt stack 0
 34447  0052C6                     _fat_find_file:
 34448                           	opt stack 23
 34449                           
 34450                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 34451                           
 34452                           ;incstack = 0
 34453  0052C6  0E00               	movlw	0
 34454  0052C8  6E3F               	movwf	fat_find_file@slot,c
 34455                           
 34456                           ;fat16.c: 257: for(sector = 34; sector <= 37; ++sector)
 34457  0052CA  0E00               	movlw	0
 34458  0052CC  6E41               	movwf	fat_find_file@sector+1,c
 34459  0052CE  0E22               	movlw	34
 34460  0052D0  6E40               	movwf	fat_find_file@sector,c
 34461  0052D2                     l10584:
 34462  0052D2  5041               	movf	fat_find_file@sector+1,w,c
 34463  0052D4  E156               	bnz	l10626
 34464  0052D6  0E26               	movlw	38
 34465  0052D8  5C40               	subwf	fat_find_file@sector,w,c
 34466  0052DA  B0D8               	btfsc	status,0,c
 34467  0052DC  D052               	goto	u7670
 34468                           
 34469                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 34470  0052DE  0E00               	movlw	0
 34471  0052E0  6E43               	movwf	fat_find_file@offset+1,c
 34472  0052E2  0E00               	movlw	0
 34473  0052E4  6E42               	movwf	fat_find_file@offset,c
 34474  0052E6                     l10590:
 34475  0052E6  0E02               	movlw	2
 34476  0052E8  5C43               	subwf	fat_find_file@offset+1,w,c
 34477  0052EA  B0D8               	btfsc	status,0,c
 34478  0052EC  D047               	goto	u7660
 34479                           
 34480                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 34481  0052EE  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 34482  0052F2  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 34483  0052F6  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 34484  0052FA  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 34485  0052FE  0E00               	movlw	0
 34486  005300  6E2D               	movwf	flash_partial_read@length+1,c
 34487  005302  0E0B               	movlw	11
 34488  005304  6E2C               	movwf	flash_partial_read@length,c
 34489  005306  0E34               	movlw	low fat_find_file@buffer
 34490  005308  6E2E               	movwf	flash_partial_read@data,c
 34491  00530A  0E00               	movlw	high fat_find_file@buffer
 34492  00530C  6E2F               	movwf	flash_partial_read@data+1,c
 34493  00530E  EC52  F03C         	call	_flash_partial_read	;wreg free
 34494                           
 34495                           ;fat16.c: 262: if(buffer[0]==0x00)
 34496  005312  5034               	movf	fat_find_file@buffer,w,c
 34497  005314  A4D8               	btfss	status,2,c
 34498  005316  D002               	goto	l1910
 34499                           
 34500                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 34501  005318  0EFF               	movlw	255
 34502  00531A  0012               	return	
 34503  00531C                     l1910:
 34504                           
 34505                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 34506  00531C  0EE5               	movlw	229
 34507  00531E  1834               	xorwf	fat_find_file@buffer,w,c
 34508  005320  B4D8               	btfsc	status,2,c
 34509  005322  D026               	goto	l1916
 34510                           
 34511                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 34512                           
 34513                           ;fat16.c: 269: {;fat16.c: 273: }
 34514  005324  C030  F001         	movff	fat_find_file@name,strncmp@s1
 34515  005328  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 34516  00532C  0E34               	movlw	low fat_find_file@buffer
 34517  00532E  6E03               	movwf	strncmp@s2,c
 34518  005330  0E00               	movlw	high fat_find_file@buffer
 34519  005332  6E04               	movwf	strncmp@s2+1,c
 34520  005334  0E00               	movlw	0
 34521  005336  6E06               	movwf	strncmp@len+1,c
 34522  005338  0E08               	movlw	8
 34523  00533A  6E05               	movwf	strncmp@len,c
 34524  00533C  EC02  F029         	call	_strncmp	;wreg free
 34525  005340  5001               	movf	?_strncmp,w,c
 34526  005342  1002               	iorwf	?_strncmp+1,w,c
 34527  005344  A4D8               	btfss	status,2,c
 34528  005346  D014               	goto	l1916
 34529                           
 34530                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 34531  005348  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 34532  00534C  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 34533  005350  0E3C               	movlw	low (fat_find_file@buffer+8)
 34534  005352  6E03               	movwf	strncmp@s2,c
 34535  005354  0E00               	movlw	high (fat_find_file@buffer+8)
 34536  005356  6E04               	movwf	strncmp@s2+1,c
 34537  005358  0E00               	movlw	0
 34538  00535A  6E06               	movwf	strncmp@len+1,c
 34539  00535C  0E03               	movlw	3
 34540  00535E  6E05               	movwf	strncmp@len,c
 34541  005360  EC02  F029         	call	_strncmp	;wreg free
 34542  005364  5001               	movf	?_strncmp,w,c
 34543  005366  1002               	iorwf	?_strncmp+1,w,c
 34544  005368  A4D8               	btfss	status,2,c
 34545  00536A  D002               	goto	l1916
 34546                           
 34547                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 34548  00536C  503F               	movf	fat_find_file@slot,w,c
 34549  00536E  0012               	return	
 34550  005370                     l1916:
 34551                           
 34552                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 34553  005370  2A3F               	incf	fat_find_file@slot,f,c
 34554  005372  0E20               	movlw	32
 34555  005374  2642               	addwf	fat_find_file@offset,f,c
 34556  005376  0E00               	movlw	0
 34557  005378  2243               	addwfc	fat_find_file@offset+1,f,c
 34558  00537A  D7B5               	goto	l10590
 34559  00537C                     u7660:
 34560  00537C  4A40               	infsnz	fat_find_file@sector,f,c
 34561  00537E  2A41               	incf	fat_find_file@sector+1,f,c
 34562  005380  D7A8               	goto	l10584
 34563  005382                     u7670:
 34564  005382                     l10626:
 34565                           
 34566                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 34567  005382  0EFF               	movlw	255
 34568  005384  0012               	return	
 34569  005386                     __end_of_fat_find_file:
 34570                           	opt stack 0
 34571                           tosu	equ	0xFFF
 34572                           tosh	equ	0xFFE
 34573                           tosl	equ	0xFFD
 34574                           pclath	equ	0xFFA
 34575                           tblptru	equ	0xFF8
 34576                           tblptrh	equ	0xFF7
 34577                           tblptrl	equ	0xFF6
 34578                           tablat	equ	0xFF5
 34579                           prodh	equ	0xFF4
 34580                           prodl	equ	0xFF3
 34581                           intcon	equ	0xFF2
 34582                           intcon2	equ	0xFF1
 34583                           intcon3	equ	0xFF0
 34584                           indf0	equ	0xFEF
 34585                           postinc0	equ	0xFEE
 34586                           fsr0h	equ	0xFEA
 34587                           fsr0l	equ	0xFE9
 34588                           wreg	equ	0xFE8
 34589                           indf1	equ	0xFE7
 34590                           postdec1	equ	0xFE5
 34591                           plusw1	equ	0xFE3
 34592                           fsr1h	equ	0xFE2
 34593                           fsr1l	equ	0xFE1
 34594                           indf2	equ	0xFDF
 34595                           postinc2	equ	0xFDE
 34596                           postdec2	equ	0xFDD
 34597                           plusw2	equ	0xFDB
 34598                           fsr2h	equ	0xFDA
 34599                           fsr2l	equ	0xFD9
 34600                           status	equ	0xFD8
 34601                           
 34602 ;; *************** function _strncmp *****************
 34603 ;; Defined at:
 34604 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 34605 ;; Parameters:    Size  Location     Type
 34606 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 34607 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 34608 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 34609 ;;		 -> fat_find_file@buffer(11), 
 34610 ;;  len             2    4[COMRAM] unsigned int 
 34611 ;; Auto vars:     Size  Location     Type
 34612 ;;		None
 34613 ;; Return value:  Size  Location     Type
 34614 ;;                  2    0[COMRAM] int 
 34615 ;; Registers used:
 34616 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34617 ;; Tracked objects:
 34618 ;;		On entry : 0/0
 34619 ;;		On exit  : 0/0
 34620 ;;		Unchanged: 0/0
 34621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34622 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34625 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34626 ;;Total ram usage:        9 bytes
 34627 ;; Hardware stack levels used:    1
 34628 ;; This function calls:
 34629 ;;		Nothing
 34630 ;; This function is called by:
 34631 ;;		_fat_find_file
 34632 ;; This function uses a non-reentrant model
 34633 ;;
 34634                           
 34635                           	psect	text176
 34636  005204                     __ptext176:
 34637                           	opt stack 0
 34638  005204                     _strncmp:
 34639                           	opt stack 27
 34640                           
 34641                           ;incstack = 0
 34642  005204  D053               	goto	l3472
 34643  005206                     l10120:
 34644  005206  C001  FFF6         	movff	strncmp@s1,tblptrl
 34645  00520A  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34646  00520E  6AF8               	clrf	tblptru,c
 34647  005210  0E0E               	movlw	(high __ramtop+-1)
 34648  005212  64F7               	cpfsgt	tblptrh,c
 34649  005214  D003               	bra	u6857
 34650  005216  0008               	tblrd		*
 34651  005218  50F5               	movf	tablat,w,c
 34652  00521A  D005               	bra	u6850
 34653  00521C                     u6857:
 34654  00521C  CFF6 FFE9          	movff	tblptrl,fsr0l
 34655  005220  CFF7 FFEA          	movff	tblptrh,fsr0h
 34656  005224  50EF               	movf	indf0,w,c
 34657  005226                     u6850:
 34658  005226  0900               	iorlw	0
 34659  005228  B4D8               	btfsc	status,2,c
 34660  00522A  D019               	goto	u6870
 34661  00522C  C003  FFD9         	movff	strncmp@s2,fsr2l
 34662  005230  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 34663  005234  50DF               	movf	indf2,w,c
 34664  005236  6E07               	movwf	??_strncmp& (0+255),c
 34665  005238  C001  FFF6         	movff	strncmp@s1,tblptrl
 34666  00523C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34667  005240  6AF8               	clrf	tblptru,c
 34668  005242  0E0E               	movlw	(high __ramtop+-1)
 34669  005244  64F7               	cpfsgt	tblptrh,c
 34670  005246  D003               	bra	u6877
 34671  005248  0008               	tblrd		*
 34672  00524A  50F5               	movf	tablat,w,c
 34673  00524C  D005               	bra	u6875
 34674  00524E                     u6877:
 34675  00524E  CFF6 FFE9          	movff	tblptrl,fsr0l
 34676  005252  CFF7 FFEA          	movff	tblptrh,fsr0h
 34677  005256  50EF               	movf	indf0,w,c
 34678  005258                     u6875:
 34679  005258  1807               	xorwf	??_strncmp,w,c
 34680  00525A  B4D8               	btfsc	status,2,c
 34681  00525C  D023               	goto	l3474
 34682  00525E                     u6870:
 34683  00525E  C003  FFD9         	movff	strncmp@s2,fsr2l
 34684  005262  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 34685  005266  50DF               	movf	indf2,w,c
 34686  005268  6E07               	movwf	??_strncmp& (0+255),c
 34687  00526A  6A08               	clrf	(??_strncmp+1)& (0+255),c
 34688  00526C  1E07               	comf	??_strncmp,f,c
 34689  00526E  1E08               	comf	??_strncmp+1,f,c
 34690  005270  4A07               	infsnz	??_strncmp,f,c
 34691  005272  2A08               	incf	??_strncmp+1,f,c
 34692  005274  C001  FFF6         	movff	strncmp@s1,tblptrl
 34693  005278  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34694  00527C  6AF8               	clrf	tblptru,c
 34695  00527E  0E0E               	movlw	(high __ramtop+-1)
 34696  005280  64F7               	cpfsgt	tblptrh,c
 34697  005282  D003               	bra	u6887
 34698  005284  0008               	tblrd		*
 34699  005286  50F5               	movf	tablat,w,c
 34700  005288  D005               	bra	u6880
 34701  00528A                     u6887:
 34702  00528A  CFF6 FFE9          	movff	tblptrl,fsr0l
 34703  00528E  CFF7 FFEA          	movff	tblptrh,fsr0h
 34704  005292  50EF               	movf	indf0,w,c
 34705  005294                     u6880:
 34706  005294  6E09               	movwf	(??_strncmp+2)& (0+255),c
 34707  005296  5009               	movf	??_strncmp+2,w,c
 34708  005298  2407               	addwf	??_strncmp,w,c
 34709  00529A  6E01               	movwf	?_strncmp,c
 34710  00529C  0E00               	movlw	0
 34711  00529E  2008               	addwfc	??_strncmp+1,w,c
 34712  0052A0  6E02               	movwf	?_strncmp+1,c
 34713  0052A2  0012               	return	
 34714  0052A4                     l3474:
 34715  0052A4  4A01               	infsnz	strncmp@s1,f,c
 34716  0052A6  2A02               	incf	strncmp@s1+1,f,c
 34717  0052A8  4A03               	infsnz	strncmp@s2,f,c
 34718  0052AA  2A04               	incf	strncmp@s2+1,f,c
 34719  0052AC                     l3472:
 34720  0052AC  0605               	decf	strncmp@len,f,c
 34721  0052AE  A0D8               	btfss	status,0,c
 34722  0052B0  0606               	decf	strncmp@len+1,f,c
 34723  0052B2  2805               	incf	strncmp@len,w,c
 34724  0052B4  E1A8               	bnz	l10120
 34725  0052B6  2806               	incf	strncmp@len+1,w,c
 34726  0052B8  A4D8               	btfss	status,2,c
 34727  0052BA  D7A5               	goto	l3473
 34728  0052BC  0E00               	movlw	0
 34729  0052BE  6E02               	movwf	?_strncmp+1,c
 34730  0052C0  0E00               	movlw	0
 34731  0052C2  6E01               	movwf	?_strncmp,c
 34732  0052C4  0012               	return	
 34733  0052C6                     __end_of_strncmp:
 34734                           	opt stack 0
 34735                           tosu	equ	0xFFF
 34736                           tosh	equ	0xFFE
 34737                           tosl	equ	0xFFD
 34738                           pclath	equ	0xFFA
 34739                           tblptru	equ	0xFF8
 34740                           tblptrh	equ	0xFF7
 34741                           tblptrl	equ	0xFF6
 34742                           tablat	equ	0xFF5
 34743                           prodh	equ	0xFF4
 34744                           prodl	equ	0xFF3
 34745                           intcon	equ	0xFF2
 34746                           intcon2	equ	0xFF1
 34747                           intcon3	equ	0xFF0
 34748                           indf0	equ	0xFEF
 34749                           postinc0	equ	0xFEE
 34750                           fsr0h	equ	0xFEA
 34751                           fsr0l	equ	0xFE9
 34752                           wreg	equ	0xFE8
 34753                           indf1	equ	0xFE7
 34754                           postdec1	equ	0xFE5
 34755                           plusw1	equ	0xFE3
 34756                           fsr1h	equ	0xFE2
 34757                           fsr1l	equ	0xFE1
 34758                           indf2	equ	0xFDF
 34759                           postinc2	equ	0xFDE
 34760                           postdec2	equ	0xFDD
 34761                           plusw2	equ	0xFDB
 34762                           fsr2h	equ	0xFDA
 34763                           fsr2l	equ	0xFD9
 34764                           status	equ	0xFD8
 34765                           
 34766 ;; *************** function __get_available_root_entry *****************
 34767 ;; Defined at:
 34768 ;;		line 94 in file "fat16.c"
 34769 ;; Parameters:    Size  Location     Type
 34770 ;;		None
 34771 ;; Auto vars:     Size  Location     Type
 34772 ;;  file_number     1   54[COMRAM] unsigned char 
 34773 ;; Return value:  Size  Location     Type
 34774 ;;                  1    wreg      unsigned char 
 34775 ;; Registers used:
 34776 ;;		wreg, status,2, status,0, cstack
 34777 ;; Tracked objects:
 34778 ;;		On entry : 0/0
 34779 ;;		On exit  : 0/0
 34780 ;;		Unchanged: 0/0
 34781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34786 ;;Total ram usage:        1 bytes
 34787 ;; Hardware stack levels used:    1
 34788 ;; Hardware stack levels required when called:    6
 34789 ;; This function calls:
 34790 ;;		__root_is_available
 34791 ;; This function is called by:
 34792 ;;		_fat_create_file
 34793 ;; This function uses a non-reentrant model
 34794 ;;
 34795                           
 34796                           	psect	text177
 34797  007B24                     __ptext177:
 34798                           	opt stack 0
 34799  007B24                     __get_available_root_entry:
 34800                           	opt stack 20
 34801                           
 34802                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 34803                           
 34804                           ;incstack = 0
 34805  007B24  0E00               	movlw	0
 34806  007B26  6E37               	movwf	__get_available_root_entry@file_number,c
 34807  007B28                     l10466:
 34808  007B28  0E3F               	movlw	63
 34809  007B2A  6437               	cpfsgt	__get_available_root_entry@file_number,c
 34810  007B2C  D001               	goto	l1866
 34811  007B2E  D00A               	goto	u7490
 34812  007B30                     l1866:
 34813                           
 34814                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 34815  007B30  5037               	movf	__get_available_root_entry@file_number,w,c
 34816  007B32  ECA7  F032         	call	__root_is_available
 34817  007B36  0900               	iorlw	0
 34818  007B38  B4D8               	btfsc	status,2,c
 34819  007B3A  D002               	goto	l1868
 34820                           
 34821                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 34822  007B3C  5037               	movf	__get_available_root_entry@file_number,w,c
 34823  007B3E  0012               	return	
 34824  007B40                     l1868:
 34825  007B40  2A37               	incf	__get_available_root_entry@file_number,f,c
 34826  007B42  D7F2               	goto	l10466
 34827  007B44                     u7490:
 34828                           
 34829                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 34830  007B44  0EFF               	movlw	255
 34831  007B46  0012               	return	
 34832  007B48                     __end_of__get_available_root_entry:
 34833                           	opt stack 0
 34834                           tosu	equ	0xFFF
 34835                           tosh	equ	0xFFE
 34836                           tosl	equ	0xFFD
 34837                           pclath	equ	0xFFA
 34838                           tblptru	equ	0xFF8
 34839                           tblptrh	equ	0xFF7
 34840                           tblptrl	equ	0xFF6
 34841                           tablat	equ	0xFF5
 34842                           prodh	equ	0xFF4
 34843                           prodl	equ	0xFF3
 34844                           intcon	equ	0xFF2
 34845                           intcon2	equ	0xFF1
 34846                           intcon3	equ	0xFF0
 34847                           indf0	equ	0xFEF
 34848                           postinc0	equ	0xFEE
 34849                           fsr0h	equ	0xFEA
 34850                           fsr0l	equ	0xFE9
 34851                           wreg	equ	0xFE8
 34852                           indf1	equ	0xFE7
 34853                           postdec1	equ	0xFE5
 34854                           plusw1	equ	0xFE3
 34855                           fsr1h	equ	0xFE2
 34856                           fsr1l	equ	0xFE1
 34857                           indf2	equ	0xFDF
 34858                           postinc2	equ	0xFDE
 34859                           postdec2	equ	0xFDD
 34860                           plusw2	equ	0xFDB
 34861                           fsr2h	equ	0xFDA
 34862                           fsr2l	equ	0xFD9
 34863                           status	equ	0xFD8
 34864                           
 34865 ;; *************** function __parse_file_append *****************
 34866 ;; Defined at:
 34867 ;;		line 536 in file "api.c"
 34868 ;; Parameters:    Size  Location     Type
 34869 ;;  data            2   74[COMRAM] PTR unsigned char 
 34870 ;;		 -> RAM(3759), 
 34871 ;; Auto vars:     Size  Location     Type
 34872 ;;		None
 34873 ;; Return value:  Size  Location     Type
 34874 ;;                  1    wreg      unsigned char 
 34875 ;; Registers used:
 34876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34877 ;; Tracked objects:
 34878 ;;		On entry : 0/0
 34879 ;;		On exit  : 0/0
 34880 ;;		Unchanged: 0/0
 34881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34885 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34886 ;;Total ram usage:        3 bytes
 34887 ;; Hardware stack levels used:    1
 34888 ;; Hardware stack levels required when called:    8
 34889 ;; This function calls:
 34890 ;;		_fat_append_to_file
 34891 ;; This function is called by:
 34892 ;;		__parse_command_long
 34893 ;; This function uses a non-reentrant model
 34894 ;;
 34895                           
 34896                           	psect	text178
 34897  0062E4                     __ptext178:
 34898                           	opt stack 0
 34899  0062E4                     __parse_file_append:
 34900                           	opt stack 20
 34901                           
 34902                           ;api.c: 539: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 34903                           
 34904                           ;incstack = 0
 34905  0062E4  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 34906  0062E8  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 34907  0062EC  0E54               	movlw	84
 34908  0062EE  18DE               	xorwf	postinc2,w,c
 34909  0062F0  A4D8               	btfss	status,2,c
 34910  0062F2  D014               	goto	u9080
 34911  0062F4  EE20 F003          	lfsr	2,3
 34912  0062F8  504B               	movf	__parse_file_append@data,w,c
 34913  0062FA  26D9               	addwf	fsr2l,f,c
 34914  0062FC  504C               	movf	__parse_file_append@data+1,w,c
 34915  0062FE  22DA               	addwfc	fsr2h,f,c
 34916  006300  0EFE               	movlw	254
 34917  006302  18DE               	xorwf	postinc2,w,c
 34918  006304  A4D8               	btfss	status,2,c
 34919  006306  D00A               	goto	u9080
 34920  006308  EE20 F004          	lfsr	2,4
 34921  00630C  504B               	movf	__parse_file_append@data,w,c
 34922  00630E  26D9               	addwf	fsr2l,f,c
 34923  006310  504C               	movf	__parse_file_append@data+1,w,c
 34924  006312  22DA               	addwfc	fsr2h,f,c
 34925  006314  0E4B               	movlw	75
 34926  006316  18DE               	xorwf	postinc2,w,c
 34927  006318  B4D8               	btfsc	status,2,c
 34928  00631A  D002               	goto	l2624
 34929  00631C                     u9080:
 34930                           
 34931                           ;api.c: 540: {;api.c: 541: return 15;
 34932  00631C  0E0F               	movlw	15
 34933  00631E  0012               	return	
 34934  006320                     l2624:
 34935                           
 34936                           ;api.c: 542: };api.c: 545: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 34937  006320  EE20 F002          	lfsr	2,2
 34938  006324  504B               	movf	__parse_file_append@data,w,c
 34939  006326  26D9               	addwf	fsr2l,f,c
 34940  006328  504C               	movf	__parse_file_append@data+1,w,c
 34941  00632A  22DA               	addwfc	fsr2h,f,c
 34942  00632C  50DF               	movf	indf2,w,c
 34943  00632E  6E4D               	movwf	??__parse_file_append& (0+255),c
 34944  006330  504D               	movf	??__parse_file_append,w,c
 34945  006332  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 34946  006334  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 34947  006336  0E05               	movlw	5
 34948  006338  244B               	addwf	__parse_file_append@data,w,c
 34949  00633A  6E41               	movwf	fat_append_to_file@data,c
 34950  00633C  0E00               	movlw	0
 34951  00633E  204C               	addwfc	__parse_file_append@data+1,w,c
 34952  006340  6E42               	movwf	fat_append_to_file@data+1,c
 34953  006342  EE20 F001          	lfsr	2,1
 34954  006346  504B               	movf	__parse_file_append@data,w,c
 34955  006348  26D9               	addwf	fsr2l,f,c
 34956  00634A  504C               	movf	__parse_file_append@data+1,w,c
 34957  00634C  22DA               	addwfc	fsr2h,f,c
 34958  00634E  50DF               	movf	indf2,w,c
 34959  006350  EC8D  F010         	call	_fat_append_to_file
 34960                           
 34961                           ;api.c: 546: return data[2] + 5;
 34962  006354  EE20 F002          	lfsr	2,2
 34963  006358  504B               	movf	__parse_file_append@data,w,c
 34964  00635A  26D9               	addwf	fsr2l,f,c
 34965  00635C  504C               	movf	__parse_file_append@data+1,w,c
 34966  00635E  22DA               	addwfc	fsr2h,f,c
 34967  006360  50DF               	movf	indf2,w,c
 34968  006362  0F05               	addlw	5
 34969  006364  0012               	return	
 34970  006366                     __end_of__parse_file_append:
 34971                           	opt stack 0
 34972                           tosu	equ	0xFFF
 34973                           tosh	equ	0xFFE
 34974                           tosl	equ	0xFFD
 34975                           pclath	equ	0xFFA
 34976                           tblptru	equ	0xFF8
 34977                           tblptrh	equ	0xFF7
 34978                           tblptrl	equ	0xFF6
 34979                           tablat	equ	0xFF5
 34980                           prodh	equ	0xFF4
 34981                           prodl	equ	0xFF3
 34982                           intcon	equ	0xFF2
 34983                           intcon2	equ	0xFF1
 34984                           intcon3	equ	0xFF0
 34985                           indf0	equ	0xFEF
 34986                           postinc0	equ	0xFEE
 34987                           fsr0h	equ	0xFEA
 34988                           fsr0l	equ	0xFE9
 34989                           wreg	equ	0xFE8
 34990                           indf1	equ	0xFE7
 34991                           postdec1	equ	0xFE5
 34992                           plusw1	equ	0xFE3
 34993                           fsr1h	equ	0xFE2
 34994                           fsr1l	equ	0xFE1
 34995                           indf2	equ	0xFDF
 34996                           postinc2	equ	0xFDE
 34997                           postdec2	equ	0xFDD
 34998                           plusw2	equ	0xFDB
 34999                           fsr2h	equ	0xFDA
 35000                           fsr2l	equ	0xFD9
 35001                           status	equ	0xFD8
 35002                           
 35003 ;; *************** function _fat_append_to_file *****************
 35004 ;; Defined at:
 35005 ;;		line 448 in file "fat16.c"
 35006 ;; Parameters:    Size  Location     Type
 35007 ;;  file_number     1    wreg     unsigned char 
 35008 ;;  number_of_by    2   62[COMRAM] unsigned int 
 35009 ;;  data            2   64[COMRAM] PTR unsigned char 
 35010 ;;		 -> RAM(3759), 
 35011 ;; Auto vars:     Size  Location     Type
 35012 ;;  file_number     1   12[BANK0 ] unsigned char 
 35013 ;;  root           32   19[BANK0 ] struct .
 35014 ;;  position        4   15[BANK0 ] unsigned long 
 35015 ;;  file_size       4    2[BANK0 ] unsigned long 
 35016 ;;  length          2   13[BANK0 ] unsigned int 
 35017 ;;  offset          2   10[BANK0 ] unsigned int 
 35018 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 35019 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 35020 ;;  sector          2    0[BANK0 ] unsigned int 
 35021 ;; Return value:  Size  Location     Type
 35022 ;;                  1    wreg      unsigned char 
 35023 ;; Registers used:
 35024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35025 ;; Tracked objects:
 35026 ;;		On entry : 0/0
 35027 ;;		On exit  : 0/0
 35028 ;;		Unchanged: 0/0
 35029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35031 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35032 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35033 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35034 ;;Total ram usage:       63 bytes
 35035 ;; Hardware stack levels used:    1
 35036 ;; Hardware stack levels required when called:    7
 35037 ;; This function calls:
 35038 ;;		__get_empty_cluster
 35039 ;;		__read_fat
 35040 ;;		__root_is_available
 35041 ;;		__sector_from_cluster
 35042 ;;		__update_modified_time
 35043 ;;		__write_fat
 35044 ;;		__write_root
 35045 ;;		_fat_get_file_information
 35046 ;;		_flash_partial_write
 35047 ;; This function is called by:
 35048 ;;		__parse_file_append
 35049 ;; This function uses a non-reentrant model
 35050 ;;
 35051                           
 35052                           	psect	text179
 35053  00211A                     __ptext179:
 35054                           	opt stack 0
 35055  00211A                     _fat_append_to_file:
 35056                           	opt stack 20
 35057                           
 35058                           ;incstack = 0
 35059                           ;fat_append_to_file@file_number stored from wreg
 35060  00211A  0100               	movlb	0	; () banked
 35061  00211C  6FC1               	movwf	fat_append_to_file@file_number& (0+255),b
 35062                           
 35063                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 35064  00211E  0E3F               	movlw	63
 35065  002120  0100               	movlb	0	; () banked
 35066  002122  65C1               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 35067  002124  D001               	goto	l1946
 35068  002126  0012               	return	
 35069  002128                     l1946:
 35070                           
 35071                           ; BSR set to: 0
 35072                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 35073                           
 35074                           ; BSR set to: 0
 35075  002128  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35076  00212A  ECA7  F032         	call	__root_is_available
 35077  00212E  0900               	iorlw	0
 35078  002130  A4D8               	btfss	status,2,c
 35079  002132  0012               	return	
 35080                           
 35081                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 35082                           
 35083                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 35084  002134  0EC8               	movlw	low fat_append_to_file@root
 35085  002136  6E37               	movwf	fat_get_file_information@data,c
 35086  002138  0E00               	movlw	high fat_append_to_file@root
 35087  00213A  6E38               	movwf	fat_get_file_information@data+1,c
 35088  00213C  0100               	movlb	0	; () banked
 35089  00213E  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35090  002140  ECE2  F032         	call	_fat_get_file_information
 35091                           
 35092                           ;fat16.c: 475: file_size = root.fileSize;
 35093  002144  C0E4  F0B7         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 35094  002148  C0E5  F0B8         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 35095  00214C  C0E6  F0B9         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 35096  002150  C0E7  F0BA         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 35097                           
 35098                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 35099  002154  C0E2  F0BD         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 35100  002158  C0E3  F0BE         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 35101                           
 35102                           ;fat16.c: 479: position = 0;
 35103  00215C  0E00               	movlw	0
 35104  00215E  0100               	movlb	0	; () banked
 35105  002160  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 35106  002162  0E00               	movlw	0
 35107  002164  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 35108  002166  0E00               	movlw	0
 35109  002168  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 35110  00216A  0E00               	movlw	0
 35111  00216C  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 35112                           
 35113                           ;fat16.c: 480: while((file_size-position)>512)
 35114  00216E  D013               	goto	l1949
 35115  002170                     l11212:
 35116                           
 35117                           ; BSR set to: 0
 35118                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 35119  002170  C0BD  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 35120  002174  C0BE  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 35121  002178  ECED  F039         	call	__read_fat	;wreg free
 35122  00217C  C030  F0BD         	movff	?__read_fat,fat_append_to_file@fat_cluster
 35123  002180  C031  F0BE         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 35124                           
 35125                           ;fat16.c: 483: position += 512;
 35126  002184  0E00               	movlw	0
 35127  002186  0100               	movlb	0	; () banked
 35128  002188  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 35129  00218A  0E02               	movlw	2
 35130  00218C  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 35131  00218E  0E00               	movlw	0
 35132  002190  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 35133  002192  0E00               	movlw	0
 35134  002194  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 35135  002196                     l1949:
 35136                           
 35137                           ; BSR set to: 0
 35138                           
 35139                           ; BSR set to: 0
 35140  002196  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 35141  00219A  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 35142  00219E  C0C6  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 35143  0021A2  C0C7  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 35144  0021A6  1E43               	comf	??_fat_append_to_file,f,c
 35145  0021A8  1E44               	comf	??_fat_append_to_file+1,f,c
 35146  0021AA  1E45               	comf	??_fat_append_to_file+2,f,c
 35147  0021AC  1E46               	comf	??_fat_append_to_file+3,f,c
 35148  0021AE  2A43               	incf	??_fat_append_to_file,f,c
 35149  0021B0  0E00               	movlw	0
 35150  0021B2  2244               	addwfc	??_fat_append_to_file+1,f,c
 35151  0021B4  2245               	addwfc	??_fat_append_to_file+2,f,c
 35152  0021B6  2246               	addwfc	??_fat_append_to_file+3,f,c
 35153  0021B8  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 35154  0021BA  2443               	addwf	??_fat_append_to_file,w,c
 35155  0021BC  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 35156  0021BE  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 35157  0021C0  2044               	addwfc	??_fat_append_to_file+1,w,c
 35158  0021C2  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 35159  0021C4  51B9               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 35160  0021C6  2045               	addwfc	??_fat_append_to_file+2,w,c
 35161  0021C8  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 35162  0021CA  51BA               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 35163  0021CC  2046               	addwfc	??_fat_append_to_file+3,w,c
 35164  0021CE  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 35165  0021D0  504A               	movf	??_fat_append_to_file+7,w,c
 35166  0021D2  1049               	iorwf	??_fat_append_to_file+6,w,c
 35167  0021D4  E1CD               	bnz	l11212
 35168  0021D6  0447               	decf	??_fat_append_to_file+4,w,c
 35169  0021D8  0E02               	movlw	2
 35170  0021DA  5848               	subwfb	??_fat_append_to_file+5,w,c
 35171  0021DC  B0D8               	btfsc	status,0,c
 35172  0021DE  D7C8               	goto	l1950
 35173                           
 35174                           ; BSR set to: 0
 35175                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 35176                           
 35177                           ; BSR set to: 0
 35178  0021E0  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 35179  0021E4  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 35180  0021E8  1E43               	comf	??_fat_append_to_file,f,c
 35181  0021EA  1E44               	comf	??_fat_append_to_file+1,f,c
 35182  0021EC  4A43               	infsnz	??_fat_append_to_file,f,c
 35183  0021EE  2A44               	incf	??_fat_append_to_file+1,f,c
 35184  0021F0  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 35185  0021F2  2443               	addwf	??_fat_append_to_file,w,c
 35186  0021F4  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 35187  0021F6  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 35188  0021F8  2044               	addwfc	??_fat_append_to_file+1,w,c
 35189  0021FA  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;fat16.c: 490: position = 0;
 35193  0021FC  0E00               	movlw	0
 35194  0021FE  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 35195  002200  0E00               	movlw	0
 35196  002202  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 35197  002204  0E00               	movlw	0
 35198  002206  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 35199  002208  0E00               	movlw	0
 35200  00220A  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 35201                           
 35202                           ;fat16.c: 491: while(position < number_of_bytes)
 35203  00220C  D06F               	goto	l1952
 35204  00220E                     
 35205                           ; BSR set to: 0
 35206                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 35207                           
 35208                           ; BSR set to: 0
 35209  00220E  0E02               	movlw	2
 35210  002210  19C0               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 35211  002212  11BF               	iorwf	fat_append_to_file@offset& (0+255),w,b
 35212  002214  A4D8               	btfss	status,2,c
 35213  002216  D026               	goto	l1954
 35214                           
 35215                           ; BSR set to: 0
 35216                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 35217  002218  0E00               	movlw	0
 35218  00221A  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35219  00221C  0E00               	movlw	0
 35220  00221E  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35221  002220  EC1C  F033         	call	__get_empty_cluster	;wreg free
 35222  002224  C030  F0BB         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 35223  002228  C031  F0BC         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 35224                           
 35225                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 35226  00222C  C0BD  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 35227  002230  C0BE  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 35228  002234  C0BB  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 35229  002238  C0BC  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 35230  00223C  ECB6  F03A         	call	__write_fat	;wreg free
 35231                           
 35232                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 35233  002240  C0BB  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 35234  002244  C0BC  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 35235  002248  0EFF               	movlw	255
 35236  00224A  6E2C               	movwf	__write_fat@value+1,c
 35237  00224C  682B               	setf	__write_fat@value,c
 35238  00224E  ECB6  F03A         	call	__write_fat	;wreg free
 35239                           
 35240                           ;fat16.c: 504: fat_cluster = new_cluster;
 35241  002252  C0BB  F0BD         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 35242  002256  C0BC  F0BE         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 35243                           
 35244                           ;fat16.c: 505: offset = 0;
 35245  00225A  0E00               	movlw	0
 35246  00225C  0100               	movlb	0	; () banked
 35247  00225E  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 35248  002260  0E00               	movlw	0
 35249  002262  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 35250  002264                     l1954:
 35251                           
 35252                           ; BSR set to: 0
 35253                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 35254                           
 35255                           ; BSR set to: 0
 35256  002264  C0BD  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 35257  002268  C0BE  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 35258  00226C  EC9D  F03E         	call	__sector_from_cluster	;wreg free
 35259  002270  C001  F0B5         	movff	?__sector_from_cluster,fat_append_to_file@sector
 35260  002274  C002  F0B6         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 35261                           
 35262                           ;fat16.c: 512: length = 512 - offset;
 35263  002278  C0BF  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 35264  00227C  C0C0  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 35265  002280  1E43               	comf	??_fat_append_to_file,f,c
 35266  002282  1E44               	comf	??_fat_append_to_file+1,f,c
 35267  002284  4A43               	infsnz	??_fat_append_to_file,f,c
 35268  002286  2A44               	incf	??_fat_append_to_file+1,f,c
 35269  002288  0E00               	movlw	0
 35270  00228A  2443               	addwf	??_fat_append_to_file,w,c
 35271  00228C  0100               	movlb	0	; () banked
 35272  00228E  6FC2               	movwf	fat_append_to_file@length& (0+255),b
 35273  002290  0E02               	movlw	2
 35274  002292  2044               	addwfc	??_fat_append_to_file+1,w,c
 35275  002294  6FC3               	movwf	(fat_append_to_file@length+1)& (0+255),b
 35276                           
 35277                           ; BSR set to: 0
 35278                           ;fat16.c: 513: if(length>number_of_bytes)
 35279  002296  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35280  002298  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 35281  00229A  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35282  00229C  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 35283  00229E  B0D8               	btfsc	status,0,c
 35284  0022A0  D004               	goto	l1955
 35285                           
 35286                           ; BSR set to: 0
 35287                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 35288  0022A2  C03F  F0C2         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 35289  0022A6  C040  F0C3         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 35290  0022AA                     l1955:
 35291                           
 35292                           ; BSR set to: 0
 35293                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 35294                           
 35295                           ; BSR set to: 0
 35296  0022AA  C0B5  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 35297  0022AE  C0B6  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 35298  0022B2  C0BF  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 35299  0022B6  C0C0  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 35300  0022BA  C0C2  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 35301  0022BE  C0C3  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 35302  0022C2  51C4               	movf	fat_append_to_file@position& (0+255),w,b
 35303  0022C4  2441               	addwf	fat_append_to_file@data,w,c
 35304  0022C6  6E26               	movwf	flash_partial_write@data,c
 35305  0022C8  51C5               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 35306  0022CA  2042               	addwfc	fat_append_to_file@data+1,w,c
 35307  0022CC  6E27               	movwf	flash_partial_write@data+1,c
 35308  0022CE  ECC7  F033         	call	_flash_partial_write	;wreg free
 35309                           
 35310                           ;fat16.c: 522: position += length;
 35311  0022D2  0100               	movlb	0	; () banked
 35312  0022D4  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35313  0022D6  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 35314  0022D8  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35315  0022DA  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 35316  0022DC  0E00               	movlw	0
 35317  0022DE  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 35318  0022E0  0E00               	movlw	0
 35319  0022E2  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;fat16.c: 523: offset += length;
 35323  0022E4  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35324  0022E6  27BF               	addwf	fat_append_to_file@offset& (0+255),f,b
 35325  0022E8  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35326  0022EA  23C0               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 35327  0022EC                     l1952:
 35328                           
 35329                           ; BSR set to: 0
 35330                           
 35331                           ; BSR set to: 0
 35332  0022EC  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 35333  0022EE  6E43               	movwf	??_fat_append_to_file& (0+255),c
 35334  0022F0  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 35335  0022F2  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 35336  0022F4  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 35337  0022F6  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 35338  0022F8  5043               	movf	??_fat_append_to_file,w,c
 35339  0022FA  5DC4               	subwf	fat_append_to_file@position& (0+255),w,b
 35340  0022FC  5044               	movf	??_fat_append_to_file+1,w,c
 35341  0022FE  59C5               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 35342  002300  5045               	movf	??_fat_append_to_file+2,w,c
 35343  002302  59C6               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 35344  002304  5046               	movf	??_fat_append_to_file+3,w,c
 35345  002306  59C7               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 35346  002308  A0D8               	btfss	status,0,c
 35347  00230A  D781               	goto	l1953
 35348                           
 35349                           ; BSR set to: 0
 35350                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 35351                           
 35352                           ; BSR set to: 0
 35353  00230C  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 35354  00230E  27E4               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 35355  002310  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 35356  002312  23E5               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 35357  002314  0E00               	movlw	0
 35358  002316  23E6               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 35359  002318  0E00               	movlw	0
 35360  00231A  23E7               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 35361                           
 35362                           ; BSR set to: 0
 35363                           ;fat16.c: 529: _update_modified_time(&root);
 35364  00231C  0EC8               	movlw	low fat_append_to_file@root
 35365  00231E  6E05               	movwf	__update_modified_time@root,c
 35366  002320  0E00               	movlw	high fat_append_to_file@root
 35367  002322  6E06               	movwf	__update_modified_time@root+1,c
 35368  002324  EC39  F03C         	call	__update_modified_time	;wreg free
 35369                           
 35370                           ;fat16.c: 530: _write_root(file_number, &root);
 35371  002328  0EC8               	movlw	low fat_append_to_file@root
 35372  00232A  6E29               	movwf	__write_root@data,c
 35373  00232C  0E00               	movlw	high fat_append_to_file@root
 35374  00232E  6E2A               	movwf	__write_root@data+1,c
 35375  002330  0100               	movlb	0	; () banked
 35376  002332  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35377  002334  EC52  F037         	call	__write_root
 35378  002338  0012               	return	
 35379  00233A                     __end_of_fat_append_to_file:
 35380                           	opt stack 0
 35381                           tosu	equ	0xFFF
 35382                           tosh	equ	0xFFE
 35383                           tosl	equ	0xFFD
 35384                           pclath	equ	0xFFA
 35385                           tblptru	equ	0xFF8
 35386                           tblptrh	equ	0xFF7
 35387                           tblptrl	equ	0xFF6
 35388                           tablat	equ	0xFF5
 35389                           prodh	equ	0xFF4
 35390                           prodl	equ	0xFF3
 35391                           intcon	equ	0xFF2
 35392                           intcon2	equ	0xFF1
 35393                           intcon3	equ	0xFF0
 35394                           indf0	equ	0xFEF
 35395                           postinc0	equ	0xFEE
 35396                           fsr0h	equ	0xFEA
 35397                           fsr0l	equ	0xFE9
 35398                           wreg	equ	0xFE8
 35399                           indf1	equ	0xFE7
 35400                           postdec1	equ	0xFE5
 35401                           plusw1	equ	0xFE3
 35402                           fsr1h	equ	0xFE2
 35403                           fsr1l	equ	0xFE1
 35404                           indf2	equ	0xFDF
 35405                           postinc2	equ	0xFDE
 35406                           postdec2	equ	0xFDD
 35407                           plusw2	equ	0xFDB
 35408                           fsr2h	equ	0xFDA
 35409                           fsr2l	equ	0xFD9
 35410                           status	equ	0xFD8
 35411                           
 35412 ;; *************** function _fat_get_file_information *****************
 35413 ;; Defined at:
 35414 ;;		line 981 in file "fat16.c"
 35415 ;; Parameters:    Size  Location     Type
 35416 ;;  file_number     1    wreg     unsigned char 
 35417 ;;  data            2   54[COMRAM] PTR struct .
 35418 ;;		 -> _spi_external_tx_buffer(64), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32),
      + 
 35419 ;;		 -> RAM(3759), 
 35420 ;; Auto vars:     Size  Location     Type
 35421 ;;  file_number     1   61[COMRAM] unsigned char 
 35422 ;;  offset          2   59[COMRAM] unsigned int 
 35423 ;;  root_sector     2   57[COMRAM] unsigned int 
 35424 ;; Return value:  Size  Location     Type
 35425 ;;                  1    wreg      unsigned char 
 35426 ;; Registers used:
 35427 ;;		wreg, status,2, status,0, cstack
 35428 ;; Tracked objects:
 35429 ;;		On entry : 0/0
 35430 ;;		On exit  : 0/0
 35431 ;;		Unchanged: 0/0
 35432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35434 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35436 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35437 ;;Total ram usage:        8 bytes
 35438 ;; Hardware stack levels used:    1
 35439 ;; Hardware stack levels required when called:    6
 35440 ;; This function calls:
 35441 ;;		__root_is_available
 35442 ;;		_flash_partial_read
 35443 ;; This function is called by:
 35444 ;;		_fat_append_to_file
 35445 ;;		_fat_rename_file
 35446 ;;		_fat_read_from_file
 35447 ;;		__fill_buffer_get_file_details
 35448 ;; This function uses a non-reentrant model
 35449 ;;
 35450                           
 35451                           	psect	text180
 35452  0065C4                     __ptext180:
 35453                           	opt stack 0
 35454  0065C4                     _fat_get_file_information:
 35455                           	opt stack 21
 35456                           
 35457                           ;incstack = 0
 35458                           ;fat_get_file_information@file_number stored from wreg
 35459  0065C4  6E3E               	movwf	fat_get_file_information@file_number,c
 35460                           
 35461                           ;fat16.c: 983: uint16_t root_sector;;fat16.c: 984: uint16_t offset;;fat16.c: 986: if(fil
      +                          e_number>=64)
 35462  0065C6  0E3F               	movlw	63
 35463  0065C8  643E               	cpfsgt	fat_get_file_information@file_number,c
 35464  0065CA  D002               	goto	l2138
 35465                           
 35466                           ;fat16.c: 987: {;fat16.c: 989: return 0x01;
 35467  0065CC  0E01               	movlw	1
 35468  0065CE  0012               	return	
 35469  0065D0                     l2138:
 35470                           
 35471                           ;fat16.c: 990: };fat16.c: 991: if(_root_is_available(file_number))
 35472  0065D0  503E               	movf	fat_get_file_information@file_number,w,c
 35473  0065D2  ECA7  F032         	call	__root_is_available
 35474  0065D6  0900               	iorlw	0
 35475  0065D8  B4D8               	btfsc	status,2,c
 35476  0065DA  D002               	goto	l2140
 35477                           
 35478                           ;fat16.c: 992: {;fat16.c: 994: return 0x02;
 35479  0065DC  0E02               	movlw	2
 35480  0065DE  0012               	return	
 35481  0065E0                     l2140:
 35482                           
 35483                           ;fat16.c: 995: };fat16.c: 997: root_sector = (file_number >> 4) + 34;
 35484  0065E0  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 35485  0065E4  3A39               	swapf	??_fat_get_file_information,f,c
 35486  0065E6  0E0F               	movlw	15
 35487  0065E8  1639               	andwf	??_fat_get_file_information,f,c
 35488  0065EA  0E22               	movlw	34
 35489  0065EC  2439               	addwf	??_fat_get_file_information,w,c
 35490  0065EE  6E3A               	movwf	fat_get_file_information@root_sector,c
 35491  0065F0  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 35492  0065F2  0E00               	movlw	0
 35493  0065F4  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 35494                           
 35495                           ;fat16.c: 998: offset = (file_number & 0b1111);
 35496  0065F6  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 35497  0065FA  0E0F               	movlw	15
 35498  0065FC  1639               	andwf	??_fat_get_file_information,f,c
 35499  0065FE  5039               	movf	??_fat_get_file_information,w,c
 35500  006600  6E3C               	movwf	fat_get_file_information@offset,c
 35501  006602  6A3D               	clrf	fat_get_file_information@offset+1,c
 35502                           
 35503                           ;fat16.c: 999: offset <<= 5;
 35504  006604  0E05               	movlw	5
 35505  006606                     u7705:
 35506  006606  90D8               	bcf	status,0,c
 35507  006608  363C               	rlcf	fat_get_file_information@offset,f,c
 35508  00660A  363D               	rlcf	fat_get_file_information@offset+1,f,c
 35509  00660C  2EE8               	decfsz	wreg,f,c
 35510  00660E  D7FB               	goto	u7705
 35511                           
 35512                           ;fat16.c: 1000: flash_partial_read(root_sector, offset, 32, data);
 35513  006610  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 35514  006614  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 35515  006618  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 35516  00661C  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 35517  006620  0E00               	movlw	0
 35518  006622  6E2D               	movwf	flash_partial_read@length+1,c
 35519  006624  0E20               	movlw	32
 35520  006626  6E2C               	movwf	flash_partial_read@length,c
 35521  006628  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 35522  00662C  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 35523  006630  EC52  F03C         	call	_flash_partial_read	;wreg free
 35524                           
 35525                           ;fat16.c: 1003: return 0x00;
 35526  006634  0E00               	movlw	0
 35527  006636  0012               	return	
 35528  006638                     __end_of_fat_get_file_information:
 35529                           	opt stack 0
 35530                           tosu	equ	0xFFF
 35531                           tosh	equ	0xFFE
 35532                           tosl	equ	0xFFD
 35533                           pclath	equ	0xFFA
 35534                           tblptru	equ	0xFF8
 35535                           tblptrh	equ	0xFF7
 35536                           tblptrl	equ	0xFF6
 35537                           tablat	equ	0xFF5
 35538                           prodh	equ	0xFF4
 35539                           prodl	equ	0xFF3
 35540                           intcon	equ	0xFF2
 35541                           intcon2	equ	0xFF1
 35542                           intcon3	equ	0xFF0
 35543                           indf0	equ	0xFEF
 35544                           postinc0	equ	0xFEE
 35545                           fsr0h	equ	0xFEA
 35546                           fsr0l	equ	0xFE9
 35547                           wreg	equ	0xFE8
 35548                           indf1	equ	0xFE7
 35549                           postdec1	equ	0xFE5
 35550                           plusw1	equ	0xFE3
 35551                           fsr1h	equ	0xFE2
 35552                           fsr1l	equ	0xFE1
 35553                           indf2	equ	0xFDF
 35554                           postinc2	equ	0xFDE
 35555                           postdec2	equ	0xFDD
 35556                           plusw2	equ	0xFDB
 35557                           fsr2h	equ	0xFDA
 35558                           fsr2l	equ	0xFD9
 35559                           status	equ	0xFD8
 35560                           
 35561 ;; *************** function __root_is_available *****************
 35562 ;; Defined at:
 35563 ;;		line 59 in file "fat16.c"
 35564 ;; Parameters:    Size  Location     Type
 35565 ;;  file_number     1    wreg     unsigned char 
 35566 ;; Auto vars:     Size  Location     Type
 35567 ;;  file_number     1   52[COMRAM] unsigned char 
 35568 ;;  offset          2   50[COMRAM] unsigned int 
 35569 ;;  root_sector     2   48[COMRAM] unsigned int 
 35570 ;;  first_byte      1   53[COMRAM] unsigned char 
 35571 ;; Return value:  Size  Location     Type
 35572 ;;                  1    wreg      unsigned char 
 35573 ;; Registers used:
 35574 ;;		wreg, status,2, status,0, cstack
 35575 ;; Tracked objects:
 35576 ;;		On entry : 0/0
 35577 ;;		On exit  : 0/0
 35578 ;;		Unchanged: 0/0
 35579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35581 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35583 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35584 ;;Total ram usage:        7 bytes
 35585 ;; Hardware stack levels used:    1
 35586 ;; Hardware stack levels required when called:    5
 35587 ;; This function calls:
 35588 ;;		_flash_partial_read
 35589 ;; This function is called by:
 35590 ;;		__get_available_root_entry
 35591 ;;		_fat_delete_file
 35592 ;;		_fat_append_to_file
 35593 ;;		_fat_get_file_information
 35594 ;; This function uses a non-reentrant model
 35595 ;;
 35596                           
 35597                           	psect	text181
 35598  00654E                     __ptext181:
 35599                           	opt stack 0
 35600  00654E                     __root_is_available:
 35601                           	opt stack 21
 35602                           
 35603                           ;incstack = 0
 35604                           ;__root_is_available@file_number stored from wreg
 35605  00654E  6E35               	movwf	__root_is_available@file_number,c
 35606                           
 35607                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 35608  006550  0E3F               	movlw	63
 35609  006552  6435               	cpfsgt	__root_is_available@file_number,c
 35610  006554  D002               	goto	l1858
 35611                           
 35612                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 35613  006556  0E00               	movlw	0
 35614  006558  0012               	return	
 35615  00655A                     l1858:
 35616                           
 35617                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 35618  00655A  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 35619  00655E  3A30               	swapf	??__root_is_available,f,c
 35620  006560  0E0F               	movlw	15
 35621  006562  1630               	andwf	??__root_is_available,f,c
 35622  006564  0E22               	movlw	34
 35623  006566  2430               	addwf	??__root_is_available,w,c
 35624  006568  6E31               	movwf	__root_is_available@root_sector,c
 35625  00656A  6A32               	clrf	__root_is_available@root_sector+1,c
 35626  00656C  0E00               	movlw	0
 35627  00656E  2232               	addwfc	__root_is_available@root_sector+1,f,c
 35628                           
 35629                           ;fat16.c: 75: offset = (file_number & 0b1111);
 35630  006570  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 35631  006574  0E0F               	movlw	15
 35632  006576  1630               	andwf	??__root_is_available,f,c
 35633  006578  5030               	movf	??__root_is_available,w,c
 35634  00657A  6E33               	movwf	__root_is_available@offset,c
 35635  00657C  6A34               	clrf	__root_is_available@offset+1,c
 35636                           
 35637                           ;fat16.c: 76: offset <<= 5;
 35638  00657E  0E05               	movlw	5
 35639  006580                     u6825:
 35640  006580  90D8               	bcf	status,0,c
 35641  006582  3633               	rlcf	__root_is_available@offset,f,c
 35642  006584  3634               	rlcf	__root_is_available@offset+1,f,c
 35643  006586  2EE8               	decfsz	wreg,f,c
 35644  006588  D7FB               	goto	u6825
 35645                           
 35646                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 35647  00658A  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 35648  00658E  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 35649  006592  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 35650  006596  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 35651  00659A  0E00               	movlw	0
 35652  00659C  6E2D               	movwf	flash_partial_read@length+1,c
 35653  00659E  0E01               	movlw	1
 35654  0065A0  6E2C               	movwf	flash_partial_read@length,c
 35655  0065A2  0E36               	movlw	low __root_is_available@first_byte
 35656  0065A4  6E2E               	movwf	flash_partial_read@data,c
 35657  0065A6  0E00               	movlw	high __root_is_available@first_byte
 35658  0065A8  6E2F               	movwf	flash_partial_read@data+1,c
 35659  0065AA  EC52  F03C         	call	_flash_partial_read	;wreg free
 35660                           
 35661                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 35662  0065AE  5036               	movf	__root_is_available@first_byte,w,c
 35663  0065B0  B4D8               	btfsc	status,2,c
 35664  0065B2  D004               	goto	u6840
 35665  0065B4  0EE5               	movlw	229
 35666  0065B6  1836               	xorwf	__root_is_available@first_byte,w,c
 35667  0065B8  A4D8               	btfss	status,2,c
 35668  0065BA  D002               	goto	l1860
 35669  0065BC                     u6840:
 35670                           
 35671                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 35672  0065BC  0E01               	movlw	1
 35673                           
 35674                           ;fat16.c: 86: }
 35675  0065BE  0012               	return	
 35676  0065C0                     l1860:
 35677                           
 35678                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 35679  0065C0  0E00               	movlw	0
 35680  0065C2  0012               	return	
 35681  0065C4                     __end_of__root_is_available:
 35682                           	opt stack 0
 35683                           tosu	equ	0xFFF
 35684                           tosh	equ	0xFFE
 35685                           tosl	equ	0xFFD
 35686                           pclath	equ	0xFFA
 35687                           tblptru	equ	0xFF8
 35688                           tblptrh	equ	0xFF7
 35689                           tblptrl	equ	0xFF6
 35690                           tablat	equ	0xFF5
 35691                           prodh	equ	0xFF4
 35692                           prodl	equ	0xFF3
 35693                           intcon	equ	0xFF2
 35694                           intcon2	equ	0xFF1
 35695                           intcon3	equ	0xFF0
 35696                           indf0	equ	0xFEF
 35697                           postinc0	equ	0xFEE
 35698                           fsr0h	equ	0xFEA
 35699                           fsr0l	equ	0xFE9
 35700                           wreg	equ	0xFE8
 35701                           indf1	equ	0xFE7
 35702                           postdec1	equ	0xFE5
 35703                           plusw1	equ	0xFE3
 35704                           fsr1h	equ	0xFE2
 35705                           fsr1l	equ	0xFE1
 35706                           indf2	equ	0xFDF
 35707                           postinc2	equ	0xFDE
 35708                           postdec2	equ	0xFDD
 35709                           plusw2	equ	0xFDB
 35710                           fsr2h	equ	0xFDA
 35711                           fsr2l	equ	0xFD9
 35712                           status	equ	0xFD8
 35713                           
 35714 ;; *************** function __write_root *****************
 35715 ;; Defined at:
 35716 ;;		line 182 in file "fat16.c"
 35717 ;; Parameters:    Size  Location     Type
 35718 ;;  slot            1    wreg     unsigned char 
 35719 ;;  data            2   40[COMRAM] PTR struct .
 35720 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35721 ;; Auto vars:     Size  Location     Type
 35722 ;;  slot            1   47[COMRAM] unsigned char 
 35723 ;;  offset          2   45[COMRAM] unsigned int 
 35724 ;;  root_sector     2   43[COMRAM] unsigned int 
 35725 ;; Return value:  Size  Location     Type
 35726 ;;                  1    wreg      void 
 35727 ;; Registers used:
 35728 ;;		wreg, status,2, status,0, cstack
 35729 ;; Tracked objects:
 35730 ;;		On entry : 0/0
 35731 ;;		On exit  : 0/0
 35732 ;;		Unchanged: 0/0
 35733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35735 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35737 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35738 ;;Total ram usage:        8 bytes
 35739 ;; Hardware stack levels used:    1
 35740 ;; Hardware stack levels required when called:    5
 35741 ;; This function calls:
 35742 ;;		_flash_partial_write
 35743 ;; This function is called by:
 35744 ;;		_fat_create_file
 35745 ;;		_fat_append_to_file
 35746 ;;		_fat_rename_file
 35747 ;; This function uses a non-reentrant model
 35748 ;;
 35749                           
 35750                           	psect	text182
 35751  006EA4                     __ptext182:
 35752                           	opt stack 0
 35753  006EA4                     __write_root:
 35754                           	opt stack 21
 35755                           
 35756                           ;incstack = 0
 35757                           ;__write_root@slot stored from wreg
 35758  006EA4  6E30               	movwf	__write_root@slot,c
 35759                           
 35760                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 34;
 35761  006EA6  C030  F02B         	movff	__write_root@slot,??__write_root
 35762  006EAA  3A2B               	swapf	??__write_root,f,c
 35763  006EAC  0E0F               	movlw	15
 35764  006EAE  162B               	andwf	??__write_root,f,c
 35765  006EB0  0E22               	movlw	34
 35766  006EB2  242B               	addwf	??__write_root,w,c
 35767  006EB4  6E2C               	movwf	__write_root@root_sector,c
 35768  006EB6  6A2D               	clrf	__write_root@root_sector+1,c
 35769  006EB8  0E00               	movlw	0
 35770  006EBA  222D               	addwfc	__write_root@root_sector+1,f,c
 35771                           
 35772                           ;fat16.c: 187: offset = (slot & 0b1111);
 35773  006EBC  C030  F02B         	movff	__write_root@slot,??__write_root
 35774  006EC0  0E0F               	movlw	15
 35775  006EC2  162B               	andwf	??__write_root,f,c
 35776  006EC4  502B               	movf	??__write_root,w,c
 35777  006EC6  6E2E               	movwf	__write_root@offset,c
 35778  006EC8  6A2F               	clrf	__write_root@offset+1,c
 35779                           
 35780                           ;fat16.c: 188: offset <<= 5;
 35781  006ECA  0E05               	movlw	5
 35782  006ECC                     u7575:
 35783  006ECC  90D8               	bcf	status,0,c
 35784  006ECE  362E               	rlcf	__write_root@offset,f,c
 35785  006ED0  362F               	rlcf	__write_root@offset+1,f,c
 35786  006ED2  2EE8               	decfsz	wreg,f,c
 35787  006ED4  D7FB               	goto	u7575
 35788                           
 35789                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 35790  006ED6  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 35791  006EDA  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 35792  006EDE  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 35793  006EE2  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 35794  006EE6  0E00               	movlw	0
 35795  006EE8  6E25               	movwf	flash_partial_write@length+1,c
 35796  006EEA  0E20               	movlw	32
 35797  006EEC  6E24               	movwf	flash_partial_write@length,c
 35798  006EEE  C029  F026         	movff	__write_root@data,flash_partial_write@data
 35799  006EF2  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 35800  006EF6  ECC7  F033         	call	_flash_partial_write	;wreg free
 35801  006EFA  0012               	return		;funcret
 35802  006EFC                     __end_of__write_root:
 35803                           	opt stack 0
 35804                           tosu	equ	0xFFF
 35805                           tosh	equ	0xFFE
 35806                           tosl	equ	0xFFD
 35807                           pclath	equ	0xFFA
 35808                           tblptru	equ	0xFF8
 35809                           tblptrh	equ	0xFF7
 35810                           tblptrl	equ	0xFF6
 35811                           tablat	equ	0xFF5
 35812                           prodh	equ	0xFF4
 35813                           prodl	equ	0xFF3
 35814                           intcon	equ	0xFF2
 35815                           intcon2	equ	0xFF1
 35816                           intcon3	equ	0xFF0
 35817                           indf0	equ	0xFEF
 35818                           postinc0	equ	0xFEE
 35819                           fsr0h	equ	0xFEA
 35820                           fsr0l	equ	0xFE9
 35821                           wreg	equ	0xFE8
 35822                           indf1	equ	0xFE7
 35823                           postdec1	equ	0xFE5
 35824                           plusw1	equ	0xFE3
 35825                           fsr1h	equ	0xFE2
 35826                           fsr1l	equ	0xFE1
 35827                           indf2	equ	0xFDF
 35828                           postinc2	equ	0xFDE
 35829                           postdec2	equ	0xFDD
 35830                           plusw2	equ	0xFDB
 35831                           fsr2h	equ	0xFDA
 35832                           fsr2l	equ	0xFD9
 35833                           status	equ	0xFD8
 35834                           
 35835 ;; *************** function __write_fat *****************
 35836 ;; Defined at:
 35837 ;;		line 158 in file "fat16.c"
 35838 ;; Parameters:    Size  Location     Type
 35839 ;;  cluster         2   40[COMRAM] unsigned int 
 35840 ;;  value           2   42[COMRAM] unsigned int 
 35841 ;; Auto vars:     Size  Location     Type
 35842 ;;  offset          2   46[COMRAM] unsigned int 
 35843 ;;  fat_sector      2   44[COMRAM] unsigned int 
 35844 ;; Return value:  Size  Location     Type
 35845 ;;                  1    wreg      void 
 35846 ;; Registers used:
 35847 ;;		wreg, status,2, status,0, cstack
 35848 ;; Tracked objects:
 35849 ;;		On entry : 0/0
 35850 ;;		On exit  : 0/0
 35851 ;;		Unchanged: 0/0
 35852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35854 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35856 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35857 ;;Total ram usage:        8 bytes
 35858 ;; Hardware stack levels used:    1
 35859 ;; Hardware stack levels required when called:    5
 35860 ;; This function calls:
 35861 ;;		_flash_partial_write
 35862 ;; This function is called by:
 35863 ;;		_fat_create_file
 35864 ;;		_fat_delete_file
 35865 ;;		_fat_append_to_file
 35866 ;; This function uses a non-reentrant model
 35867 ;;
 35868                           
 35869                           	psect	text183
 35870  00756C                     __ptext183:
 35871                           	opt stack 0
 35872  00756C                     __write_fat:
 35873                           	opt stack 21
 35874                           
 35875                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 35876                           
 35877                           ;incstack = 0
 35878  00756C  502A               	movf	__write_fat@cluster+1,w,c
 35879  00756E  6E2D               	movwf	__write_fat@fat_sector,c
 35880  007570  6A2E               	clrf	__write_fat@fat_sector+1,c
 35881                           
 35882                           ;fat16.c: 163: fat_sector += 2;
 35883  007572  0E02               	movlw	2
 35884  007574  262D               	addwf	__write_fat@fat_sector,f,c
 35885  007576  0E00               	movlw	0
 35886  007578  222E               	addwfc	__write_fat@fat_sector+1,f,c
 35887                           
 35888                           ;fat16.c: 164: offset = cluster & 0xFF;
 35889  00757A  5029               	movf	__write_fat@cluster,w,c
 35890  00757C  6E2F               	movwf	__write_fat@offset,c
 35891  00757E  6A30               	clrf	__write_fat@offset+1,c
 35892                           
 35893                           ;fat16.c: 165: offset <<= 1;
 35894  007580  90D8               	bcf	status,0,c
 35895  007582  362F               	rlcf	__write_fat@offset,f,c
 35896  007584  3630               	rlcf	__write_fat@offset+1,f,c
 35897                           
 35898                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 35899  007586  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 35900  00758A  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 35901  00758E  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 35902  007592  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 35903  007596  0E00               	movlw	0
 35904  007598  6E25               	movwf	flash_partial_write@length+1,c
 35905  00759A  0E02               	movlw	2
 35906  00759C  6E24               	movwf	flash_partial_write@length,c
 35907  00759E  0E2B               	movlw	low __write_fat@value
 35908  0075A0  6E26               	movwf	flash_partial_write@data,c
 35909  0075A2  0E00               	movlw	high __write_fat@value
 35910  0075A4  6E27               	movwf	flash_partial_write@data+1,c
 35911  0075A6  ECC7  F033         	call	_flash_partial_write	;wreg free
 35912  0075AA  0012               	return		;funcret
 35913  0075AC                     __end_of__write_fat:
 35914                           	opt stack 0
 35915                           tosu	equ	0xFFF
 35916                           tosh	equ	0xFFE
 35917                           tosl	equ	0xFFD
 35918                           pclath	equ	0xFFA
 35919                           tblptru	equ	0xFF8
 35920                           tblptrh	equ	0xFF7
 35921                           tblptrl	equ	0xFF6
 35922                           tablat	equ	0xFF5
 35923                           prodh	equ	0xFF4
 35924                           prodl	equ	0xFF3
 35925                           intcon	equ	0xFF2
 35926                           intcon2	equ	0xFF1
 35927                           intcon3	equ	0xFF0
 35928                           indf0	equ	0xFEF
 35929                           postinc0	equ	0xFEE
 35930                           fsr0h	equ	0xFEA
 35931                           fsr0l	equ	0xFE9
 35932                           wreg	equ	0xFE8
 35933                           indf1	equ	0xFE7
 35934                           postdec1	equ	0xFE5
 35935                           plusw1	equ	0xFE3
 35936                           fsr1h	equ	0xFE2
 35937                           fsr1l	equ	0xFE1
 35938                           indf2	equ	0xFDF
 35939                           postinc2	equ	0xFDE
 35940                           postdec2	equ	0xFDD
 35941                           plusw2	equ	0xFDB
 35942                           fsr2h	equ	0xFDA
 35943                           fsr2l	equ	0xFD9
 35944                           status	equ	0xFD8
 35945                           
 35946 ;; *************** function _flash_partial_write *****************
 35947 ;; Defined at:
 35948 ;;		line 471 in file "flash.c"
 35949 ;; Parameters:    Size  Location     Type
 35950 ;;  page            2   31[COMRAM] unsigned int 
 35951 ;;  start           2   33[COMRAM] unsigned int 
 35952 ;;  length          2   35[COMRAM] unsigned int 
 35953 ;;  data            2   37[COMRAM] PTR unsigned char 
 35954 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 35955 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 35956 ;; Auto vars:     Size  Location     Type
 35957 ;;  match           1   39[COMRAM] enum E6886
 35958 ;; Return value:  Size  Location     Type
 35959 ;;                  1    wreg      void 
 35960 ;; Registers used:
 35961 ;;		wreg, status,2, status,0, cstack
 35962 ;; Tracked objects:
 35963 ;;		On entry : 0/0
 35964 ;;		On exit  : 0/0
 35965 ;;		Unchanged: 0/0
 35966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35967 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35970 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35971 ;;Total ram usage:        9 bytes
 35972 ;; Hardware stack levels used:    1
 35973 ;; Hardware stack levels required when called:    4
 35974 ;; This function calls:
 35975 ;;		__flash_compare_page_to_buffer
 35976 ;;		__flash_copy_page_to_buffer
 35977 ;;		__flash_write_page_from_buffer
 35978 ;;		__flash_write_to_buffer
 35979 ;;		_flash_is_busy
 35980 ;;		_spi_set_configuration
 35981 ;; This function is called by:
 35982 ;;		__write_fat
 35983 ;;		__write_root
 35984 ;;		__delete_root
 35985 ;;		_fat_append_to_file
 35986 ;;		__write_file_size
 35987 ;; This function uses a non-reentrant model
 35988 ;;
 35989                           
 35990                           	psect	text184
 35991  00678E                     __ptext184:
 35992                           	opt stack 0
 35993  00678E                     _flash_partial_write:
 35994                           	opt stack 21
 35995                           
 35996                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 35997                           
 35998                           ;incstack = 0
 35999  00678E  0E00               	movlw	0
 36000  006790  ECB1  F022         	call	_spi_set_configuration
 36001  006794  EC54  F03E         	call	_flash_is_busy	;wreg free
 36002  006798  0900               	iorlw	0
 36003  00679A  A4D8               	btfss	status,2,c
 36004  00679C  D7FB               	goto	l1790
 36005                           
 36006                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 36007  00679E  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 36008  0067A2  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 36009  0067A6  0E00               	movlw	0
 36010  0067A8  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 36011  0067AA  ECAA  F037         	call	__flash_copy_page_to_buffer	;wreg free
 36012                           
 36013                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 36014  0067AE  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 36015  0067B2  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 36016  0067B6  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 36017  0067BA  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 36018  0067BE  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 36019  0067C2  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 36020  0067C6  0E00               	movlw	0
 36021  0067C8  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 36022  0067CA  EC7D  F039         	call	__flash_write_to_buffer	;wreg free
 36023                           
 36024                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36025  0067CE  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 36026  0067D2  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 36027  0067D6  0E00               	movlw	0
 36028  0067D8  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 36029  0067DA  EC2F  F032         	call	__flash_compare_page_to_buffer	;wreg free
 36030  0067DE  6E28               	movwf	flash_partial_write@match,c
 36031                           
 36032                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 36033  0067E0  0428               	decf	flash_partial_write@match,w,c
 36034  0067E2  A4D8               	btfss	status,2,c
 36035  0067E4  D008               	goto	l1792
 36036                           
 36037                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36038  0067E6  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 36039  0067EA  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 36040  0067EE  0E00               	movlw	0
 36041  0067F0  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 36042  0067F2  EC7E  F037         	call	__flash_write_page_from_buffer	;wreg free
 36043  0067F6                     l1792:
 36044                           
 36045                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36046  0067F6  0E01               	movlw	1
 36047  0067F8  ECB1  F022         	call	_spi_set_configuration
 36048  0067FC  0012               	return		;funcret
 36049  0067FE                     __end_of_flash_partial_write:
 36050                           	opt stack 0
 36051                           tosu	equ	0xFFF
 36052                           tosh	equ	0xFFE
 36053                           tosl	equ	0xFFD
 36054                           pclath	equ	0xFFA
 36055                           tblptru	equ	0xFF8
 36056                           tblptrh	equ	0xFF7
 36057                           tblptrl	equ	0xFF6
 36058                           tablat	equ	0xFF5
 36059                           prodh	equ	0xFF4
 36060                           prodl	equ	0xFF3
 36061                           intcon	equ	0xFF2
 36062                           intcon2	equ	0xFF1
 36063                           intcon3	equ	0xFF0
 36064                           indf0	equ	0xFEF
 36065                           postinc0	equ	0xFEE
 36066                           fsr0h	equ	0xFEA
 36067                           fsr0l	equ	0xFE9
 36068                           wreg	equ	0xFE8
 36069                           indf1	equ	0xFE7
 36070                           postdec1	equ	0xFE5
 36071                           plusw1	equ	0xFE3
 36072                           fsr1h	equ	0xFE2
 36073                           fsr1l	equ	0xFE1
 36074                           indf2	equ	0xFDF
 36075                           postinc2	equ	0xFDE
 36076                           postdec2	equ	0xFDD
 36077                           plusw2	equ	0xFDB
 36078                           fsr2h	equ	0xFDA
 36079                           fsr2l	equ	0xFD9
 36080                           status	equ	0xFD8
 36081                           
 36082 ;; *************** function _flash_is_busy *****************
 36083 ;; Defined at:
 36084 ;;		line 354 in file "flash.c"
 36085 ;; Parameters:    Size  Location     Type
 36086 ;;		None
 36087 ;; Auto vars:     Size  Location     Type
 36088 ;;  result          1   19[COMRAM] unsigned char 
 36089 ;; Return value:  Size  Location     Type
 36090 ;;                  1    wreg      unsigned char 
 36091 ;; Registers used:
 36092 ;;		wreg, status,2, status,0, cstack
 36093 ;; Tracked objects:
 36094 ;;		On entry : 0/0
 36095 ;;		On exit  : 0/0
 36096 ;;		Unchanged: 0/0
 36097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36102 ;;Total ram usage:        1 bytes
 36103 ;; Hardware stack levels used:    1
 36104 ;; Hardware stack levels required when called:    3
 36105 ;; This function calls:
 36106 ;;		__flash_is_busy
 36107 ;;		_spi_set_configuration
 36108 ;; This function is called by:
 36109 ;;		_flash_partial_write
 36110 ;;		_api_prepare
 36111 ;;		__fill_buffer_get_status
 36112 ;; This function uses a non-reentrant model
 36113 ;;
 36114                           
 36115                           	psect	text185
 36116  007CA8                     __ptext185:
 36117                           	opt stack 0
 36118  007CA8                     _flash_is_busy:
 36119                           	opt stack 26
 36120                           
 36121                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 36122                           
 36123                           ;incstack = 0
 36124  007CA8  0E00               	movlw	0
 36125  007CAA  ECB1  F022         	call	_spi_set_configuration
 36126                           
 36127                           ;flash.c: 362: result = _flash_is_busy();
 36128  007CAE  ECD7  F03D         	call	__flash_is_busy	;wreg free
 36129  007CB2  6E14               	movwf	flash_is_busy@result,c
 36130                           
 36131                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36132  007CB4  0E01               	movlw	1
 36133  007CB6  ECB1  F022         	call	_spi_set_configuration
 36134                           
 36135                           ;flash.c: 368: return result;
 36136  007CBA  5014               	movf	flash_is_busy@result,w,c
 36137  007CBC  0012               	return	
 36138  007CBE                     __end_of_flash_is_busy:
 36139                           	opt stack 0
 36140                           tosu	equ	0xFFF
 36141                           tosh	equ	0xFFE
 36142                           tosl	equ	0xFFD
 36143                           pclath	equ	0xFFA
 36144                           tblptru	equ	0xFF8
 36145                           tblptrh	equ	0xFF7
 36146                           tblptrl	equ	0xFF6
 36147                           tablat	equ	0xFF5
 36148                           prodh	equ	0xFF4
 36149                           prodl	equ	0xFF3
 36150                           intcon	equ	0xFF2
 36151                           intcon2	equ	0xFF1
 36152                           intcon3	equ	0xFF0
 36153                           indf0	equ	0xFEF
 36154                           postinc0	equ	0xFEE
 36155                           fsr0h	equ	0xFEA
 36156                           fsr0l	equ	0xFE9
 36157                           wreg	equ	0xFE8
 36158                           indf1	equ	0xFE7
 36159                           postdec1	equ	0xFE5
 36160                           plusw1	equ	0xFE3
 36161                           fsr1h	equ	0xFE2
 36162                           fsr1l	equ	0xFE1
 36163                           indf2	equ	0xFDF
 36164                           postinc2	equ	0xFDE
 36165                           postdec2	equ	0xFDD
 36166                           plusw2	equ	0xFDB
 36167                           fsr2h	equ	0xFDA
 36168                           fsr2l	equ	0xFD9
 36169                           status	equ	0xFD8
 36170                           
 36171 ;; *************** function __flash_write_to_buffer *****************
 36172 ;; Defined at:
 36173 ;;		line 232 in file "flash.c"
 36174 ;; Parameters:    Size  Location     Type
 36175 ;;  start           2   19[COMRAM] unsigned int 
 36176 ;;  data            2   21[COMRAM] PTR unsigned char 
 36177 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36178 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 36179 ;;		 -> RAM(3759), 
 36180 ;;  data_length     2   23[COMRAM] unsigned int 
 36181 ;;  buffer          1   25[COMRAM] enum E6882
 36182 ;; Auto vars:     Size  Location     Type
 36183 ;;  command         4   26[COMRAM] unsigned char [4]
 36184 ;; Return value:  Size  Location     Type
 36185 ;;                  1    wreg      void 
 36186 ;; Registers used:
 36187 ;;		wreg, status,2, status,0, cstack
 36188 ;; Tracked objects:
 36189 ;;		On entry : 0/0
 36190 ;;		On exit  : 0/0
 36191 ;;		Unchanged: 0/0
 36192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36193 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36196 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36197 ;;Total ram usage:       11 bytes
 36198 ;; Hardware stack levels used:    1
 36199 ;; Hardware stack levels required when called:    3
 36200 ;; This function calls:
 36201 ;;		__flash_is_busy
 36202 ;;		_spi_tx_tx
 36203 ;; This function is called by:
 36204 ;;		_flash_page_write
 36205 ;;		_flash_partial_write
 36206 ;; This function uses a non-reentrant model
 36207 ;;
 36208                           
 36209                           	psect	text186
 36210  0072FA                     __ptext186:
 36211                           	opt stack 0
 36212  0072FA                     __flash_write_to_buffer:
 36213                           	opt stack 23
 36214                           
 36215                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 36216                           
 36217                           ;incstack = 0
 36218  0072FA  ECD7  F03D         	call	__flash_is_busy	;wreg free
 36219  0072FE  0900               	iorlw	0
 36220  007300  A4D8               	btfss	status,2,c
 36221  007302  D7FB               	goto	__flash_write_to_buffer
 36222                           
 36223                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 36224  007304  501A               	movf	__flash_write_to_buffer@buffer,w,c
 36225  007306  A4D8               	btfss	status,2,c
 36226  007308  D002               	goto	l1731
 36227                           
 36228                           ;flash.c: 241: command[0] = 0x84;
 36229  00730A  0E84               	movlw	132
 36230  00730C  6E1B               	movwf	__flash_write_to_buffer@command,c
 36231  00730E                     l1731:
 36232                           
 36233                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 36234  00730E  041A               	decf	__flash_write_to_buffer@buffer,w,c
 36235  007310  A4D8               	btfss	status,2,c
 36236  007312  D002               	goto	l1732
 36237                           
 36238                           ;flash.c: 243: command[0] = 0x87;
 36239  007314  0E87               	movlw	135
 36240  007316  6E1B               	movwf	__flash_write_to_buffer@command,c
 36241  007318                     l1732:
 36242                           
 36243                           ;flash.c: 245: command[1] = 0x00;
 36244  007318  0E00               	movlw	0
 36245  00731A  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 36246                           
 36247                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36248  00731C  5015               	movf	__flash_write_to_buffer@start+1,w,c
 36249  00731E  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 36250                           
 36251                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 36252  007320  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36253                           
 36254                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 36255  007324  0E1B               	movlw	low __flash_write_to_buffer@command
 36256  007326  6E01               	movwf	spi_tx_tx@command,c
 36257  007328  0E00               	movlw	high __flash_write_to_buffer@command
 36258  00732A  6E02               	movwf	spi_tx_tx@command+1,c
 36259  00732C  0E00               	movlw	0
 36260  00732E  6E04               	movwf	spi_tx_tx@command_length+1,c
 36261  007330  0E04               	movlw	4
 36262  007332  6E03               	movwf	spi_tx_tx@command_length,c
 36263  007334  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36264  007338  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36265  00733C  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36266  007340  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36267  007344  ECA8  F030         	call	_spi_tx_tx	;wreg free
 36268  007348  0012               	return		;funcret
 36269  00734A                     __end_of__flash_write_to_buffer:
 36270                           	opt stack 0
 36271                           tosu	equ	0xFFF
 36272                           tosh	equ	0xFFE
 36273                           tosl	equ	0xFFD
 36274                           pclath	equ	0xFFA
 36275                           tblptru	equ	0xFF8
 36276                           tblptrh	equ	0xFF7
 36277                           tblptrl	equ	0xFF6
 36278                           tablat	equ	0xFF5
 36279                           prodh	equ	0xFF4
 36280                           prodl	equ	0xFF3
 36281                           intcon	equ	0xFF2
 36282                           intcon2	equ	0xFF1
 36283                           intcon3	equ	0xFF0
 36284                           indf0	equ	0xFEF
 36285                           postinc0	equ	0xFEE
 36286                           fsr0h	equ	0xFEA
 36287                           fsr0l	equ	0xFE9
 36288                           wreg	equ	0xFE8
 36289                           indf1	equ	0xFE7
 36290                           postdec1	equ	0xFE5
 36291                           plusw1	equ	0xFE3
 36292                           fsr1h	equ	0xFE2
 36293                           fsr1l	equ	0xFE1
 36294                           indf2	equ	0xFDF
 36295                           postinc2	equ	0xFDE
 36296                           postdec2	equ	0xFDD
 36297                           plusw2	equ	0xFDB
 36298                           fsr2h	equ	0xFDA
 36299                           fsr2l	equ	0xFD9
 36300                           status	equ	0xFD8
 36301                           
 36302 ;; *************** function _spi_tx_tx *****************
 36303 ;; Defined at:
 36304 ;;		line 379 in file "spi.c"
 36305 ;; Parameters:    Size  Location     Type
 36306 ;;  command         2    0[COMRAM] PTR unsigned char 
 36307 ;;		 -> _flash_write_to_buffer@command(4), 
 36308 ;;  command_leng    2    2[COMRAM] unsigned int 
 36309 ;;  data            2    4[COMRAM] PTR unsigned char 
 36310 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36311 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 36312 ;;		 -> RAM(3759), 
 36313 ;;  data_length     2    6[COMRAM] unsigned int 
 36314 ;; Auto vars:     Size  Location     Type
 36315 ;;		None
 36316 ;; Return value:  Size  Location     Type
 36317 ;;                  1    wreg      void 
 36318 ;; Registers used:
 36319 ;;		wreg, status,2, status,0
 36320 ;; Tracked objects:
 36321 ;;		On entry : 0/0
 36322 ;;		On exit  : 0/0
 36323 ;;		Unchanged: 0/0
 36324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36325 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36328 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36329 ;;Total ram usage:       12 bytes
 36330 ;; Hardware stack levels used:    1
 36331 ;; This function calls:
 36332 ;;		Nothing
 36333 ;; This function is called by:
 36334 ;;		__flash_write_to_buffer
 36335 ;; This function uses a non-reentrant model
 36336 ;;
 36337                           
 36338                           	psect	text187
 36339  006150                     __ptext187:
 36340                           	opt stack 0
 36341  006150                     _spi_tx_tx:
 36342                           	opt stack 25
 36343                           
 36344                           ;spi.c: 382: DMACON1bits.SSCON1 = 0;
 36345                           
 36346                           ;incstack = 0
 36347  006150  9E88               	bcf	3976,7,c	;volatile
 36348                           
 36349                           ;spi.c: 383: DMACON1bits.SSCON0 = 0;
 36350  006152  9C88               	bcf	3976,6,c	;volatile
 36351                           
 36352                           ;spi.c: 385: DMACON1bits.TXINC = 1;
 36353  006154  8A88               	bsf	3976,5,c	;volatile
 36354                           
 36355                           ;spi.c: 387: DMACON1bits.RXINC = 0;
 36356  006156  9888               	bcf	3976,4,c	;volatile
 36357                           
 36358                           ;spi.c: 389: DMACON1bits.DUPLEX1 = 0;
 36359  006158  9688               	bcf	3976,3,c	;volatile
 36360                           
 36361                           ;spi.c: 390: DMACON1bits.DUPLEX0 = 1;
 36362  00615A  8488               	bsf	3976,2,c	;volatile
 36363                           
 36364                           ;spi.c: 392: DMACON1bits.DLYINTEN = 0;
 36365  00615C  9288               	bcf	3976,1,c	;volatile
 36366                           
 36367                           ;spi.c: 394: DMACON2bits.DLYCYC = 0b0000;
 36368  00615E  9886               	bcf	3974,4,c	;volatile
 36369  006160  9A86               	bcf	3974,5,c	;volatile
 36370  006162  9C86               	bcf	3974,6,c	;volatile
 36371  006164  9E86               	bcf	3974,7,c	;volatile
 36372                           
 36373                           ;spi.c: 396: DMACON2bits.INTLVL = 0b0000;
 36374  006166  9086               	bcf	3974,0,c	;volatile
 36375  006168  9286               	bcf	3974,1,c	;volatile
 36376  00616A  9486               	bcf	3974,2,c	;volatile
 36377  00616C  9686               	bcf	3974,3,c	;volatile
 36378                           
 36379                           ;spi.c: 399: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36380  00616E  5002               	movf	spi_tx_tx@command+1,w,c
 36381  006170  6E6A               	movwf	3946,c	;volatile
 36382                           
 36383                           ;spi.c: 400: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36384  006172  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36385                           
 36386                           ;spi.c: 403: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36387  006176  0EFF               	movlw	255
 36388  006178  6E09               	movwf	??_spi_tx_tx& (0+255),c
 36389  00617A  0EFF               	movlw	255
 36390  00617C  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 36391  00617E  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 36392  006182  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 36393  006186  5009               	movf	??_spi_tx_tx,w,c
 36394  006188  260B               	addwf	??_spi_tx_tx+2,f,c
 36395  00618A  500A               	movf	??_spi_tx_tx+1,w,c
 36396  00618C  220C               	addwfc	??_spi_tx_tx+3,f,c
 36397  00618E  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36398  006192  6A0C               	clrf	??_spi_tx_tx+3,c
 36399  006194  500B               	movf	??_spi_tx_tx+2,w,c
 36400  006196  6E66               	movwf	3942,c	;volatile
 36401                           
 36402                           ;spi.c: 404: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36403  006198  0403               	decf	spi_tx_tx@command_length,w,c
 36404  00619A  6E67               	movwf	3943,c	;volatile
 36405                           
 36406                           ;spi.c: 407: LATDbits.LD7 = 0;
 36407  00619C  9E8C               	bcf	3980,7,c	;volatile
 36408                           
 36409                           ;spi.c: 410: DMACON1bits.DMAEN = 1;
 36410  00619E  8088               	bsf	3976,0,c	;volatile
 36411  0061A0  B088               	btfsc	3976,0,c	;volatile
 36412  0061A2  D7FE               	goto	l2761
 36413                           
 36414                           ;spi.c: 414: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36415  0061A4  5006               	movf	spi_tx_tx@data+1,w,c
 36416  0061A6  6E6A               	movwf	3946,c	;volatile
 36417                           
 36418                           ;spi.c: 415: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36419  0061A8  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 36420                           
 36421                           ;spi.c: 418: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36422  0061AC  0EFF               	movlw	255
 36423  0061AE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 36424  0061B0  0EFF               	movlw	255
 36425  0061B2  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 36426  0061B4  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 36427  0061B8  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 36428  0061BC  5009               	movf	??_spi_tx_tx,w,c
 36429  0061BE  260B               	addwf	??_spi_tx_tx+2,f,c
 36430  0061C0  500A               	movf	??_spi_tx_tx+1,w,c
 36431  0061C2  220C               	addwfc	??_spi_tx_tx+3,f,c
 36432  0061C4  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36433  0061C8  6A0C               	clrf	??_spi_tx_tx+3,c
 36434  0061CA  500B               	movf	??_spi_tx_tx+2,w,c
 36435  0061CC  6E66               	movwf	3942,c	;volatile
 36436                           
 36437                           ;spi.c: 419: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36438  0061CE  0407               	decf	spi_tx_tx@data_length,w,c
 36439  0061D0  6E67               	movwf	3943,c	;volatile
 36440                           
 36441                           ;spi.c: 422: DMACON1bits.DMAEN = 1;
 36442  0061D2  8088               	bsf	3976,0,c	;volatile
 36443  0061D4  B088               	btfsc	3976,0,c	;volatile
 36444  0061D6  D7FE               	goto	l2764
 36445                           
 36446                           ;spi.c: 426: LATDbits.LD7 = 1;
 36447  0061D8  8E8C               	bsf	3980,7,c	;volatile
 36448  0061DA  0012               	return		;funcret
 36449  0061DC                     __end_of_spi_tx_tx:
 36450                           	opt stack 0
 36451                           tosu	equ	0xFFF
 36452                           tosh	equ	0xFFE
 36453                           tosl	equ	0xFFD
 36454                           pclath	equ	0xFFA
 36455                           tblptru	equ	0xFF8
 36456                           tblptrh	equ	0xFF7
 36457                           tblptrl	equ	0xFF6
 36458                           tablat	equ	0xFF5
 36459                           prodh	equ	0xFF4
 36460                           prodl	equ	0xFF3
 36461                           intcon	equ	0xFF2
 36462                           intcon2	equ	0xFF1
 36463                           intcon3	equ	0xFF0
 36464                           indf0	equ	0xFEF
 36465                           postinc0	equ	0xFEE
 36466                           fsr0h	equ	0xFEA
 36467                           fsr0l	equ	0xFE9
 36468                           wreg	equ	0xFE8
 36469                           indf1	equ	0xFE7
 36470                           postdec1	equ	0xFE5
 36471                           plusw1	equ	0xFE3
 36472                           fsr1h	equ	0xFE2
 36473                           fsr1l	equ	0xFE1
 36474                           indf2	equ	0xFDF
 36475                           postinc2	equ	0xFDE
 36476                           postdec2	equ	0xFDD
 36477                           plusw2	equ	0xFDB
 36478                           fsr2h	equ	0xFDA
 36479                           fsr2l	equ	0xFD9
 36480                           status	equ	0xFD8
 36481                           
 36482 ;; *************** function __flash_write_page_from_buffer *****************
 36483 ;; Defined at:
 36484 ;;		line 254 in file "flash.c"
 36485 ;; Parameters:    Size  Location     Type
 36486 ;;  page            2   19[COMRAM] unsigned int 
 36487 ;;  buffer          1   21[COMRAM] enum E6882
 36488 ;; Auto vars:     Size  Location     Type
 36489 ;;  command         4   25[COMRAM] unsigned char [4]
 36490 ;; Return value:  Size  Location     Type
 36491 ;;                  1    wreg      void 
 36492 ;; Registers used:
 36493 ;;		wreg, status,2, status,0, cstack
 36494 ;; Tracked objects:
 36495 ;;		On entry : 0/0
 36496 ;;		On exit  : 0/0
 36497 ;;		Unchanged: 0/0
 36498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36499 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36500 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36501 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36502 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36503 ;;Total ram usage:       10 bytes
 36504 ;; Hardware stack levels used:    1
 36505 ;; Hardware stack levels required when called:    3
 36506 ;; This function calls:
 36507 ;;		__flash_is_busy
 36508 ;;		_spi_tx
 36509 ;; This function is called by:
 36510 ;;		_flash_page_write
 36511 ;;		_flash_partial_write
 36512 ;; This function uses a non-reentrant model
 36513 ;;
 36514                           
 36515                           	psect	text188
 36516  006EFC                     __ptext188:
 36517                           	opt stack 0
 36518  006EFC                     __flash_write_page_from_buffer:
 36519                           	opt stack 23
 36520                           
 36521                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 36522                           
 36523                           ;incstack = 0
 36524  006EFC  ECD7  F03D         	call	__flash_is_busy	;wreg free
 36525  006F00  0900               	iorlw	0
 36526  006F02  A4D8               	btfss	status,2,c
 36527  006F04  D7FB               	goto	__flash_write_page_from_buffer
 36528                           
 36529                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 36530  006F06  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 36531  006F08  A4D8               	btfss	status,2,c
 36532  006F0A  D002               	goto	l1739
 36533                           
 36534                           ;flash.c: 263: command[0] = 0x83;
 36535  006F0C  0E83               	movlw	131
 36536  006F0E  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 36537  006F10                     l1739:
 36538                           
 36539                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 36540  006F10  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 36541  006F12  A4D8               	btfss	status,2,c
 36542  006F14  D002               	goto	l1740
 36543                           
 36544                           ;flash.c: 265: command[0] = 0x86;
 36545  006F16  0E86               	movlw	134
 36546  006F18  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 36547  006F1A                     l1740:
 36548                           
 36549                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36550  006F1A  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 36551  006F1E  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 36552  006F22  0E07               	movlw	7
 36553  006F24  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 36554  006F26                     u6205:
 36555  006F26  90D8               	bcf	status,0,c
 36556  006F28  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 36557  006F2A  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 36558  006F2C  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 36559  006F2E  D7FB               	goto	u6205
 36560  006F30  5017               	movf	??__flash_write_page_from_buffer,w,c
 36561  006F32  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 36562                           
 36563                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 36564  006F34  5014               	movf	__flash_write_page_from_buffer@page,w,c
 36565  006F36  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 36566  006F38  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 36567                           
 36568                           ;flash.c: 269: command[3] = 0x00;
 36569  006F3A  0E00               	movlw	0
 36570  006F3C  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 36571                           
 36572                           ;flash.c: 272: spi_tx(command, 4);
 36573  006F3E  0E1A               	movlw	low __flash_write_page_from_buffer@command
 36574  006F40  6E01               	movwf	spi_tx@data,c
 36575  006F42  0E00               	movlw	high __flash_write_page_from_buffer@command
 36576  006F44  6E02               	movwf	spi_tx@data+1,c
 36577  006F46  0E00               	movlw	0
 36578  006F48  6E04               	movwf	spi_tx@length+1,c
 36579  006F4A  0E04               	movlw	4
 36580  006F4C  6E03               	movwf	spi_tx@length,c
 36581  006F4E  ECD6  F037         	call	_spi_tx	;wreg free
 36582  006F52  0012               	return		;funcret
 36583  006F54                     __end_of__flash_write_page_from_buffer:
 36584                           	opt stack 0
 36585                           tosu	equ	0xFFF
 36586                           tosh	equ	0xFFE
 36587                           tosl	equ	0xFFD
 36588                           pclath	equ	0xFFA
 36589                           tblptru	equ	0xFF8
 36590                           tblptrh	equ	0xFF7
 36591                           tblptrl	equ	0xFF6
 36592                           tablat	equ	0xFF5
 36593                           prodh	equ	0xFF4
 36594                           prodl	equ	0xFF3
 36595                           intcon	equ	0xFF2
 36596                           intcon2	equ	0xFF1
 36597                           intcon3	equ	0xFF0
 36598                           indf0	equ	0xFEF
 36599                           postinc0	equ	0xFEE
 36600                           fsr0h	equ	0xFEA
 36601                           fsr0l	equ	0xFE9
 36602                           wreg	equ	0xFE8
 36603                           indf1	equ	0xFE7
 36604                           postdec1	equ	0xFE5
 36605                           plusw1	equ	0xFE3
 36606                           fsr1h	equ	0xFE2
 36607                           fsr1l	equ	0xFE1
 36608                           indf2	equ	0xFDF
 36609                           postinc2	equ	0xFDE
 36610                           postdec2	equ	0xFDD
 36611                           plusw2	equ	0xFDB
 36612                           fsr2h	equ	0xFDA
 36613                           fsr2l	equ	0xFD9
 36614                           status	equ	0xFD8
 36615                           
 36616 ;; *************** function __flash_copy_page_to_buffer *****************
 36617 ;; Defined at:
 36618 ;;		line 150 in file "flash.c"
 36619 ;; Parameters:    Size  Location     Type
 36620 ;;  page            2   19[COMRAM] unsigned int 
 36621 ;;  buffer          1   21[COMRAM] enum E6882
 36622 ;; Auto vars:     Size  Location     Type
 36623 ;;  command         4   25[COMRAM] unsigned char [4]
 36624 ;; Return value:  Size  Location     Type
 36625 ;;                  1    wreg      void 
 36626 ;; Registers used:
 36627 ;;		wreg, status,2, status,0, cstack
 36628 ;; Tracked objects:
 36629 ;;		On entry : 0/0
 36630 ;;		On exit  : 0/0
 36631 ;;		Unchanged: 0/0
 36632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36633 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36634 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36635 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36636 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36637 ;;Total ram usage:       10 bytes
 36638 ;; Hardware stack levels used:    1
 36639 ;; Hardware stack levels required when called:    3
 36640 ;; This function calls:
 36641 ;;		__flash_is_busy
 36642 ;;		_spi_tx
 36643 ;; This function is called by:
 36644 ;;		_flash_partial_write
 36645 ;; This function uses a non-reentrant model
 36646 ;;
 36647                           
 36648                           	psect	text189
 36649  006F54                     __ptext189:
 36650                           	opt stack 0
 36651  006F54                     __flash_copy_page_to_buffer:
 36652                           	opt stack 21
 36653                           
 36654                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 36655                           
 36656                           ;incstack = 0
 36657  006F54  ECD7  F03D         	call	__flash_is_busy	;wreg free
 36658  006F58  0900               	iorlw	0
 36659  006F5A  A4D8               	btfss	status,2,c
 36660  006F5C  D7FB               	goto	__flash_copy_page_to_buffer
 36661                           
 36662                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 36663  006F5E  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 36664  006F60  A4D8               	btfss	status,2,c
 36665  006F62  D002               	goto	l1704
 36666                           
 36667                           ;flash.c: 159: command[0] = 0x53;
 36668  006F64  0E53               	movlw	83
 36669  006F66  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 36670  006F68                     l1704:
 36671                           
 36672                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 36673  006F68  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 36674  006F6A  A4D8               	btfss	status,2,c
 36675  006F6C  D002               	goto	l1705
 36676                           
 36677                           ;flash.c: 161: command[0] = 0x55;
 36678  006F6E  0E55               	movlw	85
 36679  006F70  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 36680  006F72                     l1705:
 36681                           
 36682                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36683  006F72  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 36684  006F76  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 36685  006F7A  0E07               	movlw	7
 36686  006F7C  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 36687  006F7E                     u6405:
 36688  006F7E  90D8               	bcf	status,0,c
 36689  006F80  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 36690  006F82  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 36691  006F84  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 36692  006F86  D7FB               	goto	u6405
 36693  006F88  5017               	movf	??__flash_copy_page_to_buffer,w,c
 36694  006F8A  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 36695                           
 36696                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 36697  006F8C  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 36698  006F8E  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 36699  006F90  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 36700                           
 36701                           ;flash.c: 165: command[3] = 0x00;
 36702  006F92  0E00               	movlw	0
 36703  006F94  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 36704                           
 36705                           ;flash.c: 168: spi_tx(command, 4);
 36706  006F96  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 36707  006F98  6E01               	movwf	spi_tx@data,c
 36708  006F9A  0E00               	movlw	high __flash_copy_page_to_buffer@command
 36709  006F9C  6E02               	movwf	spi_tx@data+1,c
 36710  006F9E  0E00               	movlw	0
 36711  006FA0  6E04               	movwf	spi_tx@length+1,c
 36712  006FA2  0E04               	movlw	4
 36713  006FA4  6E03               	movwf	spi_tx@length,c
 36714  006FA6  ECD6  F037         	call	_spi_tx	;wreg free
 36715  006FAA  0012               	return		;funcret
 36716  006FAC                     __end_of__flash_copy_page_to_buffer:
 36717                           	opt stack 0
 36718                           tosu	equ	0xFFF
 36719                           tosh	equ	0xFFE
 36720                           tosl	equ	0xFFD
 36721                           pclath	equ	0xFFA
 36722                           tblptru	equ	0xFF8
 36723                           tblptrh	equ	0xFF7
 36724                           tblptrl	equ	0xFF6
 36725                           tablat	equ	0xFF5
 36726                           prodh	equ	0xFF4
 36727                           prodl	equ	0xFF3
 36728                           intcon	equ	0xFF2
 36729                           intcon2	equ	0xFF1
 36730                           intcon3	equ	0xFF0
 36731                           indf0	equ	0xFEF
 36732                           postinc0	equ	0xFEE
 36733                           fsr0h	equ	0xFEA
 36734                           fsr0l	equ	0xFE9
 36735                           wreg	equ	0xFE8
 36736                           indf1	equ	0xFE7
 36737                           postdec1	equ	0xFE5
 36738                           plusw1	equ	0xFE3
 36739                           fsr1h	equ	0xFE2
 36740                           fsr1l	equ	0xFE1
 36741                           indf2	equ	0xFDF
 36742                           postinc2	equ	0xFDE
 36743                           postdec2	equ	0xFDD
 36744                           plusw2	equ	0xFDB
 36745                           fsr2h	equ	0xFDA
 36746                           fsr2l	equ	0xFD9
 36747                           status	equ	0xFD8
 36748                           
 36749 ;; *************** function __flash_compare_page_to_buffer *****************
 36750 ;; Defined at:
 36751 ;;		line 172 in file "flash.c"
 36752 ;; Parameters:    Size  Location     Type
 36753 ;;  page            2   19[COMRAM] unsigned int 
 36754 ;;  buffer          1   21[COMRAM] enum E6882
 36755 ;; Auto vars:     Size  Location     Type
 36756 ;;  command         4   27[COMRAM] unsigned char [4]
 36757 ;;  status          2   25[COMRAM] unsigned int 
 36758 ;; Return value:  Size  Location     Type
 36759 ;;                  1    wreg      enum E6886
 36760 ;; Registers used:
 36761 ;;		wreg, status,2, status,0, cstack
 36762 ;; Tracked objects:
 36763 ;;		On entry : 0/0
 36764 ;;		On exit  : 0/0
 36765 ;;		Unchanged: 0/0
 36766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36767 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36768 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36769 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36770 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36771 ;;Total ram usage:       12 bytes
 36772 ;; Hardware stack levels used:    1
 36773 ;; Hardware stack levels required when called:    3
 36774 ;; This function calls:
 36775 ;;		__flash_get_status
 36776 ;;		__flash_is_busy
 36777 ;;		_spi_tx
 36778 ;; This function is called by:
 36779 ;;		_flash_page_write
 36780 ;;		_flash_partial_write
 36781 ;; This function uses a non-reentrant model
 36782 ;;
 36783                           
 36784                           	psect	text190
 36785  00645E                     __ptext190:
 36786                           	opt stack 0
 36787  00645E                     __flash_compare_page_to_buffer:
 36788                           	opt stack 23
 36789                           
 36790                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 36791                           
 36792                           ;incstack = 0
 36793  00645E  ECD7  F03D         	call	__flash_is_busy	;wreg free
 36794  006462  0900               	iorlw	0
 36795  006464  A4D8               	btfss	status,2,c
 36796  006466  D7FB               	goto	__flash_compare_page_to_buffer
 36797                           
 36798                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 36799  006468  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 36800  00646A  A4D8               	btfss	status,2,c
 36801  00646C  D002               	goto	l1712
 36802                           
 36803                           ;flash.c: 182: command[0] = 0x60;
 36804  00646E  0E60               	movlw	96
 36805  006470  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36806  006472                     l1712:
 36807                           
 36808                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 36809  006472  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 36810  006474  A4D8               	btfss	status,2,c
 36811  006476  D002               	goto	l1713
 36812                           
 36813                           ;flash.c: 184: command[0] = 0x60;
 36814  006478  0E60               	movlw	96
 36815  00647A  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36816  00647C                     l1713:
 36817                           
 36818                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36819  00647C  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 36820  006480  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 36821  006484  0E07               	movlw	7
 36822  006486  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 36823  006488                     u6115:
 36824  006488  90D8               	bcf	status,0,c
 36825  00648A  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 36826  00648C  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 36827  00648E  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 36828  006490  D7FB               	goto	u6115
 36829  006492  5017               	movf	??__flash_compare_page_to_buffer,w,c
 36830  006494  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 36831                           
 36832                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 36833  006496  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 36834  006498  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 36835  00649A  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 36836                           
 36837                           ;flash.c: 188: command[3] = 0x00;
 36838  00649C  0E00               	movlw	0
 36839  00649E  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 36840                           
 36841                           ;flash.c: 191: spi_tx(command, 4);
 36842  0064A0  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 36843  0064A2  6E01               	movwf	spi_tx@data,c
 36844  0064A4  0E00               	movlw	high __flash_compare_page_to_buffer@command
 36845  0064A6  6E02               	movwf	spi_tx@data+1,c
 36846  0064A8  0E00               	movlw	0
 36847  0064AA  6E04               	movwf	spi_tx@length+1,c
 36848  0064AC  0E04               	movlw	4
 36849  0064AE  6E03               	movwf	spi_tx@length,c
 36850  0064B0  ECD6  F037         	call	_spi_tx	;wreg free
 36851  0064B4  ECD7  F03D         	call	__flash_is_busy	;wreg free
 36852  0064B8  0900               	iorlw	0
 36853  0064BA  A4D8               	btfss	status,2,c
 36854  0064BC  D7FB               	goto	l1715
 36855                           
 36856                           ;flash.c: 197: status = _flash_get_status();
 36857  0064BE  EC6B  F03C         	call	__flash_get_status	;wreg free
 36858  0064C2  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 36859  0064C6  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 36860                           
 36861                           ;flash.c: 200: if(status & 0b0000000001000000)
 36862  0064CA  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 36863  0064CC  D002               	goto	l1717
 36864                           
 36865                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 36866  0064CE  0E01               	movlw	1
 36867                           
 36868                           ;flash.c: 204: }
 36869  0064D0  0012               	return	
 36870  0064D2                     l1717:
 36871                           
 36872                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 36873  0064D2  0E00               	movlw	0
 36874  0064D4  0012               	return	
 36875  0064D6                     __end_of__flash_compare_page_to_buffer:
 36876                           	opt stack 0
 36877                           tosu	equ	0xFFF
 36878                           tosh	equ	0xFFE
 36879                           tosl	equ	0xFFD
 36880                           pclath	equ	0xFFA
 36881                           tblptru	equ	0xFF8
 36882                           tblptrh	equ	0xFF7
 36883                           tblptrl	equ	0xFF6
 36884                           tablat	equ	0xFF5
 36885                           prodh	equ	0xFF4
 36886                           prodl	equ	0xFF3
 36887                           intcon	equ	0xFF2
 36888                           intcon2	equ	0xFF1
 36889                           intcon3	equ	0xFF0
 36890                           indf0	equ	0xFEF
 36891                           postinc0	equ	0xFEE
 36892                           fsr0h	equ	0xFEA
 36893                           fsr0l	equ	0xFE9
 36894                           wreg	equ	0xFE8
 36895                           indf1	equ	0xFE7
 36896                           postdec1	equ	0xFE5
 36897                           plusw1	equ	0xFE3
 36898                           fsr1h	equ	0xFE2
 36899                           fsr1l	equ	0xFE1
 36900                           indf2	equ	0xFDF
 36901                           postinc2	equ	0xFDE
 36902                           postdec2	equ	0xFDD
 36903                           plusw2	equ	0xFDB
 36904                           fsr2h	equ	0xFDA
 36905                           fsr2l	equ	0xFD9
 36906                           status	equ	0xFD8
 36907                           
 36908 ;; *************** function __update_modified_time *****************
 36909 ;; Defined at:
 36910 ;;		line 53 in file "fat16.c"
 36911 ;; Parameters:    Size  Location     Type
 36912 ;;  root            2    4[COMRAM] PTR struct .
 36913 ;;		 -> fat_append_to_file@root(32), 
 36914 ;; Auto vars:     Size  Location     Type
 36915 ;;		None
 36916 ;; Return value:  Size  Location     Type
 36917 ;;                  1    wreg      void 
 36918 ;; Registers used:
 36919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36920 ;; Tracked objects:
 36921 ;;		On entry : 0/0
 36922 ;;		On exit  : 0/0
 36923 ;;		Unchanged: 0/0
 36924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36929 ;;Total ram usage:        2 bytes
 36930 ;; Hardware stack levels used:    1
 36931 ;; Hardware stack levels required when called:    1
 36932 ;; This function calls:
 36933 ;;		__get_date
 36934 ;;		__get_time
 36935 ;; This function is called by:
 36936 ;;		_fat_append_to_file
 36937 ;; This function uses a non-reentrant model
 36938 ;;
 36939                           
 36940                           	psect	text191
 36941  007872                     __ptext191:
 36942                           	opt stack 0
 36943  007872                     __update_modified_time:
 36944                           	opt stack 25
 36945                           
 36946                           ;fat16.c: 55: root->modifiedDate = _get_date();
 36947                           
 36948                           ;incstack = 0
 36949  007872  ECEB  F03E         	call	__get_date	;wreg free
 36950  007876  EE20 F018          	lfsr	2,24
 36951  00787A  5005               	movf	__update_modified_time@root,w,c
 36952  00787C  26D9               	addwf	fsr2l,f,c
 36953  00787E  5006               	movf	__update_modified_time@root+1,w,c
 36954  007880  22DA               	addwfc	fsr2h,f,c
 36955  007882  C001  FFDE         	movff	?__get_date,postinc2
 36956  007886  C002  FFDD         	movff	?__get_date+1,postdec2
 36957                           
 36958                           ;fat16.c: 56: root->modifiedTime = _get_time();
 36959  00788A  ECE6  F03E         	call	__get_time	;wreg free
 36960  00788E  EE20 F016          	lfsr	2,22
 36961  007892  5005               	movf	__update_modified_time@root,w,c
 36962  007894  26D9               	addwf	fsr2l,f,c
 36963  007896  5006               	movf	__update_modified_time@root+1,w,c
 36964  007898  22DA               	addwfc	fsr2h,f,c
 36965  00789A  C001  FFDE         	movff	?__get_time,postinc2
 36966  00789E  C002  FFDD         	movff	?__get_time+1,postdec2
 36967  0078A2  0012               	return		;funcret
 36968  0078A4                     __end_of__update_modified_time:
 36969                           	opt stack 0
 36970                           tosu	equ	0xFFF
 36971                           tosh	equ	0xFFE
 36972                           tosl	equ	0xFFD
 36973                           pclath	equ	0xFFA
 36974                           tblptru	equ	0xFF8
 36975                           tblptrh	equ	0xFF7
 36976                           tblptrl	equ	0xFF6
 36977                           tablat	equ	0xFF5
 36978                           prodh	equ	0xFF4
 36979                           prodl	equ	0xFF3
 36980                           intcon	equ	0xFF2
 36981                           intcon2	equ	0xFF1
 36982                           intcon3	equ	0xFF0
 36983                           indf0	equ	0xFEF
 36984                           postinc0	equ	0xFEE
 36985                           fsr0h	equ	0xFEA
 36986                           fsr0l	equ	0xFE9
 36987                           wreg	equ	0xFE8
 36988                           indf1	equ	0xFE7
 36989                           postdec1	equ	0xFE5
 36990                           plusw1	equ	0xFE3
 36991                           fsr1h	equ	0xFE2
 36992                           fsr1l	equ	0xFE1
 36993                           indf2	equ	0xFDF
 36994                           postinc2	equ	0xFDE
 36995                           postdec2	equ	0xFDD
 36996                           plusw2	equ	0xFDB
 36997                           fsr2h	equ	0xFDA
 36998                           fsr2l	equ	0xFD9
 36999                           status	equ	0xFD8
 37000                           
 37001 ;; *************** function __get_time *****************
 37002 ;; Defined at:
 37003 ;;		line 29 in file "fat16.c"
 37004 ;; Parameters:    Size  Location     Type
 37005 ;;		None
 37006 ;; Auto vars:     Size  Location     Type
 37007 ;;  time            2    2[COMRAM] unsigned int 
 37008 ;; Return value:  Size  Location     Type
 37009 ;;                  2    0[COMRAM] unsigned int 
 37010 ;; Registers used:
 37011 ;;		None
 37012 ;; Tracked objects:
 37013 ;;		On entry : 0/0
 37014 ;;		On exit  : 0/0
 37015 ;;		Unchanged: 0/0
 37016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37021 ;;Total ram usage:        4 bytes
 37022 ;; Hardware stack levels used:    1
 37023 ;; This function calls:
 37024 ;;		Nothing
 37025 ;; This function is called by:
 37026 ;;		__update_modified_time
 37027 ;;		_fat_create_file
 37028 ;; This function uses a non-reentrant model
 37029 ;;
 37030                           
 37031                           	psect	text192
 37032  007DCC                     __ptext192:
 37033                           	opt stack 0
 37034  007DCC                     __get_time:
 37035                           	opt stack 26
 37036                           
 37037                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 37038                           
 37039                           ;incstack = 0
 37040  007DCC  C003  F001         	movff	__get_time@time,?__get_time
 37041  007DD0  C004  F002         	movff	__get_time@time+1,?__get_time+1
 37042  007DD4  0012               	return		;funcret
 37043  007DD6                     __end_of__get_time:
 37044                           	opt stack 0
 37045                           tosu	equ	0xFFF
 37046                           tosh	equ	0xFFE
 37047                           tosl	equ	0xFFD
 37048                           pclath	equ	0xFFA
 37049                           tblptru	equ	0xFF8
 37050                           tblptrh	equ	0xFF7
 37051                           tblptrl	equ	0xFF6
 37052                           tablat	equ	0xFF5
 37053                           prodh	equ	0xFF4
 37054                           prodl	equ	0xFF3
 37055                           intcon	equ	0xFF2
 37056                           intcon2	equ	0xFF1
 37057                           intcon3	equ	0xFF0
 37058                           indf0	equ	0xFEF
 37059                           postinc0	equ	0xFEE
 37060                           fsr0h	equ	0xFEA
 37061                           fsr0l	equ	0xFE9
 37062                           wreg	equ	0xFE8
 37063                           indf1	equ	0xFE7
 37064                           postdec1	equ	0xFE5
 37065                           plusw1	equ	0xFE3
 37066                           fsr1h	equ	0xFE2
 37067                           fsr1l	equ	0xFE1
 37068                           indf2	equ	0xFDF
 37069                           postinc2	equ	0xFDE
 37070                           postdec2	equ	0xFDD
 37071                           plusw2	equ	0xFDB
 37072                           fsr2h	equ	0xFDA
 37073                           fsr2l	equ	0xFD9
 37074                           status	equ	0xFD8
 37075                           
 37076 ;; *************** function __get_date *****************
 37077 ;; Defined at:
 37078 ;;		line 41 in file "fat16.c"
 37079 ;; Parameters:    Size  Location     Type
 37080 ;;		None
 37081 ;; Auto vars:     Size  Location     Type
 37082 ;;  date            2    2[COMRAM] unsigned int 
 37083 ;; Return value:  Size  Location     Type
 37084 ;;                  2    0[COMRAM] unsigned int 
 37085 ;; Registers used:
 37086 ;;		None
 37087 ;; Tracked objects:
 37088 ;;		On entry : 0/0
 37089 ;;		On exit  : 0/0
 37090 ;;		Unchanged: 0/0
 37091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37096 ;;Total ram usage:        4 bytes
 37097 ;; Hardware stack levels used:    1
 37098 ;; This function calls:
 37099 ;;		Nothing
 37100 ;; This function is called by:
 37101 ;;		__update_modified_time
 37102 ;;		_fat_create_file
 37103 ;; This function uses a non-reentrant model
 37104 ;;
 37105                           
 37106                           	psect	text193
 37107  007DD6                     __ptext193:
 37108                           	opt stack 0
 37109  007DD6                     __get_date:
 37110                           	opt stack 26
 37111                           
 37112                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 37113                           
 37114                           ;incstack = 0
 37115  007DD6  C003  F001         	movff	__get_date@date,?__get_date
 37116  007DDA  C004  F002         	movff	__get_date@date+1,?__get_date+1
 37117  007DDE  0012               	return		;funcret
 37118  007DE0                     __end_of__get_date:
 37119                           	opt stack 0
 37120                           tosu	equ	0xFFF
 37121                           tosh	equ	0xFFE
 37122                           tosl	equ	0xFFD
 37123                           pclath	equ	0xFFA
 37124                           tblptru	equ	0xFF8
 37125                           tblptrh	equ	0xFF7
 37126                           tblptrl	equ	0xFF6
 37127                           tablat	equ	0xFF5
 37128                           prodh	equ	0xFF4
 37129                           prodl	equ	0xFF3
 37130                           intcon	equ	0xFF2
 37131                           intcon2	equ	0xFF1
 37132                           intcon3	equ	0xFF0
 37133                           indf0	equ	0xFEF
 37134                           postinc0	equ	0xFEE
 37135                           fsr0h	equ	0xFEA
 37136                           fsr0l	equ	0xFE9
 37137                           wreg	equ	0xFE8
 37138                           indf1	equ	0xFE7
 37139                           postdec1	equ	0xFE5
 37140                           plusw1	equ	0xFE3
 37141                           fsr1h	equ	0xFE2
 37142                           fsr1l	equ	0xFE1
 37143                           indf2	equ	0xFDF
 37144                           postinc2	equ	0xFDE
 37145                           postdec2	equ	0xFDD
 37146                           plusw2	equ	0xFDB
 37147                           fsr2h	equ	0xFDA
 37148                           fsr2l	equ	0xFD9
 37149                           status	equ	0xFD8
 37150                           
 37151 ;; *************** function __sector_from_cluster *****************
 37152 ;; Defined at:
 37153 ;;		line 443 in file "fat16.c"
 37154 ;; Parameters:    Size  Location     Type
 37155 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 37156 ;; Auto vars:     Size  Location     Type
 37157 ;;		None
 37158 ;; Return value:  Size  Location     Type
 37159 ;;                  2    0[COMRAM] unsigned int 
 37160 ;; Registers used:
 37161 ;;		wreg, status,2, status,0
 37162 ;; Tracked objects:
 37163 ;;		On entry : 0/0
 37164 ;;		On exit  : 0/0
 37165 ;;		Unchanged: 0/0
 37166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37171 ;;Total ram usage:        2 bytes
 37172 ;; Hardware stack levels used:    1
 37173 ;; This function calls:
 37174 ;;		Nothing
 37175 ;; This function is called by:
 37176 ;;		_fat_append_to_file
 37177 ;;		_fat_read_from_file
 37178 ;; This function uses a non-reentrant model
 37179 ;;
 37180                           
 37181                           	psect	text194
 37182  007D3A                     __ptext194:
 37183                           	opt stack 0
 37184  007D3A                     __sector_from_cluster:
 37185                           	opt stack 27
 37186                           
 37187                           ;fat16.c: 445: return fat_cluster + 38 - 2;
 37188                           
 37189                           ;incstack = 0
 37190  007D3A  0E24               	movlw	36
 37191  007D3C  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 37192  007D3E  6E01               	movwf	?__sector_from_cluster,c
 37193  007D40  0E00               	movlw	0
 37194  007D42  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 37195  007D44  6E02               	movwf	?__sector_from_cluster+1,c
 37196  007D46  0012               	return	
 37197  007D48                     __end_of__sector_from_cluster:
 37198                           	opt stack 0
 37199                           tosu	equ	0xFFF
 37200                           tosh	equ	0xFFE
 37201                           tosl	equ	0xFFD
 37202                           pclath	equ	0xFFA
 37203                           tblptru	equ	0xFF8
 37204                           tblptrh	equ	0xFF7
 37205                           tblptrl	equ	0xFF6
 37206                           tablat	equ	0xFF5
 37207                           prodh	equ	0xFF4
 37208                           prodl	equ	0xFF3
 37209                           intcon	equ	0xFF2
 37210                           intcon2	equ	0xFF1
 37211                           intcon3	equ	0xFF0
 37212                           indf0	equ	0xFEF
 37213                           postinc0	equ	0xFEE
 37214                           fsr0h	equ	0xFEA
 37215                           fsr0l	equ	0xFE9
 37216                           wreg	equ	0xFE8
 37217                           indf1	equ	0xFE7
 37218                           postdec1	equ	0xFE5
 37219                           plusw1	equ	0xFE3
 37220                           fsr1h	equ	0xFE2
 37221                           fsr1l	equ	0xFE1
 37222                           indf2	equ	0xFDF
 37223                           postinc2	equ	0xFDE
 37224                           postdec2	equ	0xFDD
 37225                           plusw2	equ	0xFDB
 37226                           fsr2h	equ	0xFDA
 37227                           fsr2l	equ	0xFD9
 37228                           status	equ	0xFD8
 37229                           
 37230 ;; *************** function __read_fat *****************
 37231 ;; Defined at:
 37232 ;;		line 169 in file "fat16.c"
 37233 ;; Parameters:    Size  Location     Type
 37234 ;;  cluster         2   47[COMRAM] unsigned int 
 37235 ;; Auto vars:     Size  Location     Type
 37236 ;;  value           2   53[COMRAM] unsigned int 
 37237 ;;  offset          2   51[COMRAM] unsigned int 
 37238 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37239 ;; Return value:  Size  Location     Type
 37240 ;;                  2   47[COMRAM] unsigned int 
 37241 ;; Registers used:
 37242 ;;		wreg, status,2, status,0, cstack
 37243 ;; Tracked objects:
 37244 ;;		On entry : 0/0
 37245 ;;		On exit  : 0/0
 37246 ;;		Unchanged: 0/0
 37247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37249 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37251 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37252 ;;Total ram usage:        8 bytes
 37253 ;; Hardware stack levels used:    1
 37254 ;; Hardware stack levels required when called:    5
 37255 ;; This function calls:
 37256 ;;		_flash_partial_read
 37257 ;; This function is called by:
 37258 ;;		_fat_delete_file
 37259 ;;		_fat_append_to_file
 37260 ;;		_fat_read_from_file
 37261 ;; This function uses a non-reentrant model
 37262 ;;
 37263                           
 37264                           	psect	text195
 37265  0073DA                     __ptext195:
 37266                           	opt stack 0
 37267  0073DA                     __read_fat:
 37268                           	opt stack 22
 37269                           
 37270                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 37271                           
 37272                           ;incstack = 0
 37273  0073DA  5031               	movf	__read_fat@cluster+1,w,c
 37274  0073DC  6E32               	movwf	__read_fat@fat_sector,c
 37275  0073DE  6A33               	clrf	__read_fat@fat_sector+1,c
 37276                           
 37277                           ;fat16.c: 175: fat_sector += 2;
 37278  0073E0  0E02               	movlw	2
 37279  0073E2  2632               	addwf	__read_fat@fat_sector,f,c
 37280  0073E4  0E00               	movlw	0
 37281  0073E6  2233               	addwfc	__read_fat@fat_sector+1,f,c
 37282                           
 37283                           ;fat16.c: 176: offset = cluster & 0xFF;
 37284  0073E8  5030               	movf	__read_fat@cluster,w,c
 37285  0073EA  6E34               	movwf	__read_fat@offset,c
 37286  0073EC  6A35               	clrf	__read_fat@offset+1,c
 37287                           
 37288                           ;fat16.c: 177: offset <<= 1;
 37289  0073EE  90D8               	bcf	status,0,c
 37290  0073F0  3634               	rlcf	__read_fat@offset,f,c
 37291  0073F2  3635               	rlcf	__read_fat@offset+1,f,c
 37292                           
 37293                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 37294  0073F4  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 37295  0073F8  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 37296  0073FC  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 37297  007400  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 37298  007404  0E00               	movlw	0
 37299  007406  6E2D               	movwf	flash_partial_read@length+1,c
 37300  007408  0E02               	movlw	2
 37301  00740A  6E2C               	movwf	flash_partial_read@length,c
 37302  00740C  0E36               	movlw	low __read_fat@value
 37303  00740E  6E2E               	movwf	flash_partial_read@data,c
 37304  007410  0E00               	movlw	high __read_fat@value
 37305  007412  6E2F               	movwf	flash_partial_read@data+1,c
 37306  007414  EC52  F03C         	call	_flash_partial_read	;wreg free
 37307                           
 37308                           ;fat16.c: 179: return value;
 37309  007418  C036  F030         	movff	__read_fat@value,?__read_fat
 37310  00741C  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 37311  007420  0012               	return	
 37312  007422                     __end_of__read_fat:
 37313                           	opt stack 0
 37314                           tosu	equ	0xFFF
 37315                           tosh	equ	0xFFE
 37316                           tosl	equ	0xFFD
 37317                           pclath	equ	0xFFA
 37318                           tblptru	equ	0xFF8
 37319                           tblptrh	equ	0xFF7
 37320                           tblptrl	equ	0xFF6
 37321                           tablat	equ	0xFF5
 37322                           prodh	equ	0xFF4
 37323                           prodl	equ	0xFF3
 37324                           intcon	equ	0xFF2
 37325                           intcon2	equ	0xFF1
 37326                           intcon3	equ	0xFF0
 37327                           indf0	equ	0xFEF
 37328                           postinc0	equ	0xFEE
 37329                           fsr0h	equ	0xFEA
 37330                           fsr0l	equ	0xFE9
 37331                           wreg	equ	0xFE8
 37332                           indf1	equ	0xFE7
 37333                           postdec1	equ	0xFE5
 37334                           plusw1	equ	0xFE3
 37335                           fsr1h	equ	0xFE2
 37336                           fsr1l	equ	0xFE1
 37337                           indf2	equ	0xFDF
 37338                           postinc2	equ	0xFDE
 37339                           postdec2	equ	0xFDD
 37340                           plusw2	equ	0xFDB
 37341                           fsr2h	equ	0xFDA
 37342                           fsr2l	equ	0xFD9
 37343                           status	equ	0xFD8
 37344                           
 37345 ;; *************** function __get_empty_cluster *****************
 37346 ;; Defined at:
 37347 ;;		line 107 in file "fat16.c"
 37348 ;; Parameters:    Size  Location     Type
 37349 ;;  first_cluste    2   47[COMRAM] unsigned int 
 37350 ;; Auto vars:     Size  Location     Type
 37351 ;;  cluster         2   55[COMRAM] unsigned int 
 37352 ;;  value           2   53[COMRAM] unsigned int 
 37353 ;;  offset          2   51[COMRAM] unsigned int 
 37354 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37355 ;; Return value:  Size  Location     Type
 37356 ;;                  2   47[COMRAM] unsigned int 
 37357 ;; Registers used:
 37358 ;;		wreg, status,2, status,0, cstack
 37359 ;; Tracked objects:
 37360 ;;		On entry : 0/0
 37361 ;;		On exit  : 0/0
 37362 ;;		Unchanged: 0/0
 37363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37365 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37367 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37368 ;;Total ram usage:       10 bytes
 37369 ;; Hardware stack levels used:    1
 37370 ;; Hardware stack levels required when called:    5
 37371 ;; This function calls:
 37372 ;;		_flash_partial_read
 37373 ;; This function is called by:
 37374 ;;		_fat_create_file
 37375 ;;		_fat_append_to_file
 37376 ;; This function uses a non-reentrant model
 37377 ;;
 37378                           
 37379                           	psect	text196
 37380  006638                     __ptext196:
 37381                           	opt stack 0
 37382  006638                     __get_empty_cluster:
 37383                           	opt stack 21
 37384                           
 37385                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(8154+2); ++cluster)
 37386                           
 37387                           ;incstack = 0
 37388  006638  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 37389  00663C  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 37390  006640                     l10486:
 37391  006640  0EDC               	movlw	220
 37392  006642  5C38               	subwf	__get_empty_cluster@cluster,w,c
 37393  006644  0E1F               	movlw	31
 37394  006646  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 37395  006648  B0D8               	btfsc	status,0,c
 37396  00664A  D02B               	goto	u7520
 37397                           
 37398                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 37399  00664C  5039               	movf	__get_empty_cluster@cluster+1,w,c
 37400  00664E  6E32               	movwf	__get_empty_cluster@fat_sector,c
 37401  006650  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 37402                           
 37403                           ;fat16.c: 118: fat_sector += 2;
 37404  006652  0E02               	movlw	2
 37405  006654  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 37406  006656  0E00               	movlw	0
 37407  006658  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 37408                           
 37409                           ;fat16.c: 119: offset = cluster & 0xFF;
 37410  00665A  5038               	movf	__get_empty_cluster@cluster,w,c
 37411  00665C  6E34               	movwf	__get_empty_cluster@offset,c
 37412  00665E  6A35               	clrf	__get_empty_cluster@offset+1,c
 37413                           
 37414                           ;fat16.c: 120: offset <<= 1;
 37415  006660  90D8               	bcf	status,0,c
 37416  006662  3634               	rlcf	__get_empty_cluster@offset,f,c
 37417  006664  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 37418                           
 37419                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 37420  006666  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 37421  00666A  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 37422  00666E  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 37423  006672  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 37424  006676  0E00               	movlw	0
 37425  006678  6E2D               	movwf	flash_partial_read@length+1,c
 37426  00667A  0E02               	movlw	2
 37427  00667C  6E2C               	movwf	flash_partial_read@length,c
 37428  00667E  0E36               	movlw	low __get_empty_cluster@value
 37429  006680  6E2E               	movwf	flash_partial_read@data,c
 37430  006682  0E00               	movlw	high __get_empty_cluster@value
 37431  006684  6E2F               	movwf	flash_partial_read@data+1,c
 37432  006686  EC52  F03C         	call	_flash_partial_read	;wreg free
 37433                           
 37434                           ;fat16.c: 122: if(value==0x0000)
 37435  00668A  5036               	movf	__get_empty_cluster@value,w,c
 37436  00668C  1037               	iorwf	__get_empty_cluster@value+1,w,c
 37437  00668E  A4D8               	btfss	status,2,c
 37438  006690  D005               	goto	l1874
 37439                           
 37440                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 37441  006692  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 37442  006696  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 37443  00669A  0012               	return	
 37444  00669C                     l1874:
 37445  00669C  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 37446  00669E  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 37447  0066A0  D7CF               	goto	l10486
 37448  0066A2                     u7520:
 37449                           
 37450                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 37451  0066A2  0E00               	movlw	0
 37452  0066A4  6E31               	movwf	?__get_empty_cluster+1,c
 37453  0066A6  0E00               	movlw	0
 37454  0066A8  6E30               	movwf	?__get_empty_cluster,c
 37455  0066AA  0012               	return	
 37456  0066AC                     __end_of__get_empty_cluster:
 37457                           	opt stack 0
 37458                           tosu	equ	0xFFF
 37459                           tosh	equ	0xFFE
 37460                           tosl	equ	0xFFD
 37461                           pclath	equ	0xFFA
 37462                           tblptru	equ	0xFF8
 37463                           tblptrh	equ	0xFF7
 37464                           tblptrl	equ	0xFF6
 37465                           tablat	equ	0xFF5
 37466                           prodh	equ	0xFF4
 37467                           prodl	equ	0xFF3
 37468                           intcon	equ	0xFF2
 37469                           intcon2	equ	0xFF1
 37470                           intcon3	equ	0xFF0
 37471                           indf0	equ	0xFEF
 37472                           postinc0	equ	0xFEE
 37473                           fsr0h	equ	0xFEA
 37474                           fsr0l	equ	0xFE9
 37475                           wreg	equ	0xFE8
 37476                           indf1	equ	0xFE7
 37477                           postdec1	equ	0xFE5
 37478                           plusw1	equ	0xFE3
 37479                           fsr1h	equ	0xFE2
 37480                           fsr1l	equ	0xFE1
 37481                           indf2	equ	0xFDF
 37482                           postinc2	equ	0xFDE
 37483                           postdec2	equ	0xFDD
 37484                           plusw2	equ	0xFDB
 37485                           fsr2h	equ	0xFDA
 37486                           fsr2l	equ	0xFD9
 37487                           status	equ	0xFD8
 37488                           
 37489 ;; *************** function _flash_partial_read *****************
 37490 ;; Defined at:
 37491 ;;		line 457 in file "flash.c"
 37492 ;; Parameters:    Size  Location     Type
 37493 ;;  page            2   39[COMRAM] unsigned int 
 37494 ;;  start           2   41[COMRAM] unsigned int 
 37495 ;;  length          2   43[COMRAM] unsigned int 
 37496 ;;  data            2   45[COMRAM] PTR unsigned char 
 37497 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), fat_read_from_file@root(32), fat_rename_file@root(32), 
 37498 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 37499 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 37500 ;;		 -> _root_is_available@first_byte(1), RAM(3759), 
 37501 ;; Auto vars:     Size  Location     Type
 37502 ;;		None
 37503 ;; Return value:  Size  Location     Type
 37504 ;;                  1    wreg      void 
 37505 ;; Registers used:
 37506 ;;		wreg, status,2, status,0, cstack
 37507 ;; Tracked objects:
 37508 ;;		On entry : 0/0
 37509 ;;		On exit  : 0/0
 37510 ;;		Unchanged: 0/0
 37511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37512 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37516 ;;Total ram usage:        8 bytes
 37517 ;; Hardware stack levels used:    1
 37518 ;; Hardware stack levels required when called:    4
 37519 ;; This function calls:
 37520 ;;		__flash_partial_read
 37521 ;;		_spi_set_configuration
 37522 ;; This function is called by:
 37523 ;;		__root_is_available
 37524 ;;		__get_empty_cluster
 37525 ;;		_fat_get_empty_clusters
 37526 ;;		__read_fat
 37527 ;;		__get_first_cluster
 37528 ;;		_fat_find_file
 37529 ;;		_fat_get_file_size
 37530 ;;		_fat_read_from_file
 37531 ;;		_fat_get_file_information
 37532 ;;		__get_file_size
 37533 ;; This function uses a non-reentrant model
 37534 ;;
 37535                           
 37536                           	psect	text197
 37537  0078A4                     __ptext197:
 37538                           	opt stack 0
 37539  0078A4                     _flash_partial_read:
 37540                           	opt stack 23
 37541                           
 37542                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 37543                           
 37544                           ;incstack = 0
 37545  0078A4  0E00               	movlw	0
 37546  0078A6  ECB1  F022         	call	_spi_set_configuration
 37547                           
 37548                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 37549  0078AA  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 37550  0078AE  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 37551  0078B2  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 37552  0078B6  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 37553  0078BA  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 37554  0078BE  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 37555  0078C2  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 37556  0078C6  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 37557  0078CA  EC6B  F032         	call	__flash_partial_read	;wreg free
 37558                           
 37559                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37560  0078CE  0E01               	movlw	1
 37561  0078D0  ECB1  F022         	call	_spi_set_configuration
 37562  0078D4  0012               	return		;funcret
 37563  0078D6                     __end_of_flash_partial_read:
 37564                           	opt stack 0
 37565                           tosu	equ	0xFFF
 37566                           tosh	equ	0xFFE
 37567                           tosl	equ	0xFFD
 37568                           pclath	equ	0xFFA
 37569                           tblptru	equ	0xFF8
 37570                           tblptrh	equ	0xFF7
 37571                           tblptrl	equ	0xFF6
 37572                           tablat	equ	0xFF5
 37573                           prodh	equ	0xFF4
 37574                           prodl	equ	0xFF3
 37575                           intcon	equ	0xFF2
 37576                           intcon2	equ	0xFF1
 37577                           intcon3	equ	0xFF0
 37578                           indf0	equ	0xFEF
 37579                           postinc0	equ	0xFEE
 37580                           fsr0h	equ	0xFEA
 37581                           fsr0l	equ	0xFE9
 37582                           wreg	equ	0xFE8
 37583                           indf1	equ	0xFE7
 37584                           postdec1	equ	0xFE5
 37585                           plusw1	equ	0xFE3
 37586                           fsr1h	equ	0xFE2
 37587                           fsr1l	equ	0xFE1
 37588                           indf2	equ	0xFDF
 37589                           postinc2	equ	0xFDE
 37590                           postdec2	equ	0xFDD
 37591                           plusw2	equ	0xFDB
 37592                           fsr2h	equ	0xFDA
 37593                           fsr2l	equ	0xFD9
 37594                           status	equ	0xFD8
 37595                           
 37596 ;; *************** function _spi_set_configuration *****************
 37597 ;; Defined at:
 37598 ;;		line 139 in file "spi.c"
 37599 ;; Parameters:    Size  Location     Type
 37600 ;;  configuratio    1    wreg     enum E6747
 37601 ;; Auto vars:     Size  Location     Type
 37602 ;;  configuratio    1    0[COMRAM] enum E6747
 37603 ;;  cntr            1    0        unsigned char 
 37604 ;; Return value:  Size  Location     Type
 37605 ;;                  1    wreg      void 
 37606 ;; Registers used:
 37607 ;;		wreg, status,2, status,0
 37608 ;; Tracked objects:
 37609 ;;		On entry : 0/0
 37610 ;;		On exit  : 0/0
 37611 ;;		Unchanged: 0/0
 37612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37617 ;;Total ram usage:        1 bytes
 37618 ;; Hardware stack levels used:    1
 37619 ;; This function calls:
 37620 ;;		Nothing
 37621 ;; This function is called by:
 37622 ;;		_flash_init
 37623 ;;		_flash_is_busy
 37624 ;;		_flash_page_read
 37625 ;;		_flash_page_write
 37626 ;;		_flash_partial_read
 37627 ;;		_flash_partial_write
 37628 ;;		_flash_set_power_state
 37629 ;; This function uses a non-reentrant model
 37630 ;;
 37631                           
 37632                           	psect	text198
 37633  004562                     __ptext198:
 37634                           	opt stack 0
 37635  004562                     _spi_set_configuration:
 37636                           	opt stack 28
 37637                           
 37638                           ;incstack = 0
 37639                           ;spi_set_configuration@configuration stored from wreg
 37640  004562  6E01               	movwf	spi_set_configuration@configuration,c
 37641                           
 37642                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 37643  004564  D076               	goto	l2744
 37644  004566                     l2745:
 37645                           
 37646                           ;spi.c: 152: DMACON1bits.DMAEN = 0;
 37647  004566  9088               	bcf	3976,0,c	;volatile
 37648                           
 37649                           ;spi.c: 153: SSP2CON1bits.SSPEN = 0;
 37650  004568  9A72               	bcf	3954,5,c	;volatile
 37651                           
 37652                           ;spi.c: 156: TRISDbits.TRISD6 = 1;
 37653  00456A  8C95               	bsf	3989,6,c	;volatile
 37654                           
 37655                           ;spi.c: 157: TRISDbits.TRISD4 = 0;
 37656  00456C  9895               	bcf	3989,4,c	;volatile
 37657                           
 37658                           ;spi.c: 158: LATDbits.LD4 = 0;
 37659  00456E  988C               	bcf	3980,4,c	;volatile
 37660                           
 37661                           ;spi.c: 159: TRISDbits.TRISD5 = 0;
 37662  004570  9A95               	bcf	3989,5,c	;volatile
 37663                           
 37664                           ;spi.c: 160: LATDbits.LD5 = 0;
 37665  004572  9A8C               	bcf	3980,5,c	;volatile
 37666                           
 37667                           ;spi.c: 161: TRISDbits.TRISD7 = 0;
 37668  004574  9E95               	bcf	3989,7,c	;volatile
 37669                           
 37670                           ;spi.c: 162: LATDbits.LD7 = 1;
 37671  004576  8E8C               	bsf	3980,7,c	;volatile
 37672                           
 37673                           ;spi.c: 165: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 37674  004578  0E55               	movlw	85
 37675  00457A  6EA7               	movwf	4007,c	;volsfr
 37676  00457C  0EAA               	movlw	170
 37677  00457E  6EA7               	movwf	4007,c	;volsfr
 37678  004580  010E               	movlb	14	; () banked
 37679  004582  91BF               	bcf	191,0,b	;volatile
 37680                           
 37681                           ;spi.c: 167: RPOR23 = 0b00000;
 37682  004584  0E00               	movlw	0
 37683  004586  6FD7               	movwf	215,b	;volatile
 37684                           
 37685                           ;spi.c: 168: RPINR21 = 0b11111;
 37686  004588  0E1F               	movlw	31
 37687  00458A  6FFC               	movwf	252,b	;volatile
 37688                           
 37689                           ;spi.c: 169: RPINR23 = 0b11111;
 37690  00458C  0E1F               	movlw	31
 37691  00458E  6FFE               	movwf	254,b	;volatile
 37692                           
 37693                           ;spi.c: 171: RPINR21 = 23;
 37694  004590  0E17               	movlw	23
 37695  004592  6FFC               	movwf	252,b	;volatile
 37696                           
 37697                           ;spi.c: 172: RPOR21 = 10;
 37698  004594  0E0A               	movlw	10
 37699  004596  6FD5               	movwf	213,b	;volatile
 37700                           
 37701                           ;spi.c: 174: RPOR22 = 11;
 37702  004598  0E0B               	movlw	11
 37703  00459A  6FD6               	movwf	214,b	;volatile
 37704                           
 37705                           ;spi.c: 175: RPINR22 = 22;
 37706  00459C  0E16               	movlw	22
 37707  00459E  6FFD               	movwf	253,b	;volatile
 37708                           
 37709                           ;spi.c: 176: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 37710  0045A0  0E55               	movlw	85
 37711  0045A2  6EA7               	movwf	4007,c	;volsfr
 37712  0045A4  0EAA               	movlw	170
 37713  0045A6  6EA7               	movwf	4007,c	;volsfr
 37714                           
 37715                           ; BSR set to: 14
 37716  0045A8  81BF               	bsf	191,0,b	;volatile
 37717                           
 37718                           ; BSR set to: 14
 37719                           ;spi.c: 179: SSP2STATbits.SMP = 1;
 37720  0045AA  8E73               	bsf	3955,7,c	;volatile
 37721                           
 37722                           ; BSR set to: 14
 37723                           ;spi.c: 180: SSP2STATbits.CKE = 1;
 37724  0045AC  8C73               	bsf	3955,6,c	;volatile
 37725                           
 37726                           ; BSR set to: 14
 37727                           ;spi.c: 181: SSP2CON1bits.WCOL = 0;
 37728  0045AE  9E72               	bcf	3954,7,c	;volatile
 37729                           
 37730                           ; BSR set to: 14
 37731                           ;spi.c: 182: SSP2CON1bits.SSPOV = 0;
 37732  0045B0  9C72               	bcf	3954,6,c	;volatile
 37733                           
 37734                           ; BSR set to: 14
 37735                           ;spi.c: 183: SSP2CON1bits.CKP = 0;
 37736  0045B2  9872               	bcf	3954,4,c	;volatile
 37737                           
 37738                           ; BSR set to: 14
 37739                           ;spi.c: 184: SSP2CON1bits.SSPM =0b0000;
 37740  0045B4  9072               	bcf	3954,0,c	;volatile
 37741  0045B6  9272               	bcf	3954,1,c	;volatile
 37742  0045B8  9472               	bcf	3954,2,c	;volatile
 37743  0045BA  9672               	bcf	3954,3,c	;volatile
 37744                           
 37745                           ; BSR set to: 14
 37746                           ;spi.c: 185: SSP2CON1bits.SSPEN = 1;
 37747  0045BC  8A72               	bsf	3954,5,c	;volatile
 37748                           
 37749                           ;spi.c: 188: active_configuration = SPI_CONFIGURATION_INTERNAL;
 37750  0045BE  0E00               	movlw	0
 37751  0045C0  0100               	movlb	0	; () banked
 37752  0045C2  6F94               	movwf	_active_configuration& (0+255),b
 37753                           
 37754                           ;spi.c: 189: break;
 37755  0045C4  0012               	return	
 37756  0045C6                     l2747:
 37757                           
 37758                           ;spi.c: 193: DMACON1bits.DMAEN = 0;
 37759  0045C6  9088               	bcf	3976,0,c	;volatile
 37760                           
 37761                           ;spi.c: 194: SSP2CON1bits.SSPEN = 0;
 37762  0045C8  9A72               	bcf	3954,5,c	;volatile
 37763                           
 37764                           ;spi.c: 197: ODCON3bits.SPI2OD = 0;
 37765  0045CA  010F               	movlb	15	; () banked
 37766  0045CC  9340               	bcf	64,1,b	;volatile
 37767                           
 37768                           ; BSR set to: 15
 37769                           ;spi.c: 200: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 37770  0045CE  0E55               	movlw	85
 37771  0045D0  6EA7               	movwf	4007,c	;volsfr
 37772  0045D2  0EAA               	movlw	170
 37773  0045D4  6EA7               	movwf	4007,c	;volsfr
 37774                           
 37775                           ; BSR set to: 15
 37776  0045D6  010E               	movlb	14	; () banked
 37777  0045D8  91BF               	bcf	191,0,b	;volatile
 37778                           
 37779                           ;spi.c: 201: RPOR23 = 10;
 37780  0045DA  0E0A               	movlw	10
 37781  0045DC  6FD7               	movwf	215,b	;volatile
 37782                           
 37783                           ;spi.c: 202: RPINR21 = 21;
 37784  0045DE  0E15               	movlw	21
 37785  0045E0  6FFC               	movwf	252,b	;volatile
 37786                           
 37787                           ;spi.c: 203: RPINR22 = 22;
 37788  0045E2  0E16               	movlw	22
 37789  0045E4  6FFD               	movwf	253,b	;volatile
 37790                           
 37791                           ;spi.c: 204: RPINR23 = 19;
 37792  0045E6  0E13               	movlw	19
 37793  0045E8  6FFE               	movwf	254,b	;volatile
 37794                           
 37795                           ;spi.c: 205: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 37796  0045EA  0E55               	movlw	85
 37797  0045EC  6EA7               	movwf	4007,c	;volsfr
 37798  0045EE  0EAA               	movlw	170
 37799  0045F0  6EA7               	movwf	4007,c	;volsfr
 37800                           
 37801                           ; BSR set to: 14
 37802  0045F2  81BF               	bsf	191,0,b	;volatile
 37803                           
 37804                           ; BSR set to: 14
 37805                           ;spi.c: 207: SSP2CON1bits.SSPEN = 0;
 37806  0045F4  9A72               	bcf	3954,5,c	;volatile
 37807                           
 37808                           ; BSR set to: 14
 37809                           ;spi.c: 215: TRISDbits.TRISD5 = 1;
 37810  0045F6  8A95               	bsf	3989,5,c	;volatile
 37811                           
 37812                           ; BSR set to: 14
 37813                           ;spi.c: 216: TRISDbits.TRISD4 = 1;
 37814  0045F8  8895               	bsf	3989,4,c	;volatile
 37815                           
 37816                           ; BSR set to: 14
 37817                           ;spi.c: 219: TRISDbits.TRISD6 = 0;
 37818  0045FA  9C95               	bcf	3989,6,c	;volatile
 37819                           
 37820                           ; BSR set to: 14
 37821                           ;spi.c: 220: LATDbits.LD6 = 1;
 37822  0045FC  8C8C               	bsf	3980,6,c	;volatile
 37823                           
 37824                           ; BSR set to: 14
 37825                           ;spi.c: 223: TRISDbits.TRISD2 = 1;
 37826  0045FE  8495               	bsf	3989,2,c	;volatile
 37827                           
 37828                           ; BSR set to: 14
 37829                           ;spi.c: 229: SSP2STATbits.SMP = 0;
 37830  004600  9E73               	bcf	3955,7,c	;volatile
 37831                           
 37832                           ; BSR set to: 14
 37833                           ;spi.c: 230: SSP2STATbits.CKE = 1;
 37834  004602  8C73               	bsf	3955,6,c	;volatile
 37835                           
 37836                           ; BSR set to: 14
 37837                           ;spi.c: 231: SSP2CON1bits.WCOL = 0;
 37838  004604  9E72               	bcf	3954,7,c	;volatile
 37839                           
 37840                           ; BSR set to: 14
 37841                           ;spi.c: 232: SSP2CON1bits.SSPOV = 0;
 37842  004606  9C72               	bcf	3954,6,c	;volatile
 37843                           
 37844                           ; BSR set to: 14
 37845                           ;spi.c: 233: SSP2CON1bits.CKP = 0;
 37846  004608  9872               	bcf	3954,4,c	;volatile
 37847                           
 37848                           ; BSR set to: 14
 37849                           ;spi.c: 234: SSP2CON1bits.SSPM =0b0100;
 37850  00460A  5072               	movf	3954,w,c	;volatile
 37851  00460C  0BF0               	andlw	-16
 37852  00460E  0904               	iorlw	4
 37853  004610  6E72               	movwf	3954,c	;volatile
 37854                           
 37855                           ; BSR set to: 14
 37856                           ;spi.c: 235: PIR3bits.SSP2IF = 0;
 37857  004612  9EA4               	bcf	4004,7,c	;volatile
 37858                           
 37859                           ; BSR set to: 14
 37860                           ;spi.c: 236: SSP2CON1bits.SSPEN = 1;
 37861  004614  8A72               	bsf	3954,5,c	;volatile
 37862                           
 37863                           ; BSR set to: 14
 37864                           ;spi.c: 239: DMACON1bits.TXINC = 1;
 37865  004616  8A88               	bsf	3976,5,c	;volatile
 37866                           
 37867                           ; BSR set to: 14
 37868                           ;spi.c: 240: DMACON1bits.RXINC = 1;
 37869  004618  8888               	bsf	3976,4,c	;volatile
 37870                           
 37871                           ; BSR set to: 14
 37872                           ;spi.c: 241: DMACON1bits.DUPLEX1 = 1;
 37873  00461A  8688               	bsf	3976,3,c	;volatile
 37874                           
 37875                           ; BSR set to: 14
 37876                           ;spi.c: 242: DMACON1bits.DUPLEX0 = 0;
 37877  00461C  9488               	bcf	3976,2,c	;volatile
 37878                           
 37879                           ; BSR set to: 14
 37880                           ;spi.c: 243: DMACON1bits.DLYINTEN = 0;
 37881  00461E  9288               	bcf	3976,1,c	;volatile
 37882                           
 37883                           ; BSR set to: 14
 37884                           ;spi.c: 245: DMACON2bits.DLYCYC = 0b0000;
 37885  004620  9886               	bcf	3974,4,c	;volatile
 37886  004622  9A86               	bcf	3974,5,c	;volatile
 37887  004624  9C86               	bcf	3974,6,c	;volatile
 37888  004626  9E86               	bcf	3974,7,c	;volatile
 37889                           
 37890                           ; BSR set to: 14
 37891                           ;spi.c: 246: DMACON2bits.INTLVL = 0b0000;
 37892  004628  9086               	bcf	3974,0,c	;volatile
 37893  00462A  9286               	bcf	3974,1,c	;volatile
 37894  00462C  9486               	bcf	3974,2,c	;volatile
 37895  00462E  9686               	bcf	3974,3,c	;volatile
 37896                           
 37897                           ; BSR set to: 14
 37898                           ;spi.c: 249: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 37899  004630  0E00               	movlw	0
 37900  004632  6E66               	movwf	3942,c	;volatile
 37901                           
 37902                           ; BSR set to: 14
 37903                           ;spi.c: 250: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 37904  004634  0E3F               	movlw	63
 37905  004636  6E67               	movwf	3943,c	;volatile
 37906                           
 37907                           ; BSR set to: 14
 37908                           ;spi.c: 253: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 37909  004638  0E02               	movlw	high __spi_external_tx_buffer
 37910  00463A  6E6A               	movwf	3946,c	;volatile
 37911                           
 37912                           ; BSR set to: 14
 37913                           ;spi.c: 254: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 37914  00463C  0E40               	movlw	low (low __spi_external_tx_buffer)
 37915  00463E  6E6B               	movwf	3947,c	;volatile
 37916                           
 37917                           ; BSR set to: 14
 37918                           ;spi.c: 257: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 37919  004640  0E02               	movlw	high __spi_external_rx_buffer
 37920  004642  6E68               	movwf	3944,c	;volatile
 37921                           
 37922                           ; BSR set to: 14
 37923                           ;spi.c: 258: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 37924  004644  0E00               	movlw	low (low __spi_external_rx_buffer)
 37925  004646  6E69               	movwf	3945,c	;volatile
 37926                           
 37927                           ; BSR set to: 14
 37928                           ;spi.c: 260: DMACON1bits.DMAEN = 1;
 37929  004648  8088               	bsf	3976,0,c	;volatile
 37930                           
 37931                           ; BSR set to: 14
 37932                           ;spi.c: 328: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 37933  00464A  0E01               	movlw	1
 37934  00464C  0100               	movlb	0	; () banked
 37935  00464E  6F94               	movwf	_active_configuration& (0+255),b
 37936                           
 37937                           ; BSR set to: 0
 37938                           ;spi.c: 330: }
 37939                           
 37940                           ;spi.c: 329: break;
 37941  004650  0012               	return	
 37942  004652                     l2744:
 37943                           
 37944                           ; BSR set to: 0
 37945  004652  5001               	movf	spi_set_configuration@configuration,w,c
 37946                           
 37947                           ; Switch size 1, requested type "space"
 37948                           ; Number of cases is 2, Range of values is 0 to 1
 37949                           ; switch strategies available:
 37950                           ; Name         Instructions Cycles
 37951                           ; simple_byte            7     4 (average)
 37952                           ;	Chosen strategy is simple_byte
 37953  004654  0A00               	xorlw	0	; case 0
 37954  004656  B4D8               	btfsc	status,2,c
 37955  004658  D786               	goto	l2745
 37956  00465A  0A01               	xorlw	1	; case 1
 37957  00465C  A4D8               	btfss	status,2,c
 37958  00465E  0012               	return	
 37959  004660  D7B2               	goto	l2747
 37960  004662                     __end_of_spi_set_configuration:
 37961                           	opt stack 0
 37962                           tosu	equ	0xFFF
 37963                           tosh	equ	0xFFE
 37964                           tosl	equ	0xFFD
 37965                           pclath	equ	0xFFA
 37966                           tblptru	equ	0xFF8
 37967                           tblptrh	equ	0xFF7
 37968                           tblptrl	equ	0xFF6
 37969                           tablat	equ	0xFF5
 37970                           prodh	equ	0xFF4
 37971                           prodl	equ	0xFF3
 37972                           intcon	equ	0xFF2
 37973                           intcon2	equ	0xFF1
 37974                           intcon3	equ	0xFF0
 37975                           indf0	equ	0xFEF
 37976                           postinc0	equ	0xFEE
 37977                           fsr0h	equ	0xFEA
 37978                           fsr0l	equ	0xFE9
 37979                           wreg	equ	0xFE8
 37980                           indf1	equ	0xFE7
 37981                           postdec1	equ	0xFE5
 37982                           plusw1	equ	0xFE3
 37983                           fsr1h	equ	0xFE2
 37984                           fsr1l	equ	0xFE1
 37985                           indf2	equ	0xFDF
 37986                           postinc2	equ	0xFDE
 37987                           postdec2	equ	0xFDD
 37988                           plusw2	equ	0xFDB
 37989                           fsr2h	equ	0xFDA
 37990                           fsr2l	equ	0xFD9
 37991                           status	equ	0xFD8
 37992                           
 37993 ;; *************** function __flash_partial_read *****************
 37994 ;; Defined at:
 37995 ;;		line 305 in file "flash.c"
 37996 ;; Parameters:    Size  Location     Type
 37997 ;;  page            2   19[COMRAM] unsigned int 
 37998 ;;  start           2   21[COMRAM] unsigned int 
 37999 ;;  length          2   23[COMRAM] unsigned int 
 38000 ;;  data            2   25[COMRAM] PTR unsigned char 
 38001 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 38002 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 38003 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 38004 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 38005 ;; Auto vars:     Size  Location     Type
 38006 ;;  command         4   31[COMRAM] unsigned char [4]
 38007 ;;  address         4   35[COMRAM] unsigned long 
 38008 ;; Return value:  Size  Location     Type
 38009 ;;                  1    wreg      void 
 38010 ;; Registers used:
 38011 ;;		wreg, status,2, status,0, cstack
 38012 ;; Tracked objects:
 38013 ;;		On entry : 0/0
 38014 ;;		On exit  : 0/0
 38015 ;;		Unchanged: 0/0
 38016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38017 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38018 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38020 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38021 ;;Total ram usage:       20 bytes
 38022 ;; Hardware stack levels used:    1
 38023 ;; Hardware stack levels required when called:    3
 38024 ;; This function calls:
 38025 ;;		__flash_is_busy
 38026 ;;		_spi_tx_rx
 38027 ;; This function is called by:
 38028 ;;		_flash_page_read
 38029 ;;		_flash_partial_read
 38030 ;; This function uses a non-reentrant model
 38031 ;;
 38032                           
 38033                           	psect	text199
 38034  0064D6                     __ptext199:
 38035                           	opt stack 0
 38036  0064D6                     __flash_partial_read:
 38037                           	opt stack 23
 38038                           
 38039                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 38040                           
 38041                           ;incstack = 0
 38042  0064D6  ECD7  F03D         	call	__flash_is_busy	;wreg free
 38043  0064DA  0900               	iorlw	0
 38044  0064DC  A4D8               	btfss	status,2,c
 38045  0064DE  D7FB               	goto	__flash_partial_read
 38046                           
 38047                           ;flash.c: 314: address = page;
 38048  0064E0  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 38049  0064E4  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 38050  0064E8  6A26               	clrf	__flash_partial_read@address+2,c
 38051  0064EA  6A27               	clrf	__flash_partial_read@address+3,c
 38052                           
 38053                           ;flash.c: 315: address <<= 9;
 38054  0064EC  0E09               	movlw	9
 38055  0064EE                     u6225:
 38056  0064EE  90D8               	bcf	status,0,c
 38057  0064F0  3624               	rlcf	__flash_partial_read@address,f,c
 38058  0064F2  3625               	rlcf	__flash_partial_read@address+1,f,c
 38059  0064F4  3626               	rlcf	__flash_partial_read@address+2,f,c
 38060  0064F6  3627               	rlcf	__flash_partial_read@address+3,f,c
 38061  0064F8  2EE8               	decfsz	wreg,f,c
 38062  0064FA  D7F9               	goto	u6225
 38063                           
 38064                           ;flash.c: 316: address |= start;
 38065  0064FC  5016               	movf	__flash_partial_read@start,w,c
 38066  0064FE  6E1C               	movwf	??__flash_partial_read& (0+255),c
 38067  006500  5017               	movf	__flash_partial_read@start+1,w,c
 38068  006502  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 38069  006504  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 38070  006506  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 38071  006508  501C               	movf	??__flash_partial_read,w,c
 38072  00650A  1224               	iorwf	__flash_partial_read@address,f,c
 38073  00650C  501D               	movf	??__flash_partial_read+1,w,c
 38074  00650E  1225               	iorwf	__flash_partial_read@address+1,f,c
 38075  006510  501E               	movf	??__flash_partial_read+2,w,c
 38076  006512  1226               	iorwf	__flash_partial_read@address+2,f,c
 38077  006514  501F               	movf	??__flash_partial_read+3,w,c
 38078  006516  1227               	iorwf	__flash_partial_read@address+3,f,c
 38079                           
 38080                           ;flash.c: 319: command[0] = 0x03;
 38081  006518  0E03               	movlw	3
 38082  00651A  6E20               	movwf	__flash_partial_read@command,c
 38083                           
 38084                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 38085  00651C  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 38086                           
 38087                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 38088  006520  5025               	movf	__flash_partial_read@address+1,w,c
 38089  006522  6E22               	movwf	__flash_partial_read@command+2,c
 38090                           
 38091                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 38092  006524  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 38093                           
 38094                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 38095  006528  0E20               	movlw	low __flash_partial_read@command
 38096  00652A  6E01               	movwf	spi_tx_rx@command,c
 38097  00652C  0E00               	movlw	high __flash_partial_read@command
 38098  00652E  6E02               	movwf	spi_tx_rx@command+1,c
 38099  006530  0E00               	movlw	0
 38100  006532  6E04               	movwf	spi_tx_rx@command_length+1,c
 38101  006534  0E04               	movlw	4
 38102  006536  6E03               	movwf	spi_tx_rx@command_length,c
 38103  006538  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 38104  00653C  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 38105  006540  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 38106  006544  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 38107  006548  EC41  F02F         	call	_spi_tx_rx	;wreg free
 38108  00654C  0012               	return		;funcret
 38109  00654E                     __end_of__flash_partial_read:
 38110                           	opt stack 0
 38111                           tosu	equ	0xFFF
 38112                           tosh	equ	0xFFE
 38113                           tosl	equ	0xFFD
 38114                           pclath	equ	0xFFA
 38115                           tblptru	equ	0xFF8
 38116                           tblptrh	equ	0xFF7
 38117                           tblptrl	equ	0xFF6
 38118                           tablat	equ	0xFF5
 38119                           prodh	equ	0xFF4
 38120                           prodl	equ	0xFF3
 38121                           intcon	equ	0xFF2
 38122                           intcon2	equ	0xFF1
 38123                           intcon3	equ	0xFF0
 38124                           indf0	equ	0xFEF
 38125                           postinc0	equ	0xFEE
 38126                           fsr0h	equ	0xFEA
 38127                           fsr0l	equ	0xFE9
 38128                           wreg	equ	0xFE8
 38129                           indf1	equ	0xFE7
 38130                           postdec1	equ	0xFE5
 38131                           plusw1	equ	0xFE3
 38132                           fsr1h	equ	0xFE2
 38133                           fsr1l	equ	0xFE1
 38134                           indf2	equ	0xFDF
 38135                           postinc2	equ	0xFDE
 38136                           postdec2	equ	0xFDD
 38137                           plusw2	equ	0xFDB
 38138                           fsr2h	equ	0xFDA
 38139                           fsr2l	equ	0xFD9
 38140                           status	equ	0xFD8
 38141                           
 38142 ;; *************** function __flash_is_busy *****************
 38143 ;; Defined at:
 38144 ;;		line 277 in file "flash.c"
 38145 ;; Parameters:    Size  Location     Type
 38146 ;;		None
 38147 ;; Auto vars:     Size  Location     Type
 38148 ;;  status          2   17[COMRAM] unsigned int 
 38149 ;; Return value:  Size  Location     Type
 38150 ;;                  1    wreg      unsigned char 
 38151 ;; Registers used:
 38152 ;;		wreg, status,2, status,0, cstack
 38153 ;; Tracked objects:
 38154 ;;		On entry : 0/0
 38155 ;;		On exit  : 0/0
 38156 ;;		Unchanged: 0/0
 38157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38162 ;;Total ram usage:        2 bytes
 38163 ;; Hardware stack levels used:    1
 38164 ;; Hardware stack levels required when called:    2
 38165 ;; This function calls:
 38166 ;;		__flash_get_status
 38167 ;;		__flash_wakeup
 38168 ;; This function is called by:
 38169 ;;		__flash_set_page_size
 38170 ;;		__flash_copy_page_to_buffer
 38171 ;;		__flash_compare_page_to_buffer
 38172 ;;		__flash_write_to_buffer
 38173 ;;		__flash_write_page_from_buffer
 38174 ;;		__flash_partial_read
 38175 ;;		_flash_is_busy
 38176 ;;		__flash_erase_page
 38177 ;;		_flash_set_power_state
 38178 ;; This function uses a non-reentrant model
 38179 ;;
 38180                           
 38181                           	psect	text200
 38182  007BAE                     __ptext200:
 38183                           	opt stack 0
 38184  007BAE                     __flash_is_busy:
 38185                           	opt stack 25
 38186                           
 38187                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 38188                           
 38189                           ;incstack = 0
 38190  007BAE  0100               	movlb	0	; () banked
 38191  007BB0  5197               	movf	_power_state& (0+255),w,b
 38192  007BB2  A4D8               	btfss	status,2,c
 38193                           
 38194                           ; BSR set to: 0
 38195                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 38196  007BB4  ECAE  F038         	call	__flash_wakeup	;wreg free
 38197                           
 38198                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 38199  007BB8  EC6B  F03C         	call	__flash_get_status	;wreg free
 38200  007BBC  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 38201  007BC0  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 38202                           
 38203                           ;flash.c: 291: if(status & 0b0000000010000000)
 38204  007BC4  AE12               	btfss	__flash_is_busy@status,7,c
 38205  007BC6  D002               	goto	l1745
 38206                           
 38207                           ;flash.c: 292: {;flash.c: 294: return 0;
 38208  007BC8  0E00               	movlw	0
 38209                           
 38210                           ;flash.c: 295: }
 38211  007BCA  0012               	return	
 38212  007BCC                     l1745:
 38213                           
 38214                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 38215  007BCC  0E01               	movlw	1
 38216  007BCE  0012               	return	
 38217  007BD0                     __end_of__flash_is_busy:
 38218                           	opt stack 0
 38219                           tosu	equ	0xFFF
 38220                           tosh	equ	0xFFE
 38221                           tosl	equ	0xFFD
 38222                           pclath	equ	0xFFA
 38223                           tblptru	equ	0xFF8
 38224                           tblptrh	equ	0xFF7
 38225                           tblptrl	equ	0xFF6
 38226                           tablat	equ	0xFF5
 38227                           prodh	equ	0xFF4
 38228                           prodl	equ	0xFF3
 38229                           intcon	equ	0xFF2
 38230                           intcon2	equ	0xFF1
 38231                           intcon3	equ	0xFF0
 38232                           indf0	equ	0xFEF
 38233                           postinc0	equ	0xFEE
 38234                           fsr0h	equ	0xFEA
 38235                           fsr0l	equ	0xFE9
 38236                           wreg	equ	0xFE8
 38237                           indf1	equ	0xFE7
 38238                           postdec1	equ	0xFE5
 38239                           plusw1	equ	0xFE3
 38240                           fsr1h	equ	0xFE2
 38241                           fsr1l	equ	0xFE1
 38242                           indf2	equ	0xFDF
 38243                           postinc2	equ	0xFDE
 38244                           postdec2	equ	0xFDD
 38245                           plusw2	equ	0xFDB
 38246                           fsr2h	equ	0xFDA
 38247                           fsr2l	equ	0xFD9
 38248                           status	equ	0xFD8
 38249                           
 38250 ;; *************** function __flash_wakeup *****************
 38251 ;; Defined at:
 38252 ;;		line 124 in file "flash.c"
 38253 ;; Parameters:    Size  Location     Type
 38254 ;;		None
 38255 ;; Auto vars:     Size  Location     Type
 38256 ;;  command         1    8[COMRAM] unsigned char 
 38257 ;; Return value:  Size  Location     Type
 38258 ;;                  1    wreg      void 
 38259 ;; Registers used:
 38260 ;;		wreg, status,2, status,0, cstack
 38261 ;; Tracked objects:
 38262 ;;		On entry : 0/0
 38263 ;;		On exit  : 0/0
 38264 ;;		Unchanged: 0/0
 38265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38270 ;;Total ram usage:        1 bytes
 38271 ;; Hardware stack levels used:    1
 38272 ;; Hardware stack levels required when called:    1
 38273 ;; This function calls:
 38274 ;;		_spi_tx
 38275 ;; This function is called by:
 38276 ;;		__flash_is_busy
 38277 ;;		_flash_set_power_state
 38278 ;; This function uses a non-reentrant model
 38279 ;;
 38280                           
 38281                           	psect	text201
 38282  00715C                     __ptext201:
 38283                           	opt stack 0
 38284  00715C                     __flash_wakeup:
 38285                           	opt stack 25
 38286                           
 38287                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 38288                           
 38289                           ;incstack = 0
 38290  00715C  D021               	goto	l1694
 38291  00715E                     
 38292                           ;flash.c: 131: command = 0xAB;
 38293  00715E  0EAB               	movlw	171
 38294  007160  6E09               	movwf	__flash_wakeup@command,c
 38295                           
 38296                           ;flash.c: 132: spi_tx(&command, 1);
 38297  007162  0E09               	movlw	low __flash_wakeup@command
 38298  007164  6E01               	movwf	spi_tx@data,c
 38299  007166  0E00               	movlw	high __flash_wakeup@command
 38300  007168  6E02               	movwf	spi_tx@data+1,c
 38301  00716A  0E00               	movlw	0
 38302  00716C  6E04               	movwf	spi_tx@length+1,c
 38303  00716E  0E01               	movlw	1
 38304  007170  6E03               	movwf	spi_tx@length,c
 38305  007172  ECD6  F037         	call	_spi_tx	;wreg free
 38306                           
 38307                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 38308  007176  0E17               	movlw	23
 38309  007178                     u11907:
 38310  007178  2EE8               	decfsz	wreg,f,c
 38311  00717A  D7FE               	bra	u11907
 38312  00717C  F000               	nop	
 38313                           
 38314                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 38315  00717E  0E00               	movlw	0
 38316  007180  0100               	movlb	0	; () banked
 38317  007182  6F97               	movwf	_power_state& (0+255),b
 38318                           
 38319                           ;flash.c: 135: break;
 38320  007184  0012               	return	
 38321  007186                     l1697:
 38322                           
 38323                           ; BSR set to: 0
 38324                           ;flash.c: 140: LATDbits.LD7 = 0;
 38325  007186  9E8C               	bcf	3980,7,c	;volatile
 38326                           
 38327                           ; BSR set to: 0
 38328                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 38329  007188  0E0D               	movlw	13
 38330  00718A                     u11917:
 38331  00718A  2EE8               	decfsz	wreg,f,c
 38332  00718C  D7FE               	bra	u11917
 38333  00718E  F000               	nop	
 38334                           
 38335                           ;flash.c: 142: LATDbits.LD7 = 1;
 38336  007190  8E8C               	bsf	3980,7,c	;volatile
 38337                           
 38338                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 38339  007192  0E50               	movlw	80
 38340  007194                     u11927:
 38341  007194  2EE8               	decfsz	wreg,f,c
 38342  007196  D7FE               	bra	u11927
 38343                           
 38344                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 38345  007198  0E00               	movlw	0
 38346  00719A  0100               	movlb	0	; () banked
 38347  00719C  6F97               	movwf	_power_state& (0+255),b
 38348                           
 38349                           ; BSR set to: 0
 38350                           ;flash.c: 146: }
 38351                           
 38352                           ;flash.c: 145: break;
 38353  00719E  0012               	return	
 38354  0071A0                     l1694:
 38355                           
 38356                           ; BSR set to: 0
 38357  0071A0  0100               	movlb	0	; () banked
 38358  0071A2  5197               	movf	_power_state& (0+255),w,b
 38359                           
 38360                           ; Switch size 1, requested type "space"
 38361                           ; Number of cases is 2, Range of values is 1 to 2
 38362                           ; switch strategies available:
 38363                           ; Name         Instructions Cycles
 38364                           ; simple_byte            7     4 (average)
 38365                           ;	Chosen strategy is simple_byte
 38366  0071A4  0A01               	xorlw	1	; case 1
 38367  0071A6  B4D8               	btfsc	status,2,c
 38368  0071A8  D7DA               	goto	l1695
 38369  0071AA  0A03               	xorlw	3	; case 2
 38370  0071AC  A4D8               	btfss	status,2,c
 38371  0071AE  0012               	return	
 38372  0071B0  D7EA               	goto	l1697
 38373  0071B2                     __end_of__flash_wakeup:
 38374                           	opt stack 0
 38375                           tosu	equ	0xFFF
 38376                           tosh	equ	0xFFE
 38377                           tosl	equ	0xFFD
 38378                           pclath	equ	0xFFA
 38379                           tblptru	equ	0xFF8
 38380                           tblptrh	equ	0xFF7
 38381                           tblptrl	equ	0xFF6
 38382                           tablat	equ	0xFF5
 38383                           prodh	equ	0xFF4
 38384                           prodl	equ	0xFF3
 38385                           intcon	equ	0xFF2
 38386                           intcon2	equ	0xFF1
 38387                           intcon3	equ	0xFF0
 38388                           indf0	equ	0xFEF
 38389                           postinc0	equ	0xFEE
 38390                           fsr0h	equ	0xFEA
 38391                           fsr0l	equ	0xFE9
 38392                           wreg	equ	0xFE8
 38393                           indf1	equ	0xFE7
 38394                           postdec1	equ	0xFE5
 38395                           plusw1	equ	0xFE3
 38396                           fsr1h	equ	0xFE2
 38397                           fsr1l	equ	0xFE1
 38398                           indf2	equ	0xFDF
 38399                           postinc2	equ	0xFDE
 38400                           postdec2	equ	0xFDD
 38401                           plusw2	equ	0xFDB
 38402                           fsr2h	equ	0xFDA
 38403                           fsr2l	equ	0xFD9
 38404                           status	equ	0xFD8
 38405                           
 38406 ;; *************** function _spi_tx *****************
 38407 ;; Defined at:
 38408 ;;		line 341 in file "spi.c"
 38409 ;; Parameters:    Size  Location     Type
 38410 ;;  data            2    0[COMRAM] PTR unsigned char 
 38411 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 38412 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 38413 ;;  length          2    2[COMRAM] unsigned int 
 38414 ;; Auto vars:     Size  Location     Type
 38415 ;;		None
 38416 ;; Return value:  Size  Location     Type
 38417 ;;                  1    wreg      void 
 38418 ;; Registers used:
 38419 ;;		wreg, status,2, status,0
 38420 ;; Tracked objects:
 38421 ;;		On entry : 0/0
 38422 ;;		On exit  : 0/0
 38423 ;;		Unchanged: 0/0
 38424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38429 ;;Total ram usage:        8 bytes
 38430 ;; Hardware stack levels used:    1
 38431 ;; This function calls:
 38432 ;;		Nothing
 38433 ;; This function is called by:
 38434 ;;		__flash_set_page_size
 38435 ;;		__flash_wakeup
 38436 ;;		__flash_copy_page_to_buffer
 38437 ;;		__flash_compare_page_to_buffer
 38438 ;;		__flash_write_page_from_buffer
 38439 ;;		__flash_erase_page
 38440 ;;		_flash_set_power_state
 38441 ;; This function uses a non-reentrant model
 38442 ;;
 38443                           
 38444                           	psect	text202
 38445  006FAC                     __ptext202:
 38446                           	opt stack 0
 38447  006FAC                     _spi_tx:
 38448                           	opt stack 27
 38449                           
 38450                           ;spi.c: 344: DMACON1bits.SSCON1 = 0;
 38451                           
 38452                           ; BSR set to: 0
 38453                           ;incstack = 0
 38454  006FAC  9E88               	bcf	3976,7,c	;volatile
 38455                           
 38456                           ;spi.c: 345: DMACON1bits.SSCON0 = 0;
 38457  006FAE  9C88               	bcf	3976,6,c	;volatile
 38458                           
 38459                           ;spi.c: 347: DMACON1bits.TXINC = 1;
 38460  006FB0  8A88               	bsf	3976,5,c	;volatile
 38461                           
 38462                           ;spi.c: 349: DMACON1bits.RXINC = 0;
 38463  006FB2  9888               	bcf	3976,4,c	;volatile
 38464                           
 38465                           ;spi.c: 351: DMACON1bits.DUPLEX1 = 0;
 38466  006FB4  9688               	bcf	3976,3,c	;volatile
 38467                           
 38468                           ;spi.c: 352: DMACON1bits.DUPLEX0 = 1;
 38469  006FB6  8488               	bsf	3976,2,c	;volatile
 38470                           
 38471                           ;spi.c: 354: DMACON1bits.DLYINTEN = 0;
 38472  006FB8  9288               	bcf	3976,1,c	;volatile
 38473                           
 38474                           ;spi.c: 356: DMACON2bits.DLYCYC = 0b0000;
 38475  006FBA  9886               	bcf	3974,4,c	;volatile
 38476  006FBC  9A86               	bcf	3974,5,c	;volatile
 38477  006FBE  9C86               	bcf	3974,6,c	;volatile
 38478  006FC0  9E86               	bcf	3974,7,c	;volatile
 38479                           
 38480                           ;spi.c: 358: DMACON2bits.INTLVL = 0b0000;
 38481  006FC2  9086               	bcf	3974,0,c	;volatile
 38482  006FC4  9286               	bcf	3974,1,c	;volatile
 38483  006FC6  9486               	bcf	3974,2,c	;volatile
 38484  006FC8  9686               	bcf	3974,3,c	;volatile
 38485                           
 38486                           ;spi.c: 361: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 38487  006FCA  5002               	movf	spi_tx@data+1,w,c
 38488  006FCC  6E6A               	movwf	3946,c	;volatile
 38489                           
 38490                           ;spi.c: 362: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 38491  006FCE  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 38492                           
 38493                           ;spi.c: 365: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 38494  006FD2  0EFF               	movlw	255
 38495  006FD4  6E05               	movwf	??_spi_tx& (0+255),c
 38496  006FD6  0EFF               	movlw	255
 38497  006FD8  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 38498  006FDA  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 38499  006FDE  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 38500  006FE2  5005               	movf	??_spi_tx,w,c
 38501  006FE4  2607               	addwf	??_spi_tx+2,f,c
 38502  006FE6  5006               	movf	??_spi_tx+1,w,c
 38503  006FE8  2208               	addwfc	??_spi_tx+3,f,c
 38504  006FEA  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 38505  006FEE  6A08               	clrf	??_spi_tx+3,c
 38506  006FF0  5007               	movf	??_spi_tx+2,w,c
 38507  006FF2  6E66               	movwf	3942,c	;volatile
 38508                           
 38509                           ;spi.c: 366: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 38510  006FF4  0403               	decf	spi_tx@length,w,c
 38511  006FF6  6E67               	movwf	3943,c	;volatile
 38512                           
 38513                           ;spi.c: 369: LATDbits.LD7 = 0;
 38514  006FF8  9E8C               	bcf	3980,7,c	;volatile
 38515                           
 38516                           ;spi.c: 370: DMACON1bits.DMAEN = 1;
 38517  006FFA  8088               	bsf	3976,0,c	;volatile
 38518  006FFC  B088               	btfsc	3976,0,c	;volatile
 38519  006FFE  D7FE               	goto	l2755
 38520                           
 38521                           ;spi.c: 372: LATDbits.LD7 = 1;
 38522  007000  8E8C               	bsf	3980,7,c	;volatile
 38523  007002  0012               	return		;funcret
 38524  007004                     __end_of_spi_tx:
 38525                           	opt stack 0
 38526                           tosu	equ	0xFFF
 38527                           tosh	equ	0xFFE
 38528                           tosl	equ	0xFFD
 38529                           pclath	equ	0xFFA
 38530                           tblptru	equ	0xFF8
 38531                           tblptrh	equ	0xFF7
 38532                           tblptrl	equ	0xFF6
 38533                           tablat	equ	0xFF5
 38534                           prodh	equ	0xFF4
 38535                           prodl	equ	0xFF3
 38536                           intcon	equ	0xFF2
 38537                           intcon2	equ	0xFF1
 38538                           intcon3	equ	0xFF0
 38539                           indf0	equ	0xFEF
 38540                           postinc0	equ	0xFEE
 38541                           fsr0h	equ	0xFEA
 38542                           fsr0l	equ	0xFE9
 38543                           wreg	equ	0xFE8
 38544                           indf1	equ	0xFE7
 38545                           postdec1	equ	0xFE5
 38546                           plusw1	equ	0xFE3
 38547                           fsr1h	equ	0xFE2
 38548                           fsr1l	equ	0xFE1
 38549                           indf2	equ	0xFDF
 38550                           postinc2	equ	0xFDE
 38551                           postdec2	equ	0xFDD
 38552                           plusw2	equ	0xFDB
 38553                           fsr2h	equ	0xFDA
 38554                           fsr2l	equ	0xFD9
 38555                           status	equ	0xFD8
 38556                           
 38557 ;; *************** function __flash_get_status *****************
 38558 ;; Defined at:
 38559 ;;		line 113 in file "flash.c"
 38560 ;; Parameters:    Size  Location     Type
 38561 ;;		None
 38562 ;; Auto vars:     Size  Location     Type
 38563 ;;  status          2   15[COMRAM] unsigned int 
 38564 ;;  command         1   14[COMRAM] unsigned char 
 38565 ;; Return value:  Size  Location     Type
 38566 ;;                  2   12[COMRAM] unsigned int 
 38567 ;; Registers used:
 38568 ;;		wreg, status,2, status,0, cstack
 38569 ;; Tracked objects:
 38570 ;;		On entry : 0/0
 38571 ;;		On exit  : 0/0
 38572 ;;		Unchanged: 0/0
 38573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38575 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38577 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38578 ;;Total ram usage:        5 bytes
 38579 ;; Hardware stack levels used:    1
 38580 ;; Hardware stack levels required when called:    1
 38581 ;; This function calls:
 38582 ;;		_spi_tx_rx
 38583 ;; This function is called by:
 38584 ;;		__flash_compare_page_to_buffer
 38585 ;;		__flash_is_busy
 38586 ;; This function uses a non-reentrant model
 38587 ;;
 38588                           
 38589                           	psect	text203
 38590  0078D6                     __ptext203:
 38591                           	opt stack 0
 38592  0078D6                     __flash_get_status:
 38593                           	opt stack 25
 38594                           
 38595                           ;flash.c: 117: uint8_t command = 0xD7;
 38596                           
 38597                           ;incstack = 0
 38598  0078D6  0ED7               	movlw	215
 38599  0078D8  6E0F               	movwf	__flash_get_status@command,c
 38600                           
 38601                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 38602  0078DA  0E0F               	movlw	low __flash_get_status@command
 38603  0078DC  6E01               	movwf	spi_tx_rx@command,c
 38604  0078DE  0E00               	movlw	high __flash_get_status@command
 38605  0078E0  6E02               	movwf	spi_tx_rx@command+1,c
 38606  0078E2  0E00               	movlw	0
 38607  0078E4  6E04               	movwf	spi_tx_rx@command_length+1,c
 38608  0078E6  0E01               	movlw	1
 38609  0078E8  6E03               	movwf	spi_tx_rx@command_length,c
 38610  0078EA  0E10               	movlw	low __flash_get_status@status
 38611  0078EC  6E05               	movwf	spi_tx_rx@data,c
 38612  0078EE  0E00               	movlw	high __flash_get_status@status
 38613  0078F0  6E06               	movwf	spi_tx_rx@data+1,c
 38614  0078F2  0E00               	movlw	0
 38615  0078F4  6E08               	movwf	spi_tx_rx@data_length+1,c
 38616  0078F6  0E02               	movlw	2
 38617  0078F8  6E07               	movwf	spi_tx_rx@data_length,c
 38618  0078FA  EC41  F02F         	call	_spi_tx_rx	;wreg free
 38619                           
 38620                           ;flash.c: 120: return status;
 38621  0078FE  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 38622  007902  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 38623  007906  0012               	return	
 38624  007908                     __end_of__flash_get_status:
 38625                           	opt stack 0
 38626                           tosu	equ	0xFFF
 38627                           tosh	equ	0xFFE
 38628                           tosl	equ	0xFFD
 38629                           pclath	equ	0xFFA
 38630                           tblptru	equ	0xFF8
 38631                           tblptrh	equ	0xFF7
 38632                           tblptrl	equ	0xFF6
 38633                           tablat	equ	0xFF5
 38634                           prodh	equ	0xFF4
 38635                           prodl	equ	0xFF3
 38636                           intcon	equ	0xFF2
 38637                           intcon2	equ	0xFF1
 38638                           intcon3	equ	0xFF0
 38639                           indf0	equ	0xFEF
 38640                           postinc0	equ	0xFEE
 38641                           fsr0h	equ	0xFEA
 38642                           fsr0l	equ	0xFE9
 38643                           wreg	equ	0xFE8
 38644                           indf1	equ	0xFE7
 38645                           postdec1	equ	0xFE5
 38646                           plusw1	equ	0xFE3
 38647                           fsr1h	equ	0xFE2
 38648                           fsr1l	equ	0xFE1
 38649                           indf2	equ	0xFDF
 38650                           postinc2	equ	0xFDE
 38651                           postdec2	equ	0xFDD
 38652                           plusw2	equ	0xFDB
 38653                           fsr2h	equ	0xFDA
 38654                           fsr2l	equ	0xFD9
 38655                           status	equ	0xFD8
 38656                           
 38657 ;; *************** function _spi_tx_rx *****************
 38658 ;; Defined at:
 38659 ;;		line 432 in file "spi.c"
 38660 ;; Parameters:    Size  Location     Type
 38661 ;;  command         2    0[COMRAM] PTR unsigned char 
 38662 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 38663 ;;  command_leng    2    2[COMRAM] unsigned int 
 38664 ;;  data            2    4[COMRAM] PTR unsigned char 
 38665 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 38666 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 38667 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 38668 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 38669 ;;		 -> RAM(3759), 
 38670 ;;  data_length     2    6[COMRAM] unsigned int 
 38671 ;; Auto vars:     Size  Location     Type
 38672 ;;		None
 38673 ;; Return value:  Size  Location     Type
 38674 ;;                  1    wreg      void 
 38675 ;; Registers used:
 38676 ;;		wreg, status,2, status,0
 38677 ;; Tracked objects:
 38678 ;;		On entry : 0/0
 38679 ;;		On exit  : 0/0
 38680 ;;		Unchanged: 0/0
 38681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38685 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38686 ;;Total ram usage:       12 bytes
 38687 ;; Hardware stack levels used:    1
 38688 ;; This function calls:
 38689 ;;		Nothing
 38690 ;; This function is called by:
 38691 ;;		__flash_get_status
 38692 ;;		__flash_partial_read
 38693 ;; This function uses a non-reentrant model
 38694 ;;
 38695                           
 38696                           	psect	text204
 38697  005E82                     __ptext204:
 38698                           	opt stack 0
 38699  005E82                     _spi_tx_rx:
 38700                           	opt stack 25
 38701                           
 38702                           ;spi.c: 435: DMACON1bits.SSCON1 = 0;
 38703                           
 38704                           ;incstack = 0
 38705  005E82  9E88               	bcf	3976,7,c	;volatile
 38706                           
 38707                           ;spi.c: 436: DMACON1bits.SSCON0 = 0;
 38708  005E84  9C88               	bcf	3976,6,c	;volatile
 38709                           
 38710                           ;spi.c: 438: DMACON1bits.TXINC = 1;
 38711  005E86  8A88               	bsf	3976,5,c	;volatile
 38712                           
 38713                           ;spi.c: 440: DMACON1bits.RXINC = 0;
 38714  005E88  9888               	bcf	3976,4,c	;volatile
 38715                           
 38716                           ;spi.c: 442: DMACON1bits.DUPLEX1 = 0;
 38717  005E8A  9688               	bcf	3976,3,c	;volatile
 38718                           
 38719                           ;spi.c: 443: DMACON1bits.DUPLEX0 = 1;
 38720  005E8C  8488               	bsf	3976,2,c	;volatile
 38721                           
 38722                           ;spi.c: 445: DMACON1bits.DLYINTEN = 0;
 38723  005E8E  9288               	bcf	3976,1,c	;volatile
 38724                           
 38725                           ;spi.c: 447: DMACON2bits.DLYCYC = 0b0000;
 38726  005E90  9886               	bcf	3974,4,c	;volatile
 38727  005E92  9A86               	bcf	3974,5,c	;volatile
 38728  005E94  9C86               	bcf	3974,6,c	;volatile
 38729  005E96  9E86               	bcf	3974,7,c	;volatile
 38730                           
 38731                           ;spi.c: 449: DMACON2bits.INTLVL = 0b0000;
 38732  005E98  9086               	bcf	3974,0,c	;volatile
 38733  005E9A  9286               	bcf	3974,1,c	;volatile
 38734  005E9C  9486               	bcf	3974,2,c	;volatile
 38735  005E9E  9686               	bcf	3974,3,c	;volatile
 38736                           
 38737                           ;spi.c: 452: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 38738  005EA0  5002               	movf	spi_tx_rx@command+1,w,c
 38739  005EA2  6E6A               	movwf	3946,c	;volatile
 38740                           
 38741                           ;spi.c: 453: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 38742  005EA4  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 38743                           
 38744                           ;spi.c: 456: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 38745  005EA8  0EFF               	movlw	255
 38746  005EAA  6E09               	movwf	??_spi_tx_rx& (0+255),c
 38747  005EAC  0EFF               	movlw	255
 38748  005EAE  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 38749  005EB0  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 38750  005EB4  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 38751  005EB8  5009               	movf	??_spi_tx_rx,w,c
 38752  005EBA  260B               	addwf	??_spi_tx_rx+2,f,c
 38753  005EBC  500A               	movf	??_spi_tx_rx+1,w,c
 38754  005EBE  220C               	addwfc	??_spi_tx_rx+3,f,c
 38755  005EC0  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 38756  005EC4  6A0C               	clrf	??_spi_tx_rx+3,c
 38757  005EC6  500B               	movf	??_spi_tx_rx+2,w,c
 38758  005EC8  6E66               	movwf	3942,c	;volatile
 38759                           
 38760                           ;spi.c: 457: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 38761  005ECA  0403               	decf	spi_tx_rx@command_length,w,c
 38762  005ECC  6E67               	movwf	3943,c	;volatile
 38763                           
 38764                           ;spi.c: 460: LATDbits.LD7 = 0;
 38765  005ECE  9E8C               	bcf	3980,7,c	;volatile
 38766                           
 38767                           ;spi.c: 463: DMACON1bits.DMAEN = 1;
 38768  005ED0  8088               	bsf	3976,0,c	;volatile
 38769  005ED2  B088               	btfsc	3976,0,c	;volatile
 38770  005ED4  D7FE               	goto	l2770
 38771                           
 38772                           ;spi.c: 467: DMACON1bits.TXINC = 0;
 38773  005ED6  9A88               	bcf	3976,5,c	;volatile
 38774                           
 38775                           ;spi.c: 469: DMACON1bits.RXINC = 1;
 38776  005ED8  8888               	bsf	3976,4,c	;volatile
 38777                           
 38778                           ;spi.c: 471: DMACON1bits.DUPLEX1 = 0;
 38779  005EDA  9688               	bcf	3976,3,c	;volatile
 38780                           
 38781                           ;spi.c: 472: DMACON1bits.DUPLEX0 = 0;
 38782  005EDC  9488               	bcf	3976,2,c	;volatile
 38783                           
 38784                           ;spi.c: 475: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 38785  005EDE  5006               	movf	spi_tx_rx@data+1,w,c
 38786  005EE0  6E68               	movwf	3944,c	;volatile
 38787                           
 38788                           ;spi.c: 476: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 38789  005EE2  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 38790                           
 38791                           ;spi.c: 479: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 38792  005EE6  0EFF               	movlw	255
 38793  005EE8  6E09               	movwf	??_spi_tx_rx& (0+255),c
 38794  005EEA  0EFF               	movlw	255
 38795  005EEC  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 38796  005EEE  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 38797  005EF2  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 38798  005EF6  5009               	movf	??_spi_tx_rx,w,c
 38799  005EF8  260B               	addwf	??_spi_tx_rx+2,f,c
 38800  005EFA  500A               	movf	??_spi_tx_rx+1,w,c
 38801  005EFC  220C               	addwfc	??_spi_tx_rx+3,f,c
 38802  005EFE  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 38803  005F02  6A0C               	clrf	??_spi_tx_rx+3,c
 38804  005F04  500B               	movf	??_spi_tx_rx+2,w,c
 38805  005F06  6E66               	movwf	3942,c	;volatile
 38806                           
 38807                           ;spi.c: 480: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 38808  005F08  0407               	decf	spi_tx_rx@data_length,w,c
 38809  005F0A  6E67               	movwf	3943,c	;volatile
 38810                           
 38811                           ;spi.c: 483: DMACON1bits.DMAEN = 1;
 38812  005F0C  8088               	bsf	3976,0,c	;volatile
 38813  005F0E  B088               	btfsc	3976,0,c	;volatile
 38814  005F10  D7FE               	goto	l2773
 38815                           
 38816                           ;spi.c: 487: LATDbits.LD7 = 1;
 38817  005F12  8E8C               	bsf	3980,7,c	;volatile
 38818  005F14  0012               	return		;funcret
 38819  005F16                     __end_of_spi_tx_rx:
 38820                           	opt stack 0
 38821                           tosu	equ	0xFFF
 38822                           tosh	equ	0xFFE
 38823                           tosl	equ	0xFFD
 38824                           pclath	equ	0xFFA
 38825                           tblptru	equ	0xFF8
 38826                           tblptrh	equ	0xFF7
 38827                           tblptrl	equ	0xFF6
 38828                           tablat	equ	0xFF5
 38829                           prodh	equ	0xFF4
 38830                           prodl	equ	0xFF3
 38831                           intcon	equ	0xFF2
 38832                           intcon2	equ	0xFF1
 38833                           intcon3	equ	0xFF0
 38834                           indf0	equ	0xFEF
 38835                           postinc0	equ	0xFEE
 38836                           fsr0h	equ	0xFEA
 38837                           fsr0l	equ	0xFE9
 38838                           wreg	equ	0xFE8
 38839                           indf1	equ	0xFE7
 38840                           postdec1	equ	0xFE5
 38841                           plusw1	equ	0xFE3
 38842                           fsr1h	equ	0xFE2
 38843                           fsr1l	equ	0xFE1
 38844                           indf2	equ	0xFDF
 38845                           postinc2	equ	0xFDE
 38846                           postdec2	equ	0xFDD
 38847                           plusw2	equ	0xFDB
 38848                           fsr2h	equ	0xFDA
 38849                           fsr2l	equ	0xFD9
 38850                           status	equ	0xFD8
 38851                           
 38852 ;; *************** function _USBTransferOnePacket *****************
 38853 ;; Defined at:
 38854 ;;		line 995 in file "usb_device.c"
 38855 ;; Parameters:    Size  Location     Type
 38856 ;;  ep              1    wreg     unsigned char 
 38857 ;;  dir             1    0[COMRAM] unsigned char 
 38858 ;;  data            2    1[COMRAM] PTR unsigned char 
 38859 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 38860 ;;		 -> msd_cbw(31), NULL(0), 
 38861 ;;  len             1    3[COMRAM] unsigned char 
 38862 ;; Auto vars:     Size  Location     Type
 38863 ;;  ep              1    8[COMRAM] unsigned char 
 38864 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 38865 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 38866 ;; Return value:  Size  Location     Type
 38867 ;;                  2    0[COMRAM] PTR void 
 38868 ;; Registers used:
 38869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38870 ;; Tracked objects:
 38871 ;;		On entry : 0/0
 38872 ;;		On exit  : 0/0
 38873 ;;		Unchanged: 0/0
 38874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38878 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38879 ;;Total ram usage:       11 bytes
 38880 ;; Hardware stack levels used:    1
 38881 ;; This function calls:
 38882 ;;		Nothing
 38883 ;; This function is called by:
 38884 ;;		_USBMSDInit
 38885 ;;		_USBCheckMSDRequest
 38886 ;;		_MSDTasks
 38887 ;;		_MSDProcessCommandMediaPresent
 38888 ;;		_MSDReadHandler
 38889 ;;		_MSDWriteHandler
 38890 ;;		_MSDTransferTerminated
 38891 ;;		_APP_DeviceCustomHIDInitialize
 38892 ;;		_APP_DeviceCustomHIDTasks
 38893 ;; This function uses a non-reentrant model
 38894 ;;
 38895                           
 38896                           	psect	text205
 38897  004360                     __ptext205:
 38898                           	opt stack 0
 38899  004360                     _USBTransferOnePacket:
 38900                           	opt stack 27
 38901                           
 38902                           ;incstack = 0
 38903                           ;USBTransferOnePacket@ep stored from wreg
 38904  004360  6E09               	movwf	USBTransferOnePacket@ep,c
 38905                           
 38906                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 38907  004362  5001               	movf	USBTransferOnePacket@dir,w,c
 38908  004364  B4D8               	btfsc	status,2,c
 38909  004366  D007               	goto	l183
 38910                           
 38911                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 38912  004368  5009               	movf	USBTransferOnePacket@ep,w,c
 38913  00436A  0D02               	mullw	2
 38914  00436C  0E6C               	movlw	low _pBDTEntryIn
 38915  00436E  24F3               	addwf	prodl,w,c
 38916  004370  6ED9               	movwf	fsr2l,c
 38917  004372  0E00               	movlw	high _pBDTEntryIn
 38918  004374  D006               	goto	L41
 38919  004376                     l183:
 38920                           
 38921                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 38922  004376  5009               	movf	USBTransferOnePacket@ep,w,c
 38923  004378  0D02               	mullw	2
 38924  00437A  0E72               	movlw	low _pBDTEntryOut
 38925  00437C  24F3               	addwf	prodl,w,c
 38926  00437E  6ED9               	movwf	fsr2l,c
 38927  004380  0E00               	movlw	high _pBDTEntryOut
 38928  004382                     L41:
 38929  004382  20F4               	addwfc	prodh,w,c
 38930  004384  6EDA               	movwf	fsr2h,c
 38931  004386  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 38932  00438A  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 38933                           
 38934                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 38935  00438E  500A               	movf	USBTransferOnePacket@handle,w,c
 38936  004390  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 38937  004392  A4D8               	btfss	status,2,c
 38938  004394  D005               	goto	l185
 38939                           
 38940                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 38941  004396  0E00               	movlw	0
 38942  004398  6E01               	movwf	?_USBTransferOnePacket,c
 38943  00439A  0E00               	movlw	0
 38944  00439C  6E02               	movwf	?_USBTransferOnePacket+1,c
 38945  00439E  0012               	return	
 38946  0043A0                     l185:
 38947                           
 38948                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 38949  0043A0  EE20 F002          	lfsr	2,2
 38950  0043A4  500A               	movf	USBTransferOnePacket@handle,w,c
 38951  0043A6  26D9               	addwf	fsr2l,f,c
 38952  0043A8  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38953  0043AA  22DA               	addwfc	fsr2h,f,c
 38954  0043AC  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 38955  0043B0  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 38956                           
 38957                           ;usb_device.c: 1030: handle->CNT = len;
 38958  0043B4  EE20 F001          	lfsr	2,1
 38959  0043B8  500A               	movf	USBTransferOnePacket@handle,w,c
 38960  0043BA  26D9               	addwf	fsr2l,f,c
 38961  0043BC  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38962  0043BE  22DA               	addwfc	fsr2h,f,c
 38963  0043C0  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 38964                           
 38965                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 38966  0043C4  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38967  0043C8  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38968  0043CC  0E40               	movlw	64
 38969  0043CE  16DF               	andwf	indf2,f,c
 38970                           
 38971                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 38972  0043D0  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38973  0043D4  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38974  0043D8  0E00               	movlw	0
 38975  0043DA  86DB               	bsf	plusw2,3,c
 38976                           
 38977                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 38978  0043DC  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38979  0043E0  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38980  0043E4  0E00               	movlw	0
 38981  0043E6  8EDB               	bsf	plusw2,7,c
 38982                           
 38983                           ;usb_device.c: 1036: if(dir != 0)
 38984  0043E8  5001               	movf	USBTransferOnePacket@dir,w,c
 38985  0043EA  B4D8               	btfsc	status,2,c
 38986  0043EC  D018               	goto	l187
 38987                           
 38988                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 38989  0043EE  5009               	movf	USBTransferOnePacket@ep,w,c
 38990  0043F0  0D02               	mullw	2
 38991  0043F2  0E6C               	movlw	low _pBDTEntryIn
 38992  0043F4  24F3               	addwf	prodl,w,c
 38993  0043F6  6ED9               	movwf	fsr2l,c
 38994  0043F8  0E00               	movlw	high _pBDTEntryIn
 38995  0043FA  20F4               	addwfc	prodh,w,c
 38996  0043FC  6EDA               	movwf	fsr2h,c
 38997  0043FE  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 38998  004402  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 38999  004406  0E04               	movlw	4
 39000  004408  1805               	xorwf	??_USBTransferOnePacket,w,c
 39001  00440A  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 39002  00440C  5006               	movf	??_USBTransferOnePacket+1,w,c
 39003  00440E  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 39004  004410  5009               	movf	USBTransferOnePacket@ep,w,c
 39005  004412  0D02               	mullw	2
 39006  004414  0E6C               	movlw	low _pBDTEntryIn
 39007  004416  24F3               	addwf	prodl,w,c
 39008  004418  6ED9               	movwf	fsr2l,c
 39009  00441A  0E00               	movlw	high _pBDTEntryIn
 39010  00441C  D017               	goto	L42
 39011  00441E                     l187:
 39012                           
 39013                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 39014  00441E  5009               	movf	USBTransferOnePacket@ep,w,c
 39015  004420  0D02               	mullw	2
 39016  004422  0E72               	movlw	low _pBDTEntryOut
 39017  004424  24F3               	addwf	prodl,w,c
 39018  004426  6ED9               	movwf	fsr2l,c
 39019  004428  0E00               	movlw	high _pBDTEntryOut
 39020  00442A  20F4               	addwfc	prodh,w,c
 39021  00442C  6EDA               	movwf	fsr2h,c
 39022  00442E  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 39023  004432  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 39024  004436  0E04               	movlw	4
 39025  004438  1805               	xorwf	??_USBTransferOnePacket,w,c
 39026  00443A  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 39027  00443C  5006               	movf	??_USBTransferOnePacket+1,w,c
 39028  00443E  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 39029  004440  5009               	movf	USBTransferOnePacket@ep,w,c
 39030  004442  0D02               	mullw	2
 39031  004444  0E72               	movlw	low _pBDTEntryOut
 39032  004446  24F3               	addwf	prodl,w,c
 39033  004448  6ED9               	movwf	fsr2l,c
 39034  00444A  0E00               	movlw	high _pBDTEntryOut
 39035  00444C                     L42:
 39036  00444C  20F4               	addwfc	prodh,w,c
 39037  00444E  6EDA               	movwf	fsr2h,c
 39038  004450  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 39039  004454  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 39040                           
 39041                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 39042  004458  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 39043  00445C  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 39044  004460  0012               	return	
 39045  004462                     __end_of_USBTransferOnePacket:
 39046                           	opt stack 0
 39047                           tosu	equ	0xFFF
 39048                           tosh	equ	0xFFE
 39049                           tosl	equ	0xFFD
 39050                           pclath	equ	0xFFA
 39051                           tblptru	equ	0xFF8
 39052                           tblptrh	equ	0xFF7
 39053                           tblptrl	equ	0xFF6
 39054                           tablat	equ	0xFF5
 39055                           prodh	equ	0xFF4
 39056                           prodl	equ	0xFF3
 39057                           intcon	equ	0xFF2
 39058                           intcon2	equ	0xFF1
 39059                           intcon3	equ	0xFF0
 39060                           indf0	equ	0xFEF
 39061                           postinc0	equ	0xFEE
 39062                           fsr0h	equ	0xFEA
 39063                           fsr0l	equ	0xFE9
 39064                           wreg	equ	0xFE8
 39065                           indf1	equ	0xFE7
 39066                           postdec1	equ	0xFE5
 39067                           plusw1	equ	0xFE3
 39068                           fsr1h	equ	0xFE2
 39069                           fsr1l	equ	0xFE1
 39070                           indf2	equ	0xFDF
 39071                           postinc2	equ	0xFDE
 39072                           postdec2	equ	0xFDD
 39073                           plusw2	equ	0xFDB
 39074                           fsr2h	equ	0xFDA
 39075                           fsr2l	equ	0xFD9
 39076                           status	equ	0xFD8
 39077                           tosu	equ	0xFFF
 39078                           tosh	equ	0xFFE
 39079                           tosl	equ	0xFFD
 39080                           pclath	equ	0xFFA
 39081                           tblptru	equ	0xFF8
 39082                           tblptrh	equ	0xFF7
 39083                           tblptrl	equ	0xFF6
 39084                           tablat	equ	0xFF5
 39085                           prodh	equ	0xFF4
 39086                           prodl	equ	0xFF3
 39087                           intcon	equ	0xFF2
 39088                           intcon2	equ	0xFF1
 39089                           intcon3	equ	0xFF0
 39090                           indf0	equ	0xFEF
 39091                           postinc0	equ	0xFEE
 39092                           fsr0h	equ	0xFEA
 39093                           fsr0l	equ	0xFE9
 39094                           wreg	equ	0xFE8
 39095                           indf1	equ	0xFE7
 39096                           postdec1	equ	0xFE5
 39097                           plusw1	equ	0xFE3
 39098                           fsr1h	equ	0xFE2
 39099                           fsr1l	equ	0xFE1
 39100                           indf2	equ	0xFDF
 39101                           postinc2	equ	0xFDE
 39102                           postdec2	equ	0xFDD
 39103                           plusw2	equ	0xFDB
 39104                           fsr2h	equ	0xFDA
 39105                           fsr2l	equ	0xFD9
 39106                           status	equ	0xFD8
 39107                           
 39108                           	psect	text206
 39109  000000                     __ptext206:
 39110                           	opt stack 0
 39111                           tosu	equ	0xFFF
 39112                           tosh	equ	0xFFE
 39113                           tosl	equ	0xFFD
 39114                           pclath	equ	0xFFA
 39115                           tblptru	equ	0xFF8
 39116                           tblptrh	equ	0xFF7
 39117                           tblptrl	equ	0xFF6
 39118                           tablat	equ	0xFF5
 39119                           prodh	equ	0xFF4
 39120                           prodl	equ	0xFF3
 39121                           intcon	equ	0xFF2
 39122                           intcon2	equ	0xFF1
 39123                           intcon3	equ	0xFF0
 39124                           indf0	equ	0xFEF
 39125                           postinc0	equ	0xFEE
 39126                           fsr0h	equ	0xFEA
 39127                           fsr0l	equ	0xFE9
 39128                           wreg	equ	0xFE8
 39129                           indf1	equ	0xFE7
 39130                           postdec1	equ	0xFE5
 39131                           plusw1	equ	0xFE3
 39132                           fsr1h	equ	0xFE2
 39133                           fsr1l	equ	0xFE1
 39134                           indf2	equ	0xFDF
 39135                           postinc2	equ	0xFDE
 39136                           postdec2	equ	0xFDD
 39137                           plusw2	equ	0xFDB
 39138                           fsr2h	equ	0xFDA
 39139                           fsr2l	equ	0xFD9
 39140                           status	equ	0xFD8
 39141                           
 39142                           	psect	rparam
 39143  0000                     tosu	equ	0xFFF
 39144                           tosh	equ	0xFFE
 39145                           tosl	equ	0xFFD
 39146                           pclath	equ	0xFFA
 39147                           tblptru	equ	0xFF8
 39148                           tblptrh	equ	0xFF7
 39149                           tblptrl	equ	0xFF6
 39150                           tablat	equ	0xFF5
 39151                           prodh	equ	0xFF4
 39152                           prodl	equ	0xFF3
 39153                           intcon	equ	0xFF2
 39154                           intcon2	equ	0xFF1
 39155                           intcon3	equ	0xFF0
 39156                           indf0	equ	0xFEF
 39157                           postinc0	equ	0xFEE
 39158                           fsr0h	equ	0xFEA
 39159                           fsr0l	equ	0xFE9
 39160                           wreg	equ	0xFE8
 39161                           indf1	equ	0xFE7
 39162                           postdec1	equ	0xFE5
 39163                           plusw1	equ	0xFE3
 39164                           fsr1h	equ	0xFE2
 39165                           fsr1l	equ	0xFE1
 39166                           indf2	equ	0xFDF
 39167                           postinc2	equ	0xFDE
 39168                           postdec2	equ	0xFDD
 39169                           plusw2	equ	0xFDB
 39170                           fsr2h	equ	0xFDA
 39171                           fsr2l	equ	0xFD9
 39172                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    770
    Data        38
    BSS         2153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     73     159
    BANK1           256      0     255
    BANK2           256      0     250
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_prepare
    _main->_bootloader_run
    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_program
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    _flash_is_busy->__flash_is_busy
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1247483
                                             93 COMRAM     2     2      0
                                             65 BANK0      8     8      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0    7310
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
               _jump_to_main_program
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   44543
               __system_encoder_init
                __system_timer0_init
                         _fat_format
                           _fat_init
                         _flash_init
                           _i2c_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   63681
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   14817
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21428
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14409
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  108165
                                             92 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   46869
                                             84 COMRAM     8     8      0
                                             45 BANK0      9     9      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   43860
                                             84 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5460
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  387100
                                             61 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   80638
                                             92 COMRAM     1     1      0
                                             57 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   43599
                                             84 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   34800
                                             62 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2866
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   16783
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  303149
                                             85 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    2875
                                             19 COMRAM     1     1      0
               _i2c_eeprom_writeByte
               _jump_to_main_program
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    2807
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  299628
                                             82 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (3) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39116
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   38895
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68995
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   68818
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21685
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   3     1      2   82238
                                             79 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   82039
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  108829
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  108586
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   16406
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   21951
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   22575
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21571
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8349
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8350
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _jump_to_main_program
         _reboot
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_set_configuration
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
       __parse_file_modify
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_truncate
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _jump_to_main_program
       _reboot
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_is_busy
       __flash_is_busy
         __flash_get_status
           _spi_tx_rx
         __flash_wakeup
           _spi_tx
       _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_format
       __get_data
       __get_fat
       __get_fbr
       __get_mbr
       __get_root
       _flash_page_write
         __flash_compare_page_to_buffer
           __flash_get_status
             _spi_tx_rx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_tx
         __flash_write_page_from_buffer
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_tx
         __flash_write_to_buffer
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_tx_tx
         _spi_set_configuration
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _jump_to_main_program
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9F       5       99.4%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     337      31        0.0%
DATA                 0      0     937       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Aug 30 23:50:34 2018

                          __end_of_fat_read_from_file 211A  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 7992  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7966  
                                 __system_timer0_init 7BD0  
                                                  _os 0060  
                                       _USBDeviceInit 394E  
                                  _USBCheckHIDRequest 4826  
                __bootloader_verify_file@return_value 00E3  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                                 __end_of_system_init 686C  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 50C6  
                                                 l210 5B4C  
                                                 l220 448A  
                                                 l141 39BC  
                                                 l214 5E50  
                                                 l310 56EC  
                                                 l150 3246  
                                                 l143 39F8  
                                                 l303 76FE  
                                                 l151 323C  
                                                 l320 6CEE  
                                                 l208 5B32  
                                                 l224 450C  
                                                 l304 76FC  
                                                 l152 323A  
                                                 l241 4EEA  
                                                 l233 4E46  
                                                 l161 32C2  
                                                 l242 4EB4  
                                                 l330 4FAC  
                                                 l322 6D38  
                                                 l235 4E50  
                                                 l331 4F72  
                                                 l251 3EEA  
                                                 l411 4874  
                                                 l219 44E2  
                                                 l139 3994  
                                                 l171 3352  
                                                 l163 32D8  
                                                 l155 3262  
                                                 l252 3ED0  
                                                 l412 4842  
                                                 l260 478E  
                                                 l164 32E4  
                                                 l156 3272  
                                                 l237 4EAC  
                                                 l333 4F92  
                                                 l309 56F2  
                                                 l173 3376  
                                                 l165 330C  
                                                 l157 327A  
                                                 l238 4E76  
                                                 l422 4896  
                                                 l414 4886  
                         __end_of_USBStdGetDscHandler 3BD6  
                                                 l262 4802  
                                                 l350 46A2  
                                                 l166 3318  
                                                 l158 3290  
                                                 l183 4376  
                                                 l191 40AC  
                                                 l423 48AE  
                                                 l415 4860  
                                                 l271 3AC2  
                                                 l343 4700  
                                                 l175 3392  
                                                 l159 329C  
                                                 l328 4F2A  
                                                 l248 3E74  
                                                 l424 48BA  
                                                 l360 17D8  
                                                 l272 3B50  
                                                 l352 46A8  
                                                 l344 4672  
                                                 l168 332A  
                                                 l185 43A0  
                                                 l329 4F30  
                                                 l249 3E52  
                                                 l521 424A  
                                                 l425 48D2  
                                                 l361 17DE  
                                                 l281 5782  
                                                 l353 46C6  
                                                 l610 6BF0  
                                                 l178 75F8  
                                                 l418 48DE  
                                                 l530 5156  
                                                 l274 3B58  
                                                 l282 5710  
                                                 l354 46E2  
                                                 l346 467C  
                                                 l187 441E  
                                                 l603 6BF8  
                                                 l179 7606  
                                                 l371 18FE  
                                                 l363 184A  
                                                 l275 3BAE  
                                                 l347 4682  
                                                 l620 04BE  
                                                 l604 6BBC  
                                                 l372 191A  
                                                 l268 3BBE  
                                                 l348 4688  
                                                 l621 04C8  
                                                 l381 1A12  
                                                 l365 1892  
                                                 l277 3BB6  
                                                 l269 3AAE  
                                                 l285 5798  
                                                 l349 469C  
                                                 l710 4918  
                                                 l702 1742  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6BD8  
                                                 l518 4252  
                                                 l534 51BC  
                                                 l374 1980  
                                                 l286 5722  
                                                 l703 175A  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 41C6  
                                                 l375 198C  
                                                 l367 18B4  
                                                 l287 5728  
                                                 l295 7462  
                                                 l712 492E  
                                                 l704 1772  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6BE4  
                                                 l800 6210  
                                                 l376 1A06  
                                                 l288 5746  
                                                 l296 7460  
                                                 l721 49BA  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6BEA  
                                                 l561 1DEA  
                                                 l529 51F2  
                                                 l369 1934  
                                                 l722 49A4  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1ED6  
                                                 l562 1DD4  
                                                 l546 51C4  
                                                 l810 6202  
                                                 l715 495E  
                                                 l651 07CC  
                                                 l571 1E06  
                                                 l563 1DA8  
                                                 l555 1CA8  
                                                 l379 19C0  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1DB0  
                                                 l804 61DE  
                                                 l900 37A0  
                                                 l661 5D10  
                                                 l741 4286  
                                                 l733 49CC  
                                                 l645 0784  
                                                 l573 1E18  
                                                 l805 61E6  
                                                 l750 42BA  
                                                 l718 496A  
                                                 l670 2B7C  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1DC8  
                                                 l806 61EE  
                                                 l910 6E40  
                                                 l751 42C6  
                                                 l719 4984  
                                                 l671 2B86  
                                                 l575 1E3A  
                                                 l559 1CC8  
                                                 l752 42D8  
                                                 l680 2CB2  
                                                 l672 2B9A  
                                                 l648 07CE  
                                                 l592 3FAA  
                                                 l576 1E42  
                                                 l920 71F0  
                                                 l808 61F8  
                                                 l912 6E48  
                                                 l753 42E4  
                                                 l737 49DC  
                                                 l665 2CC8  
                                                 l649 07A8  
                                                 l577 1E66  
                                                 l921 71B6  
                                                 l754 42F6  
                                                 l674 2BE4  
                                                 l666 2B1C  
                                                 l690 15A8  
                                                 l586 1EB8  
                                                 l659 5CFA  
                                                 l747 4338  
                                                 l755 432C  
                                                 l675 2C0C  
                                                 l691 15B4  
                                                 l923 71C0  
                                                 l907 6E1A  
                                                 l748 42B2  
                                                 l668 2CEC  
                                                 l676 2C3A  
                                                 l684 178A  
                                                 l692 15D2  
                                                 l596 4042  
                                                 l764 70CE  
                                                 _BDT 000D00  
                                                 l677 2C4C  
                                                 l669 2B70  
                                                 l693 161C  
                                                 l685 1502  
                                                 l597 403C  
                                                 l589 1EC0  
                                                 l678 2C52  
                                                 l694 15F6  
                                                 l679 2C66  
                                                 l687 17AE  
                                                 l695 165E  
                                                 l599 4046  
                                                 l767 7104  
                                                 l927 71D2  
                                                 l960 57B8  
                                                 l696 165A  
                                                 l688 15A2  
                                                 l929 71DE  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1672  
                                                 l890 37B0  
                                                 l699 16DA  
                                                 l891 375C  
                                                 l892 37F4  
                                                 l893 3764  
                                                 l966 5826  
                                                 l894 376C  
                                                 l886 36C6  
                                                 l895 3774  
                                                 l896 377C  
                                                 l888 374E  
                                                 l897 3784  
                                                 l898 378C  
                                                 _LBA 0080  
                                                 _LUN 01E2  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 7B48  
                                   main@tx_start_addr 00F6  
                            __size_of__display_failed 02F6  
                                         _start_line1 8D88  
                                         _start_line2 8D77  
                                         _start_line3 8CF6  
                                         _start_line4 8E62  
                                  api_prepare@command 005D  
                                          _USBSuspend 7908  
                                  _internalFlash_read 770A  
                              __end_of_display_update 69B0  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 321A  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 00B0  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 4562  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00EE  
                            fat_create_file@root_slot 00B9  
                         __flash_write_to_buffer@data 0016  
                                                l1002 7CDC  
                                                l1201 6100  
                                                l1202 60E4  
                                                l2002 1B5C  
                                                l2010 1A78  
                                                l2011 1A88  
                                                l2003 1A3A  
                                                l2100 7A64  
                                                l2020 1ADC  
                                                l2012 1A98  
                                                l2021 1AE0  
                                                l2013 1AA8  
                                                l2005 1A3E  
                                                l2030 1B04  
                                                l2022 1AE4  
                                                l2014 1AB8  
                                                l2006 1A42  
                                                l2110 58F2  
                                                l2031 1B08  
                                                l2023 1AE8  
                                                l2015 1AC8  
                                                l2007 1A46  
                                                l1303 4B82  
                                                l1311 4B34  
                                                l1224 70A2  
                                                l2040 1B2C  
                                                l2032 1B0C  
                                                l2024 1AEC  
                                                l2016 1ACC  
                                                l2008 1A58  
                                                l1312 4B54  
                                                l1304 4ACE  
                                                l1225 7086  
                                                l2033 1B10  
                                                l2025 1AF0  
                                                l2017 1AD0  
                                                l2009 1A68  
                                                l1313 4B72  
                                                l1170 7D8A  
                                                l2050 1B50  
                                                l2042 1B30  
                                                l2034 1B14  
                                                l2026 1AF4  
                                                l2018 1AD4  
                                                l2106 58A2  
                                                l2051 1B54  
                                                l2043 1B34  
                                                l2035 1B18  
                                                l2027 1AF8  
                                                l2019 1AD8  
                                                l1307 4AE2  
                                                l2140 65E0  
                                                l1164 7DEA  
                                                l2300 0E10  
                                                l2060 700E  
                                                l2052 1B58  
                                                l2044 1B38  
                                                l2036 1B1C  
                                                l2028 1AFC  
                                                l1308 4AF6  
                                                l1149 7DF2  
                                                l2301 0ED4  
                                                l2061 7012  
                                                l2045 1B3C  
                                                l2037 1B20  
                                                l2029 1B00  
                                                l1309 4B0C  
                                                l1190 79F2  
                                                l1094 7B1A  
                                                l1158 7D7E  
                                                l2302 0E1A  
                                                l1510 53B8  
                                                l2062 7016  
                                                l2046 1B40  
                                                l2038 1B24  
                                                l1191 79F6  
                                                l1095 7B08  
                                                l2143 79A2  
                                                l2303 0E92  
                                                l1511 538E  
                                                l2063 701A  
                                                l2047 1B44  
                                                l2039 1B28  
                                                l2071 30C2  
                                                l1087 775E  
                                                l1176 7D76  
                                                l2160 00B4  
                                                l2304 0ECE  
                                                l2240 6DC8  
                                                l1432 7356  
                                                l1520 53F6  
                                                l2056 7022  
                                                l2064 701E  
                                                l2048 1B48  
                                                l2080 3146  
                                                l1088 7768  
                                                l2145 79AC  
                                                l2161 0202  
                                                l2241 6D9E  
                                                l1601 1062  
                                                l1521 53FC  
                                                l1513 5394  
                                                l2057 7006  
                                                l2049 1B4C  
                                                l2081 314A  
                                                l2073 30FA  
                                                l2138 65D0  
                                                l2402 773E  
                                                l2170 0426  
                                                l2162 0188  
                                                l2306 0EEA  
                                                l1442 5022  
                                                l1434 7362  
                                                l1610 10D4  
                                                l1602 1034  
                                                l1522 5402  
                                                l1514 539A  
                                                l2090 316E  
                                                l2082 314E  
                                                l1290 54A4  
                                                l1282 5454  
                                                l1195 73CC  
                                                l1187 79FC  
                                                l2147 79BA  
                                                l1531 3884  
                                                l1523 5434  
                                                l1515 53A0  
                                                l2059 700A  
                                                l2075 318A  
                                                l2091 3172  
                                                l2083 3152  
                                                l1196 73B0  
                                                l1188 79EE  
                                                l2260 4C64  
                                                l2172 0458  
                                                l2164 033E  
                                                l2244 6DAA  
                                                l1444 5046  
                                                l1532 3856  
                                                l1516 53A6  
                                                l2092 3176  
                                                l2084 3156  
                                                l2076 3136  
                                                l1292 54B4  
                                                l1284 546C  
                                                l1189 7A10  
                                                l2261 4C6E  
                                                l2165 0310  
                                                l1613 1152  
                                                l1605 10B2  
                                                l1517 53AC  
                                                l2093 317A  
                                                l2085 315A  
                                                l2077 313A  
                                                l2069 30B4  
                                                l2174 048A  
                                                l2158 003E  
                                                l2246 6DB6  
                                                l1446 506A  
                                                l1614 1124  
                                                l1606 1084  
                                                l1550 29EA  
                                                l1622 2D26  
                                                l1534 38D8  
                                                l1518 53B2  
                                                l2094 317E  
                                                l2086 315E  
                                                l2078 313E  
                                                l1278 54C4  
                                                l1286 547C  
                                                l2255 4C7A  
                                                l2167 039C  
                                                l1439 4FFC  
                                                l1543 2970  
                                                l1631 2E82  
                                                l1623 2CF8  
                                                l1535 38AA  
                                                l1519 540A  
                                                l2095 3182  
                                                l2087 3162  
                                                l2079 3142  
                                                l1279 5442  
                                                l1712 6472  
                                                l1704 6F68  
                                                l2520 3D84  
                                                l2256 4BB6  
                                                l2168 03C0  
                                                l2280 146E  
                                                l1640 359E  
                                                l1480 09D8  
                                                l1616 11E6  
                                                l1552 2AA4  
                                                l1544 2942  
                                                l1632 2E54  
                                                l1528 3830  
                                                l2096 3186  
                                                l2088 3166  
                                                l1288 548C  
                                                l1713 647C  
                                                l1705 6F72  
                                                l2513 3D6E  
                                                l2257 4C0C  
                                                l2281 14CA  
                                                l2249 6DBC  
                                                l1641 3570  
                                                l1617 11B8  
                                                l1609 1102  
                                                l1553 2A6C  
                                                l1625 2D7A  
                                                l1537 392C  
                                                l1529 3802  
                                                l1561 3C0A  
                                                l2097 3216  
                                                l2089 316A  
                                                l2522 3D92  
                                                l2514 3D2C  
                                                l2290 0CBA  
                                                l2274 12DA  
                                                l1482 0A84  
                                                l1546 29C4  
                                                l1626 2D4C  
                                                l1538 38FE  
                                                l1562 3BDC  
                                                l1715 64B4  
                                                l1731 730E  
                                                l2523 3DA4  
                                                l2267 5AC8  
                                                l2259 4C62  
                                                l2291 0D14  
                                                l2283 14EC  
                                                l2275 1334  
                                                l1643 35F2  
                                                l1555 2AF8  
                                                l1547 2996  
                                                l1740 6F1A  
                                                l1732 7318  
                                                l2612 6916  
                                                l2532 4C9C  
                                                l2524 3DB6  
                                                l2516 3D42  
                                                l2276 13AE  
                                                l1580 3468  
                                                l1644 35C4  
                                                l1484 0B30  
                                                l1476 0882  
                                                l1556 2ACA  
                                                l1628 2DCE  
                                                l1564 3C5E  
                          USBConfigureEndpoint@handle 0007  
                                                l1717 64D2  
                                                l2525 3DC4  
                                                l2517 3D58  
                                                l1821 7828  
                                                l1573 33CE  
                                                l1637 354A  
                                                l1549 2A18  
                                                l1629 2DA0  
                                                l1565 3C30  
                                                l1910 531C  
                                                l2606 7294  
                                                l2534 4D14  
                                                l2550 557E  
                                                l2526 3DD2  
                                                l2294 0F1E  
                                                l2278 140E  
                                                l3262 7244  
                                                l1582 34F4  
                                                l1574 33A0  
                                                l1646 366A  
                                                l1638 351C  
                                                l1478 092C  
                                                l2535 4CB8  
                                                l2551 554A  
                                                l2519 3DFA  
                                                l2295 0D26  
                                                l2279 1440  
                                                l3263 724E  
                                                l1583 34C6  
                                                l1647 363C  
                                                l3191 6B34  
                                                l1591 0FBE  
                                                l1567 3CB2  
                                                l2624 6320  
                                                l2536 4D4C  
                                                l2560 290A  
                                                l2552 5556  
                                                l2288 0BE2  
                                                l3272 74D6  
                                                l1576 3422  
                                                l3192 6B42  
                                                l1592 0F90  
                                                l1568 3C84  
                                                l1745 7BCC  
                                                l2537 4CD0  
                                                l2529 4C96  
                                                l1825 77F6  
                                                l2393 7A76  
                                                l2289 0C60  
                                                l3273 74E0  
                                                l1577 33F4  
                                                l2618 69EC  
                                                l2538 4CEC  
                                                l2546 5506  
                                                l2386 63A2  
                                                l2298 0D62  
                                                l3258 7224  
                                                l3442 748A  
                                                l2810 62C4  
                                                l1594 1190  
                                                l1739 6F10  
                                                l2571 5A06  
                                                l3259 721C  
                                                l1579 34A0  
                                                l2811 62D2  
                                                l3187 6B0C  
                                                l1860 65C0  
                                                l1916 5370  
                                                l2580 5C8E  
                                                l2548 5540  
                                                l3460 79D8  
                                                l2388 63AE  
                                                l3268 74BE  
                                                l3188 6B00  
                                                l1596 1012  
                                                l1588 0F6A  
                                                l2740 75C2  
                                                l1925 2F3E  
                                                l1933 6A24  
                                                l2581 5C22  
                                                l3461 79C8  
                                                l3269 74B6  
                                                l1597 0FE4  
                                                l1589 0F3C  
                                                l1694 71A0  
                                                l1790 6794  
                                                l1950 2170  
                                                l3454 6BA8  
                                                l1926 3076  
                                                l2558 2904  
                                                l1782 7154  
                                                l3446 5904  
                                                l2806 6290  
                                                l1686 641C  
                                                l1695 715E  
                                                l3455 6B6A  
                                                l1927 3018  
                                                l2583 5C3E  
                                                l2559 2932  
                                                l2807 6284  
                                                l1599 11B2  
                                                l1687 6448  
                                                l2744 4652  
                                                l1792 67F6  
                                                l1952 22EC  
                                                l3472 52AC  
                                                l1928 303A  
                                                l1936 6A3E  
                                                l2592 6004  
                                                l2584 5C5A  
                                                l2576 24F2  
                                                l3448 593E  
                                                l1697 7186  
                                                l2745 4566  
                                                l2761 61A0  
                                                l1953 220E  
                                                l3473 5206  
                                                l1881 60AA  
                                                l1929 3070  
                                                l1961 5DAE  
                                                l2593 5FAE  
                                                l2585 5C76  
                                                l3449 597C  
                                                l2737 75D4  
                                                l2770 5ED2  
                                                l1874 669C  
                                                l1858 655A  
                                                l1954 2264  
                                                l1946 2128  
                                                l1866 7B30  
                                                l3474 52A4  
                                                l1938 6A7C  
                                                l2594 6032  
                                                l2586 5C7C  
                                                l2738 75B0  
                                                l2755 6FFC  
                                                l2747 45C6  
                                                l1955 22AA  
                                                l2595 5FBC  
                                                l2587 5C82  
                                                l1971 2102  
                                                l2739 75E2  
                                                l2764 61D4  
                                                l1868 7B40  
                                                l2596 5FCA  
                                                l2588 5C88  
                                                l1972 1FF0  
                                                l2773 5F0E  
                                                l1949 2196  
                                                l2597 5FD8  
                                                l1973 2018  
                                                l1981 4D5E  
                                                l1878 6048  
                                                l2598 5FE6  
                                                l1974 20C0  
                                                l1966 1F42  
                                                l1990 4D82  
                                                l1982 4D62  
                                                l1959 5D7A  
                                                l2599 5FF4  
                                                l1991 4D86  
                                                l1983 4D66  
                                                l1968 1F7A  
                                                l1992 4D8A  
                                                l1984 4D6A  
                                                l1969 1F54  
                                                l1993 4D8E  
                                                l1985 4D6E  
                                                l1978 4DA6  
                                                l1994 4D92  
                                                l1986 4D72  
                                                l1995 4D96  
                                                l1987 4D76  
                                                l1979 4D5A  
                                                l1996 4D9A  
                                                l1988 4D7A  
                                                l1997 4D9E  
                                                l1989 4D7E  
                                                l1998 4DA2  
                                                l9842 485A  
                                                STR_1 8FF1  
                                                l9960 496A  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CE2  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D77  
                                      _bootloader_run 6D9A  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0099  
                                                u7010 4E9E  
                                                u6115 6488  
                                                u6205 6F26  
                                                u7030 4EDC  
                                                u6320 4272  
                                                u6225 64EE  
                                                u7017 4E94  
                                                u7050 6B8A  
                                                u8100 19A6  
                                                u6405 6F7E  
                                                u7037 4ED2  
                                                u7310 1714  
                                                u7400 6E6E  
                                                u7128 2BBE  
                                                u7320 1716  
                                                u7208 155C  
                                                u8200 062C  
                                                u6520 519E  
                                                u7057 6B80  
                                                u7129 2BD2  
                                                u7209 1570  
                                                u7410 6E7A  
                                                u6258 41E6  
                                                u7075 2B42  
                                                u6259 41F8  
                                                u9020 6912  
                                                u7420 6E86  
                                                u6700 49C8  
                                                u9100 6294  
                                                u7430 6E90  
                                                u8310 07D6  
                                                u6294 423C  
                                                u6278 420A  
                                                u6295 4236  
                                                u6279 421E  
                               ??_USBCtrlTrfTxService 0001  
                                                u7520 66A2  
                                                u7408 6E70  
                                                u6720 49D8  
                                                u6800 77F2  
                                                u7185 1528  
                                                u9050 69E8  
                                                u7418 6E7C  
                                                u6650 49A0  
                                                u7338 171C  
                                                u8218 064C  
                                                u9130 6B10  
                                                u7339 1730  
                                                u8219 0660  
                                                u7436 6E92  
                                                u7428 6E88  
                                                u7380 6E56  
                                                u7268 1628  
                                                u7269 163C  
                                                u8510 5DA2  
                                                u7390 6E62  
                                                u8270 074C  
                                                u6910 7228  
                                                _UCFG 000F39  
                                                u6840 65BC  
                                                u9080 631C  
                                                u6680 49B6  
                                                u8280 075E  
                                                u8168 052C  
                                                u6825 6580  
                                                u7705 6606  
                                                u8169 0540  
                                                u7490 7B44  
                                                u6850 5226  
                                                u8370 2F0E  
                                                u8530 5DDE  
                                                u8178 055C  
                                                u9314 4012  
                                                u9250 3F78  
                                                u7810 47BA  
                                                u9410 2670  
                                                u9330 2580  
                                                u8179 0570  
                                                u9315 400C  
                                                u7660 537C  
                                                u8380 2F3C  
                                                u7388 6E58  
                                                u6940 74C2  
                                                _UEP0 000F26  
                                                _UEP1 000F27  
                                                u6870 525E  
                                                u7670 5382  
                                                u7398 6E64  
                                                u6790 7824  
                                                u9238 3F46  
                                                u9430 26A0  
                                                u9350 25C4  
                                    ?_fat_create_file 0044  
                                                u7575 6ECC  
                                                u8375 2F04  
                                                u9239 3F5A  
                                                u6880 5294  
                                                u9264 3F8E  
                                                u6857 521C  
                                                u7585 6D66  
                                                u8705 7538  
                                                u9265 3F88  
                                                u9274 3FC0  
                                                u7850 3B1A  
                                                u9530 0940  
                                                u9450 26DA  
                                                u9370 2608  
                                                u9610 58A8  
                                                u6875 5258  
                                                u7595 6AAE  
                                                u9275 3FBA  
                                                _UEIE 000F37  
                                                u7860 3B4A  
                                                u9540 09EC  
                                                u6877 524E  
                                                u8750 4FE8  
                                                u9550 0A98  
                                                u9470 2708  
                                                u9390 2642  
                                                u6887 528A  
                                                u7880 3BA2  
                                                u8760 500E  
                                                u9640 58F8  
                                                u7857 3B10  
                                                u9298 3FE2  
                                                u8770 5032  
                                                u9490 2738  
                                                u9299 3FF4  
                                                u7867 3B40  
                                                u9900 24E2  
                                                u9740 4BDC  
                                                u9660 00A2  
                                                u8780 5056  
                                                u8925 672C  
                                                u7887 3B98  
                                                u9815 7C2E  
                                                u9760 4C38  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8945 7946  
                                                u9825 7782  
                                                u8881 30CC  
                                                u8795 66CE  
                                                u9835 6374  
                                                u9940 557C  
                                                u9860 63C8  
                                                u8990 7290  
                                                u9990 39B0  
                               _i2c_digipot_reset_off 7B6A  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6C1C  
              __end_of__fill_buffer_get_configuration 5C1E  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5B80  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 008E  
                                                _main 368C  
                                                _itoa 7466  
                          __end_of_fat_append_to_file 233A  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5440  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 58FC  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 122C  
                           _ExternalFlash_MediaDetect 7E22  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7D3A  
                               _display_get_character 7A16  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D54  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4744  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 0BC8  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0084  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3516  
                                      _hex_file_entry 01C4  
                              _bootloader_get_entries 7DC2  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 78D6  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 016C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6AEE  
                                               l10120 5206  
                                               l10032 71DE  
                                               l10028 71C0  
                                               l10224 4E50  
                                               l11212 2170  
                                               l10334 2CC2  
                                               l10256 6B6A  
                                               l10176 79C8  
                                               l11170 303A  
                                               l11270 5DA6  
                                               l12070 318A  
                                               l10536 60AA  
                                               l10466 7B28  
                                               l10626 5382  
                                               l10538 60AE  
                                               l11258 5D72  
                                               l12404 259C  
                              ?_i2c_digipot_backlight 0001  
                                               l10486 6640  
                                               l10590 52E6  
                                               l12086 7A64  
                                               l10584 52D2  
                                               l12432 2624  
                                               l13154 398C  
                                               l12418 25E0  
                                               l10748 4786  
                                               l14060 0E92  
                                               l12444 264A  
                                               l12612 63E6  
                             ?__fill_buffer_find_file 0044  
                                               l11590 1F54  
                                               l13182 39F0  
                                               l12470 26BC  
                                               l12454 2670  
                                               l12390 2558  
                                               l12456 2678  
                                               l12640 5874  
                                               l12482 26E2  
                                               l10980 05FC  
                                               l13292 1CC0  
                                               l13612 734E  
                                               l12556 0882  
                                               l12492 2708  
                                               l13438 4CE8  
                                               l12910 59FE  
                                               l12494 2710  
                                               l12832 639A  
                                               l14186 3322  
                                               l13618 735A  
                                               l11970 30C2  
                                               l12658 58C4  
                                               l12764 4C0C  
                                               l11964 30B4  
                                               l12838 63A6  
                                               l11978 30FA  
                                               l12984 554E  
                                               l13936 125A  
                                        spi_tx@length 0003  
                                               l14950 1C8C  
                                               l14960 625C  
                                               l14948 1B74  
                                               l14958 6228  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 5DEE  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 62E4  
                                               u10020 3A54  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10140 1CBC  
                                               u10160 1CF0  
                                               u10330 1E9A  
                                               u10411 7970  
                                               u11400 57E6  
                                               u10520 738E  
                                               u11510 4B6C  
                                     __end_of___llmod 6B54  
                                               u11290 3396  
                              __end_of_USBDeviceTasks 339A  
                                               u10395 72B6  
                                               u11380 57D0  
                                               u11480 4B1E  
                                               u10880 12AA  
                                               u10970 0C30  
                                               u11907 7178  
                                               u11917 718A  
                                               u11927 7194  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11897 7B0E  
                                     __end_of___lwdiv 7258  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 74EA  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00F1  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6D3E  
                                     ??_flash_is_busy 0014  
                                    __end_of_MSDTasks 1EF4  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5142  
                     __end_of_internalFlash_getBuffer 7D72  
                     __end_of_USBCtrlEPAllowDataStage 5B80  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 6DF4  
                       __end_of_MSDTransferTerminated 7106  
                                        _gblCBWLength 009D  
                 i2c_display_send_init_sequence@F6799 01F6  
                          __end_of__parse_file_delete 72AA  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 6366  
                          __end_of__parse_file_create 6946  
                              __end_of_ResetSenseData 6C7E  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 7E2E  
                          __end_of__parse_file_rename 6A1A  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0053  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 0055  
                                               pclath 000FFA  
                                     __end_of_ui_init 7CD2  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A1  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 77A8  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 52C6  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0055  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7AB6  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 2B1A  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 00BA  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 55A8  
                       fat_read_from_file@file_number 00B7  
                           __end_of__flash_get_status 7908  
                        fat_get_file_information@data 0037  
                  spi_set_configuration@configuration 0001  
               __end_of_ExternalFlash_MediaInitialize 7C7A  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7C60  
                                         _system_init 67FE  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0164  
                                        __end_of_main 37FC  
                                        __end_of_itoa 74A8  
                       __end_of_system_encoder_enable 7D1A  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 70B0  
                                        __end_of_utoa 59A0  
                                __end_of__normal_mode 6E4C  
                                    _timer_pseudo_isr 7740  
                            __parse_command_short@cmd 0014  
                                    __end_of_i2c_init 7D54  
                            __end_of__i2c_acknowledge 7D90  
                      __end_of__fill_buffer_find_file 5A42  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 66AC  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 7C92  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                api_prepare@outBuffer 00F0  
                                              ??_main 005E  
                                    __end_of__i2c_get 7D86  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00B4  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00E2  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00F8  
                            _fat_get_file_information 65C4  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7E22  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7E1E  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0120  
                               ??__bootloader_program 0055  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 752C  
                         ?_spi_get_external_tx_buffer 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7B00  
                              __flash_write_to_buffer 72FA  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 2550  
                                _start_from_byte_next 0095  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 7DF0  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7392  
                           fat_read_from_file@cluster 00D8  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0055  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                    __end_of__get_fat 705A  
                                    __end_of__get_fbr 1C9C  
                                    __end_of__get_mbr 4E26  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2CF2  
                                 _flash_pages_written 0166  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00B7  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5A42  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 7D2A  
                   __bootloader_program@page_to_write 00F3  
                                   _shortPacketStatus 00AF  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 63E4  
                        __end_of__flash_set_page_size 645E  
                                     _hexCharsToUint8 7C0E  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 66AC  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3026 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 009C  
                                           ??___lwmod 0005  
                                              _buffer 0340  
                                   _USBEnableEndpoint 75E8  
                       __bootloader_program@address32 00EC  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6B54  
                                  ?_fat_get_file_size 0030  
                                              _memset 79BE  
                                              clear_0 5602  
                                              clear_1 5616  
                                              clear_2 5628  
                                              clear_3 5634  
                                              clear_4 5640  
                                              clear_5 564C  
                           _ExternalFlash_SectorWrite 77DC  
                                   api_parse@inBuffer 00E8  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                                              _reboot 7E2E  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4ACC  
                                              _spi_tx 6FAC  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 78A4  
                                              _tx_buf 02F2  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 0055  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 79EA  
                        __end_of_jump_to_main_program 7660  
                               __end_of_fat_find_file 5386  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 6036  
                       __size_of__parse_command_short 009E  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8CCC  
                                 __end_of__i2c_open_1 7C92  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6CDE  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6C7E  
                                              tblptru 000FF8  
                                    __end_of_spi_init 75E8  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00FA  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 65C4  
                             __spi_external_rx_buffer 0200  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00FC  
                               __end_of_ui_get_status 7E06  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AE  
                          ??_APP_DeviceCustomHIDTasks 00F2  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0240  
                                   _SYSTEM_Initialize 71B2  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00DC  
                                          __accesstop 0060  
                             __end_of__initialization 5652  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7D7C  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00E2  
                         __end_of__parse_command_long 6036  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 671E  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 7106  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 7624  
                            _bootloader_get_file_size 7CF8  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7E30  
                                        __pidataBANK1 7BF0  
                                        __pidataBANK2 7DE0  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7DC2  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7DB8  
                           __get_available_root_entry 7B24  
                                 fat_rename_file@cntr 00D6  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 00B6  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 1500  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4FBA  
                                 _userInterfaceStatus 0098  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 425A  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7A16  
                       __size_of__display_programming 01D6  
                             __end_of_system_delay_ms 7B24  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 016A  
                      __end_of_failed_line3_startCode 8D1D  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 1EF4  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D42  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A3  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 7206  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 6150  
                                   __end_of__i2c_send 7E00  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5704  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 7DF0  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 003F  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 00BD  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 404C  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0057  
                        __end_of__sector_from_cluster 7D48  
                                    _mediaInformation 01DB  
                             __end_of_hexCharsToUint8 7C2A  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 58FC  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 715C  
                            __fill_buffer_get_display 54F4  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 4562  
               __end_of_APP_DeviceCustomHIDInitialize 77DC  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 77A8  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4BAC  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2550  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 0049  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 211A  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 7C7A  
                                    _USBCtrlEPService 5658  
                                             ?_ui_run 0001  
                                          _ep_data_in 0161  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00C1  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3516  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3F3A  
                                  _USBCheckStdRequest 4662  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 7C46  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4EF2  
                                   __end_of__get_data 7A68  
                                   __end_of__get_date 7DE0  
                                 _USBStdSetCfgHandler 4744  
                              fat_append_to_file@root 00C8  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 7DD6  
                                   __end_of__get_root 321A  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                          _done_line3 8DA9  
                                          _done_line4 8D99  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7CA8  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0168  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 63E4  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 7774  
                                  __get_first_cluster 6A84  
                                        __normal_mode 6DF4  
                          __end_of_APP_DeviceMSDTasks 7CE6  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 7422  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00E2  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 64D6  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 645E  
                                          __write_fat 756C  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 7DCC  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 4D58  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3F3A  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7258  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 76D2  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 62E4  
                                             __Lparam 0000  
                                  __parse_file_create 68DA  
                                _jump_to_main_program 7624  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4360  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                        ?_system_init 0001  
                                  __parse_file_modify 7E2A  
                                  __parse_file_rename 69B0  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 671E  
                                          _last_error 0096  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0300  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 6262  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 6AEE  
                                             ___lwdiv 7206  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 74A8  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 769A  
                                             __pcinit 55A8  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 0002  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 368C  
                                             __ptext1 4ACC  
                                     __display_failed 0F36  
                                             __ptext2 7D0A  
                                             __ptext3 7966  
                                             __ptext4 7B48  
                                             __ptext5 7B6A  
                                             __ptext6 7A90  
                                             __ptext7 5440  
                                             __ptext8 7740  
                                 ?__parse_file_modify 0001  
                                             __ptext9 67FE  
                                             _inPipes 0066  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 00E0  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A4  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005D  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7BF0  
                                ??__get_first_cluster 0032  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 425A  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7D2A  
                                             _msd_cbw 000D40  
                                     __display_verify 3BD6  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7D72  
                                             _ui_init 7CBE  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7CBE  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 6638  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 5204  
                                 _flash_partial_write 678E  
                                end_of_initialization 5652  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 70B0  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 293C  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 274E  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0090  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 404C  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 74EA  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                            fat_append_to_file@length 00C2  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00BF  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00B5  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7938  
                        __end_of__parse_file_truncate 7E2A  
                             _USBCtrlEPAllowDataStage 5AE2  
                                   __end_of_spi_tx_rx 5F16  
                                   __end_of_spi_tx_tx 61DC  
               __end_of__fill_buffer_get_file_details 68DA  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 686C  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7D9A  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 7D90  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4462  
                                             utoa@val 000A  
                                           _MSD_State 00A2  
                         __end_of__bootloader_program 0F36  
                               _system_encoder_enable 7D0A  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005D  
                          _USBStatusStageEnabledFlag1 00A7  
                          _USBStatusStageEnabledFlag2 00A6  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 734A  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 7D3A  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00BB  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 00BC  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0280  
                                  _BothEP0OutUOWNsSet 00AA  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 715C  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0340  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 705A  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B3  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CCD  
                                       _checked_line3 8E73  
                                       _checked_line4 8D66  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                        __end_of_USBTransferOnePacket 4462  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 5CBC  
               __end_of_internalFlash_pageFromAddress 7C46  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7C2A  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 654E  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 122C  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 5F16  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00E4  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00BA  
                               __end_of_USBDeviceInit 3A9C  
               __end_of_USBIncrement1msInternalTimers 7BAE  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7B8C  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 60C4  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3D02  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 4154  
                                 _i2c_eeprom_readByte 72AA  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 00F0  
                  __fill_buffer_read_file@data_length 00E6  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CE2  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6BBA  
                                     _MSDRetryAttempt 009E  
                                      __end_of_memset 79EA  
                                      __end_of_reboot 7E30  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00AC  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 4BAC  
                                      __end_of_spi_tx 7004  
               __get_available_root_entry@file_number 0037  
                                 __end_of__ui_encoder 54F4  
                           __flash_set_page_size@size 0018  
                                 start_initialization 55A8  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 3E22  
                   __end_of__get_available_root_entry 7B48  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 008A  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5E82  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A38  
                                 __flash_partial_read 64D6  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 009B  
                                      _hexCharToUint8 7992  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 5142  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 78A4  
                        __end_of__display_programming 2EC8  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 5704  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 7660  
                                           __i2c_read 60C4  
                                           __i2c_send 7DF8  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7DE8  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7E1E  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E38  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 0092  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 6638  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D30  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 3A9C  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FE  
                                         __pdataBANK1 01E2  
                                         __pdataBANK2 02F2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 006E  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7AB6  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 0001  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 7DF8  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 73DA  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B4  
                            ??__fill_buffer_read_file 0059  
                      __end_of_USBStdGetStatusHandler 57AE  
                         api_parse@receivedDataLength 00EA  
                   __end_of__bootloader_check_address 4C86  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7966  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7938  
                          fat_append_to_file@position 00C4  
                         fat_create_file@next_cluster 00B5  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 7840  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B5  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 49EA  
             __bootloader_program@address_within_page 00E6  
                              __end_of_hexCharToUint8 79BE  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 7BAE  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 678E  
                                __parse_file_truncate 7E26  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7A40  
                                           __get_date 7DD6  
                    __bootloader_program@return_value 00E8  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 7DCC  
                                           __get_root 3084  
                                 __end_of__write_root 6EFC  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 770A  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7B00  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 7422  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 00B5  
                                           __read_fat 73DA  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D42  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 7840  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7DA4  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7D9A  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5858  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 4C86  
                           fat_create_file@root_entry 00BE  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 49EA  
                                  _APP_DeviceMSDTasks 7CD2  
                                       __pmediumconst 8CCC  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 6CDE  
                                           __ptext101 3E22  
                                           __ptext110 1500  
                                           __ptext102 507E  
                                           __ptext111 7E1E  
                                           __ptext103 4EF2  
                                           __ptext200 7BAE  
                                           __ptext120 7840  
                                           __ptext112 77DC  
                                           __ptext104 4E26  
                                           __ptext201 715C  
                                           __ptext121 5CBC  
                                           __ptext113 7106  
                                           __ptext105 7CD2  
                                           __ptext202 6FAC  
                                           __ptext130 66AC  
                                           __ptext122 7D90  
                                           __ptext114 2B1A  
                                           __ptext106 1C9C  
                                           __ptext203 78D6  
                                           __ptext131 49EA  
                                           __ptext123 7CE6  
                                           __ptext115 4908  
                                           __ptext107 3F3A  
                                           __ptext204 5E82  
                                           __ptext140 7DA4  
                                           __ptext132 7E00  
                                           __ptext124 7C60  
                                           __ptext116 425A  
                                           __ptext108 6BBA  
                                           __ptext205 4360  
                                           __ptext141 7C92  
                                           __ptext133 686C  
                                           __ptext125 7E22  
                                           __ptext117 404C  
                                           __ptext109 049C  
                                           __ptext206 0000  
                                           __ptext150 4C86  
                                           __ptext142 7E0C  
                                           __ptext134 54F4  
                                           __ptext126 57AE  
                                           __ptext118 6C1C  
                                           __ptext151 5C1E  
                                           __ptext143 7E12  
                                           __ptext135 7A16  
                                           __ptext127 3D02  
                                           __ptext119 780E  
                                           __ptext160 7DF0  
                                           __ptext152 7B00  
                                           __ptext144 7DAE  
                                           __ptext136 5B80  
                                           __ptext128 233A  
                                           __ptext161 7DF8  
                                           __ptext153 7E2E  
                                           __ptext145 7DB8  
                                           __ptext137 274E  
                                           __ptext129 1EF4  
                                           __ptext170 6D3E  
                                           __ptext162 5FA8  
                                           __ptext154 7624  
                                           __ptext146 7CF8  
                                           __ptext138 7D9A  
                                           __ptext171 68DA  
                                           __ptext163 7E26  
                                           __ptext155 752C  
                                           __ptext147 7E18  
                                           __ptext139 7E06  
                                           __ptext180 65C4  
                                           __ptext172 2EC8  
                                           __ptext164 69B0  
                                           __ptext156 79EA  
                                           __ptext148 7DC2  
                                           __ptext181 654E  
                                           __ptext173 6B54  
                                           __ptext165 5D58  
                                           __ptext157 7392  
                                           __ptext149 59A0  
                                           __ptext190 645E  
                                           __ptext182 6EA4  
                                           __ptext174 6036  
                                           __ptext166 7E2A  
                                           __ptext158 6E4C  
                                           __ptext191 7872  
                                           __ptext183 756C  
                                           __ptext175 52C6  
                                           __ptext167 7258  
                                           __ptext159 7DE8  
                                           __ptext192 7DCC  
                                           __ptext184 678E  
                                           __ptext176 5204  
                                           __ptext168 6A1A  
                                           __ptext193 7DD6  
                                           __ptext185 7CA8  
                                           __ptext177 7B24  
                                           __ptext169 6A84  
                                           __ptext194 7D3A  
                                           __ptext186 72FA  
                                           __ptext178 62E4  
                                           __ptext195 73DA  
                                           __ptext187 6150  
                                           __ptext179 211A  
                                           __ptext196 6638  
                                           __ptext188 6EFC  
                                           __ptext197 78A4  
                                           __ptext189 6F54  
                                           __ptext198 4562  
                                           __ptext199 64D6  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 769A  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 5440  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3D02  
                             __parse_file_delete@data 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4360  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 0100  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 4662  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 5C1E  
                        ??_spi_get_external_rx_buffer 0003  
                              fat_read_from_file@data 0047  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 7BD0  
                                       _fat_find_file 52C6  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00B8  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 085A  
                                   __display_itoa_u16 4FBA  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6D3E  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D30  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D66  
                                         _ep_data_out 015E  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 7DAE  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 7B8C  
                       _bootloader_get_rec_dataLength 7DA4  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 009F  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 734A  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 293C  
                    __end_of_bootloader_get_file_size 7D0A  
                                         _file_buffer 02C0  
                                     _config_internal 015B  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 7E00  
                                     _config_external 0158  
                                      __display_start 37FC  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 7A40  
                                         _file_number 00FE  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 4908  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 00E7  
                          __end_of_internalFlash_read 7740  
                                          ?_api_parse 00E8  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1C9C  
                          _USBDeferINDataStagePackets 00A5  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6A1A  
                                _active_configuration 0094  
                           ?__ic2_display_set_address 0001  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 5DEE  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7872  
                                           _spi_tx_rx 5E82  
                                           _spi_tx_tx 6150  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0088  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 2CF2  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 507E  
                           __end_of__display_itoa_u32 0BC8  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AD  
                   __end_of_ExternalFlash_MediaDetect 7E26  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 55A8  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 6EA4  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7392  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 7E18  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 2B1A  
                             __end_of_USBStallHandler 7466  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 752C  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 394E  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 55BC  
                                           copy_data1 55DC  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00B7  
                         __end_of_USBStdSetCfgHandler 4826  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 274E  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 7D48  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A0  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7D7C  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 2EC8  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0043  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00DA  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 00B5  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7C60  
                                      _TransferLength 0086  
                                _bootloader_extension 8FC7  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 5204  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 780E  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8DB9  
                                  __end_of_done_line4 8DA9  
                                      __i2c_wait_idle 6E4C  
                                     _MSDWriteHandler 1500  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 009A  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D1D  
                                         _found_line3 8E98  
                                         _found_line4 8D54  
                                            __get_fat 7004  
                                            __get_fbr 1A38  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 4D58  
                                  __end_of__write_fat 75AC  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 7CF8  
                          _ExternalFlash_CapacityRead 7CE6  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 59A0  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 036E  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 7D1A  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 339A  
               __end_of_bootloader_get_rec_recordType 7E0C  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7E06  
                                            __ptext10 7CBE  
                                            __ptext11 7D48  
                                            __ptext20 3084  
                                            __ptext12 7C7A  
                                            __ptext21 4D58  
                                            __ptext13 7C46  
                                            __ptext30 705A  
                                            __ptext22 1A38  
                                            __ptext14 75AC  
                                            __ptext31 7ADC  
                                            __ptext23 7004  
                                            __ptext15 769A  
                                            __ptext40 6AEE  
                                            __ptext32 7AB6  
                                            __ptext24 7A40  
                                            __ptext16 63E4  
                                            __ptext41 6262  
                                            __ptext33 5386  
                                            __ptext25 7BD0  
                                            __ptext17 7D1A  
                                            __ptext50 6D9A  
                                            __ptext42 3516  
                                            __ptext34 3BD6  
                                            __ptext26 7660  
                                            __ptext18 5858  
                                            __ptext51 122C  
                                            __ptext43 734A  
                                            __ptext35 37FC  
                                            __ptext27 7D54  
                                            __ptext19 2550  
                                            __ptext60 7C2A  
                                            __ptext52 0BC8  
                                            __ptext44 339A  
                                            __ptext36 2CF2  
                                            __ptext28 7D5E  
                                            __ptext61 7D68  
                                            __ptext53 0020  
                                            __ptext45 4FBA  
                                            __ptext37 293C  
                                            __ptext29 6946  
                                            __ptext70 60C4  
                                            __ptext62 7774  
                                            __ptext54 7C0E  
                                            __ptext46 7466  
                                            __ptext38 0F36  
                                            __ptext71 7D72  
                                            __ptext63 7A68  
                                            __ptext55 671E  
                                            __ptext47 58FC  
                                            __ptext39 085A  
                                            __ptext80 5658  
                                            __ptext72 7D7C  
                                            __ptext64 6C7E  
                                            __ptext56 7992  
                                            __ptext48 74A8  
                                            __ptext81 5F16  
                                            __ptext73 7D86  
                                            __ptext65 7938  
                                            __ptext57 6366  
                                            __ptext49 7206  
                                            __ptext90 61DC  
                                            __ptext82 4462  
                                            __ptext74 321A  
                                            __ptext66 4BAC  
                                            __ptext58 74EA  
                                            __ptext91 5142  
                                            __ptext83 5AE2  
                                            __ptext75 76D2  
                                            __ptext67 5A42  
                                            __ptext59 770A  
                                            __ptext92 4826  
                                            __ptext84 4662  
                                            __ptext76 7908  
                                            __ptext68 6DF4  
                                            __ptext93 71B2  
                                            __ptext85 4744  
                                            __ptext77 7422  
                                            __ptext69 72AA  
                                            __ptext94 70B0  
                                            __ptext86 79BE  
                                            __ptext78 7B8C  
                                            __ptext95 7D2A  
                                            __ptext87 5704  
                                            __ptext79 394E  
                                            __ptext96 4154  
                                            __ptext88 3A9C  
                                            __ptext97 77A8  
                                            __ptext89 17B4  
                                            __ptext98 75E8  
                                            __ptext99 5DEE  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6C1C  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6BBA  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 5FA8  
                   __end_of_failed_line3_addressRange 8CF6  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 0058  
                      __size_of__bootloader_find_file 00A0  
                  __end_of__flash_copy_page_to_buffer 6FAC  
                          __flash_copy_page_to_buffer 6F54  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5858  
                       __end_of__bootloader_find_file 5AE2  
                        __end_of_i2c_digipot_reset_on 7B6A  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 71B2  
                      __end_of_USBCtrlTrfSetupHandler 5FA8  
                                       __size_of_main 0170  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6A84  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 233A  
                         __end_of_flash_partial_write 67FE  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6D9A  
                    __size_of__bootloader_verify_file 02D4  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 7E12  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7E0C  
                                 _USBCtrlTrfInHandler 4EF2  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                                         ??_api_parse 0056  
                              __end_of__i2c_wait_idle 6EA4  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 75AC  
                                _USBCtrlTrfOutHandler 6CDE  
                           _USBCtrlEPAllowStatusStage 507E  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 7D68  
                                ?__parse_command_long 0053  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 368C  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 0014  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A8  
                  __end_of_spi_get_external_rx_buffer 7D68  
                          _spi_get_external_rx_buffer 7D5E  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4ACC  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7A90  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7A68  
                             _internalFlash_erasePage 7774  
                                   __write_fat@offset 002F  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 7D5E  
                          _spi_get_external_tx_buffer 7D54  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5D58  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5CBC  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8D99  
                                 __end_of_start_line2 8D88  
                                 __end_of_start_line3 8D0A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7CA8  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7D86  
                              bootloader_run@timeslot 005D  
                             __end_of_fat_create_file 3084  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6262  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 61DC  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 780E  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 6F54  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6EFC  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 7872  
                        fat_read_from_file@start_byte 003F  
                                     _display_content 0174  
                          __end_of_flash_partial_read 78D6  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 17B4  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7E18  
                         _bootloader_get_rec_checksum 7E12  
                             __size_of_MSDReadHandler 01D8  
                       __size_of_jump_to_main_program 003C  
                                       ??_system_init 0030  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 5386  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 3E22  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 76D2  
                               ??__parse_command_long 0055  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7ADC  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 17B4  
                        __fill_buffer_read_file@start 00EA  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4E26  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00EE  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0170  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7A90  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7DB8  
                          _bootloader_get_rec_address 7DAE  
                               _USBAlternateInterface 01E0  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 72FA  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 008C  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5D58  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00AB  
                                      _display_update 6946  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D0A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4908  
                          fat_read_from_file@position 00DE  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7ADC  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0172  
                             _internalFlash_writePage 6366  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4154  
                        _USBStatusStageTimeoutCounter 00A9  
                     ??_ExternalFlash_MediaInitialize 0003  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                         __end_of__flash_partial_read 654E  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 756C  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 0097  
                                         _USBInHandle 016E  
                            _APP_DeviceCustomHIDTasks 57AE  
