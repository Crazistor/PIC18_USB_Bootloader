

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Oct 05 21:50:02 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=2
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=2
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1,group=2
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1,group=2
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	text222,global,reloc=2,class=CODE,delta=1
   244                           	psect	text223,global,reloc=2,class=CODE,delta=1
   245                           	psect	text224,global,reloc=2,class=CODE,delta=1
   246                           	psect	text225,global,reloc=2,class=CODE,delta=1
   247                           	psect	text226,global,reloc=2,class=CODE,delta=1
   248                           	psect	text227,global,reloc=2,class=CODE,delta=1
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	text229,global,reloc=2,class=CODE,delta=1
   251                           	psect	text230,global,reloc=2,class=CODE,delta=1
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	text232,global,reloc=2,class=CODE,delta=1
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	text235,global,reloc=2,class=CODE,delta=1
   257                           	psect	text236,global,reloc=2,class=CODE,delta=1
   258                           	psect	text237,global,reloc=2,class=CODE,delta=1
   259                           	psect	text238,global,reloc=2,class=CODE,delta=1
   260                           	psect	text239,global,reloc=2,class=CODE,delta=1
   261                           	psect	text240,global,reloc=2,class=CODE,delta=1
   262                           	psect	text241,global,reloc=2,class=CODE,delta=1
   263                           	psect	text242,global,reloc=2,class=CODE,delta=1
   264                           	psect	text243,global,reloc=2,class=CODE,delta=1
   265                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   266                           	psect	text244,global,reloc=2,class=CODE,delta=1
   267                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   268                           	dabs	1,0x600,512,_msd_buffer
   269                           	dabs	1,0xD00,48,_BDT
   270                           	dabs	1,0xD40,31,_msd_cbw
   271                           	dabs	1,0xD80,13,_msd_csw
   272                           	dabs	1,0xD38,8,_CtrlTrfData
   273                           	dabs	1,0xD30,8,_SetupPkt
   274  0000                     
   275                           ; Version 2.00
   276                           ; Generated 27/05/2018 GMT
   277                           ; 
   278                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   279                           ; All rights reserved.
   280                           ; 
   281                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   282                           ; 
   283                           ; Redistribution and use in source and binary forms, with or without modification, are
   284                           ; permitted provided that the following conditions are met:
   285                           ; 
   286                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   287                           ;        conditions and the following disclaimer.
   288                           ; 
   289                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   290                           ;        of conditions and the following disclaimer in the documentation and/or other
   291                           ;        materials provided with the distribution.
   292                           ; 
   293                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   294                           ;        software without specific prior written permission.
   295                           ; 
   296                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   297                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   298                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   299                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   300                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   301                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   302                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   303                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   304                           ; 
   305                           ; 
   306                           ; Code-generator required, PIC18F47J53 Definitions
   307                           ; 
   308                           ; SFR Addresses
   309  0000                     
   310                           	psect	intcode
   311  000008  EF04 F060          	goto	49160	;# 
   312                           
   313                           	psect	intcodelo
   314  000018  EF0C F060          	goto	49176	; ;# 
   315  0000                     
   316                           	psect	idataBANK0
   317  00A2DE                     __pidataBANK0:
   318                           	opt stack 0
   319                           
   320                           ;initializer for _file_number
   321  00A2DE  FF                 	db	255
   322                           
   323                           	psect	idataBANK1
   324  009EB4                     __pidataBANK1:
   325                           	opt stack 0
   326                           
   327                           ;initializer for _LUN
   328  009EB4  9C                 	db	low _ExternalFlash_MediaInitialize
   329  009EB5  A0                 	db	high _ExternalFlash_MediaInitialize
   330  009EB6  82                 	db	low _ExternalFlash_CapacityRead
   331  009EB7  A1                 	db	high _ExternalFlash_CapacityRead
   332  009EB8  4A                 	db	low _ExternalFlash_SectorSizeRead
   333  009EB9  A2                 	db	high _ExternalFlash_SectorSizeRead
   334  009EBA  DA                 	db	low _ExternalFlash_MediaDetect
   335  009EBB  A2                 	db	high _ExternalFlash_MediaDetect
   336  009EBC  74                 	db	low _ExternalFlash_SectorRead
   337  009EBD  9B                 	db	high _ExternalFlash_SectorRead
   338  009EBE  D6                 	db	low _ExternalFlash_WriteProtectStateGet
   339  009EBF  A2                 	db	high _ExternalFlash_WriteProtectStateGet
   340  009EC0  42                 	db	low _ExternalFlash_SectorWrite
   341  009EC1  9B                 	db	high _ExternalFlash_SectorWrite
   342  009EC2  00                 	db	0
   343  009EC3  00                 	db	0
   344  009EC4  00                 	db	0
   345  009EC5  00                 	db	0
   346  009EC6  00                 	db	0
   347  009EC7  00                 	db	0
   348                           
   349                           ;initializer for i2c_display_send_init_sequence@F6812
   350  009EC8  3A                 	db	58
   351  009EC9  1E                 	db	30
   352  009ECA  39                 	db	57
   353  009ECB  0C                 	db	12
   354  009ECC  74                 	db	116
   355  009ECD  5C                 	db	92
   356  009ECE  6D                 	db	109
   357  009ECF  0C                 	db	12
   358  009ED0  01                 	db	1
   359                           
   360                           ;initializer for _tx_buf
   361  009ED1  01                 	db	1
   362  009ED2  02                 	db	2
   363  009ED3  03                 	db	3
   364  009ED4  04                 	db	4
   365  009ED5  05                 	db	5
   366  009ED6  06                 	db	6
   367  009ED7  07                 	db	7
   368  009ED8  08                 	db	8
   369                           
   370                           	psect	mediumconst
   371  00BC6C                     __pmediumconst:
   372                           	opt stack 0
   373  00BC6C  00                 	db	0
   374  00BC6D                     _checked_line2:
   375                           	opt stack 0
   376  00BC6D  46                 	db	70
   377  00BC6E  69                 	db	105
   378  00BC6F  6C                 	db	108
   379  00BC70  65                 	db	101
   380  00BC71  20                 	db	32
   381  00BC72  63                 	db	99
   382  00BC73  68                 	db	104
   383  00BC74  65                 	db	101
   384  00BC75  63                 	db	99
   385  00BC76  6B                 	db	107
   386  00BC77  20                 	db	32
   387  00BC78  63                 	db	99
   388  00BC79  6F                 	db	111
   389  00BC7A  6D                 	db	109
   390  00BC7B  70                 	db	112
   391  00BC7C  6C                 	db	108
   392  00BC7D  65                 	db	101
   393  00BC7E  74                 	db	116
   394  00BC7F  65                 	db	101
   395  00BC80  64                 	db	100
   396  00BC81  00                 	db	0
   397  00BC82                     __end_of_checked_line2:
   398                           	opt stack 0
   399  00BC82                     _failed_line3_addressRange:
   400                           	opt stack 0
   401  00BC82  41                 	db	65
   402  00BC83  64                 	db	100
   403  00BC84  64                 	db	100
   404  00BC85  72                 	db	114
   405  00BC86  2E                 	db	46
   406  00BC87  20                 	db	32
   407  00BC88  6F                 	db	111
   408  00BC89  75                 	db	117
   409  00BC8A  74                 	db	116
   410  00BC8B  73                 	db	115
   411  00BC8C  69                 	db	105
   412  00BC8D  64                 	db	100
   413  00BC8E  65                 	db	101
   414  00BC8F  20                 	db	32
   415  00BC90  72                 	db	114
   416  00BC91  61                 	db	97
   417  00BC92  6E                 	db	110
   418  00BC93  67                 	db	103
   419  00BC94  65                 	db	101
   420  00BC95  00                 	db	0
   421  00BC96                     __end_of_failed_line3_addressRange:
   422                           	opt stack 0
   423  00BC96                     _search_line3:
   424                           	opt stack 0
   425  00BC96  46                 	db	70
   426  00BC97  49                 	db	73
   427  00BC98  52                 	db	82
   428  00BC99  4D                 	db	77
   429  00BC9A  57                 	db	87
   430  00BC9B  41                 	db	65
   431  00BC9C  52                 	db	82
   432  00BC9D  45                 	db	69
   433  00BC9E  2E                 	db	46
   434  00BC9F  48                 	db	72
   435  00BCA0  45                 	db	69
   436  00BCA1  58                 	db	88
   437  00BCA2  20                 	db	32
   438  00BCA3  6F                 	db	111
   439  00BCA4  6E                 	db	110
   440  00BCA5  20                 	db	32
   441  00BCA6  55                 	db	85
   442  00BCA7  53                 	db	83
   443  00BCA8  42                 	db	66
   444  00BCA9  00                 	db	0
   445  00BCAA                     __end_of_search_line3:
   446                           	opt stack 0
   447  00BCAA                     _failed_line3_startCode:
   448                           	opt stack 0
   449  00BCAA  4D                 	db	77
   450  00BCAB  69                 	db	105
   451  00BCAC  73                 	db	115
   452  00BCAD  73                 	db	115
   453  00BCAE  69                 	db	105
   454  00BCAF  6E                 	db	110
   455  00BCB0  67                 	db	103
   456  00BCB1  20                 	db	32
   457  00BCB2  73                 	db	115
   458  00BCB3  74                 	db	116
   459  00BCB4  61                 	db	97
   460  00BCB5  72                 	db	114
   461  00BCB6  74                 	db	116
   462  00BCB7  20                 	db	32
   463  00BCB8  63                 	db	99
   464  00BCB9  6F                 	db	111
   465  00BCBA  64                 	db	100
   466  00BCBB  65                 	db	101
   467  00BCBC  00                 	db	0
   468  00BCBD                     __end_of_failed_line3_startCode:
   469                           	opt stack 0
   470  00BCBD                     _found_line2:
   471                           	opt stack 0
   472  00BCBD  46                 	db	70
   473  00BCBE  49                 	db	73
   474  00BCBF  52                 	db	82
   475  00BCC0  4D                 	db	77
   476  00BCC1  57                 	db	87
   477  00BCC2  41                 	db	65
   478  00BCC3  52                 	db	82
   479  00BCC4  45                 	db	69
   480  00BCC5  2E                 	db	46
   481  00BCC6  48                 	db	72
   482  00BCC7  45                 	db	69
   483  00BCC8  58                 	db	88
   484  00BCC9  20                 	db	32
   485  00BCCA  66                 	db	102
   486  00BCCB  6F                 	db	111
   487  00BCCC  75                 	db	117
   488  00BCCD  6E                 	db	110
   489  00BCCE  64                 	db	100
   490  00BCCF  00                 	db	0
   491  00BCD0                     __end_of_found_line2:
   492                           	opt stack 0
   493  00BCD0                     _programming_line2:
   494                           	opt stack 0
   495  00BCD0  50                 	db	80
   496  00BCD1  72                 	db	114
   497  00BCD2  6F                 	db	111
   498  00BCD3  67                 	db	103
   499  00BCD4  72                 	db	114
   500  00BCD5  61                 	db	97
   501  00BCD6  6D                 	db	109
   502  00BCD7  6D                 	db	109
   503  00BCD8  69                 	db	105
   504  00BCD9  6E                 	db	110
   505  00BCDA  67                 	db	103
   506  00BCDB  20                 	db	32
   507  00BCDC  66                 	db	102
   508  00BCDD  6C                 	db	108
   509  00BCDE  61                 	db	97
   510  00BCDF  73                 	db	115
   511  00BCE0  68                 	db	104
   512  00BCE1  00                 	db	0
   513  00BCE2                     __end_of_programming_line2:
   514                           	opt stack 0
   515  00BCE2                     _failed_line2:
   516                           	opt stack 0
   517  00BCE2  46                 	db	70
   518  00BCE3  69                 	db	105
   519  00BCE4  6C                 	db	108
   520  00BCE5  65                 	db	101
   521  00BCE6  20                 	db	32
   522  00BCE7  63                 	db	99
   523  00BCE8  68                 	db	104
   524  00BCE9  65                 	db	101
   525  00BCEA  63                 	db	99
   526  00BCEB  6B                 	db	107
   527  00BCEC  20                 	db	32
   528  00BCED  66                 	db	102
   529  00BCEE  61                 	db	97
   530  00BCEF  69                 	db	105
   531  00BCF0  6C                 	db	108
   532  00BCF1  65                 	db	101
   533  00BCF2  64                 	db	100
   534  00BCF3  00                 	db	0
   535  00BCF4                     __end_of_failed_line2:
   536                           	opt stack 0
   537  00BCF4                     _found_line4:
   538                           	opt stack 0
   539  00BCF4  50                 	db	80
   540  00BCF5  72                 	db	114
   541  00BCF6  65                 	db	101
   542  00BCF7  73                 	db	115
   543  00BCF8  73                 	db	115
   544  00BCF9  20                 	db	32
   545  00BCFA  74                 	db	116
   546  00BCFB  6F                 	db	111
   547  00BCFC  20                 	db	32
   548  00BCFD  75                 	db	117
   549  00BCFE  73                 	db	115
   550  00BCFF  65                 	db	101
   551  00BD00  20                 	db	32
   552  00BD01  66                 	db	102
   553  00BD02  69                 	db	105
   554  00BD03  6C                 	db	108
   555  00BD04  65                 	db	101
   556  00BD05  00                 	db	0
   557  00BD06                     __end_of_found_line4:
   558                           	opt stack 0
   559  00BD06                     _checked_line4:
   560                           	opt stack 0
   561  00BD06  50                 	db	80
   562  00BD07  72                 	db	114
   563  00BD08  65                 	db	101
   564  00BD09  73                 	db	115
   565  00BD0A  73                 	db	115
   566  00BD0B  20                 	db	32
   567  00BD0C  74                 	db	116
   568  00BD0D  6F                 	db	111
   569  00BD0E  20                 	db	32
   570  00BD0F  70                 	db	112
   571  00BD10  72                 	db	114
   572  00BD11  6F                 	db	111
   573  00BD12  67                 	db	103
   574  00BD13  72                 	db	114
   575  00BD14  61                 	db	97
   576  00BD15  6D                 	db	109
   577  00BD16  00                 	db	0
   578  00BD17                     __end_of_checked_line4:
   579                           	opt stack 0
   580  00BD17                     _search_line2:
   581                           	opt stack 0
   582  00BD17  4C                 	db	76
   583  00BD18  6F                 	db	111
   584  00BD19  6F                 	db	111
   585  00BD1A  6B                 	db	107
   586  00BD1B  69                 	db	105
   587  00BD1C  6E                 	db	110
   588  00BD1D  67                 	db	103
   589  00BD1E  20                 	db	32
   590  00BD1F  66                 	db	102
   591  00BD20  6F                 	db	111
   592  00BD21  72                 	db	114
   593  00BD22  20                 	db	32
   594  00BD23  66                 	db	102
   595  00BD24  69                 	db	105
   596  00BD25  6C                 	db	108
   597  00BD26  65                 	db	101
   598  00BD27  00                 	db	0
   599  00BD28                     __end_of_search_line2:
   600                           	opt stack 0
   601  00BD28                     _suspended_line4:
   602                           	opt stack 0
   603  00BD28  50                 	db	80
   604  00BD29  72                 	db	114
   605  00BD2A  65                 	db	101
   606  00BD2B  73                 	db	115
   607  00BD2C  73                 	db	115
   608  00BD2D  20                 	db	32
   609  00BD2E  74                 	db	116
   610  00BD2F  6F                 	db	111
   611  00BD30  20                 	db	32
   612  00BD31  72                 	db	114
   613  00BD32  65                 	db	101
   614  00BD33  73                 	db	115
   615  00BD34  75                 	db	117
   616  00BD35  6D                 	db	109
   617  00BD36  65                 	db	101
   618  00BD37  00                 	db	0
   619  00BD38                     __end_of_suspended_line4:
   620                           	opt stack 0
   621  00BD38                     _suspended_line1:
   622                           	opt stack 0
   623  00BD38  42                 	db	66
   624  00BD39  6F                 	db	111
   625  00BD3A  6F                 	db	111
   626  00BD3B  74                 	db	116
   627  00BD3C  6C                 	db	108
   628  00BD3D  6F                 	db	111
   629  00BD3E  61                 	db	97
   630  00BD3F  64                 	db	100
   631  00BD40  65                 	db	101
   632  00BD41  72                 	db	114
   633  00BD42  20                 	db	32
   634  00BD43  4D                 	db	77
   635  00BD44  6F                 	db	111
   636  00BD45  64                 	db	100
   637  00BD46  65                 	db	101
   638  00BD47  00                 	db	0
   639  00BD48                     __end_of_suspended_line1:
   640                           	opt stack 0
   641  00BD48                     _done_line4:
   642                           	opt stack 0
   643  00BD48  50                 	db	80
   644  00BD49  72                 	db	114
   645  00BD4A  65                 	db	101
   646  00BD4B  73                 	db	115
   647  00BD4C  73                 	db	115
   648  00BD4D  20                 	db	32
   649  00BD4E  74                 	db	116
   650  00BD4F  6F                 	db	111
   651  00BD50  20                 	db	32
   652  00BD51  72                 	db	114
   653  00BD52  65                 	db	101
   654  00BD53  62                 	db	98
   655  00BD54  6F                 	db	111
   656  00BD55  6F                 	db	111
   657  00BD56  74                 	db	116
   658  00BD57  00                 	db	0
   659  00BD58                     __end_of_done_line4:
   660                           	opt stack 0
   661  00BD58                     _done_line3:
   662                           	opt stack 0
   663  00BD58  50                 	db	80
   664  00BD59  61                 	db	97
   665  00BD5A  67                 	db	103
   666  00BD5B  65                 	db	101
   667  00BD5C  73                 	db	115
   668  00BD5D  20                 	db	32
   669  00BD5E  77                 	db	119
   670  00BD5F  72                 	db	114
   671  00BD60  69                 	db	105
   672  00BD61  74                 	db	116
   673  00BD62  74                 	db	116
   674  00BD63  65                 	db	101
   675  00BD64  6E                 	db	110
   676  00BD65  3A                 	db	58
   677  00BD66  20                 	db	32
   678  00BD67  00                 	db	0
   679  00BD68                     __end_of_done_line3:
   680                           	opt stack 0
   681  00BD68                     _done_line1:
   682                           	opt stack 0
   683  00BD68  42                 	db	66
   684  00BD69  6F                 	db	111
   685  00BD6A  6F                 	db	111
   686  00BD6B  74                 	db	116
   687  00BD6C  6C                 	db	108
   688  00BD6D  6F                 	db	111
   689  00BD6E  61                 	db	97
   690  00BD6F  64                 	db	100
   691  00BD70  65                 	db	101
   692  00BD71  72                 	db	114
   693  00BD72  20                 	db	32
   694  00BD73  4D                 	db	77
   695  00BD74  6F                 	db	111
   696  00BD75  64                 	db	100
   697  00BD76  65                 	db	101
   698  00BD77  00                 	db	0
   699  00BD78                     __end_of_done_line1:
   700                           	opt stack 0
   701  00BD78                     _programming_line4:
   702                           	opt stack 0
   703  00BD78  50                 	db	80
   704  00BD79  61                 	db	97
   705  00BD7A  67                 	db	103
   706  00BD7B  65                 	db	101
   707  00BD7C  73                 	db	115
   708  00BD7D  20                 	db	32
   709  00BD7E  77                 	db	119
   710  00BD7F  72                 	db	114
   711  00BD80  69                 	db	105
   712  00BD81  74                 	db	116
   713  00BD82  74                 	db	116
   714  00BD83  65                 	db	101
   715  00BD84  6E                 	db	110
   716  00BD85  3A                 	db	58
   717  00BD86  20                 	db	32
   718  00BD87  00                 	db	0
   719  00BD88                     __end_of_programming_line4:
   720                           	opt stack 0
   721  00BD88                     _programming_line1:
   722                           	opt stack 0
   723  00BD88  42                 	db	66
   724  00BD89  6F                 	db	111
   725  00BD8A  6F                 	db	111
   726  00BD8B  74                 	db	116
   727  00BD8C  6C                 	db	108
   728  00BD8D  6F                 	db	111
   729  00BD8E  61                 	db	97
   730  00BD8F  64                 	db	100
   731  00BD90  65                 	db	101
   732  00BD91  72                 	db	114
   733  00BD92  20                 	db	32
   734  00BD93  4D                 	db	77
   735  00BD94  6F                 	db	111
   736  00BD95  64                 	db	100
   737  00BD96  65                 	db	101
   738  00BD97  00                 	db	0
   739  00BD98                     __end_of_programming_line1:
   740                           	opt stack 0
   741  00BD98                     _failed_line1:
   742                           	opt stack 0
   743  00BD98  42                 	db	66
   744  00BD99  6F                 	db	111
   745  00BD9A  6F                 	db	111
   746  00BD9B  74                 	db	116
   747  00BD9C  6C                 	db	108
   748  00BD9D  6F                 	db	111
   749  00BD9E  61                 	db	97
   750  00BD9F  64                 	db	100
   751  00BDA0  65                 	db	101
   752  00BDA1  72                 	db	114
   753  00BDA2  20                 	db	32
   754  00BDA3  4D                 	db	77
   755  00BDA4  6F                 	db	111
   756  00BDA5  64                 	db	100
   757  00BDA6  65                 	db	101
   758  00BDA7  00                 	db	0
   759  00BDA8                     __end_of_failed_line1:
   760                           	opt stack 0
   761  00BDA8                     _checked_line1:
   762                           	opt stack 0
   763  00BDA8  42                 	db	66
   764  00BDA9  6F                 	db	111
   765  00BDAA  6F                 	db	111
   766  00BDAB  74                 	db	116
   767  00BDAC  6C                 	db	108
   768  00BDAD  6F                 	db	111
   769  00BDAE  61                 	db	97
   770  00BDAF  64                 	db	100
   771  00BDB0  65                 	db	101
   772  00BDB1  72                 	db	114
   773  00BDB2  20                 	db	32
   774  00BDB3  4D                 	db	77
   775  00BDB4  6F                 	db	111
   776  00BDB5  64                 	db	100
   777  00BDB6  65                 	db	101
   778  00BDB7  00                 	db	0
   779  00BDB8                     __end_of_checked_line1:
   780                           	opt stack 0
   781  00BDB8                     _verify_line1:
   782                           	opt stack 0
   783  00BDB8  42                 	db	66
   784  00BDB9  6F                 	db	111
   785  00BDBA  6F                 	db	111
   786  00BDBB  74                 	db	116
   787  00BDBC  6C                 	db	108
   788  00BDBD  6F                 	db	111
   789  00BDBE  61                 	db	97
   790  00BDBF  64                 	db	100
   791  00BDC0  65                 	db	101
   792  00BDC1  72                 	db	114
   793  00BDC2  20                 	db	32
   794  00BDC3  4D                 	db	77
   795  00BDC4  6F                 	db	111
   796  00BDC5  64                 	db	100
   797  00BDC6  65                 	db	101
   798  00BDC7  00                 	db	0
   799  00BDC8                     __end_of_verify_line1:
   800                           	opt stack 0
   801  00BDC8                     _found_line1:
   802                           	opt stack 0
   803  00BDC8  42                 	db	66
   804  00BDC9  6F                 	db	111
   805  00BDCA  6F                 	db	111
   806  00BDCB  74                 	db	116
   807  00BDCC  6C                 	db	108
   808  00BDCD  6F                 	db	111
   809  00BDCE  61                 	db	97
   810  00BDCF  64                 	db	100
   811  00BDD0  65                 	db	101
   812  00BDD1  72                 	db	114
   813  00BDD2  20                 	db	32
   814  00BDD3  4D                 	db	77
   815  00BDD4  6F                 	db	111
   816  00BDD5  64                 	db	100
   817  00BDD6  65                 	db	101
   818  00BDD7  00                 	db	0
   819  00BDD8                     __end_of_found_line1:
   820                           	opt stack 0
   821  00BDD8                     _search_line1:
   822                           	opt stack 0
   823  00BDD8  42                 	db	66
   824  00BDD9  6F                 	db	111
   825  00BDDA  6F                 	db	111
   826  00BDDB  74                 	db	116
   827  00BDDC  6C                 	db	108
   828  00BDDD  6F                 	db	111
   829  00BDDE  61                 	db	97
   830  00BDDF  64                 	db	100
   831  00BDE0  65                 	db	101
   832  00BDE1  72                 	db	114
   833  00BDE2  20                 	db	32
   834  00BDE3  4D                 	db	77
   835  00BDE4  6F                 	db	111
   836  00BDE5  64                 	db	100
   837  00BDE6  65                 	db	101
   838  00BDE7  00                 	db	0
   839  00BDE8                     __end_of_search_line1:
   840                           	opt stack 0
   841  00BDE8                     _start_line1:
   842                           	opt stack 0
   843  00BDE8  42                 	db	66
   844  00BDE9  6F                 	db	111
   845  00BDEA  6F                 	db	111
   846  00BDEB  74                 	db	116
   847  00BDEC  6C                 	db	108
   848  00BDED  6F                 	db	111
   849  00BDEE  61                 	db	97
   850  00BDEF  64                 	db	100
   851  00BDF0  65                 	db	101
   852  00BDF1  72                 	db	114
   853  00BDF2  20                 	db	32
   854  00BDF3  4D                 	db	77
   855  00BDF4  6F                 	db	111
   856  00BDF5  64                 	db	100
   857  00BDF6  65                 	db	101
   858  00BDF7  00                 	db	0
   859  00BDF8                     __end_of_start_line1:
   860                           	opt stack 0
   861  00BDF8                     _failed_line3_checksum:
   862                           	opt stack 0
   863  00BDF8  43                 	db	67
   864  00BDF9  68                 	db	104
   865  00BDFA  65                 	db	101
   866  00BDFB  63                 	db	99
   867  00BDFC  6B                 	db	107
   868  00BDFD  73                 	db	115
   869  00BDFE  75                 	db	117
   870  00BDFF  6D                 	db	109
   871  00BE00  20                 	db	32
   872  00BE01  65                 	db	101
   873  00BE02  72                 	db	114
   874  00BE03  72                 	db	114
   875  00BE04  6F                 	db	111
   876  00BE05  72                 	db	114
   877  00BE06  00                 	db	0
   878  00BE07                     __end_of_failed_line3_checksum:
   879                           	opt stack 0
   880  00BE07                     _failed_line3_noNextRecord:
   881                           	opt stack 0
   882  00BE07  4E                 	db	78
   883  00BE08  6F                 	db	111
   884  00BE09  20                 	db	32
   885  00BE0A  6E                 	db	110
   886  00BE0B  65                 	db	101
   887  00BE0C  78                 	db	120
   888  00BE0D  74                 	db	116
   889  00BE0E  20                 	db	32
   890  00BE0F  72                 	db	114
   891  00BE10  65                 	db	101
   892  00BE11  63                 	db	99
   893  00BE12  6F                 	db	111
   894  00BE13  72                 	db	114
   895  00BE14  64                 	db	100
   896  00BE15  00                 	db	0
   897  00BE16                     __end_of_failed_line3_noNextRecord:
   898                           	opt stack 0
   899  00BE16                     _start_line4:
   900                           	opt stack 0
   901  00BE16  73                 	db	115
   902  00BE17  6F                 	db	111
   903  00BE18  6C                 	db	108
   904  00BE19  64                 	db	100
   905  00BE1A  65                 	db	101
   906  00BE1B  72                 	db	114
   907  00BE1C  6E                 	db	110
   908  00BE1D  65                 	db	101
   909  00BE1E  72                 	db	114
   910  00BE1F  64                 	db	100
   911  00BE20  2E                 	db	46
   912  00BE21  63                 	db	99
   913  00BE22  6F                 	db	111
   914  00BE23  6D                 	db	109
   915  00BE24  00                 	db	0
   916  00BE25                     __end_of_start_line4:
   917                           	opt stack 0
   918  00BE25                     _failed_line3_dataTooLong:
   919                           	opt stack 0
   920  00BE25  44                 	db	68
   921  00BE26  61                 	db	97
   922  00BE27  74                 	db	116
   923  00BE28  61                 	db	97
   924  00BE29  20                 	db	32
   925  00BE2A  74                 	db	116
   926  00BE2B  6F                 	db	111
   927  00BE2C  6F                 	db	111
   928  00BE2D  20                 	db	32
   929  00BE2E  6C                 	db	108
   930  00BE2F  6F                 	db	111
   931  00BE30  6E                 	db	110
   932  00BE31  67                 	db	103
   933  00BE32  00                 	db	0
   934  00BE33                     __end_of_failed_line3_dataTooLong:
   935                           	opt stack 0
   936  00BE33                     _reboot_line1:
   937                           	opt stack 0
   938  00BE33  52                 	db	82
   939  00BE34  65                 	db	101
   940  00BE35  62                 	db	98
   941  00BE36  6F                 	db	111
   942  00BE37  6F                 	db	111
   943  00BE38  74                 	db	116
   944  00BE39  69                 	db	105
   945  00BE3A  6E                 	db	110
   946  00BE3B  67                 	db	103
   947  00BE3C  2E                 	db	46
   948  00BE3D  2E                 	db	46
   949  00BE3E  2E                 	db	46
   950  00BE3F  00                 	db	0
   951  00BE40                     __end_of_reboot_line1:
   952                           	opt stack 0
   953  00BE40                     _verify_line2:
   954                           	opt stack 0
   955  00BE40  56                 	db	86
   956  00BE41  65                 	db	101
   957  00BE42  72                 	db	114
   958  00BE43  69                 	db	105
   959  00BE44  66                 	db	102
   960  00BE45  79                 	db	121
   961  00BE46  69                 	db	105
   962  00BE47  6E                 	db	110
   963  00BE48  67                 	db	103
   964  00BE49  2E                 	db	46
   965  00BE4A  2E                 	db	46
   966  00BE4B  2E                 	db	46
   967  00BE4C  00                 	db	0
   968  00BE4D                     __end_of_verify_line2:
   969                           	opt stack 0
   970  00BE4D                     _suspended_line2:
   971                           	opt stack 0
   972  00BE4D  53                 	db	83
   973  00BE4E  75                 	db	117
   974  00BE4F  73                 	db	115
   975  00BE50  70                 	db	112
   976  00BE51  65                 	db	101
   977  00BE52  6E                 	db	110
   978  00BE53  64                 	db	100
   979  00BE54  65                 	db	101
   980  00BE55  64                 	db	100
   981  00BE56  00                 	db	0
   982  00BE57                     __end_of_suspended_line2:
   983                           	opt stack 0
   984  00BE57                     _search_line4:
   985                           	opt stack 0
   986  00BE57  64                 	db	100
   987  00BE58  72                 	db	114
   988  00BE59  69                 	db	105
   989  00BE5A  76                 	db	118
   990  00BE5B  65                 	db	101
   991  00BE5C  2E                 	db	46
   992  00BE5D  2E                 	db	46
   993  00BE5E  2E                 	db	46
   994  00BE5F  00                 	db	0
   995  00BE60                     __end_of_search_line4:
   996                           	opt stack 0
   997  00BE60                     _start_line2:
   998                           	opt stack 0
   999  00BE60  56                 	db	86
  1000  00BE61  65                 	db	101
  1001  00BE62  72                 	db	114
  1002  00BE63  73                 	db	115
  1003  00BE64  69                 	db	105
  1004  00BE65  6F                 	db	111
  1005  00BE66  6E                 	db	110
  1006  00BE67  20                 	db	32
  1007  00BE68  00                 	db	0
  1008  00BE69                     __end_of_start_line2:
  1009                           	opt stack 0
  1010  00BE69                     _failed_line4:
  1011                           	opt stack 0
  1012  00BE69  52                 	db	82
  1013  00BE6A  65                 	db	101
  1014  00BE6B  63                 	db	99
  1015  00BE6C  6F                 	db	111
  1016  00BE6D  72                 	db	114
  1017  00BE6E  64                 	db	100
  1018  00BE6F  20                 	db	32
  1019  00BE70  00                 	db	0
  1020  00BE71                     __end_of_failed_line4:
  1021                           	opt stack 0
  1022  00BE71                     _checked_line3:
  1023                           	opt stack 0
  1024  00BE71  72                 	db	114
  1025  00BE72  65                 	db	101
  1026  00BE73  63                 	db	99
  1027  00BE74  6F                 	db	111
  1028  00BE75  72                 	db	114
  1029  00BE76  64                 	db	100
  1030  00BE77  73                 	db	115
  1031  00BE78  00                 	db	0
  1032  00BE79                     __end_of_checked_line3:
  1033                           	opt stack 0
  1034  00BE79                     _USB_SD_Ptr:
  1035                           	opt stack 0
  1036  00BE79  CB                 	db	low _sd000
  1037  00BE7A  BF                 	db	high _sd000
  1038  00BE7B  E7                 	db	low _sd001
  1039  00BE7C  BE                 	db	high _sd001
  1040  00BE7D  1B                 	db	low _sd002
  1041  00BE7E  BF                 	db	high _sd002
  1042  00BE7F  8A                 	db	low _sd003
  1043  00BE80  BF                 	db	high _sd003
  1044  00BE81                     __end_of_USB_SD_Ptr:
  1045                           	opt stack 0
  1046  00BE81                     _programming_line3:
  1047                           	opt stack 0
  1048  00BE81  45                 	db	69
  1049  00BE82  6E                 	db	110
  1050  00BE83  74                 	db	116
  1051  00BE84  72                 	db	114
  1052  00BE85  79                 	db	121
  1053  00BE86  20                 	db	32
  1054  00BE87  00                 	db	0
  1055  00BE88                     __end_of_programming_line3:
  1056                           	opt stack 0
  1057  00BE88                     _verify_line3:
  1058                           	opt stack 0
  1059  00BE88  52                 	db	82
  1060  00BE89  65                 	db	101
  1061  00BE8A  63                 	db	99
  1062  00BE8B  6F                 	db	111
  1063  00BE8C  72                 	db	114
  1064  00BE8D  64                 	db	100
  1065  00BE8E  00                 	db	0
  1066  00BE8F                     __end_of_verify_line3:
  1067                           	opt stack 0
  1068  00BE8F                     _found_line3b:
  1069                           	opt stack 0
  1070  00BE8F  20                 	db	32
  1071  00BE90  62                 	db	98
  1072  00BE91  79                 	db	121
  1073  00BE92  74                 	db	116
  1074  00BE93  65                 	db	101
  1075  00BE94  73                 	db	115
  1076  00BE95  00                 	db	0
  1077  00BE96                     __end_of_found_line3b:
  1078                           	opt stack 0
  1079  00BE96                     _found_line3:
  1080                           	opt stack 0
  1081  00BE96  53                 	db	83
  1082  00BE97  69                 	db	105
  1083  00BE98  7A                 	db	122
  1084  00BE99  65                 	db	101
  1085  00BE9A  3A                 	db	58
  1086  00BE9B  20                 	db	32
  1087  00BE9C  00                 	db	0
  1088  00BE9D                     __end_of_found_line3:
  1089                           	opt stack 0
  1090  00BE9D                     _done_line2:
  1091                           	opt stack 0
  1092  00BE9D  44                 	db	68
  1093  00BE9E  6F                 	db	111
  1094  00BE9F  6E                 	db	110
  1095  00BEA0  65                 	db	101
  1096  00BEA1  21                 	db	33
  1097  00BEA2  00                 	db	0
  1098  00BEA3                     __end_of_done_line2:
  1099                           	opt stack 0
  1100  00BEA3                     _USB_CD_Ptr:
  1101                           	opt stack 0
  1102  00BEA3  A7                 	db	low _configDescriptor1
  1103  00BEA4  BE                 	db	high _configDescriptor1
  1104  00BEA5                     __end_of_USB_CD_Ptr:
  1105                           	opt stack 0
  1106  00BEA5                     _suspended_line3:
  1107                           	opt stack 0
  1108  00BEA5  00                 	db	0
  1109  00BEA6                     __end_of_suspended_line3:
  1110                           	opt stack 0
  1111  00BEA6                     _start_line3:
  1112                           	opt stack 0
  1113  00BEA6  00                 	db	0
  1114  00BEA7                     __end_of_start_line3:
  1115                           	opt stack 0
  1116  00BEA7                     _configDescriptor1:
  1117                           	opt stack 0
  1118  00BEA7  09                 	db	9
  1119  00BEA8  02                 	db	2
  1120  00BEA9  40                 	db	64
  1121  00BEAA  00                 	db	0
  1122  00BEAB  02                 	db	2
  1123  00BEAC  01                 	db	1
  1124  00BEAD  00                 	db	0
  1125  00BEAE  C0                 	db	192
  1126  00BEAF  32                 	db	50
  1127  00BEB0  09                 	db	9
  1128  00BEB1  04                 	db	4
  1129  00BEB2  00                 	db	0
  1130  00BEB3  00                 	db	0
  1131  00BEB4  02                 	db	2
  1132  00BEB5  03                 	db	3
  1133  00BEB6  00                 	db	0
  1134  00BEB7  00                 	db	0
  1135  00BEB8  00                 	db	0
  1136  00BEB9  09                 	db	9
  1137  00BEBA  21                 	db	33
  1138  00BEBB  11                 	db	17
  1139  00BEBC  01                 	db	1
  1140  00BEBD  00                 	db	0
  1141  00BEBE  01                 	db	1
  1142  00BEBF  22                 	db	34
  1143  00BEC0  1D                 	db	29
  1144  00BEC1  00                 	db	0
  1145  00BEC2  07                 	db	7
  1146  00BEC3  05                 	db	5
  1147  00BEC4  81                 	db	129
  1148  00BEC5  03                 	db	3
  1149  00BEC6  40                 	db	64
  1150  00BEC7  00                 	db	0
  1151  00BEC8  01                 	db	1
  1152  00BEC9  07                 	db	7
  1153  00BECA  05                 	db	5
  1154  00BECB  01                 	db	1
  1155  00BECC  03                 	db	3
  1156  00BECD  40                 	db	64
  1157  00BECE  00                 	db	0
  1158  00BECF  01                 	db	1
  1159  00BED0  09                 	db	9
  1160  00BED1  04                 	db	4
  1161  00BED2  01                 	db	1
  1162  00BED3  00                 	db	0
  1163  00BED4  02                 	db	2
  1164  00BED5  08                 	db	8
  1165  00BED6  06                 	db	6
  1166  00BED7  50                 	db	80
  1167  00BED8  00                 	db	0
  1168  00BED9  07                 	db	7
  1169  00BEDA  05                 	db	5
  1170  00BEDB  82                 	db	130
  1171  00BEDC  02                 	db	2
  1172  00BEDD  40                 	db	64
  1173  00BEDE  00                 	db	0
  1174  00BEDF  01                 	db	1
  1175  00BEE0  07                 	db	7
  1176  00BEE1  05                 	db	5
  1177  00BEE2  02                 	db	2
  1178  00BEE3  02                 	db	2
  1179  00BEE4  40                 	db	64
  1180  00BEE5  00                 	db	0
  1181  00BEE6  01                 	db	1
  1182  00BEE7                     __end_of_configDescriptor1:
  1183                           	opt stack 0
  1184  00BEE7                     _sd001:
  1185                           	opt stack 0
  1186  00BEE7  34                 	db	52
  1187  00BEE8  03                 	db	3
  1188  00BEE9  0053               	dw	83
  1189  00BEEB  006F               	dw	111
  1190  00BEED  006C               	dw	108
  1191  00BEEF  0064               	dw	100
  1192  00BEF1  0065               	dw	101
  1193  00BEF3  0072               	dw	114
  1194  00BEF5  006E               	dw	110
  1195  00BEF7  0065               	dw	101
  1196  00BEF9  0072               	dw	114
  1197  00BEFB  0064               	dw	100
  1198  00BEFD  002E               	dw	46
  1199  00BEFF  0063               	dw	99
  1200  00BF01  006F               	dw	111
  1201  00BF03  006D               	dw	109
  1202  00BF05  0020               	dw	32
  1203  00BF07  0020               	dw	32
  1204  00BF09  0020               	dw	32
  1205  00BF0B  0020               	dw	32
  1206  00BF0D  0020               	dw	32
  1207  00BF0F  0020               	dw	32
  1208  00BF11  0020               	dw	32
  1209  00BF13  0020               	dw	32
  1210  00BF15  0020               	dw	32
  1211  00BF17  0020               	dw	32
  1212  00BF19  0020               	dw	32
  1213  00BF1B                     __end_of_sd001:
  1214                           	opt stack 0
  1215  00BF1B                     _sd002:
  1216                           	opt stack 0
  1217  00BF1B  2E                 	db	46
  1218  00BF1C  03                 	db	3
  1219  00BF1D  004D               	dw	77
  1220  00BF1F  0050               	dw	80
  1221  00BF21  0050               	dw	80
  1222  00BF23  0054               	dw	84
  1223  00BF25  0053               	dw	83
  1224  00BF27  006F               	dw	111
  1225  00BF29  006C               	dw	108
  1226  00BF2B  0061               	dw	97
  1227  00BF2D  0072               	dw	114
  1228  00BF2F  0020               	dw	32
  1229  00BF31  0043               	dw	67
  1230  00BF33  0068               	dw	104
  1231  00BF35  0061               	dw	97
  1232  00BF37  0072               	dw	114
  1233  00BF39  0067               	dw	103
  1234  00BF3B  0065               	dw	101
  1235  00BF3D  0072               	dw	114
  1236  00BF3F  0020               	dw	32
  1237  00BF41  0052               	dw	82
  1238  00BF43  0065               	dw	101
  1239  00BF45  0076               	dw	118
  1240  00BF47  0043               	dw	67
  1241  00BF49                     __end_of_sd002:
  1242                           	opt stack 0
  1243  00BF49                     _inq_resp:
  1244                           	opt stack 0
  1245  00BF49  00                 	db	0
  1246  00BF4A  80                 	db	128
  1247  00BF4B  04                 	db	4
  1248  00BF4C  02                 	db	2
  1249  00BF4D  20                 	db	32
  1250  00BF4E  00                 	db	0
  1251  00BF4F  00                 	db	0
  1252  00BF50  00                 	db	0
  1253  00BF51  4D                 	db	77
  1254  00BF52  69                 	db	105
  1255  00BF53  63                 	db	99
  1256  00BF54  72                 	db	114
  1257  00BF55  6F                 	db	111
  1258  00BF56  63                 	db	99
  1259  00BF57  68                 	db	104
  1260  00BF58  70                 	db	112
  1261  00BF59  4D                 	db	77
  1262  00BF5A  61                 	db	97
  1263  00BF5B  73                 	db	115
  1264  00BF5C  73                 	db	115
  1265  00BF5D  20                 	db	32
  1266  00BF5E  53                 	db	83
  1267  00BF5F  74                 	db	116
  1268  00BF60  6F                 	db	111
  1269  00BF61  72                 	db	114
  1270  00BF62  61                 	db	97
  1271  00BF63  67                 	db	103
  1272  00BF64  65                 	db	101
  1273  00BF65  20                 	db	32
  1274  00BF66  20                 	db	32
  1275  00BF67  20                 	db	32
  1276  00BF68  20                 	db	32
  1277  00BF69  30                 	db	48
  1278  00BF6A  30                 	db	48
  1279  00BF6B  30                 	db	48
  1280  00BF6C  31                 	db	49
  1281  00BF6D                     __end_of_inq_resp:
  1282                           	opt stack 0
  1283  00BF6D                     _hid_rpt01:
  1284                           	opt stack 0
  1285  00BF6D  06                 	db	6
  1286  00BF6E  00                 	db	0
  1287  00BF6F  FF                 	db	255
  1288  00BF70  09                 	db	9
  1289  00BF71  01                 	db	1
  1290  00BF72  A1                 	db	161
  1291  00BF73  01                 	db	1
  1292  00BF74  19                 	db	25
  1293  00BF75  01                 	db	1
  1294  00BF76  29                 	db	41
  1295  00BF77  40                 	db	64
  1296  00BF78  15                 	db	21
  1297  00BF79  00                 	db	0
  1298  00BF7A  26                 	db	38
  1299  00BF7B  FF                 	db	255
  1300  00BF7C  00                 	db	0
  1301  00BF7D  75                 	db	117
  1302  00BF7E  08                 	db	8
  1303  00BF7F  95                 	db	149
  1304  00BF80  40                 	db	64
  1305  00BF81  81                 	db	129
  1306  00BF82  00                 	db	0
  1307  00BF83  19                 	db	25
  1308  00BF84  01                 	db	1
  1309  00BF85  29                 	db	41
  1310  00BF86  40                 	db	64
  1311  00BF87  91                 	db	145
  1312  00BF88  00                 	db	0
  1313  00BF89  C0                 	db	192
  1314  00BF8A                     __end_of_hid_rpt01:
  1315                           	opt stack 0
  1316  00BF8A                     _sd003:
  1317                           	opt stack 0
  1318  00BF8A  1A                 	db	26
  1319  00BF8B  03                 	db	3
  1320  00BF8C  0031               	dw	49
  1321  00BF8E  0032               	dw	50
  1322  00BF90  0033               	dw	51
  1323  00BF92  0034               	dw	52
  1324  00BF94  0035               	dw	53
  1325  00BF96  0036               	dw	54
  1326  00BF98  0037               	dw	55
  1327  00BF9A  0038               	dw	56
  1328  00BF9C  0039               	dw	57
  1329  00BF9E  0030               	dw	48
  1330  00BFA0  0039               	dw	57
  1331  00BFA2  0039               	dw	57
  1332  00BFA4                     __end_of_sd003:
  1333                           	opt stack 0
  1334  00BFA4                     _device_dsc:
  1335                           	opt stack 0
  1336  00BFA4  12                 	db	18
  1337  00BFA5  01                 	db	1
  1338  00BFA6  0200               	dw	512
  1339  00BFA8  00                 	db	0
  1340  00BFA9  00                 	db	0
  1341  00BFAA  00                 	db	0
  1342  00BFAB  08                 	db	8
  1343  00BFAC  04D8               	dw	1240
  1344  00BFAE  F08E               	dw	61582
  1345  00BFB0  0100               	dw	256
  1346  00BFB2  01                 	db	1
  1347  00BFB3  02                 	db	2
  1348  00BFB4  00                 	db	0
  1349  00BFB5  01                 	db	1
  1350  00BFB6                     __end_of_device_dsc:
  1351                           	opt stack 0
  1352  00BFB6                     _bootloader_filename:
  1353                           	opt stack 0
  1354  00BFB6  46                 	db	70
  1355  00BFB7  49                 	db	73
  1356  00BFB8  52                 	db	82
  1357  00BFB9  4D                 	db	77
  1358  00BFBA  57                 	db	87
  1359  00BFBB  41                 	db	65
  1360  00BFBC  52                 	db	82
  1361  00BFBD  45                 	db	69
  1362  00BFBE  00                 	db	0
  1363  00BFBF                     __end_of_bootloader_filename:
  1364                           	opt stack 0
  1365  00BFBF                     _flash_command_pagesize_528:
  1366                           	opt stack 0
  1367  00BFBF  3D                 	db	61
  1368  00BFC0  2A                 	db	42
  1369  00BFC1  80                 	db	128
  1370  00BFC2  A7                 	db	167
  1371  00BFC3                     __end_of_flash_command_pagesize_528:
  1372                           	opt stack 0
  1373  00BFC3                     _flash_command_pagesize_512:
  1374                           	opt stack 0
  1375  00BFC3  3D                 	db	61
  1376  00BFC4  2A                 	db	42
  1377  00BFC5  80                 	db	128
  1378  00BFC6  A6                 	db	166
  1379  00BFC7                     __end_of_flash_command_pagesize_512:
  1380                           	opt stack 0
  1381  00BFC7                     _bootloader_extension:
  1382                           	opt stack 0
  1383  00BFC7  48                 	db	72
  1384  00BFC8  45                 	db	69
  1385  00BFC9  58                 	db	88
  1386  00BFCA  00                 	db	0
  1387  00BFCB                     __end_of_bootloader_extension:
  1388                           	opt stack 0
  1389  00BFCB                     _sd000:
  1390                           	opt stack 0
  1391  00BFCB  04                 	db	4
  1392  00BFCC  03                 	db	3
  1393  00BFCD  0409               	dw	1033
  1394  00BFCF                     __end_of_sd000:
  1395                           	opt stack 0
  1396  0000                     _RPINR23	set	3838
  1397  0000                     _RPOR23	set	3799
  1398  0000                     _RPINR22	set	3837
  1399  0000                     _RPOR22	set	3798
  1400  0000                     _RPOR21	set	3797
  1401  0000                     _RPINR21	set	3836
  1402  0000                     _RPINR2	set	3810
  1403  0000                     _RPINR3	set	3811
  1404  0000                     _RPINR1	set	3809
  1405  0000                     _PPSCONbits	set	3775
  1406  0000                     _ODCON3bits	set	3904
  1407  0000                     _ANCON0bits	set	3912
  1408  0000                     _UEP0bits	set	3878
  1409  0000                     _UIEbits	set	3894
  1410  0000                     _UADDR	set	3896
  1411  0000                     _UIE	set	3894
  1412  0000                     _UEIE	set	3895
  1413  0000                     _UCFG	set	3897
  1414  0000                     _UEP1	set	3879
  1415  0000                     _UEP0	set	3878
  1416  0000                     _TBLPTR	set	4086
  1417  0000                     _DMACON2bits	set	3974
  1418  0000                     _SSP2CON1bits	set	3954
  1419  0000                     _SSP2STATbits	set	3955
  1420  0000                     _INTCON	set	4082
  1421  0000                     _EECON1	set	4006
  1422  0000                     _TABLAT	set	4085
  1423  0000                     _EECON1bits	set	4006
  1424  0000                     _SSP1CON1	set	4038
  1425  0000                     _SSP1BUF	set	4041
  1426  0000                     _SSP1CON2bits	set	4037
  1427  0000                     _SSP1CON1bits	set	4038
  1428  0000                     _SSP1ADD	set	4040
  1429  0000                     _SSP1STATbits	set	4039
  1430  0000                     _LATEbits	set	3981
  1431  0000                     _TRISEbits	set	3990
  1432  0000                     _LATBbits	set	3978
  1433  0000                     _TRISBbits	set	3987
  1434  0000                     _LATDbits	set	3980
  1435  0000                     _TRISDbits	set	3989
  1436  0000                     _LATCbits	set	3979
  1437  0000                     _TRISCbits	set	3988
  1438  0000                     _T0CONbits	set	4053
  1439  0000                     _INTCON2bits	set	4081
  1440  0000                     _EECON2	set	4007
  1441  0000                     _PORTBbits	set	3969
  1442  0000                     _INTCON3bits	set	4080
  1443  0000                     _TMR0L	set	4054
  1444  0000                     _TMR0H	set	4055
  1445  0000                     _INTCONbits	set	4082
  1446  0000                     _OSCCON	set	4051
  1447  0000                     _OSCTUNEbits	set	3995
  1448  0000                     _PORTAbits	set	3968
  1449  0000                     _TRISAbits	set	3986
  1450  0000                     _LATAbits	set	3977
  1451  0000                     _PIR3bits	set	4004
  1452  0000                     _DMABCL	set	3943
  1453  0000                     _DMABCH	set	3942
  1454  0000                     _RXADDRL	set	3945
  1455  0000                     _RXADDRH	set	3944
  1456  0000                     _DMACON1bits	set	3976
  1457  0000                     _TXADDRL	set	3947
  1458  0000                     _TXADDRH	set	3946
  1459  0000                     _PORTDbits	set	3971
  1460  0000                     _USTAT	set	3940
  1461  0000                     _PIR2bits	set	4001
  1462  0000                     _UCON	set	3941
  1463  0000                     _UIRbits	set	3938
  1464  0000                     _UCONbits	set	3941
  1465  0000                     _UIR	set	3938
  1466  0000                     _UEIR	set	3939
  1467  0000                     _PIE2bits	set	4000
  1468  00BFCF                     STR_12:
  1469  00BFCF  68                 	db	104	;'h'
  1470  00BFD0  65                 	db	101	;'e'
  1471  00BFD1  6C                 	db	108	;'l'
  1472  00BFD2  6C                 	db	108	;'l'
  1473  00BFD3  6F                 	db	111	;'o'
  1474  00BFD4  20                 	db	32
  1475  00BFD5  77                 	db	119	;'w'
  1476  00BFD6  6F                 	db	111	;'o'
  1477  00BFD7  72                 	db	114	;'r'
  1478  00BFD8  6C                 	db	108	;'l'
  1479  00BFD9  64                 	db	100	;'d'
  1480  00BFDA  21                 	db	33
  1481  00BFDB  00                 	db	0
  1482  00BFDC                     STR_9:
  1483  00BFDC  53                 	db	83	;'S'
  1484  00BFDD  6F                 	db	111	;'o'
  1485  00BFDE  6C                 	db	108	;'l'
  1486  00BFDF  61                 	db	97	;'a'
  1487  00BFE0  72                 	db	114	;'r'
  1488  00BFE1  43                 	db	67	;'C'
  1489  00BFE2  68                 	db	104	;'h'
  1490  00BFE3  61                 	db	97	;'a'
  1491  00BFE4  72                 	db	114	;'r'
  1492  00BFE5  67                 	db	103	;'g'
  1493  00BFE6  72                 	db	114	;'r'
  1494  00BFE7  00                 	db	0
  1495  00BFE8                     STR_10:
  1496  00BFE8  46                 	db	70	;'F'
  1497  00BFE9  49                 	db	73	;'I'
  1498  00BFEA  4C                 	db	76	;'L'
  1499  00BFEB  45                 	db	69	;'E'
  1500  00BFEC  20                 	db	32
  1501  00BFED  20                 	db	32
  1502  00BFEE  20                 	db	32
  1503  00BFEF  20                 	db	32
  1504  00BFF0  00                 	db	0
  1505  00BFF1                     STR_1:
  1506  00BFF1  4D                 	db	77	;'M'
  1507  00BFF2  53                 	db	83	;'S'
  1508  00BFF3  44                 	db	68	;'D'
  1509  00BFF4  4F                 	db	79	;'O'
  1510  00BFF5  53                 	db	83	;'S'
  1511  00BFF6  35                 	db	53	;'5'
  1512  00BFF7  2E                 	db	46
  1513  00BFF8  30                 	db	48	;'0'
  1514  00BFF9  00                 	db	0
  1515  00BFFA                     STR_11:
  1516  00BFFA  54                 	db	84	;'T'
  1517  00BFFB  58                 	db	88	;'X'
  1518  00BFFC  54                 	db	84	;'T'
  1519  00BFFD  00                 	db	0
  1520  0000                     
  1521                           ; #config settings
  1522  00BFFE  00                 	db	0	; dummy byte at the end
  1523  0000                     
  1524                           	psect	cinit
  1525  0084B8                     __pcinit:
  1526                           	opt stack 0
  1527  0084B8                     start_initialization:
  1528                           	opt stack 0
  1529  0084B8                     __initialization:
  1530                           	opt stack 0
  1531                           
  1532                           ; Initialize objects allocated to BANK1 (37 bytes)
  1533                           ; load TBLPTR registers with __pidataBANK1
  1534  0084B8  0EB4               	movlw	low __pidataBANK1
  1535  0084BA  6EF6               	movwf	tblptrl,c
  1536  0084BC  0E9E               	movlw	high __pidataBANK1
  1537  0084BE  6EF7               	movwf	tblptrh,c
  1538  0084C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1539  0084C2  6EF8               	movwf	tblptru,c
  1540  0084C4  EE01  F0B3         	lfsr	0,__pdataBANK1
  1541  0084C8  EE10 F025          	lfsr	1,37
  1542  0084CC                     copy_data0:
  1543  0084CC  0009               	tblrd		*+
  1544  0084CE  CFF5 FFEE          	movff	tablat,postinc0
  1545  0084D2  50E5               	movf	postdec1,w,c
  1546  0084D4  50E1               	movf	fsr1l,w,c
  1547  0084D6  E1FA               	bnz	copy_data0
  1548                           
  1549                           ; Initialize objects allocated to BANK0 (1 bytes)
  1550                           ; load TBLPTR registers with __pidataBANK0
  1551  0084D8  0EDE               	movlw	low __pidataBANK0
  1552  0084DA  6EF6               	movwf	tblptrl,c
  1553  0084DC  0EA2               	movlw	high __pidataBANK0
  1554  0084DE  6EF7               	movwf	tblptrh,c
  1555  0084E0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1556  0084E2  6EF8               	movwf	tblptru,c
  1557  0084E4  0009               	tblrd		*+	;fetch initializer
  1558  0084E6  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1559                           
  1560                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1561  0084EA  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1562  0084EE  EE12 F000          	lfsr	1,512
  1563  0084F2                     clear_0:
  1564  0084F2  6AEE               	clrf	postinc0,c
  1565  0084F4  50E5               	movf	postdec1,w,c
  1566  0084F6  50E1               	movf	fsr1l,w,c
  1567  0084F8  E1FC               	bnz	clear_0
  1568  0084FA  50E2               	movf	fsr1h,w,c
  1569  0084FC  E1FA               	bnz	clear_0
  1570                           
  1571                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1572  0084FE  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1573  008502  EE14 F000          	lfsr	1,1024
  1574  008506                     clear_1:
  1575  008506  6AEE               	clrf	postinc0,c
  1576  008508  50E5               	movf	postdec1,w,c
  1577  00850A  50E1               	movf	fsr1l,w,c
  1578  00850C  E1FC               	bnz	clear_1
  1579  00850E  50E2               	movf	fsr1h,w,c
  1580  008510  E1FA               	bnz	clear_1
  1581                           
  1582                           ; Clear objects allocated to BANK3 (192 bytes)
  1583  008512  EE03  F000         	lfsr	0,__pbssBANK3
  1584  008516  0EC0               	movlw	192
  1585  008518                     clear_2:
  1586  008518  6AEE               	clrf	postinc0,c
  1587  00851A  06E8               	decf	wreg,f,c
  1588  00851C  E1FD               	bnz	clear_2
  1589                           
  1590                           ; Clear objects allocated to BANK2 (194 bytes)
  1591  00851E  EE02  F000         	lfsr	0,__pbssBANK2
  1592  008522  0EC2               	movlw	194
  1593  008524                     clear_3:
  1594  008524  6AEE               	clrf	postinc0,c
  1595  008526  06E8               	decf	wreg,f,c
  1596  008528  E1FD               	bnz	clear_3
  1597                           
  1598                           ; Clear objects allocated to BANK1 (179 bytes)
  1599  00852A  EE01  F000         	lfsr	0,__pbssBANK1
  1600  00852E  0EB3               	movlw	179
  1601  008530                     clear_4:
  1602  008530  6AEE               	clrf	postinc0,c
  1603  008532  06E8               	decf	wreg,f,c
  1604  008534  E1FD               	bnz	clear_4
  1605                           
  1606                           ; Clear objects allocated to BANK0 (58 bytes)
  1607  008536  EE00  F0C5         	lfsr	0,__pbssBANK0
  1608  00853A  0E3A               	movlw	58
  1609  00853C                     clear_5:
  1610  00853C  6AEE               	clrf	postinc0,c
  1611  00853E  06E8               	decf	wreg,f,c
  1612  008540  E1FD               	bnz	clear_5
  1613  008542                     end_of_initialization:
  1614                           	opt stack 0
  1615  008542                     __end_of__initialization:
  1616                           	opt stack 0
  1617  008542  0100               	movlb	0
  1618  008544  EF1D  F01F         	goto	_main	;jump to C main() function
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postdec1	equ	0xFE5
  1626                           fsr1h	equ	0xFE2
  1627                           fsr1l	equ	0xFE1
  1628                           
  1629                           	psect	bssBANK0
  1630  0000C5                     __pbssBANK0:
  1631                           	opt stack 0
  1632  0000C5                     _inPipes:
  1633                           	opt stack 0
  1634  0000C5                     	ds	6
  1635  0000CB                     _pBDTEntryIn:
  1636                           	opt stack 0
  1637  0000CB                     	ds	6
  1638  0000D1                     _hex_file_size:
  1639                           	opt stack 0
  1640  0000D1                     	ds	4
  1641  0000D5                     _hex_file_offset:
  1642                           	opt stack 0
  1643  0000D5                     	ds	4
  1644  0000D9                     _TransferLength:
  1645                           	opt stack 0
  1646  0000D9                     	ds	2
  1647  0000DB                     _USBMSDInHandle:
  1648                           	opt stack 0
  1649  0000DB                     	ds	2
  1650  0000DD                     _USBMSDOutHandle:
  1651                           	opt stack 0
  1652  0000DD                     	ds	2
  1653  0000DF                     _pBDTEntryEP0OutNext:
  1654                           	opt stack 0
  1655  0000DF                     	ds	2
  1656  0000E1                     _pBDTEntryEP0OutCurrent:
  1657                           	opt stack 0
  1658  0000E1                     	ds	2
  1659  0000E3                     _power_state:
  1660                           	opt stack 0
  1661  0000E3                     	ds	1
  1662  0000E4                     _userInterfaceStatus:
  1663                           	opt stack 0
  1664  0000E4                     	ds	1
  1665  0000E5                     _MSDHostNoData:
  1666                           	opt stack 0
  1667  0000E5                     	ds	1
  1668  0000E6                     _SoftDetach:
  1669                           	opt stack 0
  1670  0000E6                     	ds	1
  1671  0000E7                     _MSDRetryAttempt:
  1672                           	opt stack 0
  1673  0000E7                     	ds	1
  1674  0000E8                     _MSDWriteState:
  1675                           	opt stack 0
  1676  0000E8                     	ds	1
  1677  0000E9                     _MSDReadState:
  1678                           	opt stack 0
  1679  0000E9                     	ds	1
  1680  0000EA                     _MSDCommandState:
  1681                           	opt stack 0
  1682  0000EA                     	ds	1
  1683  0000EB                     _MSD_State:
  1684                           	opt stack 0
  1685  0000EB                     	ds	1
  1686  0000EC                     _USBDeferOUTDataStagePackets:
  1687                           	opt stack 0
  1688  0000EC                     	ds	1
  1689  0000ED                     _USBDeferINDataStagePackets:
  1690                           	opt stack 0
  1691  0000ED                     	ds	1
  1692  0000EE                     _USBStatusStageEnabledFlag2:
  1693                           	opt stack 0
  1694  0000EE                     	ds	1
  1695  0000EF                     _USBStatusStageEnabledFlag1:
  1696                           	opt stack 0
  1697  0000EF                     	ds	1
  1698  0000F0                     _USBDeferStatusStagePacket:
  1699                           	opt stack 0
  1700  0000F0                     	ds	1
  1701  0000F1                     _USBStatusStageTimeoutCounter:
  1702                           	opt stack 0
  1703  0000F1                     	ds	1
  1704  0000F2                     _BothEP0OutUOWNsSet:
  1705                           	opt stack 0
  1706  0000F2                     	ds	1
  1707  0000F3                     _endpoint_number:
  1708                           	opt stack 0
  1709  0000F3                     	ds	1
  1710  0000F4                     _USBBusIsSuspended:
  1711                           	opt stack 0
  1712  0000F4                     	ds	1
  1713  0000F5                     _RemoteWakeup:
  1714                           	opt stack 0
  1715  0000F5                     	ds	1
  1716  0000F6                     _controlTransferState:
  1717                           	opt stack 0
  1718  0000F6                     	ds	1
  1719  0000F7                     _shortPacketStatus:
  1720                           	opt stack 0
  1721  0000F7                     	ds	1
  1722  0000F8                     _USBDeviceState:
  1723                           	opt stack 0
  1724  0000F8                     	ds	1
  1725  0000F9                     _fast_read_cluster_number:
  1726                           	opt stack 0
  1727  0000F9                     	ds	2
  1728  0000FB                     _fast_read_cluster:
  1729                           	opt stack 0
  1730  0000FB                     	ds	2
  1731  0000FD                     _USTATcopy:
  1732                           	opt stack 0
  1733  0000FD                     	ds	1
  1734  0000FE                     _USBActiveConfiguration:
  1735                           	opt stack 0
  1736  0000FE                     	ds	1
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1h	equ	0xFE2
  1745                           fsr1l	equ	0xFE1
  1746                           
  1747                           	psect	dataBANK0
  1748  0000FF                     __pdataBANK0:
  1749                           	opt stack 0
  1750  0000FF                     _file_number:
  1751                           	opt stack 0
  1752  0000FF                     	ds	1
  1753                           tblptru	equ	0xFF8
  1754                           tblptrh	equ	0xFF7
  1755                           tblptrl	equ	0xFF6
  1756                           tablat	equ	0xFF5
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1h	equ	0xFE2
  1761                           fsr1l	equ	0xFE1
  1762                           
  1763                           	psect	bssBANK1
  1764  000100                     __pbssBANK1:
  1765                           	opt stack 0
  1766  000100                     _gblCBW:
  1767                           	opt stack 0
  1768  000100                     	ds	31
  1769  00011F                     _gblSenseData:
  1770                           	opt stack 0
  1771  00011F                     	ds	18
  1772  000131                     _os:
  1773                           	opt stack 0
  1774  000131                     	ds	13
  1775  00013E                     _outPipes:
  1776                           	opt stack 0
  1777  00013E                     	ds	8
  1778  000146                     _pBDTEntryOut:
  1779                           	opt stack 0
  1780  000146                     	ds	6
  1781  00014C                     _extended_linear_address:
  1782                           	opt stack 0
  1783  00014C                     	ds	4
  1784  000150                     _file_maximum_address:
  1785                           	opt stack 0
  1786  000150                     	ds	4
  1787  000154                     _file_minimum_address:
  1788                           	opt stack 0
  1789  000154                     	ds	4
  1790  000158                     _gblBLKLen:
  1791                           	opt stack 0
  1792  000158                     	ds	4
  1793  00015C                     _gblNumBLKS:
  1794                           	opt stack 0
  1795  00015C                     	ds	4
  1796  000160                     _LBA:
  1797                           	opt stack 0
  1798  000160                     	ds	4
  1799  000164                     _USB1msTickCount:
  1800                           	opt stack 0
  1801  000164                     	ds	4
  1802  000168                     _config_external:
  1803                           	opt stack 0
  1804  000168                     	ds	3
  1805  00016B                     _config_internal:
  1806                           	opt stack 0
  1807  00016B                     	ds	3
  1808  00016E                     _ep_data_out:
  1809                           	opt stack 0
  1810  00016E                     	ds	3
  1811  000171                     _ep_data_in:
  1812                           	opt stack 0
  1813  000171                     	ds	3
  1814  000174                     _FileAddress:
  1815                           	opt stack 0
  1816  000174                     	ds	2
  1817  000176                     _flash_pages_written:
  1818                           	opt stack 0
  1819  000176                     	ds	2
  1820  000178                     _total_hex_file_entries:
  1821                           	opt stack 0
  1822  000178                     	ds	2
  1823  00017A                     _hex_file_entries:
  1824                           	opt stack 0
  1825  00017A                     	ds	2
  1826  00017C                     _startup_timer:
  1827                           	opt stack 0
  1828  00017C                     	ds	2
  1829  00017E                     _system_ui_inactive_count:
  1830                           	opt stack 0
  1831  00017E                     	ds	2
  1832  000180                     _USBInHandle:
  1833                           	opt stack 0
  1834  000180                     	ds	2
  1835  000182                     _USBOutHandle:
  1836                           	opt stack 0
  1837  000182                     	ds	2
  1838  000184                     _gblMediaPresent:
  1839                           	opt stack 0
  1840  000184                     	ds	2
  1841  000186                     _MSBBufferIndex:
  1842                           	opt stack 0
  1843  000186                     	ds	2
  1844  000188                     _ptrNextData:
  1845                           	opt stack 0
  1846  000188                     	ds	2
  1847  00018A                     _pDst:
  1848                           	opt stack 0
  1849  00018A                     	ds	2
  1850  00018C                     _active_configuration:
  1851                           	opt stack 0
  1852  00018C                     	ds	1
  1853  00018D                     _start_from_byte_next:
  1854                           	opt stack 0
  1855  00018D                     	ds	1
  1856  00018E                     _last_error:
  1857                           	opt stack 0
  1858  00018E                     	ds	1
  1859  00018F                     _i2c_frequency:
  1860                           	opt stack 0
  1861  00018F                     	ds	1
  1862  000190                     _MSDCBWValid:
  1863                           	opt stack 0
  1864  000190                     	ds	1
  1865  000191                     _gblCBWLength:
  1866                           	opt stack 0
  1867  000191                     	ds	1
  1868  000192                     _USBTicksSinceSuspendEnd:
  1869                           	opt stack 0
  1870  000192                     	ds	1
  1871  000193                     _hex_file_entry:
  1872                           	opt stack 0
  1873  000193                     	ds	23
  1874  0001AA                     _mediaInformation:
  1875                           	opt stack 0
  1876  0001AA                     	ds	5
  1877  0001AF                     _USBAlternateInterface:
  1878                           	opt stack 0
  1879  0001AF                     	ds	2
  1880  0001B1                     _active_protocol:
  1881                           	opt stack 0
  1882  0001B1                     	ds	1
  1883  0001B2                     _idle_rate:
  1884                           	opt stack 0
  1885  0001B2                     	ds	1
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           
  1896                           	psect	dataBANK1
  1897  0001B3                     __pdataBANK1:
  1898                           	opt stack 0
  1899  0001B3                     _LUN:
  1900                           	opt stack 0
  1901  0001B3                     	ds	20
  1902  0001C7                     i2c_display_send_init_sequence@F6812:
  1903                           	opt stack 0
  1904  0001C7                     	ds	9
  1905  0001D0                     	ds	8
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           
  1916                           	psect	bssBANK2
  1917  000200                     __pbssBANK2:
  1918                           	opt stack 0
  1919  000200                     _display_content:
  1920                           	opt stack 0
  1921  000200                     	ds	80
  1922  000250                     _ReceivedDataBuffer:
  1923                           	opt stack 0
  1924  000250                     	ds	64
  1925  000290                     _file_buffer:
  1926                           	opt stack 0
  1927  000290                     	ds	50
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           fsr1h	equ	0xFE2
  1936                           fsr1l	equ	0xFE1
  1937                           
  1938                           	psect	bssBANK3
  1939  000300                     __pbssBANK3:
  1940                           	opt stack 0
  1941  000300                     __spi_external_rx_buffer:
  1942                           	opt stack 0
  1943  000300                     	ds	64
  1944  000340                     __spi_external_tx_buffer:
  1945                           	opt stack 0
  1946  000340                     	ds	64
  1947  000380                     _ToSendDataBuffer:
  1948                           	opt stack 0
  1949  000380                     	ds	64
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1h	equ	0xFE2
  1958                           fsr1l	equ	0xFE1
  1959                           
  1960                           	psect	bssBIGRAMlh
  1961  000800                     __pbssBIGRAMlh:
  1962                           	opt stack 0
  1963  000800                     _pageBuffer:
  1964                           	opt stack 0
  1965  000800                     	ds	1024
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1h	equ	0xFE2
  1974                           fsr1l	equ	0xFE1
  1975                           
  1976                           	psect	bssBIGRAMll
  1977  0003C0                     __pbssBIGRAMll:
  1978                           	opt stack 0
  1979  0003C0                     _buffer:
  1980                           	opt stack 0
  1981  0003C0                     	ds	512
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postdec1	equ	0xFE5
  1989                           fsr1h	equ	0xFE2
  1990                           fsr1l	equ	0xFE1
  1991                           
  1992                           	psect	cstackBANK0
  1993  000060                     __pcstackBANK0:
  1994                           	opt stack 0
  1995  000060                     fat_create_file@number_of_clusters:
  1996                           	opt stack 0
  1997  000060                     fat_read_from_file_fast@sector:
  1998                           	opt stack 0
  1999  000060                     fat_resize_file@old_number_of_clusters:
  2000                           	opt stack 0
  2001  000060                     fat_modify_file@sector:
  2002                           	opt stack 0
  2003  000060                     __parse_file_rename@data:
  2004                           	opt stack 0
  2005                           
  2006                           ; 2 bytes @ 0x0
  2007  000060                     	ds	2
  2008  000062                     fat_modify_file@file_number:
  2009                           	opt stack 0
  2010  000062                     fat_create_file@first_cluster:
  2011                           	opt stack 0
  2012  000062                     fat_read_from_file_fast@working_cluster:
  2013                           	opt stack 0
  2014  000062                     fat_resize_file@new_number_of_clusters:
  2015                           	opt stack 0
  2016  000062                     __parse_file_rename@out_buffer:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x2
  2020  000062                     	ds	1
  2021  000063                     fat_modify_file@cluster:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x3
  2025  000063                     	ds	1
  2026  000064                     fat_create_file@file_number:
  2027                           	opt stack 0
  2028  000064                     fat_read_from_file_fast@offset:
  2029                           	opt stack 0
  2030  000064                     fat_resize_file@first_cluster:
  2031                           	opt stack 0
  2032  000064                     __parse_file_rename@out_idx_ptr:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x4
  2036  000064                     	ds	1
  2037  000065                     fat_modify_file@return_code:
  2038                           	opt stack 0
  2039  000065                     fat_create_file@root_entry:
  2040                           	opt stack 0
  2041                           
  2042                           ; 32 bytes @ 0x5
  2043  000065                     	ds	1
  2044  000066                     fat_resize_file@file_number:
  2045                           	opt stack 0
  2046  000066                     __parse_file_rename@return_value:
  2047                           	opt stack 0
  2048  000066                     fat_read_from_file_fast@needed_cluster:
  2049                           	opt stack 0
  2050  000066                     fat_modify_file@offset:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x6
  2054  000066                     	ds	1
  2055  000067                     __parse_file_rename@file_number:
  2056                           	opt stack 0
  2057  000067                     fat_resize_file@root:
  2058                           	opt stack 0
  2059                           
  2060                           ; 32 bytes @ 0x7
  2061  000067                     	ds	1
  2062  000068                     fat_read_from_file_fast@read_length:
  2063                           	opt stack 0
  2064  000068                     fat_modify_file@number_of_bytes:
  2065                           	opt stack 0
  2066                           
  2067                           ; 2 bytes @ 0x8
  2068  000068                     	ds	2
  2069  00006A                     fat_read_from_file_fast@position:
  2070                           	opt stack 0
  2071  00006A                     fat_modify_file@position:
  2072                           	opt stack 0
  2073                           
  2074                           ; 4 bytes @ 0xA
  2075  00006A                     	ds	4
  2076  00006E                     ??__bootloader_verify_file:
  2077  00006E                     ??__bootloader_program:
  2078  00006E                     fat_read_from_file@start_byte:
  2079                           	opt stack 0
  2080  00006E                     fat_modify_file@root:
  2081                           	opt stack 0
  2082                           
  2083                           ; 32 bytes @ 0xE
  2084  00006E                     	ds	4
  2085  000072                     fat_read_from_file@length:
  2086                           	opt stack 0
  2087                           
  2088                           ; 4 bytes @ 0x12
  2089  000072                     	ds	4
  2090  000076                     fat_read_from_file@data:
  2091                           	opt stack 0
  2092  000076                     __bootloader_program@buffer:
  2093                           	opt stack 0
  2094  000076                     __bootloader_verify_file@root:
  2095                           	opt stack 0
  2096                           
  2097                           ; 32 bytes @ 0x16
  2098  000076                     	ds	2
  2099  000078                     fat_read_from_file@file_number:
  2100                           	opt stack 0
  2101  000078                     __bootloader_program@entry_page:
  2102                           	opt stack 0
  2103                           
  2104                           ; 2 bytes @ 0x18
  2105  000078                     	ds	1
  2106  000079                     fat_read_from_file@cluster:
  2107                           	opt stack 0
  2108                           
  2109                           ; 2 bytes @ 0x19
  2110  000079                     	ds	1
  2111  00007A                     __bootloader_program@address_within_page:
  2112                           	opt stack 0
  2113                           
  2114                           ; 2 bytes @ 0x1A
  2115  00007A                     	ds	1
  2116  00007B                     fat_read_from_file@cluster_number:
  2117                           	opt stack 0
  2118                           
  2119                           ; 2 bytes @ 0x1B
  2120  00007B                     	ds	1
  2121  00007C                     __bootloader_program@root:
  2122                           	opt stack 0
  2123                           
  2124                           ; 32 bytes @ 0x1C
  2125  00007C                     	ds	1
  2126  00007D                     fat_read_from_file@return_code:
  2127                           	opt stack 0
  2128                           
  2129                           ; 1 bytes @ 0x1D
  2130  00007D                     	ds	1
  2131  00007E                     fat_read_from_file@root:
  2132                           	opt stack 0
  2133                           
  2134                           ; 32 bytes @ 0x1E
  2135  00007E                     	ds	7
  2136  000085                     ??_fat_copy_file:
  2137  000085                     __parse_file_create@file_number:
  2138                           	opt stack 0
  2139                           
  2140                           ; 1 bytes @ 0x25
  2141  000085                     	ds	1
  2142  000086                     __parse_file_create@file_size:
  2143                           	opt stack 0
  2144                           
  2145                           ; 4 bytes @ 0x26
  2146  000086                     	ds	1
  2147  000087                     __parse_file_resize@return_value:
  2148                           	opt stack 0
  2149                           
  2150                           ; 1 bytes @ 0x27
  2151  000087                     	ds	1
  2152  000088                     __parse_file_resize@file_number:
  2153                           	opt stack 0
  2154                           
  2155                           ; 1 bytes @ 0x28
  2156  000088                     	ds	1
  2157  000089                     fat_copy_file@number_of_clusters:
  2158                           	opt stack 0
  2159  000089                     __parse_file_resize@file_size:
  2160                           	opt stack 0
  2161                           
  2162                           ; 4 bytes @ 0x29
  2163  000089                     	ds	2
  2164  00008B                     fat_copy_file@file_size:
  2165                           	opt stack 0
  2166                           
  2167                           ; 4 bytes @ 0x2B
  2168  00008B                     	ds	3
  2169  00008E                     __parse_file_modify@return_value:
  2170                           	opt stack 0
  2171  00008E                     fat_append_to_file@new_file_size:
  2172                           	opt stack 0
  2173                           
  2174                           ; 4 bytes @ 0x2E
  2175  00008E                     	ds	1
  2176  00008F                     fat_copy_file@new_file_number:
  2177                           	opt stack 0
  2178  00008F                     __parse_file_modify@file_number:
  2179                           	opt stack 0
  2180                           
  2181                           ; 1 bytes @ 0x2F
  2182  00008F                     	ds	1
  2183  000090                     fat_copy_file@return_value:
  2184                           	opt stack 0
  2185  000090                     __parse_file_modify@number_of_bytes:
  2186                           	opt stack 0
  2187                           
  2188                           ; 2 bytes @ 0x30
  2189  000090                     	ds	1
  2190  000091                     fat_copy_file@sector:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x31
  2194  000091                     	ds	1
  2195  000092                     fat_append_to_file@old_file_size:
  2196                           	opt stack 0
  2197  000092                     __parse_file_modify@start_byte:
  2198                           	opt stack 0
  2199                           
  2200                           ; 4 bytes @ 0x32
  2201  000092                     	ds	1
  2202  000093                     fat_copy_file@file_number:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x33
  2206  000093                     	ds	1
  2207  000094                     __parse_file_copy@data:
  2208                           	opt stack 0
  2209                           
  2210                           ; 2 bytes @ 0x34
  2211  000094                     	ds	2
  2212  000096                     fat_append_to_file@return_code:
  2213                           	opt stack 0
  2214  000096                     __bootloader_verify_file@rec_counter:
  2215                           	opt stack 0
  2216  000096                     __parse_file_copy@out_buffer:
  2217                           	opt stack 0
  2218                           
  2219                           ; 2 bytes @ 0x36
  2220  000096                     	ds	1
  2221  000097                     fat_append_to_file@file_number:
  2222                           	opt stack 0
  2223  000097                     __bootloader_verify_file@return_value:
  2224                           	opt stack 0
  2225                           
  2226                           ; 4 bytes @ 0x37
  2227  000097                     	ds	1
  2228  000098                     ??__parse_file_append:
  2229  000098                     __parse_file_copy@out_idx_ptr:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x38
  2233  000098                     	ds	1
  2234  000099                     __parse_file_append@return_value:
  2235                           	opt stack 0
  2236                           
  2237                           ; 1 bytes @ 0x39
  2238  000099                     	ds	1
  2239  00009A                     __parse_file_append@file_number:
  2240                           	opt stack 0
  2241                           
  2242                           ; 1 bytes @ 0x3A
  2243  00009A                     	ds	1
  2244  00009B                     __parse_file_append@number_of_bytes:
  2245                           	opt stack 0
  2246  00009B                     __bootloader_verify_file@address32:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x3B
  2250  00009B                     	ds	1
  2251  00009C                     __bootloader_program@return_value:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0x3C
  2255  00009C                     	ds	1
  2256  00009D                     __parse_command_long@data:
  2257                           	opt stack 0
  2258                           
  2259                           ; 2 bytes @ 0x3D
  2260  00009D                     	ds	1
  2261  00009E                     __fill_buffer_read_file@inBuffer:
  2262                           	opt stack 0
  2263                           
  2264                           ; 2 bytes @ 0x3E
  2265  00009E                     	ds	1
  2266  00009F                     __parse_command_long@out_buffer:
  2267                           	opt stack 0
  2268                           
  2269                           ; 2 bytes @ 0x3F
  2270  00009F                     	ds	1
  2271  0000A0                     __fill_buffer_read_file@outBuffer:
  2272                           	opt stack 0
  2273  0000A0                     __bootloader_program@address32:
  2274                           	opt stack 0
  2275                           
  2276                           ; 4 bytes @ 0x40
  2277  0000A0                     	ds	1
  2278  0000A1                     __parse_command_long@out_idx_ptr:
  2279                           	opt stack 0
  2280                           
  2281                           ; 2 bytes @ 0x41
  2282  0000A1                     	ds	1
  2283  0000A2                     ??__fill_buffer_read_file:
  2284                           
  2285                           ; 1 bytes @ 0x42
  2286  0000A2                     	ds	1
  2287  0000A3                     __parse_command_long@length:
  2288                           	opt stack 0
  2289                           
  2290                           ; 1 bytes @ 0x43
  2291  0000A3                     	ds	1
  2292  0000A4                     __bootloader_program@start_from_byte:
  2293                           	opt stack 0
  2294  0000A4                     api_parse@inBuffer:
  2295                           	opt stack 0
  2296                           
  2297                           ; 2 bytes @ 0x44
  2298  0000A4                     	ds	1
  2299  0000A5                     __bootloader_program@cntr:
  2300                           	opt stack 0
  2301                           
  2302                           ; 2 bytes @ 0x45
  2303  0000A5                     	ds	1
  2304  0000A6                     api_parse@receivedDataLength:
  2305                           	opt stack 0
  2306  0000A6                     __fill_buffer_read_file@file_size:
  2307                           	opt stack 0
  2308                           
  2309                           ; 4 bytes @ 0x46
  2310  0000A6                     	ds	1
  2311  0000A7                     __bootloader_program@page_to_write:
  2312                           	opt stack 0
  2313  0000A7                     api_parse@outBuffer:
  2314                           	opt stack 0
  2315                           
  2316                           ; 2 bytes @ 0x47
  2317  0000A7                     	ds	2
  2318  0000A9                     ??_api_parse:
  2319                           
  2320                           ; 1 bytes @ 0x49
  2321  0000A9                     	ds	1
  2322  0000AA                     __fill_buffer_read_file@data_length:
  2323                           	opt stack 0
  2324                           
  2325                           ; 4 bytes @ 0x4A
  2326  0000AA                     	ds	1
  2327  0000AB                     api_parse@out_idx_ptr:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0x4B
  2331  0000AB                     	ds	2
  2332  0000AD                     api_parse@in_idx:
  2333                           	opt stack 0
  2334                           
  2335                           ; 1 bytes @ 0x4D
  2336  0000AD                     	ds	1
  2337  0000AE                     api_parse@out_idx:
  2338                           	opt stack 0
  2339  0000AE                     __fill_buffer_read_file@start:
  2340                           	opt stack 0
  2341                           
  2342                           ; 4 bytes @ 0x4E
  2343  0000AE                     	ds	4
  2344  0000B2                     api_prepare@inBuffer:
  2345                           	opt stack 0
  2346                           
  2347                           ; 2 bytes @ 0x52
  2348  0000B2                     	ds	2
  2349  0000B4                     api_prepare@outBuffer:
  2350                           	opt stack 0
  2351                           
  2352                           ; 2 bytes @ 0x54
  2353  0000B4                     	ds	2
  2354  0000B6                     api_prepare@command:
  2355                           	opt stack 0
  2356                           
  2357                           ; 1 bytes @ 0x56
  2358  0000B6                     	ds	1
  2359  0000B7                     ??_APP_DeviceCustomHIDTasks:
  2360                           
  2361                           ; 1 bytes @ 0x57
  2362  0000B7                     	ds	4
  2363  0000BB                     ??_main:
  2364                           
  2365                           ; 1 bytes @ 0x5B
  2366  0000BB                     	ds	2
  2367  0000BD                     main@tx_start_addr:
  2368                           	opt stack 0
  2369                           
  2370                           ; 2 bytes @ 0x5D
  2371  0000BD                     	ds	2
  2372  0000BF                     main@bytes_transmitted:
  2373                           	opt stack 0
  2374                           
  2375                           ; 2 bytes @ 0x5F
  2376  0000BF                     	ds	2
  2377  0000C1                     main@rx_buffer:
  2378                           	opt stack 0
  2379                           
  2380                           ; 2 bytes @ 0x61
  2381  0000C1                     	ds	2
  2382  0000C3                     main@tx_buffer:
  2383                           	opt stack 0
  2384                           
  2385                           ; 2 bytes @ 0x63
  2386  0000C3                     	ds	2
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           
  2397                           	psect	cstackCOMRAM
  2398  000001                     __pcstackCOMRAM:
  2399                           	opt stack 0
  2400  000001                     ??_USBStdGetDscHandler:
  2401  000001                     ??_USBStdGetStatusHandler:
  2402  000001                     ??_system_delay_ms:
  2403  000001                     ??__i2c_wait_idle:
  2404  000001                     ??__display_clear:
  2405  000001                     ?_USBTransferOnePacket:
  2406                           	opt stack 0
  2407  000001                     ?_spi_get_external_rx_buffer:
  2408                           	opt stack 0
  2409  000001                     ?_spi_get_external_tx_buffer:
  2410                           	opt stack 0
  2411  000001                     ?_ExternalFlash_MediaInitialize:
  2412                           	opt stack 0
  2413  000001                     ?_ExternalFlash_SectorSizeRead:
  2414                           	opt stack 0
  2415  000001                     ?_bootloader_get_entries:
  2416                           	opt stack 0
  2417  000001                     ?_bootloader_get_total_entries:
  2418                           	opt stack 0
  2419  000001                     ?_bootloader_get_rec_address:
  2420                           	opt stack 0
  2421  000001                     ?_bootloader_get_flashPagesWritten:
  2422                           	opt stack 0
  2423  000001                     ?_strncmp:
  2424                           	opt stack 0
  2425  000001                     ?_internalFlash_pageFromAddress:
  2426                           	opt stack 0
  2427  000001                     ?_internalFlash_getBuffer:
  2428                           	opt stack 0
  2429  000001                     ?__sector_from_file_number:
  2430                           	opt stack 0
  2431  000001                     ?__offset_from_file_number:
  2432                           	opt stack 0
  2433  000001                     ?__data_sector_from_cluster:
  2434                           	opt stack 0
  2435  000001                     ?__fat_sector_from_cluster:
  2436                           	opt stack 0
  2437  000001                     ?__fat_offset_from_cluster:
  2438                           	opt stack 0
  2439  000001                     ?__cluster_from_sector_and_offset:
  2440                           	opt stack 0
  2441  000001                     ?__get_available_offset_from_buffer:
  2442                           	opt stack 0
  2443  000001                     ?__read_value_from_offset:
  2444                           	opt stack 0
  2445  000001                     ?__get_time:
  2446                           	opt stack 0
  2447  000001                     ?__get_date:
  2448                           	opt stack 0
  2449  000001                     ?_bootloader_get_rec_dataLength:
  2450                           	opt stack 0
  2451  000001                     ?___lwdiv:
  2452                           	opt stack 0
  2453  000001                     ?___lwmod:
  2454                           	opt stack 0
  2455  000001                     ?_ExternalFlash_CapacityRead:
  2456                           	opt stack 0
  2457  000001                     ?_bootloader_get_file_size:
  2458                           	opt stack 0
  2459  000001                     ?_internalFlash_addressFromPage:
  2460                           	opt stack 0
  2461  000001                     ?___lldiv:
  2462                           	opt stack 0
  2463  000001                     ?___llmod:
  2464                           	opt stack 0
  2465  000001                     USBTransferOnePacket@dir:
  2466                           	opt stack 0
  2467  000001                     USBStallEndpoint@dir:
  2468                           	opt stack 0
  2469  000001                     USBConfigureEndpoint@direction:
  2470                           	opt stack 0
  2471  000001                     USBCtrlTrfTxService@byteToSend:
  2472                           	opt stack 0
  2473  000001                     USBCtrlTrfRxService@i:
  2474                           	opt stack 0
  2475  000001                     __i2c_send@dat:
  2476                           	opt stack 0
  2477  000001                     i2c_set_frequency@frequency:
  2478                           	opt stack 0
  2479  000001                     display_get_character@position:
  2480                           	opt stack 0
  2481  000001                     __display_search@cntr:
  2482                           	opt stack 0
  2483  000001                     __display_rebooting@cntr:
  2484                           	opt stack 0
  2485  000001                     __display_suspended@cntr:
  2486                           	opt stack 0
  2487  000001                     hexCharToUint8@c:
  2488                           	opt stack 0
  2489  000001                     bootloader_get_rec_data@index:
  2490                           	opt stack 0
  2491  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2492                           	opt stack 0
  2493  000001                     spi_set_configuration@configuration:
  2494                           	opt stack 0
  2495  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2496                           	opt stack 0
  2497  000001                     SYSTEM_Initialize@pll_startup_counter:
  2498                           	opt stack 0
  2499  000001                     ExternalFlash_MediaInitialize@config:
  2500                           	opt stack 0
  2501  000001                     ExternalFlash_SectorSizeRead@config:
  2502                           	opt stack 0
  2503  000001                     ExternalFlash_CapacityRead@config:
  2504                           	opt stack 0
  2505  000001                     ExternalFlash_MediaDetect@config:
  2506                           	opt stack 0
  2507  000001                     ExternalFlash_WriteProtectStateGet@config:
  2508                           	opt stack 0
  2509  000001                     __data_sector_from_cluster@fat_cluster:
  2510                           	opt stack 0
  2511  000001                     __fat_sector_from_cluster@cluster:
  2512                           	opt stack 0
  2513  000001                     __fat_offset_from_cluster@cluster:
  2514                           	opt stack 0
  2515  000001                     __cluster_from_sector_and_offset@sector:
  2516                           	opt stack 0
  2517  000001                     __get_available_offset_from_buffer@minimum_offset:
  2518                           	opt stack 0
  2519  000001                     __read_value_from_offset@offset:
  2520                           	opt stack 0
  2521  000001                     __write_value_to_offset@offset:
  2522                           	opt stack 0
  2523  000001                     __get_mbr@idx:
  2524                           	opt stack 0
  2525  000001                     __get_fbr@idx:
  2526                           	opt stack 0
  2527  000001                     __get_fat@idx:
  2528                           	opt stack 0
  2529  000001                     __get_root@idx:
  2530                           	opt stack 0
  2531  000001                     __get_data@idx:
  2532                           	opt stack 0
  2533  000001                     internalFlash_addressFromPage@page:
  2534                           	opt stack 0
  2535  000001                     __fill_buffer_get_configuration@outBuffer:
  2536                           	opt stack 0
  2537  000001                     __parse_settings_spi_mode@data:
  2538                           	opt stack 0
  2539  000001                     __parse_settings_spi_frequency@data:
  2540                           	opt stack 0
  2541  000001                     __parse_settings_spi_polarity@data:
  2542                           	opt stack 0
  2543  000001                     __parse_settings_i2c_mode@data:
  2544                           	opt stack 0
  2545  000001                     __parse_settings_i2c_frequency@data:
  2546                           	opt stack 0
  2547  000001                     __parse_settings_i2c_slaveModeSlaveAddress@data:
  2548                           	opt stack 0
  2549  000001                     __parse_settings_i2c_masterModeSlaveAddress@data:
  2550                           	opt stack 0
  2551  000001                     spi_tx@data:
  2552                           	opt stack 0
  2553  000001                     spi_tx_tx@command:
  2554                           	opt stack 0
  2555  000001                     spi_tx_rx@command:
  2556                           	opt stack 0
  2557  000001                     ___lwdiv@dividend:
  2558                           	opt stack 0
  2559  000001                     ___lwmod@dividend:
  2560                           	opt stack 0
  2561  000001                     memcpy@d1:
  2562                           	opt stack 0
  2563  000001                     memset@p1:
  2564                           	opt stack 0
  2565  000001                     strncmp@s1:
  2566                           	opt stack 0
  2567  000001                     __spi_init@details:
  2568                           	opt stack 0
  2569  000001                     __bootloader_check_address@address:
  2570                           	opt stack 0
  2571  000001                     internalFlash_pageFromAddress@address:
  2572                           	opt stack 0
  2573  000001                     ___lldiv@dividend:
  2574                           	opt stack 0
  2575  000001                     ___llmod@dividend:
  2576                           	opt stack 0
  2577                           
  2578                           ; 4 bytes @ 0x0
  2579  000001                     	ds	1
  2580  000002                     ??_USBConfigureEndpoint:
  2581  000002                     ??_USBStallEndpoint:
  2582  000002                     ??_display_get_character:
  2583  000002                     USBCtrlTrfRxService@byteToRead:
  2584                           	opt stack 0
  2585  000002                     USBCtrlTrfInHandler@lastDTS:
  2586                           	opt stack 0
  2587  000002                     system_delay_ms@ms:
  2588                           	opt stack 0
  2589  000002                     hexCharToUint8@ascii:
  2590                           	opt stack 0
  2591  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2592                           	opt stack 0
  2593  000002                     USBTransferOnePacket@data:
  2594                           	opt stack 0
  2595  000002                     USBStdGetStatusHandler@p:
  2596                           	opt stack 0
  2597                           
  2598                           ; 2 bytes @ 0x1
  2599  000002                     	ds	1
  2600  000003                     ??_MSDComputeDeviceInAndResidue:
  2601  000003                     ??__get_mbr:
  2602  000003                     ??__get_fbr:
  2603  000003                     ??__get_fat:
  2604  000003                     ??__get_root:
  2605  000003                     ?_hexCharsToUint16:
  2606                           	opt stack 0
  2607  000003                     system_delay_ms@cntr:
  2608                           	opt stack 0
  2609  000003                     __display_clear@row:
  2610                           	opt stack 0
  2611  000003                     __sector_from_file_number@file_number:
  2612                           	opt stack 0
  2613  000003                     __offset_from_file_number@file_number:
  2614                           	opt stack 0
  2615  000003                     hexCharsToUint8@c2:
  2616                           	opt stack 0
  2617  000003                     hexCharsToUint16@c2:
  2618                           	opt stack 0
  2619  000003                     SYSTEM_Initialize@pll_startup_counter_3117:
  2620                           	opt stack 0
  2621  000003                     __cluster_from_sector_and_offset@offset:
  2622                           	opt stack 0
  2623  000003                     __get_available_offset_from_buffer@buffer:
  2624                           	opt stack 0
  2625  000003                     __read_value_from_offset@buffer:
  2626                           	opt stack 0
  2627  000003                     __write_value_to_offset@buffer:
  2628                           	opt stack 0
  2629  000003                     __parse_settings_spi_mode@out_buffer:
  2630                           	opt stack 0
  2631  000003                     __parse_settings_spi_frequency@out_buffer:
  2632                           	opt stack 0
  2633  000003                     __parse_settings_spi_polarity@out_buffer:
  2634                           	opt stack 0
  2635  000003                     __parse_settings_i2c_mode@out_buffer:
  2636                           	opt stack 0
  2637  000003                     __parse_settings_i2c_frequency@out_buffer:
  2638                           	opt stack 0
  2639  000003                     __parse_settings_i2c_slaveModeSlaveAddress@out_buffer:
  2640                           	opt stack 0
  2641  000003                     __parse_settings_i2c_masterModeSlaveAddress@out_buffer:
  2642                           	opt stack 0
  2643  000003                     spi_tx@length:
  2644                           	opt stack 0
  2645  000003                     spi_tx_tx@command_length:
  2646                           	opt stack 0
  2647  000003                     spi_tx_rx@command_length:
  2648                           	opt stack 0
  2649  000003                     ___lwdiv@divisor:
  2650                           	opt stack 0
  2651  000003                     ___lwmod@divisor:
  2652                           	opt stack 0
  2653  000003                     memset@c:
  2654                           	opt stack 0
  2655  000003                     strncmp@s2:
  2656                           	opt stack 0
  2657  000003                     memcpy@s1:
  2658                           	opt stack 0
  2659                           
  2660                           ; 3 bytes @ 0x2
  2661  000003                     	ds	1
  2662  000004                     ??_hexCharsToUint8:
  2663  000004                     USBTransferOnePacket@len:
  2664                           	opt stack 0
  2665  000004                     display_get_character@line:
  2666                           	opt stack 0
  2667  000004                     __display_clear@col:
  2668                           	opt stack 0
  2669  000004                     hexCharsToUint16@c3:
  2670                           	opt stack 0
  2671  000004                     spi_init@configuration:
  2672                           	opt stack 0
  2673  000004                     __sector_from_file_number@sector:
  2674                           	opt stack 0
  2675  000004                     __offset_from_file_number@offset:
  2676                           	opt stack 0
  2677                           
  2678                           ; 2 bytes @ 0x3
  2679  000004                     	ds	1
  2680  000005                     ??_USBTransferOnePacket:
  2681  000005                     ??_spi_tx:
  2682  000005                     ??_internalFlash_pageFromAddress:
  2683  000005                     ??__get_available_offset_from_buffer:
  2684  000005                     ??__read_value_from_offset:
  2685  000005                     SYSTEM_Initialize@state:
  2686                           	opt stack 0
  2687  000005                     hexCharsToUint8@c1:
  2688                           	opt stack 0
  2689  000005                     hexCharsToUint16@c4:
  2690                           	opt stack 0
  2691  000005                     __bootloader_check_address@dataLength:
  2692                           	opt stack 0
  2693  000005                     ___lwmod@counter:
  2694                           	opt stack 0
  2695  000005                     __write_value_to_offset@value:
  2696                           	opt stack 0
  2697  000005                     __fill_buffer_get_display@outBuffer:
  2698                           	opt stack 0
  2699  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2700                           	opt stack 0
  2701  000005                     __parse_settings_spi_mode@out_idx_ptr:
  2702                           	opt stack 0
  2703  000005                     __parse_settings_spi_frequency@out_idx_ptr:
  2704                           	opt stack 0
  2705  000005                     __parse_settings_spi_polarity@out_idx_ptr:
  2706                           	opt stack 0
  2707  000005                     __parse_settings_i2c_mode@out_idx_ptr:
  2708                           	opt stack 0
  2709  000005                     __parse_settings_i2c_frequency@out_idx_ptr:
  2710                           	opt stack 0
  2711  000005                     __parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr:
  2712                           	opt stack 0
  2713  000005                     __parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr:
  2714                           	opt stack 0
  2715  000005                     spi_tx_tx@data:
  2716                           	opt stack 0
  2717  000005                     spi_tx_rx@data:
  2718                           	opt stack 0
  2719  000005                     ___lwdiv@quotient:
  2720                           	opt stack 0
  2721  000005                     memset@n:
  2722                           	opt stack 0
  2723  000005                     strncmp@len:
  2724                           	opt stack 0
  2725  000005                     internalFlash_addressFromPage@address:
  2726                           	opt stack 0
  2727  000005                     ___lldiv@divisor:
  2728                           	opt stack 0
  2729  000005                     ___llmod@divisor:
  2730                           	opt stack 0
  2731                           
  2732                           ; 4 bytes @ 0x4
  2733  000005                     	ds	1
  2734  000006                     ??_hexCharsToUint16:
  2735  000006                     ??__bootloader_check_address:
  2736  000006                     USBStallEndpoint@ep:
  2737                           	opt stack 0
  2738  000006                     USBConfigureEndpoint@EPNum:
  2739                           	opt stack 0
  2740  000006                     hexCharsToUint8@retVal:
  2741                           	opt stack 0
  2742  000006                     __i2c_write@data:
  2743                           	opt stack 0
  2744  000006                     __i2c_read@data:
  2745                           	opt stack 0
  2746  000006                     i2c_display_write_fixed@data:
  2747                           	opt stack 0
  2748  000006                     memcpy@n:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x5
  2752  000006                     	ds	1
  2753  000007                     ??_strncmp:
  2754  000007                     ??__fill_buffer_get_bootloader_details:
  2755  000007                     ??__parse_settings_spi_mode:
  2756  000007                     ??__parse_settings_spi_frequency:
  2757  000007                     ??__parse_settings_spi_polarity:
  2758  000007                     ??__parse_settings_i2c_mode:
  2759  000007                     ??__parse_settings_i2c_frequency:
  2760  000007                     ??__parse_settings_i2c_slaveModeSlaveAddress:
  2761  000007                     ??__parse_settings_i2c_masterModeSlaveAddress:
  2762  000007                     ??__write_value_to_offset:
  2763  000007                     __fill_buffer_get_display@secondHalf:
  2764                           	opt stack 0
  2765  000007                     ___lwdiv@counter:
  2766                           	opt stack 0
  2767  000007                     USBStallEndpoint@p:
  2768                           	opt stack 0
  2769  000007                     USBConfigureEndpoint@handle:
  2770                           	opt stack 0
  2771  000007                     __get_available_offset_from_buffer@offset:
  2772                           	opt stack 0
  2773  000007                     spi_tx_tx@data_length:
  2774                           	opt stack 0
  2775  000007                     spi_tx_rx@data_length:
  2776                           	opt stack 0
  2777  000007                     memset@p:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0x6
  2781  000007                     	ds	1
  2782  000008                     ??__fill_buffer_get_display:
  2783  000008                     __i2c_write@length:
  2784                           	opt stack 0
  2785  000008                     __i2c_read@length:
  2786                           	opt stack 0
  2787  000008                     i2c_display_write_fixed@length:
  2788                           	opt stack 0
  2789  000008                     __read_value_from_offset@value:
  2790                           	opt stack 0
  2791  000008                     utoa@buf:
  2792                           	opt stack 0
  2793  000008                     memcpy@s:
  2794                           	opt stack 0
  2795                           
  2796                           ; 3 bytes @ 0x7
  2797  000008                     	ds	1
  2798  000009                     ??_spi_tx_rx:
  2799  000009                     ??_spi_tx_tx:
  2800  000009                     ??__i2c_read:
  2801  000009                     ?_internalFlash_addressWithinPage:
  2802                           	opt stack 0
  2803  000009                     USBDeviceInit@i:
  2804                           	opt stack 0
  2805  000009                     USBEnableEndpoint@options:
  2806                           	opt stack 0
  2807  000009                     USBTransferOnePacket@ep:
  2808                           	opt stack 0
  2809  000009                     MSDErrorHandler@ErrorCase:
  2810                           	opt stack 0
  2811  000009                     __i2c_write@slave_address:
  2812                           	opt stack 0
  2813  000009                     i2c_display_write_fixed@pos:
  2814                           	opt stack 0
  2815  000009                     __flash_wakeup@command:
  2816                           	opt stack 0
  2817  000009                     hexCharsToUint16@c1:
  2818                           	opt stack 0
  2819  000009                     ___llmod@counter:
  2820                           	opt stack 0
  2821  000009                     internalFlash_erasePage@page:
  2822                           	opt stack 0
  2823  000009                     internalFlash_writePage@page:
  2824                           	opt stack 0
  2825  000009                     internalFlash_addressWithinPage@address:
  2826                           	opt stack 0
  2827  000009                     ___lldiv@quotient:
  2828                           	opt stack 0
  2829                           
  2830                           ; 4 bytes @ 0x8
  2831  000009                     	ds	1
  2832  00000A                     MSDErrorHandler@OldMSD_State:
  2833                           	opt stack 0
  2834  00000A                     __i2c_write@cntr:
  2835                           	opt stack 0
  2836  00000A                     __bootloader_check_address@worst_case:
  2837                           	opt stack 0
  2838  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2839                           	opt stack 0
  2840  00000A                     USBEnableEndpoint@p:
  2841                           	opt stack 0
  2842  00000A                     USBTransferOnePacket@handle:
  2843                           	opt stack 0
  2844  00000A                     hexCharsToUint16@retVal:
  2845                           	opt stack 0
  2846  00000A                     utoa@val:
  2847                           	opt stack 0
  2848                           
  2849                           ; 2 bytes @ 0x9
  2850  00000A                     	ds	1
  2851  00000B                     ??_internalFlash_erasePage:
  2852  00000B                     ??_internalFlash_writePage:
  2853  00000B                     __ic2_display_set_address@address:
  2854                           	opt stack 0
  2855  00000B                     i2c_digipot_backlight@level:
  2856                           	opt stack 0
  2857  00000B                     __bootloader_check_address@byte_status:
  2858                           	opt stack 0
  2859  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2860                           	opt stack 0
  2861  00000B                     i2c_digipot_reset_on@data_array:
  2862                           	opt stack 0
  2863  00000B                     i2c_digipot_reset_off@data_array:
  2864                           	opt stack 0
  2865  00000B                     i2c_eeprom_writeByte@address:
  2866                           	opt stack 0
  2867  00000B                     memcpy@d:
  2868                           	opt stack 0
  2869  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2870                           	opt stack 0
  2871  00000B                     i2c_display_send_init_sequence@init_sequence:
  2872                           	opt stack 0
  2873                           
  2874                           ; 9 bytes @ 0xA
  2875  00000B                     	ds	1
  2876  00000C                     ??_USBMSDInit:
  2877  00000C                     ?_parseHexFileEntry:
  2878                           	opt stack 0
  2879  00000C                     USBEnableEndpoint@ep:
  2880                           	opt stack 0
  2881  00000C                     __bootloader_check_address@cntr:
  2882                           	opt stack 0
  2883  00000C                     _USBCheckMSDRequest$2319:
  2884                           	opt stack 0
  2885  00000C                     MSDTransferTerminated@handle:
  2886                           	opt stack 0
  2887  00000C                     __ic2_display_set_address@data_array:
  2888                           	opt stack 0
  2889  00000C                     i2c_digipot_backlight@data_array:
  2890                           	opt stack 0
  2891  00000C                     parseHexFileEntry@data:
  2892                           	opt stack 0
  2893  00000C                     utoa@base:
  2894                           	opt stack 0
  2895  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2896                           	opt stack 0
  2897                           
  2898                           ; 4 bytes @ 0xB
  2899  00000C                     	ds	1
  2900  00000D                     ?__flash_get_status:
  2901                           	opt stack 0
  2902  00000D                     i2c_eeprom_writeByte@data:
  2903                           	opt stack 0
  2904  00000D                     __fill_buffer_get_display@cntr:
  2905                           	opt stack 0
  2906  00000D                     ___lldiv@counter:
  2907                           	opt stack 0
  2908  00000D                     memcpy@tmp:
  2909                           	opt stack 0
  2910  00000D                     internalFlash_addressWithinPage@page:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0xC
  2914  00000D                     	ds	1
  2915  00000E                     ??_i2c_eeprom_writeByte:
  2916  00000E                     i2c_display_cursor@position:
  2917                           	opt stack 0
  2918  00000E                     __fill_buffer_get_display@line:
  2919                           	opt stack 0
  2920  00000E                     _USBCheckMSDRequest$2320:
  2921                           	opt stack 0
  2922  00000E                     _MSDTransferTerminated$2407:
  2923                           	opt stack 0
  2924  00000E                     utoa@v:
  2925                           	opt stack 0
  2926  00000E                     parseHexFileEntry@offset:
  2927                           	opt stack 0
  2928  00000E                     internalFlash_read@address:
  2929                           	opt stack 0
  2930                           
  2931                           ; 4 bytes @ 0xD
  2932  00000E                     	ds	1
  2933  00000F                     ??_internalFlash_addressWithinPage:
  2934  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2935                           	opt stack 0
  2936  00000F                     i2c_display_cursor@line:
  2937                           	opt stack 0
  2938  00000F                     __flash_get_status@command:
  2939                           	opt stack 0
  2940  00000F                     __fill_buffer_get_display@start_line:
  2941                           	opt stack 0
  2942  00000F                     internalFlash_writePage@cntr:
  2943                           	opt stack 0
  2944  00000F                     internalFlash_erasePage@address:
  2945                           	opt stack 0
  2946                           
  2947                           ; 4 bytes @ 0xE
  2948  00000F                     	ds	1
  2949  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2950                           	opt stack 0
  2951  000010                     __i2c_read@slave_address:
  2952                           	opt stack 0
  2953  000010                     i2c_display_cursor@address:
  2954                           	opt stack 0
  2955  000010                     __fill_buffer_get_display@position:
  2956                           	opt stack 0
  2957  000010                     utoa@c:
  2958                           	opt stack 0
  2959  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2960                           	opt stack 0
  2961  000010                     __flash_get_status@status:
  2962                           	opt stack 0
  2963  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2964                           	opt stack 0
  2965                           
  2966                           ; 2 bytes @ 0xF
  2967  000010                     	ds	1
  2968  000011                     MSDCheckForErrorCases@DeviceNoData:
  2969                           	opt stack 0
  2970  000011                     __i2c_read@cntr:
  2971                           	opt stack 0
  2972  000011                     internalFlash_writePage@block_cntr:
  2973                           	opt stack 0
  2974  000011                     i2c_eeprom_writeByte@dat:
  2975                           	opt stack 0
  2976  000011                     itoa@buf:
  2977                           	opt stack 0
  2978                           
  2979                           ; 2 bytes @ 0x10
  2980  000011                     	ds	1
  2981  000012                     internalFlash_writePage@byte_cntr:
  2982                           	opt stack 0
  2983  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2984                           	opt stack 0
  2985  000012                     i2c_eeprom_readByte@address:
  2986                           	opt stack 0
  2987  000012                     __flash_is_busy@status:
  2988                           	opt stack 0
  2989  000012                     parseHexFileEntry@hexEntry:
  2990                           	opt stack 0
  2991  000012                     internalFlash_read@data_length:
  2992                           	opt stack 0
  2993                           
  2994                           ; 2 bytes @ 0x11
  2995  000012                     	ds	1
  2996  000013                     i2c_eeprom_writeByte@slave_address:
  2997                           	opt stack 0
  2998  000013                     itoa@val:
  2999                           	opt stack 0
  3000  000013                     internalFlash_writePage@address:
  3001                           	opt stack 0
  3002  000013                     internalFlash_addressWithinPage@page_start_address:
  3003                           	opt stack 0
  3004                           
  3005                           ; 4 bytes @ 0x12
  3006  000013                     	ds	1
  3007  000014                     ??_i2c_eeprom_readByte:
  3008  000014                     ??_parseHexFileEntry:
  3009  000014                     flash_is_busy@result:
  3010                           	opt stack 0
  3011  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3012                           	opt stack 0
  3013  000014                     __flash_copy_page_to_buffer@page:
  3014                           	opt stack 0
  3015  000014                     __flash_compare_page_to_buffer@page:
  3016                           	opt stack 0
  3017  000014                     __flash_write_to_buffer@start:
  3018                           	opt stack 0
  3019  000014                     __flash_write_page_from_buffer@page:
  3020                           	opt stack 0
  3021  000014                     __flash_partial_read@page:
  3022                           	opt stack 0
  3023  000014                     __flash_buffer_read@start:
  3024                           	opt stack 0
  3025  000014                     internalFlash_read@buffer:
  3026                           	opt stack 0
  3027  000014                     __flash_set_page_size@command:
  3028                           	opt stack 0
  3029                           
  3030                           ; 4 bytes @ 0x13
  3031  000014                     	ds	1
  3032  000015                     __fill_buffer_get_status@outBuffer:
  3033                           	opt stack 0
  3034  000015                     itoa@base:
  3035                           	opt stack 0
  3036                           
  3037                           ; 2 bytes @ 0x14
  3038  000015                     	ds	1
  3039  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3040  000016                     __flash_copy_page_to_buffer@buffer:
  3041                           	opt stack 0
  3042  000016                     __flash_compare_page_to_buffer@buffer:
  3043                           	opt stack 0
  3044  000016                     __flash_write_page_from_buffer@buffer:
  3045                           	opt stack 0
  3046  000016                     __flash_write_to_buffer@data:
  3047                           	opt stack 0
  3048  000016                     __flash_partial_read@start:
  3049                           	opt stack 0
  3050  000016                     __flash_buffer_read@length:
  3051                           	opt stack 0
  3052  000016                     internalFlash_readPage@page:
  3053                           	opt stack 0
  3054                           
  3055                           ; 2 bytes @ 0x15
  3056  000016                     	ds	1
  3057  000017                     ??__flash_copy_page_to_buffer:
  3058  000017                     ??__flash_compare_page_to_buffer:
  3059  000017                     ??__flash_write_page_from_buffer:
  3060  000017                     i2c_eeprom_readByte@slave_address:
  3061                           	opt stack 0
  3062  000017                     itoa@cp:
  3063                           	opt stack 0
  3064                           
  3065                           ; 2 bytes @ 0x16
  3066  000017                     	ds	1
  3067  000018                     ??_USBStdFeatureReqHandler:
  3068  000018                     USBStdSetCfgHandler@i:
  3069                           	opt stack 0
  3070  000018                     i2c_eeprom_readByte@addr:
  3071                           	opt stack 0
  3072  000018                     __flash_set_page_size@size:
  3073                           	opt stack 0
  3074  000018                     __flash_write_to_buffer@data_length:
  3075                           	opt stack 0
  3076  000018                     __flash_partial_read@length:
  3077                           	opt stack 0
  3078  000018                     __flash_buffer_read@data:
  3079                           	opt stack 0
  3080  000018                     internalFlash_readPage@address:
  3081                           	opt stack 0
  3082                           
  3083                           ; 4 bytes @ 0x17
  3084  000018                     	ds	1
  3085  000019                     USBStdFeatureReqHandler@pUEP:
  3086                           	opt stack 0
  3087  000019                     __display_itoa_u16@value:
  3088                           	opt stack 0
  3089                           
  3090                           ; 2 bytes @ 0x18
  3091  000019                     	ds	1
  3092  00001A                     __flash_write_to_buffer@buffer:
  3093                           	opt stack 0
  3094  00001A                     __flash_buffer_read@buffer:
  3095                           	opt stack 0
  3096  00001A                     __flash_compare_page_to_buffer@status:
  3097                           	opt stack 0
  3098  00001A                     __flash_partial_read@data:
  3099                           	opt stack 0
  3100  00001A                     __flash_copy_page_to_buffer@command:
  3101                           	opt stack 0
  3102  00001A                     __flash_write_page_from_buffer@command:
  3103                           	opt stack 0
  3104                           
  3105                           ; 4 bytes @ 0x19
  3106  00001A                     	ds	1
  3107  00001B                     USBStdFeatureReqHandler@current_ep_data:
  3108                           	opt stack 0
  3109  00001B                     __display_itoa_u16@text:
  3110                           	opt stack 0
  3111  00001B                     __flash_write_to_buffer@command:
  3112                           	opt stack 0
  3113  00001B                     __flash_buffer_read@command:
  3114                           	opt stack 0
  3115                           
  3116                           ; 4 bytes @ 0x1A
  3117  00001B                     	ds	1
  3118  00001C                     ??__flash_partial_read:
  3119  00001C                     parseHexFileEntry@i:
  3120                           	opt stack 0
  3121  00001C                     USBStdFeatureReqHandler@p:
  3122                           	opt stack 0
  3123  00001C                     __flash_compare_page_to_buffer@command:
  3124                           	opt stack 0
  3125                           
  3126                           ; 4 bytes @ 0x1B
  3127  00001C                     	ds	1
  3128  00001D                     ??__display_verify:
  3129  00001D                     ??__display_checked:
  3130  00001D                     __display_start@cntr:
  3131                           	opt stack 0
  3132  00001D                     __display_programming@cntr:
  3133                           	opt stack 0
  3134  00001D                     __display_done@cntr:
  3135                           	opt stack 0
  3136  00001D                     __display_itoa_u32@value:
  3137                           	opt stack 0
  3138                           
  3139                           ; 4 bytes @ 0x1C
  3140  00001D                     	ds	1
  3141  00001E                     ??_USBCtrlEPService:
  3142  00001E                     flash_copy_page_to_buffer@page:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x1D
  3146  00001E                     	ds	1
  3147  00001F                     __display_verify@cntr:
  3148                           	opt stack 0
  3149  00001F                     __display_checked@start:
  3150                           	opt stack 0
  3151  00001F                     flash_read_from_buffer@start:
  3152                           	opt stack 0
  3153  00001F                     flash_write_to_buffer@start:
  3154                           	opt stack 0
  3155                           
  3156                           ; 2 bytes @ 0x1E
  3157  00001F                     	ds	1
  3158  000020                     USBDeviceTasks@i:
  3159                           	opt stack 0
  3160  000020                     __display_checked@cntr:
  3161                           	opt stack 0
  3162  000020                     flash_sector_write@page:
  3163                           	opt stack 0
  3164  000020                     flash_partial_write@page:
  3165                           	opt stack 0
  3166  000020                     __flash_partial_read@command:
  3167                           	opt stack 0
  3168                           
  3169                           ; 4 bytes @ 0x1F
  3170  000020                     	ds	1
  3171  000021                     __display_itoa_u32@text:
  3172                           	opt stack 0
  3173  000021                     flash_read_from_buffer@length:
  3174                           	opt stack 0
  3175  000021                     flash_write_to_buffer@length:
  3176                           	opt stack 0
  3177                           
  3178                           ; 2 bytes @ 0x20
  3179  000021                     	ds	1
  3180  000022                     flash_sector_write@data:
  3181                           	opt stack 0
  3182  000022                     flash_partial_write@start:
  3183                           	opt stack 0
  3184                           
  3185                           ; 2 bytes @ 0x21
  3186  000022                     	ds	1
  3187  000023                     ??__display_found:
  3188  000023                     __display_failed@cntr:
  3189                           	opt stack 0
  3190  000023                     flash_read_from_buffer@data:
  3191                           	opt stack 0
  3192  000023                     flash_write_to_buffer@data:
  3193                           	opt stack 0
  3194                           
  3195                           ; 2 bytes @ 0x22
  3196  000023                     	ds	1
  3197  000024                     flash_sector_write@match:
  3198                           	opt stack 0
  3199  000024                     flash_partial_write@length:
  3200                           	opt stack 0
  3201  000024                     __flash_partial_read@address:
  3202                           	opt stack 0
  3203                           
  3204                           ; 4 bytes @ 0x23
  3205  000024                     	ds	1
  3206  000025                     __display_found@start:
  3207                           	opt stack 0
  3208  000025                     ExternalFlash_SectorWrite@config:
  3209                           	opt stack 0
  3210  000025                     fat_format@cntr:
  3211                           	opt stack 0
  3212  000025                     fat_read_from_buffer@start:
  3213                           	opt stack 0
  3214  000025                     fat_write_to_buffer@start:
  3215                           	opt stack 0
  3216                           
  3217                           ; 2 bytes @ 0x24
  3218  000025                     	ds	1
  3219  000026                     __display_found@cntr:
  3220                           	opt stack 0
  3221  000026                     flash_partial_write@data:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0x25
  3225  000026                     	ds	1
  3226  000027                     ??_display_prepare:
  3227  000027                     fat_read_from_buffer@length:
  3228                           	opt stack 0
  3229  000027                     fat_write_to_buffer@length:
  3230                           	opt stack 0
  3231  000027                     __parse_format_drive@data:
  3232                           	opt stack 0
  3233  000027                     ExternalFlash_SectorWrite@sector_addr:
  3234                           	opt stack 0
  3235                           
  3236                           ; 4 bytes @ 0x26
  3237  000027                     	ds	1
  3238  000028                     flash_partial_write@match:
  3239                           	opt stack 0
  3240  000028                     flash_sector_read@page:
  3241                           	opt stack 0
  3242  000028                     flash_partial_read@page:
  3243                           	opt stack 0
  3244                           
  3245                           ; 2 bytes @ 0x27
  3246  000028                     	ds	1
  3247  000029                     display_prepare@mode:
  3248                           	opt stack 0
  3249  000029                     __write_root@data:
  3250                           	opt stack 0
  3251  000029                     __delete_root@sector:
  3252                           	opt stack 0
  3253  000029                     fat_read_from_buffer@data:
  3254                           	opt stack 0
  3255  000029                     fat_write_to_buffer@data:
  3256                           	opt stack 0
  3257  000029                     __parse_format_drive@out_buffer:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x28
  3261  000029                     	ds	1
  3262  00002A                     __parse_command_short@cmd:
  3263                           	opt stack 0
  3264  00002A                     flash_sector_read@data:
  3265                           	opt stack 0
  3266  00002A                     flash_partial_read@start:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x29
  3270  00002A                     	ds	1
  3271  00002B                     ExternalFlash_SectorWrite@buffer:
  3272                           	opt stack 0
  3273  00002B                     __write_root@sector:
  3274                           	opt stack 0
  3275  00002B                     __delete_root@offset:
  3276                           	opt stack 0
  3277  00002B                     __fill_buffer_read_buffer@inBuffer:
  3278                           	opt stack 0
  3279  00002B                     __parse_format_drive@out_idx_ptr:
  3280                           	opt stack 0
  3281  00002B                     __parse_write_buffer@data:
  3282                           	opt stack 0
  3283                           
  3284                           ; 2 bytes @ 0x2A
  3285  00002B                     	ds	1
  3286  00002C                     ??_fat_get_format_status:
  3287  00002C                     ?__get_available_cluster:
  3288                           	opt stack 0
  3289  00002C                     flash_partial_read@length:
  3290                           	opt stack 0
  3291  00002C                     ExternalFlash_SectorRead@config:
  3292                           	opt stack 0
  3293  00002C                     __get_available_cluster@first_sector:
  3294                           	opt stack 0
  3295  00002C                     fat_find_file@name:
  3296                           	opt stack 0
  3297                           
  3298                           ; 2 bytes @ 0x2B
  3299  00002C                     	ds	1
  3300  00002D                     ??__parse_format_drive:
  3301  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3302                           	opt stack 0
  3303  00002D                     __delete_root@deleted_value:
  3304                           	opt stack 0
  3305  00002D                     __write_root@offset:
  3306                           	opt stack 0
  3307  00002D                     __fill_buffer_read_buffer@outBuffer:
  3308                           	opt stack 0
  3309  00002D                     __parse_write_buffer@out_buffer:
  3310                           	opt stack 0
  3311                           
  3312                           ; 2 bytes @ 0x2C
  3313  00002D                     	ds	1
  3314  00002E                     __delete_root@file_number:
  3315                           	opt stack 0
  3316  00002E                     __parse_format_drive@return_value:
  3317                           	opt stack 0
  3318  00002E                     flash_partial_read@data:
  3319                           	opt stack 0
  3320  00002E                     ExternalFlash_SectorWrite@page:
  3321                           	opt stack 0
  3322  00002E                     __get_available_cluster@skip_sector:
  3323                           	opt stack 0
  3324  00002E                     fat_find_file@extension:
  3325                           	opt stack 0
  3326  00002E                     fat_get_format_status@cntr:
  3327                           	opt stack 0
  3328  00002E                     ExternalFlash_SectorRead@sector_addr:
  3329                           	opt stack 0
  3330                           
  3331                           ; 4 bytes @ 0x2D
  3332  00002E                     	ds	1
  3333  00002F                     ??__fill_buffer_read_buffer:
  3334  00002F                     __write_root@file_number:
  3335                           	opt stack 0
  3336  00002F                     __parse_write_buffer@out_idx_ptr:
  3337                           	opt stack 0
  3338                           
  3339                           ; 2 bytes @ 0x2E
  3340  00002F                     	ds	1
  3341  000030                     ??_MSDWriteHandler:
  3342  000030                     ??_fat_find_file:
  3343  000030                     ?__read_fat:
  3344                           	opt stack 0
  3345  000030                     ?__get_first_cluster:
  3346                           	opt stack 0
  3347  000030                     __get_available_cluster@cluster:
  3348                           	opt stack 0
  3349  000030                     __root_is_available@root_sector:
  3350                           	opt stack 0
  3351  000030                     __read_fat@cluster:
  3352                           	opt stack 0
  3353  000030                     fat_get_file_information@data:
  3354                           	opt stack 0
  3355                           
  3356                           ; 2 bytes @ 0x2F
  3357  000030                     	ds	1
  3358  000031                     ??__parse_write_buffer:
  3359  000031                     __fill_buffer_read_buffer@start:
  3360                           	opt stack 0
  3361                           
  3362                           ; 2 bytes @ 0x30
  3363  000031                     	ds	1
  3364  000032                     fat_find_file@file_number:
  3365                           	opt stack 0
  3366  000032                     ExternalFlash_SectorRead@buffer:
  3367                           	opt stack 0
  3368  000032                     __get_available_cluster@offset:
  3369                           	opt stack 0
  3370  000032                     __root_is_available@offset:
  3371                           	opt stack 0
  3372  000032                     __read_fat@sector:
  3373                           	opt stack 0
  3374  000032                     __get_first_cluster@sector:
  3375                           	opt stack 0
  3376  000032                     __parse_write_buffer@number_of_bytes:
  3377                           	opt stack 0
  3378                           
  3379                           ; 2 bytes @ 0x31
  3380  000032                     	ds	1
  3381  000033                     fat_find_file@sector:
  3382                           	opt stack 0
  3383  000033                     fat_get_file_information@root_sector:
  3384                           	opt stack 0
  3385  000033                     __fill_buffer_read_buffer@data_length:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x32
  3389  000033                     	ds	1
  3390  000034                     __root_is_available@file_number:
  3391                           	opt stack 0
  3392  000034                     ExternalFlash_SectorRead@page:
  3393                           	opt stack 0
  3394  000034                     __get_available_cluster@sector:
  3395                           	opt stack 0
  3396  000034                     __read_fat@offset:
  3397                           	opt stack 0
  3398  000034                     __get_first_cluster@offset:
  3399                           	opt stack 0
  3400  000034                     __parse_write_buffer@start_byte:
  3401                           	opt stack 0
  3402                           
  3403                           ; 2 bytes @ 0x33
  3404  000034                     	ds	1
  3405  000035                     __root_is_available@first_byte:
  3406                           	opt stack 0
  3407  000035                     fat_find_file@offset:
  3408                           	opt stack 0
  3409  000035                     fat_get_file_information@offset:
  3410                           	opt stack 0
  3411                           
  3412                           ; 2 bytes @ 0x34
  3413  000035                     	ds	1
  3414  000036                     ??_MSDReadHandler:
  3415  000036                     ?__make_cluster_chain:
  3416                           	opt stack 0
  3417  000036                     ?_fat_get_file_size:
  3418                           	opt stack 0
  3419  000036                     __get_available_root_entry@file_number:
  3420                           	opt stack 0
  3421  000036                     __make_cluster_chain@first_cluster:
  3422                           	opt stack 0
  3423  000036                     __read_fat@value:
  3424                           	opt stack 0
  3425  000036                     __get_first_cluster@first_cluster:
  3426                           	opt stack 0
  3427                           
  3428                           ; 2 bytes @ 0x35
  3429  000036                     	ds	1
  3430  000037                     fat_get_file_information@file_number:
  3431                           	opt stack 0
  3432  000037                     __fill_buffer_find_file@inBuffer:
  3433                           	opt stack 0
  3434                           
  3435                           ; 2 bytes @ 0x36
  3436  000037                     	ds	1
  3437  000038                     ?__find_nth_cluster:
  3438                           	opt stack 0
  3439  000038                     __get_first_cluster@file_number:
  3440                           	opt stack 0
  3441  000038                     __find_nth_cluster@cluster:
  3442                           	opt stack 0
  3443  000038                     __make_cluster_chain@number_of_clusters:
  3444                           	opt stack 0
  3445  000038                     fat_rename_file@name:
  3446                           	opt stack 0
  3447  000038                     __fill_buffer_get_file_details@inBuffer:
  3448                           	opt stack 0
  3449                           
  3450                           ; 2 bytes @ 0x37
  3451  000038                     	ds	1
  3452  000039                     __fill_buffer_find_file@outBuffer:
  3453                           	opt stack 0
  3454                           
  3455                           ; 2 bytes @ 0x38
  3456  000039                     	ds	1
  3457  00003A                     ??_MSDProcessCommandMediaPresent:
  3458  00003A                     ??__make_cluster_chain:
  3459  00003A                     __find_nth_cluster@n:
  3460                           	opt stack 0
  3461  00003A                     fat_get_file_size@sector:
  3462                           	opt stack 0
  3463  00003A                     fat_rename_file@extension:
  3464                           	opt stack 0
  3465  00003A                     __fill_buffer_get_file_details@outBuffer:
  3466                           	opt stack 0
  3467                           
  3468                           ; 2 bytes @ 0x39
  3469  00003A                     	ds	1
  3470  00003B                     ??__fill_buffer_find_file:
  3471                           
  3472                           ; 1 bytes @ 0x3A
  3473  00003B                     	ds	1
  3474  00003C                     ??__fill_buffer_get_file_details:
  3475  00003C                     fat_rename_file@file_number:
  3476                           	opt stack 0
  3477  00003C                     _MSDProcessCommandMediaPresent$2390:
  3478                           	opt stack 0
  3479  00003C                     __find_nth_cluster@offset:
  3480                           	opt stack 0
  3481  00003C                     __make_cluster_chain@next_offset:
  3482                           	opt stack 0
  3483  00003C                     fat_get_file_size@offset:
  3484                           	opt stack 0
  3485                           
  3486                           ; 2 bytes @ 0x3B
  3487  00003C                     	ds	1
  3488  00003D                     fat_rename_file@return_code:
  3489                           	opt stack 0
  3490  00003D                     __fill_buffer_get_file_details@file_number:
  3491                           	opt stack 0
  3492                           
  3493                           ; 1 bytes @ 0x3C
  3494  00003D                     	ds	1
  3495  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3496                           	opt stack 0
  3497  00003E                     __find_nth_cluster@sector_in_buffer:
  3498                           	opt stack 0
  3499  00003E                     __make_cluster_chain@minimum_sector:
  3500                           	opt stack 0
  3501  00003E                     fat_get_file_size@file_size:
  3502                           	opt stack 0
  3503  00003E                     fat_rename_file@root:
  3504                           	opt stack 0
  3505                           
  3506                           ; 32 bytes @ 0x3D
  3507  00003E                     	ds	1
  3508  00003F                     __fill_buffer_find_file@cntr:
  3509                           	opt stack 0
  3510  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3511                           	opt stack 0
  3512                           
  3513                           ; 4 bytes @ 0x3E
  3514  00003F                     	ds	1
  3515  000040                     __find_nth_cluster@sector:
  3516                           	opt stack 0
  3517  000040                     __make_cluster_chain@different_sector_cluster:
  3518                           	opt stack 0
  3519                           
  3520                           ; 2 bytes @ 0x3F
  3521  000040                     	ds	2
  3522  000042                     __make_cluster_chain@data_changed:
  3523                           	opt stack 0
  3524  000042                     fat_get_file_size@file_number:
  3525                           	opt stack 0
  3526  000042                     fat_read_from_file_fast@start_byte:
  3527                           	opt stack 0
  3528  000042                     fat_modify_file@start_byte:
  3529                           	opt stack 0
  3530                           
  3531                           ; 4 bytes @ 0x41
  3532  000042                     	ds	1
  3533  000043                     __make_cluster_chain@remaining_clusters:
  3534                           	opt stack 0
  3535  000043                     fat_copy_sector_to_buffer@sector:
  3536                           	opt stack 0
  3537  000043                     fat_write_sector_from_buffer@sector:
  3538                           	opt stack 0
  3539  000043                     MSDProcessCommandMediaPresent@capacity:
  3540                           	opt stack 0
  3541                           
  3542                           ; 4 bytes @ 0x42
  3543  000043                     	ds	2
  3544  000045                     ??_fat_copy_sector_to_buffer:
  3545  000045                     ??_fat_write_sector_from_buffer:
  3546  000045                     __make_cluster_chain@sector:
  3547                           	opt stack 0
  3548                           
  3549                           ; 2 bytes @ 0x44
  3550  000045                     	ds	1
  3551  000046                     fat_modify_file@length:
  3552                           	opt stack 0
  3553  000046                     fat_read_from_file_fast@length:
  3554                           	opt stack 0
  3555                           
  3556                           ; 4 bytes @ 0x45
  3557  000046                     	ds	1
  3558  000047                     MSDProcessCommandMediaPresent@i:
  3559                           	opt stack 0
  3560  000047                     __make_cluster_chain@sector_in_buffer:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x46
  3564  000047                     	ds	1
  3565  000048                     ??_MSDProcessCommand:
  3566  000048                     fat_modify_file@data:
  3567                           	opt stack 0
  3568                           
  3569                           ; 2 bytes @ 0x47
  3570  000048                     	ds	1
  3571  000049                     __make_cluster_chain@offset:
  3572                           	opt stack 0
  3573  000049                     fat_write_sector_from_buffer@cluster:
  3574                           	opt stack 0
  3575  000049                     fat_copy_sector_to_buffer@file_size:
  3576                           	opt stack 0
  3577                           
  3578                           ; 4 bytes @ 0x48
  3579  000049                     	ds	1
  3580  00004A                     ??_fat_modify_file:
  3581  00004A                     fat_read_from_file_fast@data:
  3582                           	opt stack 0
  3583                           
  3584                           ; 2 bytes @ 0x49
  3585  00004A                     	ds	1
  3586  00004B                     __make_cluster_chain@next_cluster:
  3587                           	opt stack 0
  3588  00004B                     fat_write_sector_from_buffer@file_size:
  3589                           	opt stack 0
  3590                           
  3591                           ; 4 bytes @ 0x4A
  3592  00004B                     	ds	1
  3593  00004C                     fat_read_from_file_fast@cluster:
  3594                           	opt stack 0
  3595                           
  3596                           ; 2 bytes @ 0x4B
  3597  00004C                     	ds	1
  3598  00004D                     ??_MSDTasks:
  3599  00004D                     fat_create_file@name:
  3600                           	opt stack 0
  3601  00004D                     fat_delete_file@first_cluster:
  3602                           	opt stack 0
  3603  00004D                     fat_copy_sector_to_buffer@number_of_clusters:
  3604                           	opt stack 0
  3605  00004D                     fat_resize_file@new_file_size:
  3606                           	opt stack 0
  3607                           
  3608                           ; 4 bytes @ 0x4C
  3609  00004D                     	ds	1
  3610  00004E                     _MSDTasks$2372:
  3611                           	opt stack 0
  3612  00004E                     fat_read_from_file_fast@cluster_number:
  3613                           	opt stack 0
  3614                           
  3615                           ; 2 bytes @ 0x4D
  3616  00004E                     	ds	1
  3617  00004F                     fat_delete_file@file_number:
  3618                           	opt stack 0
  3619  00004F                     fat_create_file@extension:
  3620                           	opt stack 0
  3621  00004F                     fat_copy_sector_to_buffer@physical_sector:
  3622                           	opt stack 0
  3623  00004F                     fat_write_sector_from_buffer@number_of_clusters:
  3624                           	opt stack 0
  3625                           
  3626                           ; 2 bytes @ 0x4E
  3627  00004F                     	ds	1
  3628  000050                     ??_fat_read_from_file_fast:
  3629  000050                     _MSDTasks$2373:
  3630                           	opt stack 0
  3631  000050                     __parse_file_delete@data:
  3632                           	opt stack 0
  3633                           
  3634                           ; 2 bytes @ 0x4F
  3635  000050                     	ds	1
  3636  000051                     ??_fat_resize_file:
  3637  000051                     fat_write_sector_from_buffer@file_number:
  3638                           	opt stack 0
  3639  000051                     fat_copy_sector_to_buffer@cluster:
  3640                           	opt stack 0
  3641  000051                     fat_create_file@size:
  3642                           	opt stack 0
  3643                           
  3644                           ; 4 bytes @ 0x50
  3645  000051                     	ds	1
  3646  000052                     MSDTasks@i:
  3647                           	opt stack 0
  3648  000052                     __parse_file_delete@out_buffer:
  3649                           	opt stack 0
  3650  000052                     __parse_buffer_to_sector@data:
  3651                           	opt stack 0
  3652                           
  3653                           ; 2 bytes @ 0x51
  3654  000052                     	ds	1
  3655  000053                     fat_copy_sector_to_buffer@file_number:
  3656                           	opt stack 0
  3657                           
  3658                           ; 1 bytes @ 0x52
  3659  000053                     	ds	1
  3660  000054                     __parse_file_delete@out_idx_ptr:
  3661                           	opt stack 0
  3662  000054                     __parse_sector_to_buffer@data:
  3663                           	opt stack 0
  3664  000054                     __parse_buffer_to_sector@out_buffer:
  3665                           	opt stack 0
  3666                           
  3667                           ; 2 bytes @ 0x53
  3668  000054                     	ds	1
  3669  000055                     ??_fat_create_file:
  3670  000055                     __parse_file_resize@data:
  3671                           	opt stack 0
  3672                           
  3673                           ; 2 bytes @ 0x54
  3674  000055                     	ds	1
  3675  000056                     ??__parse_file_delete:
  3676  000056                     fat_append_to_file@number_of_bytes:
  3677                           	opt stack 0
  3678  000056                     __parse_file_modify@data:
  3679                           	opt stack 0
  3680  000056                     __parse_sector_to_buffer@out_buffer:
  3681                           	opt stack 0
  3682  000056                     __parse_buffer_to_sector@out_idx_ptr:
  3683                           	opt stack 0
  3684                           
  3685                           ; 2 bytes @ 0x55
  3686  000056                     	ds	1
  3687  000057                     __parse_file_delete@return_value:
  3688                           	opt stack 0
  3689  000057                     __parse_file_resize@out_buffer:
  3690                           	opt stack 0
  3691                           
  3692                           ; 2 bytes @ 0x56
  3693  000057                     	ds	1
  3694  000058                     ??__parse_buffer_to_sector:
  3695  000058                     __parse_file_delete@file_number:
  3696                           	opt stack 0
  3697  000058                     fat_append_to_file@data:
  3698                           	opt stack 0
  3699  000058                     __parse_file_modify@out_buffer:
  3700                           	opt stack 0
  3701  000058                     __parse_sector_to_buffer@out_idx_ptr:
  3702                           	opt stack 0
  3703                           
  3704                           ; 2 bytes @ 0x57
  3705  000058                     	ds	1
  3706  000059                     __parse_buffer_to_sector@return_value:
  3707                           	opt stack 0
  3708  000059                     fat_copy_file@name:
  3709                           	opt stack 0
  3710  000059                     __parse_file_resize@out_idx_ptr:
  3711                           	opt stack 0
  3712  000059                     __parse_file_create@data:
  3713                           	opt stack 0
  3714                           
  3715                           ; 2 bytes @ 0x58
  3716  000059                     	ds	1
  3717  00005A                     ??__parse_sector_to_buffer:
  3718  00005A                     __parse_buffer_to_sector@file_number:
  3719                           	opt stack 0
  3720  00005A                     __parse_file_append@data:
  3721                           	opt stack 0
  3722  00005A                     __parse_file_modify@out_idx_ptr:
  3723                           	opt stack 0
  3724                           
  3725                           ; 2 bytes @ 0x59
  3726  00005A                     	ds	1
  3727  00005B                     ??__parse_file_resize:
  3728  00005B                     __parse_sector_to_buffer@file_number:
  3729                           	opt stack 0
  3730  00005B                     fat_copy_file@extension:
  3731                           	opt stack 0
  3732  00005B                     __parse_file_create@out_buffer:
  3733                           	opt stack 0
  3734  00005B                     __parse_buffer_to_sector@sector:
  3735                           	opt stack 0
  3736                           
  3737                           ; 2 bytes @ 0x5A
  3738  00005B                     	ds	1
  3739  00005C                     ??__parse_file_modify:
  3740  00005C                     ??_fat_read_from_file:
  3741  00005C                     bootloader_run@timeslot:
  3742                           	opt stack 0
  3743  00005C                     __parse_sector_to_buffer@return_value:
  3744                           	opt stack 0
  3745  00005C                     __parse_file_append@out_buffer:
  3746                           	opt stack 0
  3747                           
  3748                           ; 2 bytes @ 0x5B
  3749  00005C                     	ds	1
  3750  00005D                     ??__parse_file_copy:
  3751  00005D                     __parse_file_create@out_idx_ptr:
  3752                           	opt stack 0
  3753  00005D                     __parse_sector_to_buffer@sector:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0x5C
  3757  00005D                     	ds	1
  3758  00005E                     fat_rename_file@cntr:
  3759                           	opt stack 0
  3760  00005E                     __parse_file_copy@return_value:
  3761                           	opt stack 0
  3762  00005E                     __parse_file_append@out_idx_ptr:
  3763                           	opt stack 0
  3764                           
  3765                           ; 2 bytes @ 0x5D
  3766  00005E                     	ds	1
  3767  00005F                     ??__parse_file_create:
  3768  00005F                     ??__parse_file_rename:
  3769  00005F                     __parse_file_copy@file_number:
  3770                           	opt stack 0
  3771                           
  3772                           ; 1 bytes @ 0x5E
  3773  00005F                     	ds	1
  3774  000060                     tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           postdec1	equ	0xFE5
  3781                           fsr1h	equ	0xFE2
  3782                           fsr1l	equ	0xFE1
  3783                           
  3784                           ; 1 bytes @ 0x5F
  3785 ;;
  3786 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3787 ;;
  3788 ;; *************** function _main *****************
  3789 ;; Defined at:
  3790 ;;		line 56 in file "main.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  tx_buffer       2   99[BANK0 ] PTR unsigned char 
  3795 ;;		 -> _spi_external_tx_buffer(64), 
  3796 ;;  rx_buffer       2   97[BANK0 ] PTR unsigned char 
  3797 ;;		 -> _spi_external_rx_buffer(64), 
  3798 ;;  bytes_transm    2   95[BANK0 ] unsigned int 
  3799 ;;  tx_start_add    2   93[BANK0 ] unsigned int 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;Total ram usage:       10 bytes
  3814 ;; Hardware stack levels required when called:   13
  3815 ;; This function calls:
  3816 ;;		_APP_DeviceCustomHIDTasks
  3817 ;;		_APP_DeviceMSDTasks
  3818 ;;		_SYSTEM_Initialize
  3819 ;;		_USBDeviceInit
  3820 ;;		_USBDeviceTasks
  3821 ;;		__normal_mode
  3822 ;;		_api_parse
  3823 ;;		_api_prepare
  3824 ;;		_bootloader_run
  3825 ;;		_display_prepare
  3826 ;;		_display_update
  3827 ;;		_jump_to_main_program
  3828 ;;		_spi_get_external_rx_buffer
  3829 ;;		_spi_get_external_tx_buffer
  3830 ;;		_system_full_init
  3831 ;;		_system_minimal_init
  3832 ;;		_system_minimal_init_undo
  3833 ;;		_timer_pseudo_isr
  3834 ;;		_ui_get_status
  3835 ;;		_ui_run
  3836 ;; This function is called by:
  3837 ;;		Startup code after reset
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text0
  3842  003E3A                     __ptext0:
  3843                           	opt stack 0
  3844  003E3A                     _main:
  3845                           	opt stack 18
  3846                           
  3847                           ;incstack = 0
  3848  003E3A  0004               	clrwdt		;# 
  3849                           
  3850                           ;main.c: 67: rx_buffer = spi_get_external_rx_buffer();
  3851  003E3C  EC0C  F051         	call	_spi_get_external_rx_buffer	;wreg free
  3852  003E40  C001  F0C1         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3853  003E44  C002  F0C2         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3854                           
  3855                           ;main.c: 68: tx_buffer = spi_get_external_tx_buffer();
  3856  003E48  EC07  F051         	call	_spi_get_external_tx_buffer	;wreg free
  3857  003E4C  C001  F0C3         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3858  003E50  C002  F0C4         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3859                           
  3860                           ;main.c: 69: tx_start_addr = (uint16_t) tx_buffer;
  3861  003E54  C0C3  F0BD         	movff	main@tx_buffer,main@tx_start_addr
  3862  003E58  C0C4  F0BE         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3863                           
  3864                           ;main.c: 73: system_minimal_init();
  3865  003E5C  EC8C  F050         	call	_system_minimal_init	;wreg free
  3866                           
  3867                           ;main.c: 76: if(_normal_mode())
  3868  003E60  ECB8  F047         	call	__normal_mode	;wreg free
  3869  003E64  0900               	iorlw	0
  3870  003E66  B4D8               	btfsc	status,2,c
  3871  003E68  D004               	goto	l891
  3872                           
  3873                           ;main.c: 77: {;main.c: 79: system_minimal_init_undo();
  3874  003E6A  ECDB  F050         	call	_system_minimal_init_undo	;wreg free
  3875                           
  3876                           ;main.c: 80: jump_to_main_program();
  3877  003E6E  EC59  F051         	call	_jump_to_main_program	;wreg free
  3878  003E72                     l891:
  3879                           
  3880                           ;main.c: 81: };main.c: 85: system_full_init();
  3881  003E72  ECE7  F047         	call	_system_full_init	;wreg free
  3882                           
  3883                           ;main.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3884  003E76  0E00               	movlw	0
  3885  003E78  EC1F  F04A         	call	_SYSTEM_Initialize
  3886                           
  3887                           ;main.c: 90: USBDeviceInit();
  3888  003E7C  ECC6  F026         	call	_USBDeviceInit	;wreg free
  3889  003E80                     l892:
  3890  003E80  0004               	clrwdt		;# 
  3891                           
  3892                           ;main.c: 103: USBDeviceTasks();
  3893  003E82  EC5D  F01E         	call	_USBDeviceTasks	;wreg free
  3894                           
  3895                           ;main.c: 104: APP_DeviceMSDTasks();
  3896  003E86  ECB7  F050         	call	_APP_DeviceMSDTasks	;wreg free
  3897                           
  3898                           ;main.c: 105: APP_DeviceCustomHIDTasks();
  3899  003E8A  ECAD  F03C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3900                           
  3901                           ;main.c: 109: timer_pseudo_isr();
  3902  003E8E  EC3A  F04D         	call	_timer_pseudo_isr	;wreg free
  3903                           
  3904                           ;main.c: 112: if(PORTDbits.RD2)
  3905  003E92  A483               	btfss	3971,2,c	;volatile
  3906  003E94  D03D               	goto	l894
  3907                           
  3908                           ;main.c: 113: {;main.c: 116: bytes_transmitted = TXADDRH;
  3909  003E96  CF6A F0BF          	movff	3946,main@bytes_transmitted	;volatile
  3910  003E9A  0100               	movlb	0	; () banked
  3911  003E9C  6BC0               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;main.c: 117: bytes_transmitted <<= 8;
  3915  003E9E  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3916  003EA0  6FC0               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3917  003EA2  6BBF               	clrf	main@bytes_transmitted& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;main.c: 118: bytes_transmitted |= TXADDRL;
  3921  003EA4  506B               	movf	3947,w,c	;volatile
  3922  003EA6  13BF               	iorwf	main@bytes_transmitted& (0+255),f,b
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;main.c: 119: --bytes_transmitted;
  3926  003EA8  07BF               	decf	main@bytes_transmitted& (0+255),f,b
  3927  003EAA  A0D8               	btfss	status,0,c
  3928  003EAC  07C0               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;main.c: 120: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3932  003EAE  EC07  F051         	call	_spi_get_external_tx_buffer	;wreg free
  3933  003EB2  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3934  003EB4  0100               	movlb	0	; () banked
  3935  003EB6  5FBF               	subwf	main@bytes_transmitted& (0+255),f,b
  3936  003EB8  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3937  003EBA  5BC0               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;main.c: 123: if(bytes_transmitted>0)
  3941  003EBC  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3942  003EBE  11C0               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3943  003EC0  B4D8               	btfsc	status,2,c
  3944  003EC2  D026               	goto	l894
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;main.c: 124: {;main.c: 126: DMACON1bits.DMAEN = 0;
  3948  003EC4  9088               	bcf	3976,0,c	;volatile
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;main.c: 129: api_prepare(rx_buffer, tx_buffer);
  3952  003EC6  C0C1  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3953  003ECA  C0C2  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3954  003ECE  C0C3  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3955  003ED2  C0C4  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3956  003ED6  EC50  F021         	call	_api_prepare	;wreg free
  3957                           
  3958                           ;main.c: 130: api_parse(rx_buffer, (uint8_t) bytes_transmitted, tx_buffer);
  3959  003EDA  C0C1  F0A4         	movff	main@rx_buffer,api_parse@inBuffer
  3960  003EDE  C0C2  F0A5         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3961  003EE2  C0BF  F0A6         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3962  003EE6  C0C3  F0A7         	movff	main@tx_buffer,api_parse@outBuffer
  3963  003EEA  C0C4  F0A8         	movff	main@tx_buffer+1,api_parse@outBuffer+1
  3964  003EEE  ECB1  F028         	call	_api_parse	;wreg free
  3965                           
  3966                           ;main.c: 133: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3967  003EF2  0100               	movlb	0	; () banked
  3968  003EF4  51C4               	movf	(main@tx_buffer+1)& (0+255),w,b
  3969  003EF6  6E6A               	movwf	3946,c	;volatile
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;main.c: 134: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3973  003EF8  C0C3  FF6B         	movff	main@tx_buffer,3947	;volatile
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 137: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3977  003EFC  51C2               	movf	(main@rx_buffer+1)& (0+255),w,b
  3978  003EFE  6E68               	movwf	3944,c	;volatile
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;main.c: 138: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3982  003F00  C0C1  FF69         	movff	main@rx_buffer,3945	;volatile
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;main.c: 141: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3986  003F04  0E00               	movlw	0
  3987  003F06  6E66               	movwf	3942,c	;volatile
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;main.c: 142: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3991  003F08  0E3F               	movlw	63
  3992  003F0A  6E67               	movwf	3943,c	;volatile
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;main.c: 145: PIR3bits.SSP2IF = 0;
  3996  003F0C  9EA4               	bcf	4004,7,c	;volatile
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;main.c: 147: DMACON1bits.DMAEN = 1;
  4000  003F0E  8088               	bsf	3976,0,c	;volatile
  4001  003F10                     l894:
  4002                           
  4003                           ;main.c: 148: };main.c: 149: };main.c: 153: if(!os.done)
  4004                           
  4005                           ; BSR set to: 0
  4006                           
  4007                           ; BSR set to: 0
  4008  003F10  0101               	movlb	1	; () banked
  4009  003F12  5134               	movf	(_os+3)& (0+255),w,b
  4010  003F14  A4D8               	btfss	status,2,c
  4011  003F16  D7B4               	goto	l892
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;main.c: 154: {;main.c: 156: ui_run();
  4015  003F18  EC7D  F02E         	call	_ui_run	;wreg free
  4016                           
  4017                           ;main.c: 161: switch(os.timeSlot&0b00000111)
  4018  003F1C  D025               	goto	l896
  4019  003F1E                     
  4020                           ;main.c: 164: bootloader_run(0);
  4021  003F1E  0E00               	movlw	0
  4022  003F20  EC2B  F046         	call	_bootloader_run
  4023                           
  4024                           ;main.c: 165: break;
  4025  003F24  D044               	goto	l898
  4026  003F26                     
  4027                           ;main.c: 168: bootloader_run(1);
  4028  003F26  0E01               	movlw	1
  4029  003F28  EC2B  F046         	call	_bootloader_run
  4030                           
  4031                           ;main.c: 169: break;
  4032  003F2C  D040               	goto	l898
  4033  003F2E                     
  4034                           ;main.c: 172: bootloader_run(2);
  4035  003F2E  0E02               	movlw	2
  4036  003F30  EC2B  F046         	call	_bootloader_run
  4037                           
  4038                           ;main.c: 173: break;
  4039  003F34  D03C               	goto	l898
  4040  003F36                     
  4041                           ;main.c: 176: bootloader_run(3);
  4042  003F36  0E03               	movlw	3
  4043  003F38  EC2B  F046         	call	_bootloader_run
  4044                           
  4045                           ;main.c: 177: break;
  4046  003F3C  D038               	goto	l898
  4047  003F3E                     
  4048                           ;main.c: 180: bootloader_run(4);
  4049  003F3E  0E04               	movlw	4
  4050  003F40  EC2B  F046         	call	_bootloader_run
  4051                           
  4052                           ;main.c: 181: break;
  4053  003F44  D034               	goto	l898
  4054  003F46                     
  4055                           ;main.c: 184: bootloader_run(5);
  4056  003F46  0E05               	movlw	5
  4057  003F48  EC2B  F046         	call	_bootloader_run
  4058                           
  4059                           ;main.c: 185: break;
  4060  003F4C  D030               	goto	l898
  4061  003F4E                     
  4062                           ;main.c: 188: display_prepare(os.display_mode);
  4063  003F4E  0101               	movlb	1	; () banked
  4064  003F50  5136               	movf	(_os+5)& (0+255),w,b
  4065  003F52  ECF9  F034         	call	_display_prepare
  4066                           
  4067                           ;main.c: 189: break;
  4068  003F56  D02B               	goto	l898
  4069  003F58                     
  4070                           ;main.c: 192: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  4071  003F58  EC65  F051         	call	_ui_get_status	;wreg free
  4072  003F5C  0A05               	xorlw	5
  4073  003F5E  A4D8               	btfss	status,2,c
  4074  003F60  D026               	goto	l898
  4075                           
  4076                           ;main.c: 193: {;main.c: 194: display_update();
  4077  003F62  ECF6  F045         	call	_display_update	;wreg free
  4078                           
  4079                           ;main.c: 197: }
  4080                           
  4081                           ;main.c: 195: };main.c: 196: break;
  4082  003F66  D023               	goto	l898
  4083  003F68                     l896:
  4084  003F68  0101               	movlb	1	; () banked
  4085  003F6A  5133               	movf	(_os+2)& (0+255),w,b
  4086  003F6C  0B07               	andlw	7
  4087  003F6E  0100               	movlb	0	; () banked
  4088  003F70  6FBB               	movwf	??_main& (0+255),b
  4089  003F72  6BBC               	clrf	(??_main+1)& (0+255),b
  4090                           
  4091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4092                           ; Switch size 1, requested type "space"
  4093                           ; Number of cases is 1, Range of values is 0 to 0
  4094                           ; switch strategies available:
  4095                           ; Name         Instructions Cycles
  4096                           ; simple_byte            4     3 (average)
  4097                           ;	Chosen strategy is simple_byte
  4098  003F74  51BC               	movf	(??_main+1)& (0+255),w,b
  4099  003F76  0A00               	xorlw	0	; case 0
  4100  003F78  A4D8               	btfss	status,2,c
  4101  003F7A  D019               	goto	l898
  4102                           
  4103                           ; BSR set to: 0
  4104                           ; Switch size 1, requested type "space"
  4105                           ; Number of cases is 8, Range of values is 0 to 7
  4106                           ; switch strategies available:
  4107                           ; Name         Instructions Cycles
  4108                           ; simple_byte           25    13 (average)
  4109                           ;	Chosen strategy is simple_byte
  4110  003F7C  51BB               	movf	??_main& (0+255),w,b
  4111  003F7E  0A00               	xorlw	0	; case 0
  4112  003F80  B4D8               	btfsc	status,2,c
  4113  003F82  D7CD               	goto	l897
  4114  003F84  0A01               	xorlw	1	; case 1
  4115  003F86  B4D8               	btfsc	status,2,c
  4116  003F88  D7CE               	goto	l899
  4117  003F8A  0A03               	xorlw	3	; case 2
  4118  003F8C  B4D8               	btfsc	status,2,c
  4119  003F8E  D7CF               	goto	l900
  4120  003F90  0A01               	xorlw	1	; case 3
  4121  003F92  B4D8               	btfsc	status,2,c
  4122  003F94  D7D0               	goto	l901
  4123  003F96  0A07               	xorlw	7	; case 4
  4124  003F98  B4D8               	btfsc	status,2,c
  4125  003F9A  D7D1               	goto	l902
  4126  003F9C  0A01               	xorlw	1	; case 5
  4127  003F9E  B4D8               	btfsc	status,2,c
  4128  003FA0  D7D2               	goto	l903
  4129  003FA2  0A03               	xorlw	3	; case 6
  4130  003FA4  B4D8               	btfsc	status,2,c
  4131  003FA6  D7D3               	goto	l904
  4132  003FA8  0A01               	xorlw	1	; case 7
  4133  003FAA  B4D8               	btfsc	status,2,c
  4134  003FAC  D7D5               	goto	l905
  4135  003FAE                     l898:
  4136                           
  4137                           ;main.c: 198: os.done = 1;
  4138                           
  4139                           ; BSR set to: 0
  4140  003FAE  0E01               	movlw	1
  4141  003FB0  0101               	movlb	1	; () banked
  4142  003FB2  6F34               	movwf	(_os+3)& (0+255),b
  4143                           
  4144                           ; BSR set to: 1
  4145                           
  4146                           ; BSR set to: 1
  4147  003FB4  D765               	goto	l892
  4148  003FB6                     __end_of_main:
  4149                           	opt stack 0
  4150                           tblptru	equ	0xFF8
  4151                           tblptrh	equ	0xFF7
  4152                           tblptrl	equ	0xFF6
  4153                           tablat	equ	0xFF5
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           postdec1	equ	0xFE5
  4157                           fsr1h	equ	0xFE2
  4158                           fsr1l	equ	0xFE1
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function _ui_run *****************
  4162 ;; Defined at:
  4163 ;;		line 120 in file "ui.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    9
  4184 ;; This function calls:
  4185 ;;		__ui_encoder
  4186 ;;		_i2c_digipot_backlight
  4187 ;;		_i2c_digipot_reset_off
  4188 ;;		_i2c_digipot_reset_on
  4189 ;;		_i2c_display_send_init_sequence
  4190 ;;		_system_encoder_enable
  4191 ;;		_ui_init
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text1
  4198  005CFA                     __ptext1:
  4199                           	opt stack 0
  4200  005CFA                     _ui_run:
  4201                           	opt stack 21
  4202                           
  4203                           ;ui.c: 122: switch(userInterfaceStatus)
  4204                           
  4205                           ; BSR set to: 1
  4206                           ;incstack = 0
  4207  005CFA  D069               	goto	l1318
  4208  005CFC                     
  4209                           ;ui.c: 126: if (os.buttonCount!=0)
  4210  005CFC  0101               	movlb	1	; () banked
  4211  005CFE  5132               	movf	(_os+1)& (0+255),w,b
  4212  005D00  B4D8               	btfsc	status,2,c
  4213  005D02  0012               	return	
  4214                           
  4215                           ; BSR set to: 1
  4216                           ;ui.c: 127: {;ui.c: 128: ui_init();
  4217  005D04  ECAD  F050         	call	_ui_init	;wreg free
  4218                           
  4219                           ;ui.c: 129: os.buttonCount = 0;
  4220  005D08  0E00               	movlw	0
  4221  005D0A  0101               	movlb	1	; () banked
  4222  005D0C  6F32               	movwf	(_os+1)& (0+255),b
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;ui.c: 130: };ui.c: 131: break;
  4226  005D0E  0012               	return	
  4227  005D10                     l1322:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;ui.c: 135: LATDbits.LD0 = 0;
  4231  005D10  908C               	bcf	3980,0,c	;volatile
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;ui.c: 137: system_ui_inactive_count = 0;
  4235  005D12  0E00               	movlw	0
  4236  005D14  0101               	movlb	1	; () banked
  4237  005D16  6F7F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4238  005D18  0E00               	movlw	0
  4239  005D1A  6F7E               	movwf	_system_ui_inactive_count& (0+255),b
  4240                           
  4241                           ;ui.c: 138: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  4242  005D1C  0E02               	movlw	2
  4243  005D1E  0100               	movlb	0	; () banked
  4244  005D20  6FE4               	movwf	_userInterfaceStatus& (0+255),b
  4245                           
  4246                           ;ui.c: 139: break;
  4247  005D22  0012               	return	
  4248  005D24                     
  4249                           ; BSR set to: 0
  4250                           ;ui.c: 143: i2c_digipot_reset_on();
  4251                           
  4252                           ; BSR set to: 0
  4253  005D24  ECB5  F04F         	call	_i2c_digipot_reset_on	;wreg free
  4254                           
  4255                           ;ui.c: 145: system_ui_inactive_count = 0;
  4256  005D28  0E00               	movlw	0
  4257  005D2A  0101               	movlb	1	; () banked
  4258  005D2C  6F7F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4259  005D2E  0E00               	movlw	0
  4260  005D30  6F7E               	movwf	_system_ui_inactive_count& (0+255),b
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  4264  005D32  0E03               	movlw	3
  4265  005D34  0100               	movlb	0	; () banked
  4266  005D36  6FE4               	movwf	_userInterfaceStatus& (0+255),b
  4267                           
  4268                           ;ui.c: 147: break;
  4269  005D38  0012               	return	
  4270  005D3A                     
  4271                           ; BSR set to: 0
  4272                           ;ui.c: 150: ++system_ui_inactive_count;
  4273                           
  4274                           ; BSR set to: 0
  4275  005D3A  0101               	movlb	1	; () banked
  4276  005D3C  4B7E               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4277  005D3E  2B7F               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4278                           
  4279                           ; BSR set to: 1
  4280                           ;ui.c: 152: if (system_ui_inactive_count>3)
  4281  005D40  517F               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  4282  005D42  E104               	bnz	u14380
  4283  005D44  0E04               	movlw	4
  4284  005D46  5D7E               	subwf	_system_ui_inactive_count& (0+255),w,b
  4285  005D48  A0D8               	btfss	status,0,c
  4286  005D4A  0012               	return	
  4287  005D4C                     u14380:
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;ui.c: 153: {;ui.c: 154: i2c_digipot_reset_off();
  4291  005D4C  ECC6  F04F         	call	_i2c_digipot_reset_off	;wreg free
  4292                           
  4293                           ;ui.c: 155: system_ui_inactive_count = 0;
  4294  005D50  0E00               	movlw	0
  4295  005D52  0101               	movlb	1	; () banked
  4296  005D54  6F7F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4297  005D56  0E00               	movlw	0
  4298  005D58  6F7E               	movwf	_system_ui_inactive_count& (0+255),b
  4299                           
  4300                           ; BSR set to: 1
  4301                           ;ui.c: 156: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4302  005D5A  0E04               	movlw	4
  4303  005D5C  0100               	movlb	0	; () banked
  4304  005D5E  6FE4               	movwf	_userInterfaceStatus& (0+255),b
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;ui.c: 157: };ui.c: 158: break;
  4308  005D60  0012               	return	
  4309  005D62                     
  4310                           ; BSR set to: 0
  4311                           ;ui.c: 162: i2c_display_send_init_sequence();
  4312                           
  4313                           ; BSR set to: 0
  4314  005D62  EC63  F04E         	call	_i2c_display_send_init_sequence	;wreg free
  4315                           
  4316                           ;ui.c: 164: i2c_digipot_backlight(150);
  4317  005D66  0E96               	movlw	150
  4318  005D68  EC0E  F04F         	call	_i2c_digipot_backlight
  4319                           
  4320                           ;ui.c: 166: system_encoder_enable();
  4321  005D6C  ECD3  F050         	call	_system_encoder_enable	;wreg free
  4322                           
  4323                           ;ui.c: 168: system_ui_inactive_count = 0;
  4324  005D70  0E00               	movlw	0
  4325  005D72  0101               	movlb	1	; () banked
  4326  005D74  6F7F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4327  005D76  0E00               	movlw	0
  4328  005D78  6F7E               	movwf	_system_ui_inactive_count& (0+255),b
  4329                           
  4330                           ; BSR set to: 1
  4331                           ;ui.c: 169: startup_timer = 0;
  4332  005D7A  0E00               	movlw	0
  4333  005D7C  6F7D               	movwf	(_startup_timer+1)& (0+255),b
  4334  005D7E  0E00               	movlw	0
  4335  005D80  6F7C               	movwf	_startup_timer& (0+255),b
  4336                           
  4337                           ; BSR set to: 1
  4338                           ;ui.c: 170: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4339  005D82  0E05               	movlw	5
  4340  005D84  0100               	movlb	0	; () banked
  4341  005D86  6FE4               	movwf	_userInterfaceStatus& (0+255),b
  4342                           
  4343                           ;ui.c: 171: break;
  4344  005D88  0012               	return	
  4345  005D8A                     
  4346                           ; BSR set to: 0
  4347                           ;ui.c: 174: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  4348                           
  4349                           ; BSR set to: 0
  4350  005D8A  0101               	movlb	1	; () banked
  4351  005D8C  5136               	movf	(_os+5)& (0+255),w,b
  4352  005D8E  A4D8               	btfss	status,2,c
  4353  005D90  D009               	goto	l1329
  4354                           
  4355                           ; BSR set to: 1
  4356                           ;ui.c: 175: {;ui.c: 176: ++startup_timer;
  4357  005D92  4B7C               	infsnz	_startup_timer& (0+255),f,b
  4358  005D94  2B7D               	incf	(_startup_timer+1)& (0+255),f,b
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;ui.c: 177: if(startup_timer==250)
  4362  005D96  0EFA               	movlw	250
  4363  005D98  197C               	xorwf	_startup_timer& (0+255),w,b
  4364  005D9A  117D               	iorwf	(_startup_timer+1)& (0+255),w,b
  4365  005D9C  A4D8               	btfss	status,2,c
  4366  005D9E  D002               	goto	l1329
  4367                           
  4368                           ; BSR set to: 1
  4369                           ;ui.c: 178: {;ui.c: 179: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4370  005DA0  0E10               	movlw	16
  4371  005DA2  6F36               	movwf	(_os+5)& (0+255),b
  4372  005DA4                     l1329:
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;ui.c: 180: };ui.c: 181: };ui.c: 182: if (os.encoderCount==0 && os.buttonCount==0)
  4376                           
  4377                           ; BSR set to: 1
  4378  005DA4  5131               	movf	_os& (0+255),w,b
  4379  005DA6  A4D8               	btfss	status,2,c
  4380  005DA8  D00B               	goto	l1330
  4381                           
  4382                           ; BSR set to: 1
  4383  005DAA  5132               	movf	(_os+1)& (0+255),w,b
  4384  005DAC  A4D8               	btfss	status,2,c
  4385  005DAE  D008               	goto	l1330
  4386                           
  4387                           ; BSR set to: 1
  4388                           ;ui.c: 183: {;ui.c: 184: if(system_ui_inactive_count<0xFFFF)
  4389  005DB0  297E               	incf	_system_ui_inactive_count& (0+255),w,b
  4390  005DB2  E103               	bnz	u14430
  4391  005DB4  297F               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  4392  005DB6  B4D8               	btfsc	status,2,c
  4393  005DB8  0012               	return	
  4394  005DBA                     u14430:
  4395                           
  4396                           ; BSR set to: 1
  4397                           ;ui.c: 185: ++system_ui_inactive_count;
  4398  005DBA  4B7E               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4399  005DBC  2B7F               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;ui.c: 186: }
  4403  005DBE  0012               	return	
  4404  005DC0                     l1330:
  4405                           
  4406                           ; BSR set to: 1
  4407                           ;ui.c: 187: else;ui.c: 188: {;ui.c: 189: system_ui_inactive_count = 0;
  4408                           
  4409                           ; BSR set to: 1
  4410  005DC0  0E00               	movlw	0
  4411  005DC2  6F7F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4412  005DC4  0E00               	movlw	0
  4413  005DC6  6F7E               	movwf	_system_ui_inactive_count& (0+255),b
  4414                           
  4415                           ; BSR set to: 1
  4416                           ;ui.c: 190: _ui_encoder();
  4417  005DC8  EC7D  F02D         	call	__ui_encoder	;wreg free
  4418                           
  4419                           ;ui.c: 193: }
  4420                           
  4421                           ;ui.c: 191: };ui.c: 192: break;
  4422  005DCC  0012               	return	
  4423  005DCE                     l1318:
  4424  005DCE  0100               	movlb	0	; () banked
  4425  005DD0  51E4               	movf	_userInterfaceStatus& (0+255),w,b
  4426                           
  4427                           ; Switch size 1, requested type "space"
  4428                           ; Number of cases is 6, Range of values is 0 to 5
  4429                           ; switch strategies available:
  4430                           ; Name         Instructions Cycles
  4431                           ; simple_byte           19    10 (average)
  4432                           ;	Chosen strategy is simple_byte
  4433  005DD2  0A00               	xorlw	0	; case 0
  4434  005DD4  B4D8               	btfsc	status,2,c
  4435  005DD6  D792               	goto	l1319
  4436  005DD8  0A01               	xorlw	1	; case 1
  4437  005DDA  B4D8               	btfsc	status,2,c
  4438  005DDC  D799               	goto	l1322
  4439  005DDE  0A03               	xorlw	3	; case 2
  4440  005DE0  B4D8               	btfsc	status,2,c
  4441  005DE2  D7A0               	goto	l1323
  4442  005DE4  0A01               	xorlw	1	; case 3
  4443  005DE6  B4D8               	btfsc	status,2,c
  4444  005DE8  D7A8               	goto	l1324
  4445  005DEA  0A07               	xorlw	7	; case 4
  4446  005DEC  B4D8               	btfsc	status,2,c
  4447  005DEE  D7B9               	goto	l1326
  4448  005DF0  0A01               	xorlw	1	; case 5
  4449  005DF2  A4D8               	btfss	status,2,c
  4450  005DF4  0012               	return	
  4451  005DF6  D7C9               	goto	l1327
  4452  005DF8                     __end_of_ui_run:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function _system_encoder_enable *****************
  4466 ;; Defined at:
  4467 ;;		line 97 in file "os.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4485 ;;Total ram usage:        0 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_ui_run
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text2
  4495  00A1A6                     __ptext2:
  4496                           	opt stack 0
  4497  00A1A6                     _system_encoder_enable:
  4498                           	opt stack 29
  4499                           
  4500                           ;os.c: 100: INTCON3bits.INT2IF = 0;
  4501                           
  4502                           ;incstack = 0
  4503  00A1A6  92F0               	bcf	intcon3,1,c	;volatile
  4504                           
  4505                           ;os.c: 101: INTCON3bits.INT3IF = 0;
  4506  00A1A8  94F0               	bcf	intcon3,2,c	;volatile
  4507                           
  4508                           ;os.c: 104: os.encoderCount = 0;
  4509  00A1AA  0E00               	movlw	0
  4510  00A1AC  0101               	movlb	1	; () banked
  4511  00A1AE  6F31               	movwf	_os& (0+255),b
  4512                           
  4513                           ; BSR set to: 1
  4514                           ;os.c: 107: INTCON3bits.INT2IE = 1;
  4515  00A1B0  88F0               	bsf	intcon3,4,c	;volatile
  4516                           
  4517                           ; BSR set to: 1
  4518                           ;os.c: 108: INTCON3bits.INT3IE = 1;
  4519  00A1B2  8AF0               	bsf	intcon3,5,c	;volatile
  4520                           
  4521                           ; BSR set to: 1
  4522  00A1B4  0012               	return		;funcret
  4523  00A1B6                     __end_of_system_encoder_enable:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           intcon3	equ	0xFF0
  4530                           postinc0	equ	0xFEE
  4531                           wreg	equ	0xFE8
  4532                           postdec1	equ	0xFE5
  4533                           fsr1h	equ	0xFE2
  4534                           fsr1l	equ	0xFE1
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _i2c_display_send_init_sequence *****************
  4538 ;; Defined at:
  4539 ;;		line 215 in file "i2c.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4554 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;Total ram usage:        9 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    2
  4560 ;; This function calls:
  4561 ;;		__i2c_write
  4562 ;;		_i2c_set_frequency
  4563 ;; This function is called by:
  4564 ;;		_ui_run
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text3
  4569  009CC6                     __ptext3:
  4570                           	opt stack 0
  4571  009CC6                     _i2c_display_send_init_sequence:
  4572                           	opt stack 27
  4573                           
  4574                           ;i2c.c: 217: uint8_t init_sequence[9] = {;i2c.c: 218: 0x3A,;i2c.c: 220: 0b00011110,;i2c.
      +                          c: 221: 0x39,;i2c.c: 223: 0b00001100,;i2c.c: 224: 0x74,;i2c.c: 225: 0b1011100,;i2c.c: 22
      +                          6: 0x6d,;i2c.c: 227: 0x0c,;i2c.c: 228: 0x01;i2c.c: 229: };
  4575                           
  4576                           ; BSR set to: 1
  4577                           ;incstack = 0
  4578  009CC6  EE21  F0C7         	lfsr	2,i2c_display_send_init_sequence@F6812
  4579  009CCA  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4580  009CCE  0E08               	movlw	8
  4581  009CD0                     u13641:
  4582  009CD0  CFDB FFE3          	movff	plusw2,plusw1
  4583  009CD4  06E8               	decf	wreg,f,c
  4584  009CD6  E2FC               	bc	u13641
  4585                           
  4586                           ;i2c.c: 232: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4587  009CD8  0E00               	movlw	0
  4588  009CDA  ECA5  F04E         	call	_i2c_set_frequency
  4589                           
  4590                           ;i2c.c: 235: _i2c_write(0b01111000, &init_sequence[0], 9);
  4591  009CDE  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4592  009CE0  6E06               	movwf	__i2c_write@data,c
  4593  009CE2  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4594  009CE4  6E07               	movwf	__i2c_write@data+1,c
  4595  009CE6  0E09               	movlw	9
  4596  009CE8  6E08               	movwf	__i2c_write@length,c
  4597  009CEA  0E78               	movlw	120
  4598  009CEC  EC38  F04B         	call	__i2c_write
  4599  009CF0  0012               	return		;funcret
  4600  009CF2                     __end_of_i2c_display_send_init_sequence:
  4601                           	opt stack 0
  4602                           tblptru	equ	0xFF8
  4603                           tblptrh	equ	0xFF7
  4604                           tblptrl	equ	0xFF6
  4605                           tablat	equ	0xFF5
  4606                           intcon3	equ	0xFF0
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           postdec1	equ	0xFE5
  4610                           plusw1	equ	0xFE3
  4611                           fsr1h	equ	0xFE2
  4612                           fsr1l	equ	0xFE1
  4613                           plusw2	equ	0xFDB
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _i2c_digipot_reset_on *****************
  4617 ;; Defined at:
  4618 ;;		line 318 in file "i2c.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;Total ram usage:        2 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    2
  4639 ;; This function calls:
  4640 ;;		__i2c_write
  4641 ;;		_i2c_set_frequency
  4642 ;; This function is called by:
  4643 ;;		_ui_run
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text4
  4648  009F6A                     __ptext4:
  4649                           	opt stack 0
  4650  009F6A                     _i2c_digipot_reset_on:
  4651                           	opt stack 27
  4652                           
  4653                           ;i2c.c: 320: uint8_t data_array[2];;i2c.c: 321: data_array[0] = 0x10 | 0x00;
  4654                           
  4655                           ;incstack = 0
  4656  009F6A  0E10               	movlw	16
  4657  009F6C  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4658                           
  4659                           ;i2c.c: 323: data_array[1] = 0x00;
  4660  009F6E  0E00               	movlw	0
  4661  009F70  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4662                           
  4663                           ;i2c.c: 326: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4664  009F72  0E02               	movlw	2
  4665  009F74  ECA5  F04E         	call	_i2c_set_frequency
  4666                           
  4667                           ;i2c.c: 328: _i2c_write(0b01011100, &data_array[0], 2);
  4668  009F78  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4669  009F7A  6E06               	movwf	__i2c_write@data,c
  4670  009F7C  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4671  009F7E  6E07               	movwf	__i2c_write@data+1,c
  4672  009F80  0E02               	movlw	2
  4673  009F82  6E08               	movwf	__i2c_write@length,c
  4674  009F84  0E5C               	movlw	92
  4675  009F86  EC38  F04B         	call	__i2c_write
  4676  009F8A  0012               	return		;funcret
  4677  009F8C                     __end_of_i2c_digipot_reset_on:
  4678                           	opt stack 0
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           intcon3	equ	0xFF0
  4684                           postinc0	equ	0xFEE
  4685                           wreg	equ	0xFE8
  4686                           postdec1	equ	0xFE5
  4687                           plusw1	equ	0xFE3
  4688                           fsr1h	equ	0xFE2
  4689                           fsr1l	equ	0xFE1
  4690                           plusw2	equ	0xFDB
  4691                           status	equ	0xFD8
  4692                           
  4693 ;; *************** function _i2c_digipot_reset_off *****************
  4694 ;; Defined at:
  4695 ;;		line 331 in file "i2c.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    2
  4716 ;; This function calls:
  4717 ;;		__i2c_write
  4718 ;;		_i2c_set_frequency
  4719 ;; This function is called by:
  4720 ;;		_ui_run
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text5
  4725  009F8C                     __ptext5:
  4726                           	opt stack 0
  4727  009F8C                     _i2c_digipot_reset_off:
  4728                           	opt stack 27
  4729                           
  4730                           ;i2c.c: 333: uint8_t data_array[2];;i2c.c: 334: data_array[0] = 0x10 | 0x00;
  4731                           
  4732                           ;incstack = 0
  4733  009F8C  0E10               	movlw	16
  4734  009F8E  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4735                           
  4736                           ;i2c.c: 335: data_array[1] = 0x80;
  4737  009F90  0E80               	movlw	128
  4738  009F92  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4739                           
  4740                           ;i2c.c: 338: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4741  009F94  0E02               	movlw	2
  4742  009F96  ECA5  F04E         	call	_i2c_set_frequency
  4743                           
  4744                           ;i2c.c: 340: _i2c_write(0b01011100, &data_array[0], 2);
  4745  009F9A  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4746  009F9C  6E06               	movwf	__i2c_write@data,c
  4747  009F9E  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4748  009FA0  6E07               	movwf	__i2c_write@data+1,c
  4749  009FA2  0E02               	movlw	2
  4750  009FA4  6E08               	movwf	__i2c_write@length,c
  4751  009FA6  0E5C               	movlw	92
  4752  009FA8  EC38  F04B         	call	__i2c_write
  4753  009FAC  0012               	return		;funcret
  4754  009FAE                     __end_of_i2c_digipot_reset_off:
  4755                           	opt stack 0
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           intcon3	equ	0xFF0
  4761                           postinc0	equ	0xFEE
  4762                           wreg	equ	0xFE8
  4763                           postdec1	equ	0xFE5
  4764                           plusw1	equ	0xFE3
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           plusw2	equ	0xFDB
  4768                           status	equ	0xFD8
  4769                           
  4770 ;; *************** function _i2c_digipot_backlight *****************
  4771 ;; Defined at:
  4772 ;;		line 343 in file "i2c.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  level           1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  level           1   10[COMRAM] unsigned char 
  4777 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;Total ram usage:        3 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    2
  4794 ;; This function calls:
  4795 ;;		__i2c_write
  4796 ;;		_i2c_set_frequency
  4797 ;; This function is called by:
  4798 ;;		_ui_run
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text6
  4803  009E1C                     __ptext6:
  4804                           	opt stack 0
  4805  009E1C                     _i2c_digipot_backlight:
  4806                           	opt stack 27
  4807                           
  4808                           ;incstack = 0
  4809                           ;i2c_digipot_backlight@level stored from wreg
  4810  009E1C  6E0B               	movwf	i2c_digipot_backlight@level,c
  4811                           
  4812                           ;i2c.c: 345: uint8_t data_array[2];;i2c.c: 346: data_array[0] = 0x00 | 0x00;
  4813  009E1E  0E00               	movlw	0
  4814  009E20  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4815                           
  4816                           ;i2c.c: 347: data_array[1] = level>>1;
  4817  009E22  90D8               	bcf	status,0,c
  4818  009E24  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4819  009E26  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4820                           
  4821                           ;i2c.c: 350: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4822  009E28  0E02               	movlw	2
  4823  009E2A  ECA5  F04E         	call	_i2c_set_frequency
  4824                           
  4825                           ;i2c.c: 352: _i2c_write(0b01011100, &data_array[0], 2);
  4826  009E2E  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4827  009E30  6E06               	movwf	__i2c_write@data,c
  4828  009E32  0E00               	movlw	high i2c_digipot_backlight@data_array
  4829  009E34  6E07               	movwf	__i2c_write@data+1,c
  4830  009E36  0E02               	movlw	2
  4831  009E38  6E08               	movwf	__i2c_write@length,c
  4832  009E3A  0E5C               	movlw	92
  4833  009E3C  EC38  F04B         	call	__i2c_write
  4834  009E40  0012               	return		;funcret
  4835  009E42                     __end_of_i2c_digipot_backlight:
  4836                           	opt stack 0
  4837                           tblptru	equ	0xFF8
  4838                           tblptrh	equ	0xFF7
  4839                           tblptrl	equ	0xFF6
  4840                           tablat	equ	0xFF5
  4841                           intcon3	equ	0xFF0
  4842                           postinc0	equ	0xFEE
  4843                           wreg	equ	0xFE8
  4844                           postdec1	equ	0xFE5
  4845                           plusw1	equ	0xFE3
  4846                           fsr1h	equ	0xFE2
  4847                           fsr1l	equ	0xFE1
  4848                           plusw2	equ	0xFDB
  4849                           status	equ	0xFD8
  4850                           
  4851 ;; *************** function __ui_encoder *****************
  4852 ;; Defined at:
  4853 ;;		line 23 in file "ui.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    8
  4874 ;; This function calls:
  4875 ;;		_i2c_eeprom_writeByte
  4876 ;;		_reboot
  4877 ;;		_system_delay_ms
  4878 ;; This function is called by:
  4879 ;;		_ui_run
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text7
  4884  005AFA                     __ptext7:
  4885                           	opt stack 0
  4886  005AFA                     __ui_encoder:
  4887                           	opt stack 21
  4888                           
  4889                           ;ui.c: 25: switch(os.display_mode)
  4890                           
  4891                           ;incstack = 0
  4892  005AFA  D061               	goto	l1289
  4893  005AFC                     
  4894                           ;ui.c: 28: if(os.buttonCount>0)
  4895  005AFC  0101               	movlb	1	; () banked
  4896  005AFE  5132               	movf	(_os+1)& (0+255),w,b
  4897  005B00  0A80               	xorlw	128
  4898  005B02  0F7F               	addlw	-129
  4899  005B04  A0D8               	btfss	status,0,c
  4900  005B06  0012               	return	
  4901                           
  4902                           ; BSR set to: 1
  4903                           ;ui.c: 29: {;ui.c: 30: os.buttonCount = 0;
  4904  005B08  0E00               	movlw	0
  4905  005B0A  6F32               	movwf	(_os+1)& (0+255),b
  4906                           
  4907                           ; BSR set to: 1
  4908                           ;ui.c: 31: };ui.c: 32: break;
  4909  005B0C  0012               	return	
  4910  005B0E                     
  4911                           ; BSR set to: 1
  4912                           ;ui.c: 35: if(os.buttonCount>0)
  4913                           
  4914                           ; BSR set to: 1
  4915  005B0E  5132               	movf	(_os+1)& (0+255),w,b
  4916  005B10  0A80               	xorlw	128
  4917  005B12  0F7F               	addlw	-129
  4918  005B14  A0D8               	btfss	status,0,c
  4919  005B16  0012               	return	
  4920                           
  4921                           ; BSR set to: 1
  4922                           ;ui.c: 36: {;ui.c: 37: os.buttonCount = 0;
  4923  005B18  0E00               	movlw	0
  4924  005B1A  6F32               	movwf	(_os+1)& (0+255),b
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;ui.c: 38: };ui.c: 39: break;
  4928  005B1C  0012               	return	
  4929  005B1E                     
  4930                           ; BSR set to: 1
  4931                           ;ui.c: 42: if(os.buttonCount>0)
  4932                           
  4933                           ; BSR set to: 1
  4934  005B1E  5132               	movf	(_os+1)& (0+255),w,b
  4935  005B20  0A80               	xorlw	128
  4936  005B22  0F7F               	addlw	-129
  4937  005B24  A0D8               	btfss	status,0,c
  4938  005B26  0012               	return	
  4939                           
  4940                           ; BSR set to: 1
  4941                           ;ui.c: 43: {;ui.c: 44: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4942  005B28  0E30               	movlw	48
  4943  005B2A  6F35               	movwf	(_os+4)& (0+255),b
  4944                           
  4945                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4946  005B2C  0E30               	movlw	48
  4947  005B2E  6F36               	movwf	(_os+5)& (0+255),b
  4948                           
  4949                           ;ui.c: 46: os.buttonCount = 0;
  4950  005B30  0E00               	movlw	0
  4951  005B32  6F32               	movwf	(_os+1)& (0+255),b
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;ui.c: 47: };ui.c: 48: break;
  4955  005B34  0012               	return	
  4956  005B36                     
  4957                           ; BSR set to: 1
  4958                           ;ui.c: 51: if(os.buttonCount>0)
  4959                           
  4960                           ; BSR set to: 1
  4961  005B36  5132               	movf	(_os+1)& (0+255),w,b
  4962  005B38  0A80               	xorlw	128
  4963  005B3A  0F7F               	addlw	-129
  4964  005B3C  A0D8               	btfss	status,0,c
  4965  005B3E  0012               	return	
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;ui.c: 52: {;ui.c: 53: os.buttonCount = 0;
  4969  005B40  0E00               	movlw	0
  4970  005B42  6F32               	movwf	(_os+1)& (0+255),b
  4971                           
  4972                           ; BSR set to: 1
  4973                           ;ui.c: 54: };ui.c: 55: break;
  4974  005B44  0012               	return	
  4975  005B46                     
  4976                           ; BSR set to: 1
  4977                           ;ui.c: 58: if(os.buttonCount>0)
  4978                           
  4979                           ; BSR set to: 1
  4980  005B46  5132               	movf	(_os+1)& (0+255),w,b
  4981  005B48  0A80               	xorlw	128
  4982  005B4A  0F7F               	addlw	-129
  4983  005B4C  A0D8               	btfss	status,0,c
  4984  005B4E  0012               	return	
  4985                           
  4986                           ; BSR set to: 1
  4987                           ;ui.c: 59: {;ui.c: 60: os.buttonCount = 0;
  4988  005B50  0E00               	movlw	0
  4989  005B52  6F32               	movwf	(_os+1)& (0+255),b
  4990                           
  4991                           ; BSR set to: 1
  4992                           ;ui.c: 61: };ui.c: 62: break;
  4993  005B54  0012               	return	
  4994  005B56                     
  4995                           ; BSR set to: 1
  4996                           ;ui.c: 65: if(os.buttonCount>0)
  4997                           
  4998                           ; BSR set to: 1
  4999  005B56  5132               	movf	(_os+1)& (0+255),w,b
  5000  005B58  0A80               	xorlw	128
  5001  005B5A  0F7F               	addlw	-129
  5002  005B5C  A0D8               	btfss	status,0,c
  5003  005B5E  0012               	return	
  5004                           
  5005                           ; BSR set to: 1
  5006                           ;ui.c: 66: {;ui.c: 67: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  5007  005B60  0E60               	movlw	96
  5008  005B62  6F35               	movwf	(_os+4)& (0+255),b
  5009                           
  5010                           ;ui.c: 68: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  5011  005B64  0E60               	movlw	96
  5012  005B66  6F36               	movwf	(_os+5)& (0+255),b
  5013                           
  5014                           ;ui.c: 69: os.buttonCount = 0;
  5015  005B68  0E00               	movlw	0
  5016  005B6A  6F32               	movwf	(_os+1)& (0+255),b
  5017                           
  5018                           ; BSR set to: 1
  5019                           ;ui.c: 70: };ui.c: 71: break;
  5020  005B6C  0012               	return	
  5021  005B6E                     
  5022                           ; BSR set to: 1
  5023                           ;ui.c: 74: if(os.buttonCount>0)
  5024                           
  5025                           ; BSR set to: 1
  5026  005B6E  5132               	movf	(_os+1)& (0+255),w,b
  5027  005B70  0A80               	xorlw	128
  5028  005B72  0F7F               	addlw	-129
  5029  005B74  A0D8               	btfss	status,0,c
  5030  005B76  0012               	return	
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;ui.c: 75: {;ui.c: 76: os.buttonCount = 0;
  5034  005B78  0E00               	movlw	0
  5035  005B7A  6F32               	movwf	(_os+1)& (0+255),b
  5036                           
  5037                           ; BSR set to: 1
  5038                           ;ui.c: 77: };ui.c: 78: break;
  5039  005B7C  0012               	return	
  5040  005B7E                     
  5041                           ; BSR set to: 1
  5042                           ;ui.c: 81: if(os.buttonCount>0)
  5043                           
  5044                           ; BSR set to: 1
  5045  005B7E  5132               	movf	(_os+1)& (0+255),w,b
  5046  005B80  0A80               	xorlw	128
  5047  005B82  0F7F               	addlw	-129
  5048  005B84  A0D8               	btfss	status,0,c
  5049  005B86  0012               	return	
  5050                           
  5051                           ; BSR set to: 1
  5052                           ;ui.c: 82: {;ui.c: 83: i2c_eeprom_writeByte(0x100, 0x78);
  5053  005B88  0E01               	movlw	1
  5054  005B8A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  5055  005B8C  0E00               	movlw	0
  5056  005B8E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  5057  005B90  0E78               	movlw	120
  5058  005B92  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  5059  005B94  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
  5060                           
  5061                           ;ui.c: 84: system_delay_ms(10);
  5062  005B98  0E0A               	movlw	10
  5063  005B9A  EC7F  F04F         	call	_system_delay_ms
  5064                           
  5065                           ;ui.c: 85: reboot();
  5066  005B9E  EC5B  F050         	call	_reboot	;wreg free
  5067                           
  5068                           ;ui.c: 86: };ui.c: 87: break;
  5069  005BA2  0012               	return	
  5070  005BA4                     
  5071                           ;ui.c: 90: if(os.buttonCount>0)
  5072  005BA4  0101               	movlb	1	; () banked
  5073  005BA6  5132               	movf	(_os+1)& (0+255),w,b
  5074  005BA8  0A80               	xorlw	128
  5075  005BAA  0F7F               	addlw	-129
  5076  005BAC  A0D8               	btfss	status,0,c
  5077  005BAE  0012               	return	
  5078                           
  5079                           ; BSR set to: 1
  5080                           ;ui.c: 91: {;ui.c: 92: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5081  005BB0  0E10               	movlw	16
  5082  005BB2  6F35               	movwf	(_os+4)& (0+255),b
  5083                           
  5084                           ;ui.c: 93: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  5085  005BB4  0E10               	movlw	16
  5086  005BB6  6F36               	movwf	(_os+5)& (0+255),b
  5087                           
  5088                           ;ui.c: 94: os.buttonCount = 0;
  5089  005BB8  0E00               	movlw	0
  5090  005BBA  6F32               	movwf	(_os+1)& (0+255),b
  5091                           
  5092                           ; BSR set to: 1
  5093                           ;ui.c: 97: }
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;ui.c: 95: };ui.c: 96: break;
  5097  005BBC  0012               	return	
  5098  005BBE                     l1289:
  5099                           
  5100                           ; BSR set to: 1
  5101  005BBE  0101               	movlb	1	; () banked
  5102  005BC0  5136               	movf	(_os+5)& (0+255),w,b
  5103                           
  5104                           ; Switch size 1, requested type "space"
  5105                           ; Number of cases is 9, Range of values is 0 to 144
  5106                           ; switch strategies available:
  5107                           ; Name         Instructions Cycles
  5108                           ; simple_byte           28    15 (average)
  5109                           ;	Chosen strategy is simple_byte
  5110  005BC2  0A00               	xorlw	0	; case 0
  5111  005BC4  B4D8               	btfsc	status,2,c
  5112  005BC6  D79A               	goto	l1290
  5113  005BC8  0A10               	xorlw	16	; case 16
  5114  005BCA  B4D8               	btfsc	status,2,c
  5115  005BCC  D7A0               	goto	l1293
  5116  005BCE  0A30               	xorlw	48	; case 32
  5117  005BD0  B4D8               	btfsc	status,2,c
  5118  005BD2  D7A5               	goto	l1295
  5119  005BD4  0A10               	xorlw	16	; case 48
  5120  005BD6  B4D8               	btfsc	status,2,c
  5121  005BD8  D7AE               	goto	l1297
  5122  005BDA  0A70               	xorlw	112	; case 64
  5123  005BDC  B4D8               	btfsc	status,2,c
  5124  005BDE  D7BB               	goto	l1301
  5125  005BE0  0A10               	xorlw	16	; case 80
  5126  005BE2  B4D8               	btfsc	status,2,c
  5127  005BE4  D7B0               	goto	l1299
  5128  005BE6  0A30               	xorlw	48	; case 96
  5129  005BE8  B4D8               	btfsc	status,2,c
  5130  005BEA  D7C1               	goto	l1303
  5131  005BEC  0A10               	xorlw	16	; case 112
  5132  005BEE  B4D8               	btfsc	status,2,c
  5133  005BF0  D7C6               	goto	l1305
  5134  005BF2  0AE0               	xorlw	224	; case 144
  5135  005BF4  A4D8               	btfss	status,2,c
  5136  005BF6  0012               	return	
  5137  005BF8  D7D5               	goto	l1307
  5138  005BFA                     __end_of__ui_encoder:
  5139                           	opt stack 0
  5140                           tblptru	equ	0xFF8
  5141                           tblptrh	equ	0xFF7
  5142                           tblptrl	equ	0xFF6
  5143                           tablat	equ	0xFF5
  5144                           intcon3	equ	0xFF0
  5145                           postinc0	equ	0xFEE
  5146                           wreg	equ	0xFE8
  5147                           postdec1	equ	0xFE5
  5148                           plusw1	equ	0xFE3
  5149                           fsr1h	equ	0xFE2
  5150                           fsr1l	equ	0xFE1
  5151                           plusw2	equ	0xFDB
  5152                           status	equ	0xFD8
  5153                           
  5154 ;; *************** function _timer_pseudo_isr *****************
  5155 ;; Defined at:
  5156 ;;		line 20 in file "os.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;		None
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;		None
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;Total ram usage:        0 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text8
  5184  009A74                     __ptext8:
  5185                           	opt stack 0
  5186  009A74                     _timer_pseudo_isr:
  5187                           	opt stack 30
  5188                           
  5189                           ;os.c: 23: if(INTCONbits.T0IF==0)
  5190                           
  5191                           ;incstack = 0
  5192  009A74  A4F2               	btfss	intcon,2,c	;volatile
  5193  009A76  0012               	return	
  5194                           
  5195                           ;os.c: 26: };os.c: 30: TMR0H = 0xD1;
  5196                           
  5197                           ;os.c: 24: {;os.c: 25: return;
  5198  009A78  0ED1               	movlw	209
  5199  009A7A  6ED7               	movwf	4055,c	;volatile
  5200                           
  5201                           ;os.c: 31: TMR0L = 0x20;
  5202  009A7C  0E20               	movlw	32
  5203  009A7E  6ED6               	movwf	4054,c	;volatile
  5204                           
  5205                           ;os.c: 32: ++os.timeSlot;
  5206  009A80  0101               	movlb	1	; () banked
  5207  009A82  2B33               	incf	(_os+2)& (0+255),f,b
  5208                           
  5209                           ; BSR set to: 1
  5210                           ;os.c: 34: os.done = 0;
  5211  009A84  0E00               	movlw	0
  5212  009A86  6F34               	movwf	(_os+3)& (0+255),b
  5213                           
  5214                           ; BSR set to: 1
  5215                           ;os.c: 35: INTCONbits.T0IF = 0;
  5216  009A88  94F2               	bcf	intcon,2,c	;volatile
  5217                           
  5218                           ; BSR set to: 1
  5219                           ;os.c: 38: if(INTCON3bits.INT1IF)
  5220  009A8A  A0F0               	btfss	intcon3,0,c	;volatile
  5221  009A8C  D002               	goto	l1079
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;os.c: 39: {;os.c: 40: ++os.buttonCount;
  5225  009A8E  2B32               	incf	(_os+1)& (0+255),f,b
  5226                           
  5227                           ; BSR set to: 1
  5228                           ;os.c: 41: INTCON3bits.INT1IF = 0;
  5229  009A90  90F0               	bcf	intcon3,0,c	;volatile
  5230  009A92                     l1079:
  5231                           
  5232                           ; BSR set to: 1
  5233                           ;os.c: 42: };os.c: 45: if(INTCON3bits.INT2IF)
  5234                           
  5235                           ; BSR set to: 1
  5236  009A92  A2F0               	btfss	intcon3,1,c	;volatile
  5237  009A94  D003               	goto	l1080
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;os.c: 46: {;os.c: 47: if(!PORTBbits.RB6)
  5241  009A96  AC81               	btfss	3969,6,c	;volatile
  5242                           
  5243                           ; BSR set to: 1
  5244                           ;os.c: 48: {;os.c: 49: --os.encoderCount;
  5245  009A98  0731               	decf	_os& (0+255),f,b
  5246                           
  5247                           ; BSR set to: 1
  5248                           ;os.c: 50: };os.c: 51: INTCON3bits.INT2IF = 0;
  5249                           
  5250                           ; BSR set to: 1
  5251  009A9A  92F0               	bcf	intcon3,1,c	;volatile
  5252  009A9C                     l1080:
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;os.c: 52: };os.c: 53: if(INTCON3bits.INT3IF)
  5256                           
  5257                           ; BSR set to: 1
  5258  009A9C  A4F0               	btfss	intcon3,2,c	;volatile
  5259  009A9E  0012               	return	
  5260                           
  5261                           ; BSR set to: 1
  5262                           ;os.c: 54: {;os.c: 55: if(!PORTBbits.RB7)
  5263  009AA0  AE81               	btfss	3969,7,c	;volatile
  5264                           
  5265                           ; BSR set to: 1
  5266                           ;os.c: 56: {;os.c: 57: ++os.encoderCount;
  5267  009AA2  2B31               	incf	_os& (0+255),f,b
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;os.c: 58: };os.c: 59: INTCON3bits.INT3IF = 0;
  5271                           
  5272                           ; BSR set to: 1
  5273  009AA4  94F0               	bcf	intcon3,2,c	;volatile
  5274  009AA6  0012               	return	
  5275  009AA8                     __end_of_timer_pseudo_isr:
  5276                           	opt stack 0
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           intcon	equ	0xFF2
  5282                           intcon3	equ	0xFF0
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           postdec1	equ	0xFE5
  5286                           plusw1	equ	0xFE3
  5287                           fsr1h	equ	0xFE2
  5288                           fsr1l	equ	0xFE1
  5289                           plusw2	equ	0xFDB
  5290                           status	equ	0xFD8
  5291                           
  5292 ;; *************** function _system_minimal_init_undo *****************
  5293 ;; Defined at:
  5294 ;;		line 158 in file "os.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    1
  5315 ;; This function calls:
  5316 ;;		_i2c_reset
  5317 ;; This function is called by:
  5318 ;;		_main
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text9
  5323  00A1B6                     __ptext9:
  5324                           	opt stack 0
  5325  00A1B6                     _system_minimal_init_undo:
  5326                           	opt stack 29
  5327                           
  5328                           ;os.c: 161: i2c_reset();
  5329                           
  5330                           ;incstack = 0
  5331  00A1B6  ECF3  F050         	call	_i2c_reset	;wreg free
  5332                           
  5333                           ;os.c: 164: TRISAbits.TRISA0 = 1;
  5334  00A1BA  8092               	bsf	3986,0,c	;volatile
  5335                           
  5336                           ;os.c: 165: ANCON0bits.PCFG0 = 0;
  5337  00A1BC  010F               	movlb	15	; () banked
  5338  00A1BE  9148               	bcf	72,0,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;os.c: 168: LATCbits.LC2 = 0;
  5342  00A1C0  948B               	bcf	3979,2,c	;volatile
  5343                           
  5344                           ; BSR set to: 15
  5345                           ;os.c: 169: TRISCbits.TRISC2 = 1;
  5346  00A1C2  8494               	bsf	3988,2,c	;volatile
  5347                           
  5348                           ; BSR set to: 15
  5349  00A1C4  0012               	return		;funcret
  5350  00A1C6                     __end_of_system_minimal_init_undo:
  5351                           	opt stack 0
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           intcon	equ	0xFF2
  5357                           intcon3	equ	0xFF0
  5358                           postinc0	equ	0xFEE
  5359                           wreg	equ	0xFE8
  5360                           postdec1	equ	0xFE5
  5361                           plusw1	equ	0xFE3
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           plusw2	equ	0xFDB
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _i2c_reset *****************
  5368 ;; Defined at:
  5369 ;;		line 118 in file "i2c.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_system_minimal_init_undo
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text10
  5397  00A1E6                     __ptext10:
  5398                           	opt stack 0
  5399  00A1E6                     _i2c_reset:
  5400                           	opt stack 29
  5401                           
  5402                           ;i2c.c: 120: SSP1STATbits.SMP = 0;
  5403                           
  5404                           ; BSR set to: 15
  5405                           ;incstack = 0
  5406  00A1E6  9EC7               	bcf	4039,7,c	;volatile
  5407                           
  5408                           ;i2c.c: 121: SSP1STATbits.CKE = 0;
  5409  00A1E8  9CC7               	bcf	4039,6,c	;volatile
  5410                           
  5411                           ;i2c.c: 122: SSP1CON1 = 0x00;
  5412  00A1EA  0E00               	movlw	0
  5413  00A1EC  6EC6               	movwf	4038,c	;volatile
  5414                           
  5415                           ;i2c.c: 123: SSP1ADD = 0x00;
  5416  00A1EE  0E00               	movlw	0
  5417  00A1F0  6EC8               	movwf	4040,c	;volatile
  5418  00A1F2  0012               	return		;funcret
  5419  00A1F4                     __end_of_i2c_reset:
  5420                           	opt stack 0
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           intcon	equ	0xFF2
  5426                           intcon3	equ	0xFF0
  5427                           postinc0	equ	0xFEE
  5428                           wreg	equ	0xFE8
  5429                           postdec1	equ	0xFE5
  5430                           plusw1	equ	0xFE3
  5431                           fsr1h	equ	0xFE2
  5432                           fsr1l	equ	0xFE1
  5433                           plusw2	equ	0xFDB
  5434                           status	equ	0xFD8
  5435                           
  5436 ;; *************** function _system_minimal_init *****************
  5437 ;; Defined at:
  5438 ;;		line 140 in file "os.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0, cstack
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5456 ;;Total ram usage:        0 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    2
  5459 ;; This function calls:
  5460 ;;		_i2c_init
  5461 ;;		_system_delay_ms
  5462 ;; This function is called by:
  5463 ;;		_main
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text11
  5468  00A118                     __ptext11:
  5469                           	opt stack 0
  5470  00A118                     _system_minimal_init:
  5471                           	opt stack 28
  5472                           
  5473                           ;os.c: 143: TRISCbits.TRISC2 = 0;
  5474                           
  5475                           ;incstack = 0
  5476  00A118  9494               	bcf	3988,2,c	;volatile
  5477                           
  5478                           ;os.c: 144: LATCbits.LC2 = 1;
  5479  00A11A  848B               	bsf	3979,2,c	;volatile
  5480                           
  5481                           ;os.c: 147: TRISAbits.TRISA0 = 1;
  5482  00A11C  8092               	bsf	3986,0,c	;volatile
  5483                           
  5484                           ;os.c: 148: ANCON0bits.PCFG0 = 1;
  5485  00A11E  010F               	movlb	15	; () banked
  5486  00A120  8148               	bsf	72,0,b	;volatile
  5487                           
  5488                           ; BSR set to: 15
  5489                           ;os.c: 151: i2c_init();
  5490  00A122  EC01  F051         	call	_i2c_init	;wreg free
  5491                           
  5492                           ;os.c: 154: system_delay_ms(50);
  5493  00A126  0E32               	movlw	50
  5494  00A128  EC7F  F04F         	call	_system_delay_ms
  5495  00A12C  0012               	return		;funcret
  5496  00A12E                     __end_of_system_minimal_init:
  5497                           	opt stack 0
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           intcon	equ	0xFF2
  5503                           intcon3	equ	0xFF0
  5504                           postinc0	equ	0xFEE
  5505                           wreg	equ	0xFE8
  5506                           postdec1	equ	0xFE5
  5507                           plusw1	equ	0xFE3
  5508                           fsr1h	equ	0xFE2
  5509                           fsr1l	equ	0xFE1
  5510                           plusw2	equ	0xFDB
  5511                           status	equ	0xFD8
  5512                           
  5513 ;; *************** function _i2c_init *****************
  5514 ;; Defined at:
  5515 ;;		line 110 in file "i2c.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    1
  5536 ;; This function calls:
  5537 ;;		__i2c_open_1
  5538 ;;		_i2c_set_frequency
  5539 ;; This function is called by:
  5540 ;;		_system_minimal_init
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text12
  5545  00A202                     __ptext12:
  5546                           	opt stack 0
  5547  00A202                     _i2c_init:
  5548                           	opt stack 28
  5549                           
  5550                           ;i2c.c: 113: _i2c_open_1();
  5551                           
  5552                           ;incstack = 0
  5553  00A202  EC68  F050         	call	__i2c_open_1	;wreg free
  5554                           
  5555                           ;i2c.c: 115: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5556  00A206  0E00               	movlw	0
  5557  00A208  ECA5  F04E         	call	_i2c_set_frequency
  5558  00A20C  0012               	return		;funcret
  5559  00A20E                     __end_of_i2c_init:
  5560                           	opt stack 0
  5561                           tblptru	equ	0xFF8
  5562                           tblptrh	equ	0xFF7
  5563                           tblptrl	equ	0xFF6
  5564                           tablat	equ	0xFF5
  5565                           intcon	equ	0xFF2
  5566                           intcon3	equ	0xFF0
  5567                           postinc0	equ	0xFEE
  5568                           wreg	equ	0xFE8
  5569                           postdec1	equ	0xFE5
  5570                           plusw1	equ	0xFE3
  5571                           fsr1h	equ	0xFE2
  5572                           fsr1l	equ	0xFE1
  5573                           plusw2	equ	0xFDB
  5574                           status	equ	0xFD8
  5575                           
  5576 ;; *************** function __i2c_open_1 *****************
  5577 ;; Defined at:
  5578 ;;		line 44 in file "i2c.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_i2c_init
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text13
  5606  00A0D0                     __ptext13:
  5607                           	opt stack 0
  5608  00A0D0                     __i2c_open_1:
  5609                           	opt stack 28
  5610                           
  5611                           ;i2c.c: 46: SSP1STATbits.SMP = 0;
  5612                           
  5613                           ;incstack = 0
  5614  00A0D0  9EC7               	bcf	4039,7,c	;volatile
  5615                           
  5616                           ;i2c.c: 47: SSP1STATbits.CKE = 0;
  5617  00A0D2  9CC7               	bcf	4039,6,c	;volatile
  5618                           
  5619                           ;i2c.c: 48: SSP1ADD = 29;
  5620  00A0D4  0E1D               	movlw	29
  5621  00A0D6  6EC8               	movwf	4040,c	;volatile
  5622                           
  5623                           ;i2c.c: 49: SSP1CON1bits.WCOL = 0;
  5624  00A0D8  9EC6               	bcf	4038,7,c	;volatile
  5625                           
  5626                           ;i2c.c: 50: SSP1CON1bits.SSPOV = 0;
  5627  00A0DA  9CC6               	bcf	4038,6,c	;volatile
  5628                           
  5629                           ;i2c.c: 51: SSP1CON1bits.SSPM = 0b1000;
  5630  00A0DC  50C6               	movf	4038,w,c	;volatile
  5631  00A0DE  0BF0               	andlw	-16
  5632  00A0E0  0908               	iorlw	8
  5633  00A0E2  6EC6               	movwf	4038,c	;volatile
  5634                           
  5635                           ;i2c.c: 52: SSP1CON1bits.SSPEN = 1;
  5636  00A0E4  8AC6               	bsf	4038,5,c	;volatile
  5637  00A0E6  0012               	return		;funcret
  5638  00A0E8                     __end_of__i2c_open_1:
  5639                           	opt stack 0
  5640                           tblptru	equ	0xFF8
  5641                           tblptrh	equ	0xFF7
  5642                           tblptrl	equ	0xFF6
  5643                           tablat	equ	0xFF5
  5644                           intcon	equ	0xFF2
  5645                           intcon3	equ	0xFF0
  5646                           postinc0	equ	0xFEE
  5647                           wreg	equ	0xFE8
  5648                           postdec1	equ	0xFE5
  5649                           plusw1	equ	0xFE3
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           plusw2	equ	0xFDB
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _system_full_init *****************
  5656 ;; Defined at:
  5657 ;;		line 173 in file "os.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    7
  5678 ;; This function calls:
  5679 ;;		__system_encoder_init
  5680 ;;		__system_timer0_init
  5681 ;;		_fat_init
  5682 ;;		_flash_init
  5683 ;;		_ui_init
  5684 ;; This function is called by:
  5685 ;;		_main
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text14
  5690  008FCE                     __ptext14:
  5691                           	opt stack 0
  5692  008FCE                     _system_full_init:
  5693                           	opt stack 23
  5694                           
  5695                           ;os.c: 180: TRISDbits.TRISD0 = 0;
  5696                           
  5697                           ;incstack = 0
  5698  008FCE  9095               	bcf	3989,0,c	;volatile
  5699                           
  5700                           ;os.c: 181: LATDbits.LD0 = 0;
  5701  008FD0  908C               	bcf	3980,0,c	;volatile
  5702                           
  5703                           ;os.c: 184: TRISDbits.TRISD3 = 0;
  5704  008FD2  9695               	bcf	3989,3,c	;volatile
  5705                           
  5706                           ;os.c: 185: LATDbits.LD3 = 0;
  5707  008FD4  968C               	bcf	3980,3,c	;volatile
  5708                           
  5709                           ;os.c: 188: TRISDbits.TRISD1 = 0;
  5710  008FD6  9295               	bcf	3989,1,c	;volatile
  5711                           
  5712                           ;os.c: 189: LATDbits.LD1 = 0;
  5713  008FD8  928C               	bcf	3980,1,c	;volatile
  5714                           
  5715                           ;os.c: 192: TRISBbits.TRISB1 = 0;
  5716  008FDA  9293               	bcf	3987,1,c	;volatile
  5717                           
  5718                           ;os.c: 193: LATBbits.LB1 = 0;
  5719  008FDC  928A               	bcf	3978,1,c	;volatile
  5720                           
  5721                           ;os.c: 196: TRISBbits.TRISB2 = 0;
  5722  008FDE  9493               	bcf	3987,2,c	;volatile
  5723                           
  5724                           ;os.c: 197: LATBbits.LB2 = 0;
  5725  008FE0  948A               	bcf	3978,2,c	;volatile
  5726                           
  5727                           ;os.c: 198: TRISBbits.TRISB3 = 0;
  5728  008FE2  9693               	bcf	3987,3,c	;volatile
  5729                           
  5730                           ;os.c: 199: LATBbits.LB3 = 0;
  5731  008FE4  968A               	bcf	3978,3,c	;volatile
  5732                           
  5733                           ;os.c: 202: TRISDbits.TRISD6 = 1;
  5734  008FE6  8C95               	bsf	3989,6,c	;volatile
  5735                           
  5736                           ;os.c: 203: TRISDbits.TRISD4 = 0;
  5737  008FE8  9895               	bcf	3989,4,c	;volatile
  5738                           
  5739                           ;os.c: 204: TRISDbits.TRISD5 = 0;
  5740  008FEA  9A95               	bcf	3989,5,c	;volatile
  5741                           
  5742                           ;os.c: 205: TRISDbits.TRISD7 = 0;
  5743  008FEC  9E95               	bcf	3989,7,c	;volatile
  5744                           
  5745                           ;os.c: 206: LATDbits.LD7 = 1;
  5746  008FEE  8E8C               	bsf	3980,7,c	;volatile
  5747                           
  5748                           ;os.c: 207: TRISDbits.TRISD2 = 1;
  5749  008FF0  8495               	bsf	3989,2,c	;volatile
  5750                           
  5751                           ;os.c: 210: TRISCbits.TRISC7 = 0;
  5752  008FF2  9E94               	bcf	3988,7,c	;volatile
  5753                           
  5754                           ;os.c: 211: LATCbits.LC7 = 0;
  5755  008FF4  9E8B               	bcf	3979,7,c	;volatile
  5756                           
  5757                           ;os.c: 214: TRISEbits.TRISE2 = 0;
  5758  008FF6  9496               	bcf	3990,2,c	;volatile
  5759                           
  5760                           ;os.c: 215: LATEbits.LE2 = 1;
  5761  008FF8  848D               	bsf	3981,2,c	;volatile
  5762                           
  5763                           ;os.c: 216: TRISEbits.TRISE1 = 0;
  5764  008FFA  9296               	bcf	3990,1,c	;volatile
  5765                           
  5766                           ;os.c: 217: LATEbits.LE1 = 1;
  5767  008FFC  828D               	bsf	3981,1,c	;volatile
  5768                           
  5769                           ;os.c: 218: TRISEbits.TRISE0 = 0;
  5770  008FFE  9096               	bcf	3990,0,c	;volatile
  5771                           
  5772                           ;os.c: 219: LATEbits.LE0 = 1;
  5773  009000  808D               	bsf	3981,0,c	;volatile
  5774                           
  5775                           ;os.c: 220: TRISAbits.TRISA5 = 0;
  5776  009002  9A92               	bcf	3986,5,c	;volatile
  5777                           
  5778                           ;os.c: 221: LATAbits.LA5 = 1;
  5779  009004  8A89               	bsf	3977,5,c	;volatile
  5780                           
  5781                           ;os.c: 224: TRISBbits.TRISB7 = 1;
  5782  009006  8E93               	bsf	3987,7,c	;volatile
  5783                           
  5784                           ;os.c: 225: TRISBbits.TRISB6 = 1;
  5785  009008  8C93               	bsf	3987,6,c	;volatile
  5786                           
  5787                           ;os.c: 228: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5788  00900A  0E10               	movlw	16
  5789  00900C  0101               	movlb	1	; () banked
  5790  00900E  6F35               	movwf	(_os+4)& (0+255),b
  5791                           
  5792                           ;os.c: 229: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5793  009010  0E00               	movlw	0
  5794  009012  6F36               	movwf	(_os+5)& (0+255),b
  5795                           
  5796                           ; BSR set to: 1
  5797                           ;os.c: 232: flash_init();
  5798  009014  EC41  F050         	call	_flash_init	;wreg free
  5799                           
  5800                           ;os.c: 235: fat_init();
  5801  009018  ECE3  F050         	call	_fat_init	;wreg free
  5802                           
  5803                           ;os.c: 238: _system_encoder_init();
  5804  00901C  ECCA  F04C         	call	__system_encoder_init	;wreg free
  5805                           
  5806                           ;os.c: 241: ui_init();
  5807  009020  ECAD  F050         	call	_ui_init	;wreg free
  5808                           
  5809                           ;os.c: 244: _system_timer0_init();
  5810  009024  ECE8  F04F         	call	__system_timer0_init	;wreg free
  5811  009028  0012               	return		;funcret
  5812  00902A                     __end_of_system_full_init:
  5813                           	opt stack 0
  5814                           tblptru	equ	0xFF8
  5815                           tblptrh	equ	0xFF7
  5816                           tblptrl	equ	0xFF6
  5817                           tablat	equ	0xFF5
  5818                           intcon	equ	0xFF2
  5819                           intcon3	equ	0xFF0
  5820                           postinc0	equ	0xFEE
  5821                           wreg	equ	0xFE8
  5822                           postdec1	equ	0xFE5
  5823                           plusw1	equ	0xFE3
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           plusw2	equ	0xFDB
  5827                           status	equ	0xFD8
  5828                           
  5829 ;; *************** function _ui_init *****************
  5830 ;; Defined at:
  5831 ;;		line 111 in file "ui.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      void 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;Total ram usage:        0 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_system_full_init
  5855 ;;		_ui_run
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text15
  5860  00A15A                     __ptext15:
  5861                           	opt stack 0
  5862  00A15A                     _ui_init:
  5863                           	opt stack 29
  5864                           
  5865                           ;ui.c: 113: system_ui_inactive_count = 0;
  5866                           
  5867                           ;incstack = 0
  5868  00A15A  0E00               	movlw	0
  5869  00A15C  0101               	movlb	1	; () banked
  5870  00A15E  6F7F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5871  00A160  0E00               	movlw	0
  5872  00A162  6F7E               	movwf	_system_ui_inactive_count& (0+255),b
  5873                           
  5874                           ; BSR set to: 1
  5875                           ;ui.c: 115: LATCbits.LC2 = 1;
  5876  00A164  848B               	bsf	3979,2,c	;volatile
  5877                           
  5878                           ;ui.c: 116: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5879  00A166  0E01               	movlw	1
  5880  00A168  0100               	movlb	0	; () banked
  5881  00A16A  6FE4               	movwf	_userInterfaceStatus& (0+255),b
  5882                           
  5883                           ; BSR set to: 0
  5884  00A16C  0012               	return		;funcret
  5885  00A16E                     __end_of_ui_init:
  5886                           	opt stack 0
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           intcon	equ	0xFF2
  5892                           intcon3	equ	0xFF0
  5893                           postinc0	equ	0xFEE
  5894                           wreg	equ	0xFE8
  5895                           postdec1	equ	0xFE5
  5896                           plusw1	equ	0xFE3
  5897                           fsr1h	equ	0xFE2
  5898                           fsr1l	equ	0xFE1
  5899                           plusw2	equ	0xFDB
  5900                           status	equ	0xFD8
  5901                           
  5902 ;; *************** function _flash_init *****************
  5903 ;; Defined at:
  5904 ;;		line 361 in file "flash.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      void 
  5911 ;; Registers used:
  5912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5922 ;;Total ram usage:        0 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    4
  5925 ;; This function calls:
  5926 ;;		__flash_set_page_size
  5927 ;;		_spi_init
  5928 ;;		_spi_set_configuration
  5929 ;; This function is called by:
  5930 ;;		_system_full_init
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text16
  5935  00A082                     __ptext16:
  5936                           	opt stack 0
  5937  00A082                     _flash_init:
  5938                           	opt stack 25
  5939                           
  5940                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;incstack = 0
  5944  00A082  0E00               	movlw	0
  5945  00A084  EC8E  F04C         	call	_spi_init
  5946                           
  5947                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5948  00A088  0E00               	movlw	0
  5949  00A08A  ECEF  F02A         	call	_spi_set_configuration
  5950                           
  5951                           ;flash.c: 368: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5952  00A08E  0E00               	movlw	0
  5953  00A090  ECF2  F043         	call	__flash_set_page_size
  5954                           
  5955                           ;flash.c: 371: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5956  00A094  0E01               	movlw	1
  5957  00A096  ECEF  F02A         	call	_spi_set_configuration
  5958  00A09A  0012               	return		;funcret
  5959  00A09C                     __end_of_flash_init:
  5960                           	opt stack 0
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           intcon	equ	0xFF2
  5966                           intcon3	equ	0xFF0
  5967                           postinc0	equ	0xFEE
  5968                           wreg	equ	0xFE8
  5969                           postdec1	equ	0xFE5
  5970                           plusw1	equ	0xFE3
  5971                           fsr1h	equ	0xFE2
  5972                           fsr1l	equ	0xFE1
  5973                           plusw2	equ	0xFDB
  5974                           status	equ	0xFD8
  5975                           
  5976 ;; *************** function _spi_init *****************
  5977 ;; Defined at:
  5978 ;;		line 123 in file "spi.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  configuratio    1    wreg     enum E6751
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  configuratio    1    3[COMRAM] enum E6751
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;Total ram usage:        1 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    1
  5999 ;; This function calls:
  6000 ;;		__spi_init
  6001 ;; This function is called by:
  6002 ;;		_flash_init
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text17
  6007  00991C                     __ptext17:
  6008                           	opt stack 0
  6009  00991C                     _spi_init:
  6010                           	opt stack 27
  6011                           
  6012                           ;incstack = 0
  6013                           ;spi_init@configuration stored from wreg
  6014  00991C  6E04               	movwf	spi_init@configuration,c
  6015                           
  6016                           ;spi.c: 125: switch(configuration)
  6017  00991E  D012               	goto	l3076
  6018  009920                     
  6019                           ;spi.c: 128: _spi_init(config_internal);
  6020  009920  C16B  F001         	movff	_config_internal,__spi_init@details
  6021  009924  C16C  F002         	movff	_config_internal+1,__spi_init@details+1
  6022  009928  C16D  F003         	movff	_config_internal+2,__spi_init@details+2
  6023  00992C  ECE7  F04C         	call	__spi_init	;wreg free
  6024                           
  6025                           ;spi.c: 129: break;
  6026  009930  D010               	goto	l3078
  6027  009932                     
  6028                           ;spi.c: 132: _spi_init(config_external);
  6029  009932  C168  F001         	movff	_config_external,__spi_init@details
  6030  009936  C169  F002         	movff	_config_external+1,__spi_init@details+1
  6031  00993A  C16A  F003         	movff	_config_external+2,__spi_init@details+2
  6032  00993E  ECE7  F04C         	call	__spi_init	;wreg free
  6033                           
  6034                           ;spi.c: 134: }
  6035                           
  6036                           ;spi.c: 133: break;
  6037  009942  D007               	goto	l3078
  6038  009944                     l3076:
  6039  009944  5004               	movf	spi_init@configuration,w,c
  6040                           
  6041                           ; Switch size 1, requested type "space"
  6042                           ; Number of cases is 2, Range of values is 0 to 1
  6043                           ; switch strategies available:
  6044                           ; Name         Instructions Cycles
  6045                           ; simple_byte            7     4 (average)
  6046                           ;	Chosen strategy is simple_byte
  6047  009946  0A00               	xorlw	0	; case 0
  6048  009948  B4D8               	btfsc	status,2,c
  6049  00994A  D7EA               	goto	l3077
  6050  00994C  0A01               	xorlw	1	; case 1
  6051  00994E  B4D8               	btfsc	status,2,c
  6052  009950  D7F0               	goto	l3079
  6053  009952                     l3078:
  6054                           
  6055                           ;spi.c: 136: active_configuration = configuration;
  6056  009952  C004  F18C         	movff	spi_init@configuration,_active_configuration
  6057  009956  0012               	return		;funcret
  6058  009958                     __end_of_spi_init:
  6059                           	opt stack 0
  6060                           tblptru	equ	0xFF8
  6061                           tblptrh	equ	0xFF7
  6062                           tblptrl	equ	0xFF6
  6063                           tablat	equ	0xFF5
  6064                           intcon	equ	0xFF2
  6065                           intcon3	equ	0xFF0
  6066                           postinc0	equ	0xFEE
  6067                           wreg	equ	0xFE8
  6068                           postdec1	equ	0xFE5
  6069                           plusw1	equ	0xFE3
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           plusw2	equ	0xFDB
  6073                           status	equ	0xFD8
  6074                           
  6075 ;; *************** function __spi_init *****************
  6076 ;; Defined at:
  6077 ;;		line 26 in file "spi.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  details         3    0[COMRAM] struct .
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;		None
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6095 ;;Total ram usage:        3 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_spi_init
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text18
  6105  0099CE                     __ptext18:
  6106                           	opt stack 0
  6107  0099CE                     __spi_init:
  6108                           	opt stack 27
  6109                           
  6110                           ;spi.c: 32: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6111                           
  6112                           ;incstack = 0
  6113  0099CE  0E55               	movlw	85
  6114  0099D0  6EA7               	movwf	4007,c	;volsfr
  6115  0099D2  0EAA               	movlw	170
  6116  0099D4  6EA7               	movwf	4007,c	;volsfr
  6117  0099D6  010E               	movlb	14	; () banked
  6118  0099D8  91BF               	bcf	191,0,b	;volatile
  6119                           
  6120                           ;spi.c: 33: RPINR21 = 23;
  6121  0099DA  0E17               	movlw	23
  6122  0099DC  6FFC               	movwf	252,b	;volatile
  6123                           
  6124                           ;spi.c: 34: RPOR21 = 10;
  6125  0099DE  0E0A               	movlw	10
  6126  0099E0  6FD5               	movwf	213,b	;volatile
  6127                           
  6128                           ;spi.c: 36: RPOR22 = 11;
  6129  0099E2  0E0B               	movlw	11
  6130  0099E4  6FD6               	movwf	214,b	;volatile
  6131                           
  6132                           ;spi.c: 37: RPINR22 = 22;
  6133  0099E6  0E16               	movlw	22
  6134  0099E8  6FFD               	movwf	253,b	;volatile
  6135                           
  6136                           ;spi.c: 38: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6137  0099EA  0E55               	movlw	85
  6138  0099EC  6EA7               	movwf	4007,c	;volsfr
  6139  0099EE  0EAA               	movlw	170
  6140  0099F0  6EA7               	movwf	4007,c	;volsfr
  6141                           
  6142                           ; BSR set to: 14
  6143  0099F2  81BF               	bsf	191,0,b	;volatile
  6144                           
  6145                           ; BSR set to: 14
  6146                           ;spi.c: 41: SSP2STATbits.SMP = 1;
  6147  0099F4  8E73               	bsf	3955,7,c	;volatile
  6148                           
  6149                           ; BSR set to: 14
  6150                           ;spi.c: 42: SSP2STATbits.CKE = 1;
  6151  0099F6  8C73               	bsf	3955,6,c	;volatile
  6152                           
  6153                           ; BSR set to: 14
  6154                           ;spi.c: 43: SSP2CON1bits.CKP = 0;
  6155  0099F8  9872               	bcf	3954,4,c	;volatile
  6156                           
  6157                           ; BSR set to: 14
  6158                           ;spi.c: 44: SSP2CON1bits.SSPM =0b0000;
  6159  0099FA  9072               	bcf	3954,0,c	;volatile
  6160  0099FC  9272               	bcf	3954,1,c	;volatile
  6161  0099FE  9472               	bcf	3954,2,c	;volatile
  6162  009A00  9672               	bcf	3954,3,c	;volatile
  6163                           
  6164                           ; BSR set to: 14
  6165                           ;spi.c: 45: SSP2CON1bits.SSPEN = 1;
  6166  009A02  8A72               	bsf	3954,5,c	;volatile
  6167                           
  6168                           ; BSR set to: 14
  6169  009A04  0012               	return		;funcret
  6170  009A06                     __end_of__spi_init:
  6171                           	opt stack 0
  6172                           tblptru	equ	0xFF8
  6173                           tblptrh	equ	0xFF7
  6174                           tblptrl	equ	0xFF6
  6175                           tablat	equ	0xFF5
  6176                           intcon	equ	0xFF2
  6177                           intcon3	equ	0xFF0
  6178                           postinc0	equ	0xFEE
  6179                           wreg	equ	0xFE8
  6180                           postdec1	equ	0xFE5
  6181                           plusw1	equ	0xFE3
  6182                           fsr1h	equ	0xFE2
  6183                           fsr1l	equ	0xFE1
  6184                           plusw2	equ	0xFDB
  6185                           status	equ	0xFD8
  6186                           
  6187 ;; *************** function __flash_set_page_size *****************
  6188 ;; Defined at:
  6189 ;;		line 99 in file "flash.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  size            1    wreg     enum E6902
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  size            1   23[COMRAM] enum E6902
  6194 ;;  command         4   19[COMRAM] unsigned char [4]
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6207 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;Total ram usage:        5 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    3
  6211 ;; This function calls:
  6212 ;;		__flash_is_busy
  6213 ;;		_memcpy
  6214 ;;		_spi_tx
  6215 ;; This function is called by:
  6216 ;;		_flash_init
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text19
  6221  0087E4                     __ptext19:
  6222                           	opt stack 0
  6223  0087E4                     __flash_set_page_size:
  6224                           	opt stack 25
  6225                           
  6226                           ; BSR set to: 14
  6227                           ;incstack = 0
  6228                           ;__flash_set_page_size@size stored from wreg
  6229  0087E4  6E18               	movwf	__flash_set_page_size@size,c
  6230  0087E6                     
  6231                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  6232  0087E6  ECD7  F04F         	call	__flash_is_busy	;wreg free
  6233  0087EA  0900               	iorlw	0
  6234  0087EC  A4D8               	btfss	status,2,c
  6235  0087EE  D7FB               	goto	l15166
  6236                           
  6237                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  6238  0087F0  5018               	movf	__flash_set_page_size@size,w,c
  6239  0087F2  A4D8               	btfss	status,2,c
  6240  0087F4  D013               	goto	l1762
  6241                           
  6242                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  6243  0087F6  0E14               	movlw	low __flash_set_page_size@command
  6244  0087F8  6E01               	movwf	memcpy@d1,c
  6245  0087FA  0E00               	movlw	high __flash_set_page_size@command
  6246  0087FC  6E02               	movwf	memcpy@d1+1,c
  6247  0087FE  0EC3               	movlw	low _flash_command_pagesize_512
  6248  008800  6E03               	movwf	memcpy@s1,c
  6249  008802  0EBF               	movlw	high _flash_command_pagesize_512
  6250  008804  6E04               	movwf	memcpy@s1+1,c
  6251  008806  5003               	movf	memcpy@s1,w,c
  6252  008808  1004               	iorwf	memcpy@s1+1,w,c
  6253  00880A  A4D8               	btfss	status,2,c
  6254  00880C  0E00               	movlw	low (__mediumconst shr (0+16))
  6255  00880E  6E05               	movwf	memcpy@s1+2,c
  6256  008810  0E00               	movlw	0
  6257  008812  6E07               	movwf	memcpy@n+1,c
  6258  008814  0E04               	movlw	4
  6259  008816  6E06               	movwf	memcpy@n,c
  6260  008818  EC92  F046         	call	_memcpy	;wreg free
  6261  00881C                     l1762:
  6262                           
  6263                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  6264  00881C  0418               	decf	__flash_set_page_size@size,w,c
  6265  00881E  A4D8               	btfss	status,2,c
  6266  008820  D013               	goto	l1763
  6267                           
  6268                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  6269  008822  0E14               	movlw	low __flash_set_page_size@command
  6270  008824  6E01               	movwf	memcpy@d1,c
  6271  008826  0E00               	movlw	high __flash_set_page_size@command
  6272  008828  6E02               	movwf	memcpy@d1+1,c
  6273  00882A  0EBF               	movlw	low _flash_command_pagesize_528
  6274  00882C  6E03               	movwf	memcpy@s1,c
  6275  00882E  0EBF               	movlw	high _flash_command_pagesize_528
  6276  008830  6E04               	movwf	memcpy@s1+1,c
  6277  008832  5003               	movf	memcpy@s1,w,c
  6278  008834  1004               	iorwf	memcpy@s1+1,w,c
  6279  008836  A4D8               	btfss	status,2,c
  6280  008838  0E00               	movlw	low (__mediumconst shr (0+16))
  6281  00883A  6E05               	movwf	memcpy@s1+2,c
  6282  00883C  0E00               	movlw	0
  6283  00883E  6E07               	movwf	memcpy@n+1,c
  6284  008840  0E04               	movlw	4
  6285  008842  6E06               	movwf	memcpy@n,c
  6286  008844  EC92  F046         	call	_memcpy	;wreg free
  6287  008848                     l1763:
  6288                           
  6289                           ;flash.c: 113: spi_tx(command, 4);
  6290  008848  0E14               	movlw	low __flash_set_page_size@command
  6291  00884A  6E01               	movwf	spi_tx@data,c
  6292  00884C  0E00               	movlw	high __flash_set_page_size@command
  6293  00884E  6E02               	movwf	spi_tx@data+1,c
  6294  008850  0E00               	movlw	0
  6295  008852  6E04               	movwf	spi_tx@length+1,c
  6296  008854  0E04               	movlw	4
  6297  008856  6E03               	movwf	spi_tx@length,c
  6298  008858  ECC6  F048         	call	_spi_tx	;wreg free
  6299  00885C  0012               	return		;funcret
  6300  00885E                     __end_of__flash_set_page_size:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           intcon	equ	0xFF2
  6307                           intcon3	equ	0xFF0
  6308                           postinc0	equ	0xFEE
  6309                           wreg	equ	0xFE8
  6310                           postdec1	equ	0xFE5
  6311                           plusw1	equ	0xFE3
  6312                           fsr1h	equ	0xFE2
  6313                           fsr1l	equ	0xFE1
  6314                           plusw2	equ	0xFDB
  6315                           status	equ	0xFD8
  6316                           
  6317 ;; *************** function _fat_init *****************
  6318 ;; Defined at:
  6319 ;;		line 1382 in file "fat16.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    6
  6340 ;; This function calls:
  6341 ;;		_fat_format
  6342 ;;		_fat_get_format_status
  6343 ;; This function is called by:
  6344 ;;		_system_full_init
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text20
  6349  00A1C6                     __ptext20:
  6350                           	opt stack 0
  6351  00A1C6                     _fat_init:
  6352                           	opt stack 23
  6353                           
  6354                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6355                           
  6356                           ;incstack = 0
  6357  00A1C6  EC5E  F03E         	call	_fat_get_format_status	;wreg free
  6358  00A1CA  0900               	iorlw	0
  6359  00A1CC  A4D8               	btfss	status,2,c
  6360  00A1CE  0012               	return	
  6361                           
  6362                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6363  00A1D0  ECEE  F017         	call	_fat_format	;wreg free
  6364  00A1D4  0012               	return	
  6365  00A1D6                     __end_of_fat_init:
  6366                           	opt stack 0
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           intcon	equ	0xFF2
  6372                           intcon3	equ	0xFF0
  6373                           postinc0	equ	0xFEE
  6374                           wreg	equ	0xFE8
  6375                           postdec1	equ	0xFE5
  6376                           plusw1	equ	0xFE3
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           plusw2	equ	0xFDB
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _fat_get_format_status *****************
  6383 ;; Defined at:
  6384 ;;		line 1292 in file "fat16.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  cntr            2   45[COMRAM] unsigned int 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      enum E6876
  6391 ;; Registers used:
  6392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;Total ram usage:        4 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    5
  6405 ;; This function calls:
  6406 ;;		__get_fbr
  6407 ;;		__get_mbr
  6408 ;;		_flash_sector_read
  6409 ;; This function is called by:
  6410 ;;		_fat_init
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text21
  6415  007CBC                     __ptext21:
  6416                           	opt stack 0
  6417  007CBC                     _fat_get_format_status:
  6418                           	opt stack 23
  6419                           
  6420                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6421                           
  6422                           ;incstack = 0
  6423  007CBC  0E00               	movlw	0
  6424  007CBE  6E29               	movwf	flash_sector_read@page+1,c
  6425  007CC0  0E00               	movlw	0
  6426  007CC2  6E28               	movwf	flash_sector_read@page,c
  6427  007CC4  0EC0               	movlw	low _buffer
  6428  007CC6  6E2A               	movwf	flash_sector_read@data,c
  6429  007CC8  0E03               	movlw	high _buffer
  6430  007CCA  6E2B               	movwf	flash_sector_read@data+1,c
  6431  007CCC  ECD3  F04D         	call	_flash_sector_read	;wreg free
  6432                           
  6433                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6434  007CD0  0E00               	movlw	0
  6435  007CD2  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6436  007CD4  0E00               	movlw	0
  6437  007CD6  6E2E               	movwf	fat_get_format_status@cntr,c
  6438  007CD8                     l15194:
  6439  007CD8  0E02               	movlw	2
  6440  007CDA  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6441  007CDC  B0D8               	btfsc	status,0,c
  6442  007CDE  D016               	goto	u12800
  6443                           
  6444                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6445  007CE0  0EC0               	movlw	low _buffer
  6446  007CE2  242E               	addwf	fat_get_format_status@cntr,w,c
  6447  007CE4  6ED9               	movwf	fsr2l,c
  6448  007CE6  0E03               	movlw	high _buffer
  6449  007CE8  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6450  007CEA  6EDA               	movwf	fsr2h,c
  6451  007CEC  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6452  007CF0  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6453  007CF4  EC3F  F036         	call	__get_mbr	;wreg free
  6454  007CF8  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6455  007CFA  50DE               	movf	postinc2,w,c
  6456  007CFC  182D               	xorwf	??_fat_get_format_status+1,w,c
  6457  007CFE  B4D8               	btfsc	status,2,c
  6458  007D00  D002               	goto	l2282
  6459                           
  6460                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6461  007D02  0E00               	movlw	0
  6462  007D04  0012               	return	
  6463  007D06                     l2282:
  6464  007D06  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6465  007D08  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6466  007D0A  D7E6               	goto	l15194
  6467  007D0C                     u12800:
  6468                           
  6469                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6470  007D0C  0E00               	movlw	0
  6471  007D0E  6E29               	movwf	flash_sector_read@page+1,c
  6472  007D10  0E01               	movlw	1
  6473  007D12  6E28               	movwf	flash_sector_read@page,c
  6474  007D14  0EC0               	movlw	low _buffer
  6475  007D16  6E2A               	movwf	flash_sector_read@data,c
  6476  007D18  0E03               	movlw	high _buffer
  6477  007D1A  6E2B               	movwf	flash_sector_read@data+1,c
  6478  007D1C  ECD3  F04D         	call	_flash_sector_read	;wreg free
  6479                           
  6480                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6481  007D20  0E00               	movlw	0
  6482  007D22  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6483  007D24  0E00               	movlw	0
  6484  007D26  6E2E               	movwf	fat_get_format_status@cntr,c
  6485  007D28                     l15212:
  6486  007D28  0E02               	movlw	2
  6487  007D2A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6488  007D2C  B0D8               	btfsc	status,0,c
  6489  007D2E  D016               	goto	u12830
  6490                           
  6491                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6492  007D30  0EC0               	movlw	low _buffer
  6493  007D32  242E               	addwf	fat_get_format_status@cntr,w,c
  6494  007D34  6ED9               	movwf	fsr2l,c
  6495  007D36  0E03               	movlw	high _buffer
  6496  007D38  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6497  007D3A  6EDA               	movwf	fsr2h,c
  6498  007D3C  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6499  007D40  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6500  007D44  EC50  F011         	call	__get_fbr	;wreg free
  6501  007D48  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6502  007D4A  50DE               	movf	postinc2,w,c
  6503  007D4C  182D               	xorwf	??_fat_get_format_status+1,w,c
  6504  007D4E  B4D8               	btfsc	status,2,c
  6505  007D50  D002               	goto	l2286
  6506                           
  6507                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6508  007D52  0E00               	movlw	0
  6509  007D54  0012               	return	
  6510  007D56                     l2286:
  6511  007D56  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6512  007D58  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6513  007D5A  D7E6               	goto	l15212
  6514  007D5C                     u12830:
  6515                           
  6516                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6517  007D5C  0E01               	movlw	1
  6518  007D5E  0012               	return	
  6519  007D60                     __end_of_fat_get_format_status:
  6520                           	opt stack 0
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           intcon	equ	0xFF2
  6526                           intcon3	equ	0xFF0
  6527                           postinc0	equ	0xFEE
  6528                           wreg	equ	0xFE8
  6529                           postdec1	equ	0xFE5
  6530                           plusw1	equ	0xFE3
  6531                           fsr1h	equ	0xFE2
  6532                           fsr1l	equ	0xFE1
  6533                           postinc2	equ	0xFDE
  6534                           plusw2	equ	0xFDB
  6535                           fsr2h	equ	0xFDA
  6536                           fsr2l	equ	0xFD9
  6537                           status	equ	0xFD8
  6538                           
  6539 ;; *************** function __system_timer0_init *****************
  6540 ;; Defined at:
  6541 ;;		line 113 in file "os.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;Total ram usage:        0 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_system_full_init
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text22
  6569  009FD0                     __ptext22:
  6570                           	opt stack 0
  6571  009FD0                     __system_timer0_init:
  6572                           	opt stack 29
  6573                           
  6574                           ;os.c: 116: T0CONbits.T0CS = 0;
  6575                           
  6576                           ;incstack = 0
  6577  009FD0  9AD5               	bcf	4053,5,c	;volatile
  6578                           
  6579                           ;os.c: 118: T0CONbits.T08BIT = 0;
  6580  009FD2  9CD5               	bcf	4053,6,c	;volatile
  6581                           
  6582                           ;os.c: 120: T0CONbits.T0PS2 = 0;
  6583  009FD4  94D5               	bcf	4053,2,c	;volatile
  6584                           
  6585                           ;os.c: 121: T0CONbits.T0PS1 = 1;
  6586  009FD6  82D5               	bsf	4053,1,c	;volatile
  6587                           
  6588                           ;os.c: 122: T0CONbits.T0PS0 = 0;
  6589  009FD8  90D5               	bcf	4053,0,c	;volatile
  6590                           
  6591                           ;os.c: 124: T0CONbits.PSA = 0;
  6592  009FDA  96D5               	bcf	4053,3,c	;volatile
  6593                           
  6594                           ;os.c: 126: TMR0H = 0xD1;
  6595  009FDC  0ED1               	movlw	209
  6596  009FDE  6ED7               	movwf	4055,c	;volatile
  6597                           
  6598                           ;os.c: 127: TMR0L = 0x20;
  6599  009FE0  0E20               	movlw	32
  6600  009FE2  6ED6               	movwf	4054,c	;volatile
  6601                           
  6602                           ;os.c: 129: T0CONbits.TMR0ON = 1;
  6603  009FE4  8ED5               	bsf	4053,7,c	;volatile
  6604                           
  6605                           ;os.c: 133: INTCONbits.TMR0IF = 0;
  6606  009FE6  94F2               	bcf	intcon,2,c	;volatile
  6607                           
  6608                           ;os.c: 136: os.timeSlot = 0;
  6609  009FE8  0E00               	movlw	0
  6610  009FEA  0101               	movlb	1	; () banked
  6611  009FEC  6F33               	movwf	(_os+2)& (0+255),b
  6612                           
  6613                           ; BSR set to: 1
  6614  009FEE  0012               	return		;funcret
  6615  009FF0                     __end_of__system_timer0_init:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           intcon	equ	0xFF2
  6622                           intcon3	equ	0xFF0
  6623                           postinc0	equ	0xFEE
  6624                           wreg	equ	0xFE8
  6625                           postdec1	equ	0xFE5
  6626                           plusw1	equ	0xFE3
  6627                           fsr1h	equ	0xFE2
  6628                           fsr1l	equ	0xFE1
  6629                           postinc2	equ	0xFDE
  6630                           plusw2	equ	0xFDB
  6631                           fsr2h	equ	0xFDA
  6632                           fsr2l	equ	0xFD9
  6633                           status	equ	0xFD8
  6634                           
  6635 ;; *************** function __system_encoder_init *****************
  6636 ;; Defined at:
  6637 ;;		line 74 in file "os.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, status,2
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6655 ;;Total ram usage:        0 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_system_full_init
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text23
  6665  009994                     __ptext23:
  6666                           	opt stack 0
  6667  009994                     __system_encoder_init:
  6668                           	opt stack 29
  6669                           
  6670                           ;os.c: 76: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;incstack = 0
  6674  009994  0E55               	movlw	85
  6675  009996  6EA7               	movwf	4007,c	;volsfr
  6676  009998  0EAA               	movlw	170
  6677  00999A  6EA7               	movwf	4007,c	;volsfr
  6678  00999C  010E               	movlb	14	; () banked
  6679  00999E  91BF               	bcf	191,0,b	;volatile
  6680                           
  6681                           ;os.c: 77: RPINR1 = 0;
  6682  0099A0  0E00               	movlw	0
  6683  0099A2  6FE1               	movwf	225,b	;volatile
  6684                           
  6685                           ;os.c: 78: RPINR3 = 9;
  6686  0099A4  0E09               	movlw	9
  6687  0099A6  6FE3               	movwf	227,b	;volatile
  6688                           
  6689                           ;os.c: 79: RPINR2 = 10;
  6690  0099A8  0E0A               	movlw	10
  6691  0099AA  6FE2               	movwf	226,b	;volatile
  6692                           
  6693                           ;os.c: 80: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6694  0099AC  0E55               	movlw	85
  6695  0099AE  6EA7               	movwf	4007,c	;volsfr
  6696  0099B0  0EAA               	movlw	170
  6697  0099B2  6EA7               	movwf	4007,c	;volsfr
  6698                           
  6699                           ; BSR set to: 14
  6700  0099B4  91BF               	bcf	191,0,b	;volatile
  6701                           
  6702                           ; BSR set to: 14
  6703                           ;os.c: 83: INTCON2bits.INTEDG1 = 0;
  6704  0099B6  9AF1               	bcf	intcon2,5,c	;volatile
  6705                           
  6706                           ; BSR set to: 14
  6707                           ;os.c: 84: INTCON3bits.INT1IF = 0;
  6708  0099B8  90F0               	bcf	intcon3,0,c	;volatile
  6709                           
  6710                           ; BSR set to: 14
  6711                           ;os.c: 86: INTCON2bits.INTEDG2 = 1;
  6712  0099BA  88F1               	bsf	intcon2,4,c	;volatile
  6713                           
  6714                           ; BSR set to: 14
  6715                           ;os.c: 87: INTCON3bits.INT2IF = 0;
  6716  0099BC  92F0               	bcf	intcon3,1,c	;volatile
  6717                           
  6718                           ; BSR set to: 14
  6719                           ;os.c: 89: INTCON2bits.INTEDG3 = 1;
  6720  0099BE  86F1               	bsf	intcon2,3,c	;volatile
  6721                           
  6722                           ; BSR set to: 14
  6723                           ;os.c: 90: INTCON3bits.INT3IF = 0;
  6724  0099C0  94F0               	bcf	intcon3,2,c	;volatile
  6725                           
  6726                           ;os.c: 92: os.encoderCount = 0;
  6727  0099C2  0E00               	movlw	0
  6728  0099C4  0101               	movlb	1	; () banked
  6729  0099C6  6F31               	movwf	_os& (0+255),b
  6730                           
  6731                           ;os.c: 93: os.buttonCount = 0;
  6732  0099C8  0E00               	movlw	0
  6733  0099CA  6F32               	movwf	(_os+1)& (0+255),b
  6734                           
  6735                           ; BSR set to: 1
  6736  0099CC  0012               	return		;funcret
  6737  0099CE                     __end_of__system_encoder_init:
  6738                           	opt stack 0
  6739                           tblptru	equ	0xFF8
  6740                           tblptrh	equ	0xFF7
  6741                           tblptrl	equ	0xFF6
  6742                           tablat	equ	0xFF5
  6743                           intcon	equ	0xFF2
  6744                           intcon2	equ	0xFF1
  6745                           intcon3	equ	0xFF0
  6746                           postinc0	equ	0xFEE
  6747                           wreg	equ	0xFE8
  6748                           postdec1	equ	0xFE5
  6749                           plusw1	equ	0xFE3
  6750                           fsr1h	equ	0xFE2
  6751                           fsr1l	equ	0xFE1
  6752                           postinc2	equ	0xFDE
  6753                           plusw2	equ	0xFDB
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function _spi_get_external_tx_buffer *****************
  6759 ;; Defined at:
  6760 ;;		line 76 in file "spi.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;		None
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;		None
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  2    0[COMRAM] PTR unsigned char 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6778 ;;Total ram usage:        2 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_main
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text24
  6788  00A20E                     __ptext24:
  6789                           	opt stack 0
  6790  00A20E                     _spi_get_external_tx_buffer:
  6791                           	opt stack 30
  6792                           
  6793                           ;spi.c: 78: return _spi_external_tx_buffer;
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;incstack = 0
  6797  00A20E  0E40               	movlw	low __spi_external_tx_buffer
  6798  00A210  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6799  00A212  0E03               	movlw	high __spi_external_tx_buffer
  6800  00A214  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6801  00A216  0012               	return	
  6802  00A218                     __end_of_spi_get_external_tx_buffer:
  6803                           	opt stack 0
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           intcon	equ	0xFF2
  6809                           intcon2	equ	0xFF1
  6810                           intcon3	equ	0xFF0
  6811                           postinc0	equ	0xFEE
  6812                           wreg	equ	0xFE8
  6813                           postdec1	equ	0xFE5
  6814                           plusw1	equ	0xFE3
  6815                           fsr1h	equ	0xFE2
  6816                           fsr1l	equ	0xFE1
  6817                           postinc2	equ	0xFDE
  6818                           plusw2	equ	0xFDB
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _spi_get_external_rx_buffer *****************
  6824 ;; Defined at:
  6825 ;;		line 81 in file "spi.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  2    0[COMRAM] PTR unsigned char 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6843 ;;Total ram usage:        2 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_main
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text25
  6853  00A218                     __ptext25:
  6854                           	opt stack 0
  6855  00A218                     _spi_get_external_rx_buffer:
  6856                           	opt stack 30
  6857                           
  6858                           ;spi.c: 83: return _spi_external_rx_buffer;
  6859                           
  6860                           ;incstack = 0
  6861  00A218  0E00               	movlw	low __spi_external_rx_buffer
  6862  00A21A  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6863  00A21C  0E03               	movlw	high __spi_external_rx_buffer
  6864  00A21E  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6865  00A220  0012               	return	
  6866  00A222                     __end_of_spi_get_external_rx_buffer:
  6867                           	opt stack 0
  6868                           tblptru	equ	0xFF8
  6869                           tblptrh	equ	0xFF7
  6870                           tblptrl	equ	0xFF6
  6871                           tablat	equ	0xFF5
  6872                           intcon	equ	0xFF2
  6873                           intcon2	equ	0xFF1
  6874                           intcon3	equ	0xFF0
  6875                           postinc0	equ	0xFEE
  6876                           wreg	equ	0xFE8
  6877                           postdec1	equ	0xFE5
  6878                           plusw1	equ	0xFE3
  6879                           fsr1h	equ	0xFE2
  6880                           fsr1l	equ	0xFE1
  6881                           postinc2	equ	0xFDE
  6882                           plusw2	equ	0xFDB
  6883                           fsr2h	equ	0xFDA
  6884                           fsr2l	equ	0xFD9
  6885                           status	equ	0xFD8
  6886                           
  6887 ;; *************** function _jump_to_main_program *****************
  6888 ;; Defined at:
  6889 ;;		line 252 in file "os.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;		None
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		None
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;Total ram usage:        0 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_main
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text26
  6917  00A2B2                     __ptext26:
  6918                           	opt stack 0
  6919  00A2B2                     _jump_to_main_program:
  6920                           	opt stack 30
  6921                           
  6922                           ;incstack = 0
  6923  00A2B2  EF00 F060          	goto	49152	; ;# 
  6924  00A2B6  0012               	return		;funcret
  6925  00A2B8                     __end_of_jump_to_main_program:
  6926                           	opt stack 0
  6927                           tblptru	equ	0xFF8
  6928                           tblptrh	equ	0xFF7
  6929                           tblptrl	equ	0xFF6
  6930                           tablat	equ	0xFF5
  6931                           intcon	equ	0xFF2
  6932                           intcon2	equ	0xFF1
  6933                           intcon3	equ	0xFF0
  6934                           postinc0	equ	0xFEE
  6935                           wreg	equ	0xFE8
  6936                           postdec1	equ	0xFE5
  6937                           plusw1	equ	0xFE3
  6938                           fsr1h	equ	0xFE2
  6939                           fsr1l	equ	0xFE1
  6940                           postinc2	equ	0xFDE
  6941                           plusw2	equ	0xFDB
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _bootloader_run *****************
  6947 ;; Defined at:
  6948 ;;		line 63 in file "bootloader.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  timeslot        1    wreg     unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  timeslot        1   91[COMRAM] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    9
  6969 ;; This function calls:
  6970 ;;		__bootloader_find_file
  6971 ;;		__bootloader_program
  6972 ;;		__bootloader_verify_file
  6973 ;; This function is called by:
  6974 ;;		_main
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text27
  6979  008C56                     __ptext27:
  6980                           	opt stack 0
  6981  008C56                     _bootloader_run:
  6982                           	opt stack 21
  6983                           
  6984                           ;incstack = 0
  6985                           ;bootloader_run@timeslot stored from wreg
  6986  008C56  6E5C               	movwf	bootloader_run@timeslot,c
  6987                           
  6988                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6989  008C58  0101               	movlb	1	; () banked
  6990  008C5A  5136               	movf	(_os+5)& (0+255),w,b
  6991  008C5C  B4D8               	btfsc	status,2,c
  6992  008C5E  0012               	return	
  6993  008C60  D015               	goto	l2440
  6994  008C62                     
  6995                           ; BSR set to: 1
  6996                           ;bootloader.c: 74: if(timeslot==0)
  6997                           
  6998                           ; BSR set to: 1
  6999  008C62  505C               	movf	bootloader_run@timeslot,w,c
  7000  008C64  A4D8               	btfss	status,2,c
  7001  008C66  0012               	return	
  7002                           
  7003                           ; BSR set to: 1
  7004                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  7005  008C68  EC02  F03F         	call	__bootloader_find_file	;wreg free
  7006                           
  7007                           ;bootloader.c: 77: };bootloader.c: 78: break;
  7008  008C6C  0012               	return	
  7009  008C6E                     
  7010                           ;bootloader.c: 81: if(timeslot==0)
  7011  008C6E  505C               	movf	bootloader_run@timeslot,w,c
  7012  008C70  A4D8               	btfss	status,2,c
  7013  008C72  0012               	return	
  7014                           
  7015                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  7016  008C74  EC02  F03F         	call	__bootloader_find_file	;wreg free
  7017                           
  7018                           ;bootloader.c: 84: };bootloader.c: 85: break;
  7019  008C78  0012               	return	
  7020  008C7A                     
  7021                           ;bootloader.c: 88: _bootloader_verify_file();
  7022  008C7A  ECBB  F007         	call	__bootloader_verify_file	;wreg free
  7023                           
  7024                           ;bootloader.c: 95: break;
  7025                           
  7026                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  7027                           
  7028                           ;bootloader.c: 92: break;
  7029                           
  7030                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  7031                           
  7032                           ;bootloader.c: 89: break;
  7033  008C7E  0012               	return	
  7034  008C80                     
  7035                           ;bootloader.c: 98: if(timeslot==0)
  7036  008C80  505C               	movf	bootloader_run@timeslot,w,c
  7037  008C82  A4D8               	btfss	status,2,c
  7038  008C84  0012               	return	
  7039                           
  7040                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  7041  008C86  EC2D  F004         	call	__bootloader_program	;wreg free
  7042                           
  7043                           ;bootloader.c: 109: }
  7044                           
  7045                           ;bootloader.c: 108: break;
  7046                           
  7047                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  7048                           
  7049                           ;bootloader.c: 105: break;
  7050                           
  7051                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  7052                           
  7053                           ;bootloader.c: 101: };bootloader.c: 102: break;
  7054  008C8A  0012               	return	
  7055  008C8C                     l2440:
  7056  008C8C  0101               	movlb	1	; () banked
  7057  008C8E  5135               	movf	(_os+4)& (0+255),w,b
  7058                           
  7059                           ; Switch size 1, requested type "space"
  7060                           ; Number of cases is 8, Range of values is 16 to 144
  7061                           ; switch strategies available:
  7062                           ; Name         Instructions Cycles
  7063                           ; simple_byte           25    13 (average)
  7064                           ;	Chosen strategy is simple_byte
  7065  008C90  0A10               	xorlw	16	; case 16
  7066  008C92  B4D8               	btfsc	status,2,c
  7067  008C94  D7E6               	goto	l2441
  7068  008C96  0A30               	xorlw	48	; case 32
  7069  008C98  B4D8               	btfsc	status,2,c
  7070  008C9A  D7E9               	goto	l2444
  7071  008C9C  0A10               	xorlw	16	; case 48
  7072  008C9E  B4D8               	btfsc	status,2,c
  7073  008CA0  D7EC               	goto	l2446
  7074  008CA2  0A70               	xorlw	112	; case 64
  7075  008CA4  B4D8               	btfsc	status,2,c
  7076  008CA6  0012               	return	
  7077  008CA8  0A10               	xorlw	16	; case 80
  7078  008CAA  B4D8               	btfsc	status,2,c
  7079  008CAC  0012               	return	
  7080  008CAE  0A30               	xorlw	48	; case 96
  7081  008CB0  B4D8               	btfsc	status,2,c
  7082  008CB2  D7E6               	goto	l2449
  7083  008CB4  0A10               	xorlw	16	; case 112
  7084  008CB6  B4D8               	btfsc	status,2,c
  7085  008CB8  0012               	return	
  7086  008CBA  0AE0               	xorlw	224	; case 144
  7087  008CBC  0012               	return	
  7088  008CBE                     __end_of_bootloader_run:
  7089                           	opt stack 0
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           intcon	equ	0xFF2
  7095                           intcon2	equ	0xFF1
  7096                           intcon3	equ	0xFF0
  7097                           postinc0	equ	0xFEE
  7098                           wreg	equ	0xFE8
  7099                           postdec1	equ	0xFE5
  7100                           plusw1	equ	0xFE3
  7101                           fsr1h	equ	0xFE2
  7102                           fsr1l	equ	0xFE1
  7103                           postinc2	equ	0xFDE
  7104                           plusw2	equ	0xFDB
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8
  7108                           
  7109 ;; *************** function __bootloader_verify_file *****************
  7110 ;; Defined at:
  7111 ;;		line 185 in file "bootloader.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  root           32   22[BANK0 ] struct .
  7116 ;;  address32       4   59[BANK0 ] unsigned long 
  7117 ;;  return_value    4   55[BANK0 ] unsigned long 
  7118 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7130 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7131 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7132 ;;Total ram usage:       49 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    8
  7135 ;; This function calls:
  7136 ;;		__bootloader_check_address
  7137 ;;		_fat_get_file_information
  7138 ;;		_fat_get_file_size
  7139 ;;		_fat_read_from_file_fast
  7140 ;;		_parseHexFileEntry
  7141 ;; This function is called by:
  7142 ;;		_bootloader_run
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text28
  7147  000F76                     __ptext28:
  7148                           	opt stack 0
  7149  000F76                     __bootloader_verify_file:
  7150                           	opt stack 21
  7151                           
  7152                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  7153                           
  7154                           ;incstack = 0
  7155  000F76  0E00               	movlw	0
  7156  000F78  0100               	movlb	0	; () banked
  7157  000F7A  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  7158  000F7C  0E00               	movlw	0
  7159  000F7E  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  7160  000F80  0E00               	movlw	0
  7161  000F82  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  7162  000F84  0E00               	movlw	0
  7163  000F86  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  7167  000F88  51D5               	movf	_hex_file_offset& (0+255),w,b
  7168  000F8A  11D6               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7169  000F8C  11D7               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7170  000F8E  11D8               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7171  000F90  A4D8               	btfss	status,2,c
  7172  000F92  D010               	goto	l2472
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  7176  000F94  0E76               	movlw	low __bootloader_verify_file@root
  7177  000F96  6E30               	movwf	fat_get_file_information@data,c
  7178  000F98  0E00               	movlw	high __bootloader_verify_file@root
  7179  000F9A  6E31               	movwf	fat_get_file_information@data+1,c
  7180  000F9C  51FF               	movf	_file_number& (0+255),w,b
  7181  000F9E  ECE0  F044         	call	_fat_get_file_information
  7182                           
  7183                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  7184  000FA2  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  7185  000FA6  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  7186                           
  7187                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  7188  000FAA  0E00               	movlw	0
  7189  000FAC  0100               	movlb	0	; () banked
  7190  000FAE  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7191  000FB0  0E00               	movlw	0
  7192  000FB2  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7193  000FB4                     l2472:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  7197                           
  7198                           ; BSR set to: 0
  7199  000FB4  51FF               	movf	_file_number& (0+255),w,b
  7200  000FB6  EC89  F045         	call	_fat_get_file_size
  7201  000FBA  C036  F0D1         	movff	?_fat_get_file_size,_hex_file_size
  7202  000FBE  C037  F0D2         	movff	?_fat_get_file_size+1,_hex_file_size+1
  7203  000FC2  C038  F0D3         	movff	?_fat_get_file_size+2,_hex_file_size+2
  7204  000FC6  C039  F0D4         	movff	?_fat_get_file_size+3,_hex_file_size+3
  7205                           
  7206                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  7207  000FCA  0E00               	movlw	0
  7208  000FCC  0100               	movlb	0	; () banked
  7209  000FCE  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  7210  000FD0                     l16258:
  7211                           
  7212                           ; BSR set to: 0
  7213  000FD0  0E0F               	movlw	15
  7214  000FD2  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  7215  000FD4  D001               	goto	l2473
  7216  000FD6  0012               	return	
  7217  000FD8                     l2473:
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  7221                           
  7222                           ; BSR set to: 0
  7223  000FD8  C0D5  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  7224  000FDC  C0D6  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  7225  000FE0  C0D7  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  7226  000FE4  C0D8  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  7227  000FE8  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  7228  000FEA  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  7229  000FEC  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  7230  000FEE  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  7231  000FF0  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  7232  000FF2  0E00               	movlw	0
  7233  000FF4  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  7234  000FF6  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  7235  000FF8  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  7236  000FFA  51D1               	movf	_hex_file_size& (0+255),w,b
  7237  000FFC  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  7238  000FFE  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  7239  001000  51D2               	movf	(_hex_file_size+1)& (0+255),w,b
  7240  001002  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7241  001004  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  7242  001006  51D3               	movf	(_hex_file_size+2)& (0+255),w,b
  7243  001008  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7244  00100A  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  7245  00100C  51D4               	movf	(_hex_file_size+3)& (0+255),w,b
  7246  00100E  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7247  001010  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  7248  001012  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  7249  001014  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  7250  001016  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  7251  001018  E104               	bnz	u13770
  7252  00101A  0E32               	movlw	50
  7253  00101C  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  7254  00101E  A0D8               	btfss	status,0,c
  7255  001020  D01F               	goto	l2475
  7256  001022                     u13770:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7260  001022  C0D5  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7261  001026  C0D6  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7262  00102A  C0D7  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7263  00102E  C0D8  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7264  001032  0E32               	movlw	50
  7265  001034  6E46               	movwf	fat_read_from_file_fast@length,c
  7266  001036  0E00               	movlw	0
  7267  001038  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7268  00103A  0E00               	movlw	0
  7269  00103C  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7270  00103E  0E00               	movlw	0
  7271  001040  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7272  001042  0E90               	movlw	low _file_buffer
  7273  001044  6E4A               	movwf	fat_read_from_file_fast@data,c
  7274  001046  0E02               	movlw	high _file_buffer
  7275  001048  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7276  00104A  0EFB               	movlw	low _fast_read_cluster
  7277  00104C  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7278  00104E  0E00               	movlw	high _fast_read_cluster
  7279  001050  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7280  001052  0EF9               	movlw	low _fast_read_cluster_number
  7281  001054  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7282  001056  0E00               	movlw	high _fast_read_cluster_number
  7283  001058  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7284  00105A  ECCB  F014         	call	_fat_read_from_file_fast	;wreg free
  7285                           
  7286                           ;bootloader.c: 211: }
  7287  00105E  D034               	goto	l2476
  7288  001060                     l2475:
  7289                           
  7290                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7291  001060  C0D5  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7292  001064  C0D6  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7293  001068  C0D7  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7294  00106C  C0D8  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7295  001070  C0D5  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  7296  001074  C0D6  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  7297  001078  C0D7  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  7298  00107C  C0D8  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  7299  001080  0100               	movlb	0	; () banked
  7300  001082  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  7301  001084  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  7302  001086  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  7303  001088  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  7304  00108A  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  7305  00108C  0E00               	movlw	0
  7306  00108E  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  7307  001090  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  7308  001092  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  7309  001094  51D1               	movf	_hex_file_size& (0+255),w,b
  7310  001096  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  7311  001098  6E46               	movwf	fat_read_from_file_fast@length,c
  7312  00109A  51D2               	movf	(_hex_file_size+1)& (0+255),w,b
  7313  00109C  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7314  00109E  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7315  0010A0  51D3               	movf	(_hex_file_size+2)& (0+255),w,b
  7316  0010A2  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7317  0010A4  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7318  0010A6  51D4               	movf	(_hex_file_size+3)& (0+255),w,b
  7319  0010A8  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7320  0010AA  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7321  0010AC  0E90               	movlw	low _file_buffer
  7322  0010AE  6E4A               	movwf	fat_read_from_file_fast@data,c
  7323  0010B0  0E02               	movlw	high _file_buffer
  7324  0010B2  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7325  0010B4  0EFB               	movlw	low _fast_read_cluster
  7326  0010B6  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7327  0010B8  0E00               	movlw	high _fast_read_cluster
  7328  0010BA  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7329  0010BC  0EF9               	movlw	low _fast_read_cluster_number
  7330  0010BE  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7331  0010C0  0E00               	movlw	high _fast_read_cluster_number
  7332  0010C2  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7333  0010C4  ECCB  F014         	call	_fat_read_from_file_fast	;wreg free
  7334  0010C8                     l2476:
  7335                           
  7336                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7337  0010C8  0E90               	movlw	low _file_buffer
  7338  0010CA  6E0C               	movwf	parseHexFileEntry@data,c
  7339  0010CC  0E02               	movlw	high _file_buffer
  7340  0010CE  6E0D               	movwf	parseHexFileEntry@data+1,c
  7341  0010D0  0E00               	movlw	0
  7342  0010D2  6E0E               	movwf	parseHexFileEntry@offset,c
  7343  0010D4  0E00               	movlw	0
  7344  0010D6  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7345  0010D8  0E00               	movlw	0
  7346  0010DA  6E10               	movwf	parseHexFileEntry@offset+2,c
  7347  0010DC  0E00               	movlw	0
  7348  0010DE  6E11               	movwf	parseHexFileEntry@offset+3,c
  7349  0010E0  0E93               	movlw	low _hex_file_entry
  7350  0010E2  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7351  0010E4  0E01               	movlw	high _hex_file_entry
  7352  0010E6  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7353  0010E8  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7354  0010EC  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  7355  0010F0  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  7356  0010F4  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  7357  0010F8  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  7358                           
  7359                           ;bootloader.c: 222: ++hex_file_entries;
  7360  0010FC  0101               	movlb	1	; () banked
  7361  0010FE  4B7A               	infsnz	_hex_file_entries& (0+255),f,b
  7362  001100  2B7B               	incf	(_hex_file_entries+1)& (0+255),f,b
  7363                           
  7364                           ; BSR set to: 1
  7365                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  7366  001102  0E04               	movlw	4
  7367  001104  1997               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  7368  001106  A4D8               	btfss	status,2,c
  7369  001108  D01C               	goto	l2477
  7370                           
  7371                           ; BSR set to: 1
  7372                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  7373  00110A  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7374  00110C  6F4C               	movwf	_extended_linear_address& (0+255),b
  7375  00110E  6B4D               	clrf	(_extended_linear_address+1)& (0+255),b
  7376  001110  6B4E               	clrf	(_extended_linear_address+2)& (0+255),b
  7377  001112  6B4F               	clrf	(_extended_linear_address+3)& (0+255),b
  7378                           
  7379                           ; BSR set to: 1
  7380                           ;bootloader.c: 228: extended_linear_address <<= 8;
  7381  001114  C14E  F14F         	movff	_extended_linear_address+2,_extended_linear_address+3
  7382  001118  C14D  F14E         	movff	_extended_linear_address+1,_extended_linear_address+2
  7383  00111C  C14C  F14D         	movff	_extended_linear_address,_extended_linear_address+1
  7384  001120  6B4C               	clrf	_extended_linear_address& (0+255),b
  7385                           
  7386                           ; BSR set to: 1
  7387                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  7388  001122  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7389  001124  134C               	iorwf	_extended_linear_address& (0+255),f,b
  7390                           
  7391                           ; BSR set to: 1
  7392                           ;bootloader.c: 230: extended_linear_address <<= 8;
  7393  001126  C14E  F14F         	movff	_extended_linear_address+2,_extended_linear_address+3
  7394  00112A  C14D  F14E         	movff	_extended_linear_address+1,_extended_linear_address+2
  7395  00112E  C14C  F14D         	movff	_extended_linear_address,_extended_linear_address+1
  7396  001132  6B4C               	clrf	_extended_linear_address& (0+255),b
  7397                           
  7398                           ; BSR set to: 1
  7399                           ;bootloader.c: 231: extended_linear_address <<= 8;
  7400  001134  C14E  F14F         	movff	_extended_linear_address+2,_extended_linear_address+3
  7401  001138  C14D  F14E         	movff	_extended_linear_address+1,_extended_linear_address+2
  7402  00113C  C14C  F14D         	movff	_extended_linear_address,_extended_linear_address+1
  7403  001140  6B4C               	clrf	_extended_linear_address& (0+255),b
  7404  001142                     l2477:
  7405                           
  7406                           ; BSR set to: 1
  7407                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  7408                           
  7409                           ; BSR set to: 1
  7410  001142  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7411  001144  A4D8               	btfss	status,2,c
  7412  001146  D05D               	goto	l2481
  7413                           
  7414                           ; BSR set to: 1
  7415                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7416  001148  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7417  00114A  254C               	addwf	_extended_linear_address& (0+255),w,b
  7418  00114C  0100               	movlb	0	; () banked
  7419  00114E  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7420  001150  0101               	movlb	1	; () banked
  7421  001152  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7422  001154  214D               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7423  001156  0100               	movlb	0	; () banked
  7424  001158  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7425  00115A  0E00               	movlw	0
  7426  00115C  0101               	movlb	1	; () banked
  7427  00115E  214E               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7428  001160  0100               	movlb	0	; () banked
  7429  001162  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7430  001164  0E00               	movlw	0
  7431  001166  0101               	movlb	1	; () banked
  7432  001168  214F               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7433  00116A  0100               	movlb	0	; () banked
  7434  00116C  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7435                           
  7436                           ;bootloader.c: 241: if(address32<file_minimum_address)
  7437  00116E  0101               	movlb	1	; () banked
  7438  001170  5154               	movf	_file_minimum_address& (0+255),w,b
  7439  001172  0100               	movlb	0	; () banked
  7440  001174  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7441  001176  0101               	movlb	1	; () banked
  7442  001178  5155               	movf	(_file_minimum_address+1)& (0+255),w,b
  7443  00117A  0100               	movlb	0	; () banked
  7444  00117C  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7445  00117E  0101               	movlb	1	; () banked
  7446  001180  5156               	movf	(_file_minimum_address+2)& (0+255),w,b
  7447  001182  0100               	movlb	0	; () banked
  7448  001184  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7449  001186  0101               	movlb	1	; () banked
  7450  001188  5157               	movf	(_file_minimum_address+3)& (0+255),w,b
  7451  00118A  0100               	movlb	0	; () banked
  7452  00118C  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7453  00118E  B0D8               	btfsc	status,0,c
  7454  001190  D008               	goto	l2479
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  7458  001192  C09B  F154         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7459  001196  C09C  F155         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7460  00119A  C09D  F156         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7461  00119E  C09E  F157         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7462  0011A2                     l2479:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  7466                           
  7467                           ; BSR set to: 0
  7468  0011A2  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7469  0011A4  0101               	movlb	1	; () banked
  7470  0011A6  5D50               	subwf	_file_maximum_address& (0+255),w,b
  7471  0011A8  0100               	movlb	0	; () banked
  7472  0011AA  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7473  0011AC  0101               	movlb	1	; () banked
  7474  0011AE  5951               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7475  0011B0  0100               	movlb	0	; () banked
  7476  0011B2  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7477  0011B4  0101               	movlb	1	; () banked
  7478  0011B6  5952               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7479  0011B8  0100               	movlb	0	; () banked
  7480  0011BA  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7481  0011BC  0101               	movlb	1	; () banked
  7482  0011BE  5953               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7483  0011C0  B0D8               	btfsc	status,0,c
  7484  0011C2  D008               	goto	l2480
  7485                           
  7486                           ; BSR set to: 1
  7487                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  7488  0011C4  C09B  F150         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7489  0011C8  C09C  F151         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7490  0011CC  C09D  F152         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7491  0011D0  C09E  F153         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7492  0011D4                     l2480:
  7493                           
  7494                           ; BSR set to: 1
  7495                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7496                           
  7497                           ; BSR set to: 1
  7498  0011D4  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7499  0011D8  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7500  0011DC  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7501  0011E0  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7502  0011E4  C193  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7503  0011E8  EC68  F035         	call	__bootloader_check_address	;wreg free
  7504  0011EC  0AFF               	xorlw	255
  7505  0011EE  A4D8               	btfss	status,2,c
  7506  0011F0  D008               	goto	l2481
  7507                           
  7508                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  7509  0011F2  0E0B               	movlw	11
  7510  0011F4  0101               	movlb	1	; () banked
  7511  0011F6  6F8E               	movwf	_last_error& (0+255),b
  7512                           
  7513                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7514  0011F8  0E50               	movlw	80
  7515  0011FA  6F35               	movwf	(_os+4)& (0+255),b
  7516                           
  7517                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7518  0011FC  0E50               	movlw	80
  7519  0011FE  6F36               	movwf	(_os+5)& (0+255),b
  7520                           
  7521                           ;bootloader.c: 258: break;
  7522  001200  0012               	return	
  7523  001202                     l2481:
  7524                           
  7525                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  7526                           
  7527                           ; BSR set to: 1
  7528                           
  7529                           ; BSR set to: 1
  7530  001202  0100               	movlb	0	; () banked
  7531  001204  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7532  001206  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7533  001208  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7534  00120A  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7535  00120C  A4D8               	btfss	status,2,c
  7536  00120E  D026               	goto	l2482
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  7540  001210  C17A  F178         	movff	_hex_file_entries,_total_hex_file_entries
  7541  001214  C17B  F179         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;bootloader.c: 267: hex_file_entries = 0;
  7545  001218  0E00               	movlw	0
  7546  00121A  0101               	movlb	1	; () banked
  7547  00121C  6F7B               	movwf	(_hex_file_entries+1)& (0+255),b
  7548  00121E  0E00               	movlw	0
  7549  001220  6F7A               	movwf	_hex_file_entries& (0+255),b
  7550                           
  7551                           ;bootloader.c: 268: hex_file_offset = 0;
  7552  001222  0E00               	movlw	0
  7553  001224  0100               	movlb	0	; () banked
  7554  001226  6FD5               	movwf	_hex_file_offset& (0+255),b
  7555  001228  0E00               	movlw	0
  7556  00122A  6FD6               	movwf	(_hex_file_offset+1)& (0+255),b
  7557  00122C  0E00               	movlw	0
  7558  00122E  6FD7               	movwf	(_hex_file_offset+2)& (0+255),b
  7559  001230  0E00               	movlw	0
  7560  001232  6FD8               	movwf	(_hex_file_offset+3)& (0+255),b
  7561                           
  7562                           ;bootloader.c: 269: extended_linear_address = 0;
  7563  001234  0E00               	movlw	0
  7564  001236  0101               	movlb	1	; () banked
  7565  001238  6F4C               	movwf	_extended_linear_address& (0+255),b
  7566  00123A  0E00               	movlw	0
  7567  00123C  6F4D               	movwf	(_extended_linear_address+1)& (0+255),b
  7568  00123E  0E00               	movlw	0
  7569  001240  6F4E               	movwf	(_extended_linear_address+2)& (0+255),b
  7570  001242  0E00               	movlw	0
  7571  001244  6F4F               	movwf	(_extended_linear_address+3)& (0+255),b
  7572                           
  7573                           ;bootloader.c: 270: flash_pages_written = 0;
  7574  001246  0E00               	movlw	0
  7575  001248  6F77               	movwf	(_flash_pages_written+1)& (0+255),b
  7576  00124A  0E00               	movlw	0
  7577  00124C  6F76               	movwf	_flash_pages_written& (0+255),b
  7578                           
  7579                           ;bootloader.c: 271: start_from_byte_next = 0;
  7580  00124E  0E00               	movlw	0
  7581  001250  6F8D               	movwf	_start_from_byte_next& (0+255),b
  7582                           
  7583                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7584  001252  0E40               	movlw	64
  7585  001254  6F35               	movwf	(_os+4)& (0+255),b
  7586                           
  7587                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7588  001256  0E40               	movlw	64
  7589  001258  6F36               	movwf	(_os+5)& (0+255),b
  7590                           
  7591                           ;bootloader.c: 275: break;
  7592  00125A  0012               	return	
  7593  00125C                     l2482:
  7594                           
  7595                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  7596                           
  7597                           ; BSR set to: 1
  7598  00125C  0EF1               	movlw	241
  7599  00125E  0100               	movlb	0	; () banked
  7600  001260  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7601  001262  0EFF               	movlw	255
  7602  001264  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7603  001266  0EFF               	movlw	255
  7604  001268  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7605  00126A  0EFF               	movlw	255
  7606  00126C  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7607  00126E  A0D8               	btfss	status,0,c
  7608  001270  D008               	goto	l2484
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  7612  001272  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7613  001274  0B0F               	andlw	15
  7614  001276  0101               	movlb	1	; () banked
  7615  001278  6F8E               	movwf	_last_error& (0+255),b
  7616                           
  7617                           ; BSR set to: 1
  7618                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7619  00127A  0E50               	movlw	80
  7620  00127C  6F35               	movwf	(_os+4)& (0+255),b
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7624  00127E  0E50               	movlw	80
  7625  001280  D7EB               	goto	L1
  7626  001282                     l2484:
  7627                           
  7628                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  7629                           
  7630                           ; BSR set to: 1
  7631  001282  0100               	movlb	0	; () banked
  7632  001284  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7633  001286  27D5               	addwf	_hex_file_offset& (0+255),f,b
  7634  001288  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7635  00128A  23D6               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7636  00128C  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7637  00128E  23D7               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7638  001290  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7639  001292  23D8               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7640                           
  7641                           ; BSR set to: 0
  7642                           
  7643                           ; BSR set to: 0
  7644  001294  0100               	movlb	0	; () banked
  7645  001296  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7646  001298  D69B               	goto	l16258
  7647  00129A                     __end_of__bootloader_verify_file:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           intcon	equ	0xFF2
  7654                           intcon2	equ	0xFF1
  7655                           intcon3	equ	0xFF0
  7656                           postinc0	equ	0xFEE
  7657                           wreg	equ	0xFE8
  7658                           postdec1	equ	0xFE5
  7659                           plusw1	equ	0xFE3
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           postinc2	equ	0xFDE
  7663                           plusw2	equ	0xFDB
  7664                           fsr2h	equ	0xFDA
  7665                           fsr2l	equ	0xFD9
  7666                           status	equ	0xFD8
  7667                           
  7668 ;; *************** function __bootloader_program *****************
  7669 ;; Defined at:
  7670 ;;		line 294 in file "bootloader.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  root           32   28[BANK0 ] struct .
  7675 ;;  address32       4   64[BANK0 ] unsigned long 
  7676 ;;  return_value    4   60[BANK0 ] unsigned long 
  7677 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7678 ;;  cntr            2   69[BANK0 ] unsigned int 
  7679 ;;  address_with    2   26[BANK0 ] unsigned int 
  7680 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7681 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7682 ;;		 -> pageBuffer(1024), 
  7683 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;Total ram usage:       59 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    8
  7700 ;; This function calls:
  7701 ;;		__bootloader_check_address
  7702 ;;		_fat_get_file_information
  7703 ;;		_fat_read_from_file_fast
  7704 ;;		_internalFlash_addressWithinPage
  7705 ;;		_internalFlash_erasePage
  7706 ;;		_internalFlash_getBuffer
  7707 ;;		_internalFlash_pageFromAddress
  7708 ;;		_internalFlash_readPage
  7709 ;;		_internalFlash_writePage
  7710 ;;		_parseHexFileEntry
  7711 ;; This function is called by:
  7712 ;;		_bootloader_run
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text29
  7717  00085A                     __ptext29:
  7718                           	opt stack 0
  7719  00085A                     __bootloader_program:
  7720                           	opt stack 21
  7721                           
  7722                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  7723                           
  7724                           ;incstack = 0
  7725  00085A  0E00               	movlw	0
  7726  00085C  0100               	movlb	0	; () banked
  7727  00085E  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7728  000860  0E00               	movlw	0
  7729  000862  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7730                           
  7731                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  7732  000864  0E00               	movlw	0
  7733  000866  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7734  000868  0E00               	movlw	0
  7735  00086A  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7736  00086C  0E00               	movlw	0
  7737  00086E  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7738  000870  0E00               	movlw	0
  7739  000872  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  7743  000874  51D5               	movf	_hex_file_offset& (0+255),w,b
  7744  000876  11D6               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7745  000878  11D7               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7746  00087A  11D8               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7747  00087C  A4D8               	btfss	status,2,c
  7748  00087E  D010               	goto	l2489
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  7752  000880  0E7C               	movlw	low __bootloader_program@root
  7753  000882  6E30               	movwf	fat_get_file_information@data,c
  7754  000884  0E00               	movlw	high __bootloader_program@root
  7755  000886  6E31               	movwf	fat_get_file_information@data+1,c
  7756  000888  51FF               	movf	_file_number& (0+255),w,b
  7757  00088A  ECE0  F044         	call	_fat_get_file_information
  7758                           
  7759                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  7760  00088E  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7761  000892  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7762                           
  7763                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  7764  000896  0E00               	movlw	0
  7765  000898  0100               	movlb	0	; () banked
  7766  00089A  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7767  00089C  0E00               	movlw	0
  7768  00089E  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7769  0008A0                     l2489:
  7770                           
  7771                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  7772                           
  7773                           ; BSR set to: 0
  7774                           
  7775                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  7776                           
  7777                           ; BSR set to: 0
  7778  0008A0  C0D5  F06E         	movff	_hex_file_offset,??__bootloader_program
  7779  0008A4  C0D6  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7780  0008A8  C0D7  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7781  0008AC  C0D8  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7782  0008B0  0100               	movlb	0	; () banked
  7783  0008B2  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7784  0008B4  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7785  0008B6  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7786  0008B8  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7787  0008BA  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7788  0008BC  0E00               	movlw	0
  7789  0008BE  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7790  0008C0  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7791  0008C2  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7792  0008C4  51D1               	movf	_hex_file_size& (0+255),w,b
  7793  0008C6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7794  0008C8  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7795  0008CA  51D2               	movf	(_hex_file_size+1)& (0+255),w,b
  7796  0008CC  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7797  0008CE  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7798  0008D0  51D3               	movf	(_hex_file_size+2)& (0+255),w,b
  7799  0008D2  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7800  0008D4  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7801  0008D6  51D4               	movf	(_hex_file_size+3)& (0+255),w,b
  7802  0008D8  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7803  0008DA  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7804  0008DC  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7805  0008DE  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7806  0008E0  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7807  0008E2  E104               	bnz	u13870
  7808  0008E4  0E32               	movlw	50
  7809  0008E6  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7810  0008E8  A0D8               	btfss	status,0,c
  7811  0008EA  D01F               	goto	l2491
  7812  0008EC                     u13870:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7816  0008EC  C0D5  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7817  0008F0  C0D6  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7818  0008F4  C0D7  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7819  0008F8  C0D8  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7820  0008FC  0E32               	movlw	50
  7821  0008FE  6E46               	movwf	fat_read_from_file_fast@length,c
  7822  000900  0E00               	movlw	0
  7823  000902  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7824  000904  0E00               	movlw	0
  7825  000906  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7826  000908  0E00               	movlw	0
  7827  00090A  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7828  00090C  0E90               	movlw	low _file_buffer
  7829  00090E  6E4A               	movwf	fat_read_from_file_fast@data,c
  7830  000910  0E02               	movlw	high _file_buffer
  7831  000912  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7832  000914  0EFB               	movlw	low _fast_read_cluster
  7833  000916  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7834  000918  0E00               	movlw	high _fast_read_cluster
  7835  00091A  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7836  00091C  0EF9               	movlw	low _fast_read_cluster_number
  7837  00091E  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7838  000920  0E00               	movlw	high _fast_read_cluster_number
  7839  000922  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7840  000924  ECCB  F014         	call	_fat_read_from_file_fast	;wreg free
  7841                           
  7842                           ;bootloader.c: 325: }
  7843  000928  D034               	goto	l2492
  7844  00092A                     l2491:
  7845                           
  7846                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7847  00092A  C0D5  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7848  00092E  C0D6  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7849  000932  C0D7  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7850  000936  C0D8  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7851  00093A  C0D5  F06E         	movff	_hex_file_offset,??__bootloader_program
  7852  00093E  C0D6  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7853  000942  C0D7  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7854  000946  C0D8  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7855  00094A  0100               	movlb	0	; () banked
  7856  00094C  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7857  00094E  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7858  000950  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7859  000952  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7860  000954  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7861  000956  0E00               	movlw	0
  7862  000958  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7863  00095A  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7864  00095C  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7865  00095E  51D1               	movf	_hex_file_size& (0+255),w,b
  7866  000960  256E               	addwf	??__bootloader_program& (0+255),w,b
  7867  000962  6E46               	movwf	fat_read_from_file_fast@length,c
  7868  000964  51D2               	movf	(_hex_file_size+1)& (0+255),w,b
  7869  000966  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7870  000968  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7871  00096A  51D3               	movf	(_hex_file_size+2)& (0+255),w,b
  7872  00096C  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7873  00096E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7874  000970  51D4               	movf	(_hex_file_size+3)& (0+255),w,b
  7875  000972  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7876  000974  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7877  000976  0E90               	movlw	low _file_buffer
  7878  000978  6E4A               	movwf	fat_read_from_file_fast@data,c
  7879  00097A  0E02               	movlw	high _file_buffer
  7880  00097C  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7881  00097E  0EFB               	movlw	low _fast_read_cluster
  7882  000980  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7883  000982  0E00               	movlw	high _fast_read_cluster
  7884  000984  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7885  000986  0EF9               	movlw	low _fast_read_cluster_number
  7886  000988  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7887  00098A  0E00               	movlw	high _fast_read_cluster_number
  7888  00098C  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7889  00098E  ECCB  F014         	call	_fat_read_from_file_fast	;wreg free
  7890  000992                     l2492:
  7891                           
  7892                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7893  000992  0E90               	movlw	low _file_buffer
  7894  000994  6E0C               	movwf	parseHexFileEntry@data,c
  7895  000996  0E02               	movlw	high _file_buffer
  7896  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  7897  00099A  0E00               	movlw	0
  7898  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  7899  00099E  0E00               	movlw	0
  7900  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7901  0009A2  0E00               	movlw	0
  7902  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  7903  0009A6  0E00               	movlw	0
  7904  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  7905  0009AA  0E93               	movlw	low _hex_file_entry
  7906  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7907  0009AE  0E01               	movlw	high _hex_file_entry
  7908  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7909  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7910  0009B6  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7911  0009BA  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7912  0009BE  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7913  0009C2  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7914                           
  7915                           ;bootloader.c: 336: ++hex_file_entries;
  7916  0009C6  0101               	movlb	1	; () banked
  7917  0009C8  4B7A               	infsnz	_hex_file_entries& (0+255),f,b
  7918  0009CA  2B7B               	incf	(_hex_file_entries+1)& (0+255),f,b
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  7922  0009CC  0EF1               	movlw	241
  7923  0009CE  0100               	movlb	0	; () banked
  7924  0009D0  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7925  0009D2  0EFF               	movlw	255
  7926  0009D4  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7927  0009D6  0EFF               	movlw	255
  7928  0009D8  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7929  0009DA  0EFF               	movlw	255
  7930  0009DC  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7931  0009DE  A0D8               	btfss	status,0,c
  7932  0009E0  D006               	goto	l2493
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7936  0009E2  0E50               	movlw	80
  7937  0009E4  0101               	movlb	1	; () banked
  7938  0009E6  6F35               	movwf	(_os+4)& (0+255),b
  7939                           
  7940                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7941  0009E8  0E50               	movlw	80
  7942  0009EA  6F36               	movwf	(_os+5)& (0+255),b
  7943                           
  7944                           ; BSR set to: 1
  7945                           ;bootloader.c: 344: return;
  7946  0009EC  0012               	return	
  7947  0009EE                     l2493:
  7948                           
  7949                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  7950                           
  7951                           ; BSR set to: 1
  7952  0009EE  0100               	movlb	0	; () banked
  7953  0009F0  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7954  0009F2  27D5               	addwf	_hex_file_offset& (0+255),f,b
  7955  0009F4  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7956  0009F6  23D6               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7957  0009F8  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7958  0009FA  23D7               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7959  0009FC  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7960  0009FE  23D8               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  7964  000A00  D0F9               	goto	l2496
  7965  000A02                     
  7966                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  7967                           
  7968                           ; BSR set to: 0
  7969  000A02  0101               	movlb	1	; () banked
  7970  000A04  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7971  000A06  6F4C               	movwf	_extended_linear_address& (0+255),b
  7972  000A08  6B4D               	clrf	(_extended_linear_address+1)& (0+255),b
  7973  000A0A  6B4E               	clrf	(_extended_linear_address+2)& (0+255),b
  7974  000A0C  6B4F               	clrf	(_extended_linear_address+3)& (0+255),b
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7978  000A0E  C14E  F14F         	movff	_extended_linear_address+2,_extended_linear_address+3
  7979  000A12  C14D  F14E         	movff	_extended_linear_address+1,_extended_linear_address+2
  7980  000A16  C14C  F14D         	movff	_extended_linear_address,_extended_linear_address+1
  7981  000A1A  6B4C               	clrf	_extended_linear_address& (0+255),b
  7982                           
  7983                           ; BSR set to: 1
  7984                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  7985  000A1C  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7986  000A1E  134C               	iorwf	_extended_linear_address& (0+255),f,b
  7987                           
  7988                           ; BSR set to: 1
  7989                           ;bootloader.c: 361: extended_linear_address <<= 8;
  7990  000A20  C14E  F14F         	movff	_extended_linear_address+2,_extended_linear_address+3
  7991  000A24  C14D  F14E         	movff	_extended_linear_address+1,_extended_linear_address+2
  7992  000A28  C14C  F14D         	movff	_extended_linear_address,_extended_linear_address+1
  7993  000A2C  6B4C               	clrf	_extended_linear_address& (0+255),b
  7994                           
  7995                           ; BSR set to: 1
  7996                           ;bootloader.c: 362: extended_linear_address <<= 8;
  7997  000A2E  C14E  F14F         	movff	_extended_linear_address+2,_extended_linear_address+3
  7998  000A32  C14D  F14E         	movff	_extended_linear_address+1,_extended_linear_address+2
  7999  000A36  C14C  F14D         	movff	_extended_linear_address,_extended_linear_address+1
  8000  000A3A  6B4C               	clrf	_extended_linear_address& (0+255),b
  8001                           
  8002                           ; BSR set to: 1
  8003                           ;bootloader.c: 364: break;
  8004                           
  8005                           ;bootloader.c: 363: continue;
  8006  000A3C  D731               	goto	l2489
  8007  000A3E                     l2500:
  8008                           
  8009                           ; BSR set to: 1
  8010                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  8011  000A3E  C18D  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;bootloader.c: 371: start_from_byte_next = 0;
  8015  000A42  0E00               	movlw	0
  8016  000A44  6F8D               	movwf	_start_from_byte_next& (0+255),b
  8017                           
  8018                           ; BSR set to: 1
  8019                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  8020  000A46  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  8021  000A48  254C               	addwf	_extended_linear_address& (0+255),w,b
  8022  000A4A  0100               	movlb	0	; () banked
  8023  000A4C  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  8024  000A4E  0101               	movlb	1	; () banked
  8025  000A50  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  8026  000A52  214D               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  8027  000A54  0100               	movlb	0	; () banked
  8028  000A56  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  8029  000A58  0E00               	movlw	0
  8030  000A5A  0101               	movlb	1	; () banked
  8031  000A5C  214E               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  8032  000A5E  0100               	movlb	0	; () banked
  8033  000A60  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  8034  000A62  0E00               	movlw	0
  8035  000A64  0101               	movlb	1	; () banked
  8036  000A66  214F               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  8037  000A68  0100               	movlb	0	; () banked
  8038  000A6A  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  8042  000A6C  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8043  000A6E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8044  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  8045  000A72  0E00               	movlw	0
  8046  000A74  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8047  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  8048  000A78  0E00               	movlw	0
  8049  000A7A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8050  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  8051  000A7E  0E00               	movlw	0
  8052  000A80  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8053  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  8054  000A84  EC33  F050         	call	_internalFlash_pageFromAddress	;wreg free
  8055  000A88  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  8056  000A8C  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  8057                           
  8058                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  8059  000A90  0100               	movlb	0	; () banked
  8060  000A92  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8061  000A94  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8062  000A96  6E01               	movwf	__bootloader_check_address@address,c
  8063  000A98  0E00               	movlw	0
  8064  000A9A  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8065  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  8066  000A9E  0E00               	movlw	0
  8067  000AA0  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8068  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  8069  000AA4  0E00               	movlw	0
  8070  000AA6  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8071  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  8072  000AAA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  8073  000AAC  0800               	sublw	0
  8074  000AAE  0101               	movlb	1	; () banked
  8075  000AB0  2593               	addwf	_hex_file_entry& (0+255),w,b
  8076  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  8077  000AB4  EC68  F035         	call	__bootloader_check_address	;wreg free
  8078  000AB8  0900               	iorlw	0
  8079  000ABA  A4D8               	btfss	status,2,c
  8080  000ABC  D6F1               	goto	l2489
  8081                           
  8082                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  8083                           
  8084                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  8085  000ABE  0100               	movlb	0	; () banked
  8086  000AC0  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8087  000AC2  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8088  000AC4  A4D8               	btfss	status,2,c
  8089  000AC6  D010               	goto	l2502
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  8093  000AC8  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  8094  000ACC  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  8098  000AD0  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  8099  000AD4  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  8100  000AD8  EC0B  F04C         	call	_internalFlash_readPage	;wreg free
  8101                           
  8102                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  8103  000ADC  EC11  F051         	call	_internalFlash_getBuffer	;wreg free
  8104  000AE0  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  8105  000AE4  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  8106  000AE8                     l2502:
  8107                           
  8108                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  8109  000AE8  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  8110  000AEC  0100               	movlb	0	; () banked
  8111  000AEE  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  8112  000AF0  D05D               	goto	l2503
  8113  000AF2                     
  8114                           ; BSR set to: 0
  8115                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  8116                           
  8117                           ; BSR set to: 0
  8118  000AF2  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  8119  000AF4  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8120  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  8121  000AF8  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  8122  000AFA  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8123  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  8124  000AFE  0E00               	movlw	0
  8125  000B00  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8126  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  8127  000B04  0E00               	movlw	0
  8128  000B06  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8129  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  8130  000B0A  EC33  F050         	call	_internalFlash_pageFromAddress	;wreg free
  8131  000B0E  0100               	movlb	0	; () banked
  8132  000B10  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8133  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  8134  000B14  E12A               	bnz	l16390
  8135  000B16  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8136  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  8137  000B1A  A4D8               	btfss	status,2,c
  8138  000B1C  D026               	goto	l2505
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  8142  000B1E  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  8143  000B20  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  8144  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  8145  000B24  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  8146  000B26  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  8147  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  8148  000B2A  0E00               	movlw	0
  8149  000B2C  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  8150  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  8151  000B30  0E00               	movlw	0
  8152  000B32  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  8153  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  8154  000B36  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  8155  000B3A  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  8156  000B3E  EC58  F047         	call	_internalFlash_addressWithinPage	;wreg free
  8157  000B42  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  8158  000B46  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  8159                           
  8160                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  8161  000B4A  0E98               	movlw	low (_hex_file_entry+5)
  8162  000B4C  0100               	movlb	0	; () banked
  8163  000B4E  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  8164  000B50  6ED9               	movwf	fsr2l,c
  8165  000B52  0E01               	movlw	high (_hex_file_entry+5)
  8166  000B54  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  8167  000B56  6EDA               	movwf	fsr2h,c
  8168  000B58  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  8169  000B5A  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  8170  000B5C  6EE1               	movwf	fsr1l,c
  8171  000B5E  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  8172  000B60  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  8173  000B62  6EE2               	movwf	fsr1h,c
  8174  000B64  CFDF FFE7          	movff	indf2,indf1
  8175                           
  8176                           ;bootloader.c: 401: }
  8177  000B68  D01E               	goto	l2506
  8178  000B6A                     l2505:
  8179  000B6A                     l16390:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  8183  000B6A  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  8184  000B6C  5FD5               	subwf	_hex_file_offset& (0+255),f,b
  8185  000B6E  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  8186  000B70  5BD6               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  8187  000B72  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  8188  000B74  5BD7               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  8189  000B76  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  8190  000B78  5BD8               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;bootloader.c: 406: --hex_file_entries;
  8194  000B7A  0101               	movlb	1	; () banked
  8195  000B7C  077A               	decf	_hex_file_entries& (0+255),f,b
  8196  000B7E  A0D8               	btfss	status,0,c
  8197  000B80  077B               	decf	(_hex_file_entries+1)& (0+255),f,b
  8198                           
  8199                           ; BSR set to: 1
  8200                           ;bootloader.c: 408: start_from_byte_next = cntr;
  8201  000B82  C0A5  F18D         	movff	__bootloader_program@cntr,_start_from_byte_next
  8202                           
  8203                           ; BSR set to: 1
  8204                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  8205  000B86  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  8206  000B8A  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  8207  000B8E  ECC0  F045         	call	_internalFlash_erasePage	;wreg free
  8208                           
  8209                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  8210  000B92  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  8211  000B96  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  8212  000B9A  EC9B  F03B         	call	_internalFlash_writePage	;wreg free
  8213                           
  8214                           ;bootloader.c: 412: ++flash_pages_written;
  8215  000B9E  0101               	movlb	1	; () banked
  8216  000BA0  4B76               	infsnz	_flash_pages_written& (0+255),f,b
  8217  000BA2  2B77               	incf	(_flash_pages_written+1)& (0+255),f,b
  8218                           
  8219                           ; BSR set to: 1
  8220                           ;bootloader.c: 414: return;
  8221  000BA4  0012               	return	
  8222  000BA6                     l2506:
  8223                           
  8224                           ; BSR set to: 1
  8225  000BA6  0100               	movlb	0	; () banked
  8226  000BA8  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  8227  000BAA  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  8228  000BAC                     l2503:
  8229                           
  8230                           ; BSR set to: 0
  8231                           
  8232                           ; BSR set to: 0
  8233  000BAC  0101               	movlb	1	; () banked
  8234  000BAE  5193               	movf	_hex_file_entry& (0+255),w,b
  8235  000BB0  0100               	movlb	0	; () banked
  8236  000BB2  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  8237  000BB4  0101               	movlb	1	; () banked
  8238  000BB6  5194               	movf	(_hex_file_entry+1)& (0+255),w,b
  8239  000BB8  0100               	movlb	0	; () banked
  8240  000BBA  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  8241  000BBC  B0D8               	btfsc	status,0,c
  8242  000BBE  D670               	goto	l2489
  8243  000BC0  D798               	goto	l2504
  8244  000BC2                     
  8245                           ;bootloader.c: 422: if(page_to_write!=0)
  8246                           
  8247                           ; BSR set to: 0
  8248  000BC2  0100               	movlb	0	; () banked
  8249  000BC4  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  8250  000BC6  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  8251  000BC8  B4D8               	btfsc	status,2,c
  8252  000BCA  0012               	return	
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  8256  000BCC  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  8257  000BD0  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  8258  000BD4  ECC0  F045         	call	_internalFlash_erasePage	;wreg free
  8259                           
  8260                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  8261  000BD8  C0A7  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  8262  000BDC  C0A8  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  8263  000BE0  EC9B  F03B         	call	_internalFlash_writePage	;wreg free
  8264                           
  8265                           ;bootloader.c: 427: ++flash_pages_written;
  8266  000BE4  0101               	movlb	1	; () banked
  8267  000BE6  4B76               	infsnz	_flash_pages_written& (0+255),f,b
  8268  000BE8  2B77               	incf	(_flash_pages_written+1)& (0+255),f,b
  8269                           
  8270                           ; BSR set to: 1
  8271                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  8272  000BEA  0E70               	movlw	112
  8273  000BEC  6F35               	movwf	(_os+4)& (0+255),b
  8274                           
  8275                           ; BSR set to: 1
  8276                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  8277  000BEE  0E70               	movlw	112
  8278  000BF0  6F36               	movwf	(_os+5)& (0+255),b
  8279                           
  8280                           ; BSR set to: 1
  8281                           ;bootloader.c: 431: };bootloader.c: 433: return;
  8282                           
  8283                           ; BSR set to: 1
  8284  000BF2  0012               	return	
  8285  000BF4                     l2496:
  8286                           
  8287                           ; BSR set to: 1
  8288  000BF4  0101               	movlb	1	; () banked
  8289  000BF6  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  8290                           
  8291                           ; Switch size 1, requested type "space"
  8292                           ; Number of cases is 3, Range of values is 0 to 4
  8293                           ; switch strategies available:
  8294                           ; Name         Instructions Cycles
  8295                           ; simple_byte           10     6 (average)
  8296                           ;	Chosen strategy is simple_byte
  8297  000BF8  0A00               	xorlw	0	; case 0
  8298  000BFA  B4D8               	btfsc	status,2,c
  8299  000BFC  D720               	goto	l2500
  8300  000BFE  0A01               	xorlw	1	; case 1
  8301  000C00  B4D8               	btfsc	status,2,c
  8302  000C02  D7DF               	goto	l2508
  8303  000C04  0A05               	xorlw	5	; case 4
  8304  000C06  B4D8               	btfsc	status,2,c
  8305  000C08  D6FC               	goto	l2497
  8306                           
  8307                           ; BSR set to: 1
  8308                           
  8309                           ; BSR set to: 1
  8310  000C0A  D64A               	goto	l2489
  8311  000C0C                     __end_of__bootloader_program:
  8312                           	opt stack 0
  8313                           tblptru	equ	0xFF8
  8314                           tblptrh	equ	0xFF7
  8315                           tblptrl	equ	0xFF6
  8316                           tablat	equ	0xFF5
  8317                           intcon	equ	0xFF2
  8318                           intcon2	equ	0xFF1
  8319                           intcon3	equ	0xFF0
  8320                           postinc0	equ	0xFEE
  8321                           wreg	equ	0xFE8
  8322                           indf1	equ	0xFE7
  8323                           postdec1	equ	0xFE5
  8324                           plusw1	equ	0xFE3
  8325                           fsr1h	equ	0xFE2
  8326                           fsr1l	equ	0xFE1
  8327                           indf2	equ	0xFDF
  8328                           postinc2	equ	0xFDE
  8329                           plusw2	equ	0xFDB
  8330                           fsr2h	equ	0xFDA
  8331                           fsr2l	equ	0xFD9
  8332                           status	equ	0xFD8
  8333                           
  8334 ;; *************** function _parseHexFileEntry *****************
  8335 ;; Defined at:
  8336 ;;		line 59 in file "hex.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  data            2   11[COMRAM] PTR unsigned char 
  8339 ;;		 -> file_buffer(50), 
  8340 ;;  offset          4   13[COMRAM] unsigned long 
  8341 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  8342 ;;		 -> hex_file_entry(23), 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  i               1   27[COMRAM] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  4   11[COMRAM] unsigned long 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8354 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;Total ram usage:       17 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    2
  8361 ;; This function calls:
  8362 ;;		_hexCharsToUint16
  8363 ;;		_hexCharsToUint8
  8364 ;; This function is called by:
  8365 ;;		__bootloader_verify_file
  8366 ;;		__bootloader_program
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text30
  8371  000020                     __ptext30:
  8372                           	opt stack 0
  8373  000020                     _parseHexFileEntry:
  8374                           	opt stack 26
  8375                           
  8376                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  8377                           
  8378                           ;incstack = 0
  8379  000020  500E               	movf	parseHexFileEntry@offset,w,c
  8380  000022  240C               	addwf	parseHexFileEntry@data,w,c
  8381  000024  6ED9               	movwf	fsr2l,c
  8382  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  8383  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8384  00002A  6EDA               	movwf	fsr2h,c
  8385  00002C  0E3A               	movlw	58
  8386  00002E  18DE               	xorwf	postinc2,w,c
  8387  000030  B4D8               	btfsc	status,2,c
  8388  000032  D005               	goto	l2352
  8389                           
  8390                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  8391  000034  680C               	setf	?_parseHexFileEntry,c
  8392  000036  680D               	setf	?_parseHexFileEntry+1,c
  8393  000038  680E               	setf	?_parseHexFileEntry+2,c
  8394  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8395  00003C  0012               	return	
  8396  00003E                     l2352:
  8397                           
  8398                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8399  00003E  0E02               	movlw	2
  8400  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8401  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8402  000044  0E00               	movlw	0
  8403  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8404  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8405  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8406  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8407  00004E  6ED9               	movwf	fsr2l,c
  8408  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8409  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8410  000054  6EDA               	movwf	fsr2h,c
  8411  000056  50DF               	movf	indf2,w,c
  8412  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8413  00005A  0E01               	movlw	1
  8414  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8415  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8416  000060  0E00               	movlw	0
  8417  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8418  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8419  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8420  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8421  00006A  6ED9               	movwf	fsr2l,c
  8422  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8423  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8424  000070  6EDA               	movwf	fsr2h,c
  8425  000072  50DF               	movf	indf2,w,c
  8426  000074  EC25  F050         	call	_hexCharsToUint8
  8427  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8428  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8429  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8430  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8431  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8432  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8433                           
  8434                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8435  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8436  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8437  000094  0E01               	movlw	1
  8438  000096  50DB               	movf	plusw2,w,c
  8439  000098  E104               	bnz	u12850
  8440  00009A  0E11               	movlw	17
  8441  00009C  5CDE               	subwf	postinc2,w,c
  8442  00009E  A0D8               	btfss	status,0,c
  8443  0000A0  D009               	goto	l2354
  8444  0000A2                     u12850:
  8445                           
  8446                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8447  0000A2  0EFC               	movlw	252
  8448  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8449  0000A6  0EFF               	movlw	255
  8450  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8451  0000AA  0EFF               	movlw	255
  8452  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8453  0000AE  0EFF               	movlw	255
  8454  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8455  0000B2  0012               	return	
  8456  0000B4                     l2354:
  8457                           
  8458                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8459  0000B4  0E04               	movlw	4
  8460  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8461  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8462  0000BA  0E00               	movlw	0
  8463  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8464  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8465  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8466  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8467  0000C4  6ED9               	movwf	fsr2l,c
  8468  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8469  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8470  0000CA  6EDA               	movwf	fsr2h,c
  8471  0000CC  50DF               	movf	indf2,w,c
  8472  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8473  0000D0  0E05               	movlw	5
  8474  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8475  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8476  0000D6  0E00               	movlw	0
  8477  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8478  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8479  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8480  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8481  0000E0  6ED9               	movwf	fsr2l,c
  8482  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8483  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8484  0000E6  6EDA               	movwf	fsr2h,c
  8485  0000E8  50DF               	movf	indf2,w,c
  8486  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8487  0000EC  0E06               	movlw	6
  8488  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8489  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8490  0000F2  0E00               	movlw	0
  8491  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8492  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8493  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8494  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8495  0000FC  6ED9               	movwf	fsr2l,c
  8496  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8497  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8498  000102  6EDA               	movwf	fsr2h,c
  8499  000104  50DF               	movf	indf2,w,c
  8500  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8501  000108  0E03               	movlw	3
  8502  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8503  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8504  00010E  0E00               	movlw	0
  8505  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8506  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8507  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8508  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8509  000118  6ED9               	movwf	fsr2l,c
  8510  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8511  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8512  00011E  6EDA               	movwf	fsr2h,c
  8513  000120  50DF               	movf	indf2,w,c
  8514  000122  EC19  F045         	call	_hexCharsToUint16
  8515  000126  EE20 F002          	lfsr	2,2
  8516  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8517  00012C  26D9               	addwf	fsr2l,f,c
  8518  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8519  000130  22DA               	addwfc	fsr2h,f,c
  8520  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8521  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8522                           
  8523                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8524  00013A  EE20 F004          	lfsr	2,4
  8525  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8526  000140  26D9               	addwf	fsr2l,f,c
  8527  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8528  000144  22DA               	addwfc	fsr2h,f,c
  8529  000146  0E08               	movlw	8
  8530  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8531  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8532  00014C  0E00               	movlw	0
  8533  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8534  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8535  000152  5014               	movf	??_parseHexFileEntry,w,c
  8536  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8537  000156  6EE1               	movwf	fsr1l,c
  8538  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8539  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8540  00015C  6EE2               	movwf	fsr1h,c
  8541  00015E  50E7               	movf	indf1,w,c
  8542  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8543  000162  0E07               	movlw	7
  8544  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8545  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8546  000168  0E00               	movlw	0
  8547  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8548  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8549  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8550  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8551  000172  6EE1               	movwf	fsr1l,c
  8552  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8553  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8554  000178  6EE2               	movwf	fsr1h,c
  8555  00017A  50E7               	movf	indf1,w,c
  8556  00017C  EC25  F050         	call	_hexCharsToUint8
  8557  000180  6EDF               	movwf	indf2,c
  8558                           
  8559                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8560  000182  0E00               	movlw	0
  8561  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8562  000186  D03D               	goto	l2355
  8563  000188                     
  8564                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8565  000188  501C               	movf	parseHexFileEntry@i,w,c
  8566  00018A  0D01               	mullw	1
  8567  00018C  0E05               	movlw	5
  8568  00018E  26F3               	addwf	prodl,f,c
  8569  000190  0E00               	movlw	0
  8570  000192  22F4               	addwfc	prodh,f,c
  8571  000194  50F3               	movf	prodl,w,c
  8572  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8573  000198  6ED9               	movwf	fsr2l,c
  8574  00019A  50F4               	movf	prodh,w,c
  8575  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8576  00019E  6EDA               	movwf	fsr2h,c
  8577  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8578  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8579  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8580  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8581  0001AA  0E00               	movlw	0
  8582  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8583  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8584  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8585  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8586  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8587  0001B6  0E0A               	movlw	10
  8588  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8589  0001BA  0E00               	movlw	0
  8590  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8591  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8592  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8593  0001C2  6EE1               	movwf	fsr1l,c
  8594  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8595  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8596  0001C8  6EE2               	movwf	fsr1h,c
  8597  0001CA  50E7               	movf	indf1,w,c
  8598  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8599  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8600  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8601  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8602  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8603  0001D8  0E00               	movlw	0
  8604  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8605  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8606  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8607  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8608  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8609  0001E4  0E09               	movlw	9
  8610  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8611  0001E8  0E00               	movlw	0
  8612  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8613  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8614  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8615  0001F0  6EE1               	movwf	fsr1l,c
  8616  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8617  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8618  0001F6  6EE2               	movwf	fsr1h,c
  8619  0001F8  50E7               	movf	indf1,w,c
  8620  0001FA  EC25  F050         	call	_hexCharsToUint8
  8621  0001FE  6EDF               	movwf	indf2,c
  8622  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8623  000202                     l2355:
  8624  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8625  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8626  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8627  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8628  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8629  000210  50DE               	movf	postinc2,w,c
  8630  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8631  000214  50DE               	movf	postinc2,w,c
  8632  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8633  000218  A0D8               	btfss	status,0,c
  8634  00021A  D7B6               	goto	l2356
  8635                           
  8636                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8637  00021C  EE20 F015          	lfsr	2,21
  8638  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8639  000222  26D9               	addwf	fsr2l,f,c
  8640  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8641  000226  22DA               	addwfc	fsr2h,f,c
  8642  000228  501C               	movf	parseHexFileEntry@i,w,c
  8643  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8644  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8645  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8646  000232  0E00               	movlw	0
  8647  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8648  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8649  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8650  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8651  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8652  00023E  0E0A               	movlw	10
  8653  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8654  000242  0E00               	movlw	0
  8655  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8656  000246  5014               	movf	??_parseHexFileEntry,w,c
  8657  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8658  00024A  6EE1               	movwf	fsr1l,c
  8659  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8660  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8661  000250  6EE2               	movwf	fsr1h,c
  8662  000252  50E7               	movf	indf1,w,c
  8663  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8664  000256  501C               	movf	parseHexFileEntry@i,w,c
  8665  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8666  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8667  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8668  000260  0E00               	movlw	0
  8669  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8670  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8671  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8672  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8673  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8674  00026C  0E09               	movlw	9
  8675  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8676  000270  0E00               	movlw	0
  8677  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8678  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8679  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8680  000278  6EE1               	movwf	fsr1l,c
  8681  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8682  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8683  00027E  6EE2               	movwf	fsr1h,c
  8684  000280  50E7               	movf	indf1,w,c
  8685  000282  EC25  F050         	call	_hexCharsToUint8
  8686  000286  6EDF               	movwf	indf2,c
  8687                           
  8688                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8689  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8690  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8691  000290  EE10 F016          	lfsr	1,22
  8692  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8693  000296  26E1               	addwf	fsr1l,f,c
  8694  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8695  00029A  22E2               	addwfc	fsr1h,f,c
  8696  00029C  CFDF FFE7          	movff	indf2,indf1
  8697                           
  8698                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8699  0002A0  EE20 F002          	lfsr	2,2
  8700  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8701  0002A6  26D9               	addwf	fsr2l,f,c
  8702  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8703  0002AA  22DA               	addwfc	fsr2h,f,c
  8704  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8705  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8706  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8707  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8708  0002BA  EE20 F016          	lfsr	2,22
  8709  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8710  0002C0  26D9               	addwf	fsr2l,f,c
  8711  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8712  0002C4  22DA               	addwfc	fsr2h,f,c
  8713  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8714  0002C8  26DF               	addwf	indf2,f,c
  8715                           
  8716                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8717  0002CA  EE20 F002          	lfsr	2,2
  8718  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8719  0002D0  26D9               	addwf	fsr2l,f,c
  8720  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8721  0002D4  22DA               	addwfc	fsr2h,f,c
  8722  0002D6  50DF               	movf	indf2,w,c
  8723  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8724  0002DA  EE20 F016          	lfsr	2,22
  8725  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8726  0002E0  26D9               	addwf	fsr2l,f,c
  8727  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8728  0002E4  22DA               	addwfc	fsr2h,f,c
  8729  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8730  0002E8  26DF               	addwf	indf2,f,c
  8731                           
  8732                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8733  0002EA  EE20 F004          	lfsr	2,4
  8734  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8735  0002F0  26D9               	addwf	fsr2l,f,c
  8736  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8737  0002F4  22DA               	addwfc	fsr2h,f,c
  8738  0002F6  50DF               	movf	indf2,w,c
  8739  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8740  0002FA  EE20 F016          	lfsr	2,22
  8741  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8742  000300  26D9               	addwf	fsr2l,f,c
  8743  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8744  000304  22DA               	addwfc	fsr2h,f,c
  8745  000306  5014               	movf	??_parseHexFileEntry,w,c
  8746  000308  26DF               	addwf	indf2,f,c
  8747                           
  8748                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8749  00030A  0E00               	movlw	0
  8750  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8751  00030E  D017               	goto	l2358
  8752  000310                     
  8753                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8754  000310  501C               	movf	parseHexFileEntry@i,w,c
  8755  000312  0D01               	mullw	1
  8756  000314  0E05               	movlw	5
  8757  000316  26F3               	addwf	prodl,f,c
  8758  000318  0E00               	movlw	0
  8759  00031A  22F4               	addwfc	prodh,f,c
  8760  00031C  50F3               	movf	prodl,w,c
  8761  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8762  000320  6ED9               	movwf	fsr2l,c
  8763  000322  50F4               	movf	prodh,w,c
  8764  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8765  000326  6EDA               	movwf	fsr2h,c
  8766  000328  50DF               	movf	indf2,w,c
  8767  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8768  00032C  EE20 F016          	lfsr	2,22
  8769  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8770  000332  26D9               	addwf	fsr2l,f,c
  8771  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8772  000336  22DA               	addwfc	fsr2h,f,c
  8773  000338  5014               	movf	??_parseHexFileEntry,w,c
  8774  00033A  26DF               	addwf	indf2,f,c
  8775  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8776  00033E                     l2358:
  8777  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8778  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8779  000346  501C               	movf	parseHexFileEntry@i,w,c
  8780  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8781  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8782  00034C  50DE               	movf	postinc2,w,c
  8783  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8784  000350  50DE               	movf	postinc2,w,c
  8785  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8786  000354  A0D8               	btfss	status,0,c
  8787  000356  D7DC               	goto	l2359
  8788                           
  8789                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8790  000358  EE20 F015          	lfsr	2,21
  8791  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8792  00035E  26D9               	addwf	fsr2l,f,c
  8793  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8794  000362  22DA               	addwfc	fsr2h,f,c
  8795  000364  50DF               	movf	indf2,w,c
  8796  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8797  000368  EE20 F016          	lfsr	2,22
  8798  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8799  00036E  26D9               	addwf	fsr2l,f,c
  8800  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8801  000372  22DA               	addwfc	fsr2h,f,c
  8802  000374  5014               	movf	??_parseHexFileEntry,w,c
  8803  000376  26DF               	addwf	indf2,f,c
  8804                           
  8805                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8806  000378  EE20 F016          	lfsr	2,22
  8807  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8808  00037E  26D9               	addwf	fsr2l,f,c
  8809  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8810  000382  22DA               	addwfc	fsr2h,f,c
  8811  000384  50DF               	movf	indf2,w,c
  8812  000386  B4D8               	btfsc	status,2,c
  8813  000388  D009               	goto	l2361
  8814                           
  8815                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8816  00038A  0EFE               	movlw	254
  8817  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8818  00038E  0EFF               	movlw	255
  8819  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8820  000392  0EFF               	movlw	255
  8821  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8822  000396  0EFF               	movlw	255
  8823  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8824  00039A  0012               	return	
  8825  00039C                     l2361:
  8826                           
  8827                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8828  00039C  EE20 F004          	lfsr	2,4
  8829  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8830  0003A2  26D9               	addwf	fsr2l,f,c
  8831  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8832  0003A6  22DA               	addwfc	fsr2h,f,c
  8833  0003A8  04DE               	decf	postinc2,w,c
  8834  0003AA  A4D8               	btfss	status,2,c
  8835  0003AC  D009               	goto	l2362
  8836                           
  8837                           ;hex.c: 110: {;hex.c: 112: return 0;
  8838  0003AE  0E00               	movlw	0
  8839  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8840  0003B2  0E00               	movlw	0
  8841  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8842  0003B6  0E00               	movlw	0
  8843  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8844  0003BA  0E00               	movlw	0
  8845  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8846                           
  8847                           ;hex.c: 113: }
  8848  0003BE  0012               	return	
  8849  0003C0                     l2362:
  8850                           
  8851                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8852  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8853  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8854  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8855  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8856  0003CA  0E00               	movlw	0
  8857  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8858  0003CE  0E0B               	movlw	11
  8859  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8860  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8861  0003D4  0E00               	movlw	0
  8862  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8863  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8864  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8865  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8866  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8867  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8868  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8869  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8870  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8871  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8872  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8873  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8874  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8875  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8876  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8877                           
  8878                           ;hex.c: 117: if (data[++offset] == ':')
  8879  0003F4  0E01               	movlw	1
  8880  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8881  0003F8  0E00               	movlw	0
  8882  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8883  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8884  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8885  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8886  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8887  000404  6ED9               	movwf	fsr2l,c
  8888  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8889  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8890  00040A  6EDA               	movwf	fsr2h,c
  8891  00040C  0E3A               	movlw	58
  8892  00040E  18DE               	xorwf	postinc2,w,c
  8893  000410  A4D8               	btfss	status,2,c
  8894  000412  D009               	goto	l2364
  8895                           
  8896                           ;hex.c: 118: {;hex.c: 119: return offset;
  8897  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8898  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8899  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8900  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8901                           
  8902                           ;hex.c: 120: }
  8903  000424  0012               	return	
  8904  000426                     l2364:
  8905                           
  8906                           ;hex.c: 121: else if (data[++offset] == ':')
  8907  000426  0E01               	movlw	1
  8908  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8909  00042A  0E00               	movlw	0
  8910  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8911  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8912  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8913  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8914  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8915  000436  6ED9               	movwf	fsr2l,c
  8916  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8917  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8918  00043C  6EDA               	movwf	fsr2h,c
  8919  00043E  0E3A               	movlw	58
  8920  000440  18DE               	xorwf	postinc2,w,c
  8921  000442  A4D8               	btfss	status,2,c
  8922  000444  D009               	goto	l2366
  8923                           
  8924                           ;hex.c: 122: {;hex.c: 123: return offset;
  8925  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8926  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8927  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8928  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8929                           
  8930                           ;hex.c: 124: }
  8931  000456  0012               	return	
  8932  000458                     l2366:
  8933                           
  8934                           ;hex.c: 125: else if (data[++offset] == ':')
  8935  000458  0E01               	movlw	1
  8936  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8937  00045C  0E00               	movlw	0
  8938  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8939  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8940  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8941  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8942  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8943  000468  6ED9               	movwf	fsr2l,c
  8944  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8945  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8946  00046E  6EDA               	movwf	fsr2h,c
  8947  000470  0E3A               	movlw	58
  8948  000472  18DE               	xorwf	postinc2,w,c
  8949  000474  A4D8               	btfss	status,2,c
  8950  000476  D009               	goto	l2368
  8951                           
  8952                           ;hex.c: 126: {;hex.c: 127: return offset;
  8953  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8954  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8955  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8956  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8957                           
  8958                           ;hex.c: 128: }
  8959  000488  0012               	return	
  8960  00048A                     l2368:
  8961                           
  8962                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8963  00048A  0EFD               	movlw	253
  8964  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8965  00048E  0EFF               	movlw	255
  8966  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8967  000492  0EFF               	movlw	255
  8968  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8969  000496  0EFF               	movlw	255
  8970  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8971  00049A  0012               	return	
  8972  00049C                     __end_of_parseHexFileEntry:
  8973                           	opt stack 0
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodh	equ	0xFF4
  8979                           prodl	equ	0xFF3
  8980                           intcon	equ	0xFF2
  8981                           intcon2	equ	0xFF1
  8982                           intcon3	equ	0xFF0
  8983                           postinc0	equ	0xFEE
  8984                           wreg	equ	0xFE8
  8985                           indf1	equ	0xFE7
  8986                           postdec1	equ	0xFE5
  8987                           plusw1	equ	0xFE3
  8988                           fsr1h	equ	0xFE2
  8989                           fsr1l	equ	0xFE1
  8990                           indf2	equ	0xFDF
  8991                           postinc2	equ	0xFDE
  8992                           postdec2	equ	0xFDD
  8993                           plusw2	equ	0xFDB
  8994                           fsr2h	equ	0xFDA
  8995                           fsr2l	equ	0xFD9
  8996                           status	equ	0xFD8
  8997                           
  8998 ;; *************** function _hexCharsToUint8 *****************
  8999 ;; Defined at:
  9000 ;;		line 42 in file "hex.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  c1              1    wreg     unsigned char 
  9003 ;;  c2              1    2[COMRAM] unsigned char 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;  c1              1    4[COMRAM] unsigned char 
  9006 ;;  retVal          1    5[COMRAM] unsigned char 
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      unsigned char 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9016 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;Total ram usage:        4 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    1
  9023 ;; This function calls:
  9024 ;;		_hexCharToUint8
  9025 ;; This function is called by:
  9026 ;;		_parseHexFileEntry
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text31
  9031  00A04A                     __ptext31:
  9032                           	opt stack 0
  9033  00A04A                     _hexCharsToUint8:
  9034                           	opt stack 26
  9035                           
  9036                           ;incstack = 0
  9037                           ;hexCharsToUint8@c1 stored from wreg
  9038  00A04A  6E05               	movwf	hexCharsToUint8@c1,c
  9039                           
  9040                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  9041  00A04C  5005               	movf	hexCharsToUint8@c1,w,c
  9042  00A04E  EC79  F04E         	call	_hexCharToUint8
  9043  00A052  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  9044  00A054  3804               	swapf	??_hexCharsToUint8,w,c
  9045  00A056  0BF0               	andlw	240
  9046  00A058  6E06               	movwf	hexCharsToUint8@retVal,c
  9047                           
  9048                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  9049  00A05A  5003               	movf	hexCharsToUint8@c2,w,c
  9050  00A05C  EC79  F04E         	call	_hexCharToUint8
  9051  00A060  1206               	iorwf	hexCharsToUint8@retVal,f,c
  9052                           
  9053                           ;hex.c: 46: return retVal;
  9054  00A062  5006               	movf	hexCharsToUint8@retVal,w,c
  9055  00A064  0012               	return	
  9056  00A066                     __end_of_hexCharsToUint8:
  9057                           	opt stack 0
  9058                           tblptru	equ	0xFF8
  9059                           tblptrh	equ	0xFF7
  9060                           tblptrl	equ	0xFF6
  9061                           tablat	equ	0xFF5
  9062                           prodh	equ	0xFF4
  9063                           prodl	equ	0xFF3
  9064                           intcon	equ	0xFF2
  9065                           intcon2	equ	0xFF1
  9066                           intcon3	equ	0xFF0
  9067                           postinc0	equ	0xFEE
  9068                           wreg	equ	0xFE8
  9069                           indf1	equ	0xFE7
  9070                           postdec1	equ	0xFE5
  9071                           plusw1	equ	0xFE3
  9072                           fsr1h	equ	0xFE2
  9073                           fsr1l	equ	0xFE1
  9074                           indf2	equ	0xFDF
  9075                           postinc2	equ	0xFDE
  9076                           postdec2	equ	0xFDD
  9077                           plusw2	equ	0xFDB
  9078                           fsr2h	equ	0xFDA
  9079                           fsr2l	equ	0xFD9
  9080                           status	equ	0xFD8
  9081                           
  9082 ;; *************** function _hexCharsToUint16 *****************
  9083 ;; Defined at:
  9084 ;;		line 49 in file "hex.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  c1              1    wreg     unsigned char 
  9087 ;;  c2              1    2[COMRAM] unsigned char 
  9088 ;;  c3              1    3[COMRAM] unsigned char 
  9089 ;;  c4              1    4[COMRAM] unsigned char 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  c1              1    8[COMRAM] unsigned char 
  9092 ;;  retVal          2    9[COMRAM] unsigned int 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  2    2[COMRAM] unsigned int 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2, status,0, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;Total ram usage:        9 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    1
  9109 ;; This function calls:
  9110 ;;		_hexCharToUint8
  9111 ;; This function is called by:
  9112 ;;		_parseHexFileEntry
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           	psect	text32
  9117  008A32                     __ptext32:
  9118                           	opt stack 0
  9119  008A32                     _hexCharsToUint16:
  9120                           	opt stack 26
  9121                           
  9122                           ;incstack = 0
  9123                           ;hexCharsToUint16@c1 stored from wreg
  9124  008A32  6E09               	movwf	hexCharsToUint16@c1,c
  9125                           
  9126                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  9127  008A34  5009               	movf	hexCharsToUint16@c1,w,c
  9128  008A36  EC79  F04E         	call	_hexCharToUint8
  9129  008A3A  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9130  008A3C  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9131  008A3E  0E0C               	movlw	12
  9132  008A40                     u11625:
  9133  008A40  90D8               	bcf	status,0,c
  9134  008A42  3606               	rlcf	??_hexCharsToUint16,f,c
  9135  008A44  3607               	rlcf	??_hexCharsToUint16+1,f,c
  9136  008A46  2EE8               	decfsz	wreg,f,c
  9137  008A48  D7FB               	goto	u11625
  9138  008A4A  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  9139  008A4E  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  9140                           
  9141                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  9142  008A52  5003               	movf	hexCharsToUint16@c2,w,c
  9143  008A54  EC79  F04E         	call	_hexCharToUint8
  9144  008A58  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9145  008A5A  5006               	movf	??_hexCharsToUint16,w,c
  9146  008A5C  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  9147  008A5E  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9148  008A60  5007               	movf	??_hexCharsToUint16+1,w,c
  9149  008A62  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9150  008A64  5008               	movf	??_hexCharsToUint16+2,w,c
  9151  008A66  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  9152                           
  9153                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  9154  008A68  5004               	movf	hexCharsToUint16@c3,w,c
  9155  008A6A  EC79  F04E         	call	_hexCharToUint8
  9156  008A6E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9157  008A70  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  9158  008A72  3A06               	swapf	??_hexCharsToUint16,f,c
  9159  008A74  3A07               	swapf	??_hexCharsToUint16+1,f,c
  9160  008A76  0EF0               	movlw	240
  9161  008A78  1607               	andwf	??_hexCharsToUint16+1,f,c
  9162  008A7A  5006               	movf	??_hexCharsToUint16,w,c
  9163  008A7C  0B0F               	andlw	15
  9164  008A7E  1207               	iorwf	??_hexCharsToUint16+1,f,c
  9165  008A80  0EF0               	movlw	240
  9166  008A82  1606               	andwf	??_hexCharsToUint16,f,c
  9167  008A84  5006               	movf	??_hexCharsToUint16,w,c
  9168  008A86  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9169  008A88  5007               	movf	??_hexCharsToUint16+1,w,c
  9170  008A8A  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  9171                           
  9172                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  9173  008A8C  5005               	movf	hexCharsToUint16@c4,w,c
  9174  008A8E  EC79  F04E         	call	_hexCharToUint8
  9175  008A92  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  9176  008A94  5006               	movf	??_hexCharsToUint16,w,c
  9177  008A96  120A               	iorwf	hexCharsToUint16@retVal,f,c
  9178                           
  9179                           ;hex.c: 55: return retVal;
  9180  008A98  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  9181  008A9C  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  9182  008AA0  0012               	return	
  9183  008AA2                     __end_of_hexCharsToUint16:
  9184                           	opt stack 0
  9185                           tblptru	equ	0xFF8
  9186                           tblptrh	equ	0xFF7
  9187                           tblptrl	equ	0xFF6
  9188                           tablat	equ	0xFF5
  9189                           prodh	equ	0xFF4
  9190                           prodl	equ	0xFF3
  9191                           intcon	equ	0xFF2
  9192                           intcon2	equ	0xFF1
  9193                           intcon3	equ	0xFF0
  9194                           postinc0	equ	0xFEE
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postdec1	equ	0xFE5
  9198                           plusw1	equ	0xFE3
  9199                           fsr1h	equ	0xFE2
  9200                           fsr1l	equ	0xFE1
  9201                           indf2	equ	0xFDF
  9202                           postinc2	equ	0xFDE
  9203                           postdec2	equ	0xFDD
  9204                           plusw2	equ	0xFDB
  9205                           fsr2h	equ	0xFDA
  9206                           fsr2l	equ	0xFD9
  9207                           status	equ	0xFD8
  9208                           
  9209 ;; *************** function _hexCharToUint8 *****************
  9210 ;; Defined at:
  9211 ;;		line 11 in file "hex.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  c               1    wreg     unsigned char 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  c               1    0[COMRAM] unsigned char 
  9216 ;;  ascii           1    1[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      unsigned char 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;Total ram usage:        2 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_hexCharsToUint8
  9236 ;;		_hexCharsToUint16
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text33
  9241  009CF2                     __ptext33:
  9242                           	opt stack 0
  9243  009CF2                     _hexCharToUint8:
  9244                           	opt stack 26
  9245                           
  9246                           ;incstack = 0
  9247                           ;hexCharToUint8@c stored from wreg
  9248  009CF2  6E01               	movwf	hexCharToUint8@c,c
  9249                           
  9250                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  9251  009CF4  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  9252                           
  9253                           ;hex.c: 16: if (ascii >= 97)
  9254  009CF8  0E60               	movlw	96
  9255  009CFA  6402               	cpfsgt	hexCharToUint8@ascii,c
  9256  009CFC  D002               	goto	l2337
  9257                           
  9258                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  9259  009CFE  0E57               	movlw	87
  9260  009D00  D006               	goto	L3
  9261  009D02                     l2337:
  9262                           
  9263                           ;hex.c: 21: else if (ascii >= 65)
  9264  009D02  0E40               	movlw	64
  9265  009D04  6402               	cpfsgt	hexCharToUint8@ascii,c
  9266  009D06  D002               	goto	l2339
  9267                           
  9268                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  9269  009D08  0E37               	movlw	55
  9270  009D0A  D001               	goto	L3
  9271  009D0C                     l2339:
  9272                           
  9273                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  9274  009D0C  0E30               	movlw	48
  9275  009D0E                     L3:
  9276  009D0E  5E02               	subwf	hexCharToUint8@ascii,f,c
  9277                           
  9278                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  9279  009D10  0E0F               	movlw	15
  9280  009D12  6402               	cpfsgt	hexCharToUint8@ascii,c
  9281  009D14  D002               	goto	l2341
  9282                           
  9283                           ;hex.c: 32: {;hex.c: 33: return 0;
  9284  009D16  0E00               	movlw	0
  9285                           
  9286                           ;hex.c: 34: }
  9287  009D18  0012               	return	
  9288  009D1A                     l2341:
  9289                           
  9290                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  9291  009D1A  5002               	movf	hexCharToUint8@ascii,w,c
  9292  009D1C  0012               	return	
  9293  009D1E                     __end_of_hexCharToUint8:
  9294                           	opt stack 0
  9295                           tblptru	equ	0xFF8
  9296                           tblptrh	equ	0xFF7
  9297                           tblptrl	equ	0xFF6
  9298                           tablat	equ	0xFF5
  9299                           prodh	equ	0xFF4
  9300                           prodl	equ	0xFF3
  9301                           intcon	equ	0xFF2
  9302                           intcon2	equ	0xFF1
  9303                           intcon3	equ	0xFF0
  9304                           postinc0	equ	0xFEE
  9305                           wreg	equ	0xFE8
  9306                           indf1	equ	0xFE7
  9307                           postdec1	equ	0xFE5
  9308                           plusw1	equ	0xFE3
  9309                           fsr1h	equ	0xFE2
  9310                           fsr1l	equ	0xFE1
  9311                           indf2	equ	0xFDF
  9312                           postinc2	equ	0xFDE
  9313                           postdec2	equ	0xFDD
  9314                           plusw2	equ	0xFDB
  9315                           fsr2h	equ	0xFDA
  9316                           fsr2l	equ	0xFD9
  9317                           status	equ	0xFD8
  9318                           
  9319 ;; *************** function _internalFlash_writePage *****************
  9320 ;; Defined at:
  9321 ;;		line 65 in file "internal_flash.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  page            2    8[COMRAM] unsigned int 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  address         4   18[COMRAM] unsigned long 
  9326 ;;  cntr            2   14[COMRAM] unsigned int 
  9327 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  9328 ;;  block_cntr      1   16[COMRAM] unsigned char 
  9329 ;;  i               1    0        unsigned char 
  9330 ;;  gie             1    0        unsigned char 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9343 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9344 ;;Total ram usage:       14 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:    1
  9347 ;; This function calls:
  9348 ;;		__internalFlash_unlockAndActivate
  9349 ;;		_internalFlash_addressFromPage
  9350 ;; This function is called by:
  9351 ;;		__bootloader_program
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text34
  9356  007736                     __ptext34:
  9357                           	opt stack 0
  9358  007736                     _internalFlash_writePage:
  9359                           	opt stack 27
  9360                           
  9361                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  9362                           
  9363                           ;incstack = 0
  9364  007736  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  9365  00773A  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  9366  00773E  EC1E  F04E         	call	_internalFlash_addressFromPage	;wreg free
  9367  007742  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  9368  007746  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  9369  00774A  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  9370  00774E  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  9371                           
  9372                           ;internal_flash.c: 76: TBLPTR = address;
  9373  007752  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  9374  007756  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  9375  00775A  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  9376                           
  9377                           ;internal_flash.c: 79: if((address<0xC000) || (address+1023>=0x1FFFF))
  9378  00775E  5016               	movf	internalFlash_writePage@address+3,w,c
  9379  007760  1015               	iorwf	internalFlash_writePage@address+2,w,c
  9380  007762  E104               	bnz	u13030
  9381  007764  0EC0               	movlw	192
  9382  007766  5C14               	subwf	internalFlash_writePage@address+1,w,c
  9383  007768  A0D8               	btfss	status,0,c
  9384  00776A  0012               	return	
  9385  00776C                     u13030:
  9386  00776C  0EFF               	movlw	255
  9387  00776E  2413               	addwf	internalFlash_writePage@address,w,c
  9388  007770  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  9389  007772  0E03               	movlw	3
  9390  007774  2014               	addwfc	internalFlash_writePage@address+1,w,c
  9391  007776  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  9392  007778  0E00               	movlw	0
  9393  00777A  2015               	addwfc	internalFlash_writePage@address+2,w,c
  9394  00777C  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  9395  00777E  0E00               	movlw	0
  9396  007780  2016               	addwfc	internalFlash_writePage@address+3,w,c
  9397  007782  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  9398  007784  500E               	movf	??_internalFlash_writePage+3,w,c
  9399  007786  E132               	bnz	l2594
  9400  007788  280B               	incf	??_internalFlash_writePage,w,c
  9401  00778A  0EFF               	movlw	255
  9402  00778C  580C               	subwfb	??_internalFlash_writePage+1,w,c
  9403  00778E  0E01               	movlw	1
  9404  007790  580D               	subwfb	??_internalFlash_writePage+2,w,c
  9405  007792  B0D8               	btfsc	status,0,c
  9406  007794  0012               	return	
  9407                           
  9408                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  9409                           
  9410                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  9411  007796  0E00               	movlw	0
  9412  007798  6E10               	movwf	internalFlash_writePage@cntr+1,c
  9413  00779A  0E00               	movlw	0
  9414  00779C  6E0F               	movwf	internalFlash_writePage@cntr,c
  9415                           
  9416                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  9417  00779E  0E00               	movlw	0
  9418  0077A0  6E11               	movwf	internalFlash_writePage@block_cntr,c
  9419  0077A2                     l15384:
  9420  0077A2  0E0F               	movlw	15
  9421  0077A4  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  9422  0077A6  D001               	goto	l2595
  9423  0077A8  0012               	return	
  9424  0077AA                     l2595:
  9425                           
  9426                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9427  0077AA  0E00               	movlw	0
  9428  0077AC  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  9429  0077AE                     l15390:
  9430  0077AE  0E3F               	movlw	63
  9431  0077B0  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9432  0077B2  D001               	goto	l2597
  9433  0077B4  D00D               	goto	u13070
  9434  0077B6                     l2597:
  9435                           
  9436                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  9437  0077B6  0E00               	movlw	low _pageBuffer
  9438  0077B8  240F               	addwf	internalFlash_writePage@cntr,w,c
  9439  0077BA  6ED9               	movwf	fsr2l,c
  9440  0077BC  0E08               	movlw	high _pageBuffer
  9441  0077BE  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  9442  0077C0  6EDA               	movwf	fsr2h,c
  9443  0077C2  50DF               	movf	indf2,w,c
  9444  0077C4  6EF5               	movwf	tablat,c	;volatile
  9445  0077C6  000D               	tblwt		*+	;# 
  9446                           
  9447                           ;internal_flash.c: 97: ++cntr;
  9448  0077C8  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  9449  0077CA  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  9450  0077CC  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  9451  0077CE  D7EF               	goto	l15390
  9452  0077D0                     u13070:
  9453  0077D0  000A               	tblrd		*-	;# 
  9454                           
  9455                           ;internal_flash.c: 104: EECON1 = 0x84;
  9456  0077D2  0E84               	movlw	132
  9457  0077D4  6EA6               	movwf	4006,c	;volsfr
  9458                           
  9459                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9460  0077D6  0EB5               	movlw	181
  9461  0077D8  ECE6  F04E         	call	__internalFlash_unlockAndActivate
  9462                           
  9463                           ;internal_flash.c: 106: TBLPTR++;
  9464  0077DC  0E01               	movlw	1
  9465  0077DE  26F6               	addwf	tblptrl,f,c	;volatile
  9466  0077E0  0E00               	movlw	0
  9467  0077E2  22F7               	addwfc	tblptrh,f,c	;volatile
  9468  0077E4  0E00               	movlw	0
  9469  0077E6  22F8               	addwfc	tblptru,f,c	;volatile
  9470  0077E8  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  9471  0077EA  D7DB               	goto	l15384
  9472  0077EC                     l2594:
  9473  0077EC  0012               	return		;funcret
  9474  0077EE                     __end_of_internalFlash_writePage:
  9475                           	opt stack 0
  9476                           tblptru	equ	0xFF8
  9477                           tblptrh	equ	0xFF7
  9478                           tblptrl	equ	0xFF6
  9479                           tablat	equ	0xFF5
  9480                           prodh	equ	0xFF4
  9481                           prodl	equ	0xFF3
  9482                           intcon	equ	0xFF2
  9483                           intcon2	equ	0xFF1
  9484                           intcon3	equ	0xFF0
  9485                           postinc0	equ	0xFEE
  9486                           wreg	equ	0xFE8
  9487                           indf1	equ	0xFE7
  9488                           postdec1	equ	0xFE5
  9489                           plusw1	equ	0xFE3
  9490                           fsr1h	equ	0xFE2
  9491                           fsr1l	equ	0xFE1
  9492                           indf2	equ	0xFDF
  9493                           postinc2	equ	0xFDE
  9494                           postdec2	equ	0xFDD
  9495                           plusw2	equ	0xFDB
  9496                           fsr2h	equ	0xFDA
  9497                           fsr2l	equ	0xFD9
  9498                           status	equ	0xFD8
  9499                           
  9500 ;; *************** function _internalFlash_readPage *****************
  9501 ;; Defined at:
  9502 ;;		line 37 in file "internal_flash.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  page            2   21[COMRAM] unsigned int 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  address         4   23[COMRAM] unsigned long 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;Total ram usage:        6 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    2
  9523 ;; This function calls:
  9524 ;;		_internalFlash_addressFromPage
  9525 ;;		_internalFlash_read
  9526 ;; This function is called by:
  9527 ;;		__bootloader_program
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text35
  9532  009816                     __ptext35:
  9533                           	opt stack 0
  9534  009816                     _internalFlash_readPage:
  9535                           	opt stack 26
  9536                           
  9537                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9538                           
  9539                           ;incstack = 0
  9540  009816  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9541  00981A  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9542  00981E  EC1E  F04E         	call	_internalFlash_addressFromPage	;wreg free
  9543  009822  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9544  009826  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9545  00982A  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9546  00982E  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9547                           
  9548                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9549  009832  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9550  009836  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9551  00983A  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9552  00983E  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9553  009842  0E04               	movlw	4
  9554  009844  6E13               	movwf	internalFlash_read@data_length+1,c
  9555  009846  0E00               	movlw	0
  9556  009848  6E12               	movwf	internalFlash_read@data_length,c
  9557  00984A  0E00               	movlw	low _pageBuffer
  9558  00984C  6E14               	movwf	internalFlash_read@buffer,c
  9559  00984E  0E08               	movlw	high _pageBuffer
  9560  009850  6E15               	movwf	internalFlash_read@buffer+1,c
  9561  009852  EC1F  F04D         	call	_internalFlash_read	;wreg free
  9562  009856  0012               	return		;funcret
  9563  009858                     __end_of_internalFlash_readPage:
  9564                           	opt stack 0
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           intcon2	equ	0xFF1
  9573                           intcon3	equ	0xFF0
  9574                           postinc0	equ	0xFEE
  9575                           wreg	equ	0xFE8
  9576                           indf1	equ	0xFE7
  9577                           postdec1	equ	0xFE5
  9578                           plusw1	equ	0xFE3
  9579                           fsr1h	equ	0xFE2
  9580                           fsr1l	equ	0xFE1
  9581                           indf2	equ	0xFDF
  9582                           postinc2	equ	0xFDE
  9583                           postdec2	equ	0xFDD
  9584                           plusw2	equ	0xFDB
  9585                           fsr2h	equ	0xFDA
  9586                           fsr2l	equ	0xFD9
  9587                           status	equ	0xFD8
  9588                           
  9589 ;; *************** function _internalFlash_read *****************
  9590 ;; Defined at:
  9591 ;;		line 150 in file "internal_flash.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  address         4   13[COMRAM] unsigned long 
  9594 ;;  data_length     2   17[COMRAM] unsigned int 
  9595 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9596 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      unsigned char 
  9601 ;; Registers used:
  9602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9608 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;Total ram usage:        8 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    1
  9615 ;; This function calls:
  9616 ;;		_memcpy
  9617 ;; This function is called by:
  9618 ;;		_internalFlash_readPage
  9619 ;;		__bootloader_verify_program_memory
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text36
  9624  009A3E                     __ptext36:
  9625                           	opt stack 0
  9626  009A3E                     _internalFlash_read:
  9627                           	opt stack 26
  9628                           
  9629                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  9630                           
  9631                           ;incstack = 0
  9632  009A3E  5011               	movf	internalFlash_read@address+3,w,c
  9633  009A40  E118               	bnz	l2610
  9634  009A42  280E               	incf	internalFlash_read@address,w,c
  9635  009A44  0EFF               	movlw	255
  9636  009A46  580F               	subwfb	internalFlash_read@address+1,w,c
  9637  009A48  0E01               	movlw	1
  9638  009A4A  5810               	subwfb	internalFlash_read@address+2,w,c
  9639  009A4C  B0D8               	btfsc	status,0,c
  9640  009A4E  0012               	return	
  9641                           
  9642                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  9643                           
  9644                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9645  009A50  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9646  009A54  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9647  009A58  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9648  009A5C  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9649  009A60  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9650  009A64  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9651  009A68  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9652  009A6C  EC92  F046         	call	_memcpy	;wreg free
  9653  009A70  0012               	return	
  9654  009A72                     l2610:
  9655  009A72  0012               	return		;funcret
  9656  009A74                     __end_of_internalFlash_read:
  9657                           	opt stack 0
  9658                           tblptru	equ	0xFF8
  9659                           tblptrh	equ	0xFF7
  9660                           tblptrl	equ	0xFF6
  9661                           tablat	equ	0xFF5
  9662                           prodh	equ	0xFF4
  9663                           prodl	equ	0xFF3
  9664                           intcon	equ	0xFF2
  9665                           intcon2	equ	0xFF1
  9666                           intcon3	equ	0xFF0
  9667                           postinc0	equ	0xFEE
  9668                           wreg	equ	0xFE8
  9669                           indf1	equ	0xFE7
  9670                           postdec1	equ	0xFE5
  9671                           plusw1	equ	0xFE3
  9672                           fsr1h	equ	0xFE2
  9673                           fsr1l	equ	0xFE1
  9674                           indf2	equ	0xFDF
  9675                           postinc2	equ	0xFDE
  9676                           postdec2	equ	0xFDD
  9677                           plusw2	equ	0xFDB
  9678                           fsr2h	equ	0xFDA
  9679                           fsr2l	equ	0xFD9
  9680                           status	equ	0xFD8
  9681                           
  9682 ;; *************** function _internalFlash_pageFromAddress *****************
  9683 ;; Defined at:
  9684 ;;		line 171 in file "internal_flash.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  address         4    0[COMRAM] unsigned long 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  2    0[COMRAM] unsigned int 
  9691 ;; Registers used:
  9692 ;;		wreg, status,2, status,0
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;Total ram usage:        5 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		__bootloader_program
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text37
  9712  00A066                     __ptext37:
  9713                           	opt stack 0
  9714  00A066                     _internalFlash_pageFromAddress:
  9715                           	opt stack 28
  9716                           
  9717                           ;internal_flash.c: 173: address >>= 10;
  9718                           
  9719                           ;incstack = 0
  9720  00A066  0E0A               	movlw	10
  9721  00A068  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9722  00A06A                     u13005:
  9723  00A06A  90D8               	bcf	status,0,c
  9724  00A06C  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9725  00A06E  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9726  00A070  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9727  00A072  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9728  00A074  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9729  00A076  D7F9               	goto	u13005
  9730                           
  9731                           ;internal_flash.c: 174: return (uint16_t) address;
  9732  00A078  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9733  00A07C  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9734  00A080  0012               	return	
  9735  00A082                     __end_of_internalFlash_pageFromAddress:
  9736                           	opt stack 0
  9737                           tblptru	equ	0xFF8
  9738                           tblptrh	equ	0xFF7
  9739                           tblptrl	equ	0xFF6
  9740                           tablat	equ	0xFF5
  9741                           prodh	equ	0xFF4
  9742                           prodl	equ	0xFF3
  9743                           intcon	equ	0xFF2
  9744                           intcon2	equ	0xFF1
  9745                           intcon3	equ	0xFF0
  9746                           postinc0	equ	0xFEE
  9747                           wreg	equ	0xFE8
  9748                           indf1	equ	0xFE7
  9749                           postdec1	equ	0xFE5
  9750                           plusw1	equ	0xFE3
  9751                           fsr1h	equ	0xFE2
  9752                           fsr1l	equ	0xFE1
  9753                           indf2	equ	0xFDF
  9754                           postinc2	equ	0xFDE
  9755                           postdec2	equ	0xFDD
  9756                           plusw2	equ	0xFDB
  9757                           fsr2h	equ	0xFDA
  9758                           fsr2l	equ	0xFD9
  9759                           status	equ	0xFD8
  9760                           
  9761 ;; *************** function _internalFlash_getBuffer *****************
  9762 ;; Defined at:
  9763 ;;		line 32 in file "internal_flash.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2    0[COMRAM] PTR unsigned char 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;Total ram usage:        2 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; This function calls:
  9784 ;;		Nothing
  9785 ;; This function is called by:
  9786 ;;		__bootloader_program
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text38
  9791  00A222                     __ptext38:
  9792                           	opt stack 0
  9793  00A222                     _internalFlash_getBuffer:
  9794                           	opt stack 28
  9795                           
  9796                           ;internal_flash.c: 34: return pageBuffer;
  9797                           
  9798                           ;incstack = 0
  9799  00A222  0E00               	movlw	low _pageBuffer
  9800  00A224  6E01               	movwf	?_internalFlash_getBuffer,c
  9801  00A226  0E08               	movlw	high _pageBuffer
  9802  00A228  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9803  00A22A  0012               	return	
  9804  00A22C                     __end_of_internalFlash_getBuffer:
  9805                           	opt stack 0
  9806                           tblptru	equ	0xFF8
  9807                           tblptrh	equ	0xFF7
  9808                           tblptrl	equ	0xFF6
  9809                           tablat	equ	0xFF5
  9810                           prodh	equ	0xFF4
  9811                           prodl	equ	0xFF3
  9812                           intcon	equ	0xFF2
  9813                           intcon2	equ	0xFF1
  9814                           intcon3	equ	0xFF0
  9815                           postinc0	equ	0xFEE
  9816                           wreg	equ	0xFE8
  9817                           indf1	equ	0xFE7
  9818                           postdec1	equ	0xFE5
  9819                           plusw1	equ	0xFE3
  9820                           fsr1h	equ	0xFE2
  9821                           fsr1l	equ	0xFE1
  9822                           indf2	equ	0xFDF
  9823                           postinc2	equ	0xFDE
  9824                           postdec2	equ	0xFDD
  9825                           plusw2	equ	0xFDB
  9826                           fsr2h	equ	0xFDA
  9827                           fsr2l	equ	0xFD9
  9828                           status	equ	0xFD8
  9829                           
  9830 ;; *************** function _internalFlash_erasePage *****************
  9831 ;; Defined at:
  9832 ;;		line 44 in file "internal_flash.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  page            2    8[COMRAM] unsigned int 
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;  address         4   14[COMRAM] unsigned long 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg, status,2, status,0, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9847 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9849 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9850 ;;Total ram usage:       10 bytes
  9851 ;; Hardware stack levels used:    1
  9852 ;; Hardware stack levels required when called:    1
  9853 ;; This function calls:
  9854 ;;		__internalFlash_unlockAndActivate
  9855 ;;		_internalFlash_addressFromPage
  9856 ;; This function is called by:
  9857 ;;		__bootloader_program
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text39
  9862  008B80                     __ptext39:
  9863                           	opt stack 0
  9864  008B80                     _internalFlash_erasePage:
  9865                           	opt stack 27
  9866                           
  9867                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  9868                           
  9869                           ;incstack = 0
  9870  008B80  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  9871  008B84  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  9872  008B88  EC1E  F04E         	call	_internalFlash_addressFromPage	;wreg free
  9873  008B8C  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  9874  008B90  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  9875  008B94  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  9876  008B98  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  9877                           
  9878                           ;internal_flash.c: 50: TBLPTR = address;
  9879  008B9C  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9880  008BA0  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9881  008BA4  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9882                           
  9883                           ;internal_flash.c: 53: if((address<0xC000) || (address+1023>=0x1FFFF))
  9884  008BA8  5012               	movf	internalFlash_erasePage@address+3,w,c
  9885  008BAA  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  9886  008BAC  E104               	bnz	u13010
  9887  008BAE  0EC0               	movlw	192
  9888  008BB0  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  9889  008BB2  A0D8               	btfss	status,0,c
  9890  008BB4  0012               	return	
  9891  008BB6                     u13010:
  9892  008BB6  0EFF               	movlw	255
  9893  008BB8  240F               	addwf	internalFlash_erasePage@address,w,c
  9894  008BBA  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  9895  008BBC  0E03               	movlw	3
  9896  008BBE  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  9897  008BC0  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  9898  008BC2  0E00               	movlw	0
  9899  008BC4  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  9900  008BC6  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  9901  008BC8  0E00               	movlw	0
  9902  008BCA  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  9903  008BCC  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  9904  008BCE  500E               	movf	??_internalFlash_erasePage+3,w,c
  9905  008BD0  E10C               	bnz	l2588
  9906  008BD2  280B               	incf	??_internalFlash_erasePage,w,c
  9907  008BD4  0EFF               	movlw	255
  9908  008BD6  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  9909  008BD8  0E01               	movlw	1
  9910  008BDA  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  9911  008BDC  B0D8               	btfsc	status,0,c
  9912  008BDE  0012               	return	
  9913                           
  9914                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  9915                           
  9916                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  9917  008BE0  84A6               	bsf	4006,2,c	;volsfr
  9918                           
  9919                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  9920  008BE2  88A6               	bsf	4006,4,c	;volsfr
  9921                           
  9922                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9923  008BE4  0EB5               	movlw	181
  9924  008BE6  ECE6  F04E         	call	__internalFlash_unlockAndActivate
  9925  008BEA                     l2588:
  9926  008BEA  0012               	return		;funcret
  9927  008BEC                     __end_of_internalFlash_erasePage:
  9928                           	opt stack 0
  9929                           tblptru	equ	0xFF8
  9930                           tblptrh	equ	0xFF7
  9931                           tblptrl	equ	0xFF6
  9932                           tablat	equ	0xFF5
  9933                           prodh	equ	0xFF4
  9934                           prodl	equ	0xFF3
  9935                           intcon	equ	0xFF2
  9936                           intcon2	equ	0xFF1
  9937                           intcon3	equ	0xFF0
  9938                           postinc0	equ	0xFEE
  9939                           wreg	equ	0xFE8
  9940                           indf1	equ	0xFE7
  9941                           postdec1	equ	0xFE5
  9942                           plusw1	equ	0xFE3
  9943                           fsr1h	equ	0xFE2
  9944                           fsr1l	equ	0xFE1
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           plusw2	equ	0xFDB
  9949                           fsr2h	equ	0xFDA
  9950                           fsr2l	equ	0xFD9
  9951                           status	equ	0xFD8
  9952                           
  9953 ;; *************** function __internalFlash_unlockAndActivate *****************
  9954 ;; Defined at:
  9955 ;;		line 112 in file "internal_flash.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  UnlockKey       1    wreg     unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9960 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9974 ;;Total ram usage:        2 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_internalFlash_erasePage
  9980 ;;		_internalFlash_writePage
  9981 ;;		_EraseBlock
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text40
  9986  009DCC                     __ptext40:
  9987                           	opt stack 0
  9988  009DCC                     __internalFlash_unlockAndActivate:
  9989                           	opt stack 27
  9990                           
  9991                           ;incstack = 0
  9992                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9993  009DCC  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9994                           
  9995                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9996  009DCE  0EB5               	movlw	181
  9997  009DD0  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9998  009DD2  B4D8               	btfsc	status,2,c
  9999  009DD4  D002               	goto	l2601
 10000                           
 10001                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
 10002  009DD6  94A6               	bcf	4006,2,c	;volsfr
 10003                           
 10004                           ;internal_flash.c: 124: return;
 10005  009DD8  0012               	return	
 10006  009DDA                     l2601:
 10007                           
 10008                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
 10009  009DDA  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 10010                           
 10011                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
 10012  009DDE  9EF2               	bcf	intcon,7,c	;volatile
 10013                           
 10014                           ;internal_flash.c: 129: EECON2 = 0x55;
 10015  009DE0  0E55               	movlw	85
 10016  009DE2  6EA7               	movwf	4007,c	;volsfr
 10017                           
 10018                           ;internal_flash.c: 130: EECON2 = 0xAA;
 10019  009DE4  0EAA               	movlw	170
 10020  009DE6  6EA7               	movwf	4007,c	;volsfr
 10021                           
 10022                           ;internal_flash.c: 131: EECON1bits.WR = 1;
 10023  009DE8  82A6               	bsf	4006,1,c	;volsfr
 10024                           
 10025                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
 10026  009DEA  94A6               	bcf	4006,2,c	;volsfr
 10027                           
 10028                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
 10029  009DEC  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 10030  009DEE  0012               	return	
 10031                           
 10032                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
 10033  009DF0  8EF2               	bsf	intcon,7,c	;volatile
 10034  009DF2  0012               	return	
 10035  009DF4                     __end_of__internalFlash_unlockAndActivate:
 10036                           	opt stack 0
 10037                           tblptru	equ	0xFF8
 10038                           tblptrh	equ	0xFF7
 10039                           tblptrl	equ	0xFF6
 10040                           tablat	equ	0xFF5
 10041                           prodh	equ	0xFF4
 10042                           prodl	equ	0xFF3
 10043                           intcon	equ	0xFF2
 10044                           intcon2	equ	0xFF1
 10045                           intcon3	equ	0xFF0
 10046                           postinc0	equ	0xFEE
 10047                           wreg	equ	0xFE8
 10048                           indf1	equ	0xFE7
 10049                           postdec1	equ	0xFE5
 10050                           plusw1	equ	0xFE3
 10051                           fsr1h	equ	0xFE2
 10052                           fsr1l	equ	0xFE1
 10053                           indf2	equ	0xFDF
 10054                           postinc2	equ	0xFDE
 10055                           postdec2	equ	0xFDD
 10056                           plusw2	equ	0xFDB
 10057                           fsr2h	equ	0xFDA
 10058                           fsr2l	equ	0xFD9
 10059                           status	equ	0xFD8
 10060                           
 10061 ;; *************** function _internalFlash_addressWithinPage *****************
 10062 ;; Defined at:
 10063 ;;		line 185 in file "internal_flash.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  address         4    8[COMRAM] unsigned long 
 10066 ;;  page            2   12[COMRAM] unsigned int 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;  page_start_a    4   18[COMRAM] unsigned long 
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  2    8[COMRAM] unsigned int 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10078 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10079 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10081 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10082 ;;Total ram usage:       14 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    1
 10085 ;; This function calls:
 10086 ;;		_internalFlash_addressFromPage
 10087 ;; This function is called by:
 10088 ;;		__bootloader_program
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           	psect	text41
 10093  008EB0                     __ptext41:
 10094                           	opt stack 0
 10095  008EB0                     _internalFlash_addressWithinPage:
 10096                           	opt stack 27
 10097                           
 10098                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 10099                           
 10100                           ;incstack = 0
 10101  008EB0  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 10102  008EB4  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 10103  008EB8  EC1E  F04E         	call	_internalFlash_addressFromPage	;wreg free
 10104  008EBC  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 10105  008EC0  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 10106  008EC4  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 10107  008EC8  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 10108                           
 10109                           ;internal_flash.c: 189: address = address - page_start_address;
 10110  008ECC  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 10111  008ED0  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 10112  008ED4  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 10113  008ED8  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 10114  008EDC  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 10115  008EDE  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 10116  008EE0  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 10117  008EE2  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 10118  008EE4  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 10119  008EE6  0E00               	movlw	0
 10120  008EE8  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 10121  008EEA  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 10122  008EEC  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 10123  008EEE  5009               	movf	internalFlash_addressWithinPage@address,w,c
 10124  008EF0  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 10125  008EF2  6E09               	movwf	internalFlash_addressWithinPage@address,c
 10126  008EF4  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 10127  008EF6  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 10128  008EF8  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 10129  008EFA  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 10130  008EFC  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 10131  008EFE  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 10132  008F00  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 10133  008F02  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 10134  008F04  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 10135                           
 10136                           ;internal_flash.c: 190: return (uint16_t) address;
 10137  008F06  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 10138  008F0A  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 10139  008F0E  0012               	return	
 10140  008F10                     __end_of_internalFlash_addressWithinPage:
 10141                           	opt stack 0
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           intcon2	equ	0xFF1
 10150                           intcon3	equ	0xFF0
 10151                           postinc0	equ	0xFEE
 10152                           wreg	equ	0xFE8
 10153                           indf1	equ	0xFE7
 10154                           postdec1	equ	0xFE5
 10155                           plusw1	equ	0xFE3
 10156                           fsr1h	equ	0xFE2
 10157                           fsr1l	equ	0xFE1
 10158                           indf2	equ	0xFDF
 10159                           postinc2	equ	0xFDE
 10160                           postdec2	equ	0xFDD
 10161                           plusw2	equ	0xFDB
 10162                           fsr2h	equ	0xFDA
 10163                           fsr2l	equ	0xFD9
 10164                           status	equ	0xFD8
 10165                           
 10166 ;; *************** function _internalFlash_addressFromPage *****************
 10167 ;; Defined at:
 10168 ;;		line 177 in file "internal_flash.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  page            2    0[COMRAM] unsigned int 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  address         4    4[COMRAM] unsigned long 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  4    0[COMRAM] unsigned long 
 10175 ;; Registers used:
 10176 ;;		wreg, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10186 ;;Total ram usage:        8 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; This function calls:
 10189 ;;		Nothing
 10190 ;; This function is called by:
 10191 ;;		_internalFlash_readPage
 10192 ;;		_internalFlash_erasePage
 10193 ;;		_internalFlash_writePage
 10194 ;;		_internalFlash_addressWithinPage
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text42
 10199  009C3C                     __ptext42:
 10200                           	opt stack 0
 10201  009C3C                     _internalFlash_addressFromPage:
 10202                           	opt stack 27
 10203                           
 10204                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
 10205                           
 10206                           ;incstack = 0
 10207  009C3C  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 10208  009C40  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 10209  009C44  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 10210  009C46  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 10211                           
 10212                           ;internal_flash.c: 181: address <<= 10;
 10213  009C48  0E0A               	movlw	10
 10214  009C4A                     u11645:
 10215  009C4A  90D8               	bcf	status,0,c
 10216  009C4C  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 10217  009C4E  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 10218  009C50  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 10219  009C52  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 10220  009C54  2EE8               	decfsz	wreg,f,c
 10221  009C56  D7F9               	goto	u11645
 10222                           
 10223                           ;internal_flash.c: 182: return address;
 10224  009C58  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 10225  009C5C  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 10226  009C60  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 10227  009C64  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 10228  009C68  0012               	return	
 10229  009C6A                     __end_of_internalFlash_addressFromPage:
 10230                           	opt stack 0
 10231                           tblptru	equ	0xFF8
 10232                           tblptrh	equ	0xFF7
 10233                           tblptrl	equ	0xFF6
 10234                           tablat	equ	0xFF5
 10235                           prodh	equ	0xFF4
 10236                           prodl	equ	0xFF3
 10237                           intcon	equ	0xFF2
 10238                           intcon2	equ	0xFF1
 10239                           intcon3	equ	0xFF0
 10240                           postinc0	equ	0xFEE
 10241                           wreg	equ	0xFE8
 10242                           indf1	equ	0xFE7
 10243                           postdec1	equ	0xFE5
 10244                           plusw1	equ	0xFE3
 10245                           fsr1h	equ	0xFE2
 10246                           fsr1l	equ	0xFE1
 10247                           indf2	equ	0xFDF
 10248                           postinc2	equ	0xFDE
 10249                           postdec2	equ	0xFDD
 10250                           plusw2	equ	0xFDB
 10251                           fsr2h	equ	0xFDA
 10252                           fsr2l	equ	0xFD9
 10253                           status	equ	0xFD8
 10254                           
 10255 ;; *************** function __bootloader_check_address *****************
 10256 ;; Defined at:
 10257 ;;		line 112 in file "bootloader.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  address         4    0[COMRAM] unsigned long 
 10260 ;;  dataLength      1    4[COMRAM] unsigned char 
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;  cntr            1   11[COMRAM] unsigned char 
 10263 ;;  byte_status     1   10[COMRAM] enum E6967
 10264 ;;  worst_case      1    9[COMRAM] enum E6967
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      enum E6967
 10267 ;; Registers used:
 10268 ;;		wreg, status,2, status,0
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10274 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10275 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10277 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10278 ;;Total ram usage:       12 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		__bootloader_verify_file
 10284 ;;		__bootloader_program
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           	psect	text43
 10289  006AD0                     __ptext43:
 10290                           	opt stack 0
 10291  006AD0                     __bootloader_check_address:
 10292                           	opt stack 28
 10293                           
 10294                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10295                           
 10296                           ;incstack = 0
 10297  006AD0  0E00               	movlw	0
 10298  006AD2  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10299                           
 10300                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10301  006AD4  0E00               	movlw	0
 10302  006AD6  6E0C               	movwf	__bootloader_check_address@cntr,c
 10303  006AD8  D062               	goto	l2455
 10304  006ADA                     
 10305                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x0A000) && ((address+cntr)
      +                          <=0x1FFF7))
 10306  006ADA  500C               	movf	__bootloader_check_address@cntr,w,c
 10307  006ADC  2401               	addwf	__bootloader_check_address@address,w,c
 10308  006ADE  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10309  006AE0  0E00               	movlw	0
 10310  006AE2  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10311  006AE4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10312  006AE6  0E00               	movlw	0
 10313  006AE8  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10314  006AEA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10315  006AEC  0E00               	movlw	0
 10316  006AEE  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10317  006AF0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10318  006AF2  5009               	movf	??__bootloader_check_address+3,w,c
 10319  006AF4  1008               	iorwf	??__bootloader_check_address+2,w,c
 10320  006AF6  E104               	bnz	u12930
 10321  006AF8  0EA0               	movlw	160
 10322  006AFA  5C07               	subwf	??__bootloader_check_address+1,w,c
 10323  006AFC  A0D8               	btfss	status,0,c
 10324  006AFE  D018               	goto	l2457
 10325  006B00                     u12930:
 10326  006B00  500C               	movf	__bootloader_check_address@cntr,w,c
 10327  006B02  2401               	addwf	__bootloader_check_address@address,w,c
 10328  006B04  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10329  006B06  0E00               	movlw	0
 10330  006B08  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10331  006B0A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10332  006B0C  0E00               	movlw	0
 10333  006B0E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10334  006B10  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10335  006B12  0E00               	movlw	0
 10336  006B14  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10337  006B16  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10338  006B18  5009               	movf	??__bootloader_check_address+3,w,c
 10339  006B1A  E10A               	bnz	l15318
 10340  006B1C  0EF8               	movlw	248
 10341  006B1E  5C06               	subwf	??__bootloader_check_address,w,c
 10342  006B20  0EFF               	movlw	255
 10343  006B22  5807               	subwfb	??__bootloader_check_address+1,w,c
 10344  006B24  0E01               	movlw	1
 10345  006B26  5808               	subwfb	??__bootloader_check_address+2,w,c
 10346  006B28  B0D8               	btfsc	status,0,c
 10347  006B2A  D002               	goto	l2457
 10348                           
 10349                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10350  006B2C  0E00               	movlw	0
 10351  006B2E  D029               	goto	L4
 10352  006B30                     l2457:
 10353  006B30                     l15318:
 10354                           
 10355                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10356  006B30  500C               	movf	__bootloader_check_address@cntr,w,c
 10357  006B32  2401               	addwf	__bootloader_check_address@address,w,c
 10358  006B34  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10359  006B36  0E00               	movlw	0
 10360  006B38  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10361  006B3A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10362  006B3C  0E00               	movlw	0
 10363  006B3E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10364  006B40  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10365  006B42  0E00               	movlw	0
 10366  006B44  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10367  006B46  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10368  006B48  5009               	movf	??__bootloader_check_address+3,w,c
 10369  006B4A  E108               	bnz	u12950
 10370  006B4C  0EF8               	movlw	248
 10371  006B4E  5C06               	subwf	??__bootloader_check_address,w,c
 10372  006B50  0EFF               	movlw	255
 10373  006B52  5807               	subwfb	??__bootloader_check_address+1,w,c
 10374  006B54  0E01               	movlw	1
 10375  006B56  5808               	subwfb	??__bootloader_check_address+2,w,c
 10376  006B58  A0D8               	btfss	status,0,c
 10377  006B5A  D015               	goto	l2459
 10378  006B5C                     u12950:
 10379  006B5C  500C               	movf	__bootloader_check_address@cntr,w,c
 10380  006B5E  2401               	addwf	__bootloader_check_address@address,w,c
 10381  006B60  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10382  006B62  0E00               	movlw	0
 10383  006B64  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10384  006B66  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10385  006B68  0E00               	movlw	0
 10386  006B6A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10387  006B6C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10388  006B6E  0E00               	movlw	0
 10389  006B70  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10390  006B72  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10391  006B74  5009               	movf	??__bootloader_check_address+3,w,c
 10392  006B76  E107               	bnz	l2459
 10393  006B78  0E02               	movlw	2
 10394  006B7A  5C08               	subwf	??__bootloader_check_address+2,w,c
 10395  006B7C  B0D8               	btfsc	status,0,c
 10396  006B7E  D003               	goto	l2459
 10397                           
 10398                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10399  006B80  0E01               	movlw	1
 10400  006B82                     L4:
 10401  006B82  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10402                           
 10403                           ;bootloader.c: 133: }
 10404  006B84  D001               	goto	l2460
 10405  006B86                     l2459:
 10406                           
 10407                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10408  006B86  680B               	setf	__bootloader_check_address@byte_status,c
 10409  006B88                     l2460:
 10410                           
 10411                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10412  006B88  280B               	incf	__bootloader_check_address@byte_status,w,c
 10413  006B8A  A4D8               	btfss	status,2,c
 10414  006B8C  D002               	goto	l2461
 10415                           
 10416                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 10417  006B8E  0EFF               	movlw	255
 10418  006B90  0012               	return	
 10419  006B92                     l2461:
 10420                           
 10421                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 10422  006B92  500B               	movf	__bootloader_check_address@byte_status,w,c
 10423  006B94  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10424  006B96  A0D8               	btfss	status,0,c
 10425                           
 10426                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 10427  006B98  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10428  006B9C  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10429  006B9E                     l2455:
 10430  006B9E  5005               	movf	__bootloader_check_address@dataLength,w,c
 10431  006BA0  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10432  006BA2  A0D8               	btfss	status,0,c
 10433  006BA4  D79A               	goto	l2456
 10434                           
 10435                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 10436  006BA6  500A               	movf	__bootloader_check_address@worst_case,w,c
 10437  006BA8  0012               	return	
 10438  006BAA                     __end_of__bootloader_check_address:
 10439                           	opt stack 0
 10440                           tblptru	equ	0xFF8
 10441                           tblptrh	equ	0xFF7
 10442                           tblptrl	equ	0xFF6
 10443                           tablat	equ	0xFF5
 10444                           prodh	equ	0xFF4
 10445                           prodl	equ	0xFF3
 10446                           intcon	equ	0xFF2
 10447                           intcon2	equ	0xFF1
 10448                           intcon3	equ	0xFF0
 10449                           postinc0	equ	0xFEE
 10450                           wreg	equ	0xFE8
 10451                           indf1	equ	0xFE7
 10452                           postdec1	equ	0xFE5
 10453                           plusw1	equ	0xFE3
 10454                           fsr1h	equ	0xFE2
 10455                           fsr1l	equ	0xFE1
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           postdec2	equ	0xFDD
 10459                           plusw2	equ	0xFDB
 10460                           fsr2h	equ	0xFDA
 10461                           fsr2l	equ	0xFD9
 10462                           status	equ	0xFD8
 10463                           
 10464 ;; *************** function __bootloader_find_file *****************
 10465 ;; Defined at:
 10466 ;;		line 155 in file "bootloader.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10484 ;;Total ram usage:        0 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    7
 10487 ;; This function calls:
 10488 ;;		_fat_find_file
 10489 ;;		_fat_get_file_size
 10490 ;; This function is called by:
 10491 ;;		_bootloader_run
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text44
 10496  007E04                     __ptext44:
 10497                           	opt stack 0
 10498  007E04                     __bootloader_find_file:
 10499                           	opt stack 22
 10500                           
 10501                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10502                           
 10503                           ;incstack = 0
 10504  007E04  0EB6               	movlw	low _bootloader_filename
 10505  007E06  6E2C               	movwf	fat_find_file@name,c
 10506  007E08  0EBF               	movlw	high _bootloader_filename
 10507  007E0A  6E2D               	movwf	fat_find_file@name+1,c
 10508  007E0C  0EC7               	movlw	low _bootloader_extension
 10509  007E0E  6E2E               	movwf	fat_find_file@extension,c
 10510  007E10  0EBF               	movlw	high _bootloader_extension
 10511  007E12  6E2F               	movwf	fat_find_file@extension+1,c
 10512  007E14  EC89  F034         	call	_fat_find_file	;wreg free
 10513  007E18  0100               	movlb	0	; () banked
 10514  007E1A  6FFF               	movwf	_file_number& (0+255),b
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;bootloader.c: 161: if(file_number!=0xFF)
 10518  007E1C  29FF               	incf	_file_number& (0+255),w,b
 10519  007E1E  B4D8               	btfsc	status,2,c
 10520  007E20  D033               	goto	l2467
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 10524  007E22  51FF               	movf	_file_number& (0+255),w,b
 10525  007E24  EC89  F045         	call	_fat_get_file_size
 10526  007E28  C036  F0D1         	movff	?_fat_get_file_size,_hex_file_size
 10527  007E2C  C037  F0D2         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10528  007E30  C038  F0D3         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10529  007E34  C039  F0D4         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10530                           
 10531                           ;bootloader.c: 166: hex_file_entries = 0;
 10532  007E38  0E00               	movlw	0
 10533  007E3A  0101               	movlb	1	; () banked
 10534  007E3C  6F7B               	movwf	(_hex_file_entries+1)& (0+255),b
 10535  007E3E  0E00               	movlw	0
 10536  007E40  6F7A               	movwf	_hex_file_entries& (0+255),b
 10537                           
 10538                           ; BSR set to: 1
 10539                           ;bootloader.c: 167: hex_file_offset = 0;
 10540  007E42  0E00               	movlw	0
 10541  007E44  0100               	movlb	0	; () banked
 10542  007E46  6FD5               	movwf	_hex_file_offset& (0+255),b
 10543  007E48  0E00               	movlw	0
 10544  007E4A  6FD6               	movwf	(_hex_file_offset+1)& (0+255),b
 10545  007E4C  0E00               	movlw	0
 10546  007E4E  6FD7               	movwf	(_hex_file_offset+2)& (0+255),b
 10547  007E50  0E00               	movlw	0
 10548  007E52  6FD8               	movwf	(_hex_file_offset+3)& (0+255),b
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 10552  007E54  0101               	movlb	1	; () banked
 10553  007E56  6954               	setf	_file_minimum_address& (0+255),b
 10554  007E58  6955               	setf	(_file_minimum_address+1)& (0+255),b
 10555  007E5A  6956               	setf	(_file_minimum_address+2)& (0+255),b
 10556  007E5C  6957               	setf	(_file_minimum_address+3)& (0+255),b
 10557                           
 10558                           ; BSR set to: 1
 10559                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 10560  007E5E  0E00               	movlw	0
 10561  007E60  6F50               	movwf	_file_maximum_address& (0+255),b
 10562  007E62  0E00               	movlw	0
 10563  007E64  6F51               	movwf	(_file_maximum_address+1)& (0+255),b
 10564  007E66  0E00               	movlw	0
 10565  007E68  6F52               	movwf	(_file_maximum_address+2)& (0+255),b
 10566  007E6A  0E00               	movlw	0
 10567  007E6C  6F53               	movwf	(_file_maximum_address+3)& (0+255),b
 10568                           
 10569                           ; BSR set to: 1
 10570                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 10571  007E6E  0E00               	movlw	0
 10572  007E70  6F4C               	movwf	_extended_linear_address& (0+255),b
 10573  007E72  0E00               	movlw	0
 10574  007E74  6F4D               	movwf	(_extended_linear_address+1)& (0+255),b
 10575  007E76  0E00               	movlw	0
 10576  007E78  6F4E               	movwf	(_extended_linear_address+2)& (0+255),b
 10577  007E7A  0E00               	movlw	0
 10578  007E7C  6F4F               	movwf	(_extended_linear_address+3)& (0+255),b
 10579                           
 10580                           ; BSR set to: 1
 10581                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10582  007E7E  0E20               	movlw	32
 10583  007E80  6F35               	movwf	(_os+4)& (0+255),b
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10587  007E82  0E20               	movlw	32
 10588  007E84  6F36               	movwf	(_os+5)& (0+255),b
 10589                           
 10590                           ;bootloader.c: 173: }
 10591  007E86  0012               	return	
 10592  007E88                     l2467:
 10593                           
 10594                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 10595                           
 10596                           ; BSR set to: 1
 10597  007E88  0E00               	movlw	0
 10598  007E8A  0100               	movlb	0	; () banked
 10599  007E8C  6FD1               	movwf	_hex_file_size& (0+255),b
 10600  007E8E  0E00               	movlw	0
 10601  007E90  6FD2               	movwf	(_hex_file_size+1)& (0+255),b
 10602  007E92  0E00               	movlw	0
 10603  007E94  6FD3               	movwf	(_hex_file_size+2)& (0+255),b
 10604  007E96  0E00               	movlw	0
 10605  007E98  6FD4               	movwf	(_hex_file_size+3)& (0+255),b
 10606                           
 10607                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10608  007E9A  0E10               	movlw	16
 10609  007E9C  0101               	movlb	1	; () banked
 10610  007E9E  6F35               	movwf	(_os+4)& (0+255),b
 10611                           
 10612                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10613  007EA0  0E10               	movlw	16
 10614  007EA2  6F36               	movwf	(_os+5)& (0+255),b
 10615  007EA4  0012               	return	
 10616  007EA6                     __end_of__bootloader_find_file:
 10617                           	opt stack 0
 10618                           tblptru	equ	0xFF8
 10619                           tblptrh	equ	0xFF7
 10620                           tblptrl	equ	0xFF6
 10621                           tablat	equ	0xFF5
 10622                           prodh	equ	0xFF4
 10623                           prodl	equ	0xFF3
 10624                           intcon	equ	0xFF2
 10625                           intcon2	equ	0xFF1
 10626                           intcon3	equ	0xFF0
 10627                           postinc0	equ	0xFEE
 10628                           wreg	equ	0xFE8
 10629                           indf1	equ	0xFE7
 10630                           postdec1	equ	0xFE5
 10631                           plusw1	equ	0xFE3
 10632                           fsr1h	equ	0xFE2
 10633                           fsr1l	equ	0xFE1
 10634                           indf2	equ	0xFDF
 10635                           postinc2	equ	0xFDE
 10636                           postdec2	equ	0xFDD
 10637                           plusw2	equ	0xFDB
 10638                           fsr2h	equ	0xFDA
 10639                           fsr2l	equ	0xFD9
 10640                           status	equ	0xFD8
 10641                           
 10642 ;; *************** function __normal_mode *****************
 10643 ;; Defined at:
 10644 ;;		line 210 in file "main.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;		None
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      unsigned char 
 10651 ;; Registers used:
 10652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;Total ram usage:        0 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; Hardware stack levels required when called:    3
 10665 ;; This function calls:
 10666 ;;		_i2c_eeprom_readByte
 10667 ;;		_i2c_eeprom_writeByte
 10668 ;; This function is called by:
 10669 ;;		_main
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           	psect	text45
 10674  008F70                     __ptext45:
 10675                           	opt stack 0
 10676  008F70                     __normal_mode:
 10677                           	opt stack 27
 10678                           
 10679                           ;main.c: 212: if(i2c_eeprom_readByte(0x100)==0x94)
 10680                           
 10681                           ; BSR set to: 1
 10682                           ;incstack = 0
 10683  008F70  0E01               	movlw	1
 10684  008F72  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10685  008F74  0E00               	movlw	0
 10686  008F76  6E12               	movwf	i2c_eeprom_readByte@address,c
 10687  008F78  EC9C  F04A         	call	_i2c_eeprom_readByte	;wreg free
 10688  008F7C  0A94               	xorlw	148
 10689  008F7E  A4D8               	btfss	status,2,c
 10690  008F80  D00A               	goto	l912
 10691                           
 10692                           ;main.c: 213: {;main.c: 215: i2c_eeprom_writeByte(0x100, 0x00);
 10693  008F82  0E01               	movlw	1
 10694  008F84  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10695  008F86  0E00               	movlw	0
 10696  008F88  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10697  008F8A  0E00               	movlw	0
 10698  008F8C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10699  008F8E  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
 10700                           
 10701                           ;main.c: 217: return 0;
 10702  008F92  0E00               	movlw	0
 10703  008F94  0012               	return	
 10704  008F96                     l912:
 10705                           
 10706                           ;main.c: 219: else if(i2c_eeprom_readByte(0x100)==0x78)
 10707  008F96  0E01               	movlw	1
 10708  008F98  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10709  008F9A  0E00               	movlw	0
 10710  008F9C  6E12               	movwf	i2c_eeprom_readByte@address,c
 10711  008F9E  EC9C  F04A         	call	_i2c_eeprom_readByte	;wreg free
 10712  008FA2  0A78               	xorlw	120
 10713  008FA4  A4D8               	btfss	status,2,c
 10714  008FA6  D00A               	goto	l915
 10715                           
 10716                           ;main.c: 220: {;main.c: 222: i2c_eeprom_writeByte(0x100, 0x00);
 10717  008FA8  0E01               	movlw	1
 10718  008FAA  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10719  008FAC  0E00               	movlw	0
 10720  008FAE  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10721  008FB0  0E00               	movlw	0
 10722  008FB2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10723  008FB4  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
 10724                           
 10725                           ;main.c: 224: return 1;
 10726  008FB8  0E01               	movlw	1
 10727  008FBA  0012               	return	
 10728  008FBC                     l915:
 10729                           
 10730                           ;main.c: 225: };main.c: 231: LATAbits.LA0 = 1;
 10731  008FBC  8089               	bsf	3977,0,c	;volatile
 10732                           
 10733                           ;main.c: 232: TRISAbits.TRISA0 = 0;
 10734  008FBE  9092               	bcf	3986,0,c	;volatile
 10735                           
 10736                           ;main.c: 233: TRISAbits.TRISA0 = 1;
 10737  008FC0  8092               	bsf	3986,0,c	;volatile
 10738                           
 10739                           ;main.c: 235: if(!PORTAbits.RA0)
 10740  008FC2  B080               	btfsc	3968,0,c	;volatile
 10741  008FC4  D002               	goto	l916
 10742                           
 10743                           ;main.c: 236: {;main.c: 238: return 0;
 10744  008FC6  0E00               	movlw	0
 10745                           
 10746                           ;main.c: 239: }
 10747  008FC8  0012               	return	
 10748  008FCA                     l916:
 10749                           
 10750                           ;main.c: 240: else;main.c: 241: {;main.c: 243: return 1;
 10751  008FCA  0E01               	movlw	1
 10752  008FCC  0012               	return	
 10753  008FCE                     __end_of__normal_mode:
 10754                           	opt stack 0
 10755                           tblptru	equ	0xFF8
 10756                           tblptrh	equ	0xFF7
 10757                           tblptrl	equ	0xFF6
 10758                           tablat	equ	0xFF5
 10759                           prodh	equ	0xFF4
 10760                           prodl	equ	0xFF3
 10761                           intcon	equ	0xFF2
 10762                           intcon2	equ	0xFF1
 10763                           intcon3	equ	0xFF0
 10764                           postinc0	equ	0xFEE
 10765                           wreg	equ	0xFE8
 10766                           indf1	equ	0xFE7
 10767                           postdec1	equ	0xFE5
 10768                           plusw1	equ	0xFE3
 10769                           fsr1h	equ	0xFE2
 10770                           fsr1l	equ	0xFE1
 10771                           indf2	equ	0xFDF
 10772                           postinc2	equ	0xFDE
 10773                           postdec2	equ	0xFDD
 10774                           plusw2	equ	0xFDB
 10775                           fsr2h	equ	0xFDA
 10776                           fsr2l	equ	0xFD9
 10777                           status	equ	0xFD8
 10778                           
 10779 ;; *************** function _i2c_eeprom_readByte *****************
 10780 ;; Defined at:
 10781 ;;		line 395 in file "i2c.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  address         2   17[COMRAM] unsigned int 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  addr            1   23[COMRAM] unsigned char 
 10786 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      unsigned char 
 10789 ;; Registers used:
 10790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10798 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10800 ;;Total ram usage:        7 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    2
 10803 ;; This function calls:
 10804 ;;		__i2c_read
 10805 ;;		__i2c_write
 10806 ;;		_i2c_set_frequency
 10807 ;; This function is called by:
 10808 ;;		__normal_mode
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text46
 10813  009538                     __ptext46:
 10814                           	opt stack 0
 10815  009538                     _i2c_eeprom_readByte:
 10816                           	opt stack 27
 10817                           
 10818                           ;i2c.c: 397: uint8_t slave_address;;i2c.c: 398: uint8_t addr;;i2c.c: 399: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10819                           
 10820                           ;incstack = 0
 10821  009538  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10822  00953C  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10823  009540  0E07               	movlw	7
 10824  009542  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10825  009544                     u13625:
 10826  009544  90D8               	bcf	status,0,c
 10827  009546  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10828  009548  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10829  00954A  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10830  00954C  D7FB               	goto	u13625
 10831  00954E  5014               	movf	??_i2c_eeprom_readByte,w,c
 10832  009550  0B0E               	andlw	14
 10833  009552  09A0               	iorlw	160
 10834  009554  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10835                           
 10836                           ;i2c.c: 400: addr = address & 0xFF;
 10837  009556  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10838                           
 10839                           ;i2c.c: 403: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10840  00955A  0E02               	movlw	2
 10841  00955C  ECA5  F04E         	call	_i2c_set_frequency
 10842                           
 10843                           ;i2c.c: 405: _i2c_write(slave_address, &addr, 1);
 10844  009560  0E18               	movlw	low i2c_eeprom_readByte@addr
 10845  009562  6E06               	movwf	__i2c_write@data,c
 10846  009564  0E00               	movlw	high i2c_eeprom_readByte@addr
 10847  009566  6E07               	movwf	__i2c_write@data+1,c
 10848  009568  0E01               	movlw	1
 10849  00956A  6E08               	movwf	__i2c_write@length,c
 10850  00956C  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10851  00956E  EC38  F04B         	call	__i2c_write
 10852                           
 10853                           ;i2c.c: 406: _i2c_read(slave_address, &addr, 1);
 10854  009572  0E18               	movlw	low i2c_eeprom_readByte@addr
 10855  009574  6E06               	movwf	__i2c_read@data,c
 10856  009576  0E00               	movlw	high i2c_eeprom_readByte@addr
 10857  009578  6E07               	movwf	__i2c_read@data+1,c
 10858  00957A  0E01               	movlw	1
 10859  00957C  6E08               	movwf	__i2c_read@length,c
 10860  00957E  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10861  009580  ECA4  F042         	call	__i2c_read
 10862                           
 10863                           ;i2c.c: 407: return addr;
 10864  009584  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10865  009586  0012               	return	
 10866  009588                     __end_of_i2c_eeprom_readByte:
 10867                           	opt stack 0
 10868                           tblptru	equ	0xFF8
 10869                           tblptrh	equ	0xFF7
 10870                           tblptrl	equ	0xFF6
 10871                           tablat	equ	0xFF5
 10872                           prodh	equ	0xFF4
 10873                           prodl	equ	0xFF3
 10874                           intcon	equ	0xFF2
 10875                           intcon2	equ	0xFF1
 10876                           intcon3	equ	0xFF0
 10877                           postinc0	equ	0xFEE
 10878                           wreg	equ	0xFE8
 10879                           indf1	equ	0xFE7
 10880                           postdec1	equ	0xFE5
 10881                           plusw1	equ	0xFE3
 10882                           fsr1h	equ	0xFE2
 10883                           fsr1l	equ	0xFE1
 10884                           indf2	equ	0xFDF
 10885                           postinc2	equ	0xFDE
 10886                           postdec2	equ	0xFDD
 10887                           plusw2	equ	0xFDB
 10888                           fsr2h	equ	0xFDA
 10889                           fsr2l	equ	0xFD9
 10890                           status	equ	0xFD8
 10891                           
 10892 ;; *************** function __i2c_read *****************
 10893 ;; Defined at:
 10894 ;;		line 169 in file "i2c.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;  slave_addres    1    wreg     unsigned char 
 10897 ;;  data            2    5[COMRAM] PTR unsigned char 
 10898 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10899 ;;  length          1    7[COMRAM] unsigned char 
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10902 ;;  cntr            1   16[COMRAM] unsigned char 
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10912 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10914 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10915 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10916 ;;Total ram usage:       12 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    1
 10919 ;; This function calls:
 10920 ;;		__i2c_acknowledge
 10921 ;;		__i2c_get
 10922 ;;		__i2c_not_acknowledge
 10923 ;;		__i2c_send
 10924 ;;		__i2c_start
 10925 ;;		__i2c_stop
 10926 ;;		__i2c_wait_idle
 10927 ;; This function is called by:
 10928 ;;		_i2c_eeprom_readByte
 10929 ;;		_i2c_eeprom_read
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text47
 10934  008548                     __ptext47:
 10935                           	opt stack 0
 10936  008548                     __i2c_read:
 10937                           	opt stack 27
 10938                           
 10939                           ;incstack = 0
 10940                           ;__i2c_read@slave_address stored from wreg
 10941  008548  6E10               	movwf	__i2c_read@slave_address,c
 10942                           
 10943                           ;i2c.c: 171: uint8_t cntr;;i2c.c: 173: _i2c_wait_idle();
 10944  00854A  EC42  F048         	call	__i2c_wait_idle	;wreg free
 10945                           
 10946                           ;i2c.c: 174: _i2c_start();
 10947  00854E  EC51  F051         	call	__i2c_start	;wreg free
 10948                           
 10949                           ;i2c.c: 175: _i2c_wait_idle();
 10950  008552  EC42  F048         	call	__i2c_wait_idle	;wreg free
 10951                           
 10952                           ;i2c.c: 176: _i2c_send(slave_address | 0x01);
 10953  008556  5010               	movf	__i2c_read@slave_address,w,c
 10954  008558  0901               	iorlw	1
 10955  00855A  EC55  F051         	call	__i2c_send
 10956                           
 10957                           ;i2c.c: 177: _i2c_wait_idle();
 10958  00855E  EC42  F048         	call	__i2c_wait_idle	;wreg free
 10959                           
 10960                           ;i2c.c: 179: for(cntr=0; cntr<length-1; ++cntr)
 10961  008562  0E00               	movlw	0
 10962  008564  6E11               	movwf	__i2c_read@cntr,c
 10963  008566  D00E               	goto	l1205
 10964  008568                     
 10965                           ;i2c.c: 180: {;i2c.c: 181: data[cntr] = _i2c_get();
 10966  008568  5011               	movf	__i2c_read@cntr,w,c
 10967  00856A  0D01               	mullw	1
 10968  00856C  50F3               	movf	prodl,w,c
 10969  00856E  2406               	addwf	__i2c_read@data,w,c
 10970  008570  6ED9               	movwf	fsr2l,c
 10971  008572  50F4               	movf	prodh,w,c
 10972  008574  2007               	addwfc	__i2c_read@data+1,w,c
 10973  008576  6EDA               	movwf	fsr2h,c
 10974  008578  EC1B  F051         	call	__i2c_get	;wreg free
 10975  00857C  6EDF               	movwf	indf2,c
 10976                           
 10977                           ;i2c.c: 182: _i2c_acknowledge();
 10978  00857E  EC20  F051         	call	__i2c_acknowledge	;wreg free
 10979  008582  2A11               	incf	__i2c_read@cntr,f,c
 10980  008584                     l1205:
 10981  008584  0EFF               	movlw	255
 10982  008586  6E09               	movwf	??__i2c_read& (0+255),c
 10983  008588  0EFF               	movlw	255
 10984  00858A  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10985  00858C  5008               	movf	__i2c_read@length,w,c
 10986  00858E  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10987  008590  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10988  008592  5009               	movf	??__i2c_read,w,c
 10989  008594  260B               	addwf	??__i2c_read+2,f,c
 10990  008596  500A               	movf	??__i2c_read+1,w,c
 10991  008598  220C               	addwfc	??__i2c_read+3,f,c
 10992  00859A  5011               	movf	__i2c_read@cntr,w,c
 10993  00859C  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10994  00859E  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10995  0085A0  500B               	movf	??__i2c_read+2,w,c
 10996  0085A2  5C0D               	subwf	??__i2c_read+4,w,c
 10997  0085A4  500E               	movf	??__i2c_read+5,w,c
 10998  0085A6  0A80               	xorlw	128
 10999  0085A8  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 11000  0085AA  500C               	movf	??__i2c_read+3,w,c
 11001  0085AC  0A80               	xorlw	128
 11002  0085AE  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 11003  0085B0  A0D8               	btfss	status,0,c
 11004  0085B2  D7DA               	goto	l1206
 11005                           
 11006                           ;i2c.c: 183: };i2c.c: 184: data[cntr] = _i2c_get();
 11007  0085B4  5011               	movf	__i2c_read@cntr,w,c
 11008  0085B6  0D01               	mullw	1
 11009  0085B8  50F3               	movf	prodl,w,c
 11010  0085BA  2406               	addwf	__i2c_read@data,w,c
 11011  0085BC  6ED9               	movwf	fsr2l,c
 11012  0085BE  50F4               	movf	prodh,w,c
 11013  0085C0  2007               	addwfc	__i2c_read@data+1,w,c
 11014  0085C2  6EDA               	movwf	fsr2h,c
 11015  0085C4  EC1B  F051         	call	__i2c_get	;wreg free
 11016  0085C8  6EDF               	movwf	indf2,c
 11017                           
 11018                           ;i2c.c: 185: _i2c_not_acknowledge();
 11019  0085CA  EC16  F051         	call	__i2c_not_acknowledge	;wreg free
 11020                           
 11021                           ;i2c.c: 187: _i2c_stop();
 11022  0085CE  EC4D  F051         	call	__i2c_stop	;wreg free
 11023  0085D2  0012               	return		;funcret
 11024  0085D4                     __end_of__i2c_read:
 11025                           	opt stack 0
 11026                           tblptru	equ	0xFF8
 11027                           tblptrh	equ	0xFF7
 11028                           tblptrl	equ	0xFF6
 11029                           tablat	equ	0xFF5
 11030                           prodh	equ	0xFF4
 11031                           prodl	equ	0xFF3
 11032                           intcon	equ	0xFF2
 11033                           intcon2	equ	0xFF1
 11034                           intcon3	equ	0xFF0
 11035                           postinc0	equ	0xFEE
 11036                           wreg	equ	0xFE8
 11037                           indf1	equ	0xFE7
 11038                           postdec1	equ	0xFE5
 11039                           plusw1	equ	0xFE3
 11040                           fsr1h	equ	0xFE2
 11041                           fsr1l	equ	0xFE1
 11042                           indf2	equ	0xFDF
 11043                           postinc2	equ	0xFDE
 11044                           postdec2	equ	0xFDD
 11045                           plusw2	equ	0xFDB
 11046                           fsr2h	equ	0xFDA
 11047                           fsr2l	equ	0xFD9
 11048                           status	equ	0xFD8
 11049                           
 11050 ;; *************** function __i2c_not_acknowledge *****************
 11051 ;; Defined at:
 11052 ;;		line 98 in file "i2c.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;		None
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		None
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11070 ;;Total ram usage:        0 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		__i2c_read
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text48
 11080  00A22C                     __ptext48:
 11081                           	opt stack 0
 11082  00A22C                     __i2c_not_acknowledge:
 11083                           	opt stack 27
 11084                           
 11085                           ;i2c.c: 100: SSP1CON2bits.ACKDT = 1;
 11086                           
 11087                           ;incstack = 0
 11088  00A22C  8AC5               	bsf	4037,5,c	;volatile
 11089                           
 11090                           ;i2c.c: 101: SSP1CON2bits.ACKEN = 1;
 11091  00A22E  88C5               	bsf	4037,4,c	;volatile
 11092  00A230  A8C5               	btfss	4037,4,c	;volatile
 11093  00A232  0012               	return	
 11094  00A234  D7FD               	goto	l1177
 11095  00A236                     __end_of__i2c_not_acknowledge:
 11096                           	opt stack 0
 11097                           tblptru	equ	0xFF8
 11098                           tblptrh	equ	0xFF7
 11099                           tblptrl	equ	0xFF6
 11100                           tablat	equ	0xFF5
 11101                           prodh	equ	0xFF4
 11102                           prodl	equ	0xFF3
 11103                           intcon	equ	0xFF2
 11104                           intcon2	equ	0xFF1
 11105                           intcon3	equ	0xFF0
 11106                           postinc0	equ	0xFEE
 11107                           wreg	equ	0xFE8
 11108                           indf1	equ	0xFE7
 11109                           postdec1	equ	0xFE5
 11110                           plusw1	equ	0xFE3
 11111                           fsr1h	equ	0xFE2
 11112                           fsr1l	equ	0xFE1
 11113                           indf2	equ	0xFDF
 11114                           postinc2	equ	0xFDE
 11115                           postdec2	equ	0xFDD
 11116                           plusw2	equ	0xFDB
 11117                           fsr2h	equ	0xFDA
 11118                           fsr2l	equ	0xFD9
 11119                           status	equ	0xFD8
 11120                           
 11121 ;; *************** function __i2c_get *****************
 11122 ;; Defined at:
 11123 ;;		line 75 in file "i2c.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;		None
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      unsigned char 
 11130 ;; Registers used:
 11131 ;;		wreg, status,2
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;Total ram usage:        0 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; This function calls:
 11144 ;;		Nothing
 11145 ;; This function is called by:
 11146 ;;		__i2c_read
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text49
 11151  00A236                     __ptext49:
 11152                           	opt stack 0
 11153  00A236                     __i2c_get:
 11154                           	opt stack 27
 11155                           
 11156                           ;i2c.c: 77: SSP1CON2bits.RCEN = 1 ;
 11157                           
 11158                           ;incstack = 0
 11159  00A236  86C5               	bsf	4037,3,c	;volatile
 11160  00A238  B6C5               	btfsc	4037,3,c	;volatile
 11161  00A23A  D7FE               	goto	l1159
 11162                           
 11163                           ;i2c.c: 79: return SSP1BUF;
 11164  00A23C  50C9               	movf	4041,w,c	;volatile
 11165  00A23E  0012               	return	
 11166  00A240                     __end_of__i2c_get:
 11167                           	opt stack 0
 11168                           tblptru	equ	0xFF8
 11169                           tblptrh	equ	0xFF7
 11170                           tblptrl	equ	0xFF6
 11171                           tablat	equ	0xFF5
 11172                           prodh	equ	0xFF4
 11173                           prodl	equ	0xFF3
 11174                           intcon	equ	0xFF2
 11175                           intcon2	equ	0xFF1
 11176                           intcon3	equ	0xFF0
 11177                           postinc0	equ	0xFEE
 11178                           wreg	equ	0xFE8
 11179                           indf1	equ	0xFE7
 11180                           postdec1	equ	0xFE5
 11181                           plusw1	equ	0xFE3
 11182                           fsr1h	equ	0xFE2
 11183                           fsr1l	equ	0xFE1
 11184                           indf2	equ	0xFDF
 11185                           postinc2	equ	0xFDE
 11186                           postdec2	equ	0xFDD
 11187                           plusw2	equ	0xFDB
 11188                           fsr2h	equ	0xFDA
 11189                           fsr2l	equ	0xFD9
 11190                           status	equ	0xFD8
 11191                           
 11192 ;; *************** function __i2c_acknowledge *****************
 11193 ;; Defined at:
 11194 ;;		line 90 in file "i2c.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;		None
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;		None
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		None
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;Total ram usage:        0 bytes
 11213 ;; Hardware stack levels used:    1
 11214 ;; This function calls:
 11215 ;;		Nothing
 11216 ;; This function is called by:
 11217 ;;		__i2c_read
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           	psect	text50
 11222  00A240                     __ptext50:
 11223                           	opt stack 0
 11224  00A240                     __i2c_acknowledge:
 11225                           	opt stack 27
 11226                           
 11227                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 0;
 11228                           
 11229                           ;incstack = 0
 11230  00A240  9AC5               	bcf	4037,5,c	;volatile
 11231                           
 11232                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 11233  00A242  88C5               	bsf	4037,4,c	;volatile
 11234  00A244  A8C5               	btfss	4037,4,c	;volatile
 11235  00A246  0012               	return	
 11236  00A248  D7FD               	goto	l1171
 11237  00A24A                     __end_of__i2c_acknowledge:
 11238                           	opt stack 0
 11239                           tblptru	equ	0xFF8
 11240                           tblptrh	equ	0xFF7
 11241                           tblptrl	equ	0xFF6
 11242                           tablat	equ	0xFF5
 11243                           prodh	equ	0xFF4
 11244                           prodl	equ	0xFF3
 11245                           intcon	equ	0xFF2
 11246                           intcon2	equ	0xFF1
 11247                           intcon3	equ	0xFF0
 11248                           postinc0	equ	0xFEE
 11249                           wreg	equ	0xFE8
 11250                           indf1	equ	0xFE7
 11251                           postdec1	equ	0xFE5
 11252                           plusw1	equ	0xFE3
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           indf2	equ	0xFDF
 11256                           postinc2	equ	0xFDE
 11257                           postdec2	equ	0xFDD
 11258                           plusw2	equ	0xFDB
 11259                           fsr2h	equ	0xFDA
 11260                           fsr2l	equ	0xFD9
 11261                           status	equ	0xFD8
 11262                           
 11263 ;; *************** function _USBDeviceTasks *****************
 11264 ;; Defined at:
 11265 ;;		line 477 in file "usb_device.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;  i               1   31[COMRAM] unsigned char 
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11283 ;;Total ram usage:        1 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:    8
 11286 ;; This function calls:
 11287 ;;		_USBCtrlEPAllowStatusStage
 11288 ;;		_USBCtrlEPService
 11289 ;;		_USBDeviceInit
 11290 ;;		_USBIncrement1msInternalTimers
 11291 ;;		_USBStallHandler
 11292 ;;		_USBSuspend
 11293 ;;		_USBWakeFromSuspend
 11294 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11295 ;; This function is called by:
 11296 ;;		_main
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text51
 11301  003CBA                     __ptext51:
 11302                           	opt stack 0
 11303  003CBA                     _USBDeviceTasks:
 11304                           	opt stack 22
 11305                           
 11306                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 11307                           
 11308                           ; BSR set to: 0
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;usb_device.c: 543: return;
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 11315                           
 11316                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 11317                           
 11318                           ;usb_device.c: 511: UIE = 0;
 11319                           
 11320                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 11321                           
 11322                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 11323                           
 11324                           ;incstack = 0
 11325  003CBA  0100               	movlb	0	; () banked
 11326  003CBC  51F8               	movf	_USBDeviceState& (0+255),w,b
 11327  003CBE  A4D8               	btfss	status,2,c
 11328  003CC0  D012               	goto	l150
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 11332  003CC2  0E00               	movlw	0
 11333  003CC4  6E65               	movwf	3941,c	;volatile
 11334                           
 11335                           ;usb_device.c: 572: UIE = 0;
 11336  003CC6  0E00               	movlw	0
 11337  003CC8  010F               	movlb	15	; () banked
 11338  003CCA  6F36               	movwf	54,b	;volatile
 11339                           
 11340                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11341  003CCC  0E16               	movlw	22
 11342  003CCE  6F39               	movwf	57,b	;volatile
 11343  003CD0  0E9F               	movlw	159
 11344  003CD2  6F37               	movwf	55,b	;volatile
 11345  003CD4  0E7B               	movlw	123
 11346  003CD6  6F36               	movwf	54,b	;volatile
 11347                           
 11348                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 11349  003CD8  D001               	goto	l151
 11350  003CDA                     l152:
 11351  003CDA  8665               	bsf	3941,3,c	;volatile
 11352  003CDC                     l151:
 11353  003CDC  A665               	btfss	3941,3,c	;volatile
 11354  003CDE  D7FD               	goto	l152
 11355                           
 11356                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11357  003CE0  0E01               	movlw	1
 11358  003CE2  0100               	movlb	0	; () banked
 11359  003CE4  6FF8               	movwf	_USBDeviceState& (0+255),b
 11360  003CE6                     l150:
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11364                           
 11365                           ; BSR set to: 0
 11366  003CE6  05F8               	decf	_USBDeviceState& (0+255),w,b
 11367  003CE8  B4D8               	btfsc	status,2,c
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11371  003CEA  BA65               	btfsc	3941,5,c	;volatile
 11372  003CEC  D00A               	goto	l155
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11376  003CEE  0E00               	movlw	0
 11377  003CF0  6E62               	movwf	3938,c	;volatile
 11378                           
 11379                           ;usb_device.c: 612: UIE=0;
 11380  003CF2  0E00               	movlw	0
 11381  003CF4  010F               	movlb	15	; () banked
 11382  003CF6  6F36               	movwf	54,b	;volatile
 11383                           
 11384                           ; BSR set to: 15
 11385                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11386  003CF8  8136               	bsf	54,0,b	;volatile
 11387                           
 11388                           ; BSR set to: 15
 11389                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11390  003CFA  8936               	bsf	54,4,b	;volatile
 11391                           
 11392                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11393  003CFC  0E02               	movlw	2
 11394  003CFE  0100               	movlb	0	; () banked
 11395  003D00  6FF8               	movwf	_USBDeviceState& (0+255),b
 11396  003D02                     l155:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11400                           
 11401                           ; BSR set to: 0
 11402                           
 11403                           ; BSR set to: 0
 11404  003D02  A462               	btfss	3938,2,c	;volatile
 11405  003D04  D006               	goto	l156
 11406                           
 11407                           ; BSR set to: 0
 11408  003D06  010F               	movlb	15	; () banked
 11409  003D08  A536               	btfss	54,2,b	;volatile
 11410  003D0A  D003               	goto	l156
 11411                           
 11412                           ; BSR set to: 15
 11413                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 11414  003D0C  9462               	bcf	3938,2,c	;volatile
 11415                           
 11416                           ; BSR set to: 15
 11417                           ;usb_device.c: 640: USBWakeFromSuspend();
 11418  003D0E  EC03  F04D         	call	_USBWakeFromSuspend	;wreg free
 11419  003D12                     l156:
 11420                           
 11421                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 11422  003D12  A265               	btfss	3941,1,c	;volatile
 11423  003D14  D002               	goto	l157
 11424                           
 11425                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 11426  003D16  98A1               	bcf	4001,4,c	;volatile
 11427                           
 11428                           ;usb_device.c: 650: return;
 11429  003D18  0012               	return	
 11430  003D1A                     l157:
 11431                           
 11432                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11433  003D1A  A062               	btfss	3938,0,c	;volatile
 11434  003D1C  D009               	goto	l158
 11435  003D1E  010F               	movlb	15	; () banked
 11436  003D20  A136               	btfss	54,0,b	;volatile
 11437  003D22  D006               	goto	l158
 11438                           
 11439                           ; BSR set to: 15
 11440                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 11441  003D24  ECC6  F026         	call	_USBDeviceInit	;wreg free
 11442                           
 11443                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11444  003D28  0E04               	movlw	4
 11445  003D2A  0100               	movlb	0	; () banked
 11446  003D2C  6FF8               	movwf	_USBDeviceState& (0+255),b
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;usb_device.c: 681: (UIR &= 0xFE);
 11450  003D2E  9062               	bcf	3938,0,c	;volatile
 11451  003D30                     l158:
 11452                           
 11453                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11454                           
 11455                           ; BSR set to: 0
 11456  003D30  A862               	btfss	3938,4,c	;volatile
 11457  003D32  D004               	goto	l159
 11458  003D34  010F               	movlb	15	; () banked
 11459  003D36  B936               	btfsc	54,4,b	;volatile
 11460                           
 11461                           ; BSR set to: 15
 11462                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11463  003D38  EC88  F04D         	call	_USBSuspend	;wreg free
 11464  003D3C                     l159:
 11465                           
 11466                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11467  003D3C  AC62               	btfss	3938,6,c	;volatile
 11468  003D3E  D01C               	goto	l163
 11469                           
 11470                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11471  003D40  010F               	movlb	15	; () banked
 11472  003D42  AD36               	btfss	54,6,b	;volatile
 11473  003D44  D00E               	goto	l161
 11474                           
 11475                           ; BSR set to: 15
 11476                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11477  003D46  0E00               	movlw	0
 11478  003D48  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11479  003D4A  0E73               	movlw	115
 11480  003D4C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11481  003D4E  0E00               	movlw	0
 11482  003D50  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11483  003D52  0E00               	movlw	0
 11484  003D54  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11485  003D56  0E00               	movlw	0
 11486  003D58  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11487  003D5A  0E01               	movlw	1
 11488  003D5C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11489  003D5E  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11490  003D62                     l161:
 11491                           
 11492                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11493  003D62  9C62               	bcf	3938,6,c	;volatile
 11494                           
 11495                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11496  003D64  EC6D  F04F         	call	_USBIncrement1msInternalTimers	;wreg free
 11497                           
 11498                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11499  003D68  0100               	movlb	0	; () banked
 11500  003D6A  51F1               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11501  003D6C  A4D8               	btfss	status,2,c
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11505  003D6E  07F1               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11509                           
 11510                           ; BSR set to: 0
 11511  003D70  51F1               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11512  003D72  B4D8               	btfsc	status,2,c
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11516  003D74  ECCF  F037         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11517  003D78                     l163:
 11518                           
 11519                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11520  003D78  AA62               	btfss	3938,5,c	;volatile
 11521  003D7A  D004               	goto	l164
 11522  003D7C  010F               	movlb	15	; () banked
 11523  003D7E  BB36               	btfsc	54,5,b	;volatile
 11524                           
 11525                           ; BSR set to: 15
 11526                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11527  003D80  ECC7  F04B         	call	_USBStallHandler	;wreg free
 11528  003D84                     l164:
 11529                           
 11530                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11531  003D84  A262               	btfss	3938,1,c	;volatile
 11532  003D86  D012               	goto	l165
 11533  003D88  010F               	movlb	15	; () banked
 11534  003D8A  A336               	btfss	54,1,b	;volatile
 11535  003D8C  D00F               	goto	l165
 11536                           
 11537                           ; BSR set to: 15
 11538                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11539  003D8E  0E7F               	movlw	127
 11540  003D90  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11541  003D92  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11542  003D94  0E00               	movlw	0
 11543  003D96  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11544  003D98  0E00               	movlw	0
 11545  003D9A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11546  003D9C  0E00               	movlw	0
 11547  003D9E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11548  003DA0  0E01               	movlw	1
 11549  003DA2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11550  003DA4  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11551                           
 11552                           ;usb_device.c: 759: {UEIR = 0;};
 11553  003DA8  0E00               	movlw	0
 11554  003DAA  6E63               	movwf	3939,c	;volatile
 11555  003DAC                     l165:
 11556                           
 11557                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11558  003DAC  0E04               	movlw	4
 11559  003DAE  0100               	movlb	0	; () banked
 11560  003DB0  61F8               	cpfslt	_USBDeviceState& (0+255),b
 11561  003DB2  D002               	goto	l166
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11565  003DB4  98A1               	bcf	4001,4,c	;volatile
 11566                           
 11567                           ;usb_device.c: 777: return;
 11568  003DB6  0012               	return	
 11569  003DB8                     l166:
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11573  003DB8  010F               	movlb	15	; () banked
 11574  003DBA  A736               	btfss	54,3,b	;volatile
 11575  003DBC  D03C               	goto	u14190
 11576                           
 11577                           ; BSR set to: 15
 11578                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11579  003DBE  0E00               	movlw	0
 11580  003DC0  6E20               	movwf	USBDeviceTasks@i,c
 11581  003DC2                     l16516:
 11582                           
 11583                           ; BSR set to: 15
 11584  003DC2  0E03               	movlw	3
 11585  003DC4  6420               	cpfsgt	USBDeviceTasks@i,c
 11586  003DC6  D001               	goto	l168
 11587  003DC8  D036               	goto	u14190
 11588  003DCA                     l168:
 11589                           
 11590                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11591  003DCA  A662               	btfss	3938,3,c	;volatile
 11592  003DCC  D034               	goto	u14190
 11593                           
 11594                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11595  003DCE  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11596                           
 11597                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11598  003DD2  0100               	movlb	0	; () banked
 11599  003DD4  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11600  003DD6  32E8               	rrcf	wreg,f,c
 11601  003DD8  32E8               	rrcf	wreg,f,c
 11602  003DDA  0B0F               	andlw	15
 11603  003DDC  6FF3               	movwf	_endpoint_number& (0+255),b
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;usb_device.c: 793: (UIR &= 0xF7);
 11607  003DDE  9662               	bcf	3938,3,c	;volatile
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11611  003DE0  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11612  003DE2  D007               	goto	l171
 11613                           
 11614                           ; BSR set to: 0
 11615                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11616  003DE4  51F3               	movf	_endpoint_number& (0+255),w,b
 11617  003DE6  0D01               	mullw	1
 11618  003DE8  0E6E               	movlw	low _ep_data_out
 11619  003DEA  24F3               	addwf	prodl,w,c
 11620  003DEC  6ED9               	movwf	fsr2l,c
 11621  003DEE  0E01               	movlw	high _ep_data_out
 11622  003DF0  D007               	goto	L5
 11623  003DF2                     l171:
 11624                           
 11625                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11626                           
 11627                           ; BSR set to: 1
 11628  003DF2  0100               	movlb	0	; () banked
 11629  003DF4  51F3               	movf	_endpoint_number& (0+255),w,b
 11630  003DF6  0D01               	mullw	1
 11631  003DF8  0E71               	movlw	low _ep_data_in
 11632  003DFA  24F3               	addwf	prodl,w,c
 11633  003DFC  6ED9               	movwf	fsr2l,c
 11634  003DFE  0E01               	movlw	high _ep_data_in
 11635  003E00                     L5:
 11636  003E00  20F4               	addwfc	prodh,w,c
 11637  003E02  6EDA               	movwf	fsr2h,c
 11638  003E04  0101               	movlb	1	; () banked
 11639  003E06  70DF               	btg	indf2,0,c
 11640                           
 11641                           ; BSR set to: 1
 11642                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11643                           
 11644                           ; BSR set to: 1
 11645  003E08  0100               	movlb	0	; () banked
 11646  003E0A  51F3               	movf	_endpoint_number& (0+255),w,b
 11647  003E0C  A4D8               	btfss	status,2,c
 11648  003E0E  D003               	goto	l173
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11652  003E10  EC5E  F03D         	call	_USBCtrlEPService	;wreg free
 11653                           
 11654                           ;usb_device.c: 813: }
 11655  003E14  D00E               	goto	l175
 11656  003E16                     l173:
 11657                           
 11658                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11659  003E16  0E00               	movlw	0
 11660  003E18  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11661  003E1A  0E72               	movlw	114
 11662  003E1C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11663  003E1E  0EFD               	movlw	low _USTATcopy
 11664  003E20  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11665  003E22  0E00               	movlw	high _USTATcopy
 11666  003E24  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11667  003E26  0E00               	movlw	0
 11668  003E28  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11669  003E2A  0E00               	movlw	0
 11670  003E2C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11671  003E2E  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11672  003E32                     l175:
 11673  003E32  2A20               	incf	USBDeviceTasks@i,f,c
 11674  003E34  D7C6               	goto	l16516
 11675  003E36                     u14190:
 11676                           
 11677                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11678  003E36  98A1               	bcf	4001,4,c	;volatile
 11679  003E38  0012               	return		;funcret
 11680  003E3A                     __end_of_USBDeviceTasks:
 11681                           	opt stack 0
 11682                           tblptru	equ	0xFF8
 11683                           tblptrh	equ	0xFF7
 11684                           tblptrl	equ	0xFF6
 11685                           tablat	equ	0xFF5
 11686                           prodh	equ	0xFF4
 11687                           prodl	equ	0xFF3
 11688                           intcon	equ	0xFF2
 11689                           intcon2	equ	0xFF1
 11690                           intcon3	equ	0xFF0
 11691                           postinc0	equ	0xFEE
 11692                           wreg	equ	0xFE8
 11693                           indf1	equ	0xFE7
 11694                           postdec1	equ	0xFE5
 11695                           plusw1	equ	0xFE3
 11696                           fsr1h	equ	0xFE2
 11697                           fsr1l	equ	0xFE1
 11698                           indf2	equ	0xFDF
 11699                           postinc2	equ	0xFDE
 11700                           postdec2	equ	0xFDD
 11701                           plusw2	equ	0xFDB
 11702                           fsr2h	equ	0xFDA
 11703                           fsr2l	equ	0xFD9
 11704                           status	equ	0xFD8
 11705                           
 11706 ;; *************** function _USBWakeFromSuspend *****************
 11707 ;; Defined at:
 11708 ;;		line 2305 in file "usb_device.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;		None
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11726 ;;Total ram usage:        0 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:    4
 11729 ;; This function calls:
 11730 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11731 ;; This function is called by:
 11732 ;;		_USBDeviceTasks
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text52
 11737  009A06                     __ptext52:
 11738                           	opt stack 0
 11739  009A06                     _USBWakeFromSuspend:
 11740                           	opt stack 25
 11741                           
 11742                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11743                           
 11744                           ;incstack = 0
 11745  009A06  0E00               	movlw	0
 11746  009A08  0100               	movlb	0	; () banked
 11747  009A0A  6FF4               	movwf	_USBBusIsSuspended& (0+255),b
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11751  009A0C  0E00               	movlw	0
 11752  009A0E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11753  009A10  0E74               	movlw	116
 11754  009A12  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11755  009A14  0E00               	movlw	0
 11756  009A16  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11757  009A18  0E00               	movlw	0
 11758  009A1A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11759  009A1C  0E00               	movlw	0
 11760  009A1E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11761  009A20  0E00               	movlw	0
 11762  009A22  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11763  009A24  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11764                           
 11765                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11766  009A28  9265               	bcf	3941,1,c	;volatile
 11767                           
 11768                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11769  009A2A  010F               	movlb	15	; () banked
 11770  009A2C  9536               	bcf	54,2,b	;volatile
 11771                           
 11772                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11773  009A2E  D001               	goto	l303
 11774  009A30                     
 11775                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11776                           
 11777                           ; BSR set to: 15
 11778  009A30  9462               	bcf	3938,2,c	;volatile
 11779  009A32                     l303:
 11780  009A32  B462               	btfsc	3938,2,c	;volatile
 11781  009A34  D7FD               	goto	l304
 11782                           
 11783                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11784  009A36  0E00               	movlw	0
 11785  009A38  0101               	movlb	1	; () banked
 11786  009A3A  6F92               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11787                           
 11788                           ; BSR set to: 1
 11789  009A3C  0012               	return		;funcret
 11790  009A3E                     __end_of_USBWakeFromSuspend:
 11791                           	opt stack 0
 11792                           tblptru	equ	0xFF8
 11793                           tblptrh	equ	0xFF7
 11794                           tblptrl	equ	0xFF6
 11795                           tablat	equ	0xFF5
 11796                           prodh	equ	0xFF4
 11797                           prodl	equ	0xFF3
 11798                           intcon	equ	0xFF2
 11799                           intcon2	equ	0xFF1
 11800                           intcon3	equ	0xFF0
 11801                           postinc0	equ	0xFEE
 11802                           wreg	equ	0xFE8
 11803                           indf1	equ	0xFE7
 11804                           postdec1	equ	0xFE5
 11805                           plusw1	equ	0xFE3
 11806                           fsr1h	equ	0xFE2
 11807                           fsr1l	equ	0xFE1
 11808                           indf2	equ	0xFDF
 11809                           postinc2	equ	0xFDE
 11810                           postdec2	equ	0xFDD
 11811                           plusw2	equ	0xFDB
 11812                           fsr2h	equ	0xFDA
 11813                           fsr2l	equ	0xFD9
 11814                           status	equ	0xFD8
 11815                           
 11816 ;; *************** function _USBSuspend *****************
 11817 ;; Defined at:
 11818 ;;		line 2247 in file "usb_device.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;		None
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;		None
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  1    wreg      void 
 11825 ;; Registers used:
 11826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11836 ;;Total ram usage:        0 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; Hardware stack levels required when called:    4
 11839 ;; This function calls:
 11840 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11841 ;; This function is called by:
 11842 ;;		_USBDeviceTasks
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text53
 11847  009B10                     __ptext53:
 11848                           	opt stack 0
 11849  009B10                     _USBSuspend:
 11850                           	opt stack 25
 11851                           
 11852                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11853                           
 11854                           ; BSR set to: 1
 11855                           ;incstack = 0
 11856  009B10  010F               	movlb	15	; () banked
 11857  009B12  8536               	bsf	54,2,b	;volatile
 11858                           
 11859                           ; BSR set to: 15
 11860                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11861  009B14  9862               	bcf	3938,4,c	;volatile
 11862                           
 11863                           ; BSR set to: 15
 11864                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11865  009B16  8265               	bsf	3941,1,c	;volatile
 11866                           
 11867                           ; BSR set to: 15
 11868                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11869  009B18  0E01               	movlw	1
 11870  009B1A  0100               	movlb	0	; () banked
 11871  009B1C  6FF4               	movwf	_USBBusIsSuspended& (0+255),b
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11875  009B1E  0E00               	movlw	0
 11876  009B20  0101               	movlb	1	; () banked
 11877  009B22  6F92               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11878                           
 11879                           ; BSR set to: 1
 11880                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11881  009B24  0E00               	movlw	0
 11882  009B26  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11883  009B28  0E75               	movlw	117
 11884  009B2A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11885  009B2C  0E00               	movlw	0
 11886  009B2E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11887  009B30  0E00               	movlw	0
 11888  009B32  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11889  009B34  0E00               	movlw	0
 11890  009B36  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11891  009B38  0E00               	movlw	0
 11892  009B3A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11893  009B3C  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11894  009B40  0012               	return		;funcret
 11895  009B42                     __end_of_USBSuspend:
 11896                           	opt stack 0
 11897                           tblptru	equ	0xFF8
 11898                           tblptrh	equ	0xFF7
 11899                           tblptrl	equ	0xFF6
 11900                           tablat	equ	0xFF5
 11901                           prodh	equ	0xFF4
 11902                           prodl	equ	0xFF3
 11903                           intcon	equ	0xFF2
 11904                           intcon2	equ	0xFF1
 11905                           intcon3	equ	0xFF0
 11906                           postinc0	equ	0xFEE
 11907                           wreg	equ	0xFE8
 11908                           indf1	equ	0xFE7
 11909                           postdec1	equ	0xFE5
 11910                           plusw1	equ	0xFE3
 11911                           fsr1h	equ	0xFE2
 11912                           fsr1l	equ	0xFE1
 11913                           indf2	equ	0xFDF
 11914                           postinc2	equ	0xFDE
 11915                           postdec2	equ	0xFDD
 11916                           plusw2	equ	0xFDB
 11917                           fsr2h	equ	0xFDA
 11918                           fsr2l	equ	0xFD9
 11919                           status	equ	0xFD8
 11920                           
 11921 ;; *************** function _USBStallHandler *****************
 11922 ;; Defined at:
 11923 ;;		line 2204 in file "usb_device.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;		None
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;		None
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  1    wreg      void 
 11930 ;; Registers used:
 11931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11941 ;;Total ram usage:        1 bytes
 11942 ;; Hardware stack levels used:    1
 11943 ;; This function calls:
 11944 ;;		Nothing
 11945 ;; This function is called by:
 11946 ;;		_USBDeviceTasks
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           	psect	text54
 11951  00978E                     __ptext54:
 11952                           	opt stack 0
 11953  00978E                     _USBStallHandler:
 11954                           	opt stack 29
 11955                           
 11956                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11957                           
 11958                           ;incstack = 0
 11959  00978E  010F               	movlb	15	; () banked
 11960  009790  A126               	btfss	38,0,b	;volatile
 11961  009792  D01D               	goto	l295
 11962                           
 11963                           ; BSR set to: 15
 11964                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11965  009794  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11966  009798  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11967  00979C  0E80               	movlw	128
 11968  00979E  18DE               	xorwf	postinc2,w,c
 11969  0097A0  A4D8               	btfss	status,2,c
 11970  0097A2  D014               	goto	l296
 11971                           
 11972                           ; BSR set to: 15
 11973  0097A4  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 11974  0097A8  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11975  0097AC  0E84               	movlw	132
 11976  0097AE  18DE               	xorwf	postinc2,w,c
 11977  0097B0  A4D8               	btfss	status,2,c
 11978  0097B2  D00C               	goto	l296
 11979                           
 11980                           ; BSR set to: 15
 11981                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11982  0097B4  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11983  0097B8  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11984  0097BC  0E0C               	movlw	12
 11985  0097BE  6EDF               	movwf	indf2,c
 11986                           
 11987                           ; BSR set to: 15
 11988                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11989  0097C0  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11990  0097C4  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11991  0097C8  0E00               	movlw	0
 11992  0097CA  8EDB               	bsf	plusw2,7,c
 11993  0097CC                     l296:
 11994                           
 11995                           ; BSR set to: 15
 11996                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11997                           
 11998                           ; BSR set to: 15
 11999  0097CC  9126               	bcf	38,0,b	;volatile
 12000  0097CE                     l295:
 12001                           
 12002                           ; BSR set to: 15
 12003                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 12004  0097CE  9A62               	bcf	3938,5,c	;volatile
 12005                           
 12006                           ; BSR set to: 15
 12007  0097D0  0012               	return		;funcret
 12008  0097D2                     __end_of_USBStallHandler:
 12009                           	opt stack 0
 12010                           tblptru	equ	0xFF8
 12011                           tblptrh	equ	0xFF7
 12012                           tblptrl	equ	0xFF6
 12013                           tablat	equ	0xFF5
 12014                           prodh	equ	0xFF4
 12015                           prodl	equ	0xFF3
 12016                           intcon	equ	0xFF2
 12017                           intcon2	equ	0xFF1
 12018                           intcon3	equ	0xFF0
 12019                           postinc0	equ	0xFEE
 12020                           wreg	equ	0xFE8
 12021                           indf1	equ	0xFE7
 12022                           postdec1	equ	0xFE5
 12023                           plusw1	equ	0xFE3
 12024                           fsr1h	equ	0xFE2
 12025                           fsr1l	equ	0xFE1
 12026                           indf2	equ	0xFDF
 12027                           postinc2	equ	0xFDE
 12028                           postdec2	equ	0xFDD
 12029                           plusw2	equ	0xFDB
 12030                           fsr2h	equ	0xFDA
 12031                           fsr2l	equ	0xFD9
 12032                           status	equ	0xFD8
 12033                           
 12034 ;; *************** function _USBIncrement1msInternalTimers *****************
 12035 ;; Defined at:
 12036 ;;		line 3027 in file "usb_device.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;		None
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  1    wreg      void 
 12043 ;; Registers used:
 12044 ;;		wreg, status,2, status,0
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12054 ;;Total ram usage:        0 bytes
 12055 ;; Hardware stack levels used:    1
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_USBDeviceTasks
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text55
 12064  009EDA                     __ptext55:
 12065                           	opt stack 0
 12066  009EDA                     _USBIncrement1msInternalTimers:
 12067                           	opt stack 29
 12068                           
 12069                           ;usb_device.c: 3035: USB1msTickCount++;
 12070                           
 12071                           ; BSR set to: 15
 12072                           ;incstack = 0
 12073  009EDA  0E01               	movlw	1
 12074  009EDC  0101               	movlb	1	; () banked
 12075  009EDE  2764               	addwf	_USB1msTickCount& (0+255),f,b
 12076  009EE0  0E00               	movlw	0
 12077  009EE2  2365               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 12078  009EE4  2366               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 12079  009EE6  2367               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 12080                           
 12081                           ; BSR set to: 1
 12082                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 12083  009EE8  0100               	movlb	0	; () banked
 12084  009EEA  51F4               	movf	_USBBusIsSuspended& (0+255),w,b
 12085  009EEC  A4D8               	btfss	status,2,c
 12086  009EEE  0012               	return	
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 12090  009EF0  0101               	movlb	1	; () banked
 12091  009EF2  2B92               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 12092                           
 12093                           ; BSR set to: 1
 12094                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 12095  009EF4  5192               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 12096  009EF6  A4D8               	btfss	status,2,c
 12097  009EF8  0012               	return	
 12098                           
 12099                           ; BSR set to: 1
 12100                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 12101  009EFA  6992               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 12102                           
 12103                           ; BSR set to: 1
 12104  009EFC  0012               	return	
 12105  009EFE                     __end_of_USBIncrement1msInternalTimers:
 12106                           	opt stack 0
 12107                           tblptru	equ	0xFF8
 12108                           tblptrh	equ	0xFF7
 12109                           tblptrl	equ	0xFF6
 12110                           tablat	equ	0xFF5
 12111                           prodh	equ	0xFF4
 12112                           prodl	equ	0xFF3
 12113                           intcon	equ	0xFF2
 12114                           intcon2	equ	0xFF1
 12115                           intcon3	equ	0xFF0
 12116                           postinc0	equ	0xFEE
 12117                           wreg	equ	0xFE8
 12118                           indf1	equ	0xFE7
 12119                           postdec1	equ	0xFE5
 12120                           plusw1	equ	0xFE3
 12121                           fsr1h	equ	0xFE2
 12122                           fsr1l	equ	0xFE1
 12123                           indf2	equ	0xFDF
 12124                           postinc2	equ	0xFDE
 12125                           postdec2	equ	0xFDD
 12126                           plusw2	equ	0xFDB
 12127                           fsr2h	equ	0xFDA
 12128                           fsr2l	equ	0xFD9
 12129                           status	equ	0xFD8
 12130                           
 12131 ;; *************** function _USBDeviceInit *****************
 12132 ;; Defined at:
 12133 ;;		line 277 in file "usb_device.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;		None
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;  i               1    8[COMRAM] unsigned char 
 12138 ;; Return value:  Size  Location     Type
 12139 ;;                  1    wreg      void 
 12140 ;; Registers used:
 12141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12142 ;; Tracked objects:
 12143 ;;		On entry : 0/0
 12144 ;;		On exit  : 0/0
 12145 ;;		Unchanged: 0/0
 12146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12151 ;;Total ram usage:        1 bytes
 12152 ;; Hardware stack levels used:    1
 12153 ;; Hardware stack levels required when called:    1
 12154 ;; This function calls:
 12155 ;;		_memset
 12156 ;; This function is called by:
 12157 ;;		_USBDeviceTasks
 12158 ;;		_main
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text56
 12163  004D8C                     __ptext56:
 12164                           	opt stack 0
 12165  004D8C                     _USBDeviceInit:
 12166                           	opt stack 28
 12167                           
 12168                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 12169                           
 12170                           ;incstack = 0
 12171  004D8C  98A0               	bcf	4000,4,c	;volatile
 12172                           
 12173                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 12174  004D8E  0E00               	movlw	0
 12175  004D90  6E63               	movwf	3939,c	;volatile
 12176                           
 12177                           ;usb_device.c: 291: {UIR = 0;};
 12178  004D92  0E00               	movlw	0
 12179  004D94  6E62               	movwf	3938,c	;volatile
 12180                           
 12181                           ;usb_device.c: 294: UEP0 = 0;
 12182  004D96  0E00               	movlw	0
 12183  004D98  010F               	movlb	15	; () banked
 12184  004D9A  6F26               	movwf	38,b	;volatile
 12185                           
 12186                           ; BSR set to: 15
 12187                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 12188  004D9C  0E27               	movlw	39
 12189  004D9E  6E01               	movwf	memset@p1,c
 12190  004DA0  0E0F               	movlw	15
 12191  004DA2  6E02               	movwf	memset@p1+1,c
 12192  004DA4  0E00               	movlw	0
 12193  004DA6  6E04               	movwf	memset@c+1,c
 12194  004DA8  0E00               	movlw	0
 12195  004DAA  6E03               	movwf	memset@c,c
 12196  004DAC  0E00               	movlw	0
 12197  004DAE  6E06               	movwf	memset@n+1,c
 12198  004DB0  0E02               	movlw	2
 12199  004DB2  6E05               	movwf	memset@n,c
 12200  004DB4  EC8F  F04E         	call	_memset	;wreg free
 12201                           
 12202                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12203  004DB8  0E16               	movlw	22
 12204  004DBA  010F               	movlb	15	; () banked
 12205  004DBC  6F39               	movwf	57,b	;volatile
 12206                           
 12207                           ; BSR set to: 15
 12208  004DBE  0E9F               	movlw	159
 12209  004DC0  6F37               	movwf	55,b	;volatile
 12210                           
 12211                           ; BSR set to: 15
 12212  004DC2  0E7B               	movlw	123
 12213  004DC4  6F36               	movwf	54,b	;volatile
 12214                           
 12215                           ; BSR set to: 15
 12216                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 12217  004DC6  0E00               	movlw	0
 12218  004DC8  6E09               	movwf	USBDeviceInit@i,c
 12219  004DCA                     l15762:
 12220                           
 12221                           ; BSR set to: 15
 12222  004DCA  0E0B               	movlw	11
 12223  004DCC  6409               	cpfsgt	USBDeviceInit@i,c
 12224  004DCE  D001               	goto	l139
 12225  004DD0  D00E               	goto	u13210
 12226  004DD2                     l139:
 12227                           
 12228                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 12229                           
 12230                           ; BSR set to: 15
 12231  004DD2  5009               	movf	USBDeviceInit@i,w,c
 12232  004DD4  0D04               	mullw	4
 12233  004DD6  0E00               	movlw	0
 12234  004DD8  24F3               	addwf	prodl,w,c
 12235  004DDA  6ED9               	movwf	fsr2l,c
 12236  004DDC  0E0D               	movlw	13
 12237  004DDE  20F4               	addwfc	prodh,w,c
 12238  004DE0  6EDA               	movwf	fsr2h,c
 12239  004DE2  6ADE               	clrf	postinc2,c
 12240  004DE4  6ADE               	clrf	postinc2,c
 12241  004DE6  6ADE               	clrf	postinc2,c
 12242  004DE8  6ADD               	clrf	postdec2,c
 12243  004DEA  2A09               	incf	USBDeviceInit@i,f,c
 12244  004DEC  D7EE               	goto	l15762
 12245  004DEE                     u13210:
 12246                           
 12247                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 12248  004DEE  8C65               	bsf	3941,6,c	;volatile
 12249                           
 12250                           ;usb_device.c: 316: UADDR = 0x00;
 12251  004DF0  0E00               	movlw	0
 12252  004DF2  010F               	movlb	15	; () banked
 12253  004DF4  6F38               	movwf	56,b	;volatile
 12254                           
 12255                           ; BSR set to: 15
 12256                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 12257  004DF6  9865               	bcf	3941,4,c	;volatile
 12258                           
 12259                           ; BSR set to: 15
 12260                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 12261  004DF8  9C65               	bcf	3941,6,c	;volatile
 12262  004DFA                     
 12263                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 12264                           
 12265                           ; BSR set to: 15
 12266  004DFA  9662               	bcf	3938,3,c	;volatile
 12267                           
 12268                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 12269  004DFC  0E00               	movlw	0
 12270  004DFE  0100               	movlb	0	; () banked
 12271  004E00  6FC8               	movwf	(_inPipes+3)& (0+255),b
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 12275  004E02  0E00               	movlw	0
 12276  004E04  0101               	movlb	1	; () banked
 12277  004E06  6F41               	movwf	(_outPipes+3)& (0+255),b
 12278                           
 12279                           ; BSR set to: 1
 12280                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 12281  004E08  0E00               	movlw	0
 12282  004E0A  6F43               	movwf	(_outPipes+5)& (0+255),b
 12283  004E0C  0E00               	movlw	0
 12284  004E0E  6F42               	movwf	(_outPipes+4)& (0+255),b
 12285                           
 12286                           ; BSR set to: 1
 12287                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 12288  004E10  B662               	btfsc	3938,3,c	;volatile
 12289  004E12  D7F3               	goto	l141
 12290                           
 12291                           ; BSR set to: 1
 12292                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 12293                           
 12294                           ; BSR set to: 1
 12295  004E14  0E01               	movlw	1
 12296  004E16  0100               	movlb	0	; () banked
 12297  004E18  6FEF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12298                           
 12299                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 12300  004E1A  0E01               	movlw	1
 12301  004E1C  6FEE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12302                           
 12303                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 12304  004E1E  0E00               	movlw	0
 12305  004E20  6FED               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12306                           
 12307                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 12308  004E22  0E00               	movlw	0
 12309  004E24  6FEC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12310                           
 12311                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 12312  004E26  0E00               	movlw	0
 12313  004E28  6FF4               	movwf	_USBBusIsSuspended& (0+255),b
 12314                           
 12315                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 12316  004E2A  0E00               	movlw	0
 12317  004E2C  6E09               	movwf	USBDeviceInit@i,c
 12318  004E2E                     l15790:
 12319                           
 12320                           ; BSR set to: 0
 12321  004E2E  0E02               	movlw	2
 12322  004E30  6409               	cpfsgt	USBDeviceInit@i,c
 12323  004E32  D001               	goto	l143
 12324  004E34  D02E               	goto	u13240
 12325  004E36                     l143:
 12326                           
 12327                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 12328                           
 12329                           ; BSR set to: 0
 12330  004E36  5009               	movf	USBDeviceInit@i,w,c
 12331  004E38  0D02               	mullw	2
 12332  004E3A  0ECB               	movlw	low _pBDTEntryIn
 12333  004E3C  24F3               	addwf	prodl,w,c
 12334  004E3E  6ED9               	movwf	fsr2l,c
 12335  004E40  0E00               	movlw	high _pBDTEntryIn
 12336  004E42  20F4               	addwfc	prodh,w,c
 12337  004E44  6EDA               	movwf	fsr2h,c
 12338  004E46  0E00               	movlw	0
 12339  004E48  6EDE               	movwf	postinc2,c
 12340  004E4A  0E00               	movlw	0
 12341  004E4C  6EDD               	movwf	postdec2,c
 12342                           
 12343                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 12344  004E4E  5009               	movf	USBDeviceInit@i,w,c
 12345  004E50  0D02               	mullw	2
 12346  004E52  0E46               	movlw	low _pBDTEntryOut
 12347  004E54  24F3               	addwf	prodl,w,c
 12348  004E56  6ED9               	movwf	fsr2l,c
 12349  004E58  0E01               	movlw	high _pBDTEntryOut
 12350  004E5A  20F4               	addwfc	prodh,w,c
 12351  004E5C  6EDA               	movwf	fsr2h,c
 12352  004E5E  0E00               	movlw	0
 12353  004E60  6EDE               	movwf	postinc2,c
 12354  004E62  0E00               	movlw	0
 12355  004E64  6EDD               	movwf	postdec2,c
 12356                           
 12357                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12358  004E66  5009               	movf	USBDeviceInit@i,w,c
 12359  004E68  0D01               	mullw	1
 12360  004E6A  0E71               	movlw	low _ep_data_in
 12361  004E6C  24F3               	addwf	prodl,w,c
 12362  004E6E  6ED9               	movwf	fsr2l,c
 12363  004E70  0E01               	movlw	high _ep_data_in
 12364  004E72  20F4               	addwfc	prodh,w,c
 12365  004E74  6EDA               	movwf	fsr2h,c
 12366  004E76  0E00               	movlw	0
 12367  004E78  6EDF               	movwf	indf2,c
 12368                           
 12369                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12370  004E7A  5009               	movf	USBDeviceInit@i,w,c
 12371  004E7C  0D01               	mullw	1
 12372  004E7E  0E6E               	movlw	low _ep_data_out
 12373  004E80  24F3               	addwf	prodl,w,c
 12374  004E82  6ED9               	movwf	fsr2l,c
 12375  004E84  0E01               	movlw	high _ep_data_out
 12376  004E86  20F4               	addwfc	prodh,w,c
 12377  004E88  6EDA               	movwf	fsr2h,c
 12378  004E8A  0E00               	movlw	0
 12379  004E8C  6EDF               	movwf	indf2,c
 12380  004E8E  2A09               	incf	USBDeviceInit@i,f,c
 12381  004E90  D7CE               	goto	l15790
 12382  004E92                     u13240:
 12383                           
 12384                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12385  004E92  0E08               	movlw	8
 12386  004E94  0100               	movlb	0	; () banked
 12387  004E96  6FCB               	movwf	_pBDTEntryIn& (0+255),b
 12388  004E98  0E0D               	movlw	13
 12389  004E9A  6FCC               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12393  004E9C  0E16               	movlw	22
 12394  004E9E  010F               	movlb	15	; () banked
 12395  004EA0  6F26               	movwf	38,b	;volatile
 12396                           
 12397                           ; BSR set to: 15
 12398                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12399  004EA2  0E0D               	movlw	13
 12400  004EA4  010D               	movlb	13	; () banked
 12401  004EA6  6F03               	movwf	3,b	;volatile
 12402  004EA8  0E30               	movlw	48
 12403  004EAA  6F02               	movwf	2,b	;volatile
 12404                           
 12405                           ; BSR set to: 13
 12406                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12407  004EAC  0E08               	movlw	8
 12408  004EAE  6F01               	movwf	1,b	;volatile
 12409                           
 12410                           ; BSR set to: 13
 12411                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12412  004EB0  0E04               	movlw	4
 12413  004EB2  6F00               	movwf	0,b	;volatile
 12414                           
 12415                           ; BSR set to: 13
 12416                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12417  004EB4  8F00               	bsf	0,7,b	;volatile
 12418                           
 12419                           ; BSR set to: 13
 12420                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12421  004EB6  0E00               	movlw	0
 12422  004EB8  0100               	movlb	0	; () banked
 12423  004EBA  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;usb_device.c: 366: USB1msTickCount = 0;
 12427  004EBC  0E00               	movlw	0
 12428  004EBE  0101               	movlb	1	; () banked
 12429  004EC0  6F64               	movwf	_USB1msTickCount& (0+255),b
 12430  004EC2  0E00               	movlw	0
 12431  004EC4  6F65               	movwf	(_USB1msTickCount+1)& (0+255),b
 12432  004EC6  0E00               	movlw	0
 12433  004EC8  6F66               	movwf	(_USB1msTickCount+2)& (0+255),b
 12434  004ECA  0E00               	movlw	0
 12435  004ECC  6F67               	movwf	(_USB1msTickCount+3)& (0+255),b
 12436                           
 12437                           ; BSR set to: 1
 12438                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12439  004ECE  0E00               	movlw	0
 12440  004ED0  6F92               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12441                           
 12442                           ; BSR set to: 1
 12443                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12444  004ED2  0E00               	movlw	0
 12445  004ED4  0100               	movlb	0	; () banked
 12446  004ED6  6FF8               	movwf	_USBDeviceState& (0+255),b
 12447                           
 12448                           ; BSR set to: 0
 12449  004ED8  0012               	return		;funcret
 12450  004EDA                     __end_of_USBDeviceInit:
 12451                           	opt stack 0
 12452                           tblptru	equ	0xFF8
 12453                           tblptrh	equ	0xFF7
 12454                           tblptrl	equ	0xFF6
 12455                           tablat	equ	0xFF5
 12456                           prodh	equ	0xFF4
 12457                           prodl	equ	0xFF3
 12458                           intcon	equ	0xFF2
 12459                           intcon2	equ	0xFF1
 12460                           intcon3	equ	0xFF0
 12461                           postinc0	equ	0xFEE
 12462                           wreg	equ	0xFE8
 12463                           indf1	equ	0xFE7
 12464                           postdec1	equ	0xFE5
 12465                           plusw1	equ	0xFE3
 12466                           fsr1h	equ	0xFE2
 12467                           fsr1l	equ	0xFE1
 12468                           indf2	equ	0xFDF
 12469                           postinc2	equ	0xFDE
 12470                           postdec2	equ	0xFDD
 12471                           plusw2	equ	0xFDB
 12472                           fsr2h	equ	0xFDA
 12473                           fsr2l	equ	0xFD9
 12474                           status	equ	0xFD8
 12475                           
 12476 ;; *************** function _USBCtrlEPService *****************
 12477 ;; Defined at:
 12478 ;;		line 2374 in file "usb_device.c"
 12479 ;; Parameters:    Size  Location     Type
 12480 ;;		None
 12481 ;; Auto vars:     Size  Location     Type
 12482 ;;		None
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      void 
 12485 ;; Registers used:
 12486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12487 ;; Tracked objects:
 12488 ;;		On entry : 0/0
 12489 ;;		On exit  : 0/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12496 ;;Total ram usage:        2 bytes
 12497 ;; Hardware stack levels used:    1
 12498 ;; Hardware stack levels required when called:    7
 12499 ;; This function calls:
 12500 ;;		_USBCtrlTrfInHandler
 12501 ;;		_USBCtrlTrfOutHandler
 12502 ;;		_USBCtrlTrfSetupHandler
 12503 ;;		_memcpy
 12504 ;; This function is called by:
 12505 ;;		_USBDeviceTasks
 12506 ;; This function uses a non-reentrant model
 12507 ;;
 12508                           
 12509                           	psect	text57
 12510  007ABC                     __ptext57:
 12511                           	opt stack 0
 12512  007ABC                     _USBCtrlEPService:
 12513                           	opt stack 22
 12514                           
 12515                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;incstack = 0
 12519  007ABC  0E2D               	movlw	45
 12520  007ABE  0100               	movlb	0	; () banked
 12521  007AC0  6FF1               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12525  007AC2  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12526  007AC6  0EFD               	movlw	253
 12527  007AC8  161E               	andwf	??_USBCtrlEPService,f,c
 12528  007ACA  A4D8               	btfss	status,2,c
 12529  007ACC  D044               	goto	l309
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12533  007ACE  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12534  007AD2  90D8               	bcf	status,0,c
 12535  007AD4  321E               	rrcf	??_USBCtrlEPService,f,c
 12536  007AD6  0E3F               	movlw	63
 12537  007AD8  161E               	andwf	??_USBCtrlEPService,f,c
 12538  007ADA  501E               	movf	??_USBCtrlEPService,w,c
 12539  007ADC  0D04               	mullw	4
 12540  007ADE  0E00               	movlw	0
 12541  007AE0  24F3               	addwf	prodl,w,c
 12542  007AE2  6FE1               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12543  007AE4  0E0D               	movlw	13
 12544  007AE6  20F4               	addwfc	prodh,w,c
 12545  007AE8  6FE2               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12549  007AEA  C0E1  F0DF         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12550  007AEE  C0E2  F0E0         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12551                           
 12552                           ; BSR set to: 0
 12553                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12554  007AF2  0E04               	movlw	4
 12555  007AF4  19DF               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12556  007AF6  6FDF               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12557  007AF8  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12558  007AFA  6FE0               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12562  007AFC  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12563  007B00  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12564  007B04  30DF               	rrcf	223,w,c
 12565  007B06  32E8               	rrcf	wreg,f,c
 12566  007B08  0B0F               	andlw	15
 12567  007B0A  0A0D               	xorlw	13
 12568  007B0C  A4D8               	btfss	status,2,c
 12569  007B0E  D020               	goto	l310
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12573  007B10  0E30               	movlw	48
 12574  007B12  6E01               	movwf	memcpy@d1,c
 12575  007B14  0E0D               	movlw	13
 12576  007B16  6E02               	movwf	memcpy@d1+1,c
 12577  007B18  EE20 F002          	lfsr	2,2
 12578  007B1C  51E1               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12579  007B1E  26D9               	addwf	fsr2l,f,c
 12580  007B20  51E2               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12581  007B22  22DA               	addwfc	fsr2h,f,c
 12582  007B24  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12583  007B28  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12584  007B2C  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12585  007B30  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12586  007B34  5003               	movf	memcpy@s1,w,c
 12587  007B36  1004               	iorwf	memcpy@s1+1,w,c
 12588  007B38  A4D8               	btfss	status,2,c
 12589  007B3A  0E20               	movlw	32
 12590  007B3C  6E05               	movwf	memcpy@s1+2,c
 12591  007B3E  0E00               	movlw	0
 12592  007B40  6E07               	movwf	memcpy@n+1,c
 12593  007B42  0E08               	movlw	8
 12594  007B44  6E06               	movwf	memcpy@n,c
 12595  007B46  EC92  F046         	call	_memcpy	;wreg free
 12596                           
 12597                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12598  007B4A  EC13  F042         	call	_USBCtrlTrfSetupHandler	;wreg free
 12599                           
 12600                           ;usb_device.c: 2411: }
 12601  007B4E  0012               	return	
 12602  007B50                     l310:
 12603                           
 12604                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12605  007B50  EC88  F047         	call	_USBCtrlTrfOutHandler	;wreg free
 12606                           
 12607                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12608  007B54  0012               	return	
 12609  007B56                     l309:
 12610                           
 12611                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12612  007B56  0100               	movlb	0	; () banked
 12613  007B58  51FD               	movf	_USTATcopy& (0+255),w,b
 12614  007B5A  0BFD               	andlw	253
 12615  007B5C  0A04               	xorlw	4
 12616  007B5E  A4D8               	btfss	status,2,c
 12617  007B60  0012               	return	
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12621  007B62  ECA6  F036         	call	_USBCtrlTrfInHandler	;wreg free
 12622  007B66  0012               	return	
 12623  007B68                     __end_of_USBCtrlEPService:
 12624                           	opt stack 0
 12625                           tblptru	equ	0xFF8
 12626                           tblptrh	equ	0xFF7
 12627                           tblptrl	equ	0xFF6
 12628                           tablat	equ	0xFF5
 12629                           prodh	equ	0xFF4
 12630                           prodl	equ	0xFF3
 12631                           intcon	equ	0xFF2
 12632                           intcon2	equ	0xFF1
 12633                           intcon3	equ	0xFF0
 12634                           postinc0	equ	0xFEE
 12635                           wreg	equ	0xFE8
 12636                           indf1	equ	0xFE7
 12637                           postdec1	equ	0xFE5
 12638                           plusw1	equ	0xFE3
 12639                           fsr1h	equ	0xFE2
 12640                           fsr1l	equ	0xFE1
 12641                           indf2	equ	0xFDF
 12642                           postinc2	equ	0xFDE
 12643                           postdec2	equ	0xFDD
 12644                           plusw2	equ	0xFDB
 12645                           fsr2h	equ	0xFDA
 12646                           fsr2l	equ	0xFD9
 12647                           status	equ	0xFD8
 12648                           
 12649 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12650 ;; Defined at:
 12651 ;;		line 2467 in file "usb_device.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;		None
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;		None
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      void 
 12658 ;; Registers used:
 12659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12669 ;;Total ram usage:        0 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:    6
 12672 ;; This function calls:
 12673 ;;		_USBCheckStdRequest
 12674 ;;		_USBCtrlEPServiceComplete
 12675 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12676 ;; This function is called by:
 12677 ;;		_USBCtrlEPService
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text58
 12682  008426                     __ptext58:
 12683                           	opt stack 0
 12684  008426                     _USBCtrlTrfSetupHandler:
 12685                           	opt stack 22
 12686                           
 12687                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12688                           
 12689                           ;incstack = 0
 12690  008426  0E00               	movlw	0
 12691  008428  0100               	movlb	0	; () banked
 12692  00842A  6FF7               	movwf	_shortPacketStatus& (0+255),b
 12693                           
 12694                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12695  00842C  0E00               	movlw	0
 12696  00842E  6FF0               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12697                           
 12698                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12699  008430  0E00               	movlw	0
 12700  008432  6FED               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12701                           
 12702                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12703  008434  0E00               	movlw	0
 12704  008436  6FEC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12705                           
 12706                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12707  008438  0E00               	movlw	0
 12708  00843A  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12709                           
 12710                           ;usb_device.c: 2477: controlTransferState = 0;
 12711  00843C  0E00               	movlw	0
 12712  00843E  6FF6               	movwf	_controlTransferState& (0+255),b
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12716  008440  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12717  008444  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12718  008448  0E7F               	movlw	127
 12719  00844A  16DF               	andwf	indf2,f,c
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12723  00844C  0E04               	movlw	4
 12724  00844E  19CB               	xorwf	_pBDTEntryIn& (0+255),w,b
 12725  008450  6FCB               	movwf	_pBDTEntryIn& (0+255),b
 12726  008452  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12727  008454  6FCC               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12731  008456  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12732  00845A  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12733  00845E  0E7F               	movlw	127
 12734  008460  16DF               	andwf	indf2,f,c
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12738  008462  0E04               	movlw	4
 12739  008464  19CB               	xorwf	_pBDTEntryIn& (0+255),w,b
 12740  008466  6FCB               	movwf	_pBDTEntryIn& (0+255),b
 12741  008468  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12742  00846A  6FCC               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12746  00846C  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12747  008470  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12748  008474  0E7F               	movlw	127
 12749  008476  16DF               	andwf	indf2,f,c
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12753  008478  0E00               	movlw	0
 12754  00847A  6FC8               	movwf	(_inPipes+3)& (0+255),b
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12758  00847C  0E00               	movlw	0
 12759  00847E  6FCA               	movwf	(_inPipes+5)& (0+255),b
 12760  008480  0E00               	movlw	0
 12761  008482  6FC9               	movwf	(_inPipes+4)& (0+255),b
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12765  008484  0E00               	movlw	0
 12766  008486  0101               	movlb	1	; () banked
 12767  008488  6F41               	movwf	(_outPipes+3)& (0+255),b
 12768                           
 12769                           ; BSR set to: 1
 12770                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12771  00848A  0E00               	movlw	0
 12772  00848C  6F43               	movwf	(_outPipes+5)& (0+255),b
 12773  00848E  0E00               	movlw	0
 12774  008490  6F42               	movwf	(_outPipes+4)& (0+255),b
 12775                           
 12776                           ; BSR set to: 1
 12777                           ;usb_device.c: 2502: USBCheckStdRequest();
 12778  008492  ECE4  F031         	call	_USBCheckStdRequest	;wreg free
 12779                           
 12780                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12781  008496  0E00               	movlw	0
 12782  008498  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12783  00849A  0E03               	movlw	3
 12784  00849C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12785  00849E  0E00               	movlw	0
 12786  0084A0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12787  0084A2  0E00               	movlw	0
 12788  0084A4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12789  0084A6  0E00               	movlw	0
 12790  0084A8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12791  0084AA  0E00               	movlw	0
 12792  0084AC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12793  0084AE  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12794                           
 12795                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12796  0084B2  ECFD  F02D         	call	_USBCtrlEPServiceComplete	;wreg free
 12797  0084B6  0012               	return		;funcret
 12798  0084B8                     __end_of_USBCtrlTrfSetupHandler:
 12799                           	opt stack 0
 12800                           tblptru	equ	0xFF8
 12801                           tblptrh	equ	0xFF7
 12802                           tblptrl	equ	0xFF6
 12803                           tablat	equ	0xFF5
 12804                           prodh	equ	0xFF4
 12805                           prodl	equ	0xFF3
 12806                           intcon	equ	0xFF2
 12807                           intcon2	equ	0xFF1
 12808                           intcon3	equ	0xFF0
 12809                           postinc0	equ	0xFEE
 12810                           wreg	equ	0xFE8
 12811                           indf1	equ	0xFE7
 12812                           postdec1	equ	0xFE5
 12813                           plusw1	equ	0xFE3
 12814                           fsr1h	equ	0xFE2
 12815                           fsr1l	equ	0xFE1
 12816                           indf2	equ	0xFDF
 12817                           postinc2	equ	0xFDE
 12818                           postdec2	equ	0xFDD
 12819                           plusw2	equ	0xFDB
 12820                           fsr2h	equ	0xFDA
 12821                           fsr2l	equ	0xFD9
 12822                           status	equ	0xFD8
 12823                           
 12824 ;; *************** function _USBCtrlEPServiceComplete *****************
 12825 ;; Defined at:
 12826 ;;		line 1618 in file "usb_device.c"
 12827 ;; Parameters:    Size  Location     Type
 12828 ;;		None
 12829 ;; Auto vars:     Size  Location     Type
 12830 ;;		None
 12831 ;; Return value:  Size  Location     Type
 12832 ;;                  1    wreg      void 
 12833 ;; Registers used:
 12834 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12835 ;; Tracked objects:
 12836 ;;		On entry : 0/0
 12837 ;;		On exit  : 0/0
 12838 ;;		Unchanged: 0/0
 12839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;Total ram usage:        0 bytes
 12845 ;; Hardware stack levels used:    1
 12846 ;; Hardware stack levels required when called:    2
 12847 ;; This function calls:
 12848 ;;		_USBCtrlEPAllowDataStage
 12849 ;;		_USBCtrlEPAllowStatusStage
 12850 ;; This function is called by:
 12851 ;;		_USBCtrlTrfSetupHandler
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text59
 12856  005BFA                     __ptext59:
 12857                           	opt stack 0
 12858  005BFA                     _USBCtrlEPServiceComplete:
 12859                           	opt stack 25
 12860                           
 12861                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12862                           
 12863                           ;incstack = 0
 12864  005BFA  9865               	bcf	3941,4,c	;volatile
 12865                           
 12866                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12867  005BFC  0100               	movlb	0	; () banked
 12868  005BFE  BFC8               	btfsc	(_inPipes+3)& (0+255),7,b
 12869  005C00  D03C               	goto	l219
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12873  005C02  0101               	movlb	1	; () banked
 12874  005C04  AF41               	btfss	(_outPipes+3)& (0+255),7,b
 12875  005C06  D00D               	goto	l220
 12876                           
 12877                           ; BSR set to: 1
 12878                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12879  005C08  0E02               	movlw	2
 12880  005C0A  0100               	movlb	0	; () banked
 12881  005C0C  6FF6               	movwf	_controlTransferState& (0+255),b
 12882                           
 12883                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12884  005C0E  51EC               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12885  005C10  B4D8               	btfsc	status,2,c
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12889  005C12  ECF5  F03F         	call	_USBCtrlEPAllowDataStage	;wreg free
 12890                           
 12891                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12892  005C16  0E00               	movlw	0
 12893  005C18  0100               	movlb	0	; () banked
 12894  005C1A  6FEE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12898  005C1C  0E00               	movlw	0
 12899  005C1E  6FEF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12900                           
 12901                           ;usb_device.c: 1654: }
 12902  005C20  0012               	return	
 12903  005C22                     l220:
 12904                           
 12905                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12906                           
 12907                           ; BSR set to: 0
 12908  005C22  0100               	movlb	0	; () banked
 12909  005C24  EE20 F001          	lfsr	2,1
 12910  005C28  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12911  005C2A  26D9               	addwf	fsr2l,f,c
 12912  005C2C  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12913  005C2E  22DA               	addwfc	fsr2h,f,c
 12914  005C30  0E08               	movlw	8
 12915  005C32  6EDF               	movwf	indf2,c
 12916                           
 12917                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12918  005C34  EE20 F002          	lfsr	2,2
 12919  005C38  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12920  005C3A  26D9               	addwf	fsr2l,f,c
 12921  005C3C  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12922  005C3E  22DA               	addwfc	fsr2h,f,c
 12923  005C40  0E30               	movlw	48
 12924  005C42  6EDE               	movwf	postinc2,c
 12925  005C44  0E0D               	movlw	13
 12926  005C46  6EDD               	movwf	postdec2,c
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12930  005C48  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12931  005C4C  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12932  005C50  0E0C               	movlw	12
 12933  005C52  6EDF               	movwf	indf2,c
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12937  005C54  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12938  005C58  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12939  005C5C  0E00               	movlw	0
 12940  005C5E  8EDB               	bsf	plusw2,7,c
 12941                           
 12942                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12943  005C60  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12944  005C64  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12945  005C68  0E04               	movlw	4
 12946  005C6A  6EDF               	movwf	indf2,c
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12950  005C6C  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 12951  005C70  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12952  005C74  0E00               	movlw	0
 12953  005C76  8EDB               	bsf	plusw2,7,c
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12957  005C78  0012               	return	
 12958  005C7A                     l219:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12962  005C7A  010D               	movlb	13	; () banked
 12963  005C7C  AF30               	btfss	48,7,b	;volatile
 12964  005C7E  D012               	goto	l224
 12965                           
 12966                           ; BSR set to: 13
 12967                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12968  005C80  0E01               	movlw	1
 12969  005C82  0100               	movlb	0	; () banked
 12970  005C84  6FF6               	movwf	_controlTransferState& (0+255),b
 12971                           
 12972                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12973  005C86  51ED               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12974  005C88  B4D8               	btfsc	status,2,c
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12978  005C8A  ECF5  F03F         	call	_USBCtrlEPAllowDataStage	;wreg free
 12979                           
 12980                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12981  005C8E  0E00               	movlw	0
 12982  005C90  0100               	movlb	0	; () banked
 12983  005C92  6FEE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12987  005C94  0E00               	movlw	0
 12988  005C96  6FEF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12992  005C98  51F0               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12993  005C9A  A4D8               	btfss	status,2,c
 12994  005C9C  0012               	return	
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12998  005C9E  ECCF  F037         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12999                           
 13000                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 13001  005CA2  0012               	return	
 13002  005CA4                     l224:
 13003                           
 13004                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 13005  005CA4  0E02               	movlw	2
 13006  005CA6  0100               	movlb	0	; () banked
 13007  005CA8  6FF6               	movwf	_controlTransferState& (0+255),b
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 13011  005CAA  EE20 F001          	lfsr	2,1
 13012  005CAE  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13013  005CB0  26D9               	addwf	fsr2l,f,c
 13014  005CB2  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13015  005CB4  22DA               	addwfc	fsr2h,f,c
 13016  005CB6  0E08               	movlw	8
 13017  005CB8  6EDF               	movwf	indf2,c
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13021  005CBA  EE20 F002          	lfsr	2,2
 13022  005CBE  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13023  005CC0  26D9               	addwf	fsr2l,f,c
 13024  005CC2  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13025  005CC4  22DA               	addwfc	fsr2h,f,c
 13026  005CC6  0E30               	movlw	48
 13027  005CC8  6EDE               	movwf	postinc2,c
 13028  005CCA  0E0D               	movlw	13
 13029  005CCC  6EDD               	movwf	postdec2,c
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13033  005CCE  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13034  005CD2  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13035  005CD6  0E04               	movlw	4
 13036  005CD8  6EDF               	movwf	indf2,c
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13040  005CDA  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13041  005CDE  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13042  005CE2  0E00               	movlw	0
 13043  005CE4  8EDB               	bsf	plusw2,7,c
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 13047  005CE6  0E00               	movlw	0
 13048  005CE8  6FEE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 13052  005CEA  0E00               	movlw	0
 13053  005CEC  6FEF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 13057  005CEE  51F0               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13058  005CF0  A4D8               	btfss	status,2,c
 13059  005CF2  0012               	return	
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 13063  005CF4  ECCF  F037         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13064  005CF8  0012               	return	
 13065  005CFA                     __end_of_USBCtrlEPServiceComplete:
 13066                           	opt stack 0
 13067                           tblptru	equ	0xFF8
 13068                           tblptrh	equ	0xFF7
 13069                           tblptrl	equ	0xFF6
 13070                           tablat	equ	0xFF5
 13071                           prodh	equ	0xFF4
 13072                           prodl	equ	0xFF3
 13073                           intcon	equ	0xFF2
 13074                           intcon2	equ	0xFF1
 13075                           intcon3	equ	0xFF0
 13076                           postinc0	equ	0xFEE
 13077                           wreg	equ	0xFE8
 13078                           indf1	equ	0xFE7
 13079                           postdec1	equ	0xFE5
 13080                           plusw1	equ	0xFE3
 13081                           fsr1h	equ	0xFE2
 13082                           fsr1l	equ	0xFE1
 13083                           indf2	equ	0xFDF
 13084                           postinc2	equ	0xFDE
 13085                           postdec2	equ	0xFDD
 13086                           plusw2	equ	0xFDB
 13087                           fsr2h	equ	0xFDA
 13088                           fsr2l	equ	0xFD9
 13089                           status	equ	0xFD8
 13090                           
 13091 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13092 ;; Defined at:
 13093 ;;		line 1490 in file "usb_device.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;		None
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;		None
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  1    wreg      void 
 13100 ;; Registers used:
 13101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13111 ;;Total ram usage:        0 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    1
 13114 ;; This function calls:
 13115 ;;		_USBCtrlTrfTxService
 13116 ;; This function is called by:
 13117 ;;		_USBCtrlEPServiceComplete
 13118 ;; This function uses a non-reentrant model
 13119 ;;
 13120                           
 13121                           	psect	text60
 13122  007FEA                     __ptext60:
 13123                           	opt stack 0
 13124  007FEA                     _USBCtrlEPAllowDataStage:
 13125                           	opt stack 25
 13126                           
 13127                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 13128                           
 13129                           ;incstack = 0
 13130  007FEA  0E00               	movlw	0
 13131  007FEC  0100               	movlb	0	; () banked
 13132  007FEE  6FED               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13133                           
 13134                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 13135  007FF0  0E00               	movlw	0
 13136  007FF2  6FEC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;usb_device.c: 1495: if(controlTransferState == 2)
 13140  007FF4  0E02               	movlw	2
 13141  007FF6  19F6               	xorwf	_controlTransferState& (0+255),w,b
 13142  007FF8  A4D8               	btfss	status,2,c
 13143  007FFA  D01F               	goto	l208
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 13147  007FFC  EE20 F001          	lfsr	2,1
 13148  008000  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13149  008002  26D9               	addwf	fsr2l,f,c
 13150  008004  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13151  008006  22DA               	addwfc	fsr2h,f,c
 13152  008008  0E08               	movlw	8
 13153  00800A  6EDF               	movwf	indf2,c
 13154                           
 13155                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13156  00800C  EE20 F002          	lfsr	2,2
 13157  008010  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13158  008012  26D9               	addwf	fsr2l,f,c
 13159  008014  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13160  008016  22DA               	addwfc	fsr2h,f,c
 13161  008018  0E38               	movlw	56
 13162  00801A  6EDE               	movwf	postinc2,c
 13163  00801C  0E0D               	movlw	13
 13164  00801E  6EDD               	movwf	postdec2,c
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13168  008020  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13169  008024  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13170  008028  0E48               	movlw	72
 13171  00802A  6EDF               	movwf	indf2,c
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13175  00802C  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13176  008030  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13177  008034  0E00               	movlw	0
 13178  008036  8EDB               	bsf	plusw2,7,c
 13179                           
 13180                           ;usb_device.c: 1502: }
 13181  008038  0012               	return	
 13182  00803A                     l208:
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 13186                           
 13187                           ; BSR set to: 0
 13188  00803A  51C9               	movf	(_inPipes+4)& (0+255),w,b
 13189  00803C  010D               	movlb	13	; () banked
 13190  00803E  5D36               	subwf	54,w,b	;volatile
 13191  008040  0100               	movlb	0	; () banked
 13192  008042  51CA               	movf	(_inPipes+5)& (0+255),w,b
 13193  008044  010D               	movlb	13	; () banked
 13194  008046  5937               	subwfb	55,w,b	;volatile
 13195  008048  B0D8               	btfsc	status,0,c
 13196  00804A  D004               	goto	l210
 13197                           
 13198                           ; BSR set to: 13
 13199                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 13200  00804C  CD36 F0C9          	movff	3382,_inPipes+4	;volatile
 13201  008050  CD37 F0CA          	movff	3383,_inPipes+5	;volatile
 13202  008054                     l210:
 13203                           
 13204                           ; BSR set to: 13
 13205                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 13206                           
 13207                           ; BSR set to: 13
 13208  008054  ECD5  F035         	call	_USBCtrlTrfTxService	;wreg free
 13209                           
 13210                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13211  008058  0100               	movlb	0	; () banked
 13212  00805A  EE20 F002          	lfsr	2,2
 13213  00805E  51CB               	movf	_pBDTEntryIn& (0+255),w,b
 13214  008060  26D9               	addwf	fsr2l,f,c
 13215  008062  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13216  008064  22DA               	addwfc	fsr2h,f,c
 13217  008066  0E38               	movlw	56
 13218  008068  6EDE               	movwf	postinc2,c
 13219  00806A  0E0D               	movlw	13
 13220  00806C  6EDD               	movwf	postdec2,c
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13224  00806E  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 13225  008072  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13226  008076  0E48               	movlw	72
 13227  008078  6EDF               	movwf	indf2,c
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13231  00807A  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 13232  00807E  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13233  008082  0E00               	movlw	0
 13234  008084  8EDB               	bsf	plusw2,7,c
 13235  008086  0012               	return	
 13236  008088                     __end_of_USBCtrlEPAllowDataStage:
 13237                           	opt stack 0
 13238                           tblptru	equ	0xFF8
 13239                           tblptrh	equ	0xFF7
 13240                           tblptrl	equ	0xFF6
 13241                           tablat	equ	0xFF5
 13242                           prodh	equ	0xFF4
 13243                           prodl	equ	0xFF3
 13244                           intcon	equ	0xFF2
 13245                           intcon2	equ	0xFF1
 13246                           intcon3	equ	0xFF0
 13247                           postinc0	equ	0xFEE
 13248                           wreg	equ	0xFE8
 13249                           indf1	equ	0xFE7
 13250                           postdec1	equ	0xFE5
 13251                           plusw1	equ	0xFE3
 13252                           fsr1h	equ	0xFE2
 13253                           fsr1l	equ	0xFE1
 13254                           indf2	equ	0xFDF
 13255                           postinc2	equ	0xFDE
 13256                           postdec2	equ	0xFDD
 13257                           plusw2	equ	0xFDB
 13258                           fsr2h	equ	0xFDA
 13259                           fsr2l	equ	0xFD9
 13260                           status	equ	0xFD8
 13261                           
 13262 ;; *************** function _USBCheckStdRequest *****************
 13263 ;; Defined at:
 13264 ;;		line 2688 in file "usb_device.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13282 ;;Total ram usage:        0 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    5
 13285 ;; This function calls:
 13286 ;;		_USBStdFeatureReqHandler
 13287 ;;		_USBStdGetDscHandler
 13288 ;;		_USBStdGetStatusHandler
 13289 ;;		_USBStdSetCfgHandler
 13290 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13291 ;; This function is called by:
 13292 ;;		_USBCtrlTrfSetupHandler
 13293 ;; This function uses a non-reentrant model
 13294 ;;
 13295                           
 13296                           	psect	text61
 13297  0063C8                     __ptext61:
 13298                           	opt stack 0
 13299  0063C8                     _USBCheckStdRequest:
 13300                           	opt stack 22
 13301                           
 13302                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;incstack = 0
 13306  0063C8  010D               	movlb	13	; () banked
 13307  0063CA  3930               	swapf	48,w,b	;volatile
 13308  0063CC  32E8               	rrcf	wreg,f,c
 13309  0063CE  0B03               	andlw	3
 13310  0063D0  0900               	iorlw	0
 13311  0063D2  A4D8               	btfss	status,2,c
 13312  0063D4  0012               	return	
 13313  0063D6  D047               	goto	l343
 13314  0063D8                     l344:
 13315                           
 13316                           ; BSR set to: 13
 13317                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 13318  0063D8  0100               	movlb	0	; () banked
 13319  0063DA  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 13323  0063DC  0E08               	movlw	8
 13324  0063DE  6FF8               	movwf	_USBDeviceState& (0+255),b
 13325                           
 13326                           ;usb_device.c: 2698: break;
 13327  0063E0  0012               	return	
 13328  0063E2                     
 13329                           ;usb_device.c: 2700: USBStdGetDscHandler();
 13330                           
 13331                           ; BSR set to: 0
 13332  0063E2  EC14  F028         	call	_USBStdGetDscHandler	;wreg free
 13333                           
 13334                           ;usb_device.c: 2701: break;
 13335  0063E6  0012               	return	
 13336  0063E8                     
 13337                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 13338  0063E8  EC55  F032         	call	_USBStdSetCfgHandler	;wreg free
 13339                           
 13340                           ;usb_device.c: 2704: break;
 13341  0063EC  0012               	return	
 13342  0063EE                     
 13343                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13344  0063EE  0EFE               	movlw	low _USBActiveConfiguration
 13345  0063F0  0100               	movlb	0	; () banked
 13346  0063F2  6FC5               	movwf	_inPipes& (0+255),b
 13347  0063F4  0E00               	movlw	high _USBActiveConfiguration
 13348  0063F6  6FC6               	movwf	(_inPipes+1)& (0+255),b
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13352  0063F8  81C8               	bsf	(_inPipes+3)& (0+255),0,b
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13356  0063FA  0E01               	movlw	1
 13357  0063FC  6FC9               	movwf	(_inPipes+4)& (0+255),b
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13361  0063FE  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13362                           
 13363                           ;usb_device.c: 2710: break;
 13364  006400  0012               	return	
 13365  006402                     
 13366                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13367                           
 13368                           ; BSR set to: 0
 13369  006402  ECB4  F03D         	call	_USBStdGetStatusHandler	;wreg free
 13370                           
 13371                           ;usb_device.c: 2713: break;
 13372  006406  0012               	return	
 13373  006408                     
 13374                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13375  006408  ECD2  F00E         	call	_USBStdFeatureReqHandler	;wreg free
 13376                           
 13377                           ;usb_device.c: 2717: break;
 13378  00640C  0012               	return	
 13379  00640E                     
 13380                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13381  00640E  010D               	movlb	13	; () banked
 13382  006410  5134               	movf	52,w,b	;volatile
 13383  006412  0D01               	mullw	1
 13384  006414  0EAF               	movlw	low _USBAlternateInterface
 13385  006416  24F3               	addwf	prodl,w,c
 13386  006418  0100               	movlb	0	; () banked
 13387  00641A  6FC5               	movwf	_inPipes& (0+255),b
 13388  00641C  0E01               	movlw	high _USBAlternateInterface
 13389  00641E  20F4               	addwfc	prodh,w,c
 13390  006420  6FC6               	movwf	(_inPipes+1)& (0+255),b
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13394  006422  81C8               	bsf	(_inPipes+3)& (0+255),0,b
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13398  006424  0E01               	movlw	1
 13399  006426  6FC9               	movwf	(_inPipes+4)& (0+255),b
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13403  006428  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13404                           
 13405                           ;usb_device.c: 2723: break;
 13406  00642A  0012               	return	
 13407  00642C                     l353:
 13408                           
 13409                           ; BSR set to: 13
 13410                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13411  00642C  0100               	movlb	0	; () banked
 13412  00642E  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13416  006430  010D               	movlb	13	; () banked
 13417  006432  5134               	movf	52,w,b	;volatile
 13418  006434  0D01               	mullw	1
 13419  006436  0EAF               	movlw	low _USBAlternateInterface
 13420  006438  24F3               	addwf	prodl,w,c
 13421  00643A  6ED9               	movwf	fsr2l,c
 13422  00643C  0E01               	movlw	high _USBAlternateInterface
 13423  00643E  20F4               	addwfc	prodh,w,c
 13424  006440  6EDA               	movwf	fsr2h,c
 13425  006442  CD32 FFDF          	movff	3378,indf2	;volatile
 13426                           
 13427                           ;usb_device.c: 2727: break;
 13428  006446  0012               	return	
 13429  006448                     
 13430                           ; BSR set to: 13
 13431                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13432                           
 13433                           ; BSR set to: 13
 13434  006448  0E00               	movlw	0
 13435  00644A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13436  00644C  0E02               	movlw	2
 13437  00644E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13438  006450  0E00               	movlw	0
 13439  006452  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13440  006454  0E00               	movlw	0
 13441  006456  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13442  006458  0E00               	movlw	0
 13443  00645A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13444  00645C  0E00               	movlw	0
 13445  00645E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13446  006460  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13447                           
 13448                           ;usb_device.c: 2734: }
 13449                           
 13450                           ;usb_device.c: 2733: break;
 13451                           
 13452                           ;usb_device.c: 2732: default:
 13453                           
 13454                           ;usb_device.c: 2731: case 12:
 13455                           
 13456                           ;usb_device.c: 2730: break;
 13457  006464  0012               	return	
 13458  006466                     l343:
 13459  006466  010D               	movlb	13	; () banked
 13460  006468  5131               	movf	49,w,b	;volatile
 13461                           
 13462                           ; Switch size 1, requested type "space"
 13463                           ; Number of cases is 11, Range of values is 0 to 12
 13464                           ; switch strategies available:
 13465                           ; Name         Instructions Cycles
 13466                           ; simple_byte           34    18 (average)
 13467                           ;	Chosen strategy is simple_byte
 13468  00646A  0A00               	xorlw	0	; case 0
 13469  00646C  B4D8               	btfsc	status,2,c
 13470  00646E  D7C9               	goto	l349
 13471  006470  0A01               	xorlw	1	; case 1
 13472  006472  B4D8               	btfsc	status,2,c
 13473  006474  D7C9               	goto	l350
 13474  006476  0A02               	xorlw	2	; case 3
 13475  006478  B4D8               	btfsc	status,2,c
 13476  00647A  D7C6               	goto	l350
 13477  00647C  0A06               	xorlw	6	; case 5
 13478  00647E  B4D8               	btfsc	status,2,c
 13479  006480  D7AB               	goto	l344
 13480  006482  0A03               	xorlw	3	; case 6
 13481  006484  B4D8               	btfsc	status,2,c
 13482  006486  D7AD               	goto	l346
 13483  006488  0A01               	xorlw	1	; case 7
 13484  00648A  B4D8               	btfsc	status,2,c
 13485  00648C  D7DD               	goto	l354
 13486  00648E  0A0F               	xorlw	15	; case 8
 13487  006490  B4D8               	btfsc	status,2,c
 13488  006492  D7AD               	goto	l348
 13489  006494  0A01               	xorlw	1	; case 9
 13490  006496  B4D8               	btfsc	status,2,c
 13491  006498  D7A7               	goto	l347
 13492  00649A  0A03               	xorlw	3	; case 10
 13493  00649C  B4D8               	btfsc	status,2,c
 13494  00649E  D7B7               	goto	l352
 13495  0064A0  0A01               	xorlw	1	; case 11
 13496  0064A2  B4D8               	btfsc	status,2,c
 13497  0064A4  D7C3               	goto	l353
 13498  0064A6  0A07               	xorlw	7	; case 12
 13499  0064A8  0012               	return	
 13500  0064AA                     __end_of_USBCheckStdRequest:
 13501                           	opt stack 0
 13502                           tblptru	equ	0xFF8
 13503                           tblptrh	equ	0xFF7
 13504                           tblptrl	equ	0xFF6
 13505                           tablat	equ	0xFF5
 13506                           prodh	equ	0xFF4
 13507                           prodl	equ	0xFF3
 13508                           intcon	equ	0xFF2
 13509                           intcon2	equ	0xFF1
 13510                           intcon3	equ	0xFF0
 13511                           postinc0	equ	0xFEE
 13512                           wreg	equ	0xFE8
 13513                           indf1	equ	0xFE7
 13514                           postdec1	equ	0xFE5
 13515                           plusw1	equ	0xFE3
 13516                           fsr1h	equ	0xFE2
 13517                           fsr1l	equ	0xFE1
 13518                           indf2	equ	0xFDF
 13519                           postinc2	equ	0xFDE
 13520                           postdec2	equ	0xFDD
 13521                           plusw2	equ	0xFDB
 13522                           fsr2h	equ	0xFDA
 13523                           fsr2l	equ	0xFD9
 13524                           status	equ	0xFD8
 13525                           
 13526 ;; *************** function _USBStdSetCfgHandler *****************
 13527 ;; Defined at:
 13528 ;;		line 1970 in file "usb_device.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;		None
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;  i               1   23[COMRAM] unsigned char 
 13533 ;; Return value:  Size  Location     Type
 13534 ;;                  1    wreg      void 
 13535 ;; Registers used:
 13536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13537 ;; Tracked objects:
 13538 ;;		On entry : 0/0
 13539 ;;		On exit  : 0/0
 13540 ;;		Unchanged: 0/0
 13541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13546 ;;Total ram usage:        1 bytes
 13547 ;; Hardware stack levels used:    1
 13548 ;; Hardware stack levels required when called:    4
 13549 ;; This function calls:
 13550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13551 ;;		_memset
 13552 ;; This function is called by:
 13553 ;;		_USBCheckStdRequest
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557                           	psect	text62
 13558  0064AA                     __ptext62:
 13559                           	opt stack 0
 13560  0064AA                     _USBStdSetCfgHandler:
 13561                           	opt stack 22
 13562                           
 13563                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13564                           
 13565                           ;incstack = 0
 13566  0064AA  0100               	movlb	0	; () banked
 13567  0064AC  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13571  0064AE  0E27               	movlw	39
 13572  0064B0  6E01               	movwf	memset@p1,c
 13573  0064B2  0E0F               	movlw	15
 13574  0064B4  6E02               	movwf	memset@p1+1,c
 13575  0064B6  0E00               	movlw	0
 13576  0064B8  6E04               	movwf	memset@c+1,c
 13577  0064BA  0E00               	movlw	0
 13578  0064BC  6E03               	movwf	memset@c,c
 13579  0064BE  0E00               	movlw	0
 13580  0064C0  6E06               	movwf	memset@n+1,c
 13581  0064C2  0E02               	movlw	2
 13582  0064C4  6E05               	movwf	memset@n,c
 13583  0064C6  EC8F  F04E         	call	_memset	;wreg free
 13584                           
 13585                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13586  0064CA  0E00               	movlw	0
 13587  0064CC  6E01               	movwf	memset@p1,c
 13588  0064CE  0E0D               	movlw	13
 13589  0064D0  6E02               	movwf	memset@p1+1,c
 13590  0064D2  0E00               	movlw	0
 13591  0064D4  6E04               	movwf	memset@c+1,c
 13592  0064D6  0E00               	movlw	0
 13593  0064D8  6E03               	movwf	memset@c,c
 13594  0064DA  0E00               	movlw	0
 13595  0064DC  6E06               	movwf	memset@n+1,c
 13596  0064DE  0E30               	movlw	48
 13597  0064E0  6E05               	movwf	memset@n,c
 13598  0064E2  EC8F  F04E         	call	_memset	;wreg free
 13599                           
 13600                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13601  0064E6  8C65               	bsf	3941,6,c	;volatile
 13602                           
 13603                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13604  0064E8  0E00               	movlw	0
 13605  0064EA  6E18               	movwf	USBStdSetCfgHandler@i,c
 13606  0064EC                     l13538:
 13607  0064EC  0E02               	movlw	2
 13608  0064EE  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13609  0064F0  D001               	goto	l260
 13610  0064F2  D016               	goto	u10430
 13611  0064F4                     l260:
 13612                           
 13613                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13614  0064F4  5018               	movf	USBStdSetCfgHandler@i,w,c
 13615  0064F6  0D01               	mullw	1
 13616  0064F8  0E71               	movlw	low _ep_data_in
 13617  0064FA  24F3               	addwf	prodl,w,c
 13618  0064FC  6ED9               	movwf	fsr2l,c
 13619  0064FE  0E01               	movlw	high _ep_data_in
 13620  006500  20F4               	addwfc	prodh,w,c
 13621  006502  6EDA               	movwf	fsr2h,c
 13622  006504  0E00               	movlw	0
 13623  006506  6EDF               	movwf	indf2,c
 13624                           
 13625                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13626  006508  5018               	movf	USBStdSetCfgHandler@i,w,c
 13627  00650A  0D01               	mullw	1
 13628  00650C  0E6E               	movlw	low _ep_data_out
 13629  00650E  24F3               	addwf	prodl,w,c
 13630  006510  6ED9               	movwf	fsr2l,c
 13631  006512  0E01               	movlw	high _ep_data_out
 13632  006514  20F4               	addwfc	prodh,w,c
 13633  006516  6EDA               	movwf	fsr2h,c
 13634  006518  0E00               	movlw	0
 13635  00651A  6EDF               	movwf	indf2,c
 13636  00651C  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13637  00651E  D7E6               	goto	l13538
 13638  006520                     u10430:
 13639                           
 13640                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13641  006520  0EAF               	movlw	low _USBAlternateInterface
 13642  006522  6E01               	movwf	memset@p1,c
 13643  006524  0E01               	movlw	high _USBAlternateInterface
 13644  006526  6E02               	movwf	memset@p1+1,c
 13645  006528  0E00               	movlw	0
 13646  00652A  6E04               	movwf	memset@c+1,c
 13647  00652C  0E00               	movlw	0
 13648  00652E  6E03               	movwf	memset@c,c
 13649  006530  0E00               	movlw	0
 13650  006532  6E06               	movwf	memset@n+1,c
 13651  006534  0E02               	movlw	2
 13652  006536  6E05               	movwf	memset@n,c
 13653  006538  EC8F  F04E         	call	_memset	;wreg free
 13654                           
 13655                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13656  00653C  9C65               	bcf	3941,6,c	;volatile
 13657                           
 13658                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13659  00653E  0E08               	movlw	8
 13660  006540  0100               	movlb	0	; () banked
 13661  006542  6FCB               	movwf	_pBDTEntryIn& (0+255),b
 13662  006544  0E0D               	movlw	13
 13663  006546  6FCC               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13667  006548  0E00               	movlw	0
 13668  00654A  6FE1               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13669  00654C  0E0D               	movlw	13
 13670  00654E  6FE2               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13674  006550  C0E1  F0DF         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13675  006554  C0E2  F0E0         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13679  006558  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13683  00655C  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13684  00655E  A4D8               	btfss	status,2,c
 13685  006560  D003               	goto	l262
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13689  006562  0E10               	movlw	16
 13690  006564  6FF8               	movwf	_USBDeviceState& (0+255),b
 13691                           
 13692                           ;usb_device.c: 2015: }
 13693  006566  0012               	return	
 13694  006568                     l262:
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13698                           
 13699                           ; BSR set to: 0
 13700  006568  0E00               	movlw	0
 13701  00656A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13702  00656C  0E01               	movlw	1
 13703  00656E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13704  006570  0EFE               	movlw	low _USBActiveConfiguration
 13705  006572  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13706  006574  0E00               	movlw	high _USBActiveConfiguration
 13707  006576  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13708  006578  0E00               	movlw	0
 13709  00657A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13710  00657C  0E01               	movlw	1
 13711  00657E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13712  006580  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13713                           
 13714                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13715  006584  0E20               	movlw	32
 13716  006586  0100               	movlb	0	; () banked
 13717  006588  6FF8               	movwf	_USBDeviceState& (0+255),b
 13718  00658A  0012               	return	
 13719  00658C                     __end_of_USBStdSetCfgHandler:
 13720                           	opt stack 0
 13721                           tblptru	equ	0xFF8
 13722                           tblptrh	equ	0xFF7
 13723                           tblptrl	equ	0xFF6
 13724                           tablat	equ	0xFF5
 13725                           prodh	equ	0xFF4
 13726                           prodl	equ	0xFF3
 13727                           intcon	equ	0xFF2
 13728                           intcon2	equ	0xFF1
 13729                           intcon3	equ	0xFF0
 13730                           postinc0	equ	0xFEE
 13731                           wreg	equ	0xFE8
 13732                           indf1	equ	0xFE7
 13733                           postdec1	equ	0xFE5
 13734                           plusw1	equ	0xFE3
 13735                           fsr1h	equ	0xFE2
 13736                           fsr1l	equ	0xFE1
 13737                           indf2	equ	0xFDF
 13738                           postinc2	equ	0xFDE
 13739                           postdec2	equ	0xFDD
 13740                           plusw2	equ	0xFDB
 13741                           fsr2h	equ	0xFDA
 13742                           fsr2l	equ	0xFD9
 13743                           status	equ	0xFD8
 13744                           
 13745 ;; *************** function _memset *****************
 13746 ;; Defined at:
 13747 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;  p1              2    0[COMRAM] PTR void 
 13750 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13751 ;;  c               2    2[COMRAM] int 
 13752 ;;  n               2    4[COMRAM] unsigned int 
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;  p               2    6[COMRAM] PTR unsigned char 
 13755 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  2    0[COMRAM] PTR void 
 13758 ;; Registers used:
 13759 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13765 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13768 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;Total ram usage:        8 bytes
 13770 ;; Hardware stack levels used:    1
 13771 ;; This function calls:
 13772 ;;		Nothing
 13773 ;; This function is called by:
 13774 ;;		_USBDeviceInit
 13775 ;;		_USBStdSetCfgHandler
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779                           	psect	text63
 13780  009D1E                     __ptext63:
 13781                           	opt stack 0
 13782  009D1E                     _memset:
 13783                           	opt stack 28
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;incstack = 0
 13787  009D1E  C001  F007         	movff	memset@p1,memset@p
 13788  009D22  C002  F008         	movff	memset@p1+1,memset@p+1
 13789  009D26  D008               	goto	l3802
 13790  009D28                     l12118:
 13791  009D28  C007  FFD9         	movff	memset@p,fsr2l
 13792  009D2C  C008  FFDA         	movff	memset@p+1,fsr2h
 13793  009D30  C003  FFDF         	movff	memset@c,indf2
 13794  009D34  4A07               	infsnz	memset@p,f,c
 13795  009D36  2A08               	incf	memset@p+1,f,c
 13796  009D38                     l3802:
 13797  009D38  0605               	decf	memset@n,f,c
 13798  009D3A  A0D8               	btfss	status,0,c
 13799  009D3C  0606               	decf	memset@n+1,f,c
 13800  009D3E  2805               	incf	memset@n,w,c
 13801  009D40  E1F3               	bnz	l12118
 13802  009D42  2806               	incf	memset@n+1,w,c
 13803  009D44  B4D8               	btfsc	status,2,c
 13804  009D46  0012               	return	
 13805  009D48  D7EF               	goto	l3803
 13806  009D4A                     __end_of_memset:
 13807                           	opt stack 0
 13808                           tblptru	equ	0xFF8
 13809                           tblptrh	equ	0xFF7
 13810                           tblptrl	equ	0xFF6
 13811                           tablat	equ	0xFF5
 13812                           prodh	equ	0xFF4
 13813                           prodl	equ	0xFF3
 13814                           intcon	equ	0xFF2
 13815                           intcon2	equ	0xFF1
 13816                           intcon3	equ	0xFF0
 13817                           postinc0	equ	0xFEE
 13818                           wreg	equ	0xFE8
 13819                           indf1	equ	0xFE7
 13820                           postdec1	equ	0xFE5
 13821                           plusw1	equ	0xFE3
 13822                           fsr1h	equ	0xFE2
 13823                           fsr1l	equ	0xFE1
 13824                           indf2	equ	0xFDF
 13825                           postinc2	equ	0xFDE
 13826                           postdec2	equ	0xFDD
 13827                           plusw2	equ	0xFDB
 13828                           fsr2h	equ	0xFDA
 13829                           fsr2l	equ	0xFD9
 13830                           status	equ	0xFD8
 13831                           
 13832 ;; *************** function _USBStdGetStatusHandler *****************
 13833 ;; Defined at:
 13834 ;;		line 2131 in file "usb_device.c"
 13835 ;; Parameters:    Size  Location     Type
 13836 ;;		None
 13837 ;; Auto vars:     Size  Location     Type
 13838 ;;  p               2    1[COMRAM] PTR struct __BDT
 13839 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13840 ;; Return value:  Size  Location     Type
 13841 ;;                  1    wreg      void 
 13842 ;; Registers used:
 13843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13844 ;; Tracked objects:
 13845 ;;		On entry : 0/0
 13846 ;;		On exit  : 0/0
 13847 ;;		Unchanged: 0/0
 13848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13852 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13853 ;;Total ram usage:        3 bytes
 13854 ;; Hardware stack levels used:    1
 13855 ;; This function calls:
 13856 ;;		Nothing
 13857 ;; This function is called by:
 13858 ;;		_USBCheckStdRequest
 13859 ;; This function uses a non-reentrant model
 13860 ;;
 13861                           
 13862                           	psect	text64
 13863  007B68                     __ptext64:
 13864                           	opt stack 0
 13865  007B68                     _USBStdGetStatusHandler:
 13866                           	opt stack 26
 13867                           
 13868                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13869                           
 13870                           ;incstack = 0
 13871  007B68  0E00               	movlw	0
 13872  007B6A  010D               	movlb	13	; () banked
 13873  007B6C  6F38               	movwf	56,b	;volatile
 13874                           
 13875                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13876  007B6E  0E00               	movlw	0
 13877  007B70  6F39               	movwf	57,b	;volatile
 13878                           
 13879                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13880  007B72  D039               	goto	l281
 13881  007B74                     l282:
 13882                           
 13883                           ; BSR set to: 13
 13884                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13885  007B74  0100               	movlb	0	; () banked
 13886  007B76  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13887                           
 13888                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13889                           
 13890                           ; BSR set to: 13
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13894                           
 13895                           ;usb_device.c: 2144: if(0 == 1)
 13896  007B78  0100               	movlb	0	; () banked
 13897  007B7A  05F5               	decf	_RemoteWakeup& (0+255),w,b
 13898  007B7C  A4D8               	btfss	status,2,c
 13899  007B7E  D03E               	goto	l285
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13903  007B80  010D               	movlb	13	; () banked
 13904  007B82  8338               	bsf	56,1,b	;volatile
 13905                           
 13906                           ; BSR set to: 13
 13907                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13908  007B84  D03B               	goto	l285
 13909  007B86                     l286:
 13910                           
 13911                           ; BSR set to: 13
 13912                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13913  007B86  0100               	movlb	0	; () banked
 13914  007B88  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13915                           
 13916                           ;usb_device.c: 2156: break;
 13917  007B8A  D038               	goto	l285
 13918  007B8C                     l287:
 13919                           
 13920                           ; BSR set to: 13
 13921                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13922  007B8C  0100               	movlb	0	; () banked
 13923  007B8E  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 13924                           
 13925                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13926  007B90  010D               	movlb	13	; () banked
 13927  007B92  BF34               	btfsc	52,7,b	;volatile
 13928  007B94  D00A               	goto	l288
 13929                           
 13930                           ; BSR set to: 13
 13931                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13932  007B96  5134               	movf	52,w,b	;volatile
 13933  007B98  0B0F               	andlw	15
 13934  007B9A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13935  007B9C  5001               	movf	??_USBStdGetStatusHandler,w,c
 13936  007B9E  0D02               	mullw	2
 13937  007BA0  0E46               	movlw	low _pBDTEntryOut
 13938  007BA2  24F3               	addwf	prodl,w,c
 13939  007BA4  6ED9               	movwf	fsr2l,c
 13940  007BA6  0E01               	movlw	high _pBDTEntryOut
 13941  007BA8  D009               	goto	L6
 13942  007BAA                     l288:
 13943                           
 13944                           ; BSR set to: 13
 13945                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13946                           
 13947                           ; BSR set to: 13
 13948  007BAA  5134               	movf	52,w,b	;volatile
 13949  007BAC  0B0F               	andlw	15
 13950  007BAE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13951  007BB0  5001               	movf	??_USBStdGetStatusHandler,w,c
 13952  007BB2  0D02               	mullw	2
 13953  007BB4  0ECB               	movlw	low _pBDTEntryIn
 13954  007BB6  24F3               	addwf	prodl,w,c
 13955  007BB8  6ED9               	movwf	fsr2l,c
 13956  007BBA  0E00               	movlw	high _pBDTEntryIn
 13957  007BBC                     L6:
 13958  007BBC  20F4               	addwfc	prodh,w,c
 13959  007BBE  6EDA               	movwf	fsr2h,c
 13960  007BC0  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13961  007BC4  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13962                           
 13963                           ; BSR set to: 13
 13964                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13965                           
 13966                           ; BSR set to: 13
 13967  007BC8  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13968  007BCC  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13969  007BD0  AEDF               	btfss	indf2,7,c
 13970  007BD2  D014               	goto	l285
 13971                           
 13972                           ; BSR set to: 13
 13973  007BD4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13974  007BD8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13975  007BDC  A4DF               	btfss	indf2,2,c
 13976  007BDE  D00E               	goto	l285
 13977                           
 13978                           ; BSR set to: 13
 13979                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13980  007BE0  0E01               	movlw	1
 13981  007BE2  6F38               	movwf	56,b	;volatile
 13982                           
 13983                           ; BSR set to: 13
 13984                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13985                           
 13986                           ; BSR set to: 13
 13987                           ;usb_device.c: 2176: break;
 13988  007BE4  D00B               	goto	l285
 13989  007BE6                     l281:
 13990                           
 13991                           ; BSR set to: 13
 13992                           
 13993                           ; BSR set to: 13
 13994  007BE6  5130               	movf	48,w,b	;volatile
 13995  007BE8  0B1F               	andlw	31
 13996                           
 13997                           ; Switch size 1, requested type "space"
 13998                           ; Number of cases is 3, Range of values is 0 to 2
 13999                           ; switch strategies available:
 14000                           ; Name         Instructions Cycles
 14001                           ; simple_byte           10     6 (average)
 14002                           ;	Chosen strategy is simple_byte
 14003  007BEA  0A00               	xorlw	0	; case 0
 14004  007BEC  B4D8               	btfsc	status,2,c
 14005  007BEE  D7C2               	goto	l282
 14006  007BF0  0A01               	xorlw	1	; case 1
 14007  007BF2  B4D8               	btfsc	status,2,c
 14008  007BF4  D7C8               	goto	l286
 14009  007BF6  0A03               	xorlw	3	; case 2
 14010  007BF8  B4D8               	btfsc	status,2,c
 14011  007BFA  D7C8               	goto	l287
 14012  007BFC                     l285:
 14013                           
 14014                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 14015  007BFC  0100               	movlb	0	; () banked
 14016  007BFE  AFC8               	btfss	(_inPipes+3)& (0+255),7,b
 14017  007C00  0012               	return	
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 14021  007C02  0E38               	movlw	56
 14022  007C04  6FC5               	movwf	_inPipes& (0+255),b
 14023  007C06  0E0D               	movlw	13
 14024  007C08  6FC6               	movwf	(_inPipes+1)& (0+255),b
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14028  007C0A  81C8               	bsf	(_inPipes+3)& (0+255),0,b
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 14032  007C0C  0E02               	movlw	2
 14033  007C0E  6FC9               	movwf	(_inPipes+4)& (0+255),b
 14034  007C10  0012               	return	
 14035  007C12                     __end_of_USBStdGetStatusHandler:
 14036                           	opt stack 0
 14037                           tblptru	equ	0xFF8
 14038                           tblptrh	equ	0xFF7
 14039                           tblptrl	equ	0xFF6
 14040                           tablat	equ	0xFF5
 14041                           prodh	equ	0xFF4
 14042                           prodl	equ	0xFF3
 14043                           intcon	equ	0xFF2
 14044                           intcon2	equ	0xFF1
 14045                           intcon3	equ	0xFF0
 14046                           postinc0	equ	0xFEE
 14047                           wreg	equ	0xFE8
 14048                           indf1	equ	0xFE7
 14049                           postdec1	equ	0xFE5
 14050                           plusw1	equ	0xFE3
 14051                           fsr1h	equ	0xFE2
 14052                           fsr1l	equ	0xFE1
 14053                           indf2	equ	0xFDF
 14054                           postinc2	equ	0xFDE
 14055                           postdec2	equ	0xFDD
 14056                           plusw2	equ	0xFDB
 14057                           fsr2h	equ	0xFDA
 14058                           fsr2l	equ	0xFD9
 14059                           status	equ	0xFD8
 14060                           
 14061 ;; *************** function _USBStdGetDscHandler *****************
 14062 ;; Defined at:
 14063 ;;		line 2045 in file "usb_device.c"
 14064 ;; Parameters:    Size  Location     Type
 14065 ;;		None
 14066 ;; Auto vars:     Size  Location     Type
 14067 ;;		None
 14068 ;; Return value:  Size  Location     Type
 14069 ;;                  1    wreg      void 
 14070 ;; Registers used:
 14071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14072 ;; Tracked objects:
 14073 ;;		On entry : 0/0
 14074 ;;		On exit  : 0/0
 14075 ;;		Unchanged: 0/0
 14076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14081 ;;Total ram usage:        2 bytes
 14082 ;; Hardware stack levels used:    1
 14083 ;; This function calls:
 14084 ;;		Nothing
 14085 ;; This function is called by:
 14086 ;;		_USBCheckStdRequest
 14087 ;; This function uses a non-reentrant model
 14088 ;;
 14089                           
 14090                           	psect	text65
 14091  005028                     __ptext65:
 14092                           	opt stack 0
 14093  005028                     _USBStdGetDscHandler:
 14094                           	opt stack 26
 14095                           
 14096                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;incstack = 0
 14100  005028  0E80               	movlw	128
 14101  00502A  010D               	movlb	13	; () banked
 14102  00502C  1930               	xorwf	48,w,b	;volatile
 14103  00502E  A4D8               	btfss	status,2,c
 14104  005030  0012               	return	
 14105                           
 14106                           ; BSR set to: 13
 14107                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14108  005032  0EC0               	movlw	192
 14109  005034  0100               	movlb	0	; () banked
 14110  005036  6FC8               	movwf	(_inPipes+3)& (0+255),b
 14111                           
 14112                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 14113  005038  D088               	goto	l268
 14114  00503A                     
 14115                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14116                           
 14117                           ; BSR set to: 0
 14118  00503A  0EA4               	movlw	low _device_dsc
 14119  00503C  0100               	movlb	0	; () banked
 14120  00503E  6FC5               	movwf	_inPipes& (0+255),b
 14121  005040  0EBF               	movlw	high _device_dsc
 14122  005042  6FC6               	movwf	(_inPipes+1)& (0+255),b
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 14126  005044  0E00               	movlw	0
 14127  005046  6FCA               	movwf	(_inPipes+5)& (0+255),b
 14128  005048  0E12               	movlw	18
 14129  00504A  6FC9               	movwf	(_inPipes+4)& (0+255),b
 14130                           
 14131                           ;usb_device.c: 2060: break;
 14132  00504C  0012               	return	
 14133  00504E                     
 14134                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 14135                           
 14136                           ; BSR set to: 0
 14137  00504E  010D               	movlb	13	; () banked
 14138  005050  5132               	movf	50,w,b	;volatile
 14139  005052  A4D8               	btfss	status,2,c
 14140  005054  D043               	goto	l272
 14141                           
 14142                           ; BSR set to: 13
 14143                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 14144  005056  5132               	movf	50,w,b	;volatile
 14145  005058  0D02               	mullw	2
 14146  00505A  0EA3               	movlw	low _USB_CD_Ptr
 14147  00505C  24F3               	addwf	prodl,w,c
 14148  00505E  6EF6               	movwf	tblptrl,c
 14149  005060  0EBE               	movlw	high _USB_CD_Ptr
 14150  005062  20F4               	addwfc	prodh,w,c
 14151  005064  6EF7               	movwf	tblptrh,c
 14152  005066                     	if	1	;There are 3 active tblptr bytes
 14153  005066  6AF8               	clrf	tblptru,c
 14154  005068  0E00               	movlw	low (__mediumconst shr (0+16))
 14155  00506A  22F8               	addwfc	tblptru,f,c
 14156  00506C                     	endif
 14157  00506C  0009               	tblrd		*+
 14158  00506E  CFF5 F0C5          	movff	tablat,_inPipes
 14159  005072  000A               	tblrd		*-
 14160  005074  CFF5 F0C6          	movff	tablat,_inPipes+1
 14161                           
 14162                           ; BSR set to: 13
 14163                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14164  005078  0E02               	movlw	2
 14165  00507A  0100               	movlb	0	; () banked
 14166  00507C  25C5               	addwf	_inPipes& (0+255),w,b
 14167  00507E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14168  005080  0E00               	movlw	0
 14169  005082  21C6               	addwfc	(_inPipes+1)& (0+255),w,b
 14170  005084  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14171  005086  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14172  00508A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14173  00508E  6AF8               	clrf	tblptru,c
 14174  005090  0E0E               	movlw	(high __ramtop+-1)
 14175  005092  64F7               	cpfsgt	tblptrh,c
 14176  005094  D003               	bra	u10477
 14177  005096  0008               	tblrd		*
 14178  005098  50F5               	movf	tablat,w,c
 14179  00509A  D005               	bra	u10470
 14180  00509C                     u10477:
 14181  00509C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14182  0050A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14183  0050A4  50EF               	movf	indf0,w,c
 14184  0050A6                     u10470:
 14185  0050A6  0100               	movlb	0	; () banked
 14186  0050A8  6FC9               	movwf	(_inPipes+4)& (0+255),b
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14190  0050AA  0E03               	movlw	3
 14191  0050AC  25C5               	addwf	_inPipes& (0+255),w,b
 14192  0050AE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14193  0050B0  0E00               	movlw	0
 14194  0050B2  21C6               	addwfc	(_inPipes+1)& (0+255),w,b
 14195  0050B4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14196  0050B6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14197  0050BA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14198  0050BE  6AF8               	clrf	tblptru,c
 14199  0050C0  0E0E               	movlw	(high __ramtop+-1)
 14200  0050C2  64F7               	cpfsgt	tblptrh,c
 14201  0050C4  D003               	bra	u10487
 14202  0050C6  0008               	tblrd		*
 14203  0050C8  50F5               	movf	tablat,w,c
 14204  0050CA  D005               	bra	u10480
 14205  0050CC                     u10487:
 14206  0050CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14207  0050D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14208  0050D4  50EF               	movf	indf0,w,c
 14209  0050D6                     u10480:
 14210  0050D6  0100               	movlb	0	; () banked
 14211  0050D8  6FCA               	movwf	(_inPipes+5)& (0+255),b
 14212                           
 14213                           ;usb_device.c: 2078: }
 14214  0050DA  0012               	return	
 14215  0050DC                     l272:
 14216                           
 14217                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 14218                           
 14219                           ; BSR set to: 0
 14220  0050DC  0E00               	movlw	0
 14221  0050DE  0100               	movlb	0	; () banked
 14222  0050E0  6FC8               	movwf	(_inPipes+3)& (0+255),b
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 14226  0050E2  0012               	return	
 14227  0050E4                     
 14228                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 14229                           
 14230                           ; BSR set to: 0
 14231  0050E4  0E04               	movlw	4
 14232  0050E6  010D               	movlb	13	; () banked
 14233  0050E8  6132               	cpfslt	50,b	;volatile
 14234  0050EA  D027               	goto	l275
 14235                           
 14236                           ; BSR set to: 13
 14237                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 14238  0050EC  5132               	movf	50,w,b	;volatile
 14239  0050EE  0D02               	mullw	2
 14240  0050F0  0E79               	movlw	low _USB_SD_Ptr
 14241  0050F2  24F3               	addwf	prodl,w,c
 14242  0050F4  6EF6               	movwf	tblptrl,c
 14243  0050F6  0EBE               	movlw	high _USB_SD_Ptr
 14244  0050F8  20F4               	addwfc	prodh,w,c
 14245  0050FA  6EF7               	movwf	tblptrh,c
 14246  0050FC                     	if	1	;There are 3 active tblptr bytes
 14247  0050FC  6AF8               	clrf	tblptru,c
 14248  0050FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14249  005100  22F8               	addwfc	tblptru,f,c
 14250  005102                     	endif
 14251  005102  0009               	tblrd		*+
 14252  005104  CFF5 F0C5          	movff	tablat,_inPipes
 14253  005108  000A               	tblrd		*-
 14254  00510A  CFF5 F0C6          	movff	tablat,_inPipes+1
 14255                           
 14256                           ; BSR set to: 13
 14257                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14258  00510E  C0C5  FFF6         	movff	_inPipes,tblptrl
 14259  005112  C0C6  FFF7         	movff	_inPipes+1,tblptrh
 14260  005116  6AF8               	clrf	tblptru,c
 14261  005118  0E0E               	movlw	(high __ramtop+-1)
 14262  00511A  64F7               	cpfsgt	tblptrh,c
 14263  00511C  D003               	bra	u10507
 14264  00511E  0008               	tblrd		*
 14265  005120  50F5               	movf	tablat,w,c
 14266  005122  D005               	bra	u10500
 14267  005124                     u10507:
 14268  005124  CFF6 FFE9          	movff	tblptrl,fsr0l
 14269  005128  CFF7 FFEA          	movff	tblptrh,fsr0h
 14270  00512C  50EF               	movf	indf0,w,c
 14271  00512E                     u10500:
 14272  00512E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14273  005130  5001               	movf	??_USBStdGetDscHandler,w,c
 14274  005132  0100               	movlb	0	; () banked
 14275  005134  6FC9               	movwf	(_inPipes+4)& (0+255),b
 14276  005136  6BCA               	clrf	(_inPipes+5)& (0+255),b
 14277                           
 14278                           ;usb_device.c: 2094: }
 14279  005138  0012               	return	
 14280  00513A                     l275:
 14281                           
 14282                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 14283                           
 14284                           ; BSR set to: 0
 14285  00513A  0E00               	movlw	0
 14286  00513C  0100               	movlb	0	; () banked
 14287  00513E  6FC8               	movwf	(_inPipes+3)& (0+255),b
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 14291  005140  0012               	return	
 14292  005142                     
 14293                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 14294                           
 14295                           ; BSR set to: 0
 14296  005142  0E00               	movlw	0
 14297  005144  0100               	movlb	0	; () banked
 14298  005146  6FC8               	movwf	(_inPipes+3)& (0+255),b
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;usb_device.c: 2112: }
 14302                           
 14303                           ;usb_device.c: 2111: break;
 14304  005148  0012               	return	
 14305  00514A                     l268:
 14306                           
 14307                           ; BSR set to: 0
 14308                           
 14309                           ; BSR set to: 0
 14310  00514A  010D               	movlb	13	; () banked
 14311  00514C  5133               	movf	51,w,b	;volatile
 14312                           
 14313                           ; Switch size 1, requested type "space"
 14314                           ; Number of cases is 3, Range of values is 1 to 3
 14315                           ; switch strategies available:
 14316                           ; Name         Instructions Cycles
 14317                           ; simple_byte           10     6 (average)
 14318                           ;	Chosen strategy is simple_byte
 14319  00514E  0A01               	xorlw	1	; case 1
 14320  005150  B4D8               	btfsc	status,2,c
 14321  005152  D773               	goto	l269
 14322  005154  0A03               	xorlw	3	; case 2
 14323  005156  B4D8               	btfsc	status,2,c
 14324  005158  D77A               	goto	l271
 14325  00515A  0A01               	xorlw	1	; case 3
 14326  00515C  B4D8               	btfsc	status,2,c
 14327  00515E  D7C2               	goto	l274
 14328  005160  D7F0               	goto	l277
 14329  005162                     __end_of_USBStdGetDscHandler:
 14330                           	opt stack 0
 14331                           tblptru	equ	0xFF8
 14332                           tblptrh	equ	0xFF7
 14333                           tblptrl	equ	0xFF6
 14334                           tablat	equ	0xFF5
 14335                           prodh	equ	0xFF4
 14336                           prodl	equ	0xFF3
 14337                           intcon	equ	0xFF2
 14338                           intcon2	equ	0xFF1
 14339                           intcon3	equ	0xFF0
 14340                           indf0	equ	0xFEF
 14341                           postinc0	equ	0xFEE
 14342                           fsr0h	equ	0xFEA
 14343                           fsr0l	equ	0xFE9
 14344                           wreg	equ	0xFE8
 14345                           indf1	equ	0xFE7
 14346                           postdec1	equ	0xFE5
 14347                           plusw1	equ	0xFE3
 14348                           fsr1h	equ	0xFE2
 14349                           fsr1l	equ	0xFE1
 14350                           indf2	equ	0xFDF
 14351                           postinc2	equ	0xFDE
 14352                           postdec2	equ	0xFDD
 14353                           plusw2	equ	0xFDB
 14354                           fsr2h	equ	0xFDA
 14355                           fsr2l	equ	0xFD9
 14356                           status	equ	0xFD8
 14357                           
 14358 ;; *************** function _USBStdFeatureReqHandler *****************
 14359 ;; Defined at:
 14360 ;;		line 2756 in file "usb_device.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;		None
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;  p               2   27[COMRAM] PTR struct __BDT
 14365 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14366 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14367 ;;		 -> UEP0(1), 
 14368 ;;  current_ep_d    1   26[COMRAM] struct .
 14369 ;; Return value:  Size  Location     Type
 14370 ;;                  1    wreg      void 
 14371 ;; Registers used:
 14372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14373 ;; Tracked objects:
 14374 ;;		On entry : 0/0
 14375 ;;		On exit  : 0/0
 14376 ;;		Unchanged: 0/0
 14377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14379 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14382 ;;Total ram usage:        6 bytes
 14383 ;; Hardware stack levels used:    1
 14384 ;; Hardware stack levels required when called:    4
 14385 ;; This function calls:
 14386 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14387 ;; This function is called by:
 14388 ;;		_USBCheckStdRequest
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           	psect	text66
 14393  001DA4                     __ptext66:
 14394                           	opt stack 0
 14395  001DA4                     _USBStdFeatureReqHandler:
 14396                           	opt stack 22
 14397                           
 14398                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14399                           
 14400                           ;incstack = 0
 14401  001DA4  010D               	movlb	13	; () banked
 14402  001DA6  0532               	decf	50,w,b	;volatile
 14403  001DA8  A4D8               	btfss	status,2,c
 14404  001DAA  D011               	goto	l361
 14405                           
 14406                           ; BSR set to: 13
 14407  001DAC  5130               	movf	48,w,b	;volatile
 14408  001DAE  0B1F               	andlw	31
 14409  001DB0  0900               	iorlw	0
 14410  001DB2  A4D8               	btfss	status,2,c
 14411  001DB4  D00C               	goto	l361
 14412                           
 14413                           ; BSR set to: 13
 14414                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14415  001DB6  0100               	movlb	0	; () banked
 14416  001DB8  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 14420  001DBA  0E03               	movlw	3
 14421  001DBC  010D               	movlb	13	; () banked
 14422  001DBE  1931               	xorwf	49,w,b	;volatile
 14423  001DC0  A4D8               	btfss	status,2,c
 14424  001DC2  D002               	goto	l360
 14425                           
 14426                           ; BSR set to: 13
 14427                           ;usb_device.c: 2806: RemoteWakeup = 1;
 14428  001DC4  0E01               	movlw	1
 14429  001DC6  D001               	goto	L7
 14430  001DC8                     l360:
 14431                           
 14432                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 14433                           
 14434                           ; BSR set to: 0
 14435  001DC8  0E00               	movlw	0
 14436  001DCA                     L7:
 14437  001DCA  0100               	movlb	0	; () banked
 14438  001DCC  6FF5               	movwf	_RemoteWakeup& (0+255),b
 14439  001DCE                     l361:
 14440                           
 14441                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 14442                           
 14443                           ; BSR set to: 0
 14444  001DCE  010D               	movlb	13	; () banked
 14445  001DD0  5132               	movf	50,w,b	;volatile
 14446  001DD2  A4D8               	btfss	status,2,c
 14447  001DD4  0012               	return	
 14448                           
 14449                           ; BSR set to: 13
 14450  001DD6  5130               	movf	48,w,b	;volatile
 14451  001DD8  0B1F               	andlw	31
 14452  001DDA  0A02               	xorlw	2
 14453  001DDC  A4D8               	btfss	status,2,c
 14454  001DDE  0012               	return	
 14455                           
 14456                           ; BSR set to: 13
 14457  001DE0  5134               	movf	52,w,b	;volatile
 14458  001DE2  0B0F               	andlw	15
 14459  001DE4  0900               	iorlw	0
 14460  001DE6  B4D8               	btfsc	status,2,c
 14461  001DE8  0012               	return	
 14462                           
 14463                           ; BSR set to: 13
 14464  001DEA  5134               	movf	52,w,b	;volatile
 14465  001DEC  0B0F               	andlw	15
 14466  001DEE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14467  001DF0  0E03               	movlw	3
 14468  001DF2  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14469  001DF4  0012               	return	
 14470                           
 14471                           ; BSR set to: 13
 14472  001DF6  0E20               	movlw	32
 14473  001DF8  0100               	movlb	0	; () banked
 14474  001DFA  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 14475  001DFC  A4D8               	btfss	status,2,c
 14476  001DFE  0012               	return	
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14480  001E00  8FC8               	bsf	(_inPipes+3)& (0+255),7,b
 14481                           
 14482                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14483  001E02  010D               	movlb	13	; () banked
 14484  001E04  BF34               	btfsc	52,7,b	;volatile
 14485  001E06  D019               	goto	l363
 14486                           
 14487                           ; BSR set to: 13
 14488                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14489  001E08  5134               	movf	52,w,b	;volatile
 14490  001E0A  0B0F               	andlw	15
 14491  001E0C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14492  001E0E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14493  001E10  0D02               	mullw	2
 14494  001E12  0E46               	movlw	low _pBDTEntryOut
 14495  001E14  24F3               	addwf	prodl,w,c
 14496  001E16  6ED9               	movwf	fsr2l,c
 14497  001E18  0E01               	movlw	high _pBDTEntryOut
 14498  001E1A  20F4               	addwfc	prodh,w,c
 14499  001E1C  6EDA               	movwf	fsr2h,c
 14500  001E1E  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14501  001E22  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14502                           
 14503                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14504  001E26  5134               	movf	52,w,b	;volatile
 14505  001E28  0B0F               	andlw	15
 14506  001E2A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14507  001E2C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14508  001E2E  0D01               	mullw	1
 14509  001E30  0E6E               	movlw	low _ep_data_out
 14510  001E32  24F3               	addwf	prodl,w,c
 14511  001E34  6ED9               	movwf	fsr2l,c
 14512  001E36  0E01               	movlw	high _ep_data_out
 14513  001E38  D018               	goto	L8
 14514  001E3A                     l363:
 14515                           
 14516                           ; BSR set to: 13
 14517                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14518                           
 14519                           ; BSR set to: 13
 14520  001E3A  5134               	movf	52,w,b	;volatile
 14521  001E3C  0B0F               	andlw	15
 14522  001E3E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14523  001E40  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14524  001E42  0D02               	mullw	2
 14525  001E44  0ECB               	movlw	low _pBDTEntryIn
 14526  001E46  24F3               	addwf	prodl,w,c
 14527  001E48  6ED9               	movwf	fsr2l,c
 14528  001E4A  0E00               	movlw	high _pBDTEntryIn
 14529  001E4C  20F4               	addwfc	prodh,w,c
 14530  001E4E  6EDA               	movwf	fsr2h,c
 14531  001E50  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14532  001E54  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14533                           
 14534                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14535  001E58  5134               	movf	52,w,b	;volatile
 14536  001E5A  0B0F               	andlw	15
 14537  001E5C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14538  001E5E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14539  001E60  0D01               	mullw	1
 14540  001E62  0E71               	movlw	low _ep_data_in
 14541  001E64  24F3               	addwf	prodl,w,c
 14542  001E66  6ED9               	movwf	fsr2l,c
 14543  001E68  0E01               	movlw	high _ep_data_in
 14544  001E6A                     L8:
 14545  001E6A  20F4               	addwfc	prodh,w,c
 14546  001E6C  6EDA               	movwf	fsr2h,c
 14547  001E6E  50DF               	movf	indf2,w,c
 14548  001E70  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14549                           
 14550                           ; BSR set to: 13
 14551                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14552                           
 14553                           ; BSR set to: 13
 14554  001E72  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14555  001E74  D006               	goto	l365
 14556                           
 14557                           ; BSR set to: 13
 14558                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14559  001E76  0EFB               	movlw	251
 14560  001E78  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14561  001E7A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14562  001E7C  0EFF               	movlw	255
 14563  001E7E  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14564  001E80  D004               	goto	L9
 14565  001E82                     l365:
 14566                           
 14567                           ; BSR set to: 13
 14568                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14569                           
 14570                           ; BSR set to: 13
 14571  001E82  0E04               	movlw	4
 14572  001E84  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14573  001E86  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14574  001E88  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14575  001E8A                     L9:
 14576  001E8A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14577                           
 14578                           ; BSR set to: 13
 14579                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14580                           
 14581                           ; BSR set to: 13
 14582  001E8C  BF34               	btfsc	52,7,b	;volatile
 14583  001E8E  D00A               	goto	l367
 14584                           
 14585                           ; BSR set to: 13
 14586                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14587  001E90  5134               	movf	52,w,b	;volatile
 14588  001E92  0B0F               	andlw	15
 14589  001E94  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14590  001E96  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14591  001E98  0D02               	mullw	2
 14592  001E9A  0E46               	movlw	low _pBDTEntryOut
 14593  001E9C  24F3               	addwf	prodl,w,c
 14594  001E9E  6ED9               	movwf	fsr2l,c
 14595  001EA0  0E01               	movlw	high _pBDTEntryOut
 14596  001EA2  D009               	goto	L10
 14597  001EA4                     l367:
 14598                           
 14599                           ; BSR set to: 13
 14600                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14601                           
 14602                           ; BSR set to: 13
 14603  001EA4  5134               	movf	52,w,b	;volatile
 14604  001EA6  0B0F               	andlw	15
 14605  001EA8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14606  001EAA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14607  001EAC  0D02               	mullw	2
 14608  001EAE  0ECB               	movlw	low _pBDTEntryIn
 14609  001EB0  24F3               	addwf	prodl,w,c
 14610  001EB2  6ED9               	movwf	fsr2l,c
 14611  001EB4  0E00               	movlw	high _pBDTEntryIn
 14612  001EB6                     L10:
 14613  001EB6  20F4               	addwfc	prodh,w,c
 14614  001EB8  6EDA               	movwf	fsr2h,c
 14615  001EBA  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14616  001EBE  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14617                           
 14618                           ; BSR set to: 13
 14619                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14620                           
 14621                           ; BSR set to: 13
 14622  001EC2  0E03               	movlw	3
 14623  001EC4  1931               	xorwf	49,w,b	;volatile
 14624  001EC6  A4D8               	btfss	status,2,c
 14625  001EC8  D02D               	goto	l369
 14626                           
 14627                           ; BSR set to: 13
 14628                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14629  001ECA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14630  001ECE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14631  001ED2  AEDF               	btfss	indf2,7,c
 14632  001ED4  D01A               	goto	l372
 14633                           
 14634                           ; BSR set to: 13
 14635                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14636  001ED6  BF34               	btfsc	52,7,b	;volatile
 14637  001ED8  D00A               	goto	l371
 14638                           
 14639                           ; BSR set to: 13
 14640                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14641  001EDA  5134               	movf	52,w,b	;volatile
 14642  001EDC  0B0F               	andlw	15
 14643  001EDE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14644  001EE0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14645  001EE2  0D01               	mullw	1
 14646  001EE4  0E6E               	movlw	low _ep_data_out
 14647  001EE6  24F3               	addwf	prodl,w,c
 14648  001EE8  6ED9               	movwf	fsr2l,c
 14649  001EEA  0E01               	movlw	high _ep_data_out
 14650  001EEC  D00A               	goto	L11
 14651  001EEE                     l371:
 14652                           
 14653                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14654                           
 14655                           ; BSR set to: 1
 14656  001EEE  010D               	movlb	13	; () banked
 14657  001EF0  5134               	movf	52,w,b	;volatile
 14658  001EF2  0B0F               	andlw	15
 14659  001EF4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14660  001EF6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14661  001EF8  0D01               	mullw	1
 14662  001EFA  0E71               	movlw	low _ep_data_in
 14663  001EFC  24F3               	addwf	prodl,w,c
 14664  001EFE  6ED9               	movwf	fsr2l,c
 14665  001F00  0E01               	movlw	high _ep_data_in
 14666  001F02                     L11:
 14667  001F02  20F4               	addwfc	prodh,w,c
 14668  001F04  6EDA               	movwf	fsr2h,c
 14669  001F06  0101               	movlb	1	; () banked
 14670  001F08  82DF               	bsf	indf2,1,c
 14671  001F0A                     l372:
 14672                           
 14673                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14674                           
 14675                           ; BSR set to: 1
 14676                           
 14677                           ; BSR set to: 1
 14678  001F0A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14679  001F0E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14680  001F12  0E00               	movlw	0
 14681  001F14  84DB               	bsf	plusw2,2,c
 14682                           
 14683                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14684  001F16  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14685  001F1A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14686  001F1E  0E00               	movlw	0
 14687  001F20  8EDB               	bsf	plusw2,7,c
 14688                           
 14689                           ;usb_device.c: 2878: }
 14690  001F22  0012               	return	
 14691  001F24                     l369:
 14692                           
 14693                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14694  001F24  0E04               	movlw	4
 14695  001F26  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14696  001F28  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14697  001F2A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14698  001F2C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14699                           
 14700                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14701  001F2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14702  001F32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14703  001F36  AEDF               	btfss	indf2,7,c
 14704  001F38  D01B               	goto	l374
 14705                           
 14706                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14707  001F3A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14708  001F3E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14709  001F42  0E7F               	movlw	127
 14710  001F44  16DF               	andwf	indf2,f,c
 14711                           
 14712                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14713  001F46  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14714  001F4A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14715  001F4E  0E00               	movlw	0
 14716  001F50  8CDB               	bsf	plusw2,6,c
 14717                           
 14718                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14719  001F52  0E00               	movlw	0
 14720  001F54  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14721  001F56  0E05               	movlw	5
 14722  001F58  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14723  001F5A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14724  001F5E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14725  001F62  0E00               	movlw	0
 14726  001F64  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14727  001F66  0E02               	movlw	2
 14728  001F68  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14729  001F6A  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14730                           
 14731                           ;usb_device.c: 2893: }
 14732  001F6E  D006               	goto	l375
 14733  001F70                     l374:
 14734                           
 14735                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14736  001F70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14737  001F74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14738  001F78  0E00               	movlw	0
 14739  001F7A  8CDB               	bsf	plusw2,6,c
 14740  001F7C                     l375:
 14741                           
 14742                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14743  001F7C  0E04               	movlw	4
 14744  001F7E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14745  001F80  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14746  001F82  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14747  001F84  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14748                           
 14749                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14750  001F86  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14751  001F88  D006               	goto	u10720
 14752  001F8A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14753  001F8E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14754  001F92  AEDF               	btfss	indf2,7,c
 14755  001F94  D030               	goto	l376
 14756  001F96                     u10720:
 14757                           
 14758                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14759  001F96  010D               	movlb	13	; () banked
 14760  001F98  BF34               	btfsc	52,7,b	;volatile
 14761  001F9A  D00A               	goto	l379
 14762                           
 14763                           ; BSR set to: 13
 14764                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14765  001F9C  5134               	movf	52,w,b	;volatile
 14766  001F9E  0B0F               	andlw	15
 14767  001FA0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14768  001FA2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14769  001FA4  0D01               	mullw	1
 14770  001FA6  0E6E               	movlw	low _ep_data_out
 14771  001FA8  24F3               	addwf	prodl,w,c
 14772  001FAA  6ED9               	movwf	fsr2l,c
 14773  001FAC  0E01               	movlw	high _ep_data_out
 14774  001FAE  D00A               	goto	L12
 14775  001FB0                     l379:
 14776                           
 14777                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14778                           
 14779                           ; BSR set to: 1
 14780  001FB0  010D               	movlb	13	; () banked
 14781  001FB2  5134               	movf	52,w,b	;volatile
 14782  001FB4  0B0F               	andlw	15
 14783  001FB6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14784  001FB8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14785  001FBA  0D01               	mullw	1
 14786  001FBC  0E71               	movlw	low _ep_data_in
 14787  001FBE  24F3               	addwf	prodl,w,c
 14788  001FC0  6ED9               	movwf	fsr2l,c
 14789  001FC2  0E01               	movlw	high _ep_data_in
 14790  001FC4                     L12:
 14791  001FC4  20F4               	addwfc	prodh,w,c
 14792  001FC6  6EDA               	movwf	fsr2h,c
 14793  001FC8  0101               	movlb	1	; () banked
 14794  001FCA  92DF               	bcf	indf2,1,c
 14795                           
 14796                           ; BSR set to: 1
 14797                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14798                           
 14799                           ; BSR set to: 1
 14800  001FCC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14801  001FD0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14802  001FD4  0E3B               	movlw	59
 14803  001FD6  16DF               	andwf	indf2,f,c
 14804                           
 14805                           ; BSR set to: 1
 14806                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14807  001FD8  0E00               	movlw	0
 14808  001FDA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14809  001FDC  0E05               	movlw	5
 14810  001FDE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14811  001FE0  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14812  001FE4  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14813  001FE8  0E00               	movlw	0
 14814  001FEA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14815  001FEC  0E02               	movlw	2
 14816  001FEE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14817  001FF0  EC30  F043         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14818                           
 14819                           ;usb_device.c: 2923: }
 14820  001FF4  D006               	goto	l381
 14821  001FF6                     l376:
 14822                           
 14823                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14824  001FF6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14825  001FFA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14826  001FFE  0E3B               	movlw	59
 14827  002000  16DF               	andwf	indf2,f,c
 14828  002002                     l381:
 14829                           
 14830                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14831  002002  010D               	movlb	13	; () banked
 14832  002004  5134               	movf	52,w,b	;volatile
 14833  002006  0B0F               	andlw	15
 14834  002008  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14835  00200A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14836  00200C  0D01               	mullw	1
 14837  00200E  0E26               	movlw	38
 14838  002010  24F3               	addwf	prodl,w,c
 14839  002012  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14840  002014  0E0F               	movlw	15
 14841  002016  20F4               	addwfc	prodh,w,c
 14842  002018  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14843                           
 14844                           ; BSR set to: 13
 14845                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14846  00201A  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14847  00201E  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14848  002022  0EFE               	movlw	254
 14849  002024  16DF               	andwf	indf2,f,c
 14850                           
 14851                           ; BSR set to: 13
 14852  002026  0012               	return	
 14853  002028                     __end_of_USBStdFeatureReqHandler:
 14854                           	opt stack 0
 14855                           tblptru	equ	0xFF8
 14856                           tblptrh	equ	0xFF7
 14857                           tblptrl	equ	0xFF6
 14858                           tablat	equ	0xFF5
 14859                           prodh	equ	0xFF4
 14860                           prodl	equ	0xFF3
 14861                           intcon	equ	0xFF2
 14862                           intcon2	equ	0xFF1
 14863                           intcon3	equ	0xFF0
 14864                           indf0	equ	0xFEF
 14865                           postinc0	equ	0xFEE
 14866                           fsr0h	equ	0xFEA
 14867                           fsr0l	equ	0xFE9
 14868                           wreg	equ	0xFE8
 14869                           indf1	equ	0xFE7
 14870                           postdec1	equ	0xFE5
 14871                           plusw1	equ	0xFE3
 14872                           fsr1h	equ	0xFE2
 14873                           fsr1l	equ	0xFE1
 14874                           indf2	equ	0xFDF
 14875                           postinc2	equ	0xFDE
 14876                           postdec2	equ	0xFDD
 14877                           plusw2	equ	0xFDB
 14878                           fsr2h	equ	0xFDA
 14879                           fsr2l	equ	0xFD9
 14880                           status	equ	0xFD8
 14881                           
 14882 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14883 ;; Defined at:
 14884 ;;		line 54 in file "usb_events.c"
 14885 ;; Parameters:    Size  Location     Type
 14886 ;;  event           2   15[COMRAM] enum E6832
 14887 ;;  pdata           2   17[COMRAM] PTR void 
 14888 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14889 ;;		 -> BDT(48), 
 14890 ;;  size            2   19[COMRAM] unsigned int 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;		None
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  1    wreg      unsigned char 
 14895 ;; Registers used:
 14896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14902 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14906 ;;Total ram usage:        8 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; Hardware stack levels required when called:    3
 14909 ;; This function calls:
 14910 ;;		_APP_DeviceCustomHIDInitialize
 14911 ;;		_APP_DeviceMSDInitialize
 14912 ;;		_MSDTransferTerminated
 14913 ;;		_SYSTEM_Initialize
 14914 ;;		_USBCheckHIDRequest
 14915 ;;		_USBCheckMSDRequest
 14916 ;; This function is called by:
 14917 ;;		_USBDeviceTasks
 14918 ;;		_USBStdSetCfgHandler
 14919 ;;		_USBSuspend
 14920 ;;		_USBWakeFromSuspend
 14921 ;;		_USBCtrlTrfSetupHandler
 14922 ;;		_USBCheckStdRequest
 14923 ;;		_USBStdFeatureReqHandler
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927                           	psect	text67
 14928  008660                     __ptext67:
 14929                           	opt stack 0
 14930  008660                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14931                           	opt stack 26
 14932                           
 14933                           ;usb_events.c: 56: switch((int)event)
 14934                           
 14935                           ;incstack = 0
 14936  008660  D019               	goto	l800
 14937  008662                     
 14938                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14939  008662  0E01               	movlw	1
 14940  008664  EC1F  F04A         	call	_SYSTEM_Initialize
 14941                           
 14942                           ;usb_events.c: 79: break;
 14943  008668  0012               	return	
 14944  00866A                     
 14945                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14946  00866A  0E02               	movlw	2
 14947  00866C  EC1F  F04A         	call	_SYSTEM_Initialize
 14948                           
 14949                           ;usb_events.c: 90: break;
 14950  008670  0012               	return	
 14951  008672                     
 14952                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14953  008672  EC54  F04D         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14954                           
 14955                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14956  008676  ECEB  F050         	call	_APP_DeviceMSDInitialize	;wreg free
 14957                           
 14958                           ;usb_events.c: 100: break;
 14959                           
 14960                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14961                           
 14962                           ;usb_events.c: 97: break;
 14963  00867A  0012               	return	
 14964  00867C                     
 14965                           ;usb_events.c: 105: USBCheckHIDRequest();
 14966  00867C  ECC6  F032         	call	_USBCheckHIDRequest	;wreg free
 14967                           
 14968                           ;usb_events.c: 108: USBCheckMSDRequest();
 14969  008680  EC6D  F037         	call	_USBCheckMSDRequest	;wreg free
 14970                           
 14971                           ;usb_events.c: 112: break;
 14972                           
 14973                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14974                           
 14975                           ;usb_events.c: 109: break;
 14976  008684  0012               	return	
 14977  008686                     
 14978                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14979  008686  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14980  00868A  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14981  00868E  ECF2  F048         	call	_MSDTransferTerminated	;wreg free
 14982                           
 14983                           ;usb_events.c: 129: }
 14984                           
 14985                           ;usb_events.c: 128: break;
 14986                           
 14987                           ;usb_events.c: 127: default:
 14988                           
 14989                           ;usb_events.c: 125: break;
 14990  008692  0012               	return	
 14991  008694                     l800:
 14992  008694  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14993  008698  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14994                           
 14995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14996                           ; Switch size 1, requested type "space"
 14997                           ; Number of cases is 2, Range of values is 0 to 127
 14998                           ; switch strategies available:
 14999                           ; Name         Instructions Cycles
 15000                           ; simple_byte            7     4 (average)
 15001                           ;	Chosen strategy is simple_byte
 15002  00869C  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15003  00869E  0A00               	xorlw	0	; case 0
 15004  0086A0  B4D8               	btfsc	status,2,c
 15005  0086A2  D004               	goto	l17266
 15006  0086A4  0A7F               	xorlw	127	; case 127
 15007  0086A6  A4D8               	btfss	status,2,c
 15008  0086A8  0012               	return	
 15009  0086AA  D01A               	goto	l17268
 15010  0086AC                     l17266:
 15011                           
 15012                           ; Switch size 1, requested type "space"
 15013                           ; Number of cases is 8, Range of values is 1 to 117
 15014                           ; switch strategies available:
 15015                           ; Name         Instructions Cycles
 15016                           ; simple_byte           25    13 (average)
 15017                           ;	Chosen strategy is simple_byte
 15018  0086AC  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15019  0086AE  0A01               	xorlw	1	; case 1
 15020  0086B0  B4D8               	btfsc	status,2,c
 15021  0086B2  D7DF               	goto	l806
 15022  0086B4  0A03               	xorlw	3	; case 2
 15023  0086B6  B4D8               	btfsc	status,2,c
 15024  0086B8  0012               	return	
 15025  0086BA  0A01               	xorlw	1	; case 3
 15026  0086BC  B4D8               	btfsc	status,2,c
 15027  0086BE  D7DE               	goto	l808
 15028  0086C0  0A06               	xorlw	6	; case 5
 15029  0086C2  B4D8               	btfsc	status,2,c
 15030  0086C4  D7E0               	goto	l810
 15031  0086C6  0A77               	xorlw	119	; case 114
 15032  0086C8  B4D8               	btfsc	status,2,c
 15033  0086CA  0012               	return	
 15034  0086CC  0A01               	xorlw	1	; case 115
 15035  0086CE  B4D8               	btfsc	status,2,c
 15036  0086D0  0012               	return	
 15037  0086D2  0A07               	xorlw	7	; case 116
 15038  0086D4  B4D8               	btfsc	status,2,c
 15039  0086D6  D7C9               	goto	l805
 15040  0086D8  0A01               	xorlw	1	; case 117
 15041  0086DA  A4D8               	btfss	status,2,c
 15042  0086DC  0012               	return	
 15043  0086DE  D7C1               	goto	l804
 15044  0086E0                     l17268:
 15045                           
 15046                           ; Switch size 1, requested type "space"
 15047                           ; Number of cases is 1, Range of values is 255 to 255
 15048                           ; switch strategies available:
 15049                           ; Name         Instructions Cycles
 15050                           ; simple_byte            4     3 (average)
 15051                           ;	Chosen strategy is simple_byte
 15052  0086E0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15053  0086E2  0AFF               	xorlw	255	; case 255
 15054  0086E4  0012               	return	
 15055  0086E6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15056                           	opt stack 0
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           intcon2	equ	0xFF1
 15065                           intcon3	equ	0xFF0
 15066                           indf0	equ	0xFEF
 15067                           postinc0	equ	0xFEE
 15068                           fsr0h	equ	0xFEA
 15069                           fsr0l	equ	0xFE9
 15070                           wreg	equ	0xFE8
 15071                           indf1	equ	0xFE7
 15072                           postdec1	equ	0xFE5
 15073                           plusw1	equ	0xFE3
 15074                           fsr1h	equ	0xFE2
 15075                           fsr1l	equ	0xFE1
 15076                           indf2	equ	0xFDF
 15077                           postinc2	equ	0xFDE
 15078                           postdec2	equ	0xFDD
 15079                           plusw2	equ	0xFDB
 15080                           fsr2h	equ	0xFDA
 15081                           fsr2l	equ	0xFD9
 15082                           status	equ	0xFD8
 15083                           
 15084 ;; *************** function _USBCheckMSDRequest *****************
 15085 ;; Defined at:
 15086 ;;		line 218 in file "usb_device_msd.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;		None
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;		None
 15091 ;; Return value:  Size  Location     Type
 15092 ;;                  1    wreg      void 
 15093 ;; Registers used:
 15094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15103 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15104 ;;Total ram usage:        4 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:    1
 15107 ;; This function calls:
 15108 ;;		_USBTransferOnePacket
 15109 ;; This function is called by:
 15110 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15111 ;; This function uses a non-reentrant model
 15112 ;;
 15113                           
 15114                           	psect	text68
 15115  006EDA                     __ptext68:
 15116                           	opt stack 0
 15117  006EDA                     _USBCheckMSDRequest:
 15118                           	opt stack 27
 15119                           
 15120                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 15121                           
 15122                           ;incstack = 0
 15123  006EDA  010D               	movlb	13	; () banked
 15124  006EDC  5130               	movf	48,w,b	;volatile
 15125  006EDE  0B1F               	andlw	31
 15126  006EE0  06E8               	decf	wreg,f,c
 15127  006EE2  A4D8               	btfss	status,2,c
 15128  006EE4  0012               	return	
 15129                           
 15130                           ; BSR set to: 13
 15131                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 15132                           
 15133                           ; BSR set to: 13
 15134                           
 15135                           ; BSR set to: 13
 15136                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 15137  006EE6  5134               	movf	52,w,b	;volatile
 15138  006EE8  A4D8               	btfss	status,2,c
 15139  006EEA  0012               	return	
 15140  006EEC  D04F               	goto	l529
 15141  006EEE                     
 15142                           ; BSR set to: 13
 15143                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 15144                           
 15145                           ; BSR set to: 13
 15146  006EEE  5132               	movf	50,w,b	;volatile
 15147  006EF0  1133               	iorwf	51,w,b	;volatile
 15148  006EF2  A4D8               	btfss	status,2,c
 15149  006EF4  0012               	return	
 15150                           
 15151                           ; BSR set to: 13
 15152  006EF6  5136               	movf	54,w,b	;volatile
 15153  006EF8  1137               	iorwf	55,w,b	;volatile
 15154  006EFA  A4D8               	btfss	status,2,c
 15155  006EFC  0012               	return	
 15156                           
 15157                           ; BSR set to: 13
 15158                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 15159                           
 15160                           ; BSR set to: 13
 15161                           
 15162                           ; BSR set to: 13
 15163                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 15164  006EFE  0E00               	movlw	0
 15165  006F00  0100               	movlb	0	; () banked
 15166  006F02  6FEB               	movwf	_MSD_State& (0+255),b
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 15170  006F04  69EA               	setf	_MSDCommandState& (0+255),b
 15171                           
 15172                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 15173  006F06  0E00               	movlw	0
 15174  006F08  6FE9               	movwf	_MSDReadState& (0+255),b
 15175                           
 15176                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 15177  006F0A  0E00               	movlw	0
 15178  006F0C  6FE8               	movwf	_MSDWriteState& (0+255),b
 15179                           
 15180                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 15181  006F0E  0E01               	movlw	1
 15182  006F10  0101               	movlb	1	; () banked
 15183  006F12  6F90               	movwf	_MSDCBWValid& (0+255),b
 15184                           
 15185                           ; BSR set to: 1
 15186                           
 15187                           ; BSR set to: 1
 15188                           
 15189                           ; BSR set to: 1
 15190                           
 15191                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 15192  006F14  C14A  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 15193  006F18  C14B  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 15194                           
 15195                           ; BSR set to: 1
 15196  006F1C  500C               	movf	_USBCheckMSDRequest$2319,w,c
 15197  006F1E  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 15198  006F20  B4D8               	btfsc	status,2,c
 15199  006F22  D00A               	goto	u8500
 15200                           
 15201                           ; BSR set to: 1
 15202                           
 15203                           ; BSR set to: 1
 15204                           
 15205                           ; BSR set to: 1
 15206                           
 15207                           ; BSR set to: 1
 15208  006F24  C14A  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 15209  006F28  C14B  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 15210                           
 15211                           ; BSR set to: 1
 15212                           
 15213                           ; BSR set to: 1
 15214  006F2C  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 15215  006F30  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 15216  006F34  BEDF               	btfsc	indf2,7,c
 15217  006F36  D00F               	goto	l534
 15218  006F38                     u8500:
 15219                           
 15220                           ; BSR set to: 1
 15221                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 15222                           
 15223                           ; BSR set to: 1
 15224  006F38  0E00               	movlw	0
 15225  006F3A  6E01               	movwf	USBTransferOnePacket@dir,c
 15226  006F3C  0E40               	movlw	64
 15227  006F3E  6E02               	movwf	USBTransferOnePacket@data,c
 15228  006F40  0E0D               	movlw	13
 15229  006F42  6E03               	movwf	USBTransferOnePacket@data+1,c
 15230  006F44  0E40               	movlw	64
 15231  006F46  6E04               	movwf	USBTransferOnePacket@len,c
 15232  006F48  0E02               	movlw	2
 15233  006F4A  ECFC  F02C         	call	_USBTransferOnePacket
 15234  006F4E  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15235  006F52  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15236  006F56                     l534:
 15237                           
 15238                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 15239  006F56  0E80               	movlw	128
 15240  006F58  0100               	movlb	0	; () banked
 15241  006F5A  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15242                           
 15243                           ;usb_device_msd.c: 263: break;
 15244  006F5C  0012               	return	
 15245  006F5E                     
 15246                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 15247                           
 15248                           ; BSR set to: 0
 15249  006F5E  010D               	movlb	13	; () banked
 15250  006F60  5132               	movf	50,w,b	;volatile
 15251  006F62  1133               	iorwf	51,w,b	;volatile
 15252  006F64  A4D8               	btfss	status,2,c
 15253  006F66  0012               	return	
 15254                           
 15255                           ; BSR set to: 13
 15256  006F68  0536               	decf	54,w,b	;volatile
 15257  006F6A  1137               	iorwf	55,w,b	;volatile
 15258  006F6C  A4D8               	btfss	status,2,c
 15259  006F6E  0012               	return	
 15260                           
 15261                           ; BSR set to: 13
 15262                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 15263                           
 15264                           ; BSR set to: 13
 15265                           
 15266                           ; BSR set to: 13
 15267                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 15268  006F70  0E00               	movlw	0
 15269  006F72  6F38               	movwf	56,b	;volatile
 15270                           
 15271                           ; BSR set to: 13
 15272                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15273  006F74  0E38               	movlw	56
 15274  006F76  0100               	movlb	0	; () banked
 15275  006F78  6FC5               	movwf	_inPipes& (0+255),b
 15276  006F7A  0E0D               	movlw	13
 15277  006F7C  6FC6               	movwf	(_inPipes+1)& (0+255),b
 15278                           
 15279                           ; BSR set to: 0
 15280  006F7E  0E00               	movlw	0
 15281  006F80  6FCA               	movwf	(_inPipes+5)& (0+255),b
 15282  006F82  0E01               	movlw	1
 15283  006F84  6FC9               	movwf	(_inPipes+4)& (0+255),b
 15284                           
 15285                           ; BSR set to: 0
 15286  006F86  0EC1               	movlw	193
 15287  006F88  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15288                           
 15289                           ; BSR set to: 0
 15290                           ;usb_device_msd.c: 278: }
 15291                           
 15292                           ;usb_device_msd.c: 277: break;
 15293  006F8A  0012               	return	
 15294  006F8C                     l529:
 15295                           
 15296                           ; BSR set to: 0
 15297  006F8C  010D               	movlb	13	; () banked
 15298  006F8E  5131               	movf	49,w,b	;volatile
 15299                           
 15300                           ; Switch size 1, requested type "space"
 15301                           ; Number of cases is 2, Range of values is 254 to 255
 15302                           ; switch strategies available:
 15303                           ; Name         Instructions Cycles
 15304                           ; simple_byte            7     4 (average)
 15305                           ;	Chosen strategy is simple_byte
 15306  006F90  0AFE               	xorlw	254	; case 254
 15307  006F92  B4D8               	btfsc	status,2,c
 15308  006F94  D7E4               	goto	l546
 15309  006F96  0A01               	xorlw	1	; case 255
 15310  006F98  A4D8               	btfss	status,2,c
 15311  006F9A  0012               	return	
 15312  006F9C  D7A8               	goto	l530
 15313  006F9E                     __end_of_USBCheckMSDRequest:
 15314                           	opt stack 0
 15315                           tblptru	equ	0xFF8
 15316                           tblptrh	equ	0xFF7
 15317                           tblptrl	equ	0xFF6
 15318                           tablat	equ	0xFF5
 15319                           prodh	equ	0xFF4
 15320                           prodl	equ	0xFF3
 15321                           intcon	equ	0xFF2
 15322                           intcon2	equ	0xFF1
 15323                           intcon3	equ	0xFF0
 15324                           indf0	equ	0xFEF
 15325                           postinc0	equ	0xFEE
 15326                           fsr0h	equ	0xFEA
 15327                           fsr0l	equ	0xFE9
 15328                           wreg	equ	0xFE8
 15329                           indf1	equ	0xFE7
 15330                           postdec1	equ	0xFE5
 15331                           plusw1	equ	0xFE3
 15332                           fsr1h	equ	0xFE2
 15333                           fsr1l	equ	0xFE1
 15334                           indf2	equ	0xFDF
 15335                           postinc2	equ	0xFDE
 15336                           postdec2	equ	0xFDD
 15337                           plusw2	equ	0xFDB
 15338                           fsr2h	equ	0xFDA
 15339                           fsr2l	equ	0xFD9
 15340                           status	equ	0xFD8
 15341                           
 15342 ;; *************** function _USBCheckHIDRequest *****************
 15343 ;; Defined at:
 15344 ;;		line 153 in file "usb_device_hid.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;		None
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;		None
 15349 ;; Return value:  Size  Location     Type
 15350 ;;                  1    wreg      void 
 15351 ;; Registers used:
 15352 ;;		wreg, status,2, status,0
 15353 ;; Tracked objects:
 15354 ;;		On entry : 0/0
 15355 ;;		On exit  : 0/0
 15356 ;;		Unchanged: 0/0
 15357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15362 ;;Total ram usage:        0 bytes
 15363 ;; Hardware stack levels used:    1
 15364 ;; This function calls:
 15365 ;;		Nothing
 15366 ;; This function is called by:
 15367 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text69
 15372  00658C                     __ptext69:
 15373                           	opt stack 0
 15374  00658C                     _USBCheckHIDRequest:
 15375                           	opt stack 28
 15376                           
 15377                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15378                           
 15379                           ;incstack = 0
 15380  00658C  010D               	movlb	13	; () banked
 15381  00658E  5130               	movf	48,w,b	;volatile
 15382  006590  0B1F               	andlw	31
 15383  006592  06E8               	decf	wreg,f,c
 15384  006594  A4D8               	btfss	status,2,c
 15385  006596  0012               	return	
 15386                           
 15387                           ; BSR set to: 13
 15388                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15389                           
 15390                           ; BSR set to: 13
 15391                           
 15392                           ; BSR set to: 13
 15393  006598  5134               	movf	52,w,b	;volatile
 15394  00659A  A4D8               	btfss	status,2,c
 15395  00659C  0012               	return	
 15396                           
 15397                           ; BSR set to: 13
 15398                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15399                           
 15400                           ; BSR set to: 13
 15401                           
 15402                           ; BSR set to: 13
 15403  00659E  0E06               	movlw	6
 15404  0065A0  1931               	xorwf	49,w,b	;volatile
 15405  0065A2  B4D8               	btfsc	status,2,c
 15406  0065A4  D01A               	goto	l411
 15407  0065A6  D022               	goto	l414
 15408  0065A8                     
 15409                           ; BSR set to: 13
 15410                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15411                           
 15412                           ; BSR set to: 13
 15413  0065A8  0100               	movlb	0	; () banked
 15414  0065AA  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 15415  0065AC  A4D8               	btfss	status,2,c
 15416  0065AE  D01E               	goto	l414
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 15420  0065B0  0EB9               	movlw	low (_configDescriptor1+18)
 15421  0065B2  6FC5               	movwf	_inPipes& (0+255),b
 15422  0065B4  0EBE               	movlw	high (_configDescriptor1+18)
 15423  0065B6  6FC6               	movwf	(_inPipes+1)& (0+255),b
 15424                           
 15425                           ; BSR set to: 0
 15426  0065B8  0E00               	movlw	0
 15427  0065BA  6FCA               	movwf	(_inPipes+5)& (0+255),b
 15428  0065BC  0E09               	movlw	9
 15429  0065BE  D00B               	goto	L13
 15430  0065C0                     l11552:
 15431                           
 15432                           ; BSR set to: 0
 15433  0065C0  0EC0               	movlw	192
 15434  0065C2  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15435                           
 15436                           ; BSR set to: 0
 15437                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 15438  0065C4  D013               	goto	l414
 15439  0065C6                     
 15440                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 15441                           
 15442                           ; BSR set to: 0
 15443  0065C6  0E6D               	movlw	low _hid_rpt01
 15444  0065C8  0100               	movlb	0	; () banked
 15445  0065CA  6FC5               	movwf	_inPipes& (0+255),b
 15446  0065CC  0EBF               	movlw	high _hid_rpt01
 15447  0065CE  6FC6               	movwf	(_inPipes+1)& (0+255),b
 15448                           
 15449                           ; BSR set to: 0
 15450  0065D0  0E00               	movlw	0
 15451  0065D2  6FCA               	movwf	(_inPipes+5)& (0+255),b
 15452  0065D4  0E1D               	movlw	29
 15453  0065D6                     L13:
 15454  0065D6  6FC9               	movwf	(_inPipes+4)& (0+255),b
 15455  0065D8  D7F3               	goto	l11552
 15456  0065DA                     l411:
 15457                           
 15458                           ; BSR set to: 0
 15459  0065DA  010D               	movlb	13	; () banked
 15460  0065DC  5133               	movf	51,w,b	;volatile
 15461                           
 15462                           ; Switch size 1, requested type "space"
 15463                           ; Number of cases is 3, Range of values is 33 to 35
 15464                           ; switch strategies available:
 15465                           ; Name         Instructions Cycles
 15466                           ; simple_byte           10     6 (average)
 15467                           ;	Chosen strategy is simple_byte
 15468  0065DE  0A21               	xorlw	33	; case 33
 15469  0065E0  B4D8               	btfsc	status,2,c
 15470  0065E2  D7E2               	goto	l412
 15471  0065E4  0A03               	xorlw	3	; case 34
 15472  0065E6  B4D8               	btfsc	status,2,c
 15473  0065E8  D7EE               	goto	l415
 15474  0065EA  0A01               	xorlw	1	; case 35
 15475  0065EC                     l414:
 15476                           
 15477                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15478                           
 15479                           ; BSR set to: 13
 15480                           
 15481                           ; BSR set to: 13
 15482  0065EC  010D               	movlb	13	; () banked
 15483  0065EE  3930               	swapf	48,w,b	;volatile
 15484  0065F0  32E8               	rrcf	wreg,f,c
 15485  0065F2  0B03               	andlw	3
 15486  0065F4  06E8               	decf	wreg,f,c
 15487  0065F6  A4D8               	btfss	status,2,c
 15488  0065F8  0012               	return	
 15489  0065FA  D024               	goto	l418
 15490  0065FC                     
 15491                           ; BSR set to: 13
 15492                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15493                           
 15494                           ; BSR set to: 13
 15495  0065FC  0EB2               	movlw	low _idle_rate
 15496  0065FE  0100               	movlb	0	; () banked
 15497  006600  6FC5               	movwf	_inPipes& (0+255),b
 15498  006602  0E01               	movlw	high _idle_rate
 15499  006604  6FC6               	movwf	(_inPipes+1)& (0+255),b
 15500                           
 15501                           ; BSR set to: 0
 15502  006606  0E00               	movlw	0
 15503  006608  6FCA               	movwf	(_inPipes+5)& (0+255),b
 15504  00660A  0E01               	movlw	1
 15505  00660C  6FC9               	movwf	(_inPipes+4)& (0+255),b
 15506                           
 15507                           ; BSR set to: 0
 15508  00660E  0EC1               	movlw	193
 15509  006610  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15510                           
 15511                           ;usb_device_hid.c: 223: break;
 15512  006612  0012               	return	
 15513  006614                     
 15514                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15515                           
 15516                           ; BSR set to: 0
 15517  006614  0E80               	movlw	128
 15518  006616  0100               	movlb	0	; () banked
 15519  006618  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15520                           
 15521                           ; BSR set to: 0
 15522                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15523  00661A  CD33 F1B2          	movff	3379,_idle_rate	;volatile
 15524                           
 15525                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15526  00661E  0012               	return	
 15527  006620                     
 15528                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15529                           
 15530                           ; BSR set to: 0
 15531  006620  0EB1               	movlw	low _active_protocol
 15532  006622  0100               	movlb	0	; () banked
 15533  006624  6FC5               	movwf	_inPipes& (0+255),b
 15534  006626  0E01               	movlw	high _active_protocol
 15535  006628  6FC6               	movwf	(_inPipes+1)& (0+255),b
 15536                           
 15537                           ; BSR set to: 0
 15538  00662A  0E00               	movlw	0
 15539  00662C  6FCA               	movwf	(_inPipes+5)& (0+255),b
 15540  00662E  0E01               	movlw	1
 15541  006630  6FC9               	movwf	(_inPipes+4)& (0+255),b
 15542                           
 15543                           ; BSR set to: 0
 15544  006632  0E81               	movlw	129
 15545  006634  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15546                           
 15547                           ;usb_device_hid.c: 234: break;
 15548  006636  0012               	return	
 15549  006638                     
 15550                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15551                           
 15552                           ; BSR set to: 0
 15553  006638  0E80               	movlw	128
 15554  00663A  0100               	movlb	0	; () banked
 15555  00663C  6FC8               	movwf	(_inPipes+3)& (0+255),b
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15559  00663E  CD32 F1B1          	movff	3378,_active_protocol	;volatile
 15560                           
 15561                           ; BSR set to: 0
 15562                           ;usb_device_hid.c: 239: }
 15563                           
 15564                           ;usb_device_hid.c: 238: break;
 15565  006642  0012               	return	
 15566  006644                     l418:
 15567                           
 15568                           ; BSR set to: 0
 15569  006644  010D               	movlb	13	; () banked
 15570  006646  5131               	movf	49,w,b	;volatile
 15571                           
 15572                           ; Switch size 1, requested type "space"
 15573                           ; Number of cases is 6, Range of values is 1 to 11
 15574                           ; switch strategies available:
 15575                           ; Name         Instructions Cycles
 15576                           ; simple_byte           19    10 (average)
 15577                           ;	Chosen strategy is simple_byte
 15578  006648  0A01               	xorlw	1	; case 1
 15579  00664A  B4D8               	btfsc	status,2,c
 15580  00664C  0012               	return	
 15581  00664E  0A03               	xorlw	3	; case 2
 15582  006650  B4D8               	btfsc	status,2,c
 15583  006652  D7D4               	goto	l422
 15584  006654  0A01               	xorlw	1	; case 3
 15585  006656  B4D8               	btfsc	status,2,c
 15586  006658  D7E3               	goto	l424
 15587  00665A  0A0A               	xorlw	10	; case 9
 15588  00665C  B4D8               	btfsc	status,2,c
 15589  00665E  0012               	return	
 15590  006660  0A03               	xorlw	3	; case 10
 15591  006662  B4D8               	btfsc	status,2,c
 15592  006664  D7D7               	goto	l423
 15593  006666  0A01               	xorlw	1	; case 11
 15594  006668  A4D8               	btfss	status,2,c
 15595  00666A  0012               	return	
 15596  00666C  D7E5               	goto	l425
 15597  00666E                     __end_of_USBCheckHIDRequest:
 15598                           	opt stack 0
 15599                           tblptru	equ	0xFF8
 15600                           tblptrh	equ	0xFF7
 15601                           tblptrl	equ	0xFF6
 15602                           tablat	equ	0xFF5
 15603                           prodh	equ	0xFF4
 15604                           prodl	equ	0xFF3
 15605                           intcon	equ	0xFF2
 15606                           intcon2	equ	0xFF1
 15607                           intcon3	equ	0xFF0
 15608                           indf0	equ	0xFEF
 15609                           postinc0	equ	0xFEE
 15610                           fsr0h	equ	0xFEA
 15611                           fsr0l	equ	0xFE9
 15612                           wreg	equ	0xFE8
 15613                           indf1	equ	0xFE7
 15614                           postdec1	equ	0xFE5
 15615                           plusw1	equ	0xFE3
 15616                           fsr1h	equ	0xFE2
 15617                           fsr1l	equ	0xFE1
 15618                           indf2	equ	0xFDF
 15619                           postinc2	equ	0xFDE
 15620                           postdec2	equ	0xFDD
 15621                           plusw2	equ	0xFDB
 15622                           fsr2h	equ	0xFDA
 15623                           fsr2l	equ	0xFD9
 15624                           status	equ	0xFD8
 15625                           
 15626 ;; *************** function _SYSTEM_Initialize *****************
 15627 ;; Defined at:
 15628 ;;		line 80 in file "system.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;  state           1    wreg     enum E6623
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;  state           1    4[COMRAM] enum E6623
 15633 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15634 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15635 ;; Return value:  Size  Location     Type
 15636 ;;                  1    wreg      void 
 15637 ;; Registers used:
 15638 ;;		wreg, status,2, status,0
 15639 ;; Tracked objects:
 15640 ;;		On entry : 0/0
 15641 ;;		On exit  : 0/0
 15642 ;;		Unchanged: 0/0
 15643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15645 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15647 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15648 ;;Total ram usage:        5 bytes
 15649 ;; Hardware stack levels used:    1
 15650 ;; This function calls:
 15651 ;;		Nothing
 15652 ;; This function is called by:
 15653 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15654 ;;		_main
 15655 ;; This function uses a non-reentrant model
 15656 ;;
 15657                           
 15658                           	psect	text70
 15659  00943E                     __ptext70:
 15660                           	opt stack 0
 15661  00943E                     _SYSTEM_Initialize:
 15662                           	opt stack 28
 15663                           
 15664                           ;incstack = 0
 15665                           ;SYSTEM_Initialize@state stored from wreg
 15666  00943E  6E05               	movwf	SYSTEM_Initialize@state,c
 15667                           
 15668                           ;system.c: 82: switch(state)
 15669  009440  D01D               	goto	l924
 15670  009442                     
 15671                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15672  009442  0E02               	movlw	2
 15673  009444  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15674  009446  0E58               	movlw	88
 15675  009448  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15676                           
 15677                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15678  00944A  8C9B               	bsf	3995,6,c	;volatile
 15679  00944C                     l11738:
 15680  00944C  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15681  00944E  A0D8               	btfss	status,0,c
 15682  009450  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15683  009452  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15684  009454  E1FB               	bnz	l11738
 15685  009456  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15686  009458  B4D8               	btfsc	status,2,c
 15687  00945A  0012               	return	
 15688  00945C  D7F7               	goto	l927
 15689  00945E                     
 15690                           ;system.c: 119: OSCCON = 0x70;
 15691  00945E  0E70               	movlw	112
 15692  009460  6ED3               	movwf	4051,c	;volatile
 15693                           
 15694                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15695  009462  0E03               	movlw	3
 15696  009464  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3117+1,c
 15697  009466  0E20               	movlw	32
 15698  009468  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3117,c
 15699  00946A                     l11742:
 15700  00946A  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3117,f,c
 15701  00946C  A0D8               	btfss	status,0,c
 15702  00946E  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3117+1,f,c
 15703  009470  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3117,w,c
 15704  009472  E1FB               	bnz	l11742
 15705  009474  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3117+1,w,c
 15706  009476  B4D8               	btfsc	status,2,c
 15707  009478  0012               	return	
 15708  00947A  D7F7               	goto	l933
 15709  00947C                     l924:
 15710  00947C  5005               	movf	SYSTEM_Initialize@state,w,c
 15711                           
 15712                           ; Switch size 1, requested type "space"
 15713                           ; Number of cases is 3, Range of values is 0 to 2
 15714                           ; switch strategies available:
 15715                           ; Name         Instructions Cycles
 15716                           ; simple_byte           10     6 (average)
 15717                           ;	Chosen strategy is simple_byte
 15718  00947E  0A00               	xorlw	0	; case 0
 15719  009480  B4D8               	btfsc	status,2,c
 15720  009482  D7DF               	goto	l925
 15721  009484  0A01               	xorlw	1	; case 1
 15722  009486  B4D8               	btfsc	status,2,c
 15723  009488  0012               	return	
 15724  00948A  0A03               	xorlw	3	; case 2
 15725  00948C  A4D8               	btfss	status,2,c
 15726  00948E  0012               	return	
 15727  009490  D7E6               	goto	l931
 15728  009492                     __end_of_SYSTEM_Initialize:
 15729                           	opt stack 0
 15730                           tblptru	equ	0xFF8
 15731                           tblptrh	equ	0xFF7
 15732                           tblptrl	equ	0xFF6
 15733                           tablat	equ	0xFF5
 15734                           prodh	equ	0xFF4
 15735                           prodl	equ	0xFF3
 15736                           intcon	equ	0xFF2
 15737                           intcon2	equ	0xFF1
 15738                           intcon3	equ	0xFF0
 15739                           indf0	equ	0xFEF
 15740                           postinc0	equ	0xFEE
 15741                           fsr0h	equ	0xFEA
 15742                           fsr0l	equ	0xFE9
 15743                           wreg	equ	0xFE8
 15744                           indf1	equ	0xFE7
 15745                           postdec1	equ	0xFE5
 15746                           plusw1	equ	0xFE3
 15747                           fsr1h	equ	0xFE2
 15748                           fsr1l	equ	0xFE1
 15749                           indf2	equ	0xFDF
 15750                           postinc2	equ	0xFDE
 15751                           postdec2	equ	0xFDD
 15752                           plusw2	equ	0xFDB
 15753                           fsr2h	equ	0xFDA
 15754                           fsr2l	equ	0xFD9
 15755                           status	equ	0xFD8
 15756                           
 15757 ;; *************** function _MSDTransferTerminated *****************
 15758 ;; Defined at:
 15759 ;;		line 1674 in file "usb_device_msd.c"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;  handle          2   11[COMRAM] PTR void 
 15762 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15763 ;;		 -> BDT(48), 
 15764 ;; Auto vars:     Size  Location     Type
 15765 ;;		None
 15766 ;; Return value:  Size  Location     Type
 15767 ;;                  1    wreg      void 
 15768 ;; Registers used:
 15769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15770 ;; Tracked objects:
 15771 ;;		On entry : 0/0
 15772 ;;		On exit  : 0/0
 15773 ;;		Unchanged: 0/0
 15774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15779 ;;Total ram usage:        4 bytes
 15780 ;; Hardware stack levels used:    1
 15781 ;; Hardware stack levels required when called:    1
 15782 ;; This function calls:
 15783 ;;		_USBStallEndpoint
 15784 ;;		_USBTransferOnePacket
 15785 ;; This function is called by:
 15786 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15787 ;; This function uses a non-reentrant model
 15788 ;;
 15789                           
 15790                           	psect	text71
 15791  0091E4                     __ptext71:
 15792                           	opt stack 0
 15793  0091E4                     _MSDTransferTerminated:
 15794                           	opt stack 27
 15795                           
 15796                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15797                           
 15798                           ;incstack = 0
 15799  0091E4  0101               	movlb	1	; () banked
 15800  0091E6  5190               	movf	_MSDCBWValid& (0+255),w,b
 15801  0091E8  A4D8               	btfss	status,2,c
 15802  0091EA  D00B               	goto	l764
 15803                           
 15804                           ; BSR set to: 1
 15805                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15806  0091EC  0E01               	movlw	1
 15807  0091EE  6E01               	movwf	USBStallEndpoint@dir,c
 15808  0091F0  0E02               	movlw	2
 15809  0091F2  EC74  F02B         	call	_USBStallEndpoint
 15810                           
 15811                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15812  0091F6  0E00               	movlw	0
 15813  0091F8  6E01               	movwf	USBStallEndpoint@dir,c
 15814  0091FA  0E02               	movlw	2
 15815  0091FC  EC74  F02B         	call	_USBStallEndpoint
 15816                           
 15817                           ;usb_device_msd.c: 1681: }
 15818  009200  0012               	return	
 15819  009202                     l764:
 15820  009202  C14A  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15821  009206  C14B  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15822  00920A  500E               	movf	_MSDTransferTerminated$2407,w,c
 15823  00920C  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15824  00920E  E114               	bnz	l767
 15825  009210  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15826  009212  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15827  009214  A4D8               	btfss	status,2,c
 15828  009216  0012               	return	
 15829                           
 15830                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15831  009218  0E00               	movlw	0
 15832  00921A  6E01               	movwf	USBTransferOnePacket@dir,c
 15833  00921C  0E40               	movlw	64
 15834  00921E  6E02               	movwf	USBTransferOnePacket@data,c
 15835  009220  0E0D               	movlw	13
 15836  009222  6E03               	movwf	USBTransferOnePacket@data+1,c
 15837  009224  0E40               	movlw	64
 15838  009226  6E04               	movwf	USBTransferOnePacket@len,c
 15839  009228  0E02               	movlw	2
 15840  00922A  ECFC  F02C         	call	_USBTransferOnePacket
 15841  00922E  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15842  009232  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15843  009236  0012               	return	
 15844  009238                     l767:
 15845  009238  0012               	return		;funcret
 15846  00923A                     __end_of_MSDTransferTerminated:
 15847                           	opt stack 0
 15848                           tblptru	equ	0xFF8
 15849                           tblptrh	equ	0xFF7
 15850                           tblptrl	equ	0xFF6
 15851                           tablat	equ	0xFF5
 15852                           prodh	equ	0xFF4
 15853                           prodl	equ	0xFF3
 15854                           intcon	equ	0xFF2
 15855                           intcon2	equ	0xFF1
 15856                           intcon3	equ	0xFF0
 15857                           indf0	equ	0xFEF
 15858                           postinc0	equ	0xFEE
 15859                           fsr0h	equ	0xFEA
 15860                           fsr0l	equ	0xFE9
 15861                           wreg	equ	0xFE8
 15862                           indf1	equ	0xFE7
 15863                           postdec1	equ	0xFE5
 15864                           plusw1	equ	0xFE3
 15865                           fsr1h	equ	0xFE2
 15866                           fsr1l	equ	0xFE1
 15867                           indf2	equ	0xFDF
 15868                           postinc2	equ	0xFDE
 15869                           postdec2	equ	0xFDD
 15870                           plusw2	equ	0xFDB
 15871                           fsr2h	equ	0xFDA
 15872                           fsr2l	equ	0xFD9
 15873                           status	equ	0xFD8
 15874                           
 15875 ;; *************** function _APP_DeviceMSDInitialize *****************
 15876 ;; Defined at:
 15877 ;;		line 84 in file "app_device_msd.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;		None
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;		None
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      void 
 15884 ;; Registers used:
 15885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15895 ;;Total ram usage:        0 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; Hardware stack levels required when called:    2
 15898 ;; This function calls:
 15899 ;;		_USBEnableEndpoint
 15900 ;;		_USBMSDInit
 15901 ;; This function is called by:
 15902 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           	psect	text72
 15907  00A1D6                     __ptext72:
 15908                           	opt stack 0
 15909  00A1D6                     _APP_DeviceMSDInitialize:
 15910                           	opt stack 26
 15911                           
 15912                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15913                           
 15914                           ;incstack = 0
 15915  00A1D6  0E1E               	movlw	30
 15916  00A1D8  6E09               	movwf	USBEnableEndpoint@options,c
 15917  00A1DA  0E02               	movlw	2
 15918  00A1DC  ECAC  F04C         	call	_USBEnableEndpoint
 15919                           
 15920                           ;app_device_msd.c: 93: USBMSDInit();
 15921  00A1E0  EC7B  F02C         	call	_USBMSDInit	;wreg free
 15922  00A1E4  0012               	return		;funcret
 15923  00A1E6                     __end_of_APP_DeviceMSDInitialize:
 15924                           	opt stack 0
 15925                           tblptru	equ	0xFF8
 15926                           tblptrh	equ	0xFF7
 15927                           tblptrl	equ	0xFF6
 15928                           tablat	equ	0xFF5
 15929                           prodh	equ	0xFF4
 15930                           prodl	equ	0xFF3
 15931                           intcon	equ	0xFF2
 15932                           intcon2	equ	0xFF1
 15933                           intcon3	equ	0xFF0
 15934                           indf0	equ	0xFEF
 15935                           postinc0	equ	0xFEE
 15936                           fsr0h	equ	0xFEA
 15937                           fsr0l	equ	0xFE9
 15938                           wreg	equ	0xFE8
 15939                           indf1	equ	0xFE7
 15940                           postdec1	equ	0xFE5
 15941                           plusw1	equ	0xFE3
 15942                           fsr1h	equ	0xFE2
 15943                           fsr1l	equ	0xFE1
 15944                           indf2	equ	0xFDF
 15945                           postinc2	equ	0xFDE
 15946                           postdec2	equ	0xFDD
 15947                           plusw2	equ	0xFDB
 15948                           fsr2h	equ	0xFDA
 15949                           fsr2l	equ	0xFD9
 15950                           status	equ	0xFD8
 15951                           
 15952 ;; *************** function _USBMSDInit *****************
 15953 ;; Defined at:
 15954 ;;		line 142 in file "usb_device_msd.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;		None
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;		None
 15959 ;; Return value:  Size  Location     Type
 15960 ;;                  1    wreg      void 
 15961 ;; Registers used:
 15962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15963 ;; Tracked objects:
 15964 ;;		On entry : 0/0
 15965 ;;		On exit  : 0/0
 15966 ;;		Unchanged: 0/0
 15967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15970 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15972 ;;Total ram usage:        3 bytes
 15973 ;; Hardware stack levels used:    1
 15974 ;; Hardware stack levels required when called:    1
 15975 ;; This function calls:
 15976 ;;		_ExternalFlash_MediaDetect
 15977 ;;		_ExternalFlash_MediaInitialize
 15978 ;;		_ResetSenseData
 15979 ;;		_USBTransferOnePacket
 15980 ;; This function is called by:
 15981 ;;		_APP_DeviceMSDInitialize
 15982 ;; This function uses a non-reentrant model
 15983 ;;
 15984                           
 15985                           	psect	text73
 15986  0058F6                     __ptext73:
 15987                           	opt stack 0
 15988  0058F6                     _USBMSDInit:
 15989                           	opt stack 26
 15990                           
 15991                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15992                           
 15993                           ;incstack = 0
 15994  0058F6  0E00               	movlw	0
 15995  0058F8  6E01               	movwf	USBTransferOnePacket@dir,c
 15996  0058FA  0E40               	movlw	64
 15997  0058FC  6E02               	movwf	USBTransferOnePacket@data,c
 15998  0058FE  0E0D               	movlw	13
 15999  005900  6E03               	movwf	USBTransferOnePacket@data+1,c
 16000  005902  0E40               	movlw	64
 16001  005904  6E04               	movwf	USBTransferOnePacket@len,c
 16002  005906  0E02               	movlw	2
 16003  005908  ECFC  F02C         	call	_USBTransferOnePacket
 16004  00590C  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16005  005910  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16006  005914  C0CF  F0DB         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 16007  005918  C0D0  F0DC         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 16008                           
 16009                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 16010  00591C  0E00               	movlw	0
 16011  00591E  0100               	movlb	0	; () banked
 16012  005920  6FEB               	movwf	_MSD_State& (0+255),b
 16013                           
 16014                           ; BSR set to: 0
 16015                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 16016  005922  69EA               	setf	_MSDCommandState& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 16020  005924  0E00               	movlw	0
 16021  005926  6FE9               	movwf	_MSDReadState& (0+255),b
 16022                           
 16023                           ; BSR set to: 0
 16024                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 16025  005928  0E00               	movlw	0
 16026  00592A  6FE8               	movwf	_MSDWriteState& (0+255),b
 16027                           
 16028                           ; BSR set to: 0
 16029                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 16030  00592C  0E00               	movlw	0
 16031  00592E  6FE5               	movwf	_MSDHostNoData& (0+255),b
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 16035  005930  0E00               	movlw	0
 16036  005932  0101               	movlb	1	; () banked
 16037  005934  6F5C               	movwf	_gblNumBLKS& (0+255),b
 16038  005936  0E00               	movlw	0
 16039  005938  6F5D               	movwf	(_gblNumBLKS+1)& (0+255),b
 16040  00593A  0E00               	movlw	0
 16041  00593C  6F5E               	movwf	(_gblNumBLKS+2)& (0+255),b
 16042  00593E  0E00               	movlw	0
 16043  005940  6F5F               	movwf	(_gblNumBLKS+3)& (0+255),b
 16044                           
 16045                           ; BSR set to: 1
 16046                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 16047  005942  0E00               	movlw	0
 16048  005944  6F58               	movwf	_gblBLKLen& (0+255),b
 16049  005946  0E00               	movlw	0
 16050  005948  6F59               	movwf	(_gblBLKLen+1)& (0+255),b
 16051  00594A  0E00               	movlw	0
 16052  00594C  6F5A               	movwf	(_gblBLKLen+2)& (0+255),b
 16053  00594E  0E00               	movlw	0
 16054  005950  6F5B               	movwf	(_gblBLKLen+3)& (0+255),b
 16055                           
 16056                           ; BSR set to: 1
 16057                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 16058  005952  0E01               	movlw	1
 16059  005954  6F90               	movwf	_MSDCBWValid& (0+255),b
 16060                           
 16061                           ; BSR set to: 1
 16062                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 16063  005956  0E00               	movlw	0
 16064  005958  6F85               	movwf	(_gblMediaPresent+1)& (0+255),b
 16065  00595A  0E00               	movlw	0
 16066  00595C  6F84               	movwf	_gblMediaPresent& (0+255),b
 16067                           
 16068                           ; BSR set to: 1
 16069                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 16070  00595E  0E00               	movlw	0
 16071  005960  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 16072  005962  D046               	goto	l518
 16073  005964                     
 16074                           ; BSR set to: 1
 16075                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 16076                           
 16077                           ; BSR set to: 1
 16078  005964  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16079  005966  0D01               	mullw	1
 16080  005968  0EE6               	movlw	low _SoftDetach
 16081  00596A  24F3               	addwf	prodl,w,c
 16082  00596C  6ED9               	movwf	fsr2l,c
 16083  00596E  0E00               	movlw	high _SoftDetach
 16084  005970  20F4               	addwfc	prodh,w,c
 16085  005972  6EDA               	movwf	fsr2h,c
 16086  005974  0E00               	movlw	0
 16087  005976  6EDF               	movwf	indf2,c
 16088                           
 16089                           ; BSR set to: 1
 16090                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 16091  005978  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 16092  00597C  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 16093  005980  D801               	call	u7988
 16094  005982  D009               	goto	u7989
 16095  005984                     u7988:
 16096  005984  0005               	push	
 16097  005986  6EFA               	movwf	pclath,c
 16098  005988  51B9               	movf	(_LUN+6)& (0+255),w,b
 16099  00598A  6EFD               	movwf	tosl,c
 16100  00598C  51BA               	movf	(_LUN+7)& (0+255),w,b
 16101  00598E  6EFE               	movwf	tosh,c
 16102  005990  6AFF               	clrf	tosu,c
 16103  005992  50FA               	movf	pclath,w,c
 16104  005994  0012               	return		;indir
 16105  005996                     u7989:
 16106  005996  0900               	iorlw	0
 16107  005998  B4D8               	btfsc	status,2,c
 16108  00599A  D026               	goto	l521
 16109                           
 16110                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 16111  00599C  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 16112  0059A0  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 16113  0059A4  D801               	call	u8008
 16114  0059A6  D00A               	goto	u8009
 16115  0059A8                     u8008:
 16116  0059A8  0005               	push	
 16117  0059AA  6EFA               	movwf	pclath,c
 16118  0059AC  0101               	movlb	1	; () banked
 16119  0059AE  51B3               	movf	_LUN& (0+255),w,b
 16120  0059B0  6EFD               	movwf	tosl,c
 16121  0059B2  51B4               	movf	(_LUN+1)& (0+255),w,b
 16122  0059B4  6EFE               	movwf	tosh,c
 16123  0059B6  6AFF               	clrf	tosu,c
 16124  0059B8  50FA               	movf	pclath,w,c
 16125  0059BA  0012               	return		;indir
 16126  0059BC                     u8009:
 16127  0059BC  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 16128  0059BE  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 16129  0059C0  B4D8               	btfsc	status,2,c
 16130  0059C2  D012               	goto	l521
 16131                           
 16132                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 16133  0059C4  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 16134  0059C8  0E01               	movlw	1
 16135  0059CA  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 16136  0059CC  0E00               	movlw	0
 16137  0059CE  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 16138  0059D0  2A0C               	incf	??_USBMSDInit,f,c
 16139  0059D2  D003               	goto	u8024
 16140  0059D4                     u8025:
 16141  0059D4  90D8               	bcf	status,0,c
 16142  0059D6  360D               	rlcf	??_USBMSDInit+1,f,c
 16143  0059D8  360E               	rlcf	??_USBMSDInit+2,f,c
 16144  0059DA                     u8024:
 16145  0059DA  2E0C               	decfsz	??_USBMSDInit,f,c
 16146  0059DC  D7FB               	goto	u8025
 16147  0059DE  500D               	movf	??_USBMSDInit+1,w,c
 16148  0059E0  0101               	movlb	1	; () banked
 16149  0059E2  1384               	iorwf	_gblMediaPresent& (0+255),f,b
 16150  0059E4  500E               	movf	??_USBMSDInit+2,w,c
 16151  0059E6  1385               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 16152  0059E8                     l521:
 16153                           
 16154                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 16155                           
 16156                           ; BSR set to: 1
 16157                           
 16158                           ; BSR set to: 1
 16159  0059E8  ECF6  F046         	call	_ResetSenseData	;wreg free
 16160  0059EC  0101               	movlb	1	; () banked
 16161  0059EE  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 16162  0059F0                     l518:
 16163                           
 16164                           ; BSR set to: 1
 16165                           
 16166                           ; BSR set to: 1
 16167  0059F0  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16168  0059F2  A4D8               	btfss	status,2,c
 16169  0059F4  0012               	return	
 16170  0059F6  D7B6               	goto	l519
 16171  0059F8                     __end_of_USBMSDInit:
 16172                           	opt stack 0
 16173                           tosu	equ	0xFFF
 16174                           tosh	equ	0xFFE
 16175                           tosl	equ	0xFFD
 16176                           pclath	equ	0xFFA
 16177                           tblptru	equ	0xFF8
 16178                           tblptrh	equ	0xFF7
 16179                           tblptrl	equ	0xFF6
 16180                           tablat	equ	0xFF5
 16181                           prodh	equ	0xFF4
 16182                           prodl	equ	0xFF3
 16183                           intcon	equ	0xFF2
 16184                           intcon2	equ	0xFF1
 16185                           intcon3	equ	0xFF0
 16186                           indf0	equ	0xFEF
 16187                           postinc0	equ	0xFEE
 16188                           fsr0h	equ	0xFEA
 16189                           fsr0l	equ	0xFE9
 16190                           wreg	equ	0xFE8
 16191                           indf1	equ	0xFE7
 16192                           postdec1	equ	0xFE5
 16193                           plusw1	equ	0xFE3
 16194                           fsr1h	equ	0xFE2
 16195                           fsr1l	equ	0xFE1
 16196                           indf2	equ	0xFDF
 16197                           postinc2	equ	0xFDE
 16198                           postdec2	equ	0xFDD
 16199                           plusw2	equ	0xFDB
 16200                           fsr2h	equ	0xFDA
 16201                           fsr2l	equ	0xFD9
 16202                           status	equ	0xFD8
 16203                           
 16204 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 16205 ;; Defined at:
 16206 ;;		line 47 in file "app_device_custom_hid.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;		None
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;		None
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  1    wreg      void 
 16213 ;; Registers used:
 16214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16224 ;;Total ram usage:        0 bytes
 16225 ;; Hardware stack levels used:    1
 16226 ;; Hardware stack levels required when called:    2
 16227 ;; This function calls:
 16228 ;;		_USBEnableEndpoint
 16229 ;;		_USBTransferOnePacket
 16230 ;; This function is called by:
 16231 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16232 ;; This function uses a non-reentrant model
 16233 ;;
 16234                           
 16235                           	psect	text74
 16236  009AA8                     __ptext74:
 16237                           	opt stack 0
 16238  009AA8                     _APP_DeviceCustomHIDInitialize:
 16239                           	opt stack 26
 16240                           
 16241                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 16242                           
 16243                           ; BSR set to: 1
 16244                           ;incstack = 0
 16245  009AA8  0E00               	movlw	0
 16246  009AAA  0101               	movlb	1	; () banked
 16247  009AAC  6F80               	movwf	_USBInHandle& (0+255),b
 16248  009AAE  0E00               	movlw	0
 16249  009AB0  6F81               	movwf	(_USBInHandle+1)& (0+255),b
 16250                           
 16251                           ; BSR set to: 1
 16252                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 16253  009AB2  0E1E               	movlw	30
 16254  009AB4  6E09               	movwf	USBEnableEndpoint@options,c
 16255  009AB6  0E01               	movlw	1
 16256  009AB8  ECAC  F04C         	call	_USBEnableEndpoint
 16257                           
 16258                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 16259  009ABC  0E00               	movlw	0
 16260  009ABE  6E01               	movwf	USBTransferOnePacket@dir,c
 16261  009AC0  0E50               	movlw	low _ReceivedDataBuffer
 16262  009AC2  6E02               	movwf	USBTransferOnePacket@data,c
 16263  009AC4  0E02               	movlw	high _ReceivedDataBuffer
 16264  009AC6  6E03               	movwf	USBTransferOnePacket@data+1,c
 16265  009AC8  0E40               	movlw	64
 16266  009ACA  6E04               	movwf	USBTransferOnePacket@len,c
 16267  009ACC  0E01               	movlw	1
 16268  009ACE  ECFC  F02C         	call	_USBTransferOnePacket
 16269  009AD2  C001  F182         	movff	?_USBTransferOnePacket,_USBOutHandle
 16270  009AD6  C002  F183         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 16271  009ADA  0012               	return		;funcret
 16272  009ADC                     __end_of_APP_DeviceCustomHIDInitialize:
 16273                           	opt stack 0
 16274                           tosu	equ	0xFFF
 16275                           tosh	equ	0xFFE
 16276                           tosl	equ	0xFFD
 16277                           pclath	equ	0xFFA
 16278                           tblptru	equ	0xFF8
 16279                           tblptrh	equ	0xFF7
 16280                           tblptrl	equ	0xFF6
 16281                           tablat	equ	0xFF5
 16282                           prodh	equ	0xFF4
 16283                           prodl	equ	0xFF3
 16284                           intcon	equ	0xFF2
 16285                           intcon2	equ	0xFF1
 16286                           intcon3	equ	0xFF0
 16287                           indf0	equ	0xFEF
 16288                           postinc0	equ	0xFEE
 16289                           fsr0h	equ	0xFEA
 16290                           fsr0l	equ	0xFE9
 16291                           wreg	equ	0xFE8
 16292                           indf1	equ	0xFE7
 16293                           postdec1	equ	0xFE5
 16294                           plusw1	equ	0xFE3
 16295                           fsr1h	equ	0xFE2
 16296                           fsr1l	equ	0xFE1
 16297                           indf2	equ	0xFDF
 16298                           postinc2	equ	0xFDE
 16299                           postdec2	equ	0xFDD
 16300                           plusw2	equ	0xFDB
 16301                           fsr2h	equ	0xFDA
 16302                           fsr2l	equ	0xFD9
 16303                           status	equ	0xFD8
 16304                           
 16305 ;; *************** function _USBEnableEndpoint *****************
 16306 ;; Defined at:
 16307 ;;		line 878 in file "usb_device.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;  ep              1    wreg     unsigned char 
 16310 ;;  options         1    8[COMRAM] unsigned char 
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;  ep              1   11[COMRAM] unsigned char 
 16313 ;;  p               2    9[COMRAM] PTR unsigned char 
 16314 ;;		 -> UEP0(1), 
 16315 ;; Return value:  Size  Location     Type
 16316 ;;                  1    wreg      void 
 16317 ;; Registers used:
 16318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16324 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16325 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16327 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16328 ;;Total ram usage:        4 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; Hardware stack levels required when called:    1
 16331 ;; This function calls:
 16332 ;;		_USBConfigureEndpoint
 16333 ;; This function is called by:
 16334 ;;		_APP_DeviceCustomHIDInitialize
 16335 ;;		_APP_DeviceMSDInitialize
 16336 ;; This function uses a non-reentrant model
 16337 ;;
 16338                           
 16339                           	psect	text75
 16340  009958                     __ptext75:
 16341                           	opt stack 0
 16342  009958                     _USBEnableEndpoint:
 16343                           	opt stack 26
 16344                           
 16345                           ;incstack = 0
 16346                           ;USBEnableEndpoint@ep stored from wreg
 16347  009958  6E0C               	movwf	USBEnableEndpoint@ep,c
 16348                           
 16349                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 16350  00995A  A409               	btfss	USBEnableEndpoint@options,2,c
 16351  00995C  D005               	goto	l178
 16352                           
 16353                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 16354  00995E  0E00               	movlw	0
 16355  009960  6E01               	movwf	USBConfigureEndpoint@direction,c
 16356  009962  500C               	movf	USBEnableEndpoint@ep,w,c
 16357  009964  EC7F  F041         	call	_USBConfigureEndpoint
 16358  009968                     l178:
 16359                           
 16360                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16361  009968  A209               	btfss	USBEnableEndpoint@options,1,c
 16362  00996A  D005               	goto	l179
 16363                           
 16364                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16365  00996C  0E01               	movlw	1
 16366  00996E  6E01               	movwf	USBConfigureEndpoint@direction,c
 16367  009970  500C               	movf	USBEnableEndpoint@ep,w,c
 16368  009972  EC7F  F041         	call	_USBConfigureEndpoint
 16369  009976                     l179:
 16370                           
 16371                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16372  009976  500C               	movf	USBEnableEndpoint@ep,w,c
 16373  009978  0D01               	mullw	1
 16374  00997A  0E26               	movlw	38
 16375  00997C  24F3               	addwf	prodl,w,c
 16376  00997E  6E0A               	movwf	USBEnableEndpoint@p,c
 16377  009980  0E0F               	movlw	15
 16378  009982  20F4               	addwfc	prodh,w,c
 16379  009984  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16380                           
 16381                           ;usb_device.c: 901: *p = options;
 16382  009986  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16383  00998A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16384  00998E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16385  009992  0012               	return		;funcret
 16386  009994                     __end_of_USBEnableEndpoint:
 16387                           	opt stack 0
 16388                           tosu	equ	0xFFF
 16389                           tosh	equ	0xFFE
 16390                           tosl	equ	0xFFD
 16391                           pclath	equ	0xFFA
 16392                           tblptru	equ	0xFF8
 16393                           tblptrh	equ	0xFF7
 16394                           tblptrl	equ	0xFF6
 16395                           tablat	equ	0xFF5
 16396                           prodh	equ	0xFF4
 16397                           prodl	equ	0xFF3
 16398                           intcon	equ	0xFF2
 16399                           intcon2	equ	0xFF1
 16400                           intcon3	equ	0xFF0
 16401                           indf0	equ	0xFEF
 16402                           postinc0	equ	0xFEE
 16403                           fsr0h	equ	0xFEA
 16404                           fsr0l	equ	0xFE9
 16405                           wreg	equ	0xFE8
 16406                           indf1	equ	0xFE7
 16407                           postdec1	equ	0xFE5
 16408                           plusw1	equ	0xFE3
 16409                           fsr1h	equ	0xFE2
 16410                           fsr1l	equ	0xFE1
 16411                           indf2	equ	0xFDF
 16412                           postinc2	equ	0xFDE
 16413                           postdec2	equ	0xFDD
 16414                           plusw2	equ	0xFDB
 16415                           fsr2h	equ	0xFDA
 16416                           fsr2l	equ	0xFD9
 16417                           status	equ	0xFD8
 16418                           
 16419 ;; *************** function _USBConfigureEndpoint *****************
 16420 ;; Defined at:
 16421 ;;		line 1545 in file "usb_device.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;  EPNum           1    wreg     unsigned char 
 16424 ;;  direction       1    0[COMRAM] unsigned char 
 16425 ;; Auto vars:     Size  Location     Type
 16426 ;;  EPNum           1    5[COMRAM] unsigned char 
 16427 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16428 ;;		 -> BDT(48), 
 16429 ;; Return value:  Size  Location     Type
 16430 ;;                  1    wreg      void 
 16431 ;; Registers used:
 16432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16433 ;; Tracked objects:
 16434 ;;		On entry : 0/0
 16435 ;;		On exit  : 0/0
 16436 ;;		Unchanged: 0/0
 16437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16442 ;;Total ram usage:        8 bytes
 16443 ;; Hardware stack levels used:    1
 16444 ;; This function calls:
 16445 ;;		Nothing
 16446 ;; This function is called by:
 16447 ;;		_USBEnableEndpoint
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451                           	psect	text76
 16452  0082FE                     __ptext76:
 16453                           	opt stack 0
 16454  0082FE                     _USBConfigureEndpoint:
 16455                           	opt stack 26
 16456                           
 16457                           ;incstack = 0
 16458                           ;USBConfigureEndpoint@EPNum stored from wreg
 16459  0082FE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16460                           
 16461                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16462  008300  0E00               	movlw	0
 16463  008302  6E07               	movwf	USBConfigureEndpoint@handle,c
 16464  008304  0E0D               	movlw	13
 16465  008306  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16466                           
 16467                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16468  008308  5001               	movf	USBConfigureEndpoint@direction,w,c
 16469  00830A  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16470  00830C  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16471  00830E  90D8               	bcf	status,0,c
 16472  008310  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16473  008312  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16474  008314  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16475  008316  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16476  008318  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16477  00831A  90D8               	bcf	status,0,c
 16478  00831C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16479  00831E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16480  008320  90D8               	bcf	status,0,c
 16481  008322  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16482  008324  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16483  008326  5002               	movf	??_USBConfigureEndpoint,w,c
 16484  008328  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16485  00832A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16486  00832C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16487  00832E  90D8               	bcf	status,0,c
 16488  008330  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16489  008332  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16490  008334  90D8               	bcf	status,0,c
 16491  008336  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16492  008338  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16493  00833A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16494  00833C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16495  00833E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16496  008340  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16497                           
 16498                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16499  008342  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16500  008346  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16501  00834A  9EDF               	bcf	indf2,7,c
 16502                           
 16503                           ;usb_device.c: 1559: if(direction == 0)
 16504  00834C  5001               	movf	USBConfigureEndpoint@direction,w,c
 16505  00834E  A4D8               	btfss	status,2,c
 16506  008350  D007               	goto	l214
 16507                           
 16508                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16509  008352  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16510  008354  0D02               	mullw	2
 16511  008356  0E46               	movlw	low _pBDTEntryOut
 16512  008358  24F3               	addwf	prodl,w,c
 16513  00835A  6ED9               	movwf	fsr2l,c
 16514  00835C  0E01               	movlw	high _pBDTEntryOut
 16515  00835E  D006               	goto	L14
 16516  008360                     l214:
 16517                           
 16518                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16519  008360  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16520  008362  0D02               	mullw	2
 16521  008364  0ECB               	movlw	low _pBDTEntryIn
 16522  008366  24F3               	addwf	prodl,w,c
 16523  008368  6ED9               	movwf	fsr2l,c
 16524  00836A  0E00               	movlw	high _pBDTEntryIn
 16525  00836C                     L14:
 16526  00836C  20F4               	addwfc	prodh,w,c
 16527  00836E  6EDA               	movwf	fsr2h,c
 16528  008370  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16529  008374  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16530                           
 16531                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16532  008378  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16533  00837C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16534  008380  9CDF               	bcf	indf2,6,c
 16535                           
 16536                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16537  008382  EE20 F004          	lfsr	2,4
 16538  008386  5007               	movf	USBConfigureEndpoint@handle,w,c
 16539  008388  26D9               	addwf	fsr2l,f,c
 16540  00838A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16541  00838C  22DA               	addwfc	fsr2h,f,c
 16542  00838E  8CDF               	bsf	indf2,6,c
 16543  008390  0012               	return		;funcret
 16544  008392                     __end_of_USBConfigureEndpoint:
 16545                           	opt stack 0
 16546                           tosu	equ	0xFFF
 16547                           tosh	equ	0xFFE
 16548                           tosl	equ	0xFFD
 16549                           pclath	equ	0xFFA
 16550                           tblptru	equ	0xFF8
 16551                           tblptrh	equ	0xFF7
 16552                           tblptrl	equ	0xFF6
 16553                           tablat	equ	0xFF5
 16554                           prodh	equ	0xFF4
 16555                           prodl	equ	0xFF3
 16556                           intcon	equ	0xFF2
 16557                           intcon2	equ	0xFF1
 16558                           intcon3	equ	0xFF0
 16559                           indf0	equ	0xFEF
 16560                           postinc0	equ	0xFEE
 16561                           fsr0h	equ	0xFEA
 16562                           fsr0l	equ	0xFE9
 16563                           wreg	equ	0xFE8
 16564                           indf1	equ	0xFE7
 16565                           postdec1	equ	0xFE5
 16566                           plusw1	equ	0xFE3
 16567                           fsr1h	equ	0xFE2
 16568                           fsr1l	equ	0xFE1
 16569                           indf2	equ	0xFDF
 16570                           postinc2	equ	0xFDE
 16571                           postdec2	equ	0xFDD
 16572                           plusw2	equ	0xFDB
 16573                           fsr2h	equ	0xFDA
 16574                           fsr2l	equ	0xFD9
 16575                           status	equ	0xFD8
 16576                           
 16577 ;; *************** function _USBCtrlTrfOutHandler *****************
 16578 ;; Defined at:
 16579 ;;		line 2540 in file "usb_device.c"
 16580 ;; Parameters:    Size  Location     Type
 16581 ;;		None
 16582 ;; Auto vars:     Size  Location     Type
 16583 ;;		None
 16584 ;; Return value:  Size  Location     Type
 16585 ;;                  1    wreg      void 
 16586 ;; Registers used:
 16587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16588 ;; Tracked objects:
 16589 ;;		On entry : 0/0
 16590 ;;		On exit  : 0/0
 16591 ;;		Unchanged: 0/0
 16592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16597 ;;Total ram usage:        0 bytes
 16598 ;; Hardware stack levels used:    1
 16599 ;; Hardware stack levels required when called:    2
 16600 ;; This function calls:
 16601 ;;		_USBCtrlTrfRxService
 16602 ;; This function is called by:
 16603 ;;		_USBCtrlEPService
 16604 ;; This function uses a non-reentrant model
 16605 ;;
 16606                           
 16607                           	psect	text77
 16608  008F10                     __ptext77:
 16609                           	opt stack 0
 16610  008F10                     _USBCtrlTrfOutHandler:
 16611                           	opt stack 26
 16612                           
 16613                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16614                           
 16615                           ;incstack = 0
 16616  008F10  0E02               	movlw	2
 16617  008F12  0100               	movlb	0	; () banked
 16618  008F14  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16619  008F16  A4D8               	btfss	status,2,c
 16620  008F18  D003               	goto	l320
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16624  008F1A  ECDA  F029         	call	_USBCtrlTrfRxService	;wreg free
 16625                           
 16626                           ;usb_device.c: 2545: }
 16627  008F1E  0012               	return	
 16628  008F20                     l320:
 16629                           
 16630                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16631  008F20  0E00               	movlw	0
 16632  008F22  0100               	movlb	0	; () banked
 16633  008F24  6FF6               	movwf	_controlTransferState& (0+255),b
 16634                           
 16635                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16636  008F26  51F2               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16637  008F28  A4D8               	btfss	status,2,c
 16638  008F2A  D01F               	goto	l322
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16642  008F2C  EE20 F001          	lfsr	2,1
 16643  008F30  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16644  008F32  26D9               	addwf	fsr2l,f,c
 16645  008F34  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16646  008F36  22DA               	addwfc	fsr2h,f,c
 16647  008F38  0E08               	movlw	8
 16648  008F3A  6EDF               	movwf	indf2,c
 16649                           
 16650                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16651  008F3C  EE20 F002          	lfsr	2,2
 16652  008F40  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16653  008F42  26D9               	addwf	fsr2l,f,c
 16654  008F44  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16655  008F46  22DA               	addwfc	fsr2h,f,c
 16656  008F48  0E30               	movlw	48
 16657  008F4A  6EDE               	movwf	postinc2,c
 16658  008F4C  0E0D               	movlw	13
 16659  008F4E  6EDD               	movwf	postdec2,c
 16660                           
 16661                           ; BSR set to: 0
 16662                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16663  008F50  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16664  008F54  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16665  008F58  0E0C               	movlw	12
 16666  008F5A  6EDF               	movwf	indf2,c
 16667                           
 16668                           ; BSR set to: 0
 16669                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16670  008F5C  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16671  008F60  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16672  008F64  0E00               	movlw	0
 16673  008F66  8EDB               	bsf	plusw2,7,c
 16674                           
 16675                           ;usb_device.c: 2563: }
 16676  008F68  0012               	return	
 16677  008F6A                     l322:
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16681                           
 16682                           ; BSR set to: 0
 16683  008F6A  0E00               	movlw	0
 16684  008F6C  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16685                           
 16686                           ; BSR set to: 0
 16687  008F6E  0012               	return	
 16688  008F70                     __end_of_USBCtrlTrfOutHandler:
 16689                           	opt stack 0
 16690                           tosu	equ	0xFFF
 16691                           tosh	equ	0xFFE
 16692                           tosl	equ	0xFFD
 16693                           pclath	equ	0xFFA
 16694                           tblptru	equ	0xFF8
 16695                           tblptrh	equ	0xFF7
 16696                           tblptrl	equ	0xFF6
 16697                           tablat	equ	0xFF5
 16698                           prodh	equ	0xFF4
 16699                           prodl	equ	0xFF3
 16700                           intcon	equ	0xFF2
 16701                           intcon2	equ	0xFF1
 16702                           intcon3	equ	0xFF0
 16703                           indf0	equ	0xFEF
 16704                           postinc0	equ	0xFEE
 16705                           fsr0h	equ	0xFEA
 16706                           fsr0l	equ	0xFE9
 16707                           wreg	equ	0xFE8
 16708                           indf1	equ	0xFE7
 16709                           postdec1	equ	0xFE5
 16710                           plusw1	equ	0xFE3
 16711                           fsr1h	equ	0xFE2
 16712                           fsr1l	equ	0xFE1
 16713                           indf2	equ	0xFDF
 16714                           postinc2	equ	0xFDE
 16715                           postdec2	equ	0xFDD
 16716                           plusw2	equ	0xFDB
 16717                           fsr2h	equ	0xFDA
 16718                           fsr2l	equ	0xFD9
 16719                           status	equ	0xFD8
 16720                           
 16721 ;; *************** function _USBCtrlTrfRxService *****************
 16722 ;; Defined at:
 16723 ;;		line 1854 in file "usb_device.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16728 ;;  i               1    0[COMRAM] unsigned char 
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      void 
 16731 ;; Registers used:
 16732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16742 ;;Total ram usage:        2 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:    1
 16745 ;; This function calls:
 16746 ;;		_USBCtrlEPAllowStatusStage
 16747 ;; This function is called by:
 16748 ;;		_USBCtrlTrfOutHandler
 16749 ;; This function uses a non-reentrant model
 16750 ;;
 16751                           
 16752                           	psect	text78
 16753  0053B4                     __ptext78:
 16754                           	opt stack 0
 16755  0053B4                     _USBCtrlTrfRxService:
 16756                           	opt stack 26
 16757                           
 16758                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16759                           
 16760                           ;incstack = 0
 16761  0053B4  0100               	movlb	0	; () banked
 16762  0053B6  EE20 F001          	lfsr	2,1
 16763  0053BA  51E1               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16764  0053BC  26D9               	addwf	fsr2l,f,c
 16765  0053BE  51E2               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16766  0053C0  22DA               	addwfc	fsr2h,f,c
 16767  0053C2  50DF               	movf	indf2,w,c
 16768  0053C4  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16769                           
 16770                           ; BSR set to: 0
 16771                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16772  0053C6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16773  0053C8  0101               	movlb	1	; () banked
 16774  0053CA  5D42               	subwf	(_outPipes+4)& (0+255),w,b
 16775  0053CC  0E00               	movlw	0
 16776  0053CE  5943               	subwfb	(_outPipes+5)& (0+255),w,b
 16777  0053D0  A0D8               	btfss	status,0,c
 16778                           
 16779                           ; BSR set to: 1
 16780                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16781  0053D2  C142  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16782                           
 16783                           ; BSR set to: 1
 16784                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16785                           
 16786                           ; BSR set to: 1
 16787  0053D6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16788  0053D8  5F42               	subwf	(_outPipes+4)& (0+255),f,b
 16789  0053DA  0E00               	movlw	0
 16790  0053DC  5B43               	subwfb	(_outPipes+5)& (0+255),f,b
 16791                           
 16792                           ; BSR set to: 1
 16793                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16794  0053DE  0E00               	movlw	0
 16795  0053E0  6E01               	movwf	USBCtrlTrfRxService@i,c
 16796  0053E2  D011               	goto	l248
 16797  0053E4                     
 16798                           ; BSR set to: 1
 16799                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16800                           
 16801                           ; BSR set to: 1
 16802  0053E4  5001               	movf	USBCtrlTrfRxService@i,w,c
 16803  0053E6  0D01               	mullw	1
 16804  0053E8  0E38               	movlw	56
 16805  0053EA  24F3               	addwf	prodl,w,c
 16806  0053EC  6ED9               	movwf	fsr2l,c
 16807  0053EE  0E0D               	movlw	13
 16808  0053F0  20F4               	addwfc	prodh,w,c
 16809  0053F2  6EDA               	movwf	fsr2h,c
 16810  0053F4  C13E  FFE1         	movff	_outPipes,fsr1l
 16811  0053F8  C13F  FFE2         	movff	_outPipes+1,fsr1h
 16812  0053FC  CFDF FFE7          	movff	indf2,indf1
 16813                           
 16814                           ; BSR set to: 1
 16815  005400  4B3E               	infsnz	_outPipes& (0+255),f,b
 16816  005402  2B3F               	incf	(_outPipes+1)& (0+255),f,b
 16817                           
 16818                           ; BSR set to: 1
 16819  005404  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16820  005406                     l248:
 16821                           
 16822                           ; BSR set to: 1
 16823                           
 16824                           ; BSR set to: 1
 16825  005406  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16826  005408  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16827  00540A  A0D8               	btfss	status,0,c
 16828  00540C  D7EB               	goto	l249
 16829                           
 16830                           ; BSR set to: 1
 16831                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16832                           
 16833                           ; BSR set to: 1
 16834  00540E  5142               	movf	(_outPipes+4)& (0+255),w,b
 16835  005410  1143               	iorwf	(_outPipes+5)& (0+255),w,b
 16836  005412  B4D8               	btfsc	status,2,c
 16837  005414  D033               	goto	l251
 16838                           
 16839                           ; BSR set to: 1
 16840                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16841  005416  0100               	movlb	0	; () banked
 16842  005418  EE20 F001          	lfsr	2,1
 16843  00541C  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16844  00541E  26D9               	addwf	fsr2l,f,c
 16845  005420  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16846  005422  22DA               	addwfc	fsr2h,f,c
 16847  005424  0E08               	movlw	8
 16848  005426  6EDF               	movwf	indf2,c
 16849                           
 16850                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16851  005428  EE20 F002          	lfsr	2,2
 16852  00542C  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16853  00542E  26D9               	addwf	fsr2l,f,c
 16854  005430  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16855  005432  22DA               	addwfc	fsr2h,f,c
 16856  005434  0E38               	movlw	56
 16857  005436  6EDE               	movwf	postinc2,c
 16858  005438  0E0D               	movlw	13
 16859  00543A  6EDD               	movwf	postdec2,c
 16860                           
 16861                           ; BSR set to: 0
 16862                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16863  00543C  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16864  005440  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16865  005444  BCDF               	btfsc	indf2,6,c
 16866  005446  D00D               	goto	l252
 16867                           
 16868                           ; BSR set to: 0
 16869                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16870  005448  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16871  00544C  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16872  005450  0E48               	movlw	72
 16873  005452  6EDF               	movwf	indf2,c
 16874                           
 16875                           ; BSR set to: 0
 16876                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16877  005454  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16878  005458  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16879  00545C  0E00               	movlw	0
 16880  00545E  8EDB               	bsf	plusw2,7,c
 16881                           
 16882                           ;usb_device.c: 1891: }
 16883  005460  0012               	return	
 16884  005462                     l252:
 16885                           
 16886                           ; BSR set to: 0
 16887                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16888                           
 16889                           ; BSR set to: 0
 16890  005462  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16891  005466  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16892  00546A  0E08               	movlw	8
 16893  00546C  6EDF               	movwf	indf2,c
 16894                           
 16895                           ; BSR set to: 0
 16896                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16897  00546E  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16898  005472  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16899  005476  0E00               	movlw	0
 16900  005478  8EDB               	bsf	plusw2,7,c
 16901                           
 16902                           ; BSR set to: 0
 16903                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16904  00547A  0012               	return	
 16905  00547C                     l251:
 16906                           
 16907                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16908                           
 16909                           ; BSR set to: 0
 16910  00547C  0100               	movlb	0	; () banked
 16911  00547E  EE20 F001          	lfsr	2,1
 16912  005482  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16913  005484  26D9               	addwf	fsr2l,f,c
 16914  005486  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16915  005488  22DA               	addwfc	fsr2h,f,c
 16916  00548A  0E08               	movlw	8
 16917  00548C  6EDF               	movwf	indf2,c
 16918                           
 16919                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16920  00548E  EE20 F002          	lfsr	2,2
 16921  005492  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16922  005494  26D9               	addwf	fsr2l,f,c
 16923  005496  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16924  005498  22DA               	addwfc	fsr2h,f,c
 16925  00549A  0E30               	movlw	48
 16926  00549C  6EDE               	movwf	postinc2,c
 16927  00549E  0E0D               	movlw	13
 16928  0054A0  6EDD               	movwf	postdec2,c
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16932  0054A2  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16933  0054A6  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16934  0054AA  0E04               	movlw	4
 16935  0054AC  6EDF               	movwf	indf2,c
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16939  0054AE  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16940  0054B2  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16941  0054B6  0E00               	movlw	0
 16942  0054B8  8EDB               	bsf	plusw2,7,c
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16946                           
 16947                           ; BSR set to: 0
 16948  0054BA  0101               	movlb	1	; () banked
 16949  0054BC  9F41               	bcf	(_outPipes+3)& (0+255),7,b
 16950                           
 16951                           ; BSR set to: 1
 16952                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16953  0054BE  0100               	movlb	0	; () banked
 16954  0054C0  51F0               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16955  0054C2  A4D8               	btfss	status,2,c
 16956  0054C4  0012               	return	
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16960  0054C6  ECCF  F037         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16961  0054CA  0012               	return	
 16962  0054CC                     __end_of_USBCtrlTrfRxService:
 16963                           	opt stack 0
 16964                           tosu	equ	0xFFF
 16965                           tosh	equ	0xFFE
 16966                           tosl	equ	0xFFD
 16967                           pclath	equ	0xFFA
 16968                           tblptru	equ	0xFF8
 16969                           tblptrh	equ	0xFF7
 16970                           tblptrl	equ	0xFF6
 16971                           tablat	equ	0xFF5
 16972                           prodh	equ	0xFF4
 16973                           prodl	equ	0xFF3
 16974                           intcon	equ	0xFF2
 16975                           intcon2	equ	0xFF1
 16976                           intcon3	equ	0xFF0
 16977                           indf0	equ	0xFEF
 16978                           postinc0	equ	0xFEE
 16979                           fsr0h	equ	0xFEA
 16980                           fsr0l	equ	0xFE9
 16981                           wreg	equ	0xFE8
 16982                           indf1	equ	0xFE7
 16983                           postdec1	equ	0xFE5
 16984                           plusw1	equ	0xFE3
 16985                           fsr1h	equ	0xFE2
 16986                           fsr1l	equ	0xFE1
 16987                           indf2	equ	0xFDF
 16988                           postinc2	equ	0xFDE
 16989                           postdec2	equ	0xFDD
 16990                           plusw2	equ	0xFDB
 16991                           fsr2h	equ	0xFDA
 16992                           fsr2l	equ	0xFD9
 16993                           status	equ	0xFD8
 16994                           
 16995 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16996 ;; Defined at:
 16997 ;;		line 1418 in file "usb_device.c"
 16998 ;; Parameters:    Size  Location     Type
 16999 ;;		None
 17000 ;; Auto vars:     Size  Location     Type
 17001 ;;		None
 17002 ;; Return value:  Size  Location     Type
 17003 ;;                  1    wreg      void 
 17004 ;; Registers used:
 17005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17006 ;; Tracked objects:
 17007 ;;		On entry : 0/0
 17008 ;;		On exit  : 0/0
 17009 ;;		Unchanged: 0/0
 17010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17015 ;;Total ram usage:        0 bytes
 17016 ;; Hardware stack levels used:    1
 17017 ;; This function calls:
 17018 ;;		Nothing
 17019 ;; This function is called by:
 17020 ;;		_USBDeviceTasks
 17021 ;;		_USBCtrlEPServiceComplete
 17022 ;;		_USBCtrlTrfRxService
 17023 ;; This function uses a non-reentrant model
 17024 ;;
 17025                           
 17026                           	psect	text79
 17027  006F9E                     __ptext79:
 17028                           	opt stack 0
 17029  006F9E                     _USBCtrlEPAllowStatusStage:
 17030                           	opt stack 26
 17031                           
 17032                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 17033                           
 17034                           ;incstack = 0
 17035  006F9E  0100               	movlb	0	; () banked
 17036  006FA0  51EF               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 17037  006FA2  A4D8               	btfss	status,2,c
 17038  006FA4  0012               	return	
 17039                           
 17040                           ; BSR set to: 0
 17041                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 17042  006FA6  0E01               	movlw	1
 17043  006FA8  6FEF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17044                           
 17045                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 17046  006FAA  51EE               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 17047  006FAC  A4D8               	btfss	status,2,c
 17048  006FAE  0012               	return	
 17049                           
 17050                           ; BSR set to: 0
 17051                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 17052  006FB0  0E01               	movlw	1
 17053  006FB2  6FEE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;usb_device.c: 1434: if(controlTransferState == 2)
 17057  006FB4  0E02               	movlw	2
 17058  006FB6  19F6               	xorwf	_controlTransferState& (0+255),w,b
 17059  006FB8  A4D8               	btfss	status,2,c
 17060  006FBA  D015               	goto	l202
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 17064  006FBC  EE20 F001          	lfsr	2,1
 17065  006FC0  51CB               	movf	_pBDTEntryIn& (0+255),w,b
 17066  006FC2  26D9               	addwf	fsr2l,f,c
 17067  006FC4  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17068  006FC6  22DA               	addwfc	fsr2h,f,c
 17069  006FC8  0E00               	movlw	0
 17070  006FCA  6EDF               	movwf	indf2,c
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17074  006FCC  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17075  006FD0  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17076  006FD4  0E48               	movlw	72
 17077  006FD6  6EDF               	movwf	indf2,c
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17081  006FD8  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17082  006FDC  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17083  006FE0  0E00               	movlw	0
 17084  006FE2  8EDB               	bsf	plusw2,7,c
 17085                           
 17086                           ;usb_device.c: 1439: }
 17087  006FE4  0012               	return	
 17088  006FE6                     l202:
 17089                           
 17090                           ; BSR set to: 0
 17091                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 17092                           
 17093                           ; BSR set to: 0
 17094  006FE6  05F6               	decf	_controlTransferState& (0+255),w,b
 17095  006FE8  A4D8               	btfss	status,2,c
 17096  006FEA  0012               	return	
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 17100  006FEC  0E00               	movlw	0
 17101  006FEE  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17102                           
 17103                           ; BSR set to: 0
 17104                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 17105  006FF0  EE20 F001          	lfsr	2,1
 17106  006FF4  51E1               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17107  006FF6  26D9               	addwf	fsr2l,f,c
 17108  006FF8  51E2               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17109  006FFA  22DA               	addwfc	fsr2h,f,c
 17110  006FFC  0E08               	movlw	8
 17111  006FFE  6EDF               	movwf	indf2,c
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 17115  007000  EE20 F002          	lfsr	2,2
 17116  007004  51E1               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17117  007006  26D9               	addwf	fsr2l,f,c
 17118  007008  51E2               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17119  00700A  22DA               	addwfc	fsr2h,f,c
 17120  00700C  0E30               	movlw	48
 17121  00700E  6EDE               	movwf	postinc2,c
 17122  007010  0E0D               	movlw	13
 17123  007012  6EDD               	movwf	postdec2,c
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 17127  007014  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17128  007018  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17129  00701C  0E04               	movlw	4
 17130  00701E  6EDF               	movwf	indf2,c
 17131                           
 17132                           ; BSR set to: 0
 17133                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17134  007020  C0E1  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17135  007024  C0E2  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17136  007028  0E00               	movlw	0
 17137  00702A  8EDB               	bsf	plusw2,7,c
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 17141  00702C  0E01               	movlw	1
 17142  00702E  6FF2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17143                           
 17144                           ; BSR set to: 0
 17145                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 17146  007030  EE20 F001          	lfsr	2,1
 17147  007034  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17148  007036  26D9               	addwf	fsr2l,f,c
 17149  007038  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17150  00703A  22DA               	addwfc	fsr2h,f,c
 17151  00703C  0E08               	movlw	8
 17152  00703E  6EDF               	movwf	indf2,c
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17156  007040  EE20 F002          	lfsr	2,2
 17157  007044  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17158  007046  26D9               	addwf	fsr2l,f,c
 17159  007048  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17160  00704A  22DA               	addwfc	fsr2h,f,c
 17161  00704C  0E30               	movlw	48
 17162  00704E  6EDE               	movwf	postinc2,c
 17163  007050  0E0D               	movlw	13
 17164  007052  6EDD               	movwf	postdec2,c
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 17168  007054  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17169  007058  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17170  00705C  0E80               	movlw	128
 17171  00705E  6EDF               	movwf	indf2,c
 17172                           
 17173                           ; BSR set to: 0
 17174                           
 17175                           ; BSR set to: 0
 17176                           
 17177                           ; BSR set to: 0
 17178  007060  0012               	return	
 17179  007062                     __end_of_USBCtrlEPAllowStatusStage:
 17180                           	opt stack 0
 17181                           tosu	equ	0xFFF
 17182                           tosh	equ	0xFFE
 17183                           tosl	equ	0xFFD
 17184                           pclath	equ	0xFFA
 17185                           tblptru	equ	0xFF8
 17186                           tblptrh	equ	0xFF7
 17187                           tblptrl	equ	0xFF6
 17188                           tablat	equ	0xFF5
 17189                           prodh	equ	0xFF4
 17190                           prodl	equ	0xFF3
 17191                           intcon	equ	0xFF2
 17192                           intcon2	equ	0xFF1
 17193                           intcon3	equ	0xFF0
 17194                           indf0	equ	0xFEF
 17195                           postinc0	equ	0xFEE
 17196                           fsr0h	equ	0xFEA
 17197                           fsr0l	equ	0xFE9
 17198                           wreg	equ	0xFE8
 17199                           indf1	equ	0xFE7
 17200                           postdec1	equ	0xFE5
 17201                           plusw1	equ	0xFE3
 17202                           fsr1h	equ	0xFE2
 17203                           fsr1l	equ	0xFE1
 17204                           indf2	equ	0xFDF
 17205                           postinc2	equ	0xFDE
 17206                           postdec2	equ	0xFDD
 17207                           plusw2	equ	0xFDB
 17208                           fsr2h	equ	0xFDA
 17209                           fsr2l	equ	0xFD9
 17210                           status	equ	0xFD8
 17211                           
 17212 ;; *************** function _USBCtrlTrfInHandler *****************
 17213 ;; Defined at:
 17214 ;;		line 2594 in file "usb_device.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;		None
 17217 ;; Auto vars:     Size  Location     Type
 17218 ;;  lastDTS         1    1[COMRAM] unsigned char 
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  1    wreg      void 
 17221 ;; Registers used:
 17222 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17232 ;;Total ram usage:        1 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; Hardware stack levels required when called:    1
 17235 ;; This function calls:
 17236 ;;		_USBCtrlTrfTxService
 17237 ;; This function is called by:
 17238 ;;		_USBCtrlEPService
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text80
 17243  006D4C                     __ptext80:
 17244                           	opt stack 0
 17245  006D4C                     _USBCtrlTrfInHandler:
 17246                           	opt stack 27
 17247                           
 17248                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;incstack = 0
 17252  006D4C  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17253  006D50  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17254  006D54  0100               	movlb	0	; () banked
 17255  006D56  0E00               	movlw	0
 17256  006D58  BCDF               	btfsc	indf2,6,c
 17257  006D5A  0E01               	movlw	1
 17258  006D5C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 17259                           
 17260                           ; BSR set to: 0
 17261                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17262  006D5E  0E04               	movlw	4
 17263  006D60  19CB               	xorwf	_pBDTEntryIn& (0+255),w,b
 17264  006D62  6FCB               	movwf	_pBDTEntryIn& (0+255),b
 17265  006D64  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17266  006D66  6FCC               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17267                           
 17268                           ; BSR set to: 0
 17269                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 17270  006D68  0E08               	movlw	8
 17271  006D6A  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17272  006D6C  A4D8               	btfss	status,2,c
 17273  006D6E  D00D               	goto	l329
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 17277  006D70  010D               	movlb	13	; () banked
 17278  006D72  5132               	movf	50,w,b	;volatile
 17279  006D74  0B7F               	andlw	127
 17280  006D76  010F               	movlb	15	; () banked
 17281  006D78  6F38               	movwf	56,b	;volatile
 17282                           
 17283                           ; BSR set to: 15
 17284                           ;usb_device.c: 2609: if(UADDR != 0u)
 17285  006D7A  5138               	movf	56,w,b	;volatile
 17286  006D7C  B4D8               	btfsc	status,2,c
 17287  006D7E  D002               	goto	l328
 17288                           
 17289                           ; BSR set to: 15
 17290                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 17291  006D80  0E10               	movlw	16
 17292  006D82  D001               	goto	L15
 17293  006D84                     l328:
 17294                           
 17295                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 17296                           
 17297                           ; BSR set to: 0
 17298  006D84  0E04               	movlw	4
 17299  006D86                     L15:
 17300  006D86  0100               	movlb	0	; () banked
 17301  006D88  6FF8               	movwf	_USBDeviceState& (0+255),b
 17302  006D8A                     l329:
 17303                           
 17304                           ; BSR set to: 0
 17305                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 17306                           
 17307                           ; BSR set to: 0
 17308                           
 17309                           ; BSR set to: 0
 17310  006D8A  05F6               	decf	_controlTransferState& (0+255),w,b
 17311  006D8C  A4D8               	btfss	status,2,c
 17312  006D8E  D03B               	goto	l330
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 17316  006D90  EE20 F002          	lfsr	2,2
 17317  006D94  51CB               	movf	_pBDTEntryIn& (0+255),w,b
 17318  006D96  26D9               	addwf	fsr2l,f,c
 17319  006D98  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17320  006D9A  22DA               	addwfc	fsr2h,f,c
 17321  006D9C  0E38               	movlw	56
 17322  006D9E  6EDE               	movwf	postinc2,c
 17323  006DA0  0E0D               	movlw	13
 17324  006DA2  6EDD               	movwf	postdec2,c
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 17328  006DA4  ECD5  F035         	call	_USBCtrlTrfTxService	;wreg free
 17329                           
 17330                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 17331  006DA8  0E02               	movlw	2
 17332  006DAA  0100               	movlb	0	; () banked
 17333  006DAC  19F7               	xorwf	_shortPacketStatus& (0+255),w,b
 17334  006DAE  A4D8               	btfss	status,2,c
 17335  006DB0  D00D               	goto	l331
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 17339  006DB2  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17340  006DB6  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17341  006DBA  0E04               	movlw	4
 17342  006DBC  6EDF               	movwf	indf2,c
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17346  006DBE  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17347  006DC2  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17348  006DC6  0E00               	movlw	0
 17349  006DC8  8EDB               	bsf	plusw2,7,c
 17350                           
 17351                           ;usb_device.c: 2635: }
 17352  006DCA  0012               	return	
 17353  006DCC                     l331:
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17357                           
 17358                           ; BSR set to: 0
 17359  006DCC  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17360  006DCE  A4D8               	btfss	status,2,c
 17361  006DD0  D00D               	goto	l333
 17362                           
 17363                           ; BSR set to: 0
 17364                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17365  006DD2  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17366  006DD6  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17367  006DDA  0E48               	movlw	72
 17368  006DDC  6EDF               	movwf	indf2,c
 17369                           
 17370                           ; BSR set to: 0
 17371                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17372  006DDE  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17373  006DE2  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17374  006DE6  0E00               	movlw	0
 17375  006DE8  8EDB               	bsf	plusw2,7,c
 17376                           
 17377                           ;usb_device.c: 2642: }
 17378  006DEA  0012               	return	
 17379  006DEC                     l333:
 17380                           
 17381                           ; BSR set to: 0
 17382                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17383                           
 17384                           ; BSR set to: 0
 17385  006DEC  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17386  006DF0  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17387  006DF4  0E08               	movlw	8
 17388  006DF6  6EDF               	movwf	indf2,c
 17389                           
 17390                           ; BSR set to: 0
 17391                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17392  006DF8  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 17393  006DFC  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17394  006E00  0E00               	movlw	0
 17395  006E02  8EDB               	bsf	plusw2,7,c
 17396                           
 17397                           ; BSR set to: 0
 17398                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17399                           
 17400                           ; BSR set to: 0
 17401  006E04  0012               	return	
 17402  006E06                     l330:
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17406  006E06  0101               	movlb	1	; () banked
 17407  006E08  BF41               	btfsc	(_outPipes+3)& (0+255),7,b
 17408                           
 17409                           ; BSR set to: 1
 17410                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17411                           
 17412                           ; BSR set to: 1
 17413  006E0A  9F41               	bcf	(_outPipes+3)& (0+255),7,b
 17414                           
 17415                           ; BSR set to: 1
 17416                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 17417                           
 17418                           ; BSR set to: 1
 17419  006E0C  0E00               	movlw	0
 17420  006E0E  0100               	movlb	0	; () banked
 17421  006E10  6FF6               	movwf	_controlTransferState& (0+255),b
 17422  006E12  0012               	return	
 17423  006E14                     __end_of_USBCtrlTrfInHandler:
 17424                           	opt stack 0
 17425                           tosu	equ	0xFFF
 17426                           tosh	equ	0xFFE
 17427                           tosl	equ	0xFFD
 17428                           pclath	equ	0xFFA
 17429                           tblptru	equ	0xFF8
 17430                           tblptrh	equ	0xFF7
 17431                           tblptrl	equ	0xFF6
 17432                           tablat	equ	0xFF5
 17433                           prodh	equ	0xFF4
 17434                           prodl	equ	0xFF3
 17435                           intcon	equ	0xFF2
 17436                           intcon2	equ	0xFF1
 17437                           intcon3	equ	0xFF0
 17438                           indf0	equ	0xFEF
 17439                           postinc0	equ	0xFEE
 17440                           fsr0h	equ	0xFEA
 17441                           fsr0l	equ	0xFE9
 17442                           wreg	equ	0xFE8
 17443                           indf1	equ	0xFE7
 17444                           postdec1	equ	0xFE5
 17445                           plusw1	equ	0xFE3
 17446                           fsr1h	equ	0xFE2
 17447                           fsr1l	equ	0xFE1
 17448                           indf2	equ	0xFDF
 17449                           postinc2	equ	0xFDE
 17450                           postdec2	equ	0xFDD
 17451                           plusw2	equ	0xFDB
 17452                           fsr2h	equ	0xFDA
 17453                           fsr2l	equ	0xFD9
 17454                           status	equ	0xFD8
 17455                           
 17456 ;; *************** function _USBCtrlTrfTxService *****************
 17457 ;; Defined at:
 17458 ;;		line 1773 in file "usb_device.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;		None
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17463 ;; Return value:  Size  Location     Type
 17464 ;;                  1    wreg      void 
 17465 ;; Registers used:
 17466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17476 ;;Total ram usage:        1 bytes
 17477 ;; Hardware stack levels used:    1
 17478 ;; This function calls:
 17479 ;;		Nothing
 17480 ;; This function is called by:
 17481 ;;		_USBCtrlEPAllowDataStage
 17482 ;;		_USBCtrlTrfInHandler
 17483 ;; This function uses a non-reentrant model
 17484 ;;
 17485                           
 17486                           	psect	text81
 17487  006BAA                     __ptext81:
 17488                           	opt stack 0
 17489  006BAA                     _USBCtrlTrfTxService:
 17490                           	opt stack 25
 17491                           
 17492                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17493                           
 17494                           ; BSR set to: 0
 17495                           ;incstack = 0
 17496  006BAA  0E08               	movlw	8
 17497  006BAC  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17498                           
 17499                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17500  006BAE  0100               	movlb	0	; () banked
 17501  006BB0  51CA               	movf	(_inPipes+5)& (0+255),w,b
 17502  006BB2  E110               	bnz	l12166
 17503  006BB4  0E08               	movlw	8
 17504  006BB6  5DC9               	subwf	(_inPipes+4)& (0+255),w,b
 17505  006BB8  B0D8               	btfsc	status,0,c
 17506  006BBA  D00C               	goto	l235
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17510  006BBC  C0C9  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17514  006BC0  51F7               	movf	_shortPacketStatus& (0+255),w,b
 17515  006BC2  A4D8               	btfss	status,2,c
 17516  006BC4  D002               	goto	l233
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17520  006BC6  0E01               	movlw	1
 17521  006BC8  D004               	goto	L16
 17522  006BCA                     l233:
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17526                           
 17527                           ; BSR set to: 0
 17528  006BCA  05F7               	decf	_shortPacketStatus& (0+255),w,b
 17529  006BCC  A4D8               	btfss	status,2,c
 17530  006BCE  D002               	goto	l235
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17534  006BD0  0E02               	movlw	2
 17535  006BD2                     L16:
 17536  006BD2  6FF7               	movwf	_shortPacketStatus& (0+255),b
 17537  006BD4                     l235:
 17538  006BD4                     l12166:
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17542  006BD4  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17543  006BD6  5FC9               	subwf	(_inPipes+4)& (0+255),f,b
 17544  006BD8  0E00               	movlw	0
 17545  006BDA  5BCA               	subwfb	(_inPipes+5)& (0+255),f,b
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17549  006BDC  EE20 F001          	lfsr	2,1
 17550  006BE0  51CB               	movf	_pBDTEntryIn& (0+255),w,b
 17551  006BE2  26D9               	addwf	fsr2l,f,c
 17552  006BE4  51CC               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17553  006BE6  22DA               	addwfc	fsr2h,f,c
 17554  006BE8  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17555                           
 17556                           ; BSR set to: 0
 17557                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17558  006BEC  0E38               	movlw	56
 17559  006BEE  0101               	movlb	1	; () banked
 17560  006BF0  6F8A               	movwf	_pDst& (0+255),b
 17561  006BF2  0E0D               	movlw	13
 17562  006BF4  6F8B               	movwf	(_pDst+1)& (0+255),b
 17563                           
 17564                           ; BSR set to: 1
 17565                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17566  006BF6  0100               	movlb	0	; () banked
 17567  006BF8  A1C8               	btfss	(_inPipes+3)& (0+255),0,b
 17568  006BFA  D01D               	goto	l237
 17569  006BFC  D03C               	goto	l241
 17570  006BFE                     
 17571                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17572                           
 17573                           ; BSR set to: 0
 17574  006BFE  C0C5  FFF6         	movff	_inPipes,tblptrl
 17575  006C02  C0C6  FFF7         	movff	_inPipes+1,tblptrh
 17576  006C06  6AF8               	clrf	tblptru,c
 17577  006C08  C18A  FFD9         	movff	_pDst,fsr2l
 17578  006C0C  C18B  FFDA         	movff	_pDst+1,fsr2h
 17579  006C10  0E0E               	movlw	(high __ramtop+-1)
 17580  006C12  64F7               	cpfsgt	tblptrh,c
 17581  006C14  D003               	bra	u9227
 17582  006C16  0008               	tblrd		*
 17583  006C18  50F5               	movf	tablat,w,c
 17584  006C1A  D005               	bra	u9220
 17585  006C1C                     u9227:
 17586  006C1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17587  006C20  CFF7 FFEA          	movff	tblptrh,fsr0h
 17588  006C24  50EF               	movf	indf0,w,c
 17589  006C26                     u9220:
 17590  006C26  6EDF               	movwf	indf2,c
 17591  006C28  0100               	movlb	0	; () banked
 17592  006C2A  4BC5               	infsnz	_inPipes& (0+255),f,b
 17593  006C2C  2BC6               	incf	(_inPipes+1)& (0+255),f,b
 17594                           
 17595                           ; BSR set to: 0
 17596  006C2E  0101               	movlb	1	; () banked
 17597  006C30  4B8A               	infsnz	_pDst& (0+255),f,b
 17598  006C32  2B8B               	incf	(_pDst+1)& (0+255),f,b
 17599                           
 17600                           ; BSR set to: 1
 17601                           ;usb_device.c: 1816: byteToSend--;
 17602  006C34  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17603  006C36                     l237:
 17604                           
 17605                           ; BSR set to: 1
 17606  006C36  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17607  006C38  B4D8               	btfsc	status,2,c
 17608  006C3A  0012               	return	
 17609  006C3C  D7E0               	goto	l238
 17610  006C3E                     
 17611                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17612  006C3E  C0C5  FFF6         	movff	_inPipes,tblptrl
 17613  006C42  C0C6  FFF7         	movff	_inPipes+1,tblptrh
 17614  006C46  6AF8               	clrf	tblptru,c
 17615  006C48  C18A  FFD9         	movff	_pDst,fsr2l
 17616  006C4C  C18B  FFDA         	movff	_pDst+1,fsr2h
 17617  006C50  0E0E               	movlw	(high __ramtop+-1)
 17618  006C52  64F7               	cpfsgt	tblptrh,c
 17619  006C54  D003               	bra	u9247
 17620  006C56  0008               	tblrd		*
 17621  006C58  50F5               	movf	tablat,w,c
 17622  006C5A  D005               	bra	u9240
 17623  006C5C                     u9247:
 17624  006C5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17625  006C60  CFF7 FFEA          	movff	tblptrh,fsr0h
 17626  006C64  50EF               	movf	indf0,w,c
 17627  006C66                     u9240:
 17628  006C66  6EDF               	movwf	indf2,c
 17629  006C68  0100               	movlb	0	; () banked
 17630  006C6A  4BC5               	infsnz	_inPipes& (0+255),f,b
 17631  006C6C  2BC6               	incf	(_inPipes+1)& (0+255),f,b
 17632                           
 17633                           ; BSR set to: 0
 17634  006C6E  0101               	movlb	1	; () banked
 17635  006C70  4B8A               	infsnz	_pDst& (0+255),f,b
 17636  006C72  2B8B               	incf	(_pDst+1)& (0+255),f,b
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;usb_device.c: 1824: byteToSend--;
 17640  006C74  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17641  006C76                     l241:
 17642                           
 17643                           ; BSR set to: 1
 17644  006C76  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17645  006C78  B4D8               	btfsc	status,2,c
 17646  006C7A  0012               	return	
 17647  006C7C  D7E0               	goto	l242
 17648  006C7E                     __end_of_USBCtrlTrfTxService:
 17649                           	opt stack 0
 17650                           tosu	equ	0xFFF
 17651                           tosh	equ	0xFFE
 17652                           tosl	equ	0xFFD
 17653                           pclath	equ	0xFFA
 17654                           tblptru	equ	0xFF8
 17655                           tblptrh	equ	0xFF7
 17656                           tblptrl	equ	0xFF6
 17657                           tablat	equ	0xFF5
 17658                           prodh	equ	0xFF4
 17659                           prodl	equ	0xFF3
 17660                           intcon	equ	0xFF2
 17661                           intcon2	equ	0xFF1
 17662                           intcon3	equ	0xFF0
 17663                           indf0	equ	0xFEF
 17664                           postinc0	equ	0xFEE
 17665                           fsr0h	equ	0xFEA
 17666                           fsr0l	equ	0xFE9
 17667                           wreg	equ	0xFE8
 17668                           indf1	equ	0xFE7
 17669                           postdec1	equ	0xFE5
 17670                           plusw1	equ	0xFE3
 17671                           fsr1h	equ	0xFE2
 17672                           fsr1l	equ	0xFE1
 17673                           indf2	equ	0xFDF
 17674                           postinc2	equ	0xFDE
 17675                           postdec2	equ	0xFDD
 17676                           plusw2	equ	0xFDB
 17677                           fsr2h	equ	0xFDA
 17678                           fsr2l	equ	0xFD9
 17679                           status	equ	0xFD8
 17680                           
 17681 ;; *************** function _APP_DeviceMSDTasks *****************
 17682 ;; Defined at:
 17683 ;;		line 110 in file "app_device_msd.c"
 17684 ;; Parameters:    Size  Location     Type
 17685 ;;		None
 17686 ;; Auto vars:     Size  Location     Type
 17687 ;;		None
 17688 ;; Return value:  Size  Location     Type
 17689 ;;                  1    wreg      void 
 17690 ;; Registers used:
 17691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17692 ;; Tracked objects:
 17693 ;;		On entry : 0/0
 17694 ;;		On exit  : 0/0
 17695 ;;		Unchanged: 0/0
 17696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17701 ;;Total ram usage:        0 bytes
 17702 ;; Hardware stack levels used:    1
 17703 ;; Hardware stack levels required when called:   11
 17704 ;; This function calls:
 17705 ;;		_MSDTasks
 17706 ;; This function is called by:
 17707 ;;		_main
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711                           	psect	text82
 17712  00A16E                     __ptext82:
 17713                           	opt stack 0
 17714  00A16E                     _APP_DeviceMSDTasks:
 17715                           	opt stack 19
 17716                           
 17717                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17718                           
 17719                           ;incstack = 0
 17720  00A16E  0E20               	movlw	32
 17721  00A170  0100               	movlb	0	; () banked
 17722  00A172  61F8               	cpfslt	_USBDeviceState& (0+255),b
 17723  00A174  D001               	goto	l1006
 17724  00A176  0012               	return	
 17725  00A178                     l1006:
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17729  00A178  B265               	btfsc	3941,1,c	;volatile
 17730  00A17A  0012               	return	
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17734                           
 17735                           ; BSR set to: 0
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17739  00A17C  EC82  F012         	call	_MSDTasks	;wreg free
 17740  00A180  0012               	return		;funcret
 17741  00A182                     __end_of_APP_DeviceMSDTasks:
 17742                           	opt stack 0
 17743                           tosu	equ	0xFFF
 17744                           tosh	equ	0xFFE
 17745                           tosl	equ	0xFFD
 17746                           pclath	equ	0xFFA
 17747                           tblptru	equ	0xFF8
 17748                           tblptrh	equ	0xFF7
 17749                           tblptrl	equ	0xFF6
 17750                           tablat	equ	0xFF5
 17751                           prodh	equ	0xFF4
 17752                           prodl	equ	0xFF3
 17753                           intcon	equ	0xFF2
 17754                           intcon2	equ	0xFF1
 17755                           intcon3	equ	0xFF0
 17756                           indf0	equ	0xFEF
 17757                           postinc0	equ	0xFEE
 17758                           fsr0h	equ	0xFEA
 17759                           fsr0l	equ	0xFE9
 17760                           wreg	equ	0xFE8
 17761                           indf1	equ	0xFE7
 17762                           postdec1	equ	0xFE5
 17763                           plusw1	equ	0xFE3
 17764                           fsr1h	equ	0xFE2
 17765                           fsr1l	equ	0xFE1
 17766                           indf2	equ	0xFDF
 17767                           postinc2	equ	0xFDE
 17768                           postdec2	equ	0xFDD
 17769                           plusw2	equ	0xFDB
 17770                           fsr2h	equ	0xFDA
 17771                           fsr2l	equ	0xFD9
 17772                           status	equ	0xFD8
 17773                           
 17774 ;; *************** function _MSDTasks *****************
 17775 ;; Defined at:
 17776 ;;		line 335 in file "usb_device_msd.c"
 17777 ;; Parameters:    Size  Location     Type
 17778 ;;		None
 17779 ;; Auto vars:     Size  Location     Type
 17780 ;;  i               1   81[COMRAM] unsigned char 
 17781 ;; Return value:  Size  Location     Type
 17782 ;;                  1    wreg      unsigned char 
 17783 ;; Registers used:
 17784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/0
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17791 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17794 ;;Total ram usage:        6 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:   10
 17797 ;; This function calls:
 17798 ;;		_MSDProcessCommand
 17799 ;;		_USBStallEndpoint
 17800 ;;		_USBTransferOnePacket
 17801 ;; This function is called by:
 17802 ;;		_APP_DeviceMSDTasks
 17803 ;; This function uses a non-reentrant model
 17804 ;;
 17805                           
 17806                           	psect	text83
 17807  002504                     __ptext83:
 17808                           	opt stack 0
 17809  002504                     _MSDTasks:
 17810                           	opt stack 19
 17811                           
 17812                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17813                           
 17814                           ;incstack = 0
 17815  002504  0E20               	movlw	32
 17816  002506  0100               	movlb	0	; () banked
 17817  002508  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17818  00250A  A4D8               	btfss	status,2,c
 17819  00250C  0012               	return	
 17820  00250E  D115               	goto	l554
 17821  002510                     
 17822                           ; BSR set to: 0
 17823                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17824                           
 17825                           ; BSR set to: 0
 17826  002510  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 17827  002512  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17828  002514  B4D8               	btfsc	status,2,c
 17829  002516  D006               	goto	u13360
 17830                           
 17831                           ; BSR set to: 0
 17832  002518  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17833  00251C  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17834  002520  BEDF               	btfsc	indf2,7,c
 17835  002522  0012               	return	
 17836  002524                     u13360:
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17840                           
 17841                           ; BSR set to: 0
 17842  002524  0E00               	movlw	0
 17843  002526  6E52               	movwf	MSDTasks@i,c
 17844  002528                     l15900:
 17845                           
 17846                           ; BSR set to: 0
 17847  002528  0E1E               	movlw	30
 17848  00252A  6452               	cpfsgt	MSDTasks@i,c
 17849  00252C  D001               	goto	l559
 17850  00252E  D014               	goto	u13380
 17851  002530                     l559:
 17852                           
 17853                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17854                           
 17855                           ; BSR set to: 0
 17856  002530  5052               	movf	MSDTasks@i,w,c
 17857  002532  0D01               	mullw	1
 17858  002534  0E40               	movlw	64
 17859  002536  24F3               	addwf	prodl,w,c
 17860  002538  6ED9               	movwf	fsr2l,c
 17861  00253A  0E0D               	movlw	13
 17862  00253C  20F4               	addwfc	prodh,w,c
 17863  00253E  6EDA               	movwf	fsr2h,c
 17864  002540  5052               	movf	MSDTasks@i,w,c
 17865  002542  0D01               	mullw	1
 17866  002544  0E00               	movlw	low _gblCBW
 17867  002546  24F3               	addwf	prodl,w,c
 17868  002548  6EE1               	movwf	fsr1l,c
 17869  00254A  0E01               	movlw	high _gblCBW
 17870  00254C  20F4               	addwfc	prodh,w,c
 17871  00254E  6EE2               	movwf	fsr1h,c
 17872  002550  CFDF FFE7          	movff	indf2,indf1
 17873  002554  2A52               	incf	MSDTasks@i,f,c
 17874  002556  D7E8               	goto	l15900
 17875  002558                     u13380:
 17876                           
 17877                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17878  002558  0100               	movlb	0	; () banked
 17879  00255A  EE20 F001          	lfsr	2,1
 17880  00255E  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 17881  002560  26D9               	addwf	fsr2l,f,c
 17882  002562  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17883  002564  22DA               	addwfc	fsr2h,f,c
 17884  002566  0E1F               	movlw	31
 17885  002568  18DE               	xorwf	postinc2,w,c
 17886  00256A  A4D8               	btfss	status,2,c
 17887  00256C  D070               	goto	l561
 17888                           
 17889                           ; BSR set to: 0
 17890  00256E  0E55               	movlw	85
 17891  002570  0101               	movlb	1	; () banked
 17892  002572  1900               	xorwf	_gblCBW& (0+255),w,b
 17893  002574  E16C               	bnz	l561
 17894  002576  0E53               	movlw	83
 17895  002578  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17896  00257A  E169               	bnz	l561
 17897  00257C  0E42               	movlw	66
 17898  00257E  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17899  002580  E166               	bnz	l15950
 17900  002582  0E43               	movlw	67
 17901  002584  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17902  002586  A4D8               	btfss	status,2,c
 17903  002588  D062               	goto	l561
 17904                           
 17905                           ; BSR set to: 1
 17906                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17907  00258A  0E01               	movlw	1
 17908  00258C  6F90               	movwf	_MSDCBWValid& (0+255),b
 17909                           
 17910                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17911  00258E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17912  002590  A4D8               	btfss	status,2,c
 17913  002592  D052               	goto	l562
 17914                           
 17915                           ; BSR set to: 1
 17916  002594  0E11               	movlw	17
 17917  002596  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17918  002598  D04F               	goto	l562
 17919                           
 17920                           ; BSR set to: 1
 17921  00259A  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17922  00259C  B4D8               	btfsc	status,2,c
 17923  00259E  D04C               	goto	l562
 17924                           
 17925                           ; BSR set to: 1
 17926  0025A0  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17927  0025A4  0E3F               	movlw	63
 17928  0025A6  164D               	andwf	??_MSDTasks,f,c
 17929  0025A8  A4D8               	btfss	status,2,c
 17930  0025AA  D046               	goto	l562
 17931                           
 17932                           ; BSR set to: 1
 17933                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17934  0025AC  0E55               	movlw	85
 17935  0025AE  010D               	movlb	13	; () banked
 17936  0025B0  6F80               	movwf	128,b	;volatile
 17937  0025B2  0E53               	movlw	83
 17938  0025B4  6F81               	movwf	129,b	;volatile
 17939  0025B6  0E42               	movlw	66
 17940  0025B8  6F82               	movwf	130,b	;volatile
 17941  0025BA  0E53               	movlw	83
 17942  0025BC  6F83               	movwf	131,b	;volatile
 17943                           
 17944                           ; BSR set to: 13
 17945                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17946  0025BE  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17947  0025C2  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17948  0025C6  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17949  0025CA  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17950                           
 17951                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17952  0025CE  0E00               	movlw	0
 17953  0025D0  6F88               	movwf	136,b	;volatile
 17954  0025D2  0E00               	movlw	0
 17955  0025D4  6F89               	movwf	137,b	;volatile
 17956  0025D6  0E00               	movlw	0
 17957  0025D8  6F8A               	movwf	138,b	;volatile
 17958  0025DA  0E00               	movlw	0
 17959  0025DC  6F8B               	movwf	139,b	;volatile
 17960                           
 17961                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17962  0025DE  0E00               	movlw	0
 17963  0025E0  6F8C               	movwf	140,b	;volatile
 17964                           
 17965                           ; BSR set to: 13
 17966                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17967  0025E2  0100               	movlb	0	; () banked
 17968  0025E4  69EA               	setf	_MSDCommandState& (0+255),b
 17969                           
 17970                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17971  0025E6  0E00               	movlw	0
 17972  0025E8  6FE9               	movwf	_MSDReadState& (0+255),b
 17973                           
 17974                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17975  0025EA  0E00               	movlw	0
 17976  0025EC  6FE8               	movwf	_MSDWriteState& (0+255),b
 17977                           
 17978                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17979  0025EE  0E00               	movlw	0
 17980  0025F0  6FE7               	movwf	_MSDRetryAttempt& (0+255),b
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17984  0025F2  0E03               	movlw	3
 17985  0025F4  0101               	movlb	1	; () banked
 17986  0025F6  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17987  0025F8  B4D8               	btfsc	status,2,c
 17988  0025FA  D008               	goto	l563
 17989                           
 17990                           ; BSR set to: 1
 17991                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17992  0025FC  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17993  0025FE  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17994  002600  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17995  002602  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17996                           
 17997                           ; BSR set to: 1
 17998                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17999  002604  0E00               	movlw	0
 18000  002606  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18001                           
 18002                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 18003  002608  0E00               	movlw	0
 18004  00260A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18005  00260C                     l563:
 18006                           
 18007                           ; BSR set to: 1
 18008                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 18009                           
 18010                           ; BSR set to: 1
 18011  00260C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 18012  00260E  D002               	goto	l564
 18013                           
 18014                           ; BSR set to: 1
 18015                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 18016  002610  0E01               	movlw	1
 18017  002612  D001               	goto	L17
 18018  002614                     l564:
 18019                           
 18020                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 18021                           
 18022                           ; BSR set to: 0
 18023  002614  0E02               	movlw	2
 18024  002616                     L17:
 18025  002616  0100               	movlb	0	; () banked
 18026  002618  6FEB               	movwf	_MSD_State& (0+255),b
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 18030                           
 18031                           ; BSR set to: 0
 18032  00261A  0101               	movlb	1	; () banked
 18033  00261C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18034  00261E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18035  002620  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18036  002622  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18037  002624  B4D8               	btfsc	status,2,c
 18038  002626  D002               	goto	l566
 18039                           
 18040                           ; BSR set to: 1
 18041                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 18042  002628  0E00               	movlw	0
 18043  00262A  D001               	goto	L18
 18044  00262C                     l566:
 18045                           
 18046                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 18047                           
 18048                           ; BSR set to: 0
 18049  00262C  0E01               	movlw	1
 18050  00262E                     L18:
 18051  00262E  0100               	movlb	0	; () banked
 18052  002630  6FE5               	movwf	_MSDHostNoData& (0+255),b
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 18056                           
 18057                           ; BSR set to: 0
 18058  002632  C10F  F0EA         	movff	_gblCBW+15,_MSDCommandState
 18059                           
 18060                           ;usb_device_msd.c: 454: }
 18061  002636  0012               	return	
 18062  002638                     l562:
 18063                           
 18064                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 18065                           
 18066                           ; BSR set to: 0
 18067  002638  0E01               	movlw	1
 18068  00263A  6E01               	movwf	USBStallEndpoint@dir,c
 18069  00263C  0E02               	movlw	2
 18070  00263E  EC74  F02B         	call	_USBStallEndpoint
 18071                           
 18072                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 18073  002642  0E00               	movlw	0
 18074  002644  6E01               	movwf	USBStallEndpoint@dir,c
 18075  002646  0E02               	movlw	2
 18076  002648  EC74  F02B         	call	_USBStallEndpoint
 18077                           
 18078                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 18079  00264C  0012               	return	
 18080  00264E                     l561:
 18081  00264E                     l15950:
 18082                           
 18083                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 18084  00264E  0E01               	movlw	1
 18085  002650  6E01               	movwf	USBStallEndpoint@dir,c
 18086  002652  0E02               	movlw	2
 18087  002654  EC74  F02B         	call	_USBStallEndpoint
 18088                           
 18089                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 18090  002658  0E00               	movlw	0
 18091  00265A  6E01               	movwf	USBStallEndpoint@dir,c
 18092  00265C  0E02               	movlw	2
 18093  00265E  EC74  F02B         	call	_USBStallEndpoint
 18094                           
 18095                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 18096  002662  0E00               	movlw	0
 18097  002664  0101               	movlb	1	; () banked
 18098  002666  6F90               	movwf	_MSDCBWValid& (0+255),b
 18099                           
 18100                           ; BSR set to: 1
 18101                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 18102                           
 18103                           ; BSR set to: 1
 18104  002668  0012               	return	
 18105  00266A                     
 18106                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 18107                           
 18108                           ; BSR set to: 1
 18109  00266A  EC66  F02A         	call	_MSDProcessCommand	;wreg free
 18110  00266E  0AFF               	xorlw	255
 18111  002670  A4D8               	btfss	status,2,c
 18112  002672  0012               	return	
 18113                           
 18114                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 18115  002674  0E03               	movlw	3
 18116  002676  0100               	movlb	0	; () banked
 18117  002678  6FEB               	movwf	_MSD_State& (0+255),b
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 18121  00267A  0012               	return	
 18122  00267C                     
 18123                           ; BSR set to: 0
 18124                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 18125                           
 18126                           ; BSR set to: 0
 18127  00267C  EC66  F02A         	call	_MSDProcessCommand	;wreg free
 18128  002680  0AFF               	xorlw	255
 18129  002682  A4D8               	btfss	status,2,c
 18130  002684  0012               	return	
 18131                           
 18132                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 18133  002686  010D               	movlb	13	; () banked
 18134  002688  518C               	movf	140,w,b	;volatile
 18135  00268A  A4D8               	btfss	status,2,c
 18136  00268C  D008               	goto	l575
 18137                           
 18138                           ; BSR set to: 13
 18139  00268E  5188               	movf	136,w,b	;volatile
 18140  002690  1189               	iorwf	137,w,b	;volatile
 18141  002692  118A               	iorwf	138,w,b	;volatile
 18142  002694  118B               	iorwf	139,w,b	;volatile
 18143  002696  B4D8               	btfsc	status,2,c
 18144  002698  D002               	goto	l575
 18145                           
 18146                           ; BSR set to: 13
 18147                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 18148  00269A  0E02               	movlw	2
 18149  00269C  6F8C               	movwf	140,b	;volatile
 18150  00269E                     l575:
 18151                           
 18152                           ; BSR set to: 13
 18153                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 18154  00269E  0E03               	movlw	3
 18155  0026A0  0100               	movlb	0	; () banked
 18156  0026A2  6FEB               	movwf	_MSD_State& (0+255),b
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 18160  0026A4  0012               	return	
 18161  0026A6                     
 18162                           ; BSR set to: 0
 18163                           
 18164                           ; BSR set to: 0
 18165  0026A6  C0CF  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 18166  0026AA  C0D0  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 18167                           
 18168                           ; BSR set to: 0
 18169                           
 18170                           ; BSR set to: 0
 18171                           
 18172                           ; BSR set to: 0
 18173  0026AE  504E               	movf	_MSDTasks$2372,w,c
 18174  0026B0  104F               	iorwf	_MSDTasks$2372+1,w,c
 18175  0026B2  B4D8               	btfsc	status,2,c
 18176  0026B4  D00A               	goto	l577
 18177                           
 18178                           ; BSR set to: 0
 18179  0026B6  C0CF  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 18180  0026BA  C0D0  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 18181                           
 18182                           ; BSR set to: 0
 18183                           
 18184                           ; BSR set to: 0
 18185                           
 18186                           ; BSR set to: 0
 18187                           
 18188                           ; BSR set to: 0
 18189  0026BE  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 18190  0026C2  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 18191  0026C6  BEDF               	btfsc	indf2,7,c
 18192  0026C8  0012               	return	
 18193  0026CA                     l577:
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 18197                           
 18198                           ; BSR set to: 0
 18199  0026CA  0E01               	movlw	1
 18200  0026CC  6E01               	movwf	USBTransferOnePacket@dir,c
 18201  0026CE  0E80               	movlw	128
 18202  0026D0  6E02               	movwf	USBTransferOnePacket@data,c
 18203  0026D2  0E0D               	movlw	13
 18204  0026D4  6E03               	movwf	USBTransferOnePacket@data+1,c
 18205  0026D6  0E0D               	movlw	13
 18206  0026D8  6E04               	movwf	USBTransferOnePacket@len,c
 18207  0026DA  0E02               	movlw	2
 18208  0026DC  ECFC  F02C         	call	_USBTransferOnePacket
 18209  0026E0  C001  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18210  0026E4  C002  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18211                           
 18212                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 18213  0026E8  0100               	movlb	0	; () banked
 18214  0026EA  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 18215  0026EC  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18216  0026EE  B4D8               	btfsc	status,2,c
 18217  0026F0  D006               	goto	u13550
 18218                           
 18219                           ; BSR set to: 0
 18220  0026F2  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18221  0026F6  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18222  0026FA  BEDF               	btfsc	indf2,7,c
 18223  0026FC  D00F               	goto	l586
 18224  0026FE                     u13550:
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 18228                           
 18229                           ; BSR set to: 0
 18230  0026FE  0E00               	movlw	0
 18231  002700  6E01               	movwf	USBTransferOnePacket@dir,c
 18232  002702  0E40               	movlw	64
 18233  002704  6E02               	movwf	USBTransferOnePacket@data,c
 18234  002706  0E0D               	movlw	13
 18235  002708  6E03               	movwf	USBTransferOnePacket@data+1,c
 18236  00270A  0E40               	movlw	64
 18237  00270C  6E04               	movwf	USBTransferOnePacket@len,c
 18238  00270E  0E02               	movlw	2
 18239  002710  ECFC  F02C         	call	_USBTransferOnePacket
 18240  002714  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 18241  002718  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 18242  00271C                     l586:
 18243                           
 18244                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 18245  00271C  0E00               	movlw	0
 18246  00271E  0100               	movlb	0	; () banked
 18247  002720  6FEB               	movwf	_MSD_State& (0+255),b
 18248                           
 18249                           ;usb_device_msd.c: 513: break;
 18250  002722  0012               	return	
 18251  002724                     
 18252                           ; BSR set to: 0
 18253                           ;usb_device_msd.c: 518: MSD_State=0x00;
 18254                           
 18255                           ; BSR set to: 0
 18256  002724  0E00               	movlw	0
 18257  002726  6FEB               	movwf	_MSD_State& (0+255),b
 18258                           
 18259                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 18260  002728  0E02               	movlw	2
 18261  00272A  010D               	movlb	13	; () banked
 18262  00272C  6F8C               	movwf	140,b	;volatile
 18263                           
 18264                           ; BSR set to: 13
 18265                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 18266  00272E  0E00               	movlw	0
 18267  002730  6E01               	movwf	USBStallEndpoint@dir,c
 18268  002732  0E02               	movlw	2
 18269  002734  EC74  F02B         	call	_USBStallEndpoint
 18270                           
 18271                           ;usb_device_msd.c: 521: }
 18272  002738  0012               	return	
 18273  00273A                     l554:
 18274  00273A  0100               	movlb	0	; () banked
 18275  00273C  51EB               	movf	_MSD_State& (0+255),w,b
 18276                           
 18277                           ; Switch size 1, requested type "space"
 18278                           ; Number of cases is 4, Range of values is 0 to 3
 18279                           ; switch strategies available:
 18280                           ; Name         Instructions Cycles
 18281                           ; simple_byte           13     7 (average)
 18282                           ;	Chosen strategy is simple_byte
 18283  00273E  0A00               	xorlw	0	; case 0
 18284  002740  B4D8               	btfsc	status,2,c
 18285  002742  D6E6               	goto	l555
 18286  002744  0A01               	xorlw	1	; case 1
 18287  002746  B4D8               	btfsc	status,2,c
 18288  002748  D790               	goto	l571
 18289  00274A  0A03               	xorlw	3	; case 2
 18290  00274C  B4D8               	btfsc	status,2,c
 18291  00274E  D796               	goto	l573
 18292  002750  0A01               	xorlw	1	; case 3
 18293  002752  B4D8               	btfsc	status,2,c
 18294  002754  D7A8               	goto	l576
 18295  002756  D7E6               	goto	l589
 18296  002758                     __end_of_MSDTasks:
 18297                           	opt stack 0
 18298                           tosu	equ	0xFFF
 18299                           tosh	equ	0xFFE
 18300                           tosl	equ	0xFFD
 18301                           pclath	equ	0xFFA
 18302                           tblptru	equ	0xFF8
 18303                           tblptrh	equ	0xFF7
 18304                           tblptrl	equ	0xFF6
 18305                           tablat	equ	0xFF5
 18306                           prodh	equ	0xFF4
 18307                           prodl	equ	0xFF3
 18308                           intcon	equ	0xFF2
 18309                           intcon2	equ	0xFF1
 18310                           intcon3	equ	0xFF0
 18311                           indf0	equ	0xFEF
 18312                           postinc0	equ	0xFEE
 18313                           fsr0h	equ	0xFEA
 18314                           fsr0l	equ	0xFE9
 18315                           wreg	equ	0xFE8
 18316                           indf1	equ	0xFE7
 18317                           postdec1	equ	0xFE5
 18318                           plusw1	equ	0xFE3
 18319                           fsr1h	equ	0xFE2
 18320                           fsr1l	equ	0xFE1
 18321                           indf2	equ	0xFDF
 18322                           postinc2	equ	0xFDE
 18323                           postdec2	equ	0xFDD
 18324                           plusw2	equ	0xFDB
 18325                           fsr2h	equ	0xFDA
 18326                           fsr2l	equ	0xFD9
 18327                           status	equ	0xFD8
 18328                           
 18329 ;; *************** function _MSDProcessCommand *****************
 18330 ;; Defined at:
 18331 ;;		line 553 in file "usb_device_msd.c"
 18332 ;; Parameters:    Size  Location     Type
 18333 ;;		None
 18334 ;; Auto vars:     Size  Location     Type
 18335 ;;		None
 18336 ;; Return value:  Size  Location     Type
 18337 ;;                  1    wreg      unsigned char 
 18338 ;; Registers used:
 18339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18340 ;; Tracked objects:
 18341 ;;		On entry : 0/0
 18342 ;;		On exit  : 0/0
 18343 ;;		Unchanged: 0/0
 18344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18347 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18348 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18349 ;;Total ram usage:        5 bytes
 18350 ;; Hardware stack levels used:    1
 18351 ;; Hardware stack levels required when called:    9
 18352 ;; This function calls:
 18353 ;;		_ExternalFlash_MediaDetect
 18354 ;;		_ExternalFlash_MediaInitialize
 18355 ;;		_MSDProcessCommandMediaAbsent
 18356 ;;		_MSDProcessCommandMediaPresent
 18357 ;; This function is called by:
 18358 ;;		_MSDTasks
 18359 ;; This function uses a non-reentrant model
 18360 ;;
 18361                           
 18362                           	psect	text84
 18363  0054CC                     __ptext84:
 18364                           	opt stack 0
 18365  0054CC                     _MSDProcessCommand:
 18366                           	opt stack 19
 18367                           
 18368                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18369                           
 18370                           ;incstack = 0
 18371  0054CC  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18372  0054D0  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18373  0054D4  D801               	call	u12658
 18374  0054D6  D00A               	goto	u12659
 18375  0054D8                     u12658:
 18376  0054D8  0005               	push	
 18377  0054DA  6EFA               	movwf	pclath,c
 18378  0054DC  0101               	movlb	1	; () banked
 18379  0054DE  51B9               	movf	(_LUN+6)& (0+255),w,b
 18380  0054E0  6EFD               	movwf	tosl,c
 18381  0054E2  51BA               	movf	(_LUN+7)& (0+255),w,b
 18382  0054E4  6EFE               	movwf	tosh,c
 18383  0054E6  6AFF               	clrf	tosu,c
 18384  0054E8  50FA               	movf	pclath,w,c
 18385  0054EA  0012               	return		;indir
 18386  0054EC                     u12659:
 18387  0054EC  0900               	iorlw	0
 18388  0054EE  B4D8               	btfsc	status,2,c
 18389  0054F0  D00C               	goto	u12670
 18390  0054F2  0101               	movlb	1	; () banked
 18391  0054F4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18392  0054F6  0D01               	mullw	1
 18393  0054F8  0EE6               	movlw	low _SoftDetach
 18394  0054FA  24F3               	addwf	prodl,w,c
 18395  0054FC  6ED9               	movwf	fsr2l,c
 18396  0054FE  0E00               	movlw	high _SoftDetach
 18397  005500  20F4               	addwfc	prodh,w,c
 18398  005502  6EDA               	movwf	fsr2h,c
 18399  005504  04DE               	decf	postinc2,w,c
 18400  005506  A4D8               	btfss	status,2,c
 18401  005508  D019               	goto	l592
 18402  00550A                     u12670:
 18403                           
 18404                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18405                           
 18406                           ; BSR set to: 1
 18407  00550A  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18408  00550E  0E01               	movlw	1
 18409  005510  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18410  005512  0E00               	movlw	0
 18411  005514  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18412  005516  2A48               	incf	??_MSDProcessCommand,f,c
 18413  005518  D003               	goto	u12684
 18414  00551A                     u12685:
 18415  00551A  90D8               	bcf	status,0,c
 18416  00551C  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18417  00551E  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18418  005520                     u12684:
 18419  005520  2E48               	decfsz	??_MSDProcessCommand,f,c
 18420  005522  D7FB               	goto	u12685
 18421  005524  1C49               	comf	??_MSDProcessCommand+1,w,c
 18422  005526  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 18423  005528  1C4A               	comf	??_MSDProcessCommand+2,w,c
 18424  00552A  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 18425  00552C  504B               	movf	??_MSDProcessCommand+3,w,c
 18426  00552E  0101               	movlb	1	; () banked
 18427  005530  1784               	andwf	_gblMediaPresent& (0+255),f,b
 18428  005532  504C               	movf	??_MSDProcessCommand+4,w,c
 18429  005534  1785               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 18430                           
 18431                           ; BSR set to: 1
 18432                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 18433  005536  ECC5  F046         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18434                           
 18435                           ;usb_device_msd.c: 563: }
 18436  00553A  D04E               	goto	l599
 18437  00553C                     l592:
 18438                           
 18439                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18440  00553C  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18441  005540  0E01               	movlw	1
 18442  005542  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18443  005544  0E00               	movlw	0
 18444  005546  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18445  005548  2A48               	incf	??_MSDProcessCommand,f,c
 18446  00554A  D003               	goto	u12694
 18447  00554C                     u12695:
 18448  00554C  90D8               	bcf	status,0,c
 18449  00554E  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18450  005550  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18451  005552                     u12694:
 18452  005552  2E48               	decfsz	??_MSDProcessCommand,f,c
 18453  005554  D7FB               	goto	u12695
 18454  005556  0101               	movlb	1	; () banked
 18455  005558  5184               	movf	_gblMediaPresent& (0+255),w,b
 18456  00555A  1649               	andwf	??_MSDProcessCommand+1,f,c
 18457  00555C  5185               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18458  00555E  164A               	andwf	??_MSDProcessCommand+2,f,c
 18459  005560  5049               	movf	??_MSDProcessCommand+1,w,c
 18460  005562  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18461  005564  A4D8               	btfss	status,2,c
 18462  005566  D036               	goto	l596
 18463                           
 18464                           ; BSR set to: 1
 18465                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18466  005568  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18467  00556C  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18468  005570  D801               	call	u12718
 18469  005572  D009               	goto	u12719
 18470  005574                     u12718:
 18471  005574  0005               	push	
 18472  005576  6EFA               	movwf	pclath,c
 18473  005578  51B3               	movf	_LUN& (0+255),w,b
 18474  00557A  6EFD               	movwf	tosl,c
 18475  00557C  51B4               	movf	(_LUN+1)& (0+255),w,b
 18476  00557E  6EFE               	movwf	tosh,c
 18477  005580  6AFF               	clrf	tosu,c
 18478  005582  50FA               	movf	pclath,w,c
 18479  005584  0012               	return		;indir
 18480  005586                     u12719:
 18481  005586  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18482  005588  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18483  00558A  B4D8               	btfsc	status,2,c
 18484  00558C  D020               	goto	l597
 18485                           
 18486                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18487  00558E  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18488  005592  0E01               	movlw	1
 18489  005594  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18490  005596  0E00               	movlw	0
 18491  005598  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18492  00559A  2A48               	incf	??_MSDProcessCommand,f,c
 18493  00559C  D003               	goto	u12734
 18494  00559E                     u12735:
 18495  00559E  90D8               	bcf	status,0,c
 18496  0055A0  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18497  0055A2  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18498  0055A4                     u12734:
 18499  0055A4  2E48               	decfsz	??_MSDProcessCommand,f,c
 18500  0055A6  D7FB               	goto	u12735
 18501  0055A8  5049               	movf	??_MSDProcessCommand+1,w,c
 18502  0055AA  0101               	movlb	1	; () banked
 18503  0055AC  1384               	iorwf	_gblMediaPresent& (0+255),f,b
 18504  0055AE  504A               	movf	??_MSDProcessCommand+2,w,c
 18505  0055B0  1385               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18506                           
 18507                           ; BSR set to: 1
 18508                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18509  0055B2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18510  0055B4  0BF0               	andlw	-16
 18511  0055B6  0906               	iorlw	6
 18512  0055B8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18513                           
 18514                           ; BSR set to: 1
 18515                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18516  0055BA  0E28               	movlw	40
 18517  0055BC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18518                           
 18519                           ; BSR set to: 1
 18520                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18521  0055BE  0E00               	movlw	0
 18522  0055C0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18523                           
 18524                           ; BSR set to: 1
 18525                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18526  0055C2  0E01               	movlw	1
 18527  0055C4  010D               	movlb	13	; () banked
 18528  0055C6  6F8C               	movwf	140,b	;volatile
 18529                           
 18530                           ; BSR set to: 13
 18531                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18532  0055C8  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18533                           
 18534                           ;usb_device_msd.c: 589: }
 18535  0055CC  D005               	goto	l599
 18536  0055CE                     l597:
 18537                           
 18538                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18539  0055CE  ECC5  F046         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18540                           
 18541                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18542  0055D2  D002               	goto	l599
 18543  0055D4                     l596:
 18544                           
 18545                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18546  0055D4  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18547  0055D8                     l599:
 18548                           
 18549                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18550  0055D8  0100               	movlb	0	; () banked
 18551  0055DA  51EA               	movf	_MSDCommandState& (0+255),w,b
 18552  0055DC  0012               	return	
 18553  0055DE                     __end_of_MSDProcessCommand:
 18554                           	opt stack 0
 18555                           tosu	equ	0xFFF
 18556                           tosh	equ	0xFFE
 18557                           tosl	equ	0xFFD
 18558                           pclath	equ	0xFFA
 18559                           tblptru	equ	0xFF8
 18560                           tblptrh	equ	0xFF7
 18561                           tblptrl	equ	0xFF6
 18562                           tablat	equ	0xFF5
 18563                           prodh	equ	0xFF4
 18564                           prodl	equ	0xFF3
 18565                           intcon	equ	0xFF2
 18566                           intcon2	equ	0xFF1
 18567                           intcon3	equ	0xFF0
 18568                           indf0	equ	0xFEF
 18569                           postinc0	equ	0xFEE
 18570                           fsr0h	equ	0xFEA
 18571                           fsr0l	equ	0xFE9
 18572                           wreg	equ	0xFE8
 18573                           indf1	equ	0xFE7
 18574                           postdec1	equ	0xFE5
 18575                           plusw1	equ	0xFE3
 18576                           fsr1h	equ	0xFE2
 18577                           fsr1l	equ	0xFE1
 18578                           indf2	equ	0xFDF
 18579                           postinc2	equ	0xFDE
 18580                           postdec2	equ	0xFDD
 18581                           plusw2	equ	0xFDB
 18582                           fsr2h	equ	0xFDA
 18583                           fsr2l	equ	0xFD9
 18584                           status	equ	0xFD8
 18585                           
 18586 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18587 ;; Defined at:
 18588 ;;		line 635 in file "usb_device_msd.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;		None
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;		None
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  1    wreg      void 
 18595 ;; Registers used:
 18596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18597 ;; Tracked objects:
 18598 ;;		On entry : 0/0
 18599 ;;		On exit  : 0/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18606 ;;Total ram usage:        0 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:    8
 18609 ;; This function calls:
 18610 ;;		_MSDErrorHandler
 18611 ;;		_MSDProcessCommandMediaPresent
 18612 ;;		_ResetSenseData
 18613 ;; This function is called by:
 18614 ;;		_MSDProcessCommand
 18615 ;; This function uses a non-reentrant model
 18616 ;;
 18617                           
 18618                           	psect	text85
 18619  008D8A                     __ptext85:
 18620                           	opt stack 0
 18621  008D8A                     _MSDProcessCommandMediaAbsent:
 18622                           	opt stack 19
 18623                           
 18624                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;incstack = 0
 18628  008D8A  D01E               	goto	l603
 18629  008D8C                     
 18630                           ;usb_device_msd.c: 646: ResetSenseData();
 18631  008D8C  ECF6  F046         	call	_ResetSenseData	;wreg free
 18632                           
 18633                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18634  008D90  0101               	movlb	1	; () banked
 18635  008D92  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18636  008D94  0BF0               	andlw	-16
 18637  008D96  0902               	iorlw	2
 18638  008D98  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18639                           
 18640                           ; BSR set to: 1
 18641                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18642  008D9A  0E3A               	movlw	58
 18643  008D9C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18644                           
 18645                           ; BSR set to: 1
 18646                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18647  008D9E  0E00               	movlw	0
 18648  008DA0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18649                           
 18650                           ; BSR set to: 1
 18651                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18652  008DA2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18653                           
 18654                           ;usb_device_msd.c: 655: break;
 18655  008DA6  0012               	return	
 18656  008DA8                     
 18657                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18658  008DA8  0E01               	movlw	1
 18659  008DAA  010D               	movlb	13	; () banked
 18660  008DAC  6F8C               	movwf	140,b	;volatile
 18661                           
 18662                           ; BSR set to: 13
 18663                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18664  008DAE  0100               	movlb	0	; () banked
 18665  008DB0  69EA               	setf	_MSDCommandState& (0+255),b
 18666                           
 18667                           ;usb_device_msd.c: 665: break;
 18668  008DB2  0012               	return	
 18669  008DB4                     
 18670                           ; BSR set to: 0
 18671                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18672                           
 18673                           ; BSR set to: 0
 18674  008DB4  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18675                           
 18676                           ;usb_device_msd.c: 671: break;
 18677  008DB8  0012               	return	
 18678  008DBA                     
 18679                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18680  008DBA  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 18681                           
 18682                           ;usb_device_msd.c: 677: break;
 18683  008DBE  0012               	return	
 18684  008DC0                     
 18685                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18686  008DC0  0E7F               	movlw	127
 18687  008DC2  ECF8  F02B         	call	_MSDErrorHandler
 18688                           
 18689                           ;usb_device_msd.c: 685: }
 18690                           
 18691                           ;usb_device_msd.c: 684: break;
 18692  008DC6  0012               	return	
 18693  008DC8                     l603:
 18694  008DC8  0100               	movlb	0	; () banked
 18695  008DCA  51EA               	movf	_MSDCommandState& (0+255),w,b
 18696                           
 18697                           ; Switch size 1, requested type "space"
 18698                           ; Number of cases is 5, Range of values is 0 to 253
 18699                           ; switch strategies available:
 18700                           ; Name         Instructions Cycles
 18701                           ; simple_byte           16     9 (average)
 18702                           ;	Chosen strategy is simple_byte
 18703  008DCC  0A00               	xorlw	0	; case 0
 18704  008DCE  B4D8               	btfsc	status,2,c
 18705  008DD0  D7EB               	goto	l606
 18706  008DD2  0A03               	xorlw	3	; case 3
 18707  008DD4  B4D8               	btfsc	status,2,c
 18708  008DD6  D7DA               	goto	l604
 18709  008DD8  0A11               	xorlw	17	; case 18
 18710  008DDA  B4D8               	btfsc	status,2,c
 18711  008DDC  D7EB               	goto	l608
 18712  008DDE  0A0C               	xorlw	12	; case 30
 18713  008DE0  B4D8               	btfsc	status,2,c
 18714  008DE2  D7E2               	goto	l606
 18715  008DE4  0AE3               	xorlw	227	; case 253
 18716  008DE6  B4D8               	btfsc	status,2,c
 18717  008DE8  D7E8               	goto	l609
 18718  008DEA  D7EA               	goto	l610
 18719  008DEC                     __end_of_MSDProcessCommandMediaAbsent:
 18720                           	opt stack 0
 18721                           tosu	equ	0xFFF
 18722                           tosh	equ	0xFFE
 18723                           tosl	equ	0xFFD
 18724                           pclath	equ	0xFFA
 18725                           tblptru	equ	0xFF8
 18726                           tblptrh	equ	0xFF7
 18727                           tblptrl	equ	0xFF6
 18728                           tablat	equ	0xFF5
 18729                           prodh	equ	0xFF4
 18730                           prodl	equ	0xFF3
 18731                           intcon	equ	0xFF2
 18732                           intcon2	equ	0xFF1
 18733                           intcon3	equ	0xFF0
 18734                           indf0	equ	0xFEF
 18735                           postinc0	equ	0xFEE
 18736                           fsr0h	equ	0xFEA
 18737                           fsr0l	equ	0xFE9
 18738                           wreg	equ	0xFE8
 18739                           indf1	equ	0xFE7
 18740                           postdec1	equ	0xFE5
 18741                           plusw1	equ	0xFE3
 18742                           fsr1h	equ	0xFE2
 18743                           fsr1l	equ	0xFE1
 18744                           indf2	equ	0xFDF
 18745                           postinc2	equ	0xFDE
 18746                           postdec2	equ	0xFDD
 18747                           plusw2	equ	0xFDB
 18748                           fsr2h	equ	0xFDA
 18749                           fsr2l	equ	0xFD9
 18750                           status	equ	0xFD8
 18751                           
 18752 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18753 ;; Defined at:
 18754 ;;		line 712 in file "usb_device_msd.c"
 18755 ;; Parameters:    Size  Location     Type
 18756 ;;		None
 18757 ;; Auto vars:     Size  Location     Type
 18758 ;;  capacity        4   66[COMRAM] struct .
 18759 ;;  sectorSize      4   62[COMRAM] struct .
 18760 ;;  i               1   70[COMRAM] unsigned char 
 18761 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18762 ;; Return value:  Size  Location     Type
 18763 ;;                  1    wreg      void 
 18764 ;; Registers used:
 18765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18766 ;; Tracked objects:
 18767 ;;		On entry : 0/0
 18768 ;;		On exit  : 0/0
 18769 ;;		Unchanged: 0/0
 18770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18772 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18774 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18775 ;;Total ram usage:       14 bytes
 18776 ;; Hardware stack levels used:    1
 18777 ;; Hardware stack levels required when called:    7
 18778 ;; This function calls:
 18779 ;;		_ExternalFlash_CapacityRead
 18780 ;;		_ExternalFlash_SectorSizeRead
 18781 ;;		_ExternalFlash_WriteProtectStateGet
 18782 ;;		_MSDCheckForErrorCases
 18783 ;;		_MSDComputeDeviceInAndResidue
 18784 ;;		_MSDErrorHandler
 18785 ;;		_MSDReadHandler
 18786 ;;		_MSDWriteHandler
 18787 ;;		_ResetSenseData
 18788 ;;		_USBTransferOnePacket
 18789 ;;		_memcpy
 18790 ;; This function is called by:
 18791 ;;		_MSDProcessCommand
 18792 ;;		_MSDProcessCommandMediaAbsent
 18793 ;; This function uses a non-reentrant model
 18794 ;;
 18795                           
 18796                           	psect	text86
 18797  00049C                     __ptext86:
 18798                           	opt stack 0
 18799  00049C                     _MSDProcessCommandMediaPresent:
 18800                           	opt stack 20
 18801                           
 18802                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18803                           
 18804                           ;incstack = 0
 18805  00049C  D1B9               	goto	l614
 18806  00049E                     
 18807                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18808  00049E  ECD4  F01A         	call	_MSDReadHandler	;wreg free
 18809  0004A2  0900               	iorlw	0
 18810  0004A4  A4D8               	btfss	status,2,c
 18811  0004A6  0012               	return	
 18812                           
 18813                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18814  0004A8  0100               	movlb	0	; () banked
 18815  0004AA  69EA               	setf	_MSDCommandState& (0+255),b
 18816                           
 18817                           ; BSR set to: 0
 18818                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18819  0004AC  0012               	return	
 18820  0004AE                     
 18821                           ; BSR set to: 0
 18822                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18823                           
 18824                           ; BSR set to: 0
 18825  0004AE  EC25  F00C         	call	_MSDWriteHandler	;wreg free
 18826  0004B2  0900               	iorlw	0
 18827  0004B4  A4D8               	btfss	status,2,c
 18828  0004B6  0012               	return	
 18829                           
 18830                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18831  0004B8  0100               	movlb	0	; () banked
 18832  0004BA  69EA               	setf	_MSDCommandState& (0+255),b
 18833                           
 18834                           ; BSR set to: 0
 18835                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18836  0004BC  0012               	return	
 18837  0004BE                     
 18838                           ; BSR set to: 0
 18839                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18840                           
 18841                           ; BSR set to: 0
 18842  0004BE  05E5               	decf	_MSDHostNoData& (0+255),w,b
 18843  0004C0  A4D8               	btfss	status,2,c
 18844  0004C2  D002               	goto	l621
 18845                           
 18846                           ; BSR set to: 0
 18847                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18848  0004C4  69EA               	setf	_MSDCommandState& (0+255),b
 18849                           
 18850                           ;usb_device_msd.c: 751: break;
 18851  0004C6  0012               	return	
 18852  0004C8                     l621:
 18853                           
 18854                           ; BSR set to: 0
 18855                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18856  0004C8  C112  F0DA         	movff	_gblCBW+18,_TransferLength+1
 18857                           
 18858                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18859  0004CC  C113  F0D9         	movff	_gblCBW+19,_TransferLength
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18863  0004D0  C0D9  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18864  0004D4  C0DA  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18865  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18866  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18867  0004DC  EC37  F033         	call	_MSDCheckForErrorCases	;wreg free
 18868  0004E0  0900               	iorlw	0
 18869  0004E2  A4D8               	btfss	status,2,c
 18870  0004E4  0012               	return	
 18871                           
 18872                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18873                           
 18874                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18875  0004E6  0E00               	movlw	0
 18876  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18877  0004EA  0E24               	movlw	36
 18878  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18879  0004EE  EC31  F041         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18880                           
 18881                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18882  0004F2  0E00               	movlw	0
 18883  0004F4  6E01               	movwf	memcpy@d1,c
 18884  0004F6  0E06               	movlw	6
 18885  0004F8  6E02               	movwf	memcpy@d1+1,c
 18886  0004FA  0E49               	movlw	low _inq_resp
 18887  0004FC  6E03               	movwf	memcpy@s1,c
 18888  0004FE  0EBF               	movlw	high _inq_resp
 18889  000500  6E04               	movwf	memcpy@s1+1,c
 18890  000502  5003               	movf	memcpy@s1,w,c
 18891  000504  1004               	iorwf	memcpy@s1+1,w,c
 18892  000506  A4D8               	btfss	status,2,c
 18893  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 18894  00050A  6E05               	movwf	memcpy@s1+2,c
 18895  00050C  0E00               	movlw	0
 18896  00050E  6E07               	movwf	memcpy@n+1,c
 18897  000510  0E24               	movlw	36
 18898  000512  6E06               	movwf	memcpy@n,c
 18899  000514  EC92  F046         	call	_memcpy	;wreg free
 18900                           
 18901                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18902  000518  0EFD               	movlw	253
 18903  00051A  0100               	movlb	0	; () banked
 18904  00051C  6FEA               	movwf	_MSDCommandState& (0+255),b
 18905                           
 18906                           ;usb_device_msd.c: 773: break;
 18907  00051E  0012               	return	
 18908  000520                     
 18909                           ; BSR set to: 0
 18910                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18911                           
 18912                           ; BSR set to: 0
 18913  000520  C1C1  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18914  000524  C1C2  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18915  000528  D801               	call	u10788
 18916  00052A  D00A               	goto	u10789
 18917  00052C                     u10788:
 18918  00052C  0005               	push	
 18919  00052E  6EFA               	movwf	pclath,c
 18920  000530  0101               	movlb	1	; () banked
 18921  000532  51B5               	movf	(_LUN+2)& (0+255),w,b
 18922  000534  6EFD               	movwf	tosl,c
 18923  000536  51B6               	movf	(_LUN+3)& (0+255),w,b
 18924  000538  6EFE               	movwf	tosh,c
 18925  00053A  6AFF               	clrf	tosu,c
 18926  00053C  50FA               	movf	pclath,w,c
 18927  00053E  0012               	return		;indir
 18928  000540                     u10789:
 18929  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18930  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18931  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18932  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18933                           
 18934                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18935  000550  C1C1  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18936  000554  C1C2  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18937  000558  D801               	call	u10798
 18938  00055A  D00A               	goto	u10799
 18939  00055C                     u10798:
 18940  00055C  0005               	push	
 18941  00055E  6EFA               	movwf	pclath,c
 18942  000560  0101               	movlb	1	; () banked
 18943  000562  51B7               	movf	(_LUN+4)& (0+255),w,b
 18944  000564  6EFD               	movwf	tosl,c
 18945  000566  51B8               	movf	(_LUN+5)& (0+255),w,b
 18946  000568  6EFE               	movwf	tosh,c
 18947  00056A  6AFF               	clrf	tosu,c
 18948  00056C  50FA               	movf	pclath,w,c
 18949  00056E  0012               	return		;indir
 18950  000570                     u10799:
 18951  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18952  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18953  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18954  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18955                           
 18956                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18957  00057C  EE26 F000          	lfsr	2,1536
 18958  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18959                           
 18960                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18961  000584  EE26 F001          	lfsr	2,1537	;volatile
 18962  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18963                           
 18964                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18965  00058C  EE26 F002          	lfsr	2,1538	;volatile
 18966  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18967                           
 18968                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18969  000594  EE26 F003          	lfsr	2,1539	;volatile
 18970  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18971                           
 18972                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18973  00059C  EE26 F004          	lfsr	2,1540	;volatile
 18974  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18975                           
 18976                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18977  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 18978  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18979                           
 18980                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18981  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 18982  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18983                           
 18984                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18985  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 18986  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18987                           
 18988                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18989  0005BC  0E00               	movlw	0
 18990  0005BE  0100               	movlb	0	; () banked
 18991  0005C0  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 18992  0005C2  0E08               	movlw	8
 18993  0005C4  6FD9               	movwf	_TransferLength& (0+255),b
 18994                           
 18995                           ; BSR set to: 0
 18996                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18997  0005C6  0E00               	movlw	0
 18998  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18999  0005CA  0E08               	movlw	8
 19000  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19001  0005CE  EC31  F041         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19002                           
 19003                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 19004  0005D2  0EFD               	movlw	253
 19005  0005D4  0100               	movlb	0	; () banked
 19006  0005D6  6FEA               	movwf	_MSDCommandState& (0+255),b
 19007                           
 19008                           ;usb_device_msd.c: 802: break;
 19009  0005D8  0012               	return	
 19010  0005DA                     
 19011                           ; BSR set to: 0
 19012                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 19013                           
 19014                           ; BSR set to: 0
 19015  0005DA  05E5               	decf	_MSDHostNoData& (0+255),w,b
 19016  0005DC  A4D8               	btfss	status,2,c
 19017  0005DE  D002               	goto	l625
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 19021  0005E0  69EA               	setf	_MSDCommandState& (0+255),b
 19022                           
 19023                           ;usb_device_msd.c: 814: break;
 19024  0005E2  0012               	return	
 19025  0005E4                     l625:
 19026                           
 19027                           ; BSR set to: 0
 19028                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 19029                           
 19030                           ; BSR set to: 0
 19031  0005E4  0E00               	movlw	0
 19032  0005E6  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 19033  0005E8  0E12               	movlw	18
 19034  0005EA  6FD9               	movwf	_TransferLength& (0+255),b
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 19038  0005EC  0E00               	movlw	0
 19039  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19040  0005F0  0E12               	movlw	18
 19041  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19042  0005F4  EC31  F041         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19043                           
 19044                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 19045  0005F8  0E00               	movlw	0
 19046  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19047  0005FC                     l13770:
 19048  0005FC  0E11               	movlw	17
 19049  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 19050  000600  D001               	goto	l626
 19051  000602  D014               	goto	u10820
 19052  000604                     l626:
 19053                           
 19054                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 19055  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19056  000606  0D01               	mullw	1
 19057  000608  0E1F               	movlw	low _gblSenseData
 19058  00060A  24F3               	addwf	prodl,w,c
 19059  00060C  6ED9               	movwf	fsr2l,c
 19060  00060E  0E01               	movlw	high _gblSenseData
 19061  000610  20F4               	addwfc	prodh,w,c
 19062  000612  6EDA               	movwf	fsr2h,c
 19063  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19064  000616  0D01               	mullw	1
 19065  000618  0E00               	movlw	0
 19066  00061A  24F3               	addwf	prodl,w,c
 19067  00061C  6EE1               	movwf	fsr1l,c
 19068  00061E  0E06               	movlw	6
 19069  000620  20F4               	addwfc	prodh,w,c
 19070  000622  6EE2               	movwf	fsr1h,c
 19071  000624  CFDF FFE7          	movff	indf2,indf1
 19072  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19073  00062A  D7E8               	goto	l13770
 19074  00062C                     u10820:
 19075                           
 19076                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 19077  00062C  0EFD               	movlw	253
 19078  00062E  0100               	movlb	0	; () banked
 19079  000630  6FEA               	movwf	_MSDCommandState& (0+255),b
 19080                           
 19081                           ;usb_device_msd.c: 827: break;
 19082  000632  0012               	return	
 19083  000634                     l628:
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 19087  000634  0E03               	movlw	3
 19088  000636  CFE8 F600          	movff	wreg,1536
 19089                           
 19090                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 19091  00063A  0E00               	movlw	0
 19092  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 19093                           
 19094                           ; BSR set to: 0
 19095                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 19096  000640  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19097  000644  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19098  000648  D801               	call	u10838
 19099  00064A  D00A               	goto	u10839
 19100  00064C                     u10838:
 19101  00064C  0005               	push	
 19102  00064E  6EFA               	movwf	pclath,c
 19103  000650  0101               	movlb	1	; () banked
 19104  000652  51BD               	movf	(_LUN+10)& (0+255),w,b
 19105  000654  6EFD               	movwf	tosl,c
 19106  000656  51BE               	movf	(_LUN+11)& (0+255),w,b
 19107  000658  6EFE               	movwf	tosh,c
 19108  00065A  6AFF               	clrf	tosu,c
 19109  00065C  50FA               	movf	pclath,w,c
 19110  00065E  0012               	return		;indir
 19111  000660                     u10839:
 19112  000660  0900               	iorlw	0
 19113  000662  A4D8               	btfss	status,2,c
 19114  000664  D004               	goto	l630
 19115  000666  0E00               	movlw	0
 19116  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19117  00066A  0E00               	movlw	0
 19118  00066C  D003               	goto	L19
 19119  00066E                     l630:
 19120  00066E  0E00               	movlw	0
 19121  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19122  000672  0E80               	movlw	128
 19123  000674                     L19:
 19124  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 19125  000676  EE26 F002          	lfsr	2,1538	;volatile
 19126  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 19127                           
 19128                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 19129  00067E  0E00               	movlw	0
 19130  000680  CFE8 F603          	movff	wreg,1539	;volatile
 19131                           
 19132                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 19133  000684  0E00               	movlw	0
 19134  000686  0100               	movlb	0	; () banked
 19135  000688  6FDA               	movwf	(_TransferLength+1)& (0+255),b
 19136  00068A  0E04               	movlw	4
 19137  00068C  6FD9               	movwf	_TransferLength& (0+255),b
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 19141  00068E  0E00               	movlw	0
 19142  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19143  000692  0E04               	movlw	4
 19144  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19145  000696  EC31  F041         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19146                           
 19147                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 19148  00069A  0EFD               	movlw	253
 19149  00069C  0100               	movlb	0	; () banked
 19150  00069E  6FEA               	movwf	_MSDCommandState& (0+255),b
 19151                           
 19152                           ;usb_device_msd.c: 839: break;
 19153  0006A0  0012               	return	
 19154  0006A2                     
 19155                           ; BSR set to: 0
 19156                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 19157                           
 19158                           ; BSR set to: 0
 19159  0006A2  0101               	movlb	1	; () banked
 19160  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19161  0006A6  0BF0               	andlw	-16
 19162  0006A8  0905               	iorlw	5
 19163  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19164                           
 19165                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 19166  0006AC  0E20               	movlw	32
 19167  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19168                           
 19169                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 19170  0006B0  0E00               	movlw	0
 19171  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19172                           
 19173                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 19174  0006B4  0E01               	movlw	1
 19175  0006B6  010D               	movlb	13	; () banked
 19176  0006B8  6F8C               	movwf	140,b	;volatile
 19177                           
 19178                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 19179  0006BA  0E00               	movlw	0
 19180  0006BC  6F88               	movwf	136,b	;volatile
 19181  0006BE  0E00               	movlw	0
 19182  0006C0  6F89               	movwf	137,b	;volatile
 19183  0006C2  0E00               	movlw	0
 19184  0006C4  6F8A               	movwf	138,b	;volatile
 19185  0006C6  0E00               	movlw	0
 19186  0006C8  6F8B               	movwf	139,b	;volatile
 19187                           
 19188                           ; BSR set to: 13
 19189                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 19190  0006CA  0100               	movlb	0	; () banked
 19191  0006CC  69EA               	setf	_MSDCommandState& (0+255),b
 19192                           
 19193                           ;usb_device_msd.c: 848: break;
 19194  0006CE  0012               	return	
 19195  0006D0                     
 19196                           ; BSR set to: 0
 19197                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 19198                           
 19199                           ; BSR set to: 0
 19200  0006D0  0E00               	movlw	0
 19201  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 19202  0006D4  0E00               	movlw	0
 19203  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 19204  0006D8  0E00               	movlw	0
 19205  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 19206  0006DC  0E00               	movlw	0
 19207  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 19208  0006E0  EC37  F033         	call	_MSDCheckForErrorCases	;wreg free
 19209  0006E4  0900               	iorlw	0
 19210  0006E6  A4D8               	btfss	status,2,c
 19211  0006E8  0012               	return	
 19212                           
 19213                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 19214                           
 19215                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 19216  0006EA  0101               	movlb	1	; () banked
 19217  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19218  0006EE  0B0F               	andlw	15
 19219  0006F0  0A06               	xorlw	6
 19220  0006F2  A4D8               	btfss	status,2,c
 19221  0006F4  D007               	goto	l636
 19222                           
 19223                           ; BSR set to: 1
 19224  0006F6  010D               	movlb	13	; () banked
 19225  0006F8  058C               	decf	140,w,b	;volatile
 19226  0006FA  A4D8               	btfss	status,2,c
 19227  0006FC  D003               	goto	l636
 19228                           
 19229                           ; BSR set to: 13
 19230                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 19231  0006FE  0100               	movlb	0	; () banked
 19232  000700  69EA               	setf	_MSDCommandState& (0+255),b
 19233                           
 19234                           ;usb_device_msd.c: 870: }
 19235  000702  0012               	return	
 19236  000704                     l636:
 19237                           
 19238                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 19239                           
 19240                           ; BSR set to: 0
 19241  000704  ECF6  F046         	call	_ResetSenseData	;wreg free
 19242                           
 19243                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 19244  000708  0E00               	movlw	0
 19245  00070A  010D               	movlb	13	; () banked
 19246  00070C  6F88               	movwf	136,b	;volatile
 19247  00070E  0E00               	movlw	0
 19248  000710  6F89               	movwf	137,b	;volatile
 19249  000712  0E00               	movlw	0
 19250  000714  6F8A               	movwf	138,b	;volatile
 19251  000716  0E00               	movlw	0
 19252  000718  6F8B               	movwf	139,b	;volatile
 19253                           
 19254                           ; BSR set to: 13
 19255                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 19256  00071A  0100               	movlb	0	; () banked
 19257  00071C  69EA               	setf	_MSDCommandState& (0+255),b
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 19261  00071E  0012               	return	
 19262  000720                     
 19263                           ; BSR set to: 0
 19264                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 19265                           
 19266                           ; BSR set to: 0
 19267                           
 19268                           ; BSR set to: 0
 19269  000720  0E00               	movlw	0
 19270  000722  010D               	movlb	13	; () banked
 19271  000724  6F88               	movwf	136,b	;volatile
 19272  000726  0E00               	movlw	0
 19273  000728  6F89               	movwf	137,b	;volatile
 19274  00072A  0E00               	movlw	0
 19275  00072C  6F8A               	movwf	138,b	;volatile
 19276  00072E  0E00               	movlw	0
 19277  000730  6F8B               	movwf	139,b	;volatile
 19278                           
 19279                           ; BSR set to: 13
 19280                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 19281  000732  0100               	movlb	0	; () banked
 19282  000734  69EA               	setf	_MSDCommandState& (0+255),b
 19283                           
 19284                           ;usb_device_msd.c: 885: break;
 19285  000736  0012               	return	
 19286  000738                     
 19287                           ; BSR set to: 0
 19288                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 19289                           
 19290                           ; BSR set to: 0
 19291  000738  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 19292  00073A  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19293  00073C  B4D8               	btfsc	status,2,c
 19294  00073E  D006               	goto	u10890
 19295                           
 19296                           ; BSR set to: 0
 19297  000740  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 19298  000744  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19299  000748  BEDF               	btfsc	indf2,7,c
 19300  00074A  0012               	return	
 19301  00074C                     u10890:
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 19305                           
 19306                           ; BSR set to: 0
 19307  00074C  0101               	movlb	1	; () banked
 19308  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 19309  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19310  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19311  000754  E104               	bnz	u10900
 19312  000756  0E40               	movlw	64
 19313  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 19314  00075A  A0D8               	btfss	status,0,c
 19315  00075C  D009               	goto	l644
 19316  00075E                     u10900:
 19317                           
 19318                           ; BSR set to: 1
 19319                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 19320  00075E  0E40               	movlw	64
 19321  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 19322                           
 19323                           ; BSR set to: 1
 19324                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 19325  000762  0E40               	movlw	64
 19326  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19327  000766  0E00               	movlw	0
 19328  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19329  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19330  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19331                           
 19332                           ;usb_device_msd.c: 900: }
 19333  00076E  D00A               	goto	l645
 19334  000770                     l644:
 19335                           
 19336                           ; BSR set to: 1
 19337                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 19338  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 19339                           
 19340                           ; BSR set to: 1
 19341                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 19342  000774  0E00               	movlw	0
 19343  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 19344  000778  0E00               	movlw	0
 19345  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 19346  00077C  0E00               	movlw	0
 19347  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 19348  000780  0E00               	movlw	0
 19349  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19350  000784                     l645:
 19351                           
 19352                           ; BSR set to: 1
 19353                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19354                           
 19355                           ; BSR set to: 1
 19356  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19357  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19358  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19359  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19360  00078C  0100               	movlb	0	; () banked
 19361  00078E  5DD9               	subwf	_TransferLength& (0+255),w,b
 19362  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19363  000792  59DA               	subwfb	(_TransferLength+1)& (0+255),w,b
 19364  000794  A0D8               	btfss	status,0,c
 19365  000796  D005               	goto	l646
 19366                           
 19367                           ; BSR set to: 0
 19368                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19369  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19370  00079A  5FD9               	subwf	_TransferLength& (0+255),f,b
 19371  00079C  0E00               	movlw	0
 19372  00079E  5BDA               	subwfb	(_TransferLength+1)& (0+255),f,b
 19373                           
 19374                           ;usb_device_msd.c: 918: }
 19375  0007A0  D01A               	goto	u10930
 19376  0007A2                     l646:
 19377                           
 19378                           ; BSR set to: 0
 19379                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19380                           
 19381                           ; BSR set to: 0
 19382  0007A2  0E00               	movlw	0
 19383  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19384  0007A6  D013               	goto	l648
 19385  0007A8                     
 19386                           ; BSR set to: 0
 19387                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19388                           
 19389                           ; BSR set to: 0
 19390  0007A8  51D9               	movf	_TransferLength& (0+255),w,b
 19391  0007AA  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 19392  0007AC  B4D8               	btfsc	status,2,c
 19393  0007AE  D004               	goto	l650
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19397  0007B0  07D9               	decf	_TransferLength& (0+255),f,b
 19398  0007B2  A0D8               	btfss	status,0,c
 19399  0007B4  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 19400                           
 19401                           ;usb_device_msd.c: 932: }
 19402  0007B6  D00A               	goto	l651
 19403  0007B8                     l650:
 19404                           
 19405                           ; BSR set to: 0
 19406                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19407                           
 19408                           ; BSR set to: 0
 19409  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19410  0007BA  0D01               	mullw	1
 19411  0007BC  0E00               	movlw	0
 19412  0007BE  24F3               	addwf	prodl,w,c
 19413  0007C0  6ED9               	movwf	fsr2l,c
 19414  0007C2  0E06               	movlw	6
 19415  0007C4  20F4               	addwfc	prodh,w,c
 19416  0007C6  6EDA               	movwf	fsr2h,c
 19417  0007C8  0E00               	movlw	0
 19418  0007CA  6EDF               	movwf	indf2,c
 19419  0007CC                     l651:
 19420                           
 19421                           ; BSR set to: 0
 19422                           
 19423                           ; BSR set to: 0
 19424  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19425  0007CE                     l648:
 19426                           
 19427                           ; BSR set to: 0
 19428                           
 19429                           ; BSR set to: 0
 19430  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19431  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 19432  0007D2  A0D8               	btfss	status,0,c
 19433  0007D4  D7E9               	goto	l649
 19434  0007D6                     u10930:
 19435                           
 19436                           ; BSR set to: 0
 19437                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 19438                           
 19439                           ; BSR set to: 0
 19440                           
 19441                           ; BSR set to: 0
 19442  0007D6  0E01               	movlw	1
 19443  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 19444  0007DA  0E00               	movlw	0
 19445  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 19446  0007DE  0E06               	movlw	6
 19447  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19448  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19449  0007E6  0E02               	movlw	2
 19450  0007E8  ECFC  F02C         	call	_USBTransferOnePacket
 19451  0007EC  C001  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19452  0007F0  C002  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19453                           
 19454                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19455  0007F4  0101               	movlb	1	; () banked
 19456  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19457  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19458  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19459  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19460  0007FE  A4D8               	btfss	status,2,c
 19461  000800  0012               	return	
 19462                           
 19463                           ; BSR set to: 1
 19464                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19465  000802  0100               	movlb	0	; () banked
 19466  000804  69EA               	setf	_MSDCommandState& (0+255),b
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19470                           
 19471                           ; BSR set to: 0
 19472                           
 19473                           ;usb_device_msd.c: 949: break;
 19474  000806  0012               	return	
 19475  000808                     
 19476                           ; BSR set to: 0
 19477                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19478                           
 19479                           ; BSR set to: 0
 19480                           
 19481                           ;usb_device_msd.c: 954: default:
 19482                           
 19483                           ; BSR set to: 0
 19484  000808  0E7F               	movlw	127
 19485  00080A  ECF8  F02B         	call	_MSDErrorHandler
 19486                           
 19487                           ;usb_device_msd.c: 960: }
 19488                           
 19489                           ;usb_device_msd.c: 959: break;
 19490  00080E  0012               	return	
 19491  000810                     l614:
 19492  000810  0100               	movlb	0	; () banked
 19493  000812  51EA               	movf	_MSDCommandState& (0+255),w,b
 19494                           
 19495                           ; Switch size 1, requested type "space"
 19496                           ; Number of cases is 12, Range of values is 0 to 254
 19497                           ; switch strategies available:
 19498                           ; Name         Instructions Cycles
 19499                           ; simple_byte           37    19 (average)
 19500                           ;	Chosen strategy is simple_byte
 19501  000814  0A00               	xorlw	0	; case 0
 19502  000816  B4D8               	btfsc	status,2,c
 19503  000818  D75B               	goto	l634
 19504  00081A  0A03               	xorlw	3	; case 3
 19505  00081C  B4D8               	btfsc	status,2,c
 19506  00081E  D6DD               	goto	l624
 19507  000820  0A11               	xorlw	17	; case 18
 19508  000822  B4D8               	btfsc	status,2,c
 19509  000824  D64C               	goto	l620
 19510  000826  0A08               	xorlw	8	; case 26
 19511  000828  B4D8               	btfsc	status,2,c
 19512  00082A  D704               	goto	l628
 19513  00082C  0A01               	xorlw	1	; case 27
 19514  00082E  B4D8               	btfsc	status,2,c
 19515  000830  D777               	goto	l638
 19516  000832  0A05               	xorlw	5	; case 30
 19517  000834  B4D8               	btfsc	status,2,c
 19518  000836  D735               	goto	l633
 19519  000838  0A3B               	xorlw	59	; case 37
 19520  00083A  B4D8               	btfsc	status,2,c
 19521  00083C  D671               	goto	l623
 19522  00083E  0A0D               	xorlw	13	; case 40
 19523  000840  B4D8               	btfsc	status,2,c
 19524  000842  D62D               	goto	l615
 19525  000844  0A02               	xorlw	2	; case 42
 19526  000846  B4D8               	btfsc	status,2,c
 19527  000848  D632               	goto	l618
 19528  00084A  0A05               	xorlw	5	; case 47
 19529  00084C  B4D8               	btfsc	status,2,c
 19530  00084E  D768               	goto	l638
 19531  000850  0AD2               	xorlw	210	; case 253
 19532  000852  B4D8               	btfsc	status,2,c
 19533  000854  D771               	goto	l640
 19534  000856  0A03               	xorlw	3	; case 254
 19535  000858  D7D7               	goto	l654
 19536  00085A                     __end_of_MSDProcessCommandMediaPresent:
 19537                           	opt stack 0
 19538                           tosu	equ	0xFFF
 19539                           tosh	equ	0xFFE
 19540                           tosl	equ	0xFFD
 19541                           pclath	equ	0xFFA
 19542                           tblptru	equ	0xFF8
 19543                           tblptrh	equ	0xFF7
 19544                           tblptrl	equ	0xFF6
 19545                           tablat	equ	0xFF5
 19546                           prodh	equ	0xFF4
 19547                           prodl	equ	0xFF3
 19548                           intcon	equ	0xFF2
 19549                           intcon2	equ	0xFF1
 19550                           intcon3	equ	0xFF0
 19551                           indf0	equ	0xFEF
 19552                           postinc0	equ	0xFEE
 19553                           fsr0h	equ	0xFEA
 19554                           fsr0l	equ	0xFE9
 19555                           wreg	equ	0xFE8
 19556                           indf1	equ	0xFE7
 19557                           postdec1	equ	0xFE5
 19558                           plusw1	equ	0xFE3
 19559                           fsr1h	equ	0xFE2
 19560                           fsr1l	equ	0xFE1
 19561                           indf2	equ	0xFDF
 19562                           postinc2	equ	0xFDE
 19563                           postdec2	equ	0xFDD
 19564                           plusw2	equ	0xFDB
 19565                           fsr2h	equ	0xFDA
 19566                           fsr2l	equ	0xFD9
 19567                           status	equ	0xFD8
 19568                           
 19569 ;; *************** function _MSDWriteHandler *****************
 19570 ;; Defined at:
 19571 ;;		line 1188 in file "usb_device_msd.c"
 19572 ;; Parameters:    Size  Location     Type
 19573 ;;		None
 19574 ;; Auto vars:     Size  Location     Type
 19575 ;;		None
 19576 ;; Return value:  Size  Location     Type
 19577 ;;                  1    wreg      unsigned char 
 19578 ;; Registers used:
 19579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19580 ;; Tracked objects:
 19581 ;;		On entry : 0/0
 19582 ;;		On exit  : 0/0
 19583 ;;		Unchanged: 0/0
 19584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19587 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19589 ;;Total ram usage:        5 bytes
 19590 ;; Hardware stack levels used:    1
 19591 ;; Hardware stack levels required when called:    6
 19592 ;; This function calls:
 19593 ;;		_ExternalFlash_SectorWrite
 19594 ;;		_ExternalFlash_WriteProtectStateGet
 19595 ;;		_MSDCheckForErrorCases
 19596 ;;		_USBStallEndpoint
 19597 ;;		_USBTransferOnePacket
 19598 ;; This function is called by:
 19599 ;;		_MSDProcessCommandMediaPresent
 19600 ;; This function uses a non-reentrant model
 19601 ;;
 19602                           
 19603                           	psect	text87
 19604  00184A                     __ptext87:
 19605                           	opt stack 0
 19606  00184A                     _MSDWriteHandler:
 19607                           	opt stack 20
 19608                           
 19609                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19610                           
 19611                           ;incstack = 0
 19612  00184A  D146               	goto	l684
 19613  00184C                     l685:
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19617  00184C  C111  F163         	movff	_gblCBW+17,_LBA+3
 19618                           
 19619                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19620  001850  C112  F162         	movff	_gblCBW+18,_LBA+2
 19621                           
 19622                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19623  001854  C113  F161         	movff	_gblCBW+19,_LBA+1
 19624                           
 19625                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19626  001858  C114  F160         	movff	_gblCBW+20,_LBA
 19627                           
 19628                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19629  00185C  C116  F0DA         	movff	_gblCBW+22,_TransferLength+1
 19630                           
 19631                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19632  001860  C117  F0D9         	movff	_gblCBW+23,_TransferLength
 19633                           
 19634                           ; BSR set to: 0
 19635                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19636  001864  51D9               	movf	_TransferLength& (0+255),w,b
 19637  001866  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19638  001868  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 19639  00186A  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19640  00186C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19641  00186E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19642  001870  0E09               	movlw	9
 19643  001872                     u9375:
 19644  001872  90D8               	bcf	status,0,c
 19645  001874  3630               	rlcf	??_MSDWriteHandler,f,c
 19646  001876  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19647  001878  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19648  00187A  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19649  00187C  2EE8               	decfsz	wreg,f,c
 19650  00187E  D7F9               	goto	u9375
 19651  001880  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19652  001884  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19653  001888  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19654  00188C  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19655  001890  EC37  F033         	call	_MSDCheckForErrorCases	;wreg free
 19656  001894  0900               	iorlw	0
 19657  001896  A4D8               	btfss	status,2,c
 19658  001898  D131               	goto	l687
 19659                           
 19660                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19661                           
 19662                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19663  00189A  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19664  00189E  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19665  0018A2  D801               	call	u9398
 19666  0018A4  D00A               	goto	u9399
 19667  0018A6                     u9398:
 19668  0018A6  0005               	push	
 19669  0018A8  6EFA               	movwf	pclath,c
 19670  0018AA  0101               	movlb	1	; () banked
 19671  0018AC  51BD               	movf	(_LUN+10)& (0+255),w,b
 19672  0018AE  6EFD               	movwf	tosl,c
 19673  0018B0  51BE               	movf	(_LUN+11)& (0+255),w,b
 19674  0018B2  6EFE               	movwf	tosh,c
 19675  0018B4  6AFF               	clrf	tosu,c
 19676  0018B6  50FA               	movf	pclath,w,c
 19677  0018B8  0012               	return		;indir
 19678  0018BA                     u9399:
 19679  0018BA  0900               	iorlw	0
 19680  0018BC  B4D8               	btfsc	status,2,c
 19681  0018BE  D016               	goto	l688
 19682                           
 19683                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19684  0018C0  0E01               	movlw	1
 19685  0018C2  010D               	movlb	13	; () banked
 19686  0018C4  6F8C               	movwf	140,b	;volatile
 19687                           
 19688                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19689  0018C6  0101               	movlb	1	; () banked
 19690  0018C8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19691  0018CA  0BF0               	andlw	-16
 19692  0018CC  0907               	iorlw	7
 19693  0018CE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19694                           
 19695                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19696  0018D0  0E27               	movlw	39
 19697  0018D2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19698                           
 19699                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19700  0018D4  0E00               	movlw	0
 19701  0018D6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19702                           
 19703                           ; BSR set to: 1
 19704                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19705  0018D8  0E00               	movlw	0
 19706  0018DA  6E01               	movwf	USBStallEndpoint@dir,c
 19707  0018DC  0E02               	movlw	2
 19708  0018DE  EC74  F02B         	call	_USBStallEndpoint
 19709                           
 19710                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19711  0018E2  0E00               	movlw	0
 19712  0018E4  0100               	movlb	0	; () banked
 19713  0018E6  6FE8               	movwf	_MSDWriteState& (0+255),b
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19717  0018E8  51E8               	movf	_MSDWriteState& (0+255),w,b
 19718                           
 19719                           ; BSR set to: 0
 19720  0018EA  0012               	return	
 19721  0018EC                     l688:
 19722                           
 19723                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19724                           
 19725                           ; BSR set to: 0
 19726  0018EC  0E01               	movlw	1
 19727  0018EE  0100               	movlb	0	; () banked
 19728  0018F0  6FEB               	movwf	_MSD_State& (0+255),b
 19729  0018F2                     
 19730                           ; BSR set to: 0
 19731                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19732                           
 19733                           ; BSR set to: 0
 19734  0018F2  51D9               	movf	_TransferLength& (0+255),w,b
 19735  0018F4  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 19736  0018F6  A4D8               	btfss	status,2,c
 19737  0018F8  D002               	goto	l691
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19741  0018FA  0E00               	movlw	0
 19742  0018FC  D056               	goto	L20
 19743  0018FE                     l691:
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19747                           
 19748                           ; BSR set to: 0
 19749  0018FE  0E03               	movlw	3
 19750  001900  6FE8               	movwf	_MSDWriteState& (0+255),b
 19751                           
 19752                           ; BSR set to: 0
 19753                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19754  001902  0E00               	movlw	0
 19755  001904  0101               	movlb	1	; () banked
 19756  001906  6F88               	movwf	_ptrNextData& (0+255),b
 19757  001908  0E06               	movlw	6
 19758  00190A  6F89               	movwf	(_ptrNextData+1)& (0+255),b
 19759                           
 19760                           ; BSR set to: 1
 19761                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19762  00190C  0E00               	movlw	0
 19763  00190E  010D               	movlb	13	; () banked
 19764  001910  6F88               	movwf	136,b	;volatile
 19765  001912  0E02               	movlw	2
 19766  001914  6F89               	movwf	137,b	;volatile
 19767  001916  0E00               	movlw	0
 19768  001918  6F8A               	movwf	138,b	;volatile
 19769  00191A  0E00               	movlw	0
 19770  00191C  6F8B               	movwf	139,b	;volatile
 19771  00191E                     l692:
 19772                           
 19773                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19774  00191E  010D               	movlb	13	; () banked
 19775  001920  5188               	movf	136,w,b	;volatile
 19776  001922  1189               	iorwf	137,w,b	;volatile
 19777  001924  118A               	iorwf	138,w,b	;volatile
 19778  001926  118B               	iorwf	139,w,b	;volatile
 19779  001928  B4D8               	btfsc	status,2,c
 19780  00192A  D01E               	goto	l693
 19781                           
 19782                           ; BSR set to: 13
 19783                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19784  00192C  0100               	movlb	0	; () banked
 19785  00192E  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 19786  001930  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19787  001932  B4D8               	btfsc	status,2,c
 19788  001934  D006               	goto	l694
 19789                           
 19790                           ; BSR set to: 0
 19791  001936  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19792  00193A  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19793  00193E  BEDF               	btfsc	indf2,7,c
 19794  001940  D0DD               	goto	l687
 19795  001942                     l694:
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19799                           
 19800                           ; BSR set to: 0
 19801  001942  0E00               	movlw	0
 19802  001944  6E01               	movwf	USBTransferOnePacket@dir,c
 19803  001946  C188  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19804  00194A  C189  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19805  00194E  0E40               	movlw	64
 19806  001950  6E04               	movwf	USBTransferOnePacket@len,c
 19807  001952  0E02               	movlw	2
 19808  001954  ECFC  F02C         	call	_USBTransferOnePacket
 19809  001958  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19810  00195C  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19811                           
 19812                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19813  001960  0E04               	movlw	4
 19814  001962  0100               	movlb	0	; () banked
 19815  001964  6FE8               	movwf	_MSDWriteState& (0+255),b
 19816                           
 19817                           ;usb_device_msd.c: 1260: }
 19818  001966  D023               	goto	l695
 19819  001968                     l693:
 19820                           
 19821                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19822                           
 19823                           ; BSR set to: 0
 19824  001968  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19825  00196C  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19826  001970  D801               	call	u9458
 19827  001972  D00A               	goto	u9459
 19828  001974                     u9458:
 19829  001974  0005               	push	
 19830  001976  6EFA               	movwf	pclath,c
 19831  001978  0101               	movlb	1	; () banked
 19832  00197A  51BD               	movf	(_LUN+10)& (0+255),w,b
 19833  00197C  6EFD               	movwf	tosl,c
 19834  00197E  51BE               	movf	(_LUN+11)& (0+255),w,b
 19835  001980  6EFE               	movwf	tosh,c
 19836  001982  6AFF               	clrf	tosu,c
 19837  001984  50FA               	movf	pclath,w,c
 19838  001986  0012               	return		;indir
 19839  001988                     u9459:
 19840  001988  0900               	iorlw	0
 19841  00198A  B4D8               	btfsc	status,2,c
 19842  00198C  D00C               	goto	l696
 19843                           
 19844                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19845  00198E  0E01               	movlw	1
 19846  001990  010D               	movlb	13	; () banked
 19847  001992  6F8C               	movwf	140,b	;volatile
 19848                           
 19849                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19850  001994  0101               	movlb	1	; () banked
 19851  001996  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19852  001998  0BF0               	andlw	-16
 19853  00199A  0902               	iorlw	2
 19854  00199C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19855                           
 19856                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19857  00199E  0E27               	movlw	39
 19858  0019A0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19859                           
 19860                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19861  0019A2  0E00               	movlw	0
 19862  0019A4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19863  0019A6                     l696:
 19864                           
 19865                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19866  0019A6  0E02               	movlw	2
 19867  0019A8  D095               	goto	L22
 19868  0019AA                     L20:
 19869  0019AA  6FE8               	movwf	_MSDWriteState& (0+255),b
 19870                           
 19871                           ;usb_device_msd.c: 1280: break;
 19872  0019AC  D0A7               	goto	l687
 19873  0019AE                     l695:
 19874                           
 19875                           ; BSR set to: 0
 19876                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19877                           
 19878                           ; BSR set to: 0
 19879                           
 19880                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19881                           
 19882                           ; BSR set to: 0
 19883  0019AE  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 19884  0019B0  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19885  0019B2  B4D8               	btfsc	status,2,c
 19886  0019B4  D006               	goto	l698
 19887                           
 19888                           ; BSR set to: 0
 19889  0019B6  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19890  0019BA  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19891  0019BE  BEDF               	btfsc	indf2,7,c
 19892  0019C0  D09D               	goto	l687
 19893  0019C2                     l698:
 19894                           
 19895                           ; BSR set to: 0
 19896                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19897                           
 19898                           ; BSR set to: 0
 19899  0019C2  EE20 F001          	lfsr	2,1
 19900  0019C6  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 19901  0019C8  26D9               	addwf	fsr2l,f,c
 19902  0019CA  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19903  0019CC  22DA               	addwfc	fsr2h,f,c
 19904  0019CE  50DF               	movf	indf2,w,c
 19905  0019D0  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19906  0019D2  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19907  0019D6  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19908  0019D8  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19909  0019DA  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19910  0019DC  5031               	movf	??_MSDWriteHandler+1,w,c
 19911  0019DE  0101               	movlb	1	; () banked
 19912  0019E0  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19913  0019E2  5032               	movf	??_MSDWriteHandler+2,w,c
 19914  0019E4  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19915  0019E6  5033               	movf	??_MSDWriteHandler+3,w,c
 19916  0019E8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19917  0019EA  5034               	movf	??_MSDWriteHandler+4,w,c
 19918  0019EC  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19919                           
 19920                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19921  0019EE  0100               	movlb	0	; () banked
 19922  0019F0  EE20 F001          	lfsr	2,1
 19923  0019F4  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 19924  0019F6  26D9               	addwf	fsr2l,f,c
 19925  0019F8  51DE               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19926  0019FA  22DA               	addwfc	fsr2h,f,c
 19927  0019FC  50DF               	movf	indf2,w,c
 19928  0019FE  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19929  001A00  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19930  001A04  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19931  001A06  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19932  001A08  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19933  001A0A  5031               	movf	??_MSDWriteHandler+1,w,c
 19934  001A0C  010D               	movlb	13	; () banked
 19935  001A0E  5F88               	subwf	136,f,b	;volatile
 19936  001A10  5032               	movf	??_MSDWriteHandler+2,w,c
 19937  001A12  5B89               	subwfb	137,f,b	;volatile
 19938  001A14  5033               	movf	??_MSDWriteHandler+3,w,c
 19939  001A16  5B8A               	subwfb	138,f,b	;volatile
 19940  001A18  5034               	movf	??_MSDWriteHandler+4,w,c
 19941  001A1A  5B8B               	subwfb	139,f,b	;volatile
 19942                           
 19943                           ; BSR set to: 13
 19944                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19945  001A1C  0E40               	movlw	64
 19946  001A1E  0101               	movlb	1	; () banked
 19947  001A20  2788               	addwf	_ptrNextData& (0+255),f,b
 19948  001A22  0E00               	movlw	0
 19949  001A24  2389               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19950                           
 19951                           ; BSR set to: 1
 19952                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19953  001A26  0E03               	movlw	3
 19954  001A28  D055               	goto	L22
 19955  001A2A                     
 19956                           ; BSR set to: 0
 19957                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19958                           
 19959                           ; BSR set to: 0
 19960  001A2A  010D               	movlb	13	; () banked
 19961  001A2C  518C               	movf	140,w,b	;volatile
 19962  001A2E  A4D8               	btfss	status,2,c
 19963  001A30  D03B               	goto	l703
 19964                           
 19965                           ; BSR set to: 13
 19966                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19967  001A32  C1C1  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19968  001A36  C1C2  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19969  001A3A  C160  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19970  001A3E  C161  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19971  001A42  C162  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19972  001A46  C163  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19973  001A4A  0E00               	movlw	0
 19974  001A4C  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19975  001A4E  0E06               	movlw	6
 19976  001A50  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19977  001A52  0101               	movlb	1	; () banked
 19978  001A54  5160               	movf	_LBA& (0+255),w,b
 19979  001A56  1161               	iorwf	(_LBA+1)& (0+255),w,b
 19980  001A58  1162               	iorwf	(_LBA+2)& (0+255),w,b
 19981  001A5A  1163               	iorwf	(_LBA+3)& (0+255),w,b
 19982  001A5C  A4D8               	btfss	status,2,c
 19983  001A5E  D002               	goto	u9500
 19984  001A60  0E01               	movlw	1
 19985  001A62  D001               	goto	u9510
 19986  001A64                     u9500:
 19987  001A64  0E00               	movlw	0
 19988  001A66                     u9510:
 19989  001A66  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19990  001A68  D801               	call	u9528
 19991  001A6A  D009               	goto	u9529
 19992  001A6C                     u9528:
 19993  001A6C  0005               	push	
 19994  001A6E  6EFA               	movwf	pclath,c
 19995  001A70  51BF               	movf	(_LUN+12)& (0+255),w,b
 19996  001A72  6EFD               	movwf	tosl,c
 19997  001A74  51C0               	movf	(_LUN+13)& (0+255),w,b
 19998  001A76  6EFE               	movwf	tosh,c
 19999  001A78  6AFF               	clrf	tosu,c
 20000  001A7A  50FA               	movf	pclath,w,c
 20001  001A7C  0012               	return		;indir
 20002  001A7E                     u9529:
 20003  001A7E  06E8               	decf	wreg,f,c
 20004  001A80  B4D8               	btfsc	status,2,c
 20005  001A82  D012               	goto	l703
 20006                           
 20007                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 20008  001A84  0E64               	movlw	100
 20009  001A86  0100               	movlb	0	; () banked
 20010  001A88  61E7               	cpfslt	_MSDRetryAttempt& (0+255),b
 20011  001A8A  D002               	goto	l702
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 20015  001A8C  2BE7               	incf	_MSDRetryAttempt& (0+255),f,b
 20016                           
 20017                           ;usb_device_msd.c: 1314: break;
 20018  001A8E  D036               	goto	l687
 20019  001A90                     l702:
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 20023                           
 20024                           ; BSR set to: 0
 20025  001A90  0E01               	movlw	1
 20026  001A92  010D               	movlb	13	; () banked
 20027  001A94  6F8C               	movwf	140,b	;volatile
 20028                           
 20029                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 20030  001A96  0101               	movlb	1	; () banked
 20031  001A98  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20032  001A9A  0BF0               	andlw	-16
 20033  001A9C  0903               	iorlw	3
 20034  001A9E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20035                           
 20036                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 20037  001AA0  0E00               	movlw	0
 20038  001AA2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20039                           
 20040                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 20041  001AA4  0E00               	movlw	0
 20042  001AA6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20043  001AA8                     l703:
 20044                           
 20045                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 20046                           
 20047                           ; BSR set to: 1
 20048                           
 20049                           ; BSR set to: 1
 20050                           
 20051                           ; BSR set to: 1
 20052  001AA8  0E01               	movlw	1
 20053  001AAA  0101               	movlb	1	; () banked
 20054  001AAC  2760               	addwf	_LBA& (0+255),f,b
 20055  001AAE  0E00               	movlw	0
 20056  001AB0  2361               	addwfc	(_LBA+1)& (0+255),f,b
 20057  001AB2  2362               	addwfc	(_LBA+2)& (0+255),f,b
 20058  001AB4  2363               	addwfc	(_LBA+3)& (0+255),f,b
 20059                           
 20060                           ; BSR set to: 1
 20061                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 20062  001AB6  0100               	movlb	0	; () banked
 20063  001AB8  07D9               	decf	_TransferLength& (0+255),f,b
 20064  001ABA  A0D8               	btfss	status,0,c
 20065  001ABC  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 20066                           
 20067                           ; BSR set to: 0
 20068                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 20069  001ABE  0E01               	movlw	1
 20070  001AC0  D774               	goto	L20
 20071  001AC2                     
 20072                           ; BSR set to: 0
 20073                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 20074                           
 20075                           ; BSR set to: 0
 20076  001AC2  0E02               	movlw	2
 20077  001AC4  010D               	movlb	13	; () banked
 20078  001AC6  6F8C               	movwf	140,b	;volatile
 20079                           
 20080                           ; BSR set to: 13
 20081                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 20082  001AC8  0E00               	movlw	0
 20083  001ACA  6E01               	movwf	USBStallEndpoint@dir,c
 20084  001ACC  0E02               	movlw	2
 20085  001ACE  EC74  F02B         	call	_USBStallEndpoint
 20086                           
 20087                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 20088  001AD2  0E00               	movlw	0
 20089  001AD4                     L22:
 20090  001AD4  0100               	movlb	0	; () banked
 20091  001AD6  D769               	goto	L20
 20092  001AD8                     l684:
 20093                           
 20094                           ; BSR set to: 0
 20095  001AD8  0100               	movlb	0	; () banked
 20096  001ADA  51E8               	movf	_MSDWriteState& (0+255),w,b
 20097                           
 20098                           ; Switch size 1, requested type "space"
 20099                           ; Number of cases is 5, Range of values is 0 to 4
 20100                           ; switch strategies available:
 20101                           ; Name         Instructions Cycles
 20102                           ; simple_byte           16     9 (average)
 20103                           ;	Chosen strategy is simple_byte
 20104  001ADC  0A00               	xorlw	0	; case 0
 20105  001ADE  B4D8               	btfsc	status,2,c
 20106  001AE0  D6B5               	goto	l685
 20107  001AE2  0A01               	xorlw	1	; case 1
 20108  001AE4  B4D8               	btfsc	status,2,c
 20109  001AE6  D705               	goto	l690
 20110  001AE8  0A03               	xorlw	3	; case 2
 20111  001AEA  B4D8               	btfsc	status,2,c
 20112  001AEC  D79E               	goto	l699
 20113  001AEE  0A01               	xorlw	1	; case 3
 20114  001AF0  B4D8               	btfsc	status,2,c
 20115  001AF2  D715               	goto	l692
 20116  001AF4  0A07               	xorlw	7	; case 4
 20117  001AF6  B4D8               	btfsc	status,2,c
 20118  001AF8  D75A               	goto	l695
 20119  001AFA  D7E3               	goto	l704
 20120  001AFC                     l687:
 20121                           
 20122                           ;usb_device_msd.c: 1347: return MSDWriteState;
 20123                           
 20124                           ; BSR set to: 0
 20125  001AFC  0100               	movlb	0	; () banked
 20126  001AFE  51E8               	movf	_MSDWriteState& (0+255),w,b
 20127  001B00  0012               	return	
 20128  001B02                     __end_of_MSDWriteHandler:
 20129                           	opt stack 0
 20130                           tosu	equ	0xFFF
 20131                           tosh	equ	0xFFE
 20132                           tosl	equ	0xFFD
 20133                           pclath	equ	0xFFA
 20134                           tblptru	equ	0xFF8
 20135                           tblptrh	equ	0xFF7
 20136                           tblptrl	equ	0xFF6
 20137                           tablat	equ	0xFF5
 20138                           prodh	equ	0xFF4
 20139                           prodl	equ	0xFF3
 20140                           intcon	equ	0xFF2
 20141                           intcon2	equ	0xFF1
 20142                           intcon3	equ	0xFF0
 20143                           indf0	equ	0xFEF
 20144                           postinc0	equ	0xFEE
 20145                           fsr0h	equ	0xFEA
 20146                           fsr0l	equ	0xFE9
 20147                           wreg	equ	0xFE8
 20148                           indf1	equ	0xFE7
 20149                           postdec1	equ	0xFE5
 20150                           plusw1	equ	0xFE3
 20151                           fsr1h	equ	0xFE2
 20152                           fsr1l	equ	0xFE1
 20153                           indf2	equ	0xFDF
 20154                           postinc2	equ	0xFDE
 20155                           postdec2	equ	0xFDD
 20156                           plusw2	equ	0xFDB
 20157                           fsr2h	equ	0xFDA
 20158                           fsr2l	equ	0xFD9
 20159                           status	equ	0xFD8
 20160                           
 20161 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 20162 ;; Defined at:
 20163 ;;		line 34 in file "external_flash.c"
 20164 ;; Parameters:    Size  Location     Type
 20165 ;;  config          2    0[COMRAM] PTR void 
 20166 ;;		 -> NULL(0), 
 20167 ;; Auto vars:     Size  Location     Type
 20168 ;;		None
 20169 ;; Return value:  Size  Location     Type
 20170 ;;                  1    wreg      unsigned char 
 20171 ;; Registers used:
 20172 ;;		wreg
 20173 ;; Tracked objects:
 20174 ;;		On entry : 0/0
 20175 ;;		On exit  : 0/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20182 ;;Total ram usage:        2 bytes
 20183 ;; Hardware stack levels used:    1
 20184 ;; This function calls:
 20185 ;;		Nothing
 20186 ;; This function is called by:
 20187 ;;		_MSDWriteHandler
 20188 ;;		_MSDProcessCommandMediaPresent
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           	psect	text88
 20193  00A2D6                     __ptext88:
 20194                           	opt stack 0
 20195  00A2D6                     _ExternalFlash_WriteProtectStateGet:
 20196                           	opt stack 25
 20197                           
 20198                           ;external_flash.c: 37: return 0;
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;incstack = 0
 20202  00A2D6  0E00               	movlw	0
 20203  00A2D8  0012               	return	
 20204  00A2DA                     __end_of_ExternalFlash_WriteProtectStateGet:
 20205                           	opt stack 0
 20206                           tosu	equ	0xFFF
 20207                           tosh	equ	0xFFE
 20208                           tosl	equ	0xFFD
 20209                           pclath	equ	0xFFA
 20210                           tblptru	equ	0xFF8
 20211                           tblptrh	equ	0xFF7
 20212                           tblptrl	equ	0xFF6
 20213                           tablat	equ	0xFF5
 20214                           prodh	equ	0xFF4
 20215                           prodl	equ	0xFF3
 20216                           intcon	equ	0xFF2
 20217                           intcon2	equ	0xFF1
 20218                           intcon3	equ	0xFF0
 20219                           indf0	equ	0xFEF
 20220                           postinc0	equ	0xFEE
 20221                           fsr0h	equ	0xFEA
 20222                           fsr0l	equ	0xFE9
 20223                           wreg	equ	0xFE8
 20224                           indf1	equ	0xFE7
 20225                           postdec1	equ	0xFE5
 20226                           plusw1	equ	0xFE3
 20227                           fsr1h	equ	0xFE2
 20228                           fsr1l	equ	0xFE1
 20229                           indf2	equ	0xFDF
 20230                           postinc2	equ	0xFDE
 20231                           postdec2	equ	0xFDD
 20232                           plusw2	equ	0xFDB
 20233                           fsr2h	equ	0xFDA
 20234                           fsr2l	equ	0xFD9
 20235                           status	equ	0xFD8
 20236                           
 20237 ;; *************** function _ExternalFlash_SectorWrite *****************
 20238 ;; Defined at:
 20239 ;;		line 56 in file "external_flash.c"
 20240 ;; Parameters:    Size  Location     Type
 20241 ;;  config          2   36[COMRAM] PTR void 
 20242 ;;		 -> NULL(0), 
 20243 ;;  sector_addr     4   38[COMRAM] unsigned long 
 20244 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 20245 ;;		 -> msd_buffer(512), 
 20246 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;  page            2   45[COMRAM] unsigned int 
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  1    wreg      unsigned char 
 20251 ;; Registers used:
 20252 ;;		wreg, status,2, status,0, cstack
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20258 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20261 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20262 ;;Total ram usage:       11 bytes
 20263 ;; Hardware stack levels used:    1
 20264 ;; Hardware stack levels required when called:    5
 20265 ;; This function calls:
 20266 ;;		_flash_sector_write
 20267 ;; This function is called by:
 20268 ;;		_MSDWriteHandler
 20269 ;; This function uses a non-reentrant model
 20270 ;;
 20271                           
 20272                           	psect	text89
 20273  009B42                     __ptext89:
 20274                           	opt stack 0
 20275  009B42                     _ExternalFlash_SectorWrite:
 20276                           	opt stack 20
 20277                           
 20278                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 20279                           
 20280                           ;incstack = 0
 20281  009B42  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 20282  009B46  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 20283                           
 20284                           ;external_flash.c: 61: if(sector_addr >= 8192)
 20285  009B4A  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 20286  009B4C  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 20287  009B4E  E104               	bnz	u8810
 20288  009B50  0E20               	movlw	32
 20289  009B52  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 20290  009B54  A0D8               	btfss	status,0,c
 20291  009B56  D002               	goto	l1919
 20292  009B58                     u8810:
 20293                           
 20294                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 20295  009B58  0E00               	movlw	0
 20296  009B5A  0012               	return	
 20297  009B5C                     l1919:
 20298                           
 20299                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 20300  009B5C  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 20301  009B60  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 20302  009B64  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 20303  009B68  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 20304  009B6C  EC9E  F049         	call	_flash_sector_write	;wreg free
 20305                           
 20306                           ;external_flash.c: 69: return 1;
 20307  009B70  0E01               	movlw	1
 20308  009B72  0012               	return	
 20309  009B74                     __end_of_ExternalFlash_SectorWrite:
 20310                           	opt stack 0
 20311                           tosu	equ	0xFFF
 20312                           tosh	equ	0xFFE
 20313                           tosl	equ	0xFFD
 20314                           pclath	equ	0xFFA
 20315                           tblptru	equ	0xFF8
 20316                           tblptrh	equ	0xFF7
 20317                           tblptrl	equ	0xFF6
 20318                           tablat	equ	0xFF5
 20319                           prodh	equ	0xFF4
 20320                           prodl	equ	0xFF3
 20321                           intcon	equ	0xFF2
 20322                           intcon2	equ	0xFF1
 20323                           intcon3	equ	0xFF0
 20324                           indf0	equ	0xFEF
 20325                           postinc0	equ	0xFEE
 20326                           fsr0h	equ	0xFEA
 20327                           fsr0l	equ	0xFE9
 20328                           wreg	equ	0xFE8
 20329                           indf1	equ	0xFE7
 20330                           postdec1	equ	0xFE5
 20331                           plusw1	equ	0xFE3
 20332                           fsr1h	equ	0xFE2
 20333                           fsr1l	equ	0xFE1
 20334                           indf2	equ	0xFDF
 20335                           postinc2	equ	0xFDE
 20336                           postdec2	equ	0xFDD
 20337                           plusw2	equ	0xFDB
 20338                           fsr2h	equ	0xFDA
 20339                           fsr2l	equ	0xFD9
 20340                           status	equ	0xFD8
 20341                           
 20342 ;; *************** function _MSDReadHandler *****************
 20343 ;; Defined at:
 20344 ;;		line 1038 in file "usb_device_msd.c"
 20345 ;; Parameters:    Size  Location     Type
 20346 ;;		None
 20347 ;; Auto vars:     Size  Location     Type
 20348 ;;		None
 20349 ;; Return value:  Size  Location     Type
 20350 ;;                  1    wreg      unsigned char 
 20351 ;; Registers used:
 20352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20353 ;; Tracked objects:
 20354 ;;		On entry : 0/0
 20355 ;;		On exit  : 0/0
 20356 ;;		Unchanged: 0/0
 20357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20361 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20362 ;;Total ram usage:        4 bytes
 20363 ;; Hardware stack levels used:    1
 20364 ;; Hardware stack levels required when called:    6
 20365 ;; This function calls:
 20366 ;;		_ExternalFlash_SectorRead
 20367 ;;		_MSDCheckForErrorCases
 20368 ;;		_USBStallEndpoint
 20369 ;;		_USBTransferOnePacket
 20370 ;; This function is called by:
 20371 ;;		_MSDProcessCommandMediaPresent
 20372 ;; This function uses a non-reentrant model
 20373 ;;
 20374                           
 20375                           	psect	text90
 20376  0035A8                     __ptext90:
 20377                           	opt stack 0
 20378  0035A8                     _MSDReadHandler:
 20379                           	opt stack 20
 20380                           
 20381                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20382                           
 20383                           ;incstack = 0
 20384  0035A8  D0D7               	goto	l665
 20385  0035AA                     l666:
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20389  0035AA  C111  F163         	movff	_gblCBW+17,_LBA+3
 20390                           
 20391                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20392  0035AE  C112  F162         	movff	_gblCBW+18,_LBA+2
 20393                           
 20394                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20395  0035B2  C113  F161         	movff	_gblCBW+19,_LBA+1
 20396                           
 20397                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20398  0035B6  C114  F160         	movff	_gblCBW+20,_LBA
 20399                           
 20400                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20401  0035BA  C116  F0DA         	movff	_gblCBW+22,_TransferLength+1
 20402                           
 20403                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20404  0035BE  C117  F0D9         	movff	_gblCBW+23,_TransferLength
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20408  0035C2  51D9               	movf	_TransferLength& (0+255),w,b
 20409  0035C4  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20410  0035C6  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 20411  0035C8  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20412  0035CA  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20413  0035CC  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20414  0035CE  0E09               	movlw	9
 20415  0035D0                     u9265:
 20416  0035D0  90D8               	bcf	status,0,c
 20417  0035D2  3636               	rlcf	??_MSDReadHandler,f,c
 20418  0035D4  3637               	rlcf	??_MSDReadHandler+1,f,c
 20419  0035D6  3638               	rlcf	??_MSDReadHandler+2,f,c
 20420  0035D8  3639               	rlcf	??_MSDReadHandler+3,f,c
 20421  0035DA  2EE8               	decfsz	wreg,f,c
 20422  0035DC  D7F9               	goto	u9265
 20423  0035DE  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 20424  0035E2  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20425  0035E6  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20426  0035EA  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20427  0035EE  EC37  F033         	call	_MSDCheckForErrorCases	;wreg free
 20428  0035F2  0900               	iorlw	0
 20429  0035F4  A4D8               	btfss	status,2,c
 20430  0035F6  D0C2               	goto	l668
 20431                           
 20432                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 20433                           
 20434                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 20435  0035F8  0E01               	movlw	1
 20436  0035FA  0100               	movlb	0	; () banked
 20437  0035FC  6FE9               	movwf	_MSDReadState& (0+255),b
 20438  0035FE                     
 20439                           ; BSR set to: 0
 20440                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20441                           
 20442                           ; BSR set to: 0
 20443  0035FE  51D9               	movf	_TransferLength& (0+255),w,b
 20444  003600  11DA               	iorwf	(_TransferLength+1)& (0+255),w,b
 20445  003602  A4D8               	btfss	status,2,c
 20446  003604  D002               	goto	l670
 20447                           
 20448                           ; BSR set to: 0
 20449                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20450  003606  0E00               	movlw	0
 20451  003608  D046               	goto	L23
 20452  00360A                     l670:
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20456                           
 20457                           ; BSR set to: 0
 20458  00360A  07D9               	decf	_TransferLength& (0+255),f,b
 20459  00360C  A0D8               	btfss	status,0,c
 20460  00360E  07DA               	decf	(_TransferLength+1)& (0+255),f,b
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20464  003610  0E02               	movlw	2
 20465  003612  6FE9               	movwf	_MSDReadState& (0+255),b
 20466  003614                     
 20467                           ; BSR set to: 0
 20468                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20469                           
 20470                           ; BSR set to: 0
 20471  003614  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 20472  003616  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20473  003618  B4D8               	btfsc	status,2,c
 20474  00361A  D006               	goto	l672
 20475                           
 20476                           ; BSR set to: 0
 20477  00361C  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 20478  003620  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20479  003624  BEDF               	btfsc	indf2,7,c
 20480  003626  D0AA               	goto	l668
 20481  003628                     l672:
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20485                           
 20486                           ; BSR set to: 0
 20487  003628  C1C1  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20488  00362C  C1C2  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20489  003630  C160  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20490  003634  C161  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20491  003638  C162  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20492  00363C  C163  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20493  003640  0E00               	movlw	0
 20494  003642  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20495  003644  0E06               	movlw	6
 20496  003646  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20497  003648  D801               	call	u9318
 20498  00364A  D00A               	goto	u9319
 20499  00364C                     u9318:
 20500  00364C  0005               	push	
 20501  00364E  6EFA               	movwf	pclath,c
 20502  003650  0101               	movlb	1	; () banked
 20503  003652  51BB               	movf	(_LUN+8)& (0+255),w,b
 20504  003654  6EFD               	movwf	tosl,c
 20505  003656  51BC               	movf	(_LUN+9)& (0+255),w,b
 20506  003658  6EFE               	movwf	tosh,c
 20507  00365A  6AFF               	clrf	tosu,c
 20508  00365C  50FA               	movf	pclath,w,c
 20509  00365E  0012               	return		;indir
 20510  003660                     u9319:
 20511  003660  06E8               	decf	wreg,f,c
 20512  003662  B4D8               	btfsc	status,2,c
 20513  003664  D01A               	goto	l675
 20514                           
 20515                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20516  003666  0E64               	movlw	100
 20517  003668  0100               	movlb	0	; () banked
 20518  00366A  61E7               	cpfslt	_MSDRetryAttempt& (0+255),b
 20519  00366C  D002               	goto	l674
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20523  00366E  2BE7               	incf	_MSDRetryAttempt& (0+255),f,b
 20524                           
 20525                           ;usb_device_msd.c: 1088: break;
 20526  003670  D085               	goto	l668
 20527  003672                     l674:
 20528                           
 20529                           ; BSR set to: 0
 20530                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20531                           
 20532                           ; BSR set to: 0
 20533  003672  0E02               	movlw	2
 20534  003674  010D               	movlb	13	; () banked
 20535  003676  6F8C               	movwf	140,b	;volatile
 20536                           
 20537                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20538  003678  0101               	movlb	1	; () banked
 20539  00367A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20540  00367C  0BF0               	andlw	-16
 20541  00367E  0903               	iorlw	3
 20542  003680  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20543                           
 20544                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20545  003682  0E00               	movlw	0
 20546  003684  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20547                           
 20548                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20549  003686  0E00               	movlw	0
 20550  003688  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20551                           
 20552                           ; BSR set to: 1
 20553                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20554  00368A  0E01               	movlw	1
 20555  00368C  6E01               	movwf	USBStallEndpoint@dir,c
 20556  00368E  0E02               	movlw	2
 20557  003690  EC74  F02B         	call	_USBStallEndpoint
 20558  003694  D05E               	goto	l12264
 20559  003696                     L23:
 20560  003696  6FE9               	movwf	_MSDReadState& (0+255),b
 20561                           
 20562                           ;usb_device_msd.c: 1109: break;
 20563  003698  D071               	goto	l668
 20564  00369A                     l675:
 20565                           
 20566                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20567                           
 20568                           ; BSR set to: 0
 20569                           
 20570                           ; BSR set to: 0
 20571  00369A  0E01               	movlw	1
 20572  00369C  0101               	movlb	1	; () banked
 20573  00369E  2760               	addwf	_LBA& (0+255),f,b
 20574  0036A0  0E00               	movlw	0
 20575  0036A2  2361               	addwfc	(_LBA+1)& (0+255),f,b
 20576  0036A4  2362               	addwfc	(_LBA+2)& (0+255),f,b
 20577  0036A6  2363               	addwfc	(_LBA+3)& (0+255),f,b
 20578                           
 20579                           ; BSR set to: 1
 20580                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20581  0036A8  0E00               	movlw	0
 20582  0036AA  010D               	movlb	13	; () banked
 20583  0036AC  6F88               	movwf	136,b	;volatile
 20584  0036AE  0E02               	movlw	2
 20585  0036B0  6F89               	movwf	137,b	;volatile
 20586  0036B2  0E00               	movlw	0
 20587  0036B4  6F8A               	movwf	138,b	;volatile
 20588  0036B6  0E00               	movlw	0
 20589  0036B8  6F8B               	movwf	139,b	;volatile
 20590                           
 20591                           ; BSR set to: 13
 20592                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20593  0036BA  0E00               	movlw	0
 20594  0036BC  0101               	movlb	1	; () banked
 20595  0036BE  6F88               	movwf	_ptrNextData& (0+255),b
 20596  0036C0  0E06               	movlw	6
 20597  0036C2  6F89               	movwf	(_ptrNextData+1)& (0+255),b
 20598                           
 20599                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20600  0036C4  0E03               	movlw	3
 20601  0036C6  0100               	movlb	0	; () banked
 20602  0036C8  6FE9               	movwf	_MSDReadState& (0+255),b
 20603  0036CA                     
 20604                           ; BSR set to: 0
 20605                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20606                           
 20607                           ; BSR set to: 0
 20608  0036CA  010D               	movlb	13	; () banked
 20609  0036CC  5188               	movf	136,w,b	;volatile
 20610  0036CE  1189               	iorwf	137,w,b	;volatile
 20611  0036D0  118A               	iorwf	138,w,b	;volatile
 20612  0036D2  118B               	iorwf	139,w,b	;volatile
 20613  0036D4  A4D8               	btfss	status,2,c
 20614  0036D6  D002               	goto	l677
 20615                           
 20616                           ; BSR set to: 13
 20617                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20618  0036D8  0E01               	movlw	1
 20619  0036DA  D03C               	goto	L25
 20620  0036DC                     l677:
 20621                           
 20622                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20623                           
 20624                           ; BSR set to: 0
 20625  0036DC  0E04               	movlw	4
 20626  0036DE  0100               	movlb	0	; () banked
 20627  0036E0  6FE9               	movwf	_MSDReadState& (0+255),b
 20628  0036E2                     
 20629                           ; BSR set to: 0
 20630                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20631                           
 20632                           ; BSR set to: 0
 20633  0036E2  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 20634  0036E4  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20635  0036E6  B4D8               	btfsc	status,2,c
 20636  0036E8  D006               	goto	l679
 20637                           
 20638                           ; BSR set to: 0
 20639  0036EA  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 20640  0036EE  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20641  0036F2  BEDF               	btfsc	indf2,7,c
 20642  0036F4  D043               	goto	l668
 20643  0036F6                     l679:
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20647                           
 20648                           ; BSR set to: 0
 20649  0036F6  0E01               	movlw	1
 20650  0036F8  6E01               	movwf	USBTransferOnePacket@dir,c
 20651  0036FA  C188  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20652  0036FE  C189  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20653  003702  0E40               	movlw	64
 20654  003704  6E04               	movwf	USBTransferOnePacket@len,c
 20655  003706  0E02               	movlw	2
 20656  003708  ECFC  F02C         	call	_USBTransferOnePacket
 20657  00370C  C001  F0DB         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20658  003710  C002  F0DC         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20659                           
 20660                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20661  003714  0E03               	movlw	3
 20662  003716  0100               	movlb	0	; () banked
 20663  003718  6FE9               	movwf	_MSDReadState& (0+255),b
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20667  00371A  0E40               	movlw	64
 20668  00371C  0101               	movlb	1	; () banked
 20669  00371E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20670  003720  0E00               	movlw	0
 20671  003722  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20672  003724  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20673  003726  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20674                           
 20675                           ; BSR set to: 1
 20676                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20677  003728  0E40               	movlw	64
 20678  00372A  010D               	movlb	13	; () banked
 20679  00372C  5F88               	subwf	136,f,b	;volatile
 20680  00372E  0E00               	movlw	0
 20681  003730  5B89               	subwfb	137,f,b	;volatile
 20682  003732  5B8A               	subwfb	138,f,b	;volatile
 20683  003734  5B8B               	subwfb	139,f,b	;volatile
 20684                           
 20685                           ; BSR set to: 13
 20686                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20687  003736  0E40               	movlw	64
 20688  003738  0101               	movlb	1	; () banked
 20689  00373A  2788               	addwf	_ptrNextData& (0+255),f,b
 20690  00373C  0E00               	movlw	0
 20691  00373E  2389               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20692                           
 20693                           ;usb_device_msd.c: 1149: break;
 20694  003740  D01D               	goto	l668
 20695  003742                     
 20696                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20697                           
 20698                           ; BSR set to: 1
 20699  003742  0E02               	movlw	2
 20700  003744  010D               	movlb	13	; () banked
 20701  003746  6F8C               	movwf	140,b	;volatile
 20702                           
 20703                           ; BSR set to: 13
 20704                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20705  003748  0E01               	movlw	1
 20706  00374A  6E01               	movwf	USBStallEndpoint@dir,c
 20707  00374C  0E02               	movlw	2
 20708  00374E  EC74  F02B         	call	_USBStallEndpoint
 20709  003752                     l12264:
 20710                           
 20711                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20712  003752  0E00               	movlw	0
 20713  003754                     L25:
 20714  003754  0100               	movlb	0	; () banked
 20715  003756  D79F               	goto	L23
 20716  003758                     l665:
 20717                           
 20718                           ; BSR set to: 0
 20719  003758  0100               	movlb	0	; () banked
 20720  00375A  51E9               	movf	_MSDReadState& (0+255),w,b
 20721                           
 20722                           ; Switch size 1, requested type "space"
 20723                           ; Number of cases is 5, Range of values is 0 to 4
 20724                           ; switch strategies available:
 20725                           ; Name         Instructions Cycles
 20726                           ; simple_byte           16     9 (average)
 20727                           ;	Chosen strategy is simple_byte
 20728  00375C  0A00               	xorlw	0	; case 0
 20729  00375E  B4D8               	btfsc	status,2,c
 20730  003760  D724               	goto	l666
 20731  003762  0A01               	xorlw	1	; case 1
 20732  003764  B4D8               	btfsc	status,2,c
 20733  003766  D74B               	goto	l669
 20734  003768  0A03               	xorlw	3	; case 2
 20735  00376A  B4D8               	btfsc	status,2,c
 20736  00376C  D753               	goto	l671
 20737  00376E  0A01               	xorlw	1	; case 3
 20738  003770  B4D8               	btfsc	status,2,c
 20739  003772  D7AB               	goto	l676
 20740  003774  0A07               	xorlw	7	; case 4
 20741  003776  B4D8               	btfsc	status,2,c
 20742  003778  D7B4               	goto	l678
 20743  00377A  D7E3               	goto	l680
 20744  00377C                     l668:
 20745                           
 20746                           ;usb_device_msd.c: 1161: return MSDReadState;
 20747                           
 20748                           ; BSR set to: 0
 20749  00377C  0100               	movlb	0	; () banked
 20750  00377E  51E9               	movf	_MSDReadState& (0+255),w,b
 20751  003780  0012               	return	
 20752  003782                     __end_of_MSDReadHandler:
 20753                           	opt stack 0
 20754                           tosu	equ	0xFFF
 20755                           tosh	equ	0xFFE
 20756                           tosl	equ	0xFFD
 20757                           pclath	equ	0xFFA
 20758                           tblptru	equ	0xFF8
 20759                           tblptrh	equ	0xFF7
 20760                           tblptrl	equ	0xFF6
 20761                           tablat	equ	0xFF5
 20762                           prodh	equ	0xFF4
 20763                           prodl	equ	0xFF3
 20764                           intcon	equ	0xFF2
 20765                           intcon2	equ	0xFF1
 20766                           intcon3	equ	0xFF0
 20767                           indf0	equ	0xFEF
 20768                           postinc0	equ	0xFEE
 20769                           fsr0h	equ	0xFEA
 20770                           fsr0l	equ	0xFE9
 20771                           wreg	equ	0xFE8
 20772                           indf1	equ	0xFE7
 20773                           postdec1	equ	0xFE5
 20774                           plusw1	equ	0xFE3
 20775                           fsr1h	equ	0xFE2
 20776                           fsr1l	equ	0xFE1
 20777                           indf2	equ	0xFDF
 20778                           postinc2	equ	0xFDE
 20779                           postdec2	equ	0xFDD
 20780                           plusw2	equ	0xFDB
 20781                           fsr2h	equ	0xFDA
 20782                           fsr2l	equ	0xFD9
 20783                           status	equ	0xFD8
 20784                           
 20785 ;; *************** function _MSDCheckForErrorCases *****************
 20786 ;; Defined at:
 20787 ;;		line 1434 in file "usb_device_msd.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20790 ;; Auto vars:     Size  Location     Type
 20791 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20792 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20793 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20794 ;; Return value:  Size  Location     Type
 20795 ;;                  1    wreg      unsigned char 
 20796 ;; Registers used:
 20797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20798 ;; Tracked objects:
 20799 ;;		On entry : 0/0
 20800 ;;		On exit  : 0/0
 20801 ;;		Unchanged: 0/0
 20802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20804 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20806 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20807 ;;Total ram usage:        7 bytes
 20808 ;; Hardware stack levels used:    1
 20809 ;; Hardware stack levels required when called:    2
 20810 ;; This function calls:
 20811 ;;		_MSDErrorHandler
 20812 ;; This function is called by:
 20813 ;;		_MSDProcessCommandMediaPresent
 20814 ;;		_MSDReadHandler
 20815 ;;		_MSDWriteHandler
 20816 ;; This function uses a non-reentrant model
 20817 ;;
 20818                           
 20819                           	psect	text91
 20820  00666E                     __ptext91:
 20821                           	opt stack 0
 20822  00666E                     _MSDCheckForErrorCases:
 20823                           	opt stack 23
 20824                           
 20825                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20826                           
 20827                           ; BSR set to: 0
 20828                           ;incstack = 0
 20829  00666E  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20830  006670  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20831  006672  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20832  006674  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20833  006676  A4D8               	btfss	status,2,c
 20834  006678  D002               	goto	l710
 20835                           
 20836                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20837  00667A  0E01               	movlw	1
 20838  00667C  D001               	goto	L26
 20839  00667E                     l710:
 20840                           
 20841                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20842  00667E  0E00               	movlw	0
 20843  006680                     L26:
 20844  006680  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20845                           
 20846                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20847  006682  0100               	movlb	0	; () banked
 20848  006684  05E5               	decf	_MSDHostNoData& (0+255),w,b
 20849  006686  A4D8               	btfss	status,2,c
 20850  006688  D005               	goto	l712
 20851                           
 20852                           ; BSR set to: 0
 20853  00668A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20854  00668C  A4D8               	btfss	status,2,c
 20855  00668E  D002               	goto	l712
 20856                           
 20857                           ; BSR set to: 0
 20858                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20859  006690  0E00               	movlw	0
 20860                           
 20861                           ; BSR set to: 0
 20862  006692  0012               	return	
 20863  006694                     l712:
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20867                           
 20868                           ; BSR set to: 0
 20869  006694  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20870  006696  0101               	movlb	1	; () banked
 20871  006698  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20872  00669A  E11A               	bnz	l11670
 20873  00669C  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20874  00669E  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20875  0066A0  E117               	bnz	l11670
 20876  0066A2  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20877  0066A4  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20878  0066A6  E114               	bnz	l11670
 20879  0066A8  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20880  0066AA  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20881  0066AC  A4D8               	btfss	status,2,c
 20882  0066AE  D010               	goto	l718
 20883                           
 20884                           ; BSR set to: 1
 20885                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20886  0066B0  0100               	movlb	0	; () banked
 20887  0066B2  05EB               	decf	_MSD_State& (0+255),w,b
 20888  0066B4  A4D8               	btfss	status,2,c
 20889  0066B6  D006               	goto	l715
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20893  0066B8  0E2A               	movlw	42
 20894  0066BA  19EA               	xorwf	_MSDCommandState& (0+255),w,b
 20895  0066BC  B4D8               	btfsc	status,2,c
 20896  0066BE  D008               	goto	l718
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20900  0066C0  0E00               	movlw	0
 20901                           
 20902                           ; BSR set to: 0
 20903  0066C2  0012               	return	
 20904  0066C4                     l715:
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20908                           
 20909                           ; BSR set to: 0
 20910  0066C4  0E2A               	movlw	42
 20911  0066C6  19EA               	xorwf	_MSDCommandState& (0+255),w,b
 20912  0066C8  A4D8               	btfss	status,2,c
 20913  0066CA  D002               	goto	l718
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20917  0066CC  0E00               	movlw	0
 20918                           
 20919                           ; BSR set to: 0
 20920  0066CE  0012               	return	
 20921  0066D0                     l718:
 20922  0066D0                     l11670:
 20923                           
 20924                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20925  0066D0  0101               	movlb	1	; () banked
 20926  0066D2  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20927  0066D4  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20928  0066D6  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20929  0066D8  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20930  0066DA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20931  0066DC  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20932  0066DE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20933  0066E0  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20934  0066E2  B0D8               	btfsc	status,0,c
 20935  0066E4  D002               	goto	l719
 20936                           
 20937                           ; BSR set to: 1
 20938                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20939  0066E6  0E01               	movlw	1
 20940  0066E8  D001               	goto	L27
 20941  0066EA                     l719:
 20942                           
 20943                           ; BSR set to: 1
 20944                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20945                           
 20946                           ; BSR set to: 1
 20947  0066EA  0E00               	movlw	0
 20948  0066EC                     L27:
 20949  0066EC  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20950                           
 20951                           ; BSR set to: 1
 20952                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20953                           
 20954                           ; BSR set to: 1
 20955  0066EE  0E02               	movlw	2
 20956  0066F0  0100               	movlb	0	; () banked
 20957  0066F2  19EB               	xorwf	_MSD_State& (0+255),w,b
 20958  0066F4  A4D8               	btfss	status,2,c
 20959  0066F6  D014               	goto	l721
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20963  0066F8  0E2A               	movlw	42
 20964  0066FA  19EA               	xorwf	_MSDCommandState& (0+255),w,b
 20965  0066FC  B4D8               	btfsc	status,2,c
 20966  0066FE  D005               	goto	l722
 20967                           
 20968                           ; BSR set to: 0
 20969  006700  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20970  006702  A4D8               	btfss	status,2,c
 20971  006704  D002               	goto	l722
 20972  006706                     u8630:
 20973                           
 20974                           ; BSR set to: 0
 20975                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20976  006706  0E05               	movlw	5
 20977  006708  D01D               	goto	L30
 20978  00670A                     l722:
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20982                           
 20983                           ; BSR set to: 0
 20984  00670A  05E5               	decf	_MSDHostNoData& (0+255),w,b
 20985  00670C  B4D8               	btfsc	status,2,c
 20986  00670E  D00F               	goto	u8680
 20987                           
 20988                           ; BSR set to: 0
 20989                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20990                           
 20991                           ; BSR set to: 0
 20992                           
 20993                           ; BSR set to: 0
 20994                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20995  006710  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20996  006712  B4D8               	btfsc	status,2,c
 20997  006714  D003               	goto	u8660
 20998                           
 20999                           ; BSR set to: 0
 21000                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 21001                           
 21002                           ; BSR set to: 0
 21003                           
 21004                           ; BSR set to: 0
 21005                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 21006  006716  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21007  006718  A4D8               	btfss	status,2,c
 21008  00671A  D7F5               	goto	u8630
 21009  00671C                     u8660:
 21010                           
 21011                           ; BSR set to: 0
 21012                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 21013  00671C  0E04               	movlw	4
 21014  00671E  D012               	goto	L30
 21015  006720                     l721:
 21016                           
 21017                           ; BSR set to: 0
 21018                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 21019                           
 21020                           ; BSR set to: 0
 21021  006720  0E2A               	movlw	42
 21022  006722  19EA               	xorwf	_MSDCommandState& (0+255),w,b
 21023  006724  B4D8               	btfsc	status,2,c
 21024  006726  D00D               	goto	l737
 21025                           
 21026                           ; BSR set to: 0
 21027                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 21028                           
 21029                           ; BSR set to: 0
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 21033  006728  05E5               	decf	_MSDHostNoData& (0+255),w,b
 21034  00672A  A4D8               	btfss	status,2,c
 21035  00672C  D002               	goto	l733
 21036  00672E                     u8680:
 21037                           
 21038                           ; BSR set to: 0
 21039                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 21040  00672E  0E01               	movlw	1
 21041  006730  D009               	goto	L30
 21042  006732                     l733:
 21043                           
 21044                           ; BSR set to: 0
 21045                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 21046                           
 21047                           ; BSR set to: 0
 21048  006732  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21049  006734  B4D8               	btfsc	status,2,c
 21050  006736  D003               	goto	u8700
 21051                           
 21052                           ; BSR set to: 0
 21053                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 21054                           
 21055                           ; BSR set to: 0
 21056                           
 21057                           ; BSR set to: 0
 21058                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 21059  006738  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21060  00673A  A4D8               	btfss	status,2,c
 21061  00673C  D002               	goto	l737
 21062  00673E                     u8700:
 21063                           
 21064                           ; BSR set to: 0
 21065                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 21066  00673E  0E02               	movlw	2
 21067  006740  D001               	goto	L30
 21068  006742                     l737:
 21069                           
 21070                           ; BSR set to: 0
 21071                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 21072                           
 21073                           ; BSR set to: 0
 21074  006742  0E03               	movlw	3
 21075  006744                     L30:
 21076  006744  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 21077                           
 21078                           ; BSR set to: 0
 21079                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 21080                           
 21081                           ; BSR set to: 0
 21082                           
 21083                           ; BSR set to: 0
 21084                           
 21085                           ; BSR set to: 0
 21086                           
 21087                           ; BSR set to: 0
 21088                           
 21089                           ; BSR set to: 0
 21090  006746  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21091  006748  ECF8  F02B         	call	_MSDErrorHandler
 21092                           
 21093                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 21094  00674C  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21095  00674E  0012               	return	
 21096  006750                     __end_of_MSDCheckForErrorCases:
 21097                           	opt stack 0
 21098                           tosu	equ	0xFFF
 21099                           tosh	equ	0xFFE
 21100                           tosl	equ	0xFFD
 21101                           pclath	equ	0xFFA
 21102                           tblptru	equ	0xFF8
 21103                           tblptrh	equ	0xFF7
 21104                           tblptrl	equ	0xFF6
 21105                           tablat	equ	0xFF5
 21106                           prodh	equ	0xFF4
 21107                           prodl	equ	0xFF3
 21108                           intcon	equ	0xFF2
 21109                           intcon2	equ	0xFF1
 21110                           intcon3	equ	0xFF0
 21111                           indf0	equ	0xFEF
 21112                           postinc0	equ	0xFEE
 21113                           fsr0h	equ	0xFEA
 21114                           fsr0l	equ	0xFE9
 21115                           wreg	equ	0xFE8
 21116                           indf1	equ	0xFE7
 21117                           postdec1	equ	0xFE5
 21118                           plusw1	equ	0xFE3
 21119                           fsr1h	equ	0xFE2
 21120                           fsr1l	equ	0xFE1
 21121                           indf2	equ	0xFDF
 21122                           postinc2	equ	0xFDE
 21123                           postdec2	equ	0xFDD
 21124                           plusw2	equ	0xFDB
 21125                           fsr2h	equ	0xFDA
 21126                           fsr2l	equ	0xFD9
 21127                           status	equ	0xFD8
 21128                           
 21129 ;; *************** function _MSDErrorHandler *****************
 21130 ;; Defined at:
 21131 ;;		line 1577 in file "usb_device_msd.c"
 21132 ;; Parameters:    Size  Location     Type
 21133 ;;  ErrorCase       1    wreg     unsigned char 
 21134 ;; Auto vars:     Size  Location     Type
 21135 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 21136 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 21137 ;; Return value:  Size  Location     Type
 21138 ;;                  1    wreg      void 
 21139 ;; Registers used:
 21140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21141 ;; Tracked objects:
 21142 ;;		On entry : 0/0
 21143 ;;		On exit  : 0/0
 21144 ;;		Unchanged: 0/0
 21145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21150 ;;Total ram usage:        2 bytes
 21151 ;; Hardware stack levels used:    1
 21152 ;; Hardware stack levels required when called:    1
 21153 ;; This function calls:
 21154 ;;		_ResetSenseData
 21155 ;;		_USBStallEndpoint
 21156 ;; This function is called by:
 21157 ;;		_MSDProcessCommandMediaAbsent
 21158 ;;		_MSDProcessCommandMediaPresent
 21159 ;;		_MSDCheckForErrorCases
 21160 ;; This function uses a non-reentrant model
 21161 ;;
 21162                           
 21163                           	psect	text92
 21164  0057F0                     __ptext92:
 21165                           	opt stack 0
 21166  0057F0                     _MSDErrorHandler:
 21167                           	opt stack 23
 21168                           
 21169                           ;incstack = 0
 21170                           ;MSDErrorHandler@ErrorCase stored from wreg
 21171  0057F0  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 21172                           
 21173                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 21174  0057F2  0100               	movlb	0	; () banked
 21175  0057F4  51DB               	movf	_USBMSDInHandle& (0+255),w,b
 21176  0057F6  11DC               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21177  0057F8  B4D8               	btfsc	status,2,c
 21178  0057FA  D006               	goto	u8050
 21179                           
 21180                           ; BSR set to: 0
 21181  0057FC  C0DB  FFD9         	movff	_USBMSDInHandle,fsr2l
 21182  005800  C0DC  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21183  005804  BEDF               	btfsc	indf2,7,c
 21184  005806  0012               	return	
 21185  005808                     u8050:
 21186                           
 21187                           ; BSR set to: 0
 21188                           
 21189                           ; BSR set to: 0
 21190  005808  51DD               	movf	_USBMSDOutHandle& (0+255),w,b
 21191  00580A  11DE               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21192  00580C  B4D8               	btfsc	status,2,c
 21193  00580E  D006               	goto	l741
 21194                           
 21195                           ; BSR set to: 0
 21196  005810  C0DD  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21197  005814  C0DE  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21198  005818  BEDF               	btfsc	indf2,7,c
 21199  00581A  0012               	return	
 21200  00581C                     l741:
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 21204  00581C  C0EB  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 21205                           
 21206                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 21207  005820  69EA               	setf	_MSDCommandState& (0+255),b
 21208                           
 21209                           ; BSR set to: 0
 21210                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 21211  005822  0E00               	movlw	0
 21212  005824  6FE9               	movwf	_MSDReadState& (0+255),b
 21213                           
 21214                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 21215  005826  0E00               	movlw	0
 21216  005828  6FE8               	movwf	_MSDWriteState& (0+255),b
 21217                           
 21218                           ; BSR set to: 0
 21219                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 21220  00582A  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 21221  00582E  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 21222  005832  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 21223  005836  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 21224                           
 21225                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 21226  00583A  0E01               	movlw	1
 21227  00583C  010D               	movlb	13	; () banked
 21228  00583E  6F8C               	movwf	140,b	;volatile
 21229                           
 21230                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 21231  005840  0E03               	movlw	3
 21232  005842  0100               	movlb	0	; () banked
 21233  005844  6FEB               	movwf	_MSD_State& (0+255),b
 21234                           
 21235                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 21236  005846  D043               	goto	l747
 21237  005848                     
 21238                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 21239                           
 21240                           ; BSR set to: 0
 21241  005848  0E02               	movlw	2
 21242  00584A  010D               	movlb	13	; () banked
 21243  00584C  6F8C               	movwf	140,b	;volatile
 21244                           
 21245                           ;usb_device_msd.c: 1607: break;
 21246  00584E  0012               	return	
 21247  005850                     
 21248                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 21249                           
 21250                           ; BSR set to: 13
 21251  005850  0E01               	movlw	1
 21252  005852  6E01               	movwf	USBStallEndpoint@dir,c
 21253  005854  0E02               	movlw	2
 21254  005856  EC74  F02B         	call	_USBStallEndpoint
 21255                           
 21256                           ;usb_device_msd.c: 1611: break;
 21257  00585A  0012               	return	
 21258  00585C                     
 21259                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 21260  00585C  0E02               	movlw	2
 21261  00585E  010D               	movlb	13	; () banked
 21262  005860  6F8C               	movwf	140,b	;volatile
 21263                           
 21264                           ; BSR set to: 13
 21265                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 21266  005862  0E01               	movlw	1
 21267  005864  6E01               	movwf	USBStallEndpoint@dir,c
 21268  005866  0E02               	movlw	2
 21269  005868  EC74  F02B         	call	_USBStallEndpoint
 21270                           
 21271                           ;usb_device_msd.c: 1616: break;
 21272  00586C  0012               	return	
 21273  00586E                     
 21274                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 21275  00586E  0E00               	movlw	0
 21276  005870  6E01               	movwf	USBStallEndpoint@dir,c
 21277  005872  0E02               	movlw	2
 21278  005874  EC74  F02B         	call	_USBStallEndpoint
 21279                           
 21280                           ;usb_device_msd.c: 1620: break;
 21281  005878  0012               	return	
 21282  00587A                     
 21283                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 21284  00587A  0E02               	movlw	2
 21285  00587C  010D               	movlb	13	; () banked
 21286  00587E  6F8C               	movwf	140,b	;volatile
 21287                           
 21288                           ; BSR set to: 13
 21289                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 21290  005880  0E00               	movlw	0
 21291  005882  6E01               	movwf	USBStallEndpoint@dir,c
 21292  005884  0E02               	movlw	2
 21293  005886  EC74  F02B         	call	_USBStallEndpoint
 21294                           
 21295                           ;usb_device_msd.c: 1625: break;
 21296  00588A  0012               	return	
 21297  00588C                     
 21298                           ;usb_device_msd.c: 1628: ResetSenseData();
 21299  00588C  ECF6  F046         	call	_ResetSenseData	;wreg free
 21300                           
 21301                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 21302  005890  0101               	movlb	1	; () banked
 21303  005892  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21304  005894  0BF0               	andlw	-16
 21305  005896  0905               	iorlw	5
 21306  005898  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21307                           
 21308                           ; BSR set to: 1
 21309                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 21310  00589A  0E20               	movlw	32
 21311  00589C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21312                           
 21313                           ; BSR set to: 1
 21314                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 21315  00589E  0E00               	movlw	0
 21316  0058A0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21317                           
 21318                           ; BSR set to: 1
 21319                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 21320  0058A2  0E02               	movlw	2
 21321  0058A4  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 21322  0058A6  A4D8               	btfss	status,2,c
 21323  0058A8  D00C               	goto	l755
 21324                           
 21325                           ; BSR set to: 1
 21326  0058AA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21327  0058AC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21328  0058AE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 21329  0058B0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 21330  0058B2  B4D8               	btfsc	status,2,c
 21331  0058B4  D006               	goto	l755
 21332                           
 21333                           ; BSR set to: 1
 21334                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 21335  0058B6  0E00               	movlw	0
 21336  0058B8  6E01               	movwf	USBStallEndpoint@dir,c
 21337  0058BA  0E02               	movlw	2
 21338  0058BC  EC74  F02B         	call	_USBStallEndpoint
 21339                           
 21340                           ;usb_device_msd.c: 1636: }
 21341  0058C0  0012               	return	
 21342  0058C2                     l755:
 21343                           
 21344                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 21345  0058C2  0E01               	movlw	1
 21346  0058C4  6E01               	movwf	USBStallEndpoint@dir,c
 21347  0058C6  0E02               	movlw	2
 21348  0058C8  EC74  F02B         	call	_USBStallEndpoint
 21349                           
 21350                           ;usb_device_msd.c: 1644: }
 21351                           
 21352                           ;usb_device_msd.c: 1643: break;
 21353                           
 21354                           ;usb_device_msd.c: 1642: default:
 21355                           
 21356                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21357  0058CC  0012               	return	
 21358  0058CE                     l747:
 21359  0058CE  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21360                           
 21361                           ; Switch size 1, requested type "space"
 21362                           ; Number of cases is 6, Range of values is 1 to 127
 21363                           ; switch strategies available:
 21364                           ; Name         Instructions Cycles
 21365                           ; simple_byte           19    10 (average)
 21366                           ;	Chosen strategy is simple_byte
 21367  0058D0  0A01               	xorlw	1	; case 1
 21368  0058D2  B4D8               	btfsc	status,2,c
 21369  0058D4  D7B9               	goto	l748
 21370  0058D6  0A03               	xorlw	3	; case 2
 21371  0058D8  B4D8               	btfsc	status,2,c
 21372  0058DA  D7BA               	goto	l750
 21373  0058DC  0A01               	xorlw	1	; case 3
 21374  0058DE  B4D8               	btfsc	status,2,c
 21375  0058E0  D7BD               	goto	l751
 21376  0058E2  0A07               	xorlw	7	; case 4
 21377  0058E4  B4D8               	btfsc	status,2,c
 21378  0058E6  D7C3               	goto	l752
 21379  0058E8  0A01               	xorlw	1	; case 5
 21380  0058EA  B4D8               	btfsc	status,2,c
 21381  0058EC  D7C6               	goto	l753
 21382  0058EE  0A7A               	xorlw	122	; case 127
 21383  0058F0  A4D8               	btfss	status,2,c
 21384  0058F2  0012               	return	
 21385  0058F4  D7CB               	goto	l754
 21386  0058F6                     __end_of_MSDErrorHandler:
 21387                           	opt stack 0
 21388                           tosu	equ	0xFFF
 21389                           tosh	equ	0xFFE
 21390                           tosl	equ	0xFFD
 21391                           pclath	equ	0xFFA
 21392                           tblptru	equ	0xFF8
 21393                           tblptrh	equ	0xFF7
 21394                           tblptrl	equ	0xFF6
 21395                           tablat	equ	0xFF5
 21396                           prodh	equ	0xFF4
 21397                           prodl	equ	0xFF3
 21398                           intcon	equ	0xFF2
 21399                           intcon2	equ	0xFF1
 21400                           intcon3	equ	0xFF0
 21401                           indf0	equ	0xFEF
 21402                           postinc0	equ	0xFEE
 21403                           fsr0h	equ	0xFEA
 21404                           fsr0l	equ	0xFE9
 21405                           wreg	equ	0xFE8
 21406                           indf1	equ	0xFE7
 21407                           postdec1	equ	0xFE5
 21408                           plusw1	equ	0xFE3
 21409                           fsr1h	equ	0xFE2
 21410                           fsr1l	equ	0xFE1
 21411                           indf2	equ	0xFDF
 21412                           postinc2	equ	0xFDE
 21413                           postdec2	equ	0xFDD
 21414                           plusw2	equ	0xFDB
 21415                           fsr2h	equ	0xFDA
 21416                           fsr2l	equ	0xFD9
 21417                           status	equ	0xFD8
 21418                           
 21419 ;; *************** function _USBStallEndpoint *****************
 21420 ;; Defined at:
 21421 ;;		line 1073 in file "usb_device.c"
 21422 ;; Parameters:    Size  Location     Type
 21423 ;;  ep              1    wreg     unsigned char 
 21424 ;;  dir             1    0[COMRAM] unsigned char 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  ep              1    5[COMRAM] unsigned char 
 21427 ;;  p               2    6[COMRAM] PTR struct __BDT
 21428 ;;		 -> BDT(48), 
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  1    wreg      void 
 21431 ;; Registers used:
 21432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/0
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21441 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21442 ;;Total ram usage:        8 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		_MSDTasks
 21448 ;;		_MSDReadHandler
 21449 ;;		_MSDWriteHandler
 21450 ;;		_MSDErrorHandler
 21451 ;;		_MSDTransferTerminated
 21452 ;; This function uses a non-reentrant model
 21453 ;;
 21454                           
 21455                           	psect	text93
 21456  0056E8                     __ptext93:
 21457                           	opt stack 0
 21458  0056E8                     _USBStallEndpoint:
 21459                           	opt stack 27
 21460                           
 21461                           ;incstack = 0
 21462                           ;USBStallEndpoint@ep stored from wreg
 21463  0056E8  6E06               	movwf	USBStallEndpoint@ep,c
 21464                           
 21465                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21466  0056EA  5006               	movf	USBStallEndpoint@ep,w,c
 21467  0056EC  A4D8               	btfss	status,2,c
 21468  0056EE  D02C               	goto	l191
 21469                           
 21470                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21471  0056F0  0100               	movlb	0	; () banked
 21472  0056F2  EE20 F001          	lfsr	2,1
 21473  0056F6  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21474  0056F8  26D9               	addwf	fsr2l,f,c
 21475  0056FA  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21476  0056FC  22DA               	addwfc	fsr2h,f,c
 21477  0056FE  0E08               	movlw	8
 21478  005700  6EDF               	movwf	indf2,c
 21479                           
 21480                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21481  005702  EE20 F002          	lfsr	2,2
 21482  005706  51DF               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21483  005708  26D9               	addwf	fsr2l,f,c
 21484  00570A  51E0               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21485  00570C  22DA               	addwfc	fsr2h,f,c
 21486  00570E  0E30               	movlw	48
 21487  005710  6EDE               	movwf	postinc2,c
 21488  005712  0E0D               	movlw	13
 21489  005714  6EDD               	movwf	postdec2,c
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21493  005716  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21494  00571A  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21495  00571E  0E0C               	movlw	12
 21496  005720  6EDF               	movwf	indf2,c
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21500  005722  C0DF  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21501  005726  C0E0  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21502  00572A  0E00               	movlw	0
 21503  00572C  8EDB               	bsf	plusw2,7,c
 21504                           
 21505                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21506  00572E  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 21507  005732  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21508  005736  0E04               	movlw	4
 21509  005738  6EDF               	movwf	indf2,c
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21513  00573A  C0CB  FFD9         	movff	_pBDTEntryIn,fsr2l
 21514  00573E  C0CC  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21515  005742  0E00               	movlw	0
 21516  005744  8EDB               	bsf	plusw2,7,c
 21517                           
 21518                           ;usb_device.c: 1089: }
 21519  005746  0012               	return	
 21520  005748                     l191:
 21521                           
 21522                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21523                           
 21524                           ; BSR set to: 0
 21525  005748  5001               	movf	USBStallEndpoint@dir,w,c
 21526  00574A  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21527  00574C  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21528  00574E  90D8               	bcf	status,0,c
 21529  005750  3602               	rlcf	??_USBStallEndpoint,f,c
 21530  005752  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21531  005754  5006               	movf	USBStallEndpoint@ep,w,c
 21532  005756  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21533  005758  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21534  00575A  90D8               	bcf	status,0,c
 21535  00575C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21536  00575E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21537  005760  90D8               	bcf	status,0,c
 21538  005762  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21539  005764  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21540  005766  5002               	movf	??_USBStallEndpoint,w,c
 21541  005768  2604               	addwf	??_USBStallEndpoint+2,f,c
 21542  00576A  5003               	movf	??_USBStallEndpoint+1,w,c
 21543  00576C  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21544  00576E  90D8               	bcf	status,0,c
 21545  005770  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21546  005772  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21547  005774  90D8               	bcf	status,0,c
 21548  005776  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21549  005778  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21550  00577A  0E00               	movlw	0
 21551  00577C  2404               	addwf	??_USBStallEndpoint+2,w,c
 21552  00577E  6E07               	movwf	USBStallEndpoint@p,c
 21553  005780  0E0D               	movlw	13
 21554  005782  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21555  005784  6E08               	movwf	USBStallEndpoint@p+1,c
 21556                           
 21557                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21558  005786  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21559  00578A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21560  00578E  0E00               	movlw	0
 21561  005790  84DB               	bsf	plusw2,2,c
 21562                           
 21563                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21564  005792  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21565  005796  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21566  00579A  0E00               	movlw	0
 21567  00579C  8EDB               	bsf	plusw2,7,c
 21568                           
 21569                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21570  00579E  5006               	movf	USBStallEndpoint@ep,w,c
 21571  0057A0  0D04               	mullw	4
 21572  0057A2  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21573  0057A6  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21574  0057AA  5001               	movf	USBStallEndpoint@dir,w,c
 21575  0057AC  0D02               	mullw	2
 21576  0057AE  50F3               	movf	prodl,w,c
 21577  0057B0  2602               	addwf	??_USBStallEndpoint,f,c
 21578  0057B2  50F4               	movf	prodh,w,c
 21579  0057B4  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21580  0057B6  90D8               	bcf	status,0,c
 21581  0057B8  3602               	rlcf	??_USBStallEndpoint,f,c
 21582  0057BA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21583  0057BC  90D8               	bcf	status,0,c
 21584  0057BE  3602               	rlcf	??_USBStallEndpoint,f,c
 21585  0057C0  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21586  0057C2  0E04               	movlw	4
 21587  0057C4  2602               	addwf	??_USBStallEndpoint,f,c
 21588  0057C6  0E00               	movlw	0
 21589  0057C8  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21590  0057CA  0E00               	movlw	0
 21591  0057CC  2402               	addwf	??_USBStallEndpoint,w,c
 21592  0057CE  6E07               	movwf	USBStallEndpoint@p,c
 21593  0057D0  0E0D               	movlw	13
 21594  0057D2  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21595  0057D4  6E08               	movwf	USBStallEndpoint@p+1,c
 21596                           
 21597                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21598  0057D6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21599  0057DA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21600  0057DE  0E00               	movlw	0
 21601  0057E0  84DB               	bsf	plusw2,2,c
 21602                           
 21603                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21604  0057E2  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21605  0057E6  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21606  0057EA  0E00               	movlw	0
 21607  0057EC  8EDB               	bsf	plusw2,7,c
 21608  0057EE  0012               	return	
 21609  0057F0                     __end_of_USBStallEndpoint:
 21610                           	opt stack 0
 21611                           tosu	equ	0xFFF
 21612                           tosh	equ	0xFFE
 21613                           tosl	equ	0xFFD
 21614                           pclath	equ	0xFFA
 21615                           tblptru	equ	0xFF8
 21616                           tblptrh	equ	0xFF7
 21617                           tblptrl	equ	0xFF6
 21618                           tablat	equ	0xFF5
 21619                           prodh	equ	0xFF4
 21620                           prodl	equ	0xFF3
 21621                           intcon	equ	0xFF2
 21622                           intcon2	equ	0xFF1
 21623                           intcon3	equ	0xFF0
 21624                           indf0	equ	0xFEF
 21625                           postinc0	equ	0xFEE
 21626                           fsr0h	equ	0xFEA
 21627                           fsr0l	equ	0xFE9
 21628                           wreg	equ	0xFE8
 21629                           indf1	equ	0xFE7
 21630                           postdec1	equ	0xFE5
 21631                           plusw1	equ	0xFE3
 21632                           fsr1h	equ	0xFE2
 21633                           fsr1l	equ	0xFE1
 21634                           indf2	equ	0xFDF
 21635                           postinc2	equ	0xFDE
 21636                           postdec2	equ	0xFDD
 21637                           plusw2	equ	0xFDB
 21638                           fsr2h	equ	0xFDA
 21639                           fsr2l	equ	0xFD9
 21640                           status	equ	0xFD8
 21641                           
 21642 ;; *************** function _ResetSenseData *****************
 21643 ;; Defined at:
 21644 ;;		line 1373 in file "usb_device_msd.c"
 21645 ;; Parameters:    Size  Location     Type
 21646 ;;		None
 21647 ;; Auto vars:     Size  Location     Type
 21648 ;;		None
 21649 ;; Return value:  Size  Location     Type
 21650 ;;                  1    wreg      void 
 21651 ;; Registers used:
 21652 ;;		wreg, status,2
 21653 ;; Tracked objects:
 21654 ;;		On entry : 0/0
 21655 ;;		On exit  : 0/0
 21656 ;;		Unchanged: 0/0
 21657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21662 ;;Total ram usage:        0 bytes
 21663 ;; Hardware stack levels used:    1
 21664 ;; This function calls:
 21665 ;;		Nothing
 21666 ;; This function is called by:
 21667 ;;		_USBMSDInit
 21668 ;;		_MSDProcessCommandMediaAbsent
 21669 ;;		_MSDProcessCommandMediaPresent
 21670 ;;		_MSDErrorHandler
 21671 ;; This function uses a non-reentrant model
 21672 ;;
 21673                           
 21674                           	psect	text94
 21675  008DEC                     __ptext94:
 21676                           	opt stack 0
 21677  008DEC                     _ResetSenseData:
 21678                           	opt stack 26
 21679                           
 21680                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21681                           
 21682                           ;incstack = 0
 21683  008DEC  0101               	movlb	1	; () banked
 21684  008DEE  911F               	bcf	_gblSenseData& (0+255),0,b
 21685  008DF0  931F               	bcf	_gblSenseData& (0+255),1,b
 21686  008DF2  951F               	bcf	_gblSenseData& (0+255),2,b
 21687  008DF4  971F               	bcf	_gblSenseData& (0+255),3,b
 21688  008DF6  891F               	bsf	_gblSenseData& (0+255),4,b
 21689  008DF8  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21690  008DFA  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21691                           
 21692                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21693  008DFC  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21694                           
 21695                           ; BSR set to: 1
 21696                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21697  008DFE  0E00               	movlw	0
 21698  008E00  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21699                           
 21700                           ; BSR set to: 1
 21701                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21702  008E02  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21703  008E04  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21704  008E06  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21705  008E08  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21706                           
 21707                           ; BSR set to: 1
 21708                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21709  008E0A  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21710                           
 21711                           ; BSR set to: 1
 21712                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21713  008E0C  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21717  008E0E  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21718                           
 21719                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21720  008E10  0E00               	movlw	0
 21721  008E12  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21722                           
 21723                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21724  008E14  0E00               	movlw	0
 21725  008E16  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21726                           
 21727                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21728  008E18  0E00               	movlw	0
 21729  008E1A  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21730                           
 21731                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21732  008E1C  0E00               	movlw	0
 21733  008E1E  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21734                           
 21735                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21736  008E20  0E0A               	movlw	10
 21737  008E22  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21738                           
 21739                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21740  008E24  0E00               	movlw	0
 21741  008E26  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21742  008E28  0E00               	movlw	0
 21743  008E2A  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21744  008E2C  0E00               	movlw	0
 21745  008E2E  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21746  008E30  0E00               	movlw	0
 21747  008E32  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21748                           
 21749                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21750  008E34  0E00               	movlw	0
 21751  008E36  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21752                           
 21753                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21754  008E38  0E00               	movlw	0
 21755  008E3A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21756                           
 21757                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21758  008E3C  0E00               	movlw	0
 21759  008E3E  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21760                           
 21761                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21762  008E40  0E00               	movlw	0
 21763  008E42  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21764                           
 21765                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21766  008E44  0E00               	movlw	0
 21767  008E46  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21768                           
 21769                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21770  008E48  0E00               	movlw	0
 21771  008E4A  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21772                           
 21773                           ; BSR set to: 1
 21774  008E4C  0012               	return		;funcret
 21775  008E4E                     __end_of_ResetSenseData:
 21776                           	opt stack 0
 21777                           tosu	equ	0xFFF
 21778                           tosh	equ	0xFFE
 21779                           tosl	equ	0xFFD
 21780                           pclath	equ	0xFFA
 21781                           tblptru	equ	0xFF8
 21782                           tblptrh	equ	0xFF7
 21783                           tblptrl	equ	0xFF6
 21784                           tablat	equ	0xFF5
 21785                           prodh	equ	0xFF4
 21786                           prodl	equ	0xFF3
 21787                           intcon	equ	0xFF2
 21788                           intcon2	equ	0xFF1
 21789                           intcon3	equ	0xFF0
 21790                           indf0	equ	0xFEF
 21791                           postinc0	equ	0xFEE
 21792                           fsr0h	equ	0xFEA
 21793                           fsr0l	equ	0xFE9
 21794                           wreg	equ	0xFE8
 21795                           indf1	equ	0xFE7
 21796                           postdec1	equ	0xFE5
 21797                           plusw1	equ	0xFE3
 21798                           fsr1h	equ	0xFE2
 21799                           fsr1l	equ	0xFE1
 21800                           indf2	equ	0xFDF
 21801                           postinc2	equ	0xFDE
 21802                           postdec2	equ	0xFDD
 21803                           plusw2	equ	0xFDB
 21804                           fsr2h	equ	0xFDA
 21805                           fsr2l	equ	0xFD9
 21806                           status	equ	0xFD8
 21807                           
 21808 ;; *************** function _ExternalFlash_SectorRead *****************
 21809 ;; Defined at:
 21810 ;;		line 40 in file "external_flash.c"
 21811 ;; Parameters:    Size  Location     Type
 21812 ;;  config          2   43[COMRAM] PTR void 
 21813 ;;		 -> NULL(0), 
 21814 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21815 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21816 ;;		 -> msd_buffer(512), 
 21817 ;; Auto vars:     Size  Location     Type
 21818 ;;  page            2   51[COMRAM] unsigned int 
 21819 ;; Return value:  Size  Location     Type
 21820 ;;                  1    wreg      unsigned char 
 21821 ;; Registers used:
 21822 ;;		wreg, status,2, status,0, cstack
 21823 ;; Tracked objects:
 21824 ;;		On entry : 0/0
 21825 ;;		On exit  : 0/0
 21826 ;;		Unchanged: 0/0
 21827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21828 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21831 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21832 ;;Total ram usage:       10 bytes
 21833 ;; Hardware stack levels used:    1
 21834 ;; Hardware stack levels required when called:    5
 21835 ;; This function calls:
 21836 ;;		_flash_sector_read
 21837 ;; This function is called by:
 21838 ;;		_MSDReadHandler
 21839 ;; This function uses a non-reentrant model
 21840 ;;
 21841                           
 21842                           	psect	text95
 21843  009B74                     __ptext95:
 21844                           	opt stack 0
 21845  009B74                     _ExternalFlash_SectorRead:
 21846                           	opt stack 20
 21847                           
 21848                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21849                           
 21850                           ; BSR set to: 1
 21851                           ;incstack = 0
 21852  009B74  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21853  009B78  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21854                           
 21855                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21856  009B7C  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21857  009B7E  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21858  009B80  E104               	bnz	u8800
 21859  009B82  0E20               	movlw	32
 21860  009B84  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21861  009B86  A0D8               	btfss	status,0,c
 21862  009B88  D002               	goto	l1915
 21863  009B8A                     u8800:
 21864                           
 21865                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21866  009B8A  0E00               	movlw	0
 21867  009B8C  0012               	return	
 21868  009B8E                     l1915:
 21869                           
 21870                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21871  009B8E  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21872  009B92  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21873  009B96  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21874  009B9A  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21875  009B9E  ECD3  F04D         	call	_flash_sector_read	;wreg free
 21876                           
 21877                           ;external_flash.c: 53: return 1;
 21878  009BA2  0E01               	movlw	1
 21879  009BA4  0012               	return	
 21880  009BA6                     __end_of_ExternalFlash_SectorRead:
 21881                           	opt stack 0
 21882                           tosu	equ	0xFFF
 21883                           tosh	equ	0xFFE
 21884                           tosl	equ	0xFFD
 21885                           pclath	equ	0xFFA
 21886                           tblptru	equ	0xFF8
 21887                           tblptrh	equ	0xFF7
 21888                           tblptrl	equ	0xFF6
 21889                           tablat	equ	0xFF5
 21890                           prodh	equ	0xFF4
 21891                           prodl	equ	0xFF3
 21892                           intcon	equ	0xFF2
 21893                           intcon2	equ	0xFF1
 21894                           intcon3	equ	0xFF0
 21895                           indf0	equ	0xFEF
 21896                           postinc0	equ	0xFEE
 21897                           fsr0h	equ	0xFEA
 21898                           fsr0l	equ	0xFE9
 21899                           wreg	equ	0xFE8
 21900                           indf1	equ	0xFE7
 21901                           postdec1	equ	0xFE5
 21902                           plusw1	equ	0xFE3
 21903                           fsr1h	equ	0xFE2
 21904                           fsr1l	equ	0xFE1
 21905                           indf2	equ	0xFDF
 21906                           postinc2	equ	0xFDE
 21907                           postdec2	equ	0xFDD
 21908                           plusw2	equ	0xFDB
 21909                           fsr2h	equ	0xFDA
 21910                           fsr2l	equ	0xFD9
 21911                           status	equ	0xFD8
 21912                           
 21913 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21914 ;; Defined at:
 21915 ;;		line 993 in file "usb_device_msd.c"
 21916 ;; Parameters:    Size  Location     Type
 21917 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;		None
 21920 ;; Return value:  Size  Location     Type
 21921 ;;                  1    wreg      void 
 21922 ;; Registers used:
 21923 ;;		wreg, status,2, status,0
 21924 ;; Tracked objects:
 21925 ;;		On entry : 0/0
 21926 ;;		On exit  : 0/0
 21927 ;;		Unchanged: 0/0
 21928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21931 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21933 ;;Total ram usage:        6 bytes
 21934 ;; Hardware stack levels used:    1
 21935 ;; This function calls:
 21936 ;;		Nothing
 21937 ;; This function is called by:
 21938 ;;		_MSDProcessCommandMediaPresent
 21939 ;; This function uses a non-reentrant model
 21940 ;;
 21941                           
 21942                           	psect	text96
 21943  008262                     __ptext96:
 21944                           	opt stack 0
 21945  008262                     _MSDComputeDeviceInAndResidue:
 21946                           	opt stack 26
 21947                           
 21948                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21949                           
 21950                           ;incstack = 0
 21951  008262  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21952  008264  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21953  008266  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21954  008268  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21955  00826A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21956  00826C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21957  00826E  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21958  008270  0101               	movlb	1	; () banked
 21959  008272  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21960  008274  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21961  008276  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21962  008278  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21963  00827A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21964  00827C  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21965  00827E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21966  008280  B0D8               	btfsc	status,0,c
 21967  008282  D00E               	goto	l659
 21968                           
 21969                           ; BSR set to: 1
 21970                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21971  008284  0E00               	movlw	0
 21972  008286  010D               	movlb	13	; () banked
 21973  008288  6F88               	movwf	136,b	;volatile
 21974  00828A  0E00               	movlw	0
 21975  00828C  6F89               	movwf	137,b	;volatile
 21976  00828E  0E00               	movlw	0
 21977  008290  6F8A               	movwf	138,b	;volatile
 21978  008292  0E00               	movlw	0
 21979  008294  6F8B               	movwf	139,b	;volatile
 21980                           
 21981                           ; BSR set to: 13
 21982                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21983  008296  C108  F0D9         	movff	_gblCBW+8,_TransferLength
 21984  00829A  C109  F0DA         	movff	_gblCBW+9,_TransferLength+1
 21985                           
 21986                           ;usb_device_msd.c: 1002: }
 21987  00829E  0012               	return	
 21988  0082A0                     l659:
 21989                           
 21990                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21991                           
 21992                           ; BSR set to: 13
 21993  0082A0  0100               	movlb	0	; () banked
 21994  0082A2  51D9               	movf	_TransferLength& (0+255),w,b
 21995  0082A4  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21996  0082A6  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 21997  0082A8  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21998  0082AA  B0D8               	btfsc	status,0,c
 21999  0082AC  D004               	goto	l661
 22000                           
 22001                           ; BSR set to: 0
 22002                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 22003  0082AE  C001  F0D9         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 22004  0082B2  C002  F0DA         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 22005  0082B6                     l661:
 22006                           
 22007                           ; BSR set to: 0
 22008                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 22009                           
 22010                           ; BSR set to: 0
 22011  0082B6  51D9               	movf	_TransferLength& (0+255),w,b
 22012  0082B8  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22013  0082BA  51DA               	movf	(_TransferLength+1)& (0+255),w,b
 22014  0082BC  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22015  0082BE  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22016  0082C0  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22017  0082C2  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 22018  0082C4  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 22019  0082C6  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 22020  0082C8  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 22021  0082CA  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 22022  0082CC  0E00               	movlw	0
 22023  0082CE  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 22024  0082D0  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 22025  0082D2  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 22026  0082D4  0101               	movlb	1	; () banked
 22027  0082D6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22028  0082D8  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 22029  0082DA  010D               	movlb	13	; () banked
 22030  0082DC  6F88               	movwf	136,b	;volatile
 22031  0082DE  0101               	movlb	1	; () banked
 22032  0082E0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22033  0082E2  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 22034  0082E4  010D               	movlb	13	; () banked
 22035  0082E6  6F89               	movwf	137,b	;volatile
 22036  0082E8  0101               	movlb	1	; () banked
 22037  0082EA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22038  0082EC  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 22039  0082EE  010D               	movlb	13	; () banked
 22040  0082F0  6F8A               	movwf	138,b	;volatile
 22041  0082F2  0101               	movlb	1	; () banked
 22042  0082F4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22043  0082F6  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 22044  0082F8  010D               	movlb	13	; () banked
 22045  0082FA  6F8B               	movwf	139,b	;volatile
 22046  0082FC  0012               	return	
 22047  0082FE                     __end_of_MSDComputeDeviceInAndResidue:
 22048                           	opt stack 0
 22049                           tosu	equ	0xFFF
 22050                           tosh	equ	0xFFE
 22051                           tosl	equ	0xFFD
 22052                           pclath	equ	0xFFA
 22053                           tblptru	equ	0xFF8
 22054                           tblptrh	equ	0xFF7
 22055                           tblptrl	equ	0xFF6
 22056                           tablat	equ	0xFF5
 22057                           prodh	equ	0xFF4
 22058                           prodl	equ	0xFF3
 22059                           intcon	equ	0xFF2
 22060                           intcon2	equ	0xFF1
 22061                           intcon3	equ	0xFF0
 22062                           indf0	equ	0xFEF
 22063                           postinc0	equ	0xFEE
 22064                           fsr0h	equ	0xFEA
 22065                           fsr0l	equ	0xFE9
 22066                           wreg	equ	0xFE8
 22067                           indf1	equ	0xFE7
 22068                           postdec1	equ	0xFE5
 22069                           plusw1	equ	0xFE3
 22070                           fsr1h	equ	0xFE2
 22071                           fsr1l	equ	0xFE1
 22072                           indf2	equ	0xFDF
 22073                           postinc2	equ	0xFDE
 22074                           postdec2	equ	0xFDD
 22075                           plusw2	equ	0xFDB
 22076                           fsr2h	equ	0xFDA
 22077                           fsr2l	equ	0xFD9
 22078                           status	equ	0xFD8
 22079                           
 22080 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 22081 ;; Defined at:
 22082 ;;		line 18 in file "external_flash.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;  config          2    0[COMRAM] PTR void 
 22085 ;;		 -> NULL(0), 
 22086 ;; Auto vars:     Size  Location     Type
 22087 ;;		None
 22088 ;; Return value:  Size  Location     Type
 22089 ;;                  2    0[COMRAM] unsigned int 
 22090 ;; Registers used:
 22091 ;;		wreg, status,2
 22092 ;; Tracked objects:
 22093 ;;		On entry : 0/0
 22094 ;;		On exit  : 0/0
 22095 ;;		Unchanged: 0/0
 22096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22101 ;;Total ram usage:        2 bytes
 22102 ;; Hardware stack levels used:    1
 22103 ;; This function calls:
 22104 ;;		Nothing
 22105 ;; This function is called by:
 22106 ;;		_MSDProcessCommandMediaPresent
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text97
 22111  00A24A                     __ptext97:
 22112                           	opt stack 0
 22113  00A24A                     _ExternalFlash_SectorSizeRead:
 22114                           	opt stack 26
 22115                           
 22116                           ;external_flash.c: 20: return 512;
 22117                           
 22118                           ; BSR set to: 13
 22119                           ;incstack = 0
 22120  00A24A  0E02               	movlw	2
 22121  00A24C  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 22122  00A24E  0E00               	movlw	0
 22123  00A250  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 22124  00A252  0012               	return	
 22125  00A254                     __end_of_ExternalFlash_SectorSizeRead:
 22126                           	opt stack 0
 22127                           tosu	equ	0xFFF
 22128                           tosh	equ	0xFFE
 22129                           tosl	equ	0xFFD
 22130                           pclath	equ	0xFFA
 22131                           tblptru	equ	0xFF8
 22132                           tblptrh	equ	0xFF7
 22133                           tblptrl	equ	0xFF6
 22134                           tablat	equ	0xFF5
 22135                           prodh	equ	0xFF4
 22136                           prodl	equ	0xFF3
 22137                           intcon	equ	0xFF2
 22138                           intcon2	equ	0xFF1
 22139                           intcon3	equ	0xFF0
 22140                           indf0	equ	0xFEF
 22141                           postinc0	equ	0xFEE
 22142                           fsr0h	equ	0xFEA
 22143                           fsr0l	equ	0xFE9
 22144                           wreg	equ	0xFE8
 22145                           indf1	equ	0xFE7
 22146                           postdec1	equ	0xFE5
 22147                           plusw1	equ	0xFE3
 22148                           fsr1h	equ	0xFE2
 22149                           fsr1l	equ	0xFE1
 22150                           indf2	equ	0xFDF
 22151                           postinc2	equ	0xFDE
 22152                           postdec2	equ	0xFDD
 22153                           plusw2	equ	0xFDB
 22154                           fsr2h	equ	0xFDA
 22155                           fsr2l	equ	0xFD9
 22156                           status	equ	0xFD8
 22157                           
 22158 ;; *************** function _ExternalFlash_CapacityRead *****************
 22159 ;; Defined at:
 22160 ;;		line 23 in file "external_flash.c"
 22161 ;; Parameters:    Size  Location     Type
 22162 ;;  config          2    0[COMRAM] PTR void 
 22163 ;;		 -> NULL(0), 
 22164 ;; Auto vars:     Size  Location     Type
 22165 ;;		None
 22166 ;; Return value:  Size  Location     Type
 22167 ;;                  4    0[COMRAM] unsigned long 
 22168 ;; Registers used:
 22169 ;;		wreg, status,2
 22170 ;; Tracked objects:
 22171 ;;		On entry : 0/0
 22172 ;;		On exit  : 0/0
 22173 ;;		Unchanged: 0/0
 22174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22179 ;;Total ram usage:        4 bytes
 22180 ;; Hardware stack levels used:    1
 22181 ;; This function calls:
 22182 ;;		Nothing
 22183 ;; This function is called by:
 22184 ;;		_MSDProcessCommandMediaPresent
 22185 ;; This function uses a non-reentrant model
 22186 ;;
 22187                           
 22188                           	psect	text98
 22189  00A182                     __ptext98:
 22190                           	opt stack 0
 22191  00A182                     _ExternalFlash_CapacityRead:
 22192                           	opt stack 26
 22193                           
 22194                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 22195                           
 22196                           ;incstack = 0
 22197  00A182  0EFF               	movlw	255
 22198  00A184  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 22199  00A186  0E1F               	movlw	31
 22200  00A188  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 22201  00A18A  0E00               	movlw	0
 22202  00A18C  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 22203  00A18E  0E00               	movlw	0
 22204  00A190  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 22205  00A192  0012               	return	
 22206  00A194                     __end_of_ExternalFlash_CapacityRead:
 22207                           	opt stack 0
 22208                           tosu	equ	0xFFF
 22209                           tosh	equ	0xFFE
 22210                           tosl	equ	0xFFD
 22211                           pclath	equ	0xFFA
 22212                           tblptru	equ	0xFF8
 22213                           tblptrh	equ	0xFF7
 22214                           tblptrl	equ	0xFF6
 22215                           tablat	equ	0xFF5
 22216                           prodh	equ	0xFF4
 22217                           prodl	equ	0xFF3
 22218                           intcon	equ	0xFF2
 22219                           intcon2	equ	0xFF1
 22220                           intcon3	equ	0xFF0
 22221                           indf0	equ	0xFEF
 22222                           postinc0	equ	0xFEE
 22223                           fsr0h	equ	0xFEA
 22224                           fsr0l	equ	0xFE9
 22225                           wreg	equ	0xFE8
 22226                           indf1	equ	0xFE7
 22227                           postdec1	equ	0xFE5
 22228                           plusw1	equ	0xFE3
 22229                           fsr1h	equ	0xFE2
 22230                           fsr1l	equ	0xFE1
 22231                           indf2	equ	0xFDF
 22232                           postinc2	equ	0xFDE
 22233                           postdec2	equ	0xFDD
 22234                           plusw2	equ	0xFDB
 22235                           fsr2h	equ	0xFDA
 22236                           fsr2l	equ	0xFD9
 22237                           status	equ	0xFD8
 22238                           
 22239 ;; *************** function _ExternalFlash_MediaInitialize *****************
 22240 ;; Defined at:
 22241 ;;		line 10 in file "external_flash.c"
 22242 ;; Parameters:    Size  Location     Type
 22243 ;;  config          2    0[COMRAM] PTR void 
 22244 ;;		 -> NULL(0), 
 22245 ;; Auto vars:     Size  Location     Type
 22246 ;;		None
 22247 ;; Return value:  Size  Location     Type
 22248 ;;                  2    0[COMRAM] PTR struct .
 22249 ;; Registers used:
 22250 ;;		wreg, status,2, status,0
 22251 ;; Tracked objects:
 22252 ;;		On entry : 0/0
 22253 ;;		On exit  : 0/0
 22254 ;;		Unchanged: 0/0
 22255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22260 ;;Total ram usage:        2 bytes
 22261 ;; Hardware stack levels used:    1
 22262 ;; This function calls:
 22263 ;;		Nothing
 22264 ;; This function is called by:
 22265 ;;		_USBMSDInit
 22266 ;;		_MSDProcessCommand
 22267 ;; This function uses a non-reentrant model
 22268 ;;
 22269                           
 22270                           	psect	text99
 22271  00A09C                     __ptext99:
 22272                           	opt stack 0
 22273  00A09C                     _ExternalFlash_MediaInitialize:
 22274                           	opt stack 26
 22275                           
 22276                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 22277                           
 22278                           ;incstack = 0
 22279  00A09C  0101               	movlb	1	; () banked
 22280  00A09E  81AB               	bsf	(_mediaInformation+1)& (0+255),0,b
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 22284  00A0A0  0E02               	movlw	2
 22285  00A0A2  6FAD               	movwf	(_mediaInformation+3)& (0+255),b
 22286  00A0A4  0E00               	movlw	0
 22287  00A0A6  6FAC               	movwf	(_mediaInformation+2)& (0+255),b
 22288                           
 22289                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 22290  00A0A8  0E00               	movlw	0
 22291  00A0AA  6FAA               	movwf	_mediaInformation& (0+255),b
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;external_flash.c: 15: return &mediaInformation;
 22295  00A0AC  0EAA               	movlw	low _mediaInformation
 22296  00A0AE  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 22297  00A0B0  0E01               	movlw	high _mediaInformation
 22298  00A0B2  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 22299  00A0B4  0012               	return	
 22300  00A0B6                     __end_of_ExternalFlash_MediaInitialize:
 22301                           	opt stack 0
 22302                           tosu	equ	0xFFF
 22303                           tosh	equ	0xFFE
 22304                           tosl	equ	0xFFD
 22305                           pclath	equ	0xFFA
 22306                           tblptru	equ	0xFF8
 22307                           tblptrh	equ	0xFF7
 22308                           tblptrl	equ	0xFF6
 22309                           tablat	equ	0xFF5
 22310                           prodh	equ	0xFF4
 22311                           prodl	equ	0xFF3
 22312                           intcon	equ	0xFF2
 22313                           intcon2	equ	0xFF1
 22314                           intcon3	equ	0xFF0
 22315                           indf0	equ	0xFEF
 22316                           postinc0	equ	0xFEE
 22317                           fsr0h	equ	0xFEA
 22318                           fsr0l	equ	0xFE9
 22319                           wreg	equ	0xFE8
 22320                           indf1	equ	0xFE7
 22321                           postdec1	equ	0xFE5
 22322                           plusw1	equ	0xFE3
 22323                           fsr1h	equ	0xFE2
 22324                           fsr1l	equ	0xFE1
 22325                           indf2	equ	0xFDF
 22326                           postinc2	equ	0xFDE
 22327                           postdec2	equ	0xFDD
 22328                           plusw2	equ	0xFDB
 22329                           fsr2h	equ	0xFDA
 22330                           fsr2l	equ	0xFD9
 22331                           status	equ	0xFD8
 22332                           
 22333 ;; *************** function _ExternalFlash_MediaDetect *****************
 22334 ;; Defined at:
 22335 ;;		line 29 in file "external_flash.c"
 22336 ;; Parameters:    Size  Location     Type
 22337 ;;  config          2    0[COMRAM] PTR void 
 22338 ;;		 -> NULL(0), 
 22339 ;; Auto vars:     Size  Location     Type
 22340 ;;		None
 22341 ;; Return value:  Size  Location     Type
 22342 ;;                  1    wreg      unsigned char 
 22343 ;; Registers used:
 22344 ;;		wreg
 22345 ;; Tracked objects:
 22346 ;;		On entry : 0/0
 22347 ;;		On exit  : 0/0
 22348 ;;		Unchanged: 0/0
 22349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22354 ;;Total ram usage:        2 bytes
 22355 ;; Hardware stack levels used:    1
 22356 ;; This function calls:
 22357 ;;		Nothing
 22358 ;; This function is called by:
 22359 ;;		_USBMSDInit
 22360 ;;		_MSDProcessCommand
 22361 ;; This function uses a non-reentrant model
 22362 ;;
 22363                           
 22364                           	psect	text100
 22365  00A2DA                     __ptext100:
 22366                           	opt stack 0
 22367  00A2DA                     _ExternalFlash_MediaDetect:
 22368                           	opt stack 26
 22369                           
 22370                           ;external_flash.c: 31: return 1;
 22371                           
 22372                           ; BSR set to: 1
 22373                           ;incstack = 0
 22374  00A2DA  0E01               	movlw	1
 22375  00A2DC  0012               	return	
 22376  00A2DE                     __end_of_ExternalFlash_MediaDetect:
 22377                           	opt stack 0
 22378                           tosu	equ	0xFFF
 22379                           tosh	equ	0xFFE
 22380                           tosl	equ	0xFFD
 22381                           pclath	equ	0xFFA
 22382                           tblptru	equ	0xFF8
 22383                           tblptrh	equ	0xFF7
 22384                           tblptrl	equ	0xFF6
 22385                           tablat	equ	0xFF5
 22386                           prodh	equ	0xFF4
 22387                           prodl	equ	0xFF3
 22388                           intcon	equ	0xFF2
 22389                           intcon2	equ	0xFF1
 22390                           intcon3	equ	0xFF0
 22391                           indf0	equ	0xFEF
 22392                           postinc0	equ	0xFEE
 22393                           fsr0h	equ	0xFEA
 22394                           fsr0l	equ	0xFE9
 22395                           wreg	equ	0xFE8
 22396                           indf1	equ	0xFE7
 22397                           postdec1	equ	0xFE5
 22398                           plusw1	equ	0xFE3
 22399                           fsr1h	equ	0xFE2
 22400                           fsr1l	equ	0xFE1
 22401                           indf2	equ	0xFDF
 22402                           postinc2	equ	0xFDE
 22403                           postdec2	equ	0xFDD
 22404                           plusw2	equ	0xFDB
 22405                           fsr2h	equ	0xFDA
 22406                           fsr2l	equ	0xFD9
 22407                           status	equ	0xFD8
 22408                           
 22409 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 22410 ;; Defined at:
 22411 ;;		line 74 in file "app_device_custom_hid.c"
 22412 ;; Parameters:    Size  Location     Type
 22413 ;;		None
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;  idx             1    0        unsigned char 
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  1    wreg      void 
 22418 ;; Registers used:
 22419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/0
 22422 ;;		On exit  : 0/0
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22428 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22429 ;;Total ram usage:        4 bytes
 22430 ;; Hardware stack levels used:    1
 22431 ;; Hardware stack levels required when called:   12
 22432 ;; This function calls:
 22433 ;;		_USBTransferOnePacket
 22434 ;;		_api_parse
 22435 ;;		_api_prepare
 22436 ;; This function is called by:
 22437 ;;		_main
 22438 ;; This function uses a non-reentrant model
 22439 ;;
 22440                           
 22441                           	psect	text101
 22442  00795A                     __ptext101:
 22443                           	opt stack 0
 22444  00795A                     _APP_DeviceCustomHIDTasks:
 22445                           	opt stack 18
 22446                           
 22447                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22448                           
 22449                           ;incstack = 0
 22450  00795A  0E20               	movlw	32
 22451  00795C  0100               	movlb	0	; () banked
 22452  00795E  61F8               	cpfslt	_USBDeviceState& (0+255),b
 22453  007960  D001               	goto	l964
 22454  007962  0012               	return	
 22455  007964                     l964:
 22456                           
 22457                           ; BSR set to: 0
 22458                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22459  007964  B265               	btfsc	3941,1,c	;volatile
 22460  007966  0012               	return	
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22464                           
 22465                           ; BSR set to: 0
 22466                           
 22467                           ; BSR set to: 0
 22468                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22469  007968  0101               	movlb	1	; () banked
 22470  00796A  5182               	movf	_USBOutHandle& (0+255),w,b
 22471  00796C  1183               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22472  00796E  B4D8               	btfsc	status,2,c
 22473  007970  D006               	goto	u14280
 22474                           
 22475                           ; BSR set to: 1
 22476  007972  C182  FFD9         	movff	_USBOutHandle,fsr2l
 22477  007976  C183  FFDA         	movff	_USBOutHandle+1,fsr2h
 22478  00797A  BEDF               	btfsc	indf2,7,c
 22479  00797C  0012               	return	
 22480  00797E                     u14280:
 22481                           
 22482                           ; BSR set to: 1
 22483                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22484                           
 22485                           ; BSR set to: 1
 22486  00797E  5180               	movf	_USBInHandle& (0+255),w,b
 22487  007980  1181               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22488  007982  B4D8               	btfsc	status,2,c
 22489  007984  D006               	goto	u14300
 22490                           
 22491                           ; BSR set to: 1
 22492  007986  C180  FFD9         	movff	_USBInHandle,fsr2l
 22493  00798A  C181  FFDA         	movff	_USBInHandle+1,fsr2h
 22494  00798E  BEDF               	btfsc	indf2,7,c
 22495  007990  D020               	goto	l970
 22496  007992                     u14300:
 22497                           
 22498                           ; BSR set to: 1
 22499                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22500                           
 22501                           ; BSR set to: 1
 22502  007992  0E50               	movlw	_ReceivedDataBuffer& (0+255)
 22503  007994  0100               	movlb	0	; () banked
 22504  007996  6FB7               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22505  007998  6BB8               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22506  00799A  C0B7  F0B2         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22507  00799E  C0B8  F0B3         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22508  0079A2  0E80               	movlw	_ToSendDataBuffer& (0+255)
 22509  0079A4  6FB9               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22510  0079A6  6BBA               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22511  0079A8  C0B9  F0B4         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22512  0079AC  C0BA  F0B5         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22513  0079B0  EC50  F021         	call	_api_prepare	;wreg free
 22514                           
 22515                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22516  0079B4  0E01               	movlw	1
 22517  0079B6  6E01               	movwf	USBTransferOnePacket@dir,c
 22518  0079B8  0E80               	movlw	low _ToSendDataBuffer
 22519  0079BA  6E02               	movwf	USBTransferOnePacket@data,c
 22520  0079BC  0E03               	movlw	high _ToSendDataBuffer
 22521  0079BE  6E03               	movwf	USBTransferOnePacket@data+1,c
 22522  0079C0  0E40               	movlw	64
 22523  0079C2  6E04               	movwf	USBTransferOnePacket@len,c
 22524  0079C4  0E01               	movlw	1
 22525  0079C6  ECFC  F02C         	call	_USBTransferOnePacket
 22526  0079CA  C001  F180         	movff	?_USBTransferOnePacket,_USBInHandle
 22527  0079CE  C002  F181         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22528  0079D2                     l970:
 22529                           
 22530                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 22531  0079D2  0E50               	movlw	low _ReceivedDataBuffer
 22532  0079D4  0100               	movlb	0	; () banked
 22533  0079D6  6FA4               	movwf	api_parse@inBuffer& (0+255),b
 22534  0079D8  0E02               	movlw	high _ReceivedDataBuffer
 22535  0079DA  6FA5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22536  0079DC  0E40               	movlw	64
 22537  0079DE  6FA6               	movwf	api_parse@receivedDataLength& (0+255),b
 22538  0079E0  0E80               	movlw	low _ToSendDataBuffer
 22539  0079E2  6FA7               	movwf	api_parse@outBuffer& (0+255),b
 22540  0079E4  0E03               	movlw	high _ToSendDataBuffer
 22541  0079E6  6FA8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 22542  0079E8  ECB1  F028         	call	_api_parse	;wreg free
 22543                           
 22544                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22545  0079EC  0E00               	movlw	0
 22546  0079EE  6E01               	movwf	USBTransferOnePacket@dir,c
 22547  0079F0  0E50               	movlw	low _ReceivedDataBuffer
 22548  0079F2  6E02               	movwf	USBTransferOnePacket@data,c
 22549  0079F4  0E02               	movlw	high _ReceivedDataBuffer
 22550  0079F6  6E03               	movwf	USBTransferOnePacket@data+1,c
 22551  0079F8  0E40               	movlw	64
 22552  0079FA  6E04               	movwf	USBTransferOnePacket@len,c
 22553  0079FC  0E01               	movlw	1
 22554  0079FE  ECFC  F02C         	call	_USBTransferOnePacket
 22555  007A02  C001  F182         	movff	?_USBTransferOnePacket,_USBOutHandle
 22556  007A06  C002  F183         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22557  007A0A  0012               	return	
 22558  007A0C                     __end_of_APP_DeviceCustomHIDTasks:
 22559                           	opt stack 0
 22560                           tosu	equ	0xFFF
 22561                           tosh	equ	0xFFE
 22562                           tosl	equ	0xFFD
 22563                           pclath	equ	0xFFA
 22564                           tblptru	equ	0xFF8
 22565                           tblptrh	equ	0xFF7
 22566                           tblptrl	equ	0xFF6
 22567                           tablat	equ	0xFF5
 22568                           prodh	equ	0xFF4
 22569                           prodl	equ	0xFF3
 22570                           intcon	equ	0xFF2
 22571                           intcon2	equ	0xFF1
 22572                           intcon3	equ	0xFF0
 22573                           indf0	equ	0xFEF
 22574                           postinc0	equ	0xFEE
 22575                           fsr0h	equ	0xFEA
 22576                           fsr0l	equ	0xFE9
 22577                           wreg	equ	0xFE8
 22578                           indf1	equ	0xFE7
 22579                           postdec1	equ	0xFE5
 22580                           plusw1	equ	0xFE3
 22581                           fsr1h	equ	0xFE2
 22582                           fsr1l	equ	0xFE1
 22583                           indf2	equ	0xFDF
 22584                           postinc2	equ	0xFDE
 22585                           postdec2	equ	0xFDD
 22586                           plusw2	equ	0xFDB
 22587                           fsr2h	equ	0xFDA
 22588                           fsr2l	equ	0xFD9
 22589                           status	equ	0xFD8
 22590                           
 22591 ;; *************** function _api_prepare *****************
 22592 ;; Defined at:
 22593 ;;		line 58 in file "api.c"
 22594 ;; Parameters:    Size  Location     Type
 22595 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22596 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22597 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22598 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22599 ;; Auto vars:     Size  Location     Type
 22600 ;;  command         1   86[BANK0 ] enum E6715
 22601 ;; Return value:  Size  Location     Type
 22602 ;;                  1    wreg      void 
 22603 ;; Registers used:
 22604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22605 ;; Tracked objects:
 22606 ;;		On entry : 0/0
 22607 ;;		On exit  : 0/0
 22608 ;;		Unchanged: 0/0
 22609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22613 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22614 ;;Total ram usage:        5 bytes
 22615 ;; Hardware stack levels used:    1
 22616 ;; Hardware stack levels required when called:   10
 22617 ;; This function calls:
 22618 ;;		__fill_buffer_find_file
 22619 ;;		__fill_buffer_get_bootloader_details
 22620 ;;		__fill_buffer_get_configuration
 22621 ;;		__fill_buffer_get_display
 22622 ;;		__fill_buffer_get_file_details
 22623 ;;		__fill_buffer_get_status
 22624 ;;		__fill_buffer_read_buffer
 22625 ;;		__fill_buffer_read_file
 22626 ;;		_memcpy
 22627 ;; This function is called by:
 22628 ;;		_main
 22629 ;;		_APP_DeviceCustomHIDTasks
 22630 ;; This function uses a non-reentrant model
 22631 ;;
 22632                           
 22633                           	psect	text102
 22634  0042A0                     __ptext102:
 22635                           	opt stack 0
 22636  0042A0                     _api_prepare:
 22637                           	opt stack 20
 22638                           
 22639                           ;api.c: 60: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22640                           
 22641                           ;incstack = 0
 22642  0042A0  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22643  0042A4  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22644  0042A8  50DF               	movf	indf2,w,c
 22645  0042AA  0100               	movlb	0	; () banked
 22646  0042AC  6FB6               	movwf	api_prepare@command& (0+255),b
 22647                           
 22648                           ; BSR set to: 0
 22649                           ;api.c: 62: if(command>0x7F)
 22650  0042AE  0E7F               	movlw	127
 22651  0042B0  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22652  0042B2  D096               	goto	l2761
 22653  0042B4  D03C               	goto	l2753
 22654  0042B6                     
 22655                           ; BSR set to: 0
 22656                           ;api.c: 77: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22657                           
 22658                           ; BSR set to: 0
 22659  0042B6  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22660  0042BA  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22661  0042BE  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22662  0042C2  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22663  0042C6  ECA7  F044         	call	__fill_buffer_get_file_details	;wreg free
 22664                           
 22665                           ;api.c: 78: break;
 22666  0042CA  0012               	return	
 22667  0042CC                     
 22668                           ;api.c: 82: _fill_buffer_find_file(inBuffer, outBuffer);
 22669  0042CC  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22670  0042D0  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22671  0042D4  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22672  0042D8  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22673  0042DC  EC53  F03F         	call	__fill_buffer_find_file	;wreg free
 22674                           
 22675                           ;api.c: 83: break;
 22676  0042E0  0012               	return	
 22677  0042E2                     
 22678                           ;api.c: 87: _fill_buffer_read_file(inBuffer, outBuffer);
 22679  0042E2  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22680  0042E6  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22681  0042EA  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22682  0042EE  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22683  0042F2  ECDE  F015         	call	__fill_buffer_read_file	;wreg free
 22684                           
 22685                           ;api.c: 88: break;
 22686  0042F6  0012               	return	
 22687  0042F8                     
 22688                           ;api.c: 92: _fill_buffer_read_buffer(inBuffer, outBuffer);
 22689  0042F8  C0B2  F02B         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 22690  0042FC  C0B3  F02C         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 22691  004300  C0B4  F02D         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 22692  004304  C0B5  F02E         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 22693  004308  EC79  F030         	call	__fill_buffer_read_buffer	;wreg free
 22694                           
 22695                           ;api.c: 93: break;
 22696  00430C  0012               	return	
 22697  00430E                     
 22698                           ;api.c: 96: outBuffer[0] = 0x99;
 22699  00430E  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22700  004312  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22701  004316  0E99               	movlw	153
 22702  004318  6EDF               	movwf	indf2,c
 22703                           
 22704                           ;api.c: 97: outBuffer[1] = 0x99;
 22705  00431A  0100               	movlb	0	; () banked
 22706  00431C  EE20 F001          	lfsr	2,1
 22707  004320  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22708  004322  26D9               	addwf	fsr2l,f,c
 22709  004324  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22710  004326  22DA               	addwfc	fsr2h,f,c
 22711  004328  0E99               	movlw	153
 22712  00432A  6EDF               	movwf	indf2,c
 22713                           
 22714                           ;api.c: 98: }
 22715  00432C  0012               	return	
 22716  00432E                     l2753:
 22717                           
 22718                           ; BSR set to: 0
 22719                           
 22720                           ; BSR set to: 0
 22721  00432E  51B6               	movf	api_prepare@command& (0+255),w,b
 22722                           
 22723                           ; Switch size 1, requested type "space"
 22724                           ; Number of cases is 4, Range of values is 128 to 131
 22725                           ; switch strategies available:
 22726                           ; Name         Instructions Cycles
 22727                           ; simple_byte           13     7 (average)
 22728                           ;	Chosen strategy is simple_byte
 22729  004330  0A80               	xorlw	128	; case 128
 22730  004332  B4D8               	btfsc	status,2,c
 22731  004334  D7C0               	goto	l2754
 22732  004336  0A01               	xorlw	1	; case 129
 22733  004338  B4D8               	btfsc	status,2,c
 22734  00433A  D7C8               	goto	l2756
 22735  00433C  0A03               	xorlw	3	; case 130
 22736  00433E  B4D8               	btfsc	status,2,c
 22737  004340  D7D0               	goto	l2757
 22738  004342  0A01               	xorlw	1	; case 131
 22739  004344  B4D8               	btfsc	status,2,c
 22740  004346  D7D8               	goto	l2758
 22741  004348  D7E2               	goto	l2759
 22742  00434A                     
 22743                           ; BSR set to: 0
 22744                           ;api.c: 111: _fill_buffer_get_status(outBuffer);
 22745                           
 22746                           ; BSR set to: 0
 22747  00434A  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22748  00434E  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22749  004352  ECA8  F033         	call	__fill_buffer_get_status	;wreg free
 22750                           
 22751                           ;api.c: 112: break;
 22752  004356  0012               	return	
 22753  004358                     
 22754                           ;api.c: 116: _fill_buffer_get_display(outBuffer, 0);
 22755  004358  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22756  00435C  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22757  004360  0E00               	movlw	0
 22758  004362  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22759  004364  EC53  F03C         	call	__fill_buffer_get_display	;wreg free
 22760                           
 22761                           ;api.c: 117: break;
 22762  004368  0012               	return	
 22763  00436A                     
 22764                           ;api.c: 121: _fill_buffer_get_display(outBuffer, 1);
 22765  00436A  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22766  00436E  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22767  004372  0E01               	movlw	1
 22768  004374  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22769  004376  EC53  F03C         	call	__fill_buffer_get_display	;wreg free
 22770                           
 22771                           ;api.c: 122: break;
 22772  00437A  0012               	return	
 22773  00437C                     
 22774                           ;api.c: 126: _fill_buffer_get_bootloader_details(outBuffer);
 22775  00437C  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22776  004380  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22777  004384  ECEE  F018         	call	__fill_buffer_get_bootloader_details	;wreg free
 22778                           
 22779                           ;api.c: 127: break;
 22780  004388  0012               	return	
 22781  00438A                     
 22782                           ;api.c: 131: _fill_buffer_get_configuration(outBuffer);
 22783  00438A  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22784  00438E  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22785  004392  EC44  F040         	call	__fill_buffer_get_configuration	;wreg free
 22786                           
 22787                           ;api.c: 132: break;
 22788  004396  0012               	return	
 22789  004398                     
 22790                           ;api.c: 136: memcpy(outBuffer, inBuffer, 64);
 22791  004398  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22792  00439C  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22793  0043A0  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22794  0043A4  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22795  0043A8  5003               	movf	memcpy@s1,w,c
 22796  0043AA  1004               	iorwf	memcpy@s1+1,w,c
 22797  0043AC  A4D8               	btfss	status,2,c
 22798  0043AE  0E20               	movlw	32
 22799  0043B0  6E05               	movwf	memcpy@s1+2,c
 22800  0043B2  0E00               	movlw	0
 22801  0043B4  6E07               	movwf	memcpy@n+1,c
 22802  0043B6  0E40               	movlw	64
 22803  0043B8  6E06               	movwf	memcpy@n,c
 22804  0043BA  EC92  F046         	call	_memcpy	;wreg free
 22805                           
 22806                           ;api.c: 137: break;
 22807  0043BE  0012               	return	
 22808  0043C0                     
 22809                           ;api.c: 140: outBuffer[0] = 0x99;
 22810  0043C0  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22811  0043C4  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22812  0043C8  0E99               	movlw	153
 22813  0043CA  6EDF               	movwf	indf2,c
 22814                           
 22815                           ;api.c: 141: outBuffer[1] = 0x99;
 22816  0043CC  0100               	movlb	0	; () banked
 22817  0043CE  EE20 F001          	lfsr	2,1
 22818  0043D2  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22819  0043D4  26D9               	addwf	fsr2l,f,c
 22820  0043D6  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22821  0043D8  22DA               	addwfc	fsr2h,f,c
 22822  0043DA  0E99               	movlw	153
 22823  0043DC  6EDF               	movwf	indf2,c
 22824                           
 22825                           ;api.c: 142: }
 22826  0043DE  0012               	return	
 22827  0043E0                     l2761:
 22828                           
 22829                           ; BSR set to: 0
 22830                           
 22831                           ; BSR set to: 0
 22832  0043E0  51B6               	movf	api_prepare@command& (0+255),w,b
 22833                           
 22834                           ; Switch size 1, requested type "space"
 22835                           ; Number of cases is 7, Range of values is 0 to 32
 22836                           ; switch strategies available:
 22837                           ; Name         Instructions Cycles
 22838                           ; simple_byte           22    12 (average)
 22839                           ;	Chosen strategy is simple_byte
 22840  0043E2  0A00               	xorlw	0	; case 0
 22841  0043E4  B4D8               	btfsc	status,2,c
 22842  0043E6  0012               	return	
 22843  0043E8  0A10               	xorlw	16	; case 16
 22844  0043EA  B4D8               	btfsc	status,2,c
 22845  0043EC  D7AE               	goto	l2764
 22846  0043EE  0A01               	xorlw	1	; case 17
 22847  0043F0  B4D8               	btfsc	status,2,c
 22848  0043F2  D7B2               	goto	l2765
 22849  0043F4  0A03               	xorlw	3	; case 18
 22850  0043F6  B4D8               	btfsc	status,2,c
 22851  0043F8  D7B8               	goto	l2766
 22852  0043FA  0A01               	xorlw	1	; case 19
 22853  0043FC  B4D8               	btfsc	status,2,c
 22854  0043FE  D7BE               	goto	l2767
 22855  004400  0A06               	xorlw	6	; case 21
 22856  004402  B4D8               	btfsc	status,2,c
 22857  004404  D7C2               	goto	l2768
 22858  004406  0A35               	xorlw	53	; case 32
 22859  004408  B4D8               	btfsc	status,2,c
 22860  00440A  D7C6               	goto	l2769
 22861  00440C  D7D9               	goto	l2770
 22862  00440E                     __end_of_api_prepare:
 22863                           	opt stack 0
 22864                           tosu	equ	0xFFF
 22865                           tosh	equ	0xFFE
 22866                           tosl	equ	0xFFD
 22867                           pclath	equ	0xFFA
 22868                           tblptru	equ	0xFF8
 22869                           tblptrh	equ	0xFF7
 22870                           tblptrl	equ	0xFF6
 22871                           tablat	equ	0xFF5
 22872                           prodh	equ	0xFF4
 22873                           prodl	equ	0xFF3
 22874                           intcon	equ	0xFF2
 22875                           intcon2	equ	0xFF1
 22876                           intcon3	equ	0xFF0
 22877                           indf0	equ	0xFEF
 22878                           postinc0	equ	0xFEE
 22879                           fsr0h	equ	0xFEA
 22880                           fsr0l	equ	0xFE9
 22881                           wreg	equ	0xFE8
 22882                           indf1	equ	0xFE7
 22883                           postdec1	equ	0xFE5
 22884                           plusw1	equ	0xFE3
 22885                           fsr1h	equ	0xFE2
 22886                           fsr1l	equ	0xFE1
 22887                           indf2	equ	0xFDF
 22888                           postinc2	equ	0xFDE
 22889                           postdec2	equ	0xFDD
 22890                           plusw2	equ	0xFDB
 22891                           fsr2h	equ	0xFDA
 22892                           fsr2l	equ	0xFD9
 22893                           status	equ	0xFD8
 22894                           
 22895 ;; *************** function __fill_buffer_read_file *****************
 22896 ;; Defined at:
 22897 ;;		line 414 in file "api.c"
 22898 ;; Parameters:    Size  Location     Type
 22899 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22900 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22901 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22902 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22903 ;; Auto vars:     Size  Location     Type
 22904 ;;  start           4   78[BANK0 ] unsigned long 
 22905 ;;  data_length     4   74[BANK0 ] unsigned long 
 22906 ;;  file_size       4   70[BANK0 ] unsigned long 
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  1    wreg      void 
 22909 ;; Registers used:
 22910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22911 ;; Tracked objects:
 22912 ;;		On entry : 0/0
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22917 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22919 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22920 ;;Total ram usage:       20 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; Hardware stack levels required when called:    9
 22923 ;; This function calls:
 22924 ;;		_fat_get_file_size
 22925 ;;		_fat_read_from_file
 22926 ;; This function is called by:
 22927 ;;		_api_prepare
 22928 ;; This function uses a non-reentrant model
 22929 ;;
 22930                           
 22931                           	psect	text103
 22932  002BBC                     __ptext103:
 22933                           	opt stack 0
 22934  002BBC                     __fill_buffer_read_file:
 22935                           	opt stack 20
 22936                           
 22937                           ;api.c: 416: uint32_t start;;api.c: 417: uint32_t file_size;;api.c: 418: uint32_t data_l
      +                          ength;;api.c: 421: outBuffer[0] = DATAREQUEST_READ_FILE;
 22938                           
 22939                           ;incstack = 0
 22940  002BBC  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22941  002BC0  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22942  002BC4  0E82               	movlw	130
 22943  002BC6  6EDF               	movwf	indf2,c
 22944                           
 22945                           ;api.c: 424: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 22946  002BC8  0100               	movlb	0	; () banked
 22947  002BCA  EE20 F001          	lfsr	2,1
 22948  002BCE  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22949  002BD0  26D9               	addwf	fsr2l,f,c
 22950  002BD2  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22951  002BD4  22DA               	addwfc	fsr2h,f,c
 22952  002BD6  0EC1               	movlw	193
 22953  002BD8  6EDF               	movwf	indf2,c
 22954                           
 22955                           ; BSR set to: 0
 22956                           ;api.c: 425: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 22957  002BDA  EE20 F002          	lfsr	2,2
 22958  002BDE  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22959  002BE0  26D9               	addwf	fsr2l,f,c
 22960  002BE2  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22961  002BE4  22DA               	addwfc	fsr2h,f,c
 22962  002BE6  0E25               	movlw	37
 22963  002BE8  6EDF               	movwf	indf2,c
 22964                           
 22965                           ; BSR set to: 0
 22966                           ;api.c: 428: outBuffer[3] = inBuffer[1];
 22967  002BEA  EE20 F001          	lfsr	2,1
 22968  002BEE  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22969  002BF0  26D9               	addwf	fsr2l,f,c
 22970  002BF2  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22971  002BF4  22DA               	addwfc	fsr2h,f,c
 22972  002BF6  EE10 F003          	lfsr	1,3
 22973  002BFA  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22974  002BFC  26E1               	addwf	fsr1l,f,c
 22975  002BFE  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22976  002C00  22E2               	addwfc	fsr1h,f,c
 22977  002C02  CFDF FFE7          	movff	indf2,indf1
 22978                           
 22979                           ; BSR set to: 0
 22980                           ;api.c: 431: outBuffer[4] = inBuffer[2];
 22981  002C06  EE20 F002          	lfsr	2,2
 22982  002C0A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22983  002C0C  26D9               	addwf	fsr2l,f,c
 22984  002C0E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22985  002C10  22DA               	addwfc	fsr2h,f,c
 22986  002C12  EE10 F004          	lfsr	1,4
 22987  002C16  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22988  002C18  26E1               	addwf	fsr1l,f,c
 22989  002C1A  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22990  002C1C  22E2               	addwfc	fsr1h,f,c
 22991  002C1E  CFDF FFE7          	movff	indf2,indf1
 22992                           
 22993                           ; BSR set to: 0
 22994                           ;api.c: 432: outBuffer[5] = inBuffer[3];
 22995  002C22  EE20 F003          	lfsr	2,3
 22996  002C26  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22997  002C28  26D9               	addwf	fsr2l,f,c
 22998  002C2A  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22999  002C2C  22DA               	addwfc	fsr2h,f,c
 23000  002C2E  EE10 F005          	lfsr	1,5
 23001  002C32  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23002  002C34  26E1               	addwf	fsr1l,f,c
 23003  002C36  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23004  002C38  22E2               	addwfc	fsr1h,f,c
 23005  002C3A  CFDF FFE7          	movff	indf2,indf1
 23006                           
 23007                           ; BSR set to: 0
 23008                           ;api.c: 433: outBuffer[6] = inBuffer[4];
 23009  002C3E  EE20 F004          	lfsr	2,4
 23010  002C42  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23011  002C44  26D9               	addwf	fsr2l,f,c
 23012  002C46  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23013  002C48  22DA               	addwfc	fsr2h,f,c
 23014  002C4A  EE10 F006          	lfsr	1,6
 23015  002C4E  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23016  002C50  26E1               	addwf	fsr1l,f,c
 23017  002C52  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23018  002C54  22E2               	addwfc	fsr1h,f,c
 23019  002C56  CFDF FFE7          	movff	indf2,indf1
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;api.c: 434: outBuffer[7] = inBuffer[5];
 23023  002C5A  EE20 F005          	lfsr	2,5
 23024  002C5E  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23025  002C60  26D9               	addwf	fsr2l,f,c
 23026  002C62  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23027  002C64  22DA               	addwfc	fsr2h,f,c
 23028  002C66  EE10 F007          	lfsr	1,7
 23029  002C6A  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23030  002C6C  26E1               	addwf	fsr1l,f,c
 23031  002C6E  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23032  002C70  22E2               	addwfc	fsr1h,f,c
 23033  002C72  CFDF FFE7          	movff	indf2,indf1
 23034                           
 23035                           ; BSR set to: 0
 23036                           ;api.c: 437: start = inBuffer[2];
 23037  002C76  EE20 F002          	lfsr	2,2
 23038  002C7A  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23039  002C7C  26D9               	addwf	fsr2l,f,c
 23040  002C7E  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23041  002C80  22DA               	addwfc	fsr2h,f,c
 23042  002C82  50DF               	movf	indf2,w,c
 23043  002C84  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23044  002C86  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23045  002C88  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 23046  002C8A  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 23047  002C8C  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 23048  002C8E  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;api.c: 438: start <<= 8;
 23052  002C90  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23053  002C94  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23054  002C98  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23055  002C9C  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;api.c: 439: start |= inBuffer[3];
 23059  002C9E  EE20 F003          	lfsr	2,3
 23060  002CA2  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23061  002CA4  26D9               	addwf	fsr2l,f,c
 23062  002CA6  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23063  002CA8  22DA               	addwfc	fsr2h,f,c
 23064  002CAA  50DF               	movf	indf2,w,c
 23065  002CAC  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23066  002CAE  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23067  002CB0  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23068                           
 23069                           ; BSR set to: 0
 23070                           ;api.c: 440: start <<= 8;
 23071  002CB2  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23072  002CB6  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23073  002CBA  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23074  002CBE  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23075                           
 23076                           ; BSR set to: 0
 23077                           ;api.c: 441: start |= inBuffer[4];
 23078  002CC0  EE20 F004          	lfsr	2,4
 23079  002CC4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23080  002CC6  26D9               	addwf	fsr2l,f,c
 23081  002CC8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23082  002CCA  22DA               	addwfc	fsr2h,f,c
 23083  002CCC  50DF               	movf	indf2,w,c
 23084  002CCE  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23085  002CD0  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23086  002CD2  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23087                           
 23088                           ; BSR set to: 0
 23089                           ;api.c: 442: start <<= 8;
 23090  002CD4  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 23091  002CD8  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 23092  002CDC  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 23093  002CE0  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;api.c: 443: start |= inBuffer[5];
 23097  002CE2  EE20 F005          	lfsr	2,5
 23098  002CE6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23099  002CE8  26D9               	addwf	fsr2l,f,c
 23100  002CEA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23101  002CEC  22DA               	addwfc	fsr2h,f,c
 23102  002CEE  50DF               	movf	indf2,w,c
 23103  002CF0  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23104  002CF2  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 23105  002CF4  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 23106                           
 23107                           ; BSR set to: 0
 23108                           ;api.c: 446: file_size = fat_get_file_size(inBuffer[1]);
 23109  002CF6  EE20 F001          	lfsr	2,1
 23110  002CFA  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23111  002CFC  26D9               	addwf	fsr2l,f,c
 23112  002CFE  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23113  002D00  22DA               	addwfc	fsr2h,f,c
 23114  002D02  50DF               	movf	indf2,w,c
 23115  002D04  EC89  F045         	call	_fat_get_file_size
 23116  002D08  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 23117  002D0C  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 23118  002D10  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 23119  002D14  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 23120                           
 23121                           ;api.c: 447: data_length = file_size - start;
 23122  002D18  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 23123  002D1C  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 23124  002D20  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 23125  002D24  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 23126  002D28  0100               	movlb	0	; () banked
 23127  002D2A  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 23128  002D2C  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 23129  002D2E  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 23130  002D30  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 23131  002D32  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 23132  002D34  0E00               	movlw	0
 23133  002D36  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 23134  002D38  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 23135  002D3A  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 23136  002D3C  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 23137  002D3E  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 23138  002D40  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 23139  002D42  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 23140  002D44  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 23141  002D46  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 23142  002D48  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 23143  002D4A  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 23144  002D4C  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 23145  002D4E  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 23146  002D50  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 23147  002D52  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 23148                           
 23149                           ; BSR set to: 0
 23150                           ;api.c: 448: if(data_length>54)
 23151  002D54  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 23152  002D56  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 23153  002D58  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 23154  002D5A  E104               	bnz	u13110
 23155  002D5C  0E37               	movlw	55
 23156  002D5E  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 23157  002D60  A0D8               	btfss	status,0,c
 23158  002D62  D008               	goto	l2823
 23159  002D64                     u13110:
 23160                           
 23161                           ; BSR set to: 0
 23162                           ;api.c: 449: {;api.c: 451: data_length = 54;
 23163  002D64  0E36               	movlw	54
 23164  002D66  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 23165  002D68  0E00               	movlw	0
 23166  002D6A  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 23167  002D6C  0E00               	movlw	0
 23168  002D6E  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 23169  002D70  0E00               	movlw	0
 23170  002D72  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 23171  002D74                     l2823:
 23172                           
 23173                           ; BSR set to: 0
 23174                           ;api.c: 452: };api.c: 455: outBuffer[8] = (uint8_t) data_length;
 23175                           
 23176                           ; BSR set to: 0
 23177  002D74  EE20 F008          	lfsr	2,8
 23178  002D78  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23179  002D7A  26D9               	addwf	fsr2l,f,c
 23180  002D7C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23181  002D7E  22DA               	addwfc	fsr2h,f,c
 23182  002D80  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 23183                           
 23184                           ; BSR set to: 0
 23185                           ;api.c: 458: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 23186  002D84  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 23187  002D88  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 23188  002D8C  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 23189  002D90  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 23190  002D94  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 23191  002D98  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 23192  002D9C  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 23193  002DA0  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 23194  002DA4  0E0A               	movlw	10
 23195  002DA6  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23196  002DA8  6F76               	movwf	fat_read_from_file@data& (0+255),b
 23197  002DAA  0E00               	movlw	0
 23198  002DAC  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23199  002DAE  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 23200  002DB0  EE20 F001          	lfsr	2,1
 23201  002DB4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 23202  002DB6  26D9               	addwf	fsr2l,f,c
 23203  002DB8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 23204  002DBA  22DA               	addwfc	fsr2h,f,c
 23205  002DBC  50DF               	movf	indf2,w,c
 23206  002DBE  EC6D  F031         	call	_fat_read_from_file
 23207  002DC2  0100               	movlb	0	; () banked
 23208  002DC4  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 23209  002DC6  EE20 F009          	lfsr	2,9
 23210  002DCA  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 23211  002DCC  26D9               	addwf	fsr2l,f,c
 23212  002DCE  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 23213  002DD0  22DA               	addwfc	fsr2h,f,c
 23214  002DD2  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 23215                           
 23216                           ; BSR set to: 0
 23217  002DD6  0012               	return		;funcret
 23218  002DD8                     __end_of__fill_buffer_read_file:
 23219                           	opt stack 0
 23220                           tosu	equ	0xFFF
 23221                           tosh	equ	0xFFE
 23222                           tosl	equ	0xFFD
 23223                           pclath	equ	0xFFA
 23224                           tblptru	equ	0xFF8
 23225                           tblptrh	equ	0xFF7
 23226                           tblptrl	equ	0xFF6
 23227                           tablat	equ	0xFF5
 23228                           prodh	equ	0xFF4
 23229                           prodl	equ	0xFF3
 23230                           intcon	equ	0xFF2
 23231                           intcon2	equ	0xFF1
 23232                           intcon3	equ	0xFF0
 23233                           indf0	equ	0xFEF
 23234                           postinc0	equ	0xFEE
 23235                           fsr0h	equ	0xFEA
 23236                           fsr0l	equ	0xFE9
 23237                           wreg	equ	0xFE8
 23238                           indf1	equ	0xFE7
 23239                           postdec1	equ	0xFE5
 23240                           plusw1	equ	0xFE3
 23241                           fsr1h	equ	0xFE2
 23242                           fsr1l	equ	0xFE1
 23243                           indf2	equ	0xFDF
 23244                           postinc2	equ	0xFDE
 23245                           postdec2	equ	0xFDD
 23246                           plusw2	equ	0xFDB
 23247                           fsr2h	equ	0xFDA
 23248                           fsr2l	equ	0xFD9
 23249                           status	equ	0xFD8
 23250                           
 23251 ;; *************** function _fat_read_from_file *****************
 23252 ;; Defined at:
 23253 ;;		line 751 in file "fat16.c"
 23254 ;; Parameters:    Size  Location     Type
 23255 ;;  file_number     1    wreg     unsigned char 
 23256 ;;  start_byte      4   14[BANK0 ] unsigned long 
 23257 ;;  length          4   18[BANK0 ] unsigned long 
 23258 ;;  data            2   22[BANK0 ] PTR unsigned char 
 23259 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23260 ;; Auto vars:     Size  Location     Type
 23261 ;;  file_number     1   24[BANK0 ] unsigned char 
 23262 ;;  root           32   30[BANK0 ] struct .
 23263 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 23264 ;;  cluster         2   25[BANK0 ] unsigned int 
 23265 ;;  return_code     1   29[BANK0 ] unsigned char 
 23266 ;; Return value:  Size  Location     Type
 23267 ;;                  1    wreg      unsigned char 
 23268 ;; Registers used:
 23269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23270 ;; Tracked objects:
 23271 ;;		On entry : 0/0
 23272 ;;		On exit  : 0/0
 23273 ;;		Unchanged: 0/0
 23274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23275 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23276 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23278 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23279 ;;Total ram usage:       52 bytes
 23280 ;; Hardware stack levels used:    1
 23281 ;; Hardware stack levels required when called:    8
 23282 ;; This function calls:
 23283 ;;		_fat_get_file_information
 23284 ;;		_fat_read_from_file_fast
 23285 ;; This function is called by:
 23286 ;;		__fill_buffer_read_file
 23287 ;; This function uses a non-reentrant model
 23288 ;;
 23289                           
 23290                           	psect	text104
 23291  0062DA                     __ptext104:
 23292                           	opt stack 0
 23293  0062DA                     _fat_read_from_file:
 23294                           	opt stack 20
 23295                           
 23296                           ; BSR set to: 0
 23297                           ;incstack = 0
 23298                           ;fat_read_from_file@file_number stored from wreg
 23299  0062DA  0100               	movlb	0	; () banked
 23300  0062DC  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 23301                           
 23302                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 23303  0062DE  0E7E               	movlw	low fat_read_from_file@root
 23304  0062E0  6E30               	movwf	fat_get_file_information@data,c
 23305  0062E2  0E00               	movlw	high fat_read_from_file@root
 23306  0062E4  6E31               	movwf	fat_get_file_information@data+1,c
 23307  0062E6  0100               	movlb	0	; () banked
 23308  0062E8  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 23309  0062EA  ECE0  F044         	call	_fat_get_file_information
 23310  0062EE  0100               	movlb	0	; () banked
 23311  0062F0  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 23312                           
 23313                           ; BSR set to: 0
 23314                           ;fat16.c: 760: if(return_code!=0x00)
 23315  0062F2  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 23316  0062F4  B4D8               	btfsc	status,2,c
 23317  0062F6  D002               	goto	l2110
 23318                           
 23319                           ; BSR set to: 0
 23320                           ;fat16.c: 761: {;fat16.c: 763: return return_code;
 23321  0062F8  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 23322                           
 23323                           ; BSR set to: 0
 23324  0062FA  0012               	return	
 23325  0062FC                     l2110:
 23326                           
 23327                           ; BSR set to: 0
 23328                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 23329                           
 23330                           ; BSR set to: 0
 23331  0062FC  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 23332  0062FE  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23333  006300  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23334  006302  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23335  006304  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23336  006306  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23337  006308  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23338  00630A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23339  00630C  B0D8               	btfsc	status,0,c
 23340  00630E  D002               	goto	l2112
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;
 23344  006310  0EFF               	movlw	255
 23345                           
 23346                           ; BSR set to: 0
 23347  006312  0012               	return	
 23348  006314                     l2112:
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 23352                           
 23353                           ; BSR set to: 0
 23354  006314  5172               	movf	fat_read_from_file@length& (0+255),w,b
 23355  006316  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 23356  006318  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 23357  00631A  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 23358  00631C  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23359  00631E  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 23360  006320  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 23361  006322  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23362  006324  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 23363  006326  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 23364  006328  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23365  00632A  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 23366  00632C  505C               	movf	??_fat_read_from_file,w,c
 23367  00632E  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23368  006330  505D               	movf	??_fat_read_from_file+1,w,c
 23369  006332  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23370  006334  505E               	movf	??_fat_read_from_file+2,w,c
 23371  006336  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23372  006338  505F               	movf	??_fat_read_from_file+3,w,c
 23373  00633A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23374  00633C  B0D8               	btfsc	status,0,c
 23375  00633E  D01D               	goto	l2113
 23376                           
 23377                           ; BSR set to: 0
 23378                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 23379  006340  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 23380  006344  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 23381  006348  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 23382  00634C  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 23383  006350  1E5C               	comf	??_fat_read_from_file,f,c
 23384  006352  1E5D               	comf	??_fat_read_from_file+1,f,c
 23385  006354  1E5E               	comf	??_fat_read_from_file+2,f,c
 23386  006356  1E5F               	comf	??_fat_read_from_file+3,f,c
 23387  006358  2A5C               	incf	??_fat_read_from_file,f,c
 23388  00635A  0E00               	movlw	0
 23389  00635C  225D               	addwfc	??_fat_read_from_file+1,f,c
 23390  00635E  225E               	addwfc	??_fat_read_from_file+2,f,c
 23391  006360  225F               	addwfc	??_fat_read_from_file+3,f,c
 23392  006362  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 23393  006364  245C               	addwf	??_fat_read_from_file,w,c
 23394  006366  6F72               	movwf	fat_read_from_file@length& (0+255),b
 23395  006368  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 23396  00636A  205D               	addwfc	??_fat_read_from_file+1,w,c
 23397  00636C  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 23398  00636E  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 23399  006370  205E               	addwfc	??_fat_read_from_file+2,w,c
 23400  006372  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 23401  006374  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 23402  006376  205F               	addwfc	??_fat_read_from_file+3,w,c
 23403  006378  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 23404  00637A                     l2113:
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 23408                           
 23409                           ; BSR set to: 0
 23410  00637A  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 23411  00637E  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;fat16.c: 781: cluster_number = 0;
 23415  006382  0E00               	movlw	0
 23416  006384  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 23417  006386  0E00               	movlw	0
 23418  006388  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 23422  00638A  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 23423  00638E  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 23424  006392  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 23425  006396  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 23426  00639A  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 23427  00639E  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 23428  0063A2  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 23429  0063A6  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 23430  0063AA  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 23431  0063AE  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 23432  0063B2  0E79               	movlw	low fat_read_from_file@cluster
 23433  0063B4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 23434  0063B6  0E00               	movlw	high fat_read_from_file@cluster
 23435  0063B8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 23436  0063BA  0E7B               	movlw	low fat_read_from_file@cluster_number
 23437  0063BC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 23438  0063BE  0E00               	movlw	high fat_read_from_file@cluster_number
 23439  0063C0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 23440  0063C2  ECCB  F014         	call	_fat_read_from_file_fast	;wreg free
 23441  0063C6  0012               	return	
 23442  0063C8                     __end_of_fat_read_from_file:
 23443                           	opt stack 0
 23444                           tosu	equ	0xFFF
 23445                           tosh	equ	0xFFE
 23446                           tosl	equ	0xFFD
 23447                           pclath	equ	0xFFA
 23448                           tblptru	equ	0xFF8
 23449                           tblptrh	equ	0xFF7
 23450                           tblptrl	equ	0xFF6
 23451                           tablat	equ	0xFF5
 23452                           prodh	equ	0xFF4
 23453                           prodl	equ	0xFF3
 23454                           intcon	equ	0xFF2
 23455                           intcon2	equ	0xFF1
 23456                           intcon3	equ	0xFF0
 23457                           indf0	equ	0xFEF
 23458                           postinc0	equ	0xFEE
 23459                           fsr0h	equ	0xFEA
 23460                           fsr0l	equ	0xFE9
 23461                           wreg	equ	0xFE8
 23462                           indf1	equ	0xFE7
 23463                           postdec1	equ	0xFE5
 23464                           plusw1	equ	0xFE3
 23465                           fsr1h	equ	0xFE2
 23466                           fsr1l	equ	0xFE1
 23467                           indf2	equ	0xFDF
 23468                           postinc2	equ	0xFDE
 23469                           postdec2	equ	0xFDD
 23470                           plusw2	equ	0xFDB
 23471                           fsr2h	equ	0xFDA
 23472                           fsr2l	equ	0xFD9
 23473                           status	equ	0xFD8
 23474                           
 23475 ;; *************** function _fat_read_from_file_fast *****************
 23476 ;; Defined at:
 23477 ;;		line 787 in file "fat16.c"
 23478 ;; Parameters:    Size  Location     Type
 23479 ;;  start_byte      4   65[COMRAM] unsigned long 
 23480 ;;  length          4   69[COMRAM] unsigned long 
 23481 ;;  data            2   73[COMRAM] PTR unsigned char 
 23482 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 23483 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23484 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23485 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23486 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23487 ;; Auto vars:     Size  Location     Type
 23488 ;;  position        4   10[BANK0 ] unsigned long 
 23489 ;;  read_length     2    8[BANK0 ] unsigned int 
 23490 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23491 ;;  offset          2    4[BANK0 ] unsigned int 
 23492 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23493 ;;  sector          2    0[BANK0 ] unsigned int 
 23494 ;; Return value:  Size  Location     Type
 23495 ;;                  1    wreg      unsigned char 
 23496 ;; Registers used:
 23497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23498 ;; Tracked objects:
 23499 ;;		On entry : 0/0
 23500 ;;		On exit  : 0/0
 23501 ;;		Unchanged: 0/0
 23502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23503 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23504 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23505 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23506 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23507 ;;Total ram usage:       40 bytes
 23508 ;; Hardware stack levels used:    1
 23509 ;; Hardware stack levels required when called:    7
 23510 ;; This function calls:
 23511 ;;		__data_sector_from_cluster
 23512 ;;		__find_nth_cluster
 23513 ;;		__read_fat
 23514 ;;		_flash_partial_read
 23515 ;; This function is called by:
 23516 ;;		_fat_read_from_file
 23517 ;;		__bootloader_verify_file
 23518 ;;		__bootloader_program
 23519 ;; This function uses a non-reentrant model
 23520 ;;
 23521                           
 23522                           	psect	text105
 23523  002996                     __ptext105:
 23524                           	opt stack 0
 23525  002996                     _fat_read_from_file_fast:
 23526                           	opt stack 21
 23527                           
 23528                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23529                           
 23530                           ;incstack = 0
 23531  002996  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23532  00299A  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23533  00299E  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23534  0029A2  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23535  0029A6  0E0A               	movlw	10
 23536  0029A8  D005               	goto	u11060
 23537  0029AA                     u11065:
 23538  0029AA  90D8               	bcf	status,0,c
 23539  0029AC  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23540  0029AE  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23541  0029B0  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23542  0029B2  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23543  0029B4                     u11060:
 23544  0029B4  2EE8               	decfsz	wreg,f,c
 23545  0029B6  D7F9               	goto	u11065
 23546  0029B8  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23547  0029BC  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23548                           
 23549                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 23550  0029C0  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23551  0029C4  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23552  0029C8  50DE               	movf	postinc2,w,c
 23553  0029CA  0100               	movlb	0	; () banked
 23554  0029CC  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23555  0029CE  50DE               	movf	postinc2,w,c
 23556  0029D0  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23557  0029D2  B0D8               	btfsc	status,0,c
 23558  0029D4  D002               	goto	l2116
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 23562  0029D6  0EFF               	movlw	255
 23563                           
 23564                           ; BSR set to: 0
 23565  0029D8  0012               	return	
 23566  0029DA                     l2116:
 23567                           
 23568                           ; BSR set to: 0
 23569                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23570                           
 23571                           ; BSR set to: 0
 23572  0029DA  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23573  0029DE  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23574  0029E2  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23575  0029E6  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23576  0029EA  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23577  0029EE  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23578  0029F2  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23579  0029F6  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23580  0029FA  1E50               	comf	??_fat_read_from_file_fast,f,c
 23581  0029FC  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23582  0029FE  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23583  002A00  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23584  002A02  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23585  002A04  2450               	addwf	??_fat_read_from_file_fast,w,c
 23586  002A06  6E3A               	movwf	__find_nth_cluster@n,c
 23587  002A08  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23588  002A0A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23589  002A0C  6E3B               	movwf	__find_nth_cluster@n+1,c
 23590  002A0E  ECE2  F040         	call	__find_nth_cluster	;wreg free
 23591  002A12  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23592  002A16  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23593  002A1A  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23594  002A1E  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23595                           
 23596                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 23597  002A22  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23598  002A26  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23599  002A2A  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23600  002A2E  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23601                           
 23602                           ;fat16.c: 813: working_cluster = (*cluster);
 23603  002A32  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23604  002A36  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23605  002A3A  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23606  002A3E  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23607                           
 23608                           ;fat16.c: 816: position = (needed_cluster << 9);
 23609  002A42  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23610  002A46  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23611  002A4A  0E09               	movlw	9
 23612  002A4C                     u11085:
 23613  002A4C  90D8               	bcf	status,0,c
 23614  002A4E  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23615  002A50  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23616  002A52  2EE8               	decfsz	wreg,f,c
 23617  002A54  D7FB               	goto	u11085
 23618  002A56  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23619  002A5A  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23620  002A5E  0100               	movlb	0	; () banked
 23621  002A60  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23622  002A62  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23623                           
 23624                           ; BSR set to: 0
 23625                           ;fat16.c: 817: offset = start_byte - position;
 23626  002A64  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23627  002A68  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23628  002A6C  1E50               	comf	??_fat_read_from_file_fast,f,c
 23629  002A6E  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23630  002A70  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23631  002A72  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23632  002A74  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23633  002A76  2450               	addwf	??_fat_read_from_file_fast,w,c
 23634  002A78  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23635  002A7A  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23636  002A7C  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23637  002A7E  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;fat16.c: 820: position = 0;
 23641  002A80  0E00               	movlw	0
 23642  002A82  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23643  002A84  0E00               	movlw	0
 23644  002A86  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23645  002A88  0E00               	movlw	0
 23646  002A8A  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23647  002A8C  0E00               	movlw	0
 23648  002A8E  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23649                           
 23650                           ;fat16.c: 821: while(position < length)
 23651  002A90  D089               	goto	l2118
 23652  002A92                     
 23653                           ; BSR set to: 0
 23654                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 23655                           
 23656                           ; BSR set to: 0
 23657  002A92  0E02               	movlw	2
 23658  002A94  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23659  002A96  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23660  002A98  A4D8               	btfss	status,2,c
 23661  002A9A  D00F               	goto	l2120
 23662                           
 23663                           ; BSR set to: 0
 23664                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 23665  002A9C  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23666  002AA0  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23667  002AA4  ECC9  F049         	call	__read_fat	;wreg free
 23668  002AA8  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23669  002AAC  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23670                           
 23671                           ;fat16.c: 828: offset = 0;
 23672  002AB0  0E00               	movlw	0
 23673  002AB2  0100               	movlb	0	; () banked
 23674  002AB4  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23675  002AB6  0E00               	movlw	0
 23676  002AB8  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23677  002ABA                     l2120:
 23678                           
 23679                           ; BSR set to: 0
 23680                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 23681                           
 23682                           ; BSR set to: 0
 23683  002ABA  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23684  002ABE  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23685  002AC2  ECFA  F050         	call	__data_sector_from_cluster	;wreg free
 23686  002AC6  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23687  002ACA  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23688                           
 23689                           ;fat16.c: 835: read_length = 512 - offset;
 23690  002ACE  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23691  002AD2  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23692  002AD6  1E50               	comf	??_fat_read_from_file_fast,f,c
 23693  002AD8  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23694  002ADA  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23695  002ADC  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23696  002ADE  0E00               	movlw	0
 23697  002AE0  2450               	addwf	??_fat_read_from_file_fast,w,c
 23698  002AE2  0100               	movlb	0	; () banked
 23699  002AE4  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23700  002AE6  0E02               	movlw	2
 23701  002AE8  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23702  002AEA  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23703                           
 23704                           ; BSR set to: 0
 23705                           ;fat16.c: 836: if(read_length > (length-position))
 23706  002AEC  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23707  002AEE  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23708  002AF0  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23709  002AF2  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23710  002AF4  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23711  002AF6  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23712  002AF8  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23713  002AFC  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23714  002B00  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23715  002B04  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23716  002B08  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23717  002B0A  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23718  002B0C  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23719  002B0E  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23720  002B10  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23721  002B12  0E00               	movlw	0
 23722  002B14  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23723  002B16  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23724  002B18  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23725  002B1A  5046               	movf	fat_read_from_file_fast@length,w,c
 23726  002B1C  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23727  002B1E  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23728  002B20  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23729  002B22  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23730  002B24  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23731  002B26  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23732  002B28  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23733  002B2A  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23734  002B2C  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23735  002B2E  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23736  002B30  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23737  002B32  5050               	movf	??_fat_read_from_file_fast,w,c
 23738  002B34  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23739  002B36  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23740  002B38  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23741  002B3A  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23742  002B3C  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23743  002B3E  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23744  002B40  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23745  002B42  B0D8               	btfsc	status,0,c
 23746  002B44  D00E               	goto	l2121
 23747                           
 23748                           ; BSR set to: 0
 23749                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 23750  002B46  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23751  002B4A  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23752  002B4E  1E50               	comf	??_fat_read_from_file_fast,f,c
 23753  002B50  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23754  002B52  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23755  002B54  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23756  002B56  5046               	movf	fat_read_from_file_fast@length,w,c
 23757  002B58  2450               	addwf	??_fat_read_from_file_fast,w,c
 23758  002B5A  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23759  002B5C  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23760  002B5E  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23761  002B60  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23762  002B62                     l2121:
 23763                           
 23764                           ; BSR set to: 0
 23765                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23766                           
 23767                           ; BSR set to: 0
 23768  002B62  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23769  002B66  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23770  002B6A  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23771  002B6E  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23772  002B72  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23773  002B76  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23774  002B7A  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23775  002B7C  244A               	addwf	fat_read_from_file_fast@data,w,c
 23776  002B7E  6E2E               	movwf	flash_partial_read@data,c
 23777  002B80  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23778  002B82  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23779  002B84  6E2F               	movwf	flash_partial_read@data+1,c
 23780  002B86  ECEC  F04D         	call	_flash_partial_read	;wreg free
 23781                           
 23782                           ;fat16.c: 846: position += read_length;
 23783  002B8A  0100               	movlb	0	; () banked
 23784  002B8C  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23785  002B8E  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23786  002B90  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23787  002B92  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23788  002B94  0E00               	movlw	0
 23789  002B96  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23790  002B98  0E00               	movlw	0
 23791  002B9A  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23792                           
 23793                           ; BSR set to: 0
 23794                           ;fat16.c: 847: offset += read_length;
 23795  002B9C  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23796  002B9E  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23797  002BA0  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23798  002BA2  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23799  002BA4                     l2118:
 23800                           
 23801                           ; BSR set to: 0
 23802                           
 23803                           ; BSR set to: 0
 23804  002BA4  5046               	movf	fat_read_from_file_fast@length,w,c
 23805  002BA6  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23806  002BA8  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23807  002BAA  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23808  002BAC  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23809  002BAE  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23810  002BB0  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23811  002BB2  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23812  002BB4  A0D8               	btfss	status,0,c
 23813  002BB6  D76D               	goto	l2119
 23814                           
 23815                           ; BSR set to: 0
 23816                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 23817                           
 23818                           ; BSR set to: 0
 23819  002BB8  0E00               	movlw	0
 23820  002BBA  0012               	return	
 23821  002BBC                     __end_of_fat_read_from_file_fast:
 23822                           	opt stack 0
 23823                           tosu	equ	0xFFF
 23824                           tosh	equ	0xFFE
 23825                           tosl	equ	0xFFD
 23826                           pclath	equ	0xFFA
 23827                           tblptru	equ	0xFF8
 23828                           tblptrh	equ	0xFF7
 23829                           tblptrl	equ	0xFF6
 23830                           tablat	equ	0xFF5
 23831                           prodh	equ	0xFF4
 23832                           prodl	equ	0xFF3
 23833                           intcon	equ	0xFF2
 23834                           intcon2	equ	0xFF1
 23835                           intcon3	equ	0xFF0
 23836                           indf0	equ	0xFEF
 23837                           postinc0	equ	0xFEE
 23838                           fsr0h	equ	0xFEA
 23839                           fsr0l	equ	0xFE9
 23840                           wreg	equ	0xFE8
 23841                           indf1	equ	0xFE7
 23842                           postdec1	equ	0xFE5
 23843                           plusw1	equ	0xFE3
 23844                           fsr1h	equ	0xFE2
 23845                           fsr1l	equ	0xFE1
 23846                           indf2	equ	0xFDF
 23847                           postinc2	equ	0xFDE
 23848                           postdec2	equ	0xFDD
 23849                           plusw2	equ	0xFDB
 23850                           fsr2h	equ	0xFDA
 23851                           fsr2l	equ	0xFD9
 23852                           status	equ	0xFD8
 23853                           
 23854 ;; *************** function __fill_buffer_read_buffer *****************
 23855 ;; Defined at:
 23856 ;;		line 461 in file "api.c"
 23857 ;; Parameters:    Size  Location     Type
 23858 ;;  inBuffer        2   42[COMRAM] PTR unsigned char 
 23859 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23860 ;;  outBuffer       2   44[COMRAM] PTR unsigned char 
 23861 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;  data_length     2   50[COMRAM] unsigned int 
 23864 ;;  start           2   48[COMRAM] unsigned int 
 23865 ;; Return value:  Size  Location     Type
 23866 ;;                  1    wreg      void 
 23867 ;; Registers used:
 23868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23869 ;; Tracked objects:
 23870 ;;		On entry : 0/0
 23871 ;;		On exit  : 0/0
 23872 ;;		Unchanged: 0/0
 23873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23877 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23878 ;;Total ram usage:       10 bytes
 23879 ;; Hardware stack levels used:    1
 23880 ;; Hardware stack levels required when called:    6
 23881 ;; This function calls:
 23882 ;;		_fat_read_from_buffer
 23883 ;; This function is called by:
 23884 ;;		_api_prepare
 23885 ;; This function uses a non-reentrant model
 23886 ;;
 23887                           
 23888                           	psect	text106
 23889  0060F2                     __ptext106:
 23890                           	opt stack 0
 23891  0060F2                     __fill_buffer_read_buffer:
 23892                           	opt stack 23
 23893                           
 23894                           ;api.c: 463: uint16_t start;;api.c: 464: uint16_t data_length;;api.c: 467: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 23895                           
 23896                           ; BSR set to: 0
 23897                           ;incstack = 0
 23898  0060F2  C02D  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 23899  0060F6  C02E  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 23900  0060FA  0E83               	movlw	131
 23901  0060FC  6EDF               	movwf	indf2,c
 23902                           
 23903                           ;api.c: 470: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23904  0060FE  EE20 F001          	lfsr	2,1
 23905  006102  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23906  006104  26D9               	addwf	fsr2l,f,c
 23907  006106  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23908  006108  22DA               	addwfc	fsr2h,f,c
 23909  00610A  0EC1               	movlw	193
 23910  00610C  6EDF               	movwf	indf2,c
 23911                           
 23912                           ;api.c: 471: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23913  00610E  EE20 F002          	lfsr	2,2
 23914  006112  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23915  006114  26D9               	addwf	fsr2l,f,c
 23916  006116  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23917  006118  22DA               	addwfc	fsr2h,f,c
 23918  00611A  0E25               	movlw	37
 23919  00611C  6EDF               	movwf	indf2,c
 23920                           
 23921                           ;api.c: 474: outBuffer[3] = inBuffer[1];
 23922  00611E  EE20 F001          	lfsr	2,1
 23923  006122  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23924  006124  26D9               	addwf	fsr2l,f,c
 23925  006126  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23926  006128  22DA               	addwfc	fsr2h,f,c
 23927  00612A  EE10 F003          	lfsr	1,3
 23928  00612E  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23929  006130  26E1               	addwf	fsr1l,f,c
 23930  006132  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23931  006134  22E2               	addwfc	fsr1h,f,c
 23932  006136  CFDF FFE7          	movff	indf2,indf1
 23933                           
 23934                           ;api.c: 475: outBuffer[4] = inBuffer[2];
 23935  00613A  EE20 F002          	lfsr	2,2
 23936  00613E  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23937  006140  26D9               	addwf	fsr2l,f,c
 23938  006142  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23939  006144  22DA               	addwfc	fsr2h,f,c
 23940  006146  EE10 F004          	lfsr	1,4
 23941  00614A  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23942  00614C  26E1               	addwf	fsr1l,f,c
 23943  00614E  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23944  006150  22E2               	addwfc	fsr1h,f,c
 23945  006152  CFDF FFE7          	movff	indf2,indf1
 23946                           
 23947                           ;api.c: 478: start = inBuffer[1];
 23948  006156  EE20 F001          	lfsr	2,1
 23949  00615A  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23950  00615C  26D9               	addwf	fsr2l,f,c
 23951  00615E  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23952  006160  22DA               	addwfc	fsr2h,f,c
 23953  006162  50DF               	movf	indf2,w,c
 23954  006164  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23955  006166  502F               	movf	??__fill_buffer_read_buffer,w,c
 23956  006168  6E31               	movwf	__fill_buffer_read_buffer@start,c
 23957  00616A  6A32               	clrf	__fill_buffer_read_buffer@start+1,c
 23958                           
 23959                           ;api.c: 479: start <<= 8;
 23960  00616C  5031               	movf	__fill_buffer_read_buffer@start,w,c
 23961  00616E  6E32               	movwf	__fill_buffer_read_buffer@start+1,c
 23962  006170  6A31               	clrf	__fill_buffer_read_buffer@start,c
 23963                           
 23964                           ;api.c: 480: start |= inBuffer[2];
 23965  006172  EE20 F002          	lfsr	2,2
 23966  006176  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23967  006178  26D9               	addwf	fsr2l,f,c
 23968  00617A  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23969  00617C  22DA               	addwfc	fsr2h,f,c
 23970  00617E  50DF               	movf	indf2,w,c
 23971  006180  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23972  006182  502F               	movf	??__fill_buffer_read_buffer,w,c
 23973  006184  1231               	iorwf	__fill_buffer_read_buffer@start,f,c
 23974                           
 23975                           ;api.c: 483: data_length = 512 - start;
 23976  006186  C031  F02F         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 23977  00618A  C032  F030         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 23978  00618E  1E2F               	comf	??__fill_buffer_read_buffer,f,c
 23979  006190  1E30               	comf	??__fill_buffer_read_buffer+1,f,c
 23980  006192  4A2F               	infsnz	??__fill_buffer_read_buffer,f,c
 23981  006194  2A30               	incf	??__fill_buffer_read_buffer+1,f,c
 23982  006196  0E00               	movlw	0
 23983  006198  242F               	addwf	??__fill_buffer_read_buffer,w,c
 23984  00619A  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 23985  00619C  0E02               	movlw	2
 23986  00619E  2030               	addwfc	??__fill_buffer_read_buffer+1,w,c
 23987  0061A0  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23988                           
 23989                           ;api.c: 484: if(data_length>54)
 23990  0061A2  5034               	movf	__fill_buffer_read_buffer@data_length+1,w,c
 23991  0061A4  E104               	bnz	u13120
 23992  0061A6  0E37               	movlw	55
 23993  0061A8  5C33               	subwf	__fill_buffer_read_buffer@data_length,w,c
 23994  0061AA  A0D8               	btfss	status,0,c
 23995  0061AC  D004               	goto	l2827
 23996  0061AE                     u13120:
 23997                           
 23998                           ;api.c: 485: {;api.c: 487: data_length = 58;
 23999  0061AE  0E00               	movlw	0
 24000  0061B0  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 24001  0061B2  0E3A               	movlw	58
 24002  0061B4  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 24003  0061B6                     l2827:
 24004                           
 24005                           ;api.c: 488: };api.c: 491: outBuffer[5] = (uint8_t) data_length;
 24006  0061B6  EE20 F005          	lfsr	2,5
 24007  0061BA  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 24008  0061BC  26D9               	addwf	fsr2l,f,c
 24009  0061BE  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 24010  0061C0  22DA               	addwfc	fsr2h,f,c
 24011  0061C2  C033  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 24012                           
 24013                           ;api.c: 494: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 24014  0061C6  C031  F025         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 24015  0061CA  C032  F026         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 24016  0061CE  C033  F027         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 24017  0061D2  C034  F028         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 24018  0061D6  0E06               	movlw	6
 24019  0061D8  242D               	addwf	__fill_buffer_read_buffer@outBuffer,w,c
 24020  0061DA  6E29               	movwf	fat_read_from_buffer@data,c
 24021  0061DC  0E00               	movlw	0
 24022  0061DE  202E               	addwfc	__fill_buffer_read_buffer@outBuffer+1,w,c
 24023  0061E0  6E2A               	movwf	fat_read_from_buffer@data+1,c
 24024  0061E2  ECF8  F04F         	call	_fat_read_from_buffer	;wreg free
 24025  0061E6  0012               	return		;funcret
 24026  0061E8                     __end_of__fill_buffer_read_buffer:
 24027                           	opt stack 0
 24028                           tosu	equ	0xFFF
 24029                           tosh	equ	0xFFE
 24030                           tosl	equ	0xFFD
 24031                           pclath	equ	0xFFA
 24032                           tblptru	equ	0xFF8
 24033                           tblptrh	equ	0xFF7
 24034                           tblptrl	equ	0xFF6
 24035                           tablat	equ	0xFF5
 24036                           prodh	equ	0xFF4
 24037                           prodl	equ	0xFF3
 24038                           intcon	equ	0xFF2
 24039                           intcon2	equ	0xFF1
 24040                           intcon3	equ	0xFF0
 24041                           indf0	equ	0xFEF
 24042                           postinc0	equ	0xFEE
 24043                           fsr0h	equ	0xFEA
 24044                           fsr0l	equ	0xFE9
 24045                           wreg	equ	0xFE8
 24046                           indf1	equ	0xFE7
 24047                           postdec1	equ	0xFE5
 24048                           plusw1	equ	0xFE3
 24049                           fsr1h	equ	0xFE2
 24050                           fsr1l	equ	0xFE1
 24051                           indf2	equ	0xFDF
 24052                           postinc2	equ	0xFDE
 24053                           postdec2	equ	0xFDD
 24054                           plusw2	equ	0xFDB
 24055                           fsr2h	equ	0xFDA
 24056                           fsr2l	equ	0xFD9
 24057                           status	equ	0xFD8
 24058                           
 24059 ;; *************** function _fat_read_from_buffer *****************
 24060 ;; Defined at:
 24061 ;;		line 1498 in file "fat16.c"
 24062 ;; Parameters:    Size  Location     Type
 24063 ;;  start           2   36[COMRAM] unsigned int 
 24064 ;;  length          2   38[COMRAM] unsigned int 
 24065 ;;  data            2   40[COMRAM] PTR unsigned char 
 24066 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24067 ;; Auto vars:     Size  Location     Type
 24068 ;;		None
 24069 ;; Return value:  Size  Location     Type
 24070 ;;                  1    wreg      void 
 24071 ;; Registers used:
 24072 ;;		wreg, status,2, status,0, cstack
 24073 ;; Tracked objects:
 24074 ;;		On entry : 0/0
 24075 ;;		On exit  : 0/0
 24076 ;;		Unchanged: 0/0
 24077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24078 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24081 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24082 ;;Total ram usage:        6 bytes
 24083 ;; Hardware stack levels used:    1
 24084 ;; Hardware stack levels required when called:    5
 24085 ;; This function calls:
 24086 ;;		_flash_read_from_buffer
 24087 ;; This function is called by:
 24088 ;;		__fill_buffer_read_buffer
 24089 ;; This function uses a non-reentrant model
 24090 ;;
 24091                           
 24092                           	psect	text107
 24093  009FF0                     __ptext107:
 24094                           	opt stack 0
 24095  009FF0                     _fat_read_from_buffer:
 24096                           	opt stack 23
 24097                           
 24098                           ;fat16.c: 1500: flash_read_from_buffer(start, length, data);
 24099                           
 24100                           ;incstack = 0
 24101  009FF0  C025  F01F         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 24102  009FF4  C026  F020         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 24103  009FF8  C027  F021         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 24104  009FFC  C028  F022         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 24105  00A000  C029  F023         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 24106  00A004  C02A  F024         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 24107  00A008  EC35  F04E         	call	_flash_read_from_buffer	;wreg free
 24108  00A00C  0012               	return		;funcret
 24109  00A00E                     __end_of_fat_read_from_buffer:
 24110                           	opt stack 0
 24111                           tosu	equ	0xFFF
 24112                           tosh	equ	0xFFE
 24113                           tosl	equ	0xFFD
 24114                           pclath	equ	0xFFA
 24115                           tblptru	equ	0xFF8
 24116                           tblptrh	equ	0xFF7
 24117                           tblptrl	equ	0xFF6
 24118                           tablat	equ	0xFF5
 24119                           prodh	equ	0xFF4
 24120                           prodl	equ	0xFF3
 24121                           intcon	equ	0xFF2
 24122                           intcon2	equ	0xFF1
 24123                           intcon3	equ	0xFF0
 24124                           indf0	equ	0xFEF
 24125                           postinc0	equ	0xFEE
 24126                           fsr0h	equ	0xFEA
 24127                           fsr0l	equ	0xFE9
 24128                           wreg	equ	0xFE8
 24129                           indf1	equ	0xFE7
 24130                           postdec1	equ	0xFE5
 24131                           plusw1	equ	0xFE3
 24132                           fsr1h	equ	0xFE2
 24133                           fsr1l	equ	0xFE1
 24134                           indf2	equ	0xFDF
 24135                           postinc2	equ	0xFDE
 24136                           postdec2	equ	0xFDD
 24137                           plusw2	equ	0xFDB
 24138                           fsr2h	equ	0xFDA
 24139                           fsr2l	equ	0xFD9
 24140                           status	equ	0xFD8
 24141                           
 24142 ;; *************** function _flash_read_from_buffer *****************
 24143 ;; Defined at:
 24144 ;;		line 546 in file "flash.c"
 24145 ;; Parameters:    Size  Location     Type
 24146 ;;  start           2   30[COMRAM] unsigned int 
 24147 ;;  length          2   32[COMRAM] unsigned int 
 24148 ;;  data            2   34[COMRAM] PTR unsigned char 
 24149 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1    wreg      void 
 24154 ;; Registers used:
 24155 ;;		wreg, status,2, status,0, cstack
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/0
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24161 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24165 ;;Total ram usage:        6 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:    4
 24168 ;; This function calls:
 24169 ;;		__flash_buffer_read
 24170 ;;		_spi_set_configuration
 24171 ;; This function is called by:
 24172 ;;		_fat_read_from_buffer
 24173 ;; This function uses a non-reentrant model
 24174 ;;
 24175                           
 24176                           	psect	text108
 24177  009C6A                     __ptext108:
 24178                           	opt stack 0
 24179  009C6A                     _flash_read_from_buffer:
 24180                           	opt stack 23
 24181                           
 24182                           ;flash.c: 549: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 24183                           
 24184                           ;incstack = 0
 24185  009C6A  0E00               	movlw	0
 24186  009C6C  ECEF  F02A         	call	_spi_set_configuration
 24187                           
 24188                           ;flash.c: 551: _flash_buffer_read(start, length, data, FLASH_BUFFER_2);
 24189  009C70  C01F  F014         	movff	flash_read_from_buffer@start,__flash_buffer_read@start
 24190  009C74  C020  F015         	movff	flash_read_from_buffer@start+1,__flash_buffer_read@start+1
 24191  009C78  C021  F016         	movff	flash_read_from_buffer@length,__flash_buffer_read@length
 24192  009C7C  C022  F017         	movff	flash_read_from_buffer@length+1,__flash_buffer_read@length+1
 24193  009C80  C023  F018         	movff	flash_read_from_buffer@data,__flash_buffer_read@data
 24194  009C84  C024  F019         	movff	flash_read_from_buffer@data+1,__flash_buffer_read@data+1
 24195  009C88  0E01               	movlw	1
 24196  009C8A  6E1A               	movwf	__flash_buffer_read@buffer,c
 24197  009C8C  ECC4  F04A         	call	__flash_buffer_read	;wreg free
 24198                           
 24199                           ;flash.c: 554: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24200  009C90  0E01               	movlw	1
 24201  009C92  ECEF  F02A         	call	_spi_set_configuration
 24202  009C96  0012               	return		;funcret
 24203  009C98                     __end_of_flash_read_from_buffer:
 24204                           	opt stack 0
 24205                           tosu	equ	0xFFF
 24206                           tosh	equ	0xFFE
 24207                           tosl	equ	0xFFD
 24208                           pclath	equ	0xFFA
 24209                           tblptru	equ	0xFF8
 24210                           tblptrh	equ	0xFF7
 24211                           tblptrl	equ	0xFF6
 24212                           tablat	equ	0xFF5
 24213                           prodh	equ	0xFF4
 24214                           prodl	equ	0xFF3
 24215                           intcon	equ	0xFF2
 24216                           intcon2	equ	0xFF1
 24217                           intcon3	equ	0xFF0
 24218                           indf0	equ	0xFEF
 24219                           postinc0	equ	0xFEE
 24220                           fsr0h	equ	0xFEA
 24221                           fsr0l	equ	0xFE9
 24222                           wreg	equ	0xFE8
 24223                           indf1	equ	0xFE7
 24224                           postdec1	equ	0xFE5
 24225                           plusw1	equ	0xFE3
 24226                           fsr1h	equ	0xFE2
 24227                           fsr1l	equ	0xFE1
 24228                           indf2	equ	0xFDF
 24229                           postinc2	equ	0xFDE
 24230                           postdec2	equ	0xFDD
 24231                           plusw2	equ	0xFDB
 24232                           fsr2h	equ	0xFDA
 24233                           fsr2l	equ	0xFD9
 24234                           status	equ	0xFD8
 24235                           
 24236 ;; *************** function __flash_buffer_read *****************
 24237 ;; Defined at:
 24238 ;;		line 332 in file "flash.c"
 24239 ;; Parameters:    Size  Location     Type
 24240 ;;  start           2   19[COMRAM] unsigned int 
 24241 ;;  length          2   21[COMRAM] unsigned int 
 24242 ;;  data            2   23[COMRAM] PTR unsigned char 
 24243 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24244 ;;  buffer          1   25[COMRAM] enum E6906
 24245 ;; Auto vars:     Size  Location     Type
 24246 ;;  command         4   26[COMRAM] unsigned char [4]
 24247 ;; Return value:  Size  Location     Type
 24248 ;;                  1    wreg      void 
 24249 ;; Registers used:
 24250 ;;		wreg, status,2, status,0, cstack
 24251 ;; Tracked objects:
 24252 ;;		On entry : 0/0
 24253 ;;		On exit  : 0/0
 24254 ;;		Unchanged: 0/0
 24255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24256 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24259 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24260 ;;Total ram usage:       11 bytes
 24261 ;; Hardware stack levels used:    1
 24262 ;; Hardware stack levels required when called:    3
 24263 ;; This function calls:
 24264 ;;		__flash_is_busy
 24265 ;;		_spi_tx_rx
 24266 ;; This function is called by:
 24267 ;;		_flash_read_from_buffer
 24268 ;; This function uses a non-reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text109
 24272  009588                     __ptext109:
 24273                           	opt stack 0
 24274  009588                     __flash_buffer_read:
 24275                           	opt stack 23
 24276                           
 24277                           ;flash.c: 334: uint8_t command[4];;flash.c: 337: while(_flash_is_busy());
 24278                           
 24279                           ;incstack = 0
 24280  009588  ECD7  F04F         	call	__flash_is_busy	;wreg free
 24281  00958C  0900               	iorlw	0
 24282  00958E  A4D8               	btfss	status,2,c
 24283  009590  D7FB               	goto	__flash_buffer_read
 24284                           
 24285                           ;flash.c: 340: if(buffer==FLASH_BUFFER_1)
 24286  009592  501A               	movf	__flash_buffer_read@buffer,w,c
 24287  009594  A4D8               	btfss	status,2,c
 24288  009596  D002               	goto	l1835
 24289                           
 24290                           ;flash.c: 341: command[0] = 0xD1;
 24291  009598  0ED1               	movlw	209
 24292  00959A  6E1B               	movwf	__flash_buffer_read@command,c
 24293  00959C                     l1835:
 24294                           
 24295                           ;flash.c: 342: if(buffer==FLASH_BUFFER_2)
 24296  00959C  041A               	decf	__flash_buffer_read@buffer,w,c
 24297  00959E  A4D8               	btfss	status,2,c
 24298  0095A0  D002               	goto	l1836
 24299                           
 24300                           ;flash.c: 343: command[0] = 0xD3;
 24301  0095A2  0ED3               	movlw	211
 24302  0095A4  6E1B               	movwf	__flash_buffer_read@command,c
 24303  0095A6                     l1836:
 24304                           
 24305                           ;flash.c: 344: command[1] = 0x00;
 24306  0095A6  0E00               	movlw	0
 24307  0095A8  6E1C               	movwf	__flash_buffer_read@command+1,c
 24308                           
 24309                           ;flash.c: 345: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 24310  0095AA  5015               	movf	__flash_buffer_read@start+1,w,c
 24311  0095AC  6E1D               	movwf	__flash_buffer_read@command+2,c
 24312                           
 24313                           ;flash.c: 346: command[3] = ((unsigned char)((start)&0xFF));
 24314  0095AE  C014  F01E         	movff	__flash_buffer_read@start,__flash_buffer_read@command+3
 24315                           
 24316                           ;flash.c: 349: spi_tx_rx(command, 4, data, length);
 24317  0095B2  0E1B               	movlw	low __flash_buffer_read@command
 24318  0095B4  6E01               	movwf	spi_tx_rx@command,c
 24319  0095B6  0E00               	movlw	high __flash_buffer_read@command
 24320  0095B8  6E02               	movwf	spi_tx_rx@command+1,c
 24321  0095BA  0E00               	movlw	0
 24322  0095BC  6E04               	movwf	spi_tx_rx@command_length+1,c
 24323  0095BE  0E04               	movlw	4
 24324  0095C0  6E03               	movwf	spi_tx_rx@command_length,c
 24325  0095C2  C018  F005         	movff	__flash_buffer_read@data,spi_tx_rx@data
 24326  0095C6  C019  F006         	movff	__flash_buffer_read@data+1,spi_tx_rx@data+1
 24327  0095CA  C016  F007         	movff	__flash_buffer_read@length,spi_tx_rx@data_length
 24328  0095CE  C017  F008         	movff	__flash_buffer_read@length+1,spi_tx_rx@data_length+1
 24329  0095D2  ECC9  F041         	call	_spi_tx_rx	;wreg free
 24330  0095D6  0012               	return		;funcret
 24331  0095D8                     __end_of__flash_buffer_read:
 24332                           	opt stack 0
 24333                           tosu	equ	0xFFF
 24334                           tosh	equ	0xFFE
 24335                           tosl	equ	0xFFD
 24336                           pclath	equ	0xFFA
 24337                           tblptru	equ	0xFF8
 24338                           tblptrh	equ	0xFF7
 24339                           tblptrl	equ	0xFF6
 24340                           tablat	equ	0xFF5
 24341                           prodh	equ	0xFF4
 24342                           prodl	equ	0xFF3
 24343                           intcon	equ	0xFF2
 24344                           intcon2	equ	0xFF1
 24345                           intcon3	equ	0xFF0
 24346                           indf0	equ	0xFEF
 24347                           postinc0	equ	0xFEE
 24348                           fsr0h	equ	0xFEA
 24349                           fsr0l	equ	0xFE9
 24350                           wreg	equ	0xFE8
 24351                           indf1	equ	0xFE7
 24352                           postdec1	equ	0xFE5
 24353                           plusw1	equ	0xFE3
 24354                           fsr1h	equ	0xFE2
 24355                           fsr1l	equ	0xFE1
 24356                           indf2	equ	0xFDF
 24357                           postinc2	equ	0xFDE
 24358                           postdec2	equ	0xFDD
 24359                           plusw2	equ	0xFDB
 24360                           fsr2h	equ	0xFDA
 24361                           fsr2l	equ	0xFD9
 24362                           status	equ	0xFD8
 24363                           
 24364 ;; *************** function __fill_buffer_get_status *****************
 24365 ;; Defined at:
 24366 ;;		line 223 in file "api.c"
 24367 ;; Parameters:    Size  Location     Type
 24368 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24369 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;		None
 24372 ;; Return value:  Size  Location     Type
 24373 ;;                  1    wreg      void 
 24374 ;; Registers used:
 24375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24376 ;; Tracked objects:
 24377 ;;		On entry : 0/0
 24378 ;;		On exit  : 0/0
 24379 ;;		Unchanged: 0/0
 24380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24385 ;;Total ram usage:        2 bytes
 24386 ;; Hardware stack levels used:    1
 24387 ;; Hardware stack levels required when called:    4
 24388 ;; This function calls:
 24389 ;;		_flash_is_busy
 24390 ;;		_ui_get_status
 24391 ;; This function is called by:
 24392 ;;		_api_prepare
 24393 ;; This function uses a non-reentrant model
 24394 ;;
 24395                           
 24396                           	psect	text110
 24397  006750                     __ptext110:
 24398                           	opt stack 0
 24399  006750                     __fill_buffer_get_status:
 24400                           	opt stack 25
 24401                           
 24402                           ;api.c: 226: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24403                           
 24404                           ;incstack = 0
 24405  006750  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24406  006754  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24407  006758  0E10               	movlw	16
 24408  00675A  6EDF               	movwf	indf2,c
 24409                           
 24410                           ;api.c: 229: outBuffer[1] = 0xC125 >> 8;
 24411  00675C  EE20 F001          	lfsr	2,1
 24412  006760  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24413  006762  26D9               	addwf	fsr2l,f,c
 24414  006764  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24415  006766  22DA               	addwfc	fsr2h,f,c
 24416  006768  0EC1               	movlw	193
 24417  00676A  6EDF               	movwf	indf2,c
 24418                           
 24419                           ;api.c: 230: outBuffer[2] = (uint8_t) 0xC125;
 24420  00676C  EE20 F002          	lfsr	2,2
 24421  006770  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24422  006772  26D9               	addwf	fsr2l,f,c
 24423  006774  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24424  006776  22DA               	addwfc	fsr2h,f,c
 24425  006778  0E25               	movlw	37
 24426  00677A  6EDF               	movwf	indf2,c
 24427                           
 24428                           ;api.c: 233: outBuffer[3] = (uint8_t) flash_is_busy();
 24429  00677C  EE20 F003          	lfsr	2,3
 24430  006780  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24431  006782  26D9               	addwf	fsr2l,f,c
 24432  006784  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24433  006786  22DA               	addwfc	fsr2h,f,c
 24434  006788  EC97  F050         	call	_flash_is_busy	;wreg free
 24435  00678C  6EDF               	movwf	indf2,c
 24436                           
 24437                           ;api.c: 236: outBuffer[4] = 0x00;
 24438  00678E  EE20 F004          	lfsr	2,4
 24439  006792  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24440  006794  26D9               	addwf	fsr2l,f,c
 24441  006796  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24442  006798  22DA               	addwfc	fsr2h,f,c
 24443  00679A  0E00               	movlw	0
 24444  00679C  6EDF               	movwf	indf2,c
 24445                           
 24446                           ;api.c: 237: outBuffer[5] = 0x04;
 24447  00679E  EE20 F005          	lfsr	2,5
 24448  0067A2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24449  0067A4  26D9               	addwf	fsr2l,f,c
 24450  0067A6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24451  0067A8  22DA               	addwfc	fsr2h,f,c
 24452  0067AA  0E04               	movlw	4
 24453  0067AC  6EDF               	movwf	indf2,c
 24454                           
 24455                           ;api.c: 238: outBuffer[6] = 0x01;
 24456  0067AE  EE20 F006          	lfsr	2,6
 24457  0067B2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24458  0067B4  26D9               	addwf	fsr2l,f,c
 24459  0067B6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24460  0067B8  22DA               	addwfc	fsr2h,f,c
 24461  0067BA  0E01               	movlw	1
 24462  0067BC  6EDF               	movwf	indf2,c
 24463                           
 24464                           ;api.c: 241: outBuffer[7] = ui_get_status();
 24465  0067BE  EE20 F007          	lfsr	2,7
 24466  0067C2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24467  0067C4  26D9               	addwf	fsr2l,f,c
 24468  0067C6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24469  0067C8  22DA               	addwfc	fsr2h,f,c
 24470  0067CA  EC65  F051         	call	_ui_get_status	;wreg free
 24471  0067CE  6EDF               	movwf	indf2,c
 24472                           
 24473                           ;api.c: 244: outBuffer[8] = os.encoderCount;
 24474  0067D0  EE20 F008          	lfsr	2,8
 24475  0067D4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24476  0067D6  26D9               	addwf	fsr2l,f,c
 24477  0067D8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24478  0067DA  22DA               	addwfc	fsr2h,f,c
 24479  0067DC  C131  FFDF         	movff	_os,indf2
 24480                           
 24481                           ;api.c: 245: outBuffer[9] = os.buttonCount;
 24482  0067E0  EE20 F009          	lfsr	2,9
 24483  0067E4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24484  0067E6  26D9               	addwf	fsr2l,f,c
 24485  0067E8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24486  0067EA  22DA               	addwfc	fsr2h,f,c
 24487  0067EC  C132  FFDF         	movff	_os+1,indf2
 24488                           
 24489                           ;api.c: 246: outBuffer[10] = os.timeSlot;
 24490  0067F0  EE20 F00A          	lfsr	2,10
 24491  0067F4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24492  0067F6  26D9               	addwf	fsr2l,f,c
 24493  0067F8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24494  0067FA  22DA               	addwfc	fsr2h,f,c
 24495  0067FC  C133  FFDF         	movff	_os+2,indf2
 24496                           
 24497                           ;api.c: 247: outBuffer[11] = os.done;
 24498  006800  EE20 F00B          	lfsr	2,11
 24499  006804  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24500  006806  26D9               	addwf	fsr2l,f,c
 24501  006808  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24502  00680A  22DA               	addwfc	fsr2h,f,c
 24503  00680C  C134  FFDF         	movff	_os+3,indf2
 24504                           
 24505                           ;api.c: 248: outBuffer[12] = os.bootloader_mode;
 24506  006810  EE20 F00C          	lfsr	2,12
 24507  006814  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24508  006816  26D9               	addwf	fsr2l,f,c
 24509  006818  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24510  00681A  22DA               	addwfc	fsr2h,f,c
 24511  00681C  C135  FFDF         	movff	_os+4,indf2
 24512                           
 24513                           ;api.c: 249: outBuffer[13] = os.display_mode;
 24514  006820  EE20 F00D          	lfsr	2,13
 24515  006824  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24516  006826  26D9               	addwf	fsr2l,f,c
 24517  006828  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24518  00682A  22DA               	addwfc	fsr2h,f,c
 24519  00682C  C136  FFDF         	movff	_os+5,indf2
 24520  006830  0012               	return		;funcret
 24521  006832                     __end_of__fill_buffer_get_status:
 24522                           	opt stack 0
 24523                           tosu	equ	0xFFF
 24524                           tosh	equ	0xFFE
 24525                           tosl	equ	0xFFD
 24526                           pclath	equ	0xFFA
 24527                           tblptru	equ	0xFF8
 24528                           tblptrh	equ	0xFF7
 24529                           tblptrl	equ	0xFF6
 24530                           tablat	equ	0xFF5
 24531                           prodh	equ	0xFF4
 24532                           prodl	equ	0xFF3
 24533                           intcon	equ	0xFF2
 24534                           intcon2	equ	0xFF1
 24535                           intcon3	equ	0xFF0
 24536                           indf0	equ	0xFEF
 24537                           postinc0	equ	0xFEE
 24538                           fsr0h	equ	0xFEA
 24539                           fsr0l	equ	0xFE9
 24540                           wreg	equ	0xFE8
 24541                           indf1	equ	0xFE7
 24542                           postdec1	equ	0xFE5
 24543                           plusw1	equ	0xFE3
 24544                           fsr1h	equ	0xFE2
 24545                           fsr1l	equ	0xFE1
 24546                           indf2	equ	0xFDF
 24547                           postinc2	equ	0xFDE
 24548                           postdec2	equ	0xFDD
 24549                           plusw2	equ	0xFDB
 24550                           fsr2h	equ	0xFDA
 24551                           fsr2l	equ	0xFD9
 24552                           status	equ	0xFD8
 24553                           
 24554 ;; *************** function _flash_is_busy *****************
 24555 ;; Defined at:
 24556 ;;		line 378 in file "flash.c"
 24557 ;; Parameters:    Size  Location     Type
 24558 ;;		None
 24559 ;; Auto vars:     Size  Location     Type
 24560 ;;  result          1   19[COMRAM] unsigned char 
 24561 ;; Return value:  Size  Location     Type
 24562 ;;                  1    wreg      unsigned char 
 24563 ;; Registers used:
 24564 ;;		wreg, status,2, status,0, cstack
 24565 ;; Tracked objects:
 24566 ;;		On entry : 0/0
 24567 ;;		On exit  : 0/0
 24568 ;;		Unchanged: 0/0
 24569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24574 ;;Total ram usage:        1 bytes
 24575 ;; Hardware stack levels used:    1
 24576 ;; Hardware stack levels required when called:    3
 24577 ;; This function calls:
 24578 ;;		__flash_is_busy
 24579 ;;		_spi_set_configuration
 24580 ;; This function is called by:
 24581 ;;		__fill_buffer_get_status
 24582 ;; This function uses a non-reentrant model
 24583 ;;
 24584                           
 24585                           	psect	text111
 24586  00A12E                     __ptext111:
 24587                           	opt stack 0
 24588  00A12E                     _flash_is_busy:
 24589                           	opt stack 25
 24590                           
 24591                           ;flash.c: 380: uint8_t result;;flash.c: 383: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 24592                           
 24593                           ;incstack = 0
 24594  00A12E  0E00               	movlw	0
 24595  00A130  ECEF  F02A         	call	_spi_set_configuration
 24596                           
 24597                           ;flash.c: 386: result = _flash_is_busy();
 24598  00A134  ECD7  F04F         	call	__flash_is_busy	;wreg free
 24599  00A138  6E14               	movwf	flash_is_busy@result,c
 24600                           
 24601                           ;flash.c: 389: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24602  00A13A  0E01               	movlw	1
 24603  00A13C  ECEF  F02A         	call	_spi_set_configuration
 24604                           
 24605                           ;flash.c: 392: return result;
 24606  00A140  5014               	movf	flash_is_busy@result,w,c
 24607  00A142  0012               	return	
 24608  00A144                     __end_of_flash_is_busy:
 24609                           	opt stack 0
 24610                           tosu	equ	0xFFF
 24611                           tosh	equ	0xFFE
 24612                           tosl	equ	0xFFD
 24613                           pclath	equ	0xFFA
 24614                           tblptru	equ	0xFF8
 24615                           tblptrh	equ	0xFF7
 24616                           tblptrl	equ	0xFF6
 24617                           tablat	equ	0xFF5
 24618                           prodh	equ	0xFF4
 24619                           prodl	equ	0xFF3
 24620                           intcon	equ	0xFF2
 24621                           intcon2	equ	0xFF1
 24622                           intcon3	equ	0xFF0
 24623                           indf0	equ	0xFEF
 24624                           postinc0	equ	0xFEE
 24625                           fsr0h	equ	0xFEA
 24626                           fsr0l	equ	0xFE9
 24627                           wreg	equ	0xFE8
 24628                           indf1	equ	0xFE7
 24629                           postdec1	equ	0xFE5
 24630                           plusw1	equ	0xFE3
 24631                           fsr1h	equ	0xFE2
 24632                           fsr1l	equ	0xFE1
 24633                           indf2	equ	0xFDF
 24634                           postinc2	equ	0xFDE
 24635                           postdec2	equ	0xFDD
 24636                           plusw2	equ	0xFDB
 24637                           fsr2h	equ	0xFDA
 24638                           fsr2l	equ	0xFD9
 24639                           status	equ	0xFD8
 24640                           
 24641 ;; *************** function __fill_buffer_get_file_details *****************
 24642 ;; Defined at:
 24643 ;;		line 375 in file "api.c"
 24644 ;; Parameters:    Size  Location     Type
 24645 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 24646 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24647 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 24648 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24649 ;; Auto vars:     Size  Location     Type
 24650 ;;  file_number     1   60[COMRAM] unsigned char 
 24651 ;; Return value:  Size  Location     Type
 24652 ;;                  1    wreg      void 
 24653 ;; Registers used:
 24654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24655 ;; Tracked objects:
 24656 ;;		On entry : 0/0
 24657 ;;		On exit  : 0/0
 24658 ;;		Unchanged: 0/0
 24659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24664 ;;Total ram usage:        6 bytes
 24665 ;; Hardware stack levels used:    1
 24666 ;; Hardware stack levels required when called:    6
 24667 ;; This function calls:
 24668 ;;		_fat_get_file_information
 24669 ;; This function is called by:
 24670 ;;		_api_prepare
 24671 ;; This function uses a non-reentrant model
 24672 ;;
 24673                           
 24674                           	psect	text112
 24675  00894E                     __ptext112:
 24676                           	opt stack 0
 24677  00894E                     __fill_buffer_get_file_details:
 24678                           	opt stack 23
 24679                           
 24680                           ;api.c: 377: uint8_t file_number = inBuffer[1];
 24681                           
 24682                           ;incstack = 0
 24683  00894E  EE20 F001          	lfsr	2,1
 24684  008952  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 24685  008954  26D9               	addwf	fsr2l,f,c
 24686  008956  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 24687  008958  22DA               	addwfc	fsr2h,f,c
 24688  00895A  50DF               	movf	indf2,w,c
 24689  00895C  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 24690                           
 24691                           ;api.c: 380: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 24692  00895E  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 24693  008962  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 24694  008966  0E80               	movlw	128
 24695  008968  6EDF               	movwf	indf2,c
 24696                           
 24697                           ;api.c: 383: outBuffer[1] = 0xC125 >> 8;
 24698  00896A  EE20 F001          	lfsr	2,1
 24699  00896E  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24700  008970  26D9               	addwf	fsr2l,f,c
 24701  008972  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24702  008974  22DA               	addwfc	fsr2h,f,c
 24703  008976  0EC1               	movlw	193
 24704  008978  6EDF               	movwf	indf2,c
 24705                           
 24706                           ;api.c: 384: outBuffer[2] = (uint8_t) 0xC125;
 24707  00897A  EE20 F002          	lfsr	2,2
 24708  00897E  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24709  008980  26D9               	addwf	fsr2l,f,c
 24710  008982  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24711  008984  22DA               	addwfc	fsr2h,f,c
 24712  008986  0E25               	movlw	37
 24713  008988  6EDF               	movwf	indf2,c
 24714                           
 24715                           ;api.c: 387: outBuffer[3] = file_number;
 24716  00898A  EE20 F003          	lfsr	2,3
 24717  00898E  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24718  008990  26D9               	addwf	fsr2l,f,c
 24719  008992  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24720  008994  22DA               	addwfc	fsr2h,f,c
 24721  008996  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 24722                           
 24723                           ;api.c: 390: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 24724  00899A  0E05               	movlw	5
 24725  00899C  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 24726  00899E  6E30               	movwf	fat_get_file_information@data,c
 24727  0089A0  0E00               	movlw	0
 24728  0089A2  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 24729  0089A4  6E31               	movwf	fat_get_file_information@data+1,c
 24730  0089A6  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 24731  0089A8  ECE0  F044         	call	_fat_get_file_information
 24732  0089AC  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 24733  0089AE  EE20 F004          	lfsr	2,4
 24734  0089B2  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24735  0089B4  26D9               	addwf	fsr2l,f,c
 24736  0089B6  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24737  0089B8  22DA               	addwfc	fsr2h,f,c
 24738  0089BA  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 24739  0089BE  0012               	return		;funcret
 24740  0089C0                     __end_of__fill_buffer_get_file_details:
 24741                           	opt stack 0
 24742                           tosu	equ	0xFFF
 24743                           tosh	equ	0xFFE
 24744                           tosl	equ	0xFFD
 24745                           pclath	equ	0xFFA
 24746                           tblptru	equ	0xFF8
 24747                           tblptrh	equ	0xFF7
 24748                           tblptrl	equ	0xFF6
 24749                           tablat	equ	0xFF5
 24750                           prodh	equ	0xFF4
 24751                           prodl	equ	0xFF3
 24752                           intcon	equ	0xFF2
 24753                           intcon2	equ	0xFF1
 24754                           intcon3	equ	0xFF0
 24755                           indf0	equ	0xFEF
 24756                           postinc0	equ	0xFEE
 24757                           fsr0h	equ	0xFEA
 24758                           fsr0l	equ	0xFE9
 24759                           wreg	equ	0xFE8
 24760                           indf1	equ	0xFE7
 24761                           postdec1	equ	0xFE5
 24762                           plusw1	equ	0xFE3
 24763                           fsr1h	equ	0xFE2
 24764                           fsr1l	equ	0xFE1
 24765                           indf2	equ	0xFDF
 24766                           postinc2	equ	0xFDE
 24767                           postdec2	equ	0xFDD
 24768                           plusw2	equ	0xFDB
 24769                           fsr2h	equ	0xFDA
 24770                           fsr2l	equ	0xFD9
 24771                           status	equ	0xFD8
 24772                           
 24773 ;; *************** function __fill_buffer_get_display *****************
 24774 ;; Defined at:
 24775 ;;		line 253 in file "api.c"
 24776 ;; Parameters:    Size  Location     Type
 24777 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24778 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24779 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24780 ;; Auto vars:     Size  Location     Type
 24781 ;;  position        1   15[COMRAM] unsigned char 
 24782 ;;  start_line      1   14[COMRAM] unsigned char 
 24783 ;;  line            1   13[COMRAM] unsigned char 
 24784 ;;  cntr            1   12[COMRAM] unsigned char 
 24785 ;; Return value:  Size  Location     Type
 24786 ;;                  1    wreg      void 
 24787 ;; Registers used:
 24788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24789 ;; Tracked objects:
 24790 ;;		On entry : 0/0
 24791 ;;		On exit  : 0/0
 24792 ;;		Unchanged: 0/0
 24793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24794 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24795 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24796 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24797 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24798 ;;Total ram usage:       12 bytes
 24799 ;; Hardware stack levels used:    1
 24800 ;; Hardware stack levels required when called:    1
 24801 ;; This function calls:
 24802 ;;		_display_get_character
 24803 ;; This function is called by:
 24804 ;;		_api_prepare
 24805 ;; This function uses a non-reentrant model
 24806 ;;
 24807                           
 24808                           	psect	text113
 24809  0078A6                     __ptext113:
 24810                           	opt stack 0
 24811  0078A6                     __fill_buffer_get_display:
 24812                           	opt stack 28
 24813                           
 24814                           ;api.c: 255: uint8_t cntr;;api.c: 256: uint8_t line;;api.c: 257: uint8_t start_line;;api
      +                          .c: 258: uint8_t position;;api.c: 261: if(secondHalf)
 24815                           
 24816                           ;incstack = 0
 24817  0078A6  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24818  0078A8  B4D8               	btfsc	status,2,c
 24819  0078AA  D006               	goto	l2793
 24820                           
 24821                           ;api.c: 262: {;api.c: 263: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24822  0078AC  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24823  0078B0  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24824  0078B4  0E12               	movlw	18
 24825  0078B6  D005               	goto	L31
 24826  0078B8                     l2793:
 24827                           
 24828                           ;api.c: 265: else;api.c: 266: {;api.c: 267: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24829  0078B8  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24830  0078BC  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24831  0078C0  0E11               	movlw	17
 24832  0078C2                     L31:
 24833  0078C2  6EDF               	movwf	indf2,c
 24834                           
 24835                           ;api.c: 268: };api.c: 271: outBuffer[1] = 0xC125 >> 8;
 24836  0078C4  EE20 F001          	lfsr	2,1
 24837  0078C8  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24838  0078CA  26D9               	addwf	fsr2l,f,c
 24839  0078CC  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24840  0078CE  22DA               	addwfc	fsr2h,f,c
 24841  0078D0  0EC1               	movlw	193
 24842  0078D2  6EDF               	movwf	indf2,c
 24843                           
 24844                           ;api.c: 272: outBuffer[2] = (uint8_t) 0xC125;
 24845  0078D4  EE20 F002          	lfsr	2,2
 24846  0078D8  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24847  0078DA  26D9               	addwf	fsr2l,f,c
 24848  0078DC  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24849  0078DE  22DA               	addwfc	fsr2h,f,c
 24850  0078E0  0E25               	movlw	37
 24851  0078E2  6EDF               	movwf	indf2,c
 24852                           
 24853                           ;api.c: 275: cntr = 3;
 24854  0078E4  0E03               	movlw	3
 24855  0078E6  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24856                           
 24857                           ;api.c: 276: if(secondHalf)
 24858  0078E8  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24859  0078EA  B4D8               	btfsc	status,2,c
 24860  0078EC  D002               	goto	l2795
 24861                           
 24862                           ;api.c: 277: {;api.c: 278: start_line = 2;
 24863  0078EE  0E02               	movlw	2
 24864  0078F0  D001               	goto	L32
 24865  0078F2                     l2795:
 24866                           
 24867                           ;api.c: 280: else;api.c: 281: {;api.c: 282: start_line = 0;
 24868  0078F2  0E00               	movlw	0
 24869  0078F4                     L32:
 24870  0078F4  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24871                           
 24872                           ;api.c: 283: };api.c: 284: for(line=start_line; line<start_line+2; ++line)
 24873  0078F6  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24874  0078FA  D01A               	goto	l2797
 24875  0078FC                     
 24876                           ;api.c: 285: {;api.c: 286: for(position=0; position<20; ++position)
 24877  0078FC  0E00               	movlw	0
 24878  0078FE  6E10               	movwf	__fill_buffer_get_display@position,c
 24879  007900                     l15562:
 24880  007900  0E13               	movlw	19
 24881  007902  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24882  007904  D001               	goto	l2799
 24883  007906  D013               	goto	u13160
 24884  007908                     l2799:
 24885                           
 24886                           ;api.c: 287: {;api.c: 288: outBuffer[cntr] = display_get_character(line, position);
 24887  007908  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24888  00790C  500E               	movf	__fill_buffer_get_display@line,w,c
 24889  00790E  ECD1  F04E         	call	_display_get_character
 24890  007912  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24891  007914  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24892  007916  0D01               	mullw	1
 24893  007918  50F3               	movf	prodl,w,c
 24894  00791A  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24895  00791C  6ED9               	movwf	fsr2l,c
 24896  00791E  50F4               	movf	prodh,w,c
 24897  007920  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24898  007922  6EDA               	movwf	fsr2h,c
 24899  007924  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24900                           
 24901                           ;api.c: 289: ++cntr;
 24902  007928  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24903  00792A  2A10               	incf	__fill_buffer_get_display@position,f,c
 24904  00792C  D7E9               	goto	l15562
 24905  00792E                     u13160:
 24906  00792E  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24907  007930                     l2797:
 24908  007930  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24909  007932  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24910  007934  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24911  007936  0E02               	movlw	2
 24912  007938  2608               	addwf	??__fill_buffer_get_display,f,c
 24913  00793A  0E00               	movlw	0
 24914  00793C  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24915  00793E  500E               	movf	__fill_buffer_get_display@line,w,c
 24916  007940  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24917  007942  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24918  007944  5008               	movf	??__fill_buffer_get_display,w,c
 24919  007946  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24920  007948  500B               	movf	??__fill_buffer_get_display+3,w,c
 24921  00794A  0A80               	xorlw	128
 24922  00794C  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24923  00794E  5009               	movf	??__fill_buffer_get_display+1,w,c
 24924  007950  0A80               	xorlw	128
 24925  007952  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24926  007954  B0D8               	btfsc	status,0,c
 24927  007956  0012               	return	
 24928  007958  D7D1               	goto	l2798
 24929  00795A                     __end_of__fill_buffer_get_display:
 24930                           	opt stack 0
 24931                           tosu	equ	0xFFF
 24932                           tosh	equ	0xFFE
 24933                           tosl	equ	0xFFD
 24934                           pclath	equ	0xFFA
 24935                           tblptru	equ	0xFF8
 24936                           tblptrh	equ	0xFF7
 24937                           tblptrl	equ	0xFF6
 24938                           tablat	equ	0xFF5
 24939                           prodh	equ	0xFF4
 24940                           prodl	equ	0xFF3
 24941                           intcon	equ	0xFF2
 24942                           intcon2	equ	0xFF1
 24943                           intcon3	equ	0xFF0
 24944                           indf0	equ	0xFEF
 24945                           postinc0	equ	0xFEE
 24946                           fsr0h	equ	0xFEA
 24947                           fsr0l	equ	0xFE9
 24948                           wreg	equ	0xFE8
 24949                           indf1	equ	0xFE7
 24950                           postdec1	equ	0xFE5
 24951                           plusw1	equ	0xFE3
 24952                           fsr1h	equ	0xFE2
 24953                           fsr1l	equ	0xFE1
 24954                           indf2	equ	0xFDF
 24955                           postinc2	equ	0xFDE
 24956                           postdec2	equ	0xFDD
 24957                           plusw2	equ	0xFDB
 24958                           fsr2h	equ	0xFDA
 24959                           fsr2l	equ	0xFD9
 24960                           status	equ	0xFD8
 24961                           
 24962 ;; *************** function _display_get_character *****************
 24963 ;; Defined at:
 24964 ;;		line 76 in file "display.c"
 24965 ;; Parameters:    Size  Location     Type
 24966 ;;  line            1    wreg     unsigned char 
 24967 ;;  position        1    0[COMRAM] unsigned char 
 24968 ;; Auto vars:     Size  Location     Type
 24969 ;;  line            1    3[COMRAM] unsigned char 
 24970 ;; Return value:  Size  Location     Type
 24971 ;;                  1    wreg      unsigned char 
 24972 ;; Registers used:
 24973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24974 ;; Tracked objects:
 24975 ;;		On entry : 0/0
 24976 ;;		On exit  : 0/0
 24977 ;;		Unchanged: 0/0
 24978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24979 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24983 ;;Total ram usage:        4 bytes
 24984 ;; Hardware stack levels used:    1
 24985 ;; This function calls:
 24986 ;;		Nothing
 24987 ;; This function is called by:
 24988 ;;		__fill_buffer_get_display
 24989 ;; This function uses a non-reentrant model
 24990 ;;
 24991                           
 24992                           	psect	text114
 24993  009DA2                     __ptext114:
 24994                           	opt stack 0
 24995  009DA2                     _display_get_character:
 24996                           	opt stack 28
 24997                           
 24998                           ;incstack = 0
 24999                           ;display_get_character@line stored from wreg
 25000  009DA2  6E04               	movwf	display_get_character@line,c
 25001                           
 25002                           ;display.c: 78: return display_content[line][position];
 25003  009DA4  5004               	movf	display_get_character@line,w,c
 25004  009DA6  0D14               	mullw	20
 25005  009DA8  0E00               	movlw	low _display_content
 25006  009DAA  6E02               	movwf	??_display_get_character& (0+255),c
 25007  009DAC  0E02               	movlw	high _display_content
 25008  009DAE  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25009  009DB0  50F3               	movf	prodl,w,c
 25010  009DB2  2602               	addwf	??_display_get_character,f,c
 25011  009DB4  50F4               	movf	prodh,w,c
 25012  009DB6  2203               	addwfc	??_display_get_character+1,f,c
 25013  009DB8  5001               	movf	display_get_character@position,w,c
 25014  009DBA  0D01               	mullw	1
 25015  009DBC  50F3               	movf	prodl,w,c
 25016  009DBE  2402               	addwf	??_display_get_character,w,c
 25017  009DC0  6ED9               	movwf	fsr2l,c
 25018  009DC2  50F4               	movf	prodh,w,c
 25019  009DC4  2003               	addwfc	??_display_get_character+1,w,c
 25020  009DC6  6EDA               	movwf	fsr2h,c
 25021  009DC8  50DF               	movf	indf2,w,c
 25022  009DCA  0012               	return	
 25023  009DCC                     __end_of_display_get_character:
 25024                           	opt stack 0
 25025                           tosu	equ	0xFFF
 25026                           tosh	equ	0xFFE
 25027                           tosl	equ	0xFFD
 25028                           pclath	equ	0xFFA
 25029                           tblptru	equ	0xFF8
 25030                           tblptrh	equ	0xFF7
 25031                           tblptrl	equ	0xFF6
 25032                           tablat	equ	0xFF5
 25033                           prodh	equ	0xFF4
 25034                           prodl	equ	0xFF3
 25035                           intcon	equ	0xFF2
 25036                           intcon2	equ	0xFF1
 25037                           intcon3	equ	0xFF0
 25038                           indf0	equ	0xFEF
 25039                           postinc0	equ	0xFEE
 25040                           fsr0h	equ	0xFEA
 25041                           fsr0l	equ	0xFE9
 25042                           wreg	equ	0xFE8
 25043                           indf1	equ	0xFE7
 25044                           postdec1	equ	0xFE5
 25045                           plusw1	equ	0xFE3
 25046                           fsr1h	equ	0xFE2
 25047                           fsr1l	equ	0xFE1
 25048                           indf2	equ	0xFDF
 25049                           postinc2	equ	0xFDE
 25050                           postdec2	equ	0xFDD
 25051                           plusw2	equ	0xFDB
 25052                           fsr2h	equ	0xFDA
 25053                           fsr2l	equ	0xFD9
 25054                           status	equ	0xFD8
 25055                           
 25056 ;; *************** function __fill_buffer_get_configuration *****************
 25057 ;; Defined at:
 25058 ;;		line 354 in file "api.c"
 25059 ;; Parameters:    Size  Location     Type
 25060 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 25061 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25062 ;; Auto vars:     Size  Location     Type
 25063 ;;		None
 25064 ;; Return value:  Size  Location     Type
 25065 ;;                  1    wreg      void 
 25066 ;; Registers used:
 25067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25068 ;; Tracked objects:
 25069 ;;		On entry : 0/0
 25070 ;;		On exit  : 0/0
 25071 ;;		Unchanged: 0/0
 25072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25077 ;;Total ram usage:        2 bytes
 25078 ;; Hardware stack levels used:    1
 25079 ;; This function calls:
 25080 ;;		Nothing
 25081 ;; This function is called by:
 25082 ;;		_api_prepare
 25083 ;; This function uses a non-reentrant model
 25084 ;;
 25085                           
 25086                           	psect	text115
 25087  008088                     __ptext115:
 25088                           	opt stack 0
 25089  008088                     __fill_buffer_get_configuration:
 25090                           	opt stack 29
 25091                           
 25092                           ;api.c: 357: outBuffer[0] = DATAREQUEST_GET_CONFIGURATION;
 25093                           
 25094                           ;incstack = 0
 25095  008088  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 25096  00808C  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 25097  008090  0E15               	movlw	21
 25098  008092  6EDF               	movwf	indf2,c
 25099                           
 25100                           ;api.c: 360: outBuffer[1] = 0xC125 >> 8;
 25101  008094  EE20 F001          	lfsr	2,1
 25102  008098  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25103  00809A  26D9               	addwf	fsr2l,f,c
 25104  00809C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25105  00809E  22DA               	addwfc	fsr2h,f,c
 25106  0080A0  0EC1               	movlw	193
 25107  0080A2  6EDF               	movwf	indf2,c
 25108                           
 25109                           ;api.c: 361: outBuffer[2] = (uint8_t) 0xC125;
 25110  0080A4  EE20 F002          	lfsr	2,2
 25111  0080A8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25112  0080AA  26D9               	addwf	fsr2l,f,c
 25113  0080AC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25114  0080AE  22DA               	addwfc	fsr2h,f,c
 25115  0080B0  0E25               	movlw	37
 25116  0080B2  6EDF               	movwf	indf2,c
 25117                           
 25118                           ;api.c: 364: outBuffer[3] = os.communicationSettings.spiMode;
 25119  0080B4  EE20 F003          	lfsr	2,3
 25120  0080B8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25121  0080BA  26D9               	addwf	fsr2l,f,c
 25122  0080BC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25123  0080BE  22DA               	addwfc	fsr2h,f,c
 25124  0080C0  C137  FFDF         	movff	_os+6,indf2
 25125                           
 25126                           ;api.c: 365: outBuffer[4] = os.communicationSettings.spiFrequency;
 25127  0080C4  EE20 F004          	lfsr	2,4
 25128  0080C8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25129  0080CA  26D9               	addwf	fsr2l,f,c
 25130  0080CC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25131  0080CE  22DA               	addwfc	fsr2h,f,c
 25132  0080D0  C138  FFDF         	movff	_os+7,indf2
 25133                           
 25134                           ;api.c: 366: outBuffer[5] = os.communicationSettings.spiPolarity;
 25135  0080D4  EE20 F005          	lfsr	2,5
 25136  0080D8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25137  0080DA  26D9               	addwf	fsr2l,f,c
 25138  0080DC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25139  0080DE  22DA               	addwfc	fsr2h,f,c
 25140  0080E0  C139  FFDF         	movff	_os+8,indf2
 25141                           
 25142                           ;api.c: 369: outBuffer[6] = os.communicationSettings.i2cMode;
 25143  0080E4  EE20 F006          	lfsr	2,6
 25144  0080E8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25145  0080EA  26D9               	addwf	fsr2l,f,c
 25146  0080EC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25147  0080EE  22DA               	addwfc	fsr2h,f,c
 25148  0080F0  C13A  FFDF         	movff	_os+9,indf2
 25149                           
 25150                           ;api.c: 370: outBuffer[7] = os.communicationSettings.i2cFrequency;
 25151  0080F4  EE20 F007          	lfsr	2,7
 25152  0080F8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25153  0080FA  26D9               	addwf	fsr2l,f,c
 25154  0080FC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25155  0080FE  22DA               	addwfc	fsr2h,f,c
 25156  008100  C13B  FFDF         	movff	_os+10,indf2
 25157                           
 25158                           ;api.c: 371: outBuffer[8] = os.communicationSettings.i2cSlaveModeSlaveAddress;
 25159  008104  EE20 F008          	lfsr	2,8
 25160  008108  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25161  00810A  26D9               	addwf	fsr2l,f,c
 25162  00810C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25163  00810E  22DA               	addwfc	fsr2h,f,c
 25164  008110  C13C  FFDF         	movff	_os+11,indf2
 25165                           
 25166                           ;api.c: 372: outBuffer[9] = os.communicationSettings.i2cMasterModeSlaveAddress;
 25167  008114  EE20 F009          	lfsr	2,9
 25168  008118  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25169  00811A  26D9               	addwf	fsr2l,f,c
 25170  00811C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25171  00811E  22DA               	addwfc	fsr2h,f,c
 25172  008120  C13D  FFDF         	movff	_os+12,indf2
 25173  008124  0012               	return		;funcret
 25174  008126                     __end_of__fill_buffer_get_configuration:
 25175                           	opt stack 0
 25176                           tosu	equ	0xFFF
 25177                           tosh	equ	0xFFE
 25178                           tosl	equ	0xFFD
 25179                           pclath	equ	0xFFA
 25180                           tblptru	equ	0xFF8
 25181                           tblptrh	equ	0xFF7
 25182                           tblptrl	equ	0xFF6
 25183                           tablat	equ	0xFF5
 25184                           prodh	equ	0xFF4
 25185                           prodl	equ	0xFF3
 25186                           intcon	equ	0xFF2
 25187                           intcon2	equ	0xFF1
 25188                           intcon3	equ	0xFF0
 25189                           indf0	equ	0xFEF
 25190                           postinc0	equ	0xFEE
 25191                           fsr0h	equ	0xFEA
 25192                           fsr0l	equ	0xFE9
 25193                           wreg	equ	0xFE8
 25194                           indf1	equ	0xFE7
 25195                           postdec1	equ	0xFE5
 25196                           plusw1	equ	0xFE3
 25197                           fsr1h	equ	0xFE2
 25198                           fsr1l	equ	0xFE1
 25199                           indf2	equ	0xFDF
 25200                           postinc2	equ	0xFDE
 25201                           postdec2	equ	0xFDD
 25202                           plusw2	equ	0xFDB
 25203                           fsr2h	equ	0xFDA
 25204                           fsr2l	equ	0xFD9
 25205                           status	equ	0xFD8
 25206                           
 25207 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25208 ;; Defined at:
 25209 ;;		line 294 in file "api.c"
 25210 ;; Parameters:    Size  Location     Type
 25211 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25212 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25213 ;; Auto vars:     Size  Location     Type
 25214 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25215 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25216 ;;  cntr            1   10[COMRAM] unsigned char 
 25217 ;;  data_length     1    9[COMRAM] unsigned char 
 25218 ;; Return value:  Size  Location     Type
 25219 ;;                  1    wreg      void 
 25220 ;; Registers used:
 25221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25222 ;; Tracked objects:
 25223 ;;		On entry : 0/0
 25224 ;;		On exit  : 0/0
 25225 ;;		Unchanged: 0/0
 25226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25228 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25229 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25230 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25231 ;;Total ram usage:       13 bytes
 25232 ;; Hardware stack levels used:    1
 25233 ;; Hardware stack levels required when called:    1
 25234 ;; This function calls:
 25235 ;;		_bootloader_get_entries
 25236 ;;		_bootloader_get_error
 25237 ;;		_bootloader_get_file_size
 25238 ;;		_bootloader_get_flashPagesWritten
 25239 ;;		_bootloader_get_rec_address
 25240 ;;		_bootloader_get_rec_checksum
 25241 ;;		_bootloader_get_rec_checksumCheck
 25242 ;;		_bootloader_get_rec_data
 25243 ;;		_bootloader_get_rec_dataLength
 25244 ;;		_bootloader_get_rec_recordType
 25245 ;;		_bootloader_get_total_entries
 25246 ;; This function is called by:
 25247 ;;		_api_prepare
 25248 ;; This function uses a non-reentrant model
 25249 ;;
 25250                           
 25251                           	psect	text116
 25252  0031DC                     __ptext116:
 25253                           	opt stack 0
 25254  0031DC                     __fill_buffer_get_bootloader_details:
 25255                           	opt stack 28
 25256                           
 25257                           ;api.c: 296: uint8_t cntr;;api.c: 297: uint8_t data_length;;api.c: 298: uint16_t buffer_
      +                          small;;api.c: 299: uint32_t buffer_large;;api.c: 302: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25258                           
 25259                           ;incstack = 0
 25260  0031DC  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25261  0031E0  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25262  0031E4  0E13               	movlw	19
 25263  0031E6  6EDF               	movwf	indf2,c
 25264                           
 25265                           ;api.c: 305: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25266  0031E8  EE20 F001          	lfsr	2,1
 25267  0031EC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25268  0031EE  26D9               	addwf	fsr2l,f,c
 25269  0031F0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25270  0031F2  22DA               	addwfc	fsr2h,f,c
 25271  0031F4  0EC1               	movlw	193
 25272  0031F6  6EDF               	movwf	indf2,c
 25273                           
 25274                           ;api.c: 306: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25275  0031F8  EE20 F002          	lfsr	2,2
 25276  0031FC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25277  0031FE  26D9               	addwf	fsr2l,f,c
 25278  003200  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25279  003202  22DA               	addwfc	fsr2h,f,c
 25280  003204  0E25               	movlw	37
 25281  003206  6EDF               	movwf	indf2,c
 25282                           
 25283                           ;api.c: 309: buffer_large = bootloader_get_file_size();
 25284  003208  ECCA  F050         	call	_bootloader_get_file_size	;wreg free
 25285  00320C  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25286  003210  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25287  003214  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25288  003218  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25289                           
 25290                           ;api.c: 310: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25291  00321C  EE20 F003          	lfsr	2,3
 25292  003220  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25293  003222  26D9               	addwf	fsr2l,f,c
 25294  003224  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25295  003226  22DA               	addwfc	fsr2h,f,c
 25296  003228  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25297  00322A  6EDF               	movwf	indf2,c
 25298                           
 25299                           ;api.c: 311: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25300  00322C  EE20 F004          	lfsr	2,4
 25301  003230  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25302  003232  26D9               	addwf	fsr2l,f,c
 25303  003234  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25304  003236  22DA               	addwfc	fsr2h,f,c
 25305  003238  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25306                           
 25307                           ;api.c: 312: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25308  00323C  EE20 F005          	lfsr	2,5
 25309  003240  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25310  003242  26D9               	addwf	fsr2l,f,c
 25311  003244  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25312  003246  22DA               	addwfc	fsr2h,f,c
 25313  003248  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25314  00324A  6EDF               	movwf	indf2,c
 25315                           
 25316                           ;api.c: 313: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25317  00324C  EE20 F006          	lfsr	2,6
 25318  003250  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25319  003252  26D9               	addwf	fsr2l,f,c
 25320  003254  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25321  003256  22DA               	addwfc	fsr2h,f,c
 25322  003258  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25323                           
 25324                           ;api.c: 315: buffer_small = bootloader_get_entries();
 25325  00325C  EC34  F051         	call	_bootloader_get_entries	;wreg free
 25326  003260  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25327  003264  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25328                           
 25329                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25330  003268  EE20 F007          	lfsr	2,7
 25331  00326C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25332  00326E  26D9               	addwf	fsr2l,f,c
 25333  003270  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25334  003272  22DA               	addwfc	fsr2h,f,c
 25335  003274  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25336  003276  6EDF               	movwf	indf2,c
 25337                           
 25338                           ;api.c: 317: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25339  003278  EE20 F008          	lfsr	2,8
 25340  00327C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25341  00327E  26D9               	addwf	fsr2l,f,c
 25342  003280  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25343  003282  22DA               	addwfc	fsr2h,f,c
 25344  003284  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25345                           
 25346                           ;api.c: 319: buffer_small = bootloader_get_total_entries();
 25347  003288  EC3E  F051         	call	_bootloader_get_total_entries	;wreg free
 25348  00328C  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25349  003290  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25350                           
 25351                           ;api.c: 320: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25352  003294  EE20 F009          	lfsr	2,9
 25353  003298  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25354  00329A  26D9               	addwf	fsr2l,f,c
 25355  00329C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25356  00329E  22DA               	addwfc	fsr2h,f,c
 25357  0032A0  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25358  0032A2  6EDF               	movwf	indf2,c
 25359                           
 25360                           ;api.c: 321: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25361  0032A4  EE20 F00A          	lfsr	2,10
 25362  0032A8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25363  0032AA  26D9               	addwf	fsr2l,f,c
 25364  0032AC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25365  0032AE  22DA               	addwfc	fsr2h,f,c
 25366  0032B0  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25367                           
 25368                           ;api.c: 323: outBuffer[11] = (uint8_t) bootloader_get_error();
 25369  0032B4  EE20 F00B          	lfsr	2,11
 25370  0032B8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25371  0032BA  26D9               	addwf	fsr2l,f,c
 25372  0032BC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25373  0032BE  22DA               	addwfc	fsr2h,f,c
 25374  0032C0  EC68  F051         	call	_bootloader_get_error	;wreg free
 25375  0032C4  6EDF               	movwf	indf2,c
 25376                           
 25377                           ;api.c: 325: buffer_small = bootloader_get_flashPagesWritten();
 25378  0032C6  EC39  F051         	call	_bootloader_get_flashPagesWritten	;wreg free
 25379  0032CA  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25380  0032CE  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25381                           
 25382                           ;api.c: 326: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25383  0032D2  EE20 F00C          	lfsr	2,12
 25384  0032D6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25385  0032D8  26D9               	addwf	fsr2l,f,c
 25386  0032DA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25387  0032DC  22DA               	addwfc	fsr2h,f,c
 25388  0032DE  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25389  0032E0  6EDF               	movwf	indf2,c
 25390                           
 25391                           ;api.c: 327: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25392  0032E2  EE20 F00D          	lfsr	2,13
 25393  0032E6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25394  0032E8  26D9               	addwf	fsr2l,f,c
 25395  0032EA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25396  0032EC  22DA               	addwfc	fsr2h,f,c
 25397  0032EE  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25398                           
 25399                           ;api.c: 330: buffer_small = bootloader_get_rec_dataLength();
 25400  0032F2  EC2A  F051         	call	_bootloader_get_rec_dataLength	;wreg free
 25401  0032F6  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25402  0032FA  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25403                           
 25404                           ;api.c: 331: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25405  0032FE  EE20 F00E          	lfsr	2,14
 25406  003302  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25407  003304  26D9               	addwf	fsr2l,f,c
 25408  003306  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25409  003308  22DA               	addwfc	fsr2h,f,c
 25410  00330A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25411  00330C  6EDF               	movwf	indf2,c
 25412                           
 25413                           ;api.c: 332: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25414  00330E  EE20 F00F          	lfsr	2,15
 25415  003312  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25416  003314  26D9               	addwf	fsr2l,f,c
 25417  003316  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25418  003318  22DA               	addwfc	fsr2h,f,c
 25419  00331A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25420                           
 25421                           ;api.c: 334: buffer_small = bootloader_get_rec_address();
 25422  00331E  EC2F  F051         	call	_bootloader_get_rec_address	;wreg free
 25423  003322  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25424  003326  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25425                           
 25426                           ;api.c: 335: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25427  00332A  EE20 F010          	lfsr	2,16
 25428  00332E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25429  003330  26D9               	addwf	fsr2l,f,c
 25430  003332  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25431  003334  22DA               	addwfc	fsr2h,f,c
 25432  003336  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25433  003338  6EDF               	movwf	indf2,c
 25434                           
 25435                           ;api.c: 336: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25436  00333A  EE20 F011          	lfsr	2,17
 25437  00333E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25438  003340  26D9               	addwf	fsr2l,f,c
 25439  003342  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25440  003344  22DA               	addwfc	fsr2h,f,c
 25441  003346  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25442                           
 25443                           ;api.c: 338: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25444  00334A  EE20 F012          	lfsr	2,18
 25445  00334E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25446  003350  26D9               	addwf	fsr2l,f,c
 25447  003352  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25448  003354  22DA               	addwfc	fsr2h,f,c
 25449  003356  EC5C  F051         	call	_bootloader_get_rec_recordType	;wreg free
 25450  00335A  6EDF               	movwf	indf2,c
 25451                           
 25452                           ;api.c: 339: outBuffer[19] = bootloader_get_rec_checksum();
 25453  00335C  EE20 F013          	lfsr	2,19
 25454  003360  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25455  003362  26D9               	addwf	fsr2l,f,c
 25456  003364  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25457  003366  22DA               	addwfc	fsr2h,f,c
 25458  003368  EC62  F051         	call	_bootloader_get_rec_checksum	;wreg free
 25459  00336C  6EDF               	movwf	indf2,c
 25460                           
 25461                           ;api.c: 340: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25462  00336E  EE20 F014          	lfsr	2,20
 25463  003372  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25464  003374  26D9               	addwf	fsr2l,f,c
 25465  003376  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25466  003378  22DA               	addwfc	fsr2h,f,c
 25467  00337A  EC5F  F051         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25468  00337E  6EDF               	movwf	indf2,c
 25469                           
 25470                           ;api.c: 342: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25471  003380  EC2A  F051         	call	_bootloader_get_rec_dataLength	;wreg free
 25472  003384  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25473  003386  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25474                           
 25475                           ;api.c: 343: if(data_length>43)
 25476  003388  0E2B               	movlw	43
 25477  00338A  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25478  00338C  D002               	goto	l2805
 25479                           
 25480                           ;api.c: 344: {;api.c: 346: data_length = 43;
 25481  00338E  0E2B               	movlw	43
 25482  003390  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25483  003392                     l2805:
 25484                           
 25485                           ;api.c: 347: };api.c: 348: for(cntr=0; cntr<data_length; ++cntr)
 25486  003392  0E00               	movlw	0
 25487  003394  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25488  003396  D014               	goto	l2806
 25489  003398                     
 25490                           ;api.c: 349: {;api.c: 350: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25491  003398  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25492  00339A  ECA2  F050         	call	_bootloader_get_rec_data
 25493  00339E  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25494  0033A0  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25495  0033A2  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25496  0033A4  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25497  0033A6  0E15               	movlw	21
 25498  0033A8  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25499  0033AA  0E00               	movlw	0
 25500  0033AC  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25501  0033AE  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25502  0033B0  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25503  0033B2  6ED9               	movwf	fsr2l,c
 25504  0033B4  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25505  0033B6  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25506  0033B8  6EDA               	movwf	fsr2h,c
 25507  0033BA  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25508  0033BE  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25509  0033C0                     l2806:
 25510  0033C0  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25511  0033C2  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25512  0033C4  B0D8               	btfsc	status,0,c
 25513  0033C6  0012               	return	
 25514  0033C8  D7E7               	goto	l2807
 25515  0033CA                     __end_of__fill_buffer_get_bootloader_details:
 25516                           	opt stack 0
 25517                           tosu	equ	0xFFF
 25518                           tosh	equ	0xFFE
 25519                           tosl	equ	0xFFD
 25520                           pclath	equ	0xFFA
 25521                           tblptru	equ	0xFF8
 25522                           tblptrh	equ	0xFF7
 25523                           tblptrl	equ	0xFF6
 25524                           tablat	equ	0xFF5
 25525                           prodh	equ	0xFF4
 25526                           prodl	equ	0xFF3
 25527                           intcon	equ	0xFF2
 25528                           intcon2	equ	0xFF1
 25529                           intcon3	equ	0xFF0
 25530                           indf0	equ	0xFEF
 25531                           postinc0	equ	0xFEE
 25532                           fsr0h	equ	0xFEA
 25533                           fsr0l	equ	0xFE9
 25534                           wreg	equ	0xFE8
 25535                           indf1	equ	0xFE7
 25536                           postdec1	equ	0xFE5
 25537                           plusw1	equ	0xFE3
 25538                           fsr1h	equ	0xFE2
 25539                           fsr1l	equ	0xFE1
 25540                           indf2	equ	0xFDF
 25541                           postinc2	equ	0xFDE
 25542                           postdec2	equ	0xFDD
 25543                           plusw2	equ	0xFDB
 25544                           fsr2h	equ	0xFDA
 25545                           fsr2l	equ	0xFD9
 25546                           status	equ	0xFD8
 25547                           
 25548 ;; *************** function _bootloader_get_rec_recordType *****************
 25549 ;; Defined at:
 25550 ;;		line 494 in file "bootloader.c"
 25551 ;; Parameters:    Size  Location     Type
 25552 ;;		None
 25553 ;; Auto vars:     Size  Location     Type
 25554 ;;		None
 25555 ;; Return value:  Size  Location     Type
 25556 ;;                  1    wreg      enum E6776
 25557 ;; Registers used:
 25558 ;;		wreg, status,2
 25559 ;; Tracked objects:
 25560 ;;		On entry : 0/0
 25561 ;;		On exit  : 0/0
 25562 ;;		Unchanged: 0/0
 25563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25568 ;;Total ram usage:        0 bytes
 25569 ;; Hardware stack levels used:    1
 25570 ;; This function calls:
 25571 ;;		Nothing
 25572 ;; This function is called by:
 25573 ;;		__fill_buffer_get_bootloader_details
 25574 ;; This function uses a non-reentrant model
 25575 ;;
 25576                           
 25577                           	psect	text117
 25578  00A2B8                     __ptext117:
 25579                           	opt stack 0
 25580  00A2B8                     _bootloader_get_rec_recordType:
 25581                           	opt stack 28
 25582                           
 25583                           ;bootloader.c: 496: return hex_file_entry.recordType;
 25584                           
 25585                           ;incstack = 0
 25586  00A2B8  0101               	movlb	1	; () banked
 25587  00A2BA  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
 25588  00A2BC  0012               	return	
 25589  00A2BE                     __end_of_bootloader_get_rec_recordType:
 25590                           	opt stack 0
 25591                           tosu	equ	0xFFF
 25592                           tosh	equ	0xFFE
 25593                           tosl	equ	0xFFD
 25594                           pclath	equ	0xFFA
 25595                           tblptru	equ	0xFF8
 25596                           tblptrh	equ	0xFF7
 25597                           tblptrl	equ	0xFF6
 25598                           tablat	equ	0xFF5
 25599                           prodh	equ	0xFF4
 25600                           prodl	equ	0xFF3
 25601                           intcon	equ	0xFF2
 25602                           intcon2	equ	0xFF1
 25603                           intcon3	equ	0xFF0
 25604                           indf0	equ	0xFEF
 25605                           postinc0	equ	0xFEE
 25606                           fsr0h	equ	0xFEA
 25607                           fsr0l	equ	0xFE9
 25608                           wreg	equ	0xFE8
 25609                           indf1	equ	0xFE7
 25610                           postdec1	equ	0xFE5
 25611                           plusw1	equ	0xFE3
 25612                           fsr1h	equ	0xFE2
 25613                           fsr1l	equ	0xFE1
 25614                           indf2	equ	0xFDF
 25615                           postinc2	equ	0xFDE
 25616                           postdec2	equ	0xFDD
 25617                           plusw2	equ	0xFDB
 25618                           fsr2h	equ	0xFDA
 25619                           fsr2l	equ	0xFD9
 25620                           status	equ	0xFD8
 25621                           
 25622 ;; *************** function _bootloader_get_rec_dataLength *****************
 25623 ;; Defined at:
 25624 ;;		line 483 in file "bootloader.c"
 25625 ;; Parameters:    Size  Location     Type
 25626 ;;		None
 25627 ;; Auto vars:     Size  Location     Type
 25628 ;;		None
 25629 ;; Return value:  Size  Location     Type
 25630 ;;                  2    0[COMRAM] unsigned int 
 25631 ;; Registers used:
 25632 ;;		None
 25633 ;; Tracked objects:
 25634 ;;		On entry : 0/0
 25635 ;;		On exit  : 0/0
 25636 ;;		Unchanged: 0/0
 25637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25642 ;;Total ram usage:        2 bytes
 25643 ;; Hardware stack levels used:    1
 25644 ;; This function calls:
 25645 ;;		Nothing
 25646 ;; This function is called by:
 25647 ;;		__fill_buffer_get_bootloader_details
 25648 ;; This function uses a non-reentrant model
 25649 ;;
 25650                           
 25651                           	psect	text118
 25652  00A254                     __ptext118:
 25653                           	opt stack 0
 25654  00A254                     _bootloader_get_rec_dataLength:
 25655                           	opt stack 28
 25656                           
 25657                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;incstack = 0
 25661  00A254  C193  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25662  00A258  C194  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25663  00A25C  0012               	return		;funcret
 25664  00A25E                     __end_of_bootloader_get_rec_dataLength:
 25665                           	opt stack 0
 25666                           tosu	equ	0xFFF
 25667                           tosh	equ	0xFFE
 25668                           tosl	equ	0xFFD
 25669                           pclath	equ	0xFFA
 25670                           tblptru	equ	0xFF8
 25671                           tblptrh	equ	0xFF7
 25672                           tblptrl	equ	0xFF6
 25673                           tablat	equ	0xFF5
 25674                           prodh	equ	0xFF4
 25675                           prodl	equ	0xFF3
 25676                           intcon	equ	0xFF2
 25677                           intcon2	equ	0xFF1
 25678                           intcon3	equ	0xFF0
 25679                           indf0	equ	0xFEF
 25680                           postinc0	equ	0xFEE
 25681                           fsr0h	equ	0xFEA
 25682                           fsr0l	equ	0xFE9
 25683                           wreg	equ	0xFE8
 25684                           indf1	equ	0xFE7
 25685                           postdec1	equ	0xFE5
 25686                           plusw1	equ	0xFE3
 25687                           fsr1h	equ	0xFE2
 25688                           fsr1l	equ	0xFE1
 25689                           indf2	equ	0xFDF
 25690                           postinc2	equ	0xFDE
 25691                           postdec2	equ	0xFDD
 25692                           plusw2	equ	0xFDB
 25693                           fsr2h	equ	0xFDA
 25694                           fsr2l	equ	0xFD9
 25695                           status	equ	0xFD8
 25696                           
 25697 ;; *************** function _bootloader_get_rec_data *****************
 25698 ;; Defined at:
 25699 ;;		line 499 in file "bootloader.c"
 25700 ;; Parameters:    Size  Location     Type
 25701 ;;  index           1    wreg     unsigned char 
 25702 ;; Auto vars:     Size  Location     Type
 25703 ;;  index           1    0[COMRAM] unsigned char 
 25704 ;; Return value:  Size  Location     Type
 25705 ;;                  1    wreg      unsigned char 
 25706 ;; Registers used:
 25707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25708 ;; Tracked objects:
 25709 ;;		On entry : 0/0
 25710 ;;		On exit  : 0/0
 25711 ;;		Unchanged: 0/0
 25712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25717 ;;Total ram usage:        1 bytes
 25718 ;; Hardware stack levels used:    1
 25719 ;; This function calls:
 25720 ;;		Nothing
 25721 ;; This function is called by:
 25722 ;;		__fill_buffer_get_bootloader_details
 25723 ;; This function uses a non-reentrant model
 25724 ;;
 25725                           
 25726                           	psect	text119
 25727  00A144                     __ptext119:
 25728                           	opt stack 0
 25729  00A144                     _bootloader_get_rec_data:
 25730                           	opt stack 28
 25731                           
 25732                           ;incstack = 0
 25733                           ;bootloader_get_rec_data@index stored from wreg
 25734  00A144  6E01               	movwf	bootloader_get_rec_data@index,c
 25735                           
 25736                           ;bootloader.c: 501: return hex_file_entry.data[index];
 25737  00A146  5001               	movf	bootloader_get_rec_data@index,w,c
 25738  00A148  0D01               	mullw	1
 25739  00A14A  0E98               	movlw	low (_hex_file_entry+5)
 25740  00A14C  24F3               	addwf	prodl,w,c
 25741  00A14E  6ED9               	movwf	fsr2l,c
 25742  00A150  0E01               	movlw	high (_hex_file_entry+5)
 25743  00A152  20F4               	addwfc	prodh,w,c
 25744  00A154  6EDA               	movwf	fsr2h,c
 25745  00A156  50DF               	movf	indf2,w,c
 25746  00A158  0012               	return	
 25747  00A15A                     __end_of_bootloader_get_rec_data:
 25748                           	opt stack 0
 25749                           tosu	equ	0xFFF
 25750                           tosh	equ	0xFFE
 25751                           tosl	equ	0xFFD
 25752                           pclath	equ	0xFFA
 25753                           tblptru	equ	0xFF8
 25754                           tblptrh	equ	0xFF7
 25755                           tblptrl	equ	0xFF6
 25756                           tablat	equ	0xFF5
 25757                           prodh	equ	0xFF4
 25758                           prodl	equ	0xFF3
 25759                           intcon	equ	0xFF2
 25760                           intcon2	equ	0xFF1
 25761                           intcon3	equ	0xFF0
 25762                           indf0	equ	0xFEF
 25763                           postinc0	equ	0xFEE
 25764                           fsr0h	equ	0xFEA
 25765                           fsr0l	equ	0xFE9
 25766                           wreg	equ	0xFE8
 25767                           indf1	equ	0xFE7
 25768                           postdec1	equ	0xFE5
 25769                           plusw1	equ	0xFE3
 25770                           fsr1h	equ	0xFE2
 25771                           fsr1l	equ	0xFE1
 25772                           indf2	equ	0xFDF
 25773                           postinc2	equ	0xFDE
 25774                           postdec2	equ	0xFDD
 25775                           plusw2	equ	0xFDB
 25776                           fsr2h	equ	0xFDA
 25777                           fsr2l	equ	0xFD9
 25778                           status	equ	0xFD8
 25779                           
 25780 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25781 ;; Defined at:
 25782 ;;		line 509 in file "bootloader.c"
 25783 ;; Parameters:    Size  Location     Type
 25784 ;;		None
 25785 ;; Auto vars:     Size  Location     Type
 25786 ;;		None
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  1    wreg      unsigned char 
 25789 ;; Registers used:
 25790 ;;		wreg, status,2
 25791 ;; Tracked objects:
 25792 ;;		On entry : 0/0
 25793 ;;		On exit  : 0/0
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25800 ;;Total ram usage:        0 bytes
 25801 ;; Hardware stack levels used:    1
 25802 ;; This function calls:
 25803 ;;		Nothing
 25804 ;; This function is called by:
 25805 ;;		__fill_buffer_get_bootloader_details
 25806 ;; This function uses a non-reentrant model
 25807 ;;
 25808                           
 25809                           	psect	text120
 25810  00A2BE                     __ptext120:
 25811                           	opt stack 0
 25812  00A2BE                     _bootloader_get_rec_checksumCheck:
 25813                           	opt stack 28
 25814                           
 25815                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 25816                           
 25817                           ;incstack = 0
 25818  00A2BE  0101               	movlb	1	; () banked
 25819  00A2C0  51A9               	movf	(_hex_file_entry+22)& (0+255),w,b
 25820  00A2C2  0012               	return	
 25821  00A2C4                     __end_of_bootloader_get_rec_checksumCheck:
 25822                           	opt stack 0
 25823                           tosu	equ	0xFFF
 25824                           tosh	equ	0xFFE
 25825                           tosl	equ	0xFFD
 25826                           pclath	equ	0xFFA
 25827                           tblptru	equ	0xFF8
 25828                           tblptrh	equ	0xFF7
 25829                           tblptrl	equ	0xFF6
 25830                           tablat	equ	0xFF5
 25831                           prodh	equ	0xFF4
 25832                           prodl	equ	0xFF3
 25833                           intcon	equ	0xFF2
 25834                           intcon2	equ	0xFF1
 25835                           intcon3	equ	0xFF0
 25836                           indf0	equ	0xFEF
 25837                           postinc0	equ	0xFEE
 25838                           fsr0h	equ	0xFEA
 25839                           fsr0l	equ	0xFE9
 25840                           wreg	equ	0xFE8
 25841                           indf1	equ	0xFE7
 25842                           postdec1	equ	0xFE5
 25843                           plusw1	equ	0xFE3
 25844                           fsr1h	equ	0xFE2
 25845                           fsr1l	equ	0xFE1
 25846                           indf2	equ	0xFDF
 25847                           postinc2	equ	0xFDE
 25848                           postdec2	equ	0xFDD
 25849                           plusw2	equ	0xFDB
 25850                           fsr2h	equ	0xFDA
 25851                           fsr2l	equ	0xFD9
 25852                           status	equ	0xFD8
 25853                           
 25854 ;; *************** function _bootloader_get_rec_checksum *****************
 25855 ;; Defined at:
 25856 ;;		line 504 in file "bootloader.c"
 25857 ;; Parameters:    Size  Location     Type
 25858 ;;		None
 25859 ;; Auto vars:     Size  Location     Type
 25860 ;;		None
 25861 ;; Return value:  Size  Location     Type
 25862 ;;                  1    wreg      unsigned char 
 25863 ;; Registers used:
 25864 ;;		wreg, status,2
 25865 ;; Tracked objects:
 25866 ;;		On entry : 0/0
 25867 ;;		On exit  : 0/0
 25868 ;;		Unchanged: 0/0
 25869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25874 ;;Total ram usage:        0 bytes
 25875 ;; Hardware stack levels used:    1
 25876 ;; This function calls:
 25877 ;;		Nothing
 25878 ;; This function is called by:
 25879 ;;		__fill_buffer_get_bootloader_details
 25880 ;; This function uses a non-reentrant model
 25881 ;;
 25882                           
 25883                           	psect	text121
 25884  00A2C4                     __ptext121:
 25885                           	opt stack 0
 25886  00A2C4                     _bootloader_get_rec_checksum:
 25887                           	opt stack 28
 25888                           
 25889                           ;bootloader.c: 506: return hex_file_entry.checksum;
 25890                           
 25891                           ; BSR set to: 1
 25892                           ;incstack = 0
 25893  00A2C4  0101               	movlb	1	; () banked
 25894  00A2C6  51A8               	movf	(_hex_file_entry+21)& (0+255),w,b
 25895  00A2C8  0012               	return	
 25896  00A2CA                     __end_of_bootloader_get_rec_checksum:
 25897                           	opt stack 0
 25898                           tosu	equ	0xFFF
 25899                           tosh	equ	0xFFE
 25900                           tosl	equ	0xFFD
 25901                           pclath	equ	0xFFA
 25902                           tblptru	equ	0xFF8
 25903                           tblptrh	equ	0xFF7
 25904                           tblptrl	equ	0xFF6
 25905                           tablat	equ	0xFF5
 25906                           prodh	equ	0xFF4
 25907                           prodl	equ	0xFF3
 25908                           intcon	equ	0xFF2
 25909                           intcon2	equ	0xFF1
 25910                           intcon3	equ	0xFF0
 25911                           indf0	equ	0xFEF
 25912                           postinc0	equ	0xFEE
 25913                           fsr0h	equ	0xFEA
 25914                           fsr0l	equ	0xFE9
 25915                           wreg	equ	0xFE8
 25916                           indf1	equ	0xFE7
 25917                           postdec1	equ	0xFE5
 25918                           plusw1	equ	0xFE3
 25919                           fsr1h	equ	0xFE2
 25920                           fsr1l	equ	0xFE1
 25921                           indf2	equ	0xFDF
 25922                           postinc2	equ	0xFDE
 25923                           postdec2	equ	0xFDD
 25924                           plusw2	equ	0xFDB
 25925                           fsr2h	equ	0xFDA
 25926                           fsr2l	equ	0xFD9
 25927                           status	equ	0xFD8
 25928                           
 25929 ;; *************** function __fill_buffer_find_file *****************
 25930 ;; Defined at:
 25931 ;;		line 393 in file "api.c"
 25932 ;; Parameters:    Size  Location     Type
 25933 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 25934 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25935 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25936 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;  cntr            1   62[COMRAM] unsigned char 
 25939 ;; Return value:  Size  Location     Type
 25940 ;;                  1    wreg      void 
 25941 ;; Registers used:
 25942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25943 ;; Tracked objects:
 25944 ;;		On entry : 0/0
 25945 ;;		On exit  : 0/0
 25946 ;;		Unchanged: 0/0
 25947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25951 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25952 ;;Total ram usage:        9 bytes
 25953 ;; Hardware stack levels used:    1
 25954 ;; Hardware stack levels required when called:    6
 25955 ;; This function calls:
 25956 ;;		_fat_find_file
 25957 ;; This function is called by:
 25958 ;;		_api_prepare
 25959 ;; This function uses a non-reentrant model
 25960 ;;
 25961                           
 25962                           	psect	text122
 25963  007EA6                     __ptext122:
 25964                           	opt stack 0
 25965  007EA6                     __fill_buffer_find_file:
 25966                           	opt stack 23
 25967                           
 25968                           ;api.c: 395: uint8_t cntr;;api.c: 398: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25969                           
 25970                           ; BSR set to: 1
 25971                           ;incstack = 0
 25972  007EA6  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25973  007EAA  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25974  007EAE  0E81               	movlw	129
 25975  007EB0  6EDF               	movwf	indf2,c
 25976                           
 25977                           ;api.c: 401: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25978  007EB2  EE20 F001          	lfsr	2,1
 25979  007EB6  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25980  007EB8  26D9               	addwf	fsr2l,f,c
 25981  007EBA  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25982  007EBC  22DA               	addwfc	fsr2h,f,c
 25983  007EBE  0EC1               	movlw	193
 25984  007EC0  6EDF               	movwf	indf2,c
 25985                           
 25986                           ;api.c: 402: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25987  007EC2  EE20 F002          	lfsr	2,2
 25988  007EC6  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25989  007EC8  26D9               	addwf	fsr2l,f,c
 25990  007ECA  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25991  007ECC  22DA               	addwfc	fsr2h,f,c
 25992  007ECE  0E25               	movlw	37
 25993  007ED0  6EDF               	movwf	indf2,c
 25994                           
 25995                           ;api.c: 405: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25996  007ED2  0E01               	movlw	1
 25997  007ED4  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25998  007ED6  6E2C               	movwf	fat_find_file@name,c
 25999  007ED8  0E00               	movlw	0
 26000  007EDA  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26001  007EDC  6E2D               	movwf	fat_find_file@name+1,c
 26002  007EDE  0E09               	movlw	9
 26003  007EE0  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26004  007EE2  6E2E               	movwf	fat_find_file@extension,c
 26005  007EE4  0E00               	movlw	0
 26006  007EE6  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26007  007EE8  6E2F               	movwf	fat_find_file@extension+1,c
 26008  007EEA  EC89  F034         	call	_fat_find_file	;wreg free
 26009  007EEE  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 26010  007EF0  EE20 F003          	lfsr	2,3
 26011  007EF4  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 26012  007EF6  26D9               	addwf	fsr2l,f,c
 26013  007EF8  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26014  007EFA  22DA               	addwfc	fsr2h,f,c
 26015  007EFC  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 26016                           
 26017                           ;api.c: 408: for(cntr=0; cntr<11; ++cntr)
 26018  007F00  0E00               	movlw	0
 26019  007F02  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 26020  007F04                     l15434:
 26021  007F04  0E0A               	movlw	10
 26022  007F06  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 26023  007F08  D001               	goto	l2818
 26024  007F0A  0012               	return	
 26025  007F0C                     l2818:
 26026                           
 26027                           ;api.c: 409: {;api.c: 410: outBuffer[cntr+12] = inBuffer[cntr+1];
 26028  007F0C  503F               	movf	__fill_buffer_find_file@cntr,w,c
 26029  007F0E  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 26030  007F10  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 26031  007F12  0E01               	movlw	1
 26032  007F14  263B               	addwf	??__fill_buffer_find_file,f,c
 26033  007F16  0E00               	movlw	0
 26034  007F18  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 26035  007F1A  503B               	movf	??__fill_buffer_find_file,w,c
 26036  007F1C  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26037  007F1E  6ED9               	movwf	fsr2l,c
 26038  007F20  503C               	movf	??__fill_buffer_find_file+1,w,c
 26039  007F22  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26040  007F24  6EDA               	movwf	fsr2h,c
 26041  007F26  503F               	movf	__fill_buffer_find_file@cntr,w,c
 26042  007F28  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 26043  007F2A  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 26044  007F2C  0E0C               	movlw	12
 26045  007F2E  263D               	addwf	??__fill_buffer_find_file+2,f,c
 26046  007F30  0E00               	movlw	0
 26047  007F32  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 26048  007F34  503D               	movf	??__fill_buffer_find_file+2,w,c
 26049  007F36  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 26050  007F38  6EE1               	movwf	fsr1l,c
 26051  007F3A  503E               	movf	??__fill_buffer_find_file+3,w,c
 26052  007F3C  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 26053  007F3E  6EE2               	movwf	fsr1h,c
 26054  007F40  CFDF FFE7          	movff	indf2,indf1
 26055  007F44  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 26056  007F46  D7DE               	goto	l15434
 26057  007F48                     __end_of__fill_buffer_find_file:
 26058                           	opt stack 0
 26059                           tosu	equ	0xFFF
 26060                           tosh	equ	0xFFE
 26061                           tosl	equ	0xFFD
 26062                           pclath	equ	0xFFA
 26063                           tblptru	equ	0xFF8
 26064                           tblptrh	equ	0xFF7
 26065                           tblptrl	equ	0xFF6
 26066                           tablat	equ	0xFF5
 26067                           prodh	equ	0xFF4
 26068                           prodl	equ	0xFF3
 26069                           intcon	equ	0xFF2
 26070                           intcon2	equ	0xFF1
 26071                           intcon3	equ	0xFF0
 26072                           indf0	equ	0xFEF
 26073                           postinc0	equ	0xFEE
 26074                           fsr0h	equ	0xFEA
 26075                           fsr0l	equ	0xFE9
 26076                           wreg	equ	0xFE8
 26077                           indf1	equ	0xFE7
 26078                           postdec1	equ	0xFE5
 26079                           plusw1	equ	0xFE3
 26080                           fsr1h	equ	0xFE2
 26081                           fsr1l	equ	0xFE1
 26082                           indf2	equ	0xFDF
 26083                           postinc2	equ	0xFDE
 26084                           postdec2	equ	0xFDD
 26085                           plusw2	equ	0xFDB
 26086                           fsr2h	equ	0xFDA
 26087                           fsr2l	equ	0xFD9
 26088                           status	equ	0xFD8
 26089                           
 26090 ;; *************** function _api_parse *****************
 26091 ;; Defined at:
 26092 ;;		line 146 in file "api.c"
 26093 ;; Parameters:    Size  Location     Type
 26094 ;;  inBuffer        2   68[BANK0 ] PTR unsigned char 
 26095 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 26096 ;;  receivedData    1   70[BANK0 ] unsigned char 
 26097 ;;  outBuffer       2   71[BANK0 ] PTR unsigned char 
 26098 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 26099 ;; Auto vars:     Size  Location     Type
 26100 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 26101 ;;		 -> api_parse@out_idx(1), 
 26102 ;;  out_idx         1   78[BANK0 ] unsigned char 
 26103 ;;  in_idx          1   77[BANK0 ] unsigned char 
 26104 ;; Return value:  Size  Location     Type
 26105 ;;                  1    wreg      void 
 26106 ;; Registers used:
 26107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26108 ;; Tracked objects:
 26109 ;;		On entry : 0/0
 26110 ;;		On exit  : 0/0
 26111 ;;		Unchanged: 0/0
 26112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26113 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26114 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26117 ;;Total ram usage:       11 bytes
 26118 ;; Hardware stack levels used:    1
 26119 ;; Hardware stack levels required when called:   11
 26120 ;; This function calls:
 26121 ;;		__parse_command_long
 26122 ;;		__parse_command_short
 26123 ;; This function is called by:
 26124 ;;		_main
 26125 ;;		_APP_DeviceCustomHIDTasks
 26126 ;; This function uses a non-reentrant model
 26127 ;;
 26128                           
 26129                           	psect	text123
 26130  005162                     __ptext123:
 26131                           	opt stack 0
 26132  005162                     _api_parse:
 26133                           	opt stack 19
 26134                           
 26135                           ;api.c: 150: uint8_t in_idx;;api.c: 151: uint8_t out_idx;;api.c: 152: uint8_t *out_idx_p
      +                          tr;;api.c: 154: out_idx = 0;
 26136                           
 26137                           ;incstack = 0
 26138  005162  0E00               	movlw	0
 26139  005164  0100               	movlb	0	; () banked
 26140  005166  6FAE               	movwf	api_parse@out_idx& (0+255),b
 26141                           
 26142                           ; BSR set to: 0
 26143                           ;api.c: 155: out_idx_ptr = &out_idx;
 26144  005168  0EAE               	movlw	low api_parse@out_idx
 26145  00516A  6FAB               	movwf	api_parse@out_idx_ptr& (0+255),b
 26146  00516C  0E00               	movlw	high api_parse@out_idx
 26147  00516E  6FAC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 26148                           
 26149                           ; BSR set to: 0
 26150                           ;api.c: 157: if(inBuffer[0]>0x7F)
 26151  005170  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26152  005174  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26153  005178  0E7F               	movlw	127
 26154  00517A  64DF               	cpfsgt	indf2,c
 26155  00517C  D001               	goto	l2774
 26156  00517E  0012               	return	
 26157  005180                     l2774:
 26158                           
 26159                           ; BSR set to: 0
 26160                           ;api.c: 162: };api.c: 164: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 26161                           
 26162                           ; BSR set to: 0
 26163  005180  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26164  005184  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26165  005188  0E20               	movlw	32
 26166  00518A  18DE               	xorwf	postinc2,w,c
 26167  00518C  B4D8               	btfsc	status,2,c
 26168  00518E  0012               	return	
 26169                           
 26170                           ; BSR set to: 0
 26171                           ;api.c: 169: };api.c: 171: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 26172                           
 26173                           ; BSR set to: 0
 26174                           
 26175                           ; BSR set to: 0
 26176                           ;api.c: 165: {;api.c: 168: return;
 26177  005190  C0A4  FFD9         	movff	api_parse@inBuffer,fsr2l
 26178  005194  C0A5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26179  005198  50DF               	movf	indf2,w,c
 26180  00519A  A4D8               	btfss	status,2,c
 26181  00519C  D018               	goto	l2777
 26182                           
 26183                           ; BSR set to: 0
 26184                           ;api.c: 172: {;api.c: 174: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 26185  00519E  C0A7  FFD9         	movff	api_parse@outBuffer,fsr2l
 26186  0051A2  C0A8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 26187  0051A6  0E00               	movlw	0
 26188  0051A8  6EDF               	movwf	indf2,c
 26189                           
 26190                           ; BSR set to: 0
 26191                           ;api.c: 177: outBuffer[1] = 0xC125 >> 8;
 26192  0051AA  EE20 F001          	lfsr	2,1
 26193  0051AE  51A7               	movf	api_parse@outBuffer& (0+255),w,b
 26194  0051B0  26D9               	addwf	fsr2l,f,c
 26195  0051B2  51A8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26196  0051B4  22DA               	addwfc	fsr2h,f,c
 26197  0051B6  0EC1               	movlw	193
 26198  0051B8  6EDF               	movwf	indf2,c
 26199                           
 26200                           ; BSR set to: 0
 26201                           ;api.c: 178: outBuffer[2] = (uint8_t) 0xC125;
 26202  0051BA  EE20 F002          	lfsr	2,2
 26203  0051BE  51A7               	movf	api_parse@outBuffer& (0+255),w,b
 26204  0051C0  26D9               	addwf	fsr2l,f,c
 26205  0051C2  51A8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 26206  0051C4  22DA               	addwfc	fsr2h,f,c
 26207  0051C6  0E25               	movlw	37
 26208  0051C8  6EDF               	movwf	indf2,c
 26209                           
 26210                           ; BSR set to: 0
 26211                           ;api.c: 181: out_idx = 3;
 26212  0051CA  0E03               	movlw	3
 26213  0051CC  6FAE               	movwf	api_parse@out_idx& (0+255),b
 26214  0051CE                     l2777:
 26215                           
 26216                           ; BSR set to: 0
 26217                           ;api.c: 182: };api.c: 184: in_idx = 1;
 26218                           
 26219                           ; BSR set to: 0
 26220  0051CE  0E01               	movlw	1
 26221  0051D0  6FAD               	movwf	api_parse@in_idx& (0+255),b
 26222                           
 26223                           ;api.c: 185: while(in_idx<receivedDataLength)
 26224  0051D2  D057               	goto	l2783
 26225  0051D4                     
 26226                           ; BSR set to: 0
 26227                           ;api.c: 186: {;api.c: 188: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 26228                           
 26229                           ; BSR set to: 0
 26230  0051D4  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26231  0051D6  0D01               	mullw	1
 26232  0051D8  50F3               	movf	prodl,w,c
 26233  0051DA  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26234  0051DC  6ED9               	movwf	fsr2l,c
 26235  0051DE  50F4               	movf	prodh,w,c
 26236  0051E0  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26237  0051E2  6EDA               	movwf	fsr2h,c
 26238  0051E4  0E99               	movlw	153
 26239  0051E6  18DE               	xorwf	postinc2,w,c
 26240  0051E8  B4D8               	btfsc	status,2,c
 26241  0051EA  0012               	return	
 26242  0051EC  D02F               	goto	l2781
 26243  0051EE                     
 26244                           ; BSR set to: 0
 26245                           ;api.c: 196: _parse_command_short(inBuffer[in_idx]);
 26246                           
 26247                           ; BSR set to: 0
 26248  0051EE  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26249  0051F0  0D01               	mullw	1
 26250  0051F2  50F3               	movf	prodl,w,c
 26251  0051F4  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26252  0051F6  6ED9               	movwf	fsr2l,c
 26253  0051F8  50F4               	movf	prodh,w,c
 26254  0051FA  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26255  0051FC  6EDA               	movwf	fsr2h,c
 26256  0051FE  50DF               	movf	indf2,w,c
 26257  005200  EC0A  F037         	call	__parse_command_short
 26258  005204  D00B               	goto	l16066
 26259  005206                     
 26260                           ; BSR set to: 0
 26261                           ;api.c: 201: _parse_command_short(inBuffer[in_idx]);
 26262                           
 26263                           ; BSR set to: 0
 26264  005206  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26265  005208  0D01               	mullw	1
 26266  00520A  50F3               	movf	prodl,w,c
 26267  00520C  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26268  00520E  6ED9               	movwf	fsr2l,c
 26269  005210  50F4               	movf	prodh,w,c
 26270  005212  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26271  005214  6EDA               	movwf	fsr2h,c
 26272  005216  50DF               	movf	indf2,w,c
 26273  005218  EC0A  F037         	call	__parse_command_short
 26274  00521C                     l16066:
 26275                           
 26276                           ;api.c: 202: ++in_idx;
 26277  00521C  0100               	movlb	0	; () banked
 26278  00521E  2BAD               	incf	api_parse@in_idx& (0+255),f,b
 26279                           
 26280                           ;api.c: 203: break;
 26281  005220  D030               	goto	l2783
 26282  005222                     
 26283                           ; BSR set to: 0
 26284                           ;api.c: 206: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 26285                           
 26286                           ; BSR set to: 0
 26287  005222  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26288  005224  0D01               	mullw	1
 26289  005226  50F3               	movf	prodl,w,c
 26290  005228  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26291  00522A  6F9D               	movwf	__parse_command_long@data& (0+255),b
 26292  00522C  50F4               	movf	prodh,w,c
 26293  00522E  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26294  005230  6F9E               	movwf	(__parse_command_long@data+1)& (0+255),b
 26295  005232  C0A7  F09F         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 26296  005236  C0A8  F0A0         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 26297  00523A  C0AB  F0A1         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 26298  00523E  C0AC  F0A2         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 26299  005242  EC81  F00D         	call	__parse_command_long	;wreg free
 26300  005246  0100               	movlb	0	; () banked
 26301  005248  27AD               	addwf	api_parse@in_idx& (0+255),f,b
 26302                           
 26303                           ;api.c: 207: break;
 26304  00524A  D01B               	goto	l2783
 26305  00524C                     l2781:
 26306                           
 26307                           ; BSR set to: 0
 26308                           
 26309                           ; BSR set to: 0
 26310  00524C  51AD               	movf	api_parse@in_idx& (0+255),w,b
 26311  00524E  0D01               	mullw	1
 26312  005250  50F3               	movf	prodl,w,c
 26313  005252  25A4               	addwf	api_parse@inBuffer& (0+255),w,b
 26314  005254  6ED9               	movwf	fsr2l,c
 26315  005256  50F4               	movf	prodh,w,c
 26316  005258  21A5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26317  00525A  6EDA               	movwf	fsr2h,c
 26318  00525C  50DF               	movf	indf2,w,c
 26319  00525E  0BF0               	andlw	240
 26320  005260  6FA9               	movwf	??_api_parse& (0+255),b
 26321  005262  6BAA               	clrf	(??_api_parse+1)& (0+255),b
 26322                           
 26323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26324                           ; Switch size 1, requested type "space"
 26325                           ; Number of cases is 1, Range of values is 0 to 0
 26326                           ; switch strategies available:
 26327                           ; Name         Instructions Cycles
 26328                           ; simple_byte            4     3 (average)
 26329                           ;	Chosen strategy is simple_byte
 26330  005264  51AA               	movf	(??_api_parse+1)& (0+255),w,b
 26331  005266  0A00               	xorlw	0	; case 0
 26332  005268  A4D8               	btfss	status,2,c
 26333  00526A  0012               	return	
 26334                           
 26335                           ; BSR set to: 0
 26336                           ; Switch size 1, requested type "space"
 26337                           ; Number of cases is 3, Range of values is 32 to 80
 26338                           ; switch strategies available:
 26339                           ; Name         Instructions Cycles
 26340                           ; simple_byte           10     6 (average)
 26341                           ;	Chosen strategy is simple_byte
 26342  00526C  51A9               	movf	??_api_parse& (0+255),w,b
 26343  00526E  0A20               	xorlw	32	; case 32
 26344  005270  B4D8               	btfsc	status,2,c
 26345  005272  D7BD               	goto	l2782
 26346  005274  0A10               	xorlw	16	; case 48
 26347  005276  B4D8               	btfsc	status,2,c
 26348  005278  D7C6               	goto	l2784
 26349  00527A  0A60               	xorlw	96	; case 80
 26350  00527C  A4D8               	btfss	status,2,c
 26351  00527E  0012               	return	
 26352  005280  D7D0               	goto	l2785
 26353  005282                     l2783:
 26354                           
 26355                           ; BSR set to: 0
 26356                           
 26357                           ; BSR set to: 0
 26358                           
 26359                           ; BSR set to: 0
 26360  005282  51A6               	movf	api_parse@receivedDataLength& (0+255),w,b
 26361  005284  5DAD               	subwf	api_parse@in_idx& (0+255),w,b
 26362  005286  B0D8               	btfsc	status,0,c
 26363  005288  0012               	return	
 26364  00528A  D7A4               	goto	l2779
 26365  00528C                     __end_of_api_parse:
 26366                           	opt stack 0
 26367                           tosu	equ	0xFFF
 26368                           tosh	equ	0xFFE
 26369                           tosl	equ	0xFFD
 26370                           pclath	equ	0xFFA
 26371                           tblptru	equ	0xFF8
 26372                           tblptrh	equ	0xFF7
 26373                           tblptrl	equ	0xFF6
 26374                           tablat	equ	0xFF5
 26375                           prodh	equ	0xFF4
 26376                           prodl	equ	0xFF3
 26377                           intcon	equ	0xFF2
 26378                           intcon2	equ	0xFF1
 26379                           intcon3	equ	0xFF0
 26380                           indf0	equ	0xFEF
 26381                           postinc0	equ	0xFEE
 26382                           fsr0h	equ	0xFEA
 26383                           fsr0l	equ	0xFE9
 26384                           wreg	equ	0xFE8
 26385                           indf1	equ	0xFE7
 26386                           postdec1	equ	0xFE5
 26387                           plusw1	equ	0xFE3
 26388                           fsr1h	equ	0xFE2
 26389                           fsr1l	equ	0xFE1
 26390                           indf2	equ	0xFDF
 26391                           postinc2	equ	0xFDE
 26392                           postdec2	equ	0xFDD
 26393                           plusw2	equ	0xFDB
 26394                           fsr2h	equ	0xFDA
 26395                           fsr2l	equ	0xFD9
 26396                           status	equ	0xFD8
 26397                           
 26398 ;; *************** function __parse_command_short *****************
 26399 ;; Defined at:
 26400 ;;		line 498 in file "api.c"
 26401 ;; Parameters:    Size  Location     Type
 26402 ;;  cmd             1    wreg     unsigned char 
 26403 ;; Auto vars:     Size  Location     Type
 26404 ;;  cmd             1   41[COMRAM] unsigned char 
 26405 ;; Return value:  Size  Location     Type
 26406 ;;                  1    wreg      void 
 26407 ;; Registers used:
 26408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26409 ;; Tracked objects:
 26410 ;;		On entry : 0/0
 26411 ;;		On exit  : 0/0
 26412 ;;		Unchanged: 0/0
 26413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26418 ;;Total ram usage:        1 bytes
 26419 ;; Hardware stack levels used:    1
 26420 ;; Hardware stack levels required when called:    8
 26421 ;; This function calls:
 26422 ;;		_i2c_eeprom_writeByte
 26423 ;;		_reboot
 26424 ;;		_system_delay_ms
 26425 ;; This function is called by:
 26426 ;;		_api_parse
 26427 ;; This function uses a non-reentrant model
 26428 ;;
 26429                           
 26430                           	psect	text124
 26431  006E14                     __ptext124:
 26432                           	opt stack 0
 26433  006E14                     __parse_command_short:
 26434                           	opt stack 21
 26435                           
 26436                           ; BSR set to: 0
 26437                           ;incstack = 0
 26438                           ;__parse_command_short@cmd stored from wreg
 26439  006E14  6E2A               	movwf	__parse_command_short@cmd,c
 26440                           
 26441                           ;api.c: 500: switch(cmd)
 26442  006E16  D047               	goto	l2831
 26443  006E18                     
 26444                           ;api.c: 503: i2c_eeprom_writeByte(0x100, 0x00);
 26445  006E18  0E01               	movlw	1
 26446  006E1A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26447  006E1C  0E00               	movlw	0
 26448  006E1E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26449  006E20  0E00               	movlw	0
 26450  006E22  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26451  006E24  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
 26452                           
 26453                           ;api.c: 504: system_delay_ms(10);
 26454  006E28  0E0A               	movlw	10
 26455  006E2A  EC7F  F04F         	call	_system_delay_ms
 26456                           
 26457                           ;api.c: 505: reboot();
 26458  006E2E  EC5B  F050         	call	_reboot	;wreg free
 26459                           
 26460                           ;api.c: 506: break;
 26461  006E32  0012               	return	
 26462  006E34                     
 26463                           ;api.c: 509: i2c_eeprom_writeByte(0x100, 0x94);
 26464  006E34  0E01               	movlw	1
 26465  006E36  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26466  006E38  0E00               	movlw	0
 26467  006E3A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26468  006E3C  0E94               	movlw	148
 26469  006E3E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26470  006E40  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
 26471                           
 26472                           ;api.c: 510: system_delay_ms(10);
 26473  006E44  0E0A               	movlw	10
 26474  006E46  EC7F  F04F         	call	_system_delay_ms
 26475                           
 26476                           ;api.c: 511: reboot();
 26477  006E4A  EC5B  F050         	call	_reboot	;wreg free
 26478                           
 26479                           ;api.c: 512: break;
 26480  006E4E  0012               	return	
 26481  006E50                     
 26482                           ;api.c: 515: i2c_eeprom_writeByte(0x100, 0x78);
 26483  006E50  0E01               	movlw	1
 26484  006E52  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26485  006E54  0E00               	movlw	0
 26486  006E56  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26487  006E58  0E78               	movlw	120
 26488  006E5A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26489  006E5C  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
 26490                           
 26491                           ;api.c: 516: system_delay_ms(10);
 26492  006E60  0E0A               	movlw	10
 26493  006E62  EC7F  F04F         	call	_system_delay_ms
 26494                           
 26495                           ;api.c: 517: reboot();
 26496  006E66  EC5B  F050         	call	_reboot	;wreg free
 26497                           
 26498                           ;api.c: 518: break;
 26499  006E6A  0012               	return	
 26500  006E6C                     
 26501                           ;api.c: 522: i2c_eeprom_writeByte(0x100, 0x78);
 26502  006E6C  0E01               	movlw	1
 26503  006E6E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26504  006E70  0E00               	movlw	0
 26505  006E72  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26506  006E74  0E78               	movlw	120
 26507  006E76  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26508  006E78  EC6E  F04C         	call	_i2c_eeprom_writeByte	;wreg free
 26509                           
 26510                           ;api.c: 523: system_delay_ms(10);
 26511  006E7C  0E0A               	movlw	10
 26512  006E7E  EC7F  F04F         	call	_system_delay_ms
 26513                           
 26514                           ;api.c: 524: reboot();
 26515  006E82  EC5B  F050         	call	_reboot	;wreg free
 26516                           
 26517                           ;api.c: 525: break;
 26518  006E86  0012               	return	
 26519  006E88                     
 26520                           ;api.c: 528: os.bootloader_mode = BOOTLOADER_MODE_SUSPENDED;
 26521  006E88  0E90               	movlw	144
 26522  006E8A  0101               	movlb	1	; () banked
 26523  006E8C  6F35               	movwf	(_os+4)& (0+255),b
 26524                           
 26525                           ;api.c: 529: os.display_mode = DISPLAY_MODE_BOOTLOADER_SUSPENDED;
 26526  006E8E  0E90               	movlw	144
 26527  006E90  6F36               	movwf	(_os+5)& (0+255),b
 26528                           
 26529                           ;api.c: 530: break;
 26530  006E92  0012               	return	
 26531  006E94                     
 26532                           ;api.c: 533: --os.encoderCount;
 26533                           
 26534                           ; BSR set to: 1
 26535  006E94  0101               	movlb	1	; () banked
 26536  006E96  0731               	decf	_os& (0+255),f,b
 26537                           
 26538                           ;api.c: 534: break;
 26539  006E98  0012               	return	
 26540  006E9A                     
 26541                           ;api.c: 537: ++os.encoderCount;
 26542                           
 26543                           ; BSR set to: 1
 26544  006E9A  0101               	movlb	1	; () banked
 26545  006E9C  2B31               	incf	_os& (0+255),f,b
 26546                           
 26547                           ;api.c: 538: break;
 26548  006E9E  0012               	return	
 26549  006EA0                     
 26550                           ;api.c: 541: ++os.buttonCount;
 26551                           
 26552                           ; BSR set to: 1
 26553  006EA0  0101               	movlb	1	; () banked
 26554  006EA2  2B32               	incf	(_os+1)& (0+255),f,b
 26555                           
 26556                           ; BSR set to: 1
 26557                           ;api.c: 543: }
 26558                           
 26559                           ;api.c: 542: break;
 26560  006EA4  0012               	return	
 26561  006EA6                     l2831:
 26562                           
 26563                           ; BSR set to: 1
 26564  006EA6  502A               	movf	__parse_command_short@cmd,w,c
 26565                           
 26566                           ; Switch size 1, requested type "space"
 26567                           ; Number of cases is 8, Range of values is 32 to 62
 26568                           ; switch strategies available:
 26569                           ; Name         Instructions Cycles
 26570                           ; simple_byte           25    13 (average)
 26571                           ;	Chosen strategy is simple_byte
 26572  006EA8  0A20               	xorlw	32	; case 32
 26573  006EAA  B4D8               	btfsc	status,2,c
 26574  006EAC  D7B5               	goto	l2832
 26575  006EAE  0A01               	xorlw	1	; case 33
 26576  006EB0  B4D8               	btfsc	status,2,c
 26577  006EB2  D7C0               	goto	l2834
 26578  006EB4  0A03               	xorlw	3	; case 34
 26579  006EB6  B4D8               	btfsc	status,2,c
 26580  006EB8  D7CB               	goto	l2835
 26581  006EBA  0A01               	xorlw	1	; case 35
 26582  006EBC  B4D8               	btfsc	status,2,c
 26583  006EBE  D7D6               	goto	l2836
 26584  006EC0  0A07               	xorlw	7	; case 36
 26585  006EC2  B4D8               	btfsc	status,2,c
 26586  006EC4  D7E1               	goto	l2837
 26587  006EC6  0A18               	xorlw	24	; case 60
 26588  006EC8  B4D8               	btfsc	status,2,c
 26589  006ECA  D7E4               	goto	l2838
 26590  006ECC  0A01               	xorlw	1	; case 61
 26591  006ECE  B4D8               	btfsc	status,2,c
 26592  006ED0  D7E4               	goto	l2839
 26593  006ED2  0A03               	xorlw	3	; case 62
 26594  006ED4  A4D8               	btfss	status,2,c
 26595  006ED6  0012               	return	
 26596  006ED8  D7E3               	goto	l2840
 26597  006EDA                     __end_of__parse_command_short:
 26598                           	opt stack 0
 26599                           tosu	equ	0xFFF
 26600                           tosh	equ	0xFFE
 26601                           tosl	equ	0xFFD
 26602                           pclath	equ	0xFFA
 26603                           tblptru	equ	0xFF8
 26604                           tblptrh	equ	0xFF7
 26605                           tblptrl	equ	0xFF6
 26606                           tablat	equ	0xFF5
 26607                           prodh	equ	0xFF4
 26608                           prodl	equ	0xFF3
 26609                           intcon	equ	0xFF2
 26610                           intcon2	equ	0xFF1
 26611                           intcon3	equ	0xFF0
 26612                           indf0	equ	0xFEF
 26613                           postinc0	equ	0xFEE
 26614                           fsr0h	equ	0xFEA
 26615                           fsr0l	equ	0xFE9
 26616                           wreg	equ	0xFE8
 26617                           indf1	equ	0xFE7
 26618                           postdec1	equ	0xFE5
 26619                           plusw1	equ	0xFE3
 26620                           fsr1h	equ	0xFE2
 26621                           fsr1l	equ	0xFE1
 26622                           indf2	equ	0xFDF
 26623                           postinc2	equ	0xFDE
 26624                           postdec2	equ	0xFDD
 26625                           plusw2	equ	0xFDB
 26626                           fsr2h	equ	0xFDA
 26627                           fsr2l	equ	0xFD9
 26628                           status	equ	0xFD8
 26629                           
 26630 ;; *************** function _system_delay_ms *****************
 26631 ;; Defined at:
 26632 ;;		line 64 in file "os.c"
 26633 ;; Parameters:    Size  Location     Type
 26634 ;;  ms              1    wreg     unsigned char 
 26635 ;; Auto vars:     Size  Location     Type
 26636 ;;  ms              1    1[COMRAM] unsigned char 
 26637 ;;  cntr            1    2[COMRAM] unsigned char 
 26638 ;; Return value:  Size  Location     Type
 26639 ;;                  1    wreg      void 
 26640 ;; Registers used:
 26641 ;;		wreg, status,2, status,0, cstack
 26642 ;; Tracked objects:
 26643 ;;		On entry : 0/0
 26644 ;;		On exit  : 0/0
 26645 ;;		Unchanged: 0/0
 26646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26650 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26651 ;;Total ram usage:        3 bytes
 26652 ;; Hardware stack levels used:    1
 26653 ;; This function calls:
 26654 ;;		Nothing
 26655 ;; This function is called by:
 26656 ;;		_system_minimal_init
 26657 ;;		__ui_encoder
 26658 ;;		__parse_command_short
 26659 ;;		_i2c_digipot_set_defaults
 26660 ;; This function uses a non-reentrant model
 26661 ;;
 26662                           
 26663                           	psect	text125
 26664  009EFE                     __ptext125:
 26665                           	opt stack 0
 26666  009EFE                     _system_delay_ms:
 26667                           	opt stack 28
 26668                           
 26669                           ;incstack = 0
 26670                           ;system_delay_ms@ms stored from wreg
 26671  009EFE  6E02               	movwf	system_delay_ms@ms,c
 26672                           
 26673                           ;os.c: 66: uint8_t cntr;;os.c: 67: for(cntr=0; cntr<ms; ++cntr)
 26674  009F00  0E00               	movlw	0
 26675  009F02  6E03               	movwf	system_delay_ms@cntr,c
 26676  009F04  D009               	goto	l1086
 26677  009F06                     
 26678                           ;os.c: 68: {;os.c: 69: _delay((unsigned long)((6)*(8000000/4000.0)));
 26679  009F06  0E10               	movlw	16
 26680  009F08  6E01               	movwf	??_system_delay_ms& (0+255),c
 26681  009F0A  0E94               	movlw	148
 26682  009F0C                     u14787:
 26683  009F0C  2EE8               	decfsz	wreg,f,c
 26684  009F0E  D7FE               	bra	u14787
 26685  009F10  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26686  009F12  D7FC               	bra	u14787
 26687  009F14  D000               	nop2	
 26688  009F16  2A03               	incf	system_delay_ms@cntr,f,c
 26689  009F18                     l1086:
 26690  009F18  5002               	movf	system_delay_ms@ms,w,c
 26691  009F1A  5C03               	subwf	system_delay_ms@cntr,w,c
 26692  009F1C  B0D8               	btfsc	status,0,c
 26693  009F1E  0012               	return	
 26694  009F20  D7F2               	goto	l1087
 26695  009F22                     __end_of_system_delay_ms:
 26696                           	opt stack 0
 26697                           tosu	equ	0xFFF
 26698                           tosh	equ	0xFFE
 26699                           tosl	equ	0xFFD
 26700                           pclath	equ	0xFFA
 26701                           tblptru	equ	0xFF8
 26702                           tblptrh	equ	0xFF7
 26703                           tblptrl	equ	0xFF6
 26704                           tablat	equ	0xFF5
 26705                           prodh	equ	0xFF4
 26706                           prodl	equ	0xFF3
 26707                           intcon	equ	0xFF2
 26708                           intcon2	equ	0xFF1
 26709                           intcon3	equ	0xFF0
 26710                           indf0	equ	0xFEF
 26711                           postinc0	equ	0xFEE
 26712                           fsr0h	equ	0xFEA
 26713                           fsr0l	equ	0xFE9
 26714                           wreg	equ	0xFE8
 26715                           indf1	equ	0xFE7
 26716                           postdec1	equ	0xFE5
 26717                           plusw1	equ	0xFE3
 26718                           fsr1h	equ	0xFE2
 26719                           fsr1l	equ	0xFE1
 26720                           indf2	equ	0xFDF
 26721                           postinc2	equ	0xFDE
 26722                           postdec2	equ	0xFDD
 26723                           plusw2	equ	0xFDB
 26724                           fsr2h	equ	0xFDA
 26725                           fsr2l	equ	0xFD9
 26726                           status	equ	0xFD8
 26727                           
 26728 ;; *************** function _reboot *****************
 26729 ;; Defined at:
 26730 ;;		line 260 in file "os.c"
 26731 ;; Parameters:    Size  Location     Type
 26732 ;;		None
 26733 ;; Auto vars:     Size  Location     Type
 26734 ;;		None
 26735 ;; Return value:  Size  Location     Type
 26736 ;;                  1    wreg      void 
 26737 ;; Registers used:
 26738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26739 ;; Tracked objects:
 26740 ;;		On entry : 0/0
 26741 ;;		On exit  : 0/0
 26742 ;;		Unchanged: 0/0
 26743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26748 ;;Total ram usage:        0 bytes
 26749 ;; Hardware stack levels used:    1
 26750 ;; Hardware stack levels required when called:    7
 26751 ;; This function calls:
 26752 ;;		_display_prepare
 26753 ;;		_display_update
 26754 ;;		_ui_get_status
 26755 ;; This function is called by:
 26756 ;;		__ui_encoder
 26757 ;;		__parse_command_short
 26758 ;; This function uses a non-reentrant model
 26759 ;;
 26760                           
 26761                           	psect	text126
 26762  00A0B6                     __ptext126:
 26763                           	opt stack 0
 26764  00A0B6                     _reboot:
 26765                           	opt stack 21
 26766                           
 26767                           ;os.c: 263: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26768                           
 26769                           ;incstack = 0
 26770  00A0B6  0E80               	movlw	128
 26771  00A0B8  0101               	movlb	1	; () banked
 26772  00A0BA  6F36               	movwf	(_os+5)& (0+255),b
 26773                           
 26774                           ; BSR set to: 1
 26775                           ;os.c: 264: display_prepare(os.display_mode);
 26776  00A0BC  5136               	movf	(_os+5)& (0+255),w,b
 26777  00A0BE  ECF9  F034         	call	_display_prepare
 26778                           
 26779                           ;os.c: 265: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26780  00A0C2  EC65  F051         	call	_ui_get_status	;wreg free
 26781  00A0C6  0A05               	xorlw	5
 26782  00A0C8  B4D8               	btfsc	status,2,c
 26783                           
 26784                           ;os.c: 266: {;os.c: 267: display_update();
 26785  00A0CA  ECF6  F045         	call	_display_update	;wreg free
 26786  00A0CE                     
 26787                           ;os.c: 268: };os.c: 271: while(1);
 26788  00A0CE  D7FF               	goto	l1113
 26789  00A0D0                     __end_of_reboot:
 26790                           	opt stack 0
 26791                           tosu	equ	0xFFF
 26792                           tosh	equ	0xFFE
 26793                           tosl	equ	0xFFD
 26794                           pclath	equ	0xFFA
 26795                           tblptru	equ	0xFF8
 26796                           tblptrh	equ	0xFF7
 26797                           tblptrl	equ	0xFF6
 26798                           tablat	equ	0xFF5
 26799                           prodh	equ	0xFF4
 26800                           prodl	equ	0xFF3
 26801                           intcon	equ	0xFF2
 26802                           intcon2	equ	0xFF1
 26803                           intcon3	equ	0xFF0
 26804                           indf0	equ	0xFEF
 26805                           postinc0	equ	0xFEE
 26806                           fsr0h	equ	0xFEA
 26807                           fsr0l	equ	0xFE9
 26808                           wreg	equ	0xFE8
 26809                           indf1	equ	0xFE7
 26810                           postdec1	equ	0xFE5
 26811                           plusw1	equ	0xFE3
 26812                           fsr1h	equ	0xFE2
 26813                           fsr1l	equ	0xFE1
 26814                           indf2	equ	0xFDF
 26815                           postinc2	equ	0xFDE
 26816                           postdec2	equ	0xFDD
 26817                           plusw2	equ	0xFDB
 26818                           fsr2h	equ	0xFDA
 26819                           fsr2l	equ	0xFD9
 26820                           status	equ	0xFD8
 26821                           
 26822 ;; *************** function _ui_get_status *****************
 26823 ;; Defined at:
 26824 ;;		line 105 in file "ui.c"
 26825 ;; Parameters:    Size  Location     Type
 26826 ;;		None
 26827 ;; Auto vars:     Size  Location     Type
 26828 ;;		None
 26829 ;; Return value:  Size  Location     Type
 26830 ;;                  1    wreg      enum E7932
 26831 ;; Registers used:
 26832 ;;		wreg, status,2
 26833 ;; Tracked objects:
 26834 ;;		On entry : 0/0
 26835 ;;		On exit  : 0/0
 26836 ;;		Unchanged: 0/0
 26837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26842 ;;Total ram usage:        0 bytes
 26843 ;; Hardware stack levels used:    1
 26844 ;; This function calls:
 26845 ;;		Nothing
 26846 ;; This function is called by:
 26847 ;;		_main
 26848 ;;		_reboot
 26849 ;;		__fill_buffer_get_status
 26850 ;; This function uses a non-reentrant model
 26851 ;;
 26852                           
 26853                           	psect	text127
 26854  00A2CA                     __ptext127:
 26855                           	opt stack 0
 26856  00A2CA                     _ui_get_status:
 26857                           	opt stack 27
 26858                           
 26859                           ;ui.c: 107: return userInterfaceStatus;
 26860                           
 26861                           ;incstack = 0
 26862  00A2CA  0100               	movlb	0	; () banked
 26863  00A2CC  51E4               	movf	_userInterfaceStatus& (0+255),w,b
 26864  00A2CE  0012               	return	
 26865  00A2D0                     __end_of_ui_get_status:
 26866                           	opt stack 0
 26867                           tosu	equ	0xFFF
 26868                           tosh	equ	0xFFE
 26869                           tosl	equ	0xFFD
 26870                           pclath	equ	0xFFA
 26871                           tblptru	equ	0xFF8
 26872                           tblptrh	equ	0xFF7
 26873                           tblptrl	equ	0xFF6
 26874                           tablat	equ	0xFF5
 26875                           prodh	equ	0xFF4
 26876                           prodl	equ	0xFF3
 26877                           intcon	equ	0xFF2
 26878                           intcon2	equ	0xFF1
 26879                           intcon3	equ	0xFF0
 26880                           indf0	equ	0xFEF
 26881                           postinc0	equ	0xFEE
 26882                           fsr0h	equ	0xFEA
 26883                           fsr0l	equ	0xFE9
 26884                           wreg	equ	0xFE8
 26885                           indf1	equ	0xFE7
 26886                           postdec1	equ	0xFE5
 26887                           plusw1	equ	0xFE3
 26888                           fsr1h	equ	0xFE2
 26889                           fsr1l	equ	0xFE1
 26890                           indf2	equ	0xFDF
 26891                           postinc2	equ	0xFDE
 26892                           postdec2	equ	0xFDD
 26893                           plusw2	equ	0xFDB
 26894                           fsr2h	equ	0xFDA
 26895                           fsr2l	equ	0xFD9
 26896                           status	equ	0xFD8
 26897                           
 26898 ;; *************** function _display_update *****************
 26899 ;; Defined at:
 26900 ;;		line 587 in file "display.c"
 26901 ;; Parameters:    Size  Location     Type
 26902 ;;		None
 26903 ;; Auto vars:     Size  Location     Type
 26904 ;;		None
 26905 ;; Return value:  Size  Location     Type
 26906 ;;                  1    wreg      void 
 26907 ;; Registers used:
 26908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26909 ;; Tracked objects:
 26910 ;;		On entry : 0/0
 26911 ;;		On exit  : 0/0
 26912 ;;		Unchanged: 0/0
 26913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26918 ;;Total ram usage:        0 bytes
 26919 ;; Hardware stack levels used:    1
 26920 ;; Hardware stack levels required when called:    4
 26921 ;; This function calls:
 26922 ;;		_i2c_display_cursor
 26923 ;;		_i2c_display_write_fixed
 26924 ;; This function is called by:
 26925 ;;		_main
 26926 ;;		_reboot
 26927 ;; This function uses a non-reentrant model
 26928 ;;
 26929                           
 26930                           	psect	text128
 26931  008BEC                     __ptext128:
 26932                           	opt stack 0
 26933  008BEC                     _display_update:
 26934                           	opt stack 23
 26935                           
 26936                           ;display.c: 589: i2c_display_cursor(0, 0);
 26937                           
 26938                           ; BSR set to: 0
 26939                           ;incstack = 0
 26940  008BEC  0E00               	movlw	0
 26941  008BEE  6E0E               	movwf	i2c_display_cursor@position,c
 26942  008BF0  0E00               	movlw	0
 26943  008BF2  EC91  F04F         	call	_i2c_display_cursor
 26944                           
 26945                           ;display.c: 590: i2c_display_write_fixed(&display_content[0][0], 20);
 26946  008BF6  0E00               	movlw	low _display_content
 26947  008BF8  6E06               	movwf	i2c_display_write_fixed@data,c
 26948  008BFA  0E02               	movlw	high _display_content
 26949  008BFC  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26950  008BFE  0E14               	movlw	20
 26951  008C00  6E08               	movwf	i2c_display_write_fixed@length,c
 26952  008C02  EC1D  F049         	call	_i2c_display_write_fixed	;wreg free
 26953                           
 26954                           ;display.c: 591: i2c_display_cursor(1, 0);
 26955  008C06  0E00               	movlw	0
 26956  008C08  6E0E               	movwf	i2c_display_cursor@position,c
 26957  008C0A  0E01               	movlw	1
 26958  008C0C  EC91  F04F         	call	_i2c_display_cursor
 26959                           
 26960                           ;display.c: 592: i2c_display_write_fixed(&display_content[1][0], 20);
 26961  008C10  0E14               	movlw	low (_display_content+20)
 26962  008C12  6E06               	movwf	i2c_display_write_fixed@data,c
 26963  008C14  0E02               	movlw	high (_display_content+20)
 26964  008C16  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26965  008C18  0E14               	movlw	20
 26966  008C1A  6E08               	movwf	i2c_display_write_fixed@length,c
 26967  008C1C  EC1D  F049         	call	_i2c_display_write_fixed	;wreg free
 26968                           
 26969                           ;display.c: 593: i2c_display_cursor(2, 0);
 26970  008C20  0E00               	movlw	0
 26971  008C22  6E0E               	movwf	i2c_display_cursor@position,c
 26972  008C24  0E02               	movlw	2
 26973  008C26  EC91  F04F         	call	_i2c_display_cursor
 26974                           
 26975                           ;display.c: 594: i2c_display_write_fixed(&display_content[2][0], 20);
 26976  008C2A  0E28               	movlw	low (_display_content+40)
 26977  008C2C  6E06               	movwf	i2c_display_write_fixed@data,c
 26978  008C2E  0E02               	movlw	high (_display_content+40)
 26979  008C30  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26980  008C32  0E14               	movlw	20
 26981  008C34  6E08               	movwf	i2c_display_write_fixed@length,c
 26982  008C36  EC1D  F049         	call	_i2c_display_write_fixed	;wreg free
 26983                           
 26984                           ;display.c: 595: i2c_display_cursor(3, 0);
 26985  008C3A  0E00               	movlw	0
 26986  008C3C  6E0E               	movwf	i2c_display_cursor@position,c
 26987  008C3E  0E03               	movlw	3
 26988  008C40  EC91  F04F         	call	_i2c_display_cursor
 26989                           
 26990                           ;display.c: 596: i2c_display_write_fixed(&display_content[3][0], 20);
 26991  008C44  0E3C               	movlw	low (_display_content+60)
 26992  008C46  6E06               	movwf	i2c_display_write_fixed@data,c
 26993  008C48  0E02               	movlw	high (_display_content+60)
 26994  008C4A  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26995  008C4C  0E14               	movlw	20
 26996  008C4E  6E08               	movwf	i2c_display_write_fixed@length,c
 26997  008C50  EC1D  F049         	call	_i2c_display_write_fixed	;wreg free
 26998  008C54  0012               	return		;funcret
 26999  008C56                     __end_of_display_update:
 27000                           	opt stack 0
 27001                           tosu	equ	0xFFF
 27002                           tosh	equ	0xFFE
 27003                           tosl	equ	0xFFD
 27004                           pclath	equ	0xFFA
 27005                           tblptru	equ	0xFF8
 27006                           tblptrh	equ	0xFF7
 27007                           tblptrl	equ	0xFF6
 27008                           tablat	equ	0xFF5
 27009                           prodh	equ	0xFF4
 27010                           prodl	equ	0xFF3
 27011                           intcon	equ	0xFF2
 27012                           intcon2	equ	0xFF1
 27013                           intcon3	equ	0xFF0
 27014                           indf0	equ	0xFEF
 27015                           postinc0	equ	0xFEE
 27016                           fsr0h	equ	0xFEA
 27017                           fsr0l	equ	0xFE9
 27018                           wreg	equ	0xFE8
 27019                           indf1	equ	0xFE7
 27020                           postdec1	equ	0xFE5
 27021                           plusw1	equ	0xFE3
 27022                           fsr1h	equ	0xFE2
 27023                           fsr1l	equ	0xFE1
 27024                           indf2	equ	0xFDF
 27025                           postinc2	equ	0xFDE
 27026                           postdec2	equ	0xFDD
 27027                           plusw2	equ	0xFDB
 27028                           fsr2h	equ	0xFDA
 27029                           fsr2l	equ	0xFD9
 27030                           status	equ	0xFD8
 27031                           
 27032 ;; *************** function _i2c_display_write_fixed *****************
 27033 ;; Defined at:
 27034 ;;		line 278 in file "i2c.c"
 27035 ;; Parameters:    Size  Location     Type
 27036 ;;  data            2    5[COMRAM] PTR unsigned char 
 27037 ;;		 -> display_content(80), 
 27038 ;;  length          1    7[COMRAM] unsigned char 
 27039 ;; Auto vars:     Size  Location     Type
 27040 ;;  pos             1    8[COMRAM] unsigned char 
 27041 ;; Return value:  Size  Location     Type
 27042 ;;                  1    wreg      void 
 27043 ;; Registers used:
 27044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27045 ;; Tracked objects:
 27046 ;;		On entry : 0/0
 27047 ;;		On exit  : 0/0
 27048 ;;		Unchanged: 0/0
 27049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27050 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27054 ;;Total ram usage:        4 bytes
 27055 ;; Hardware stack levels used:    1
 27056 ;; Hardware stack levels required when called:    1
 27057 ;; This function calls:
 27058 ;;		__i2c_send
 27059 ;;		__i2c_start
 27060 ;;		__i2c_stop
 27061 ;;		__i2c_wait_idle
 27062 ;;		_i2c_set_frequency
 27063 ;; This function is called by:
 27064 ;;		_display_update
 27065 ;; This function uses a non-reentrant model
 27066 ;;
 27067                           
 27068                           	psect	text129
 27069  00923A                     __ptext129:
 27070                           	opt stack 0
 27071  00923A                     _i2c_display_write_fixed:
 27072                           	opt stack 25
 27073                           
 27074                           ;i2c.c: 280: uint8_t pos;;i2c.c: 283: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27075                           
 27076                           ;incstack = 0
 27077  00923A  0E02               	movlw	2
 27078  00923C  ECA5  F04E         	call	_i2c_set_frequency
 27079                           
 27080                           ;i2c.c: 285: _i2c_wait_idle();
 27081  009240  EC42  F048         	call	__i2c_wait_idle	;wreg free
 27082                           
 27083                           ;i2c.c: 286: _i2c_start();
 27084  009244  EC51  F051         	call	__i2c_start	;wreg free
 27085                           
 27086                           ;i2c.c: 287: _i2c_wait_idle();
 27087  009248  EC42  F048         	call	__i2c_wait_idle	;wreg free
 27088                           
 27089                           ;i2c.c: 288: _i2c_send(0b01111000);
 27090  00924C  0E78               	movlw	120
 27091  00924E  EC55  F051         	call	__i2c_send
 27092                           
 27093                           ;i2c.c: 289: _i2c_wait_idle();
 27094  009252  EC42  F048         	call	__i2c_wait_idle	;wreg free
 27095                           
 27096                           ;i2c.c: 290: _i2c_send(0b01000000);
 27097  009256  0E40               	movlw	64
 27098  009258  EC55  F051         	call	__i2c_send
 27099                           
 27100                           ;i2c.c: 291: _i2c_wait_idle();
 27101  00925C  EC42  F048         	call	__i2c_wait_idle	;wreg free
 27102                           
 27103                           ;i2c.c: 294: for(pos=0; pos<length; ++pos)
 27104  009260  0E00               	movlw	0
 27105  009262  6E09               	movwf	i2c_display_write_fixed@pos,c
 27106  009264  D00E               	goto	l1228
 27107  009266                     
 27108                           ;i2c.c: 295: {;i2c.c: 296: _i2c_send(data[pos]);
 27109  009266  5009               	movf	i2c_display_write_fixed@pos,w,c
 27110  009268  0D01               	mullw	1
 27111  00926A  50F3               	movf	prodl,w,c
 27112  00926C  2406               	addwf	i2c_display_write_fixed@data,w,c
 27113  00926E  6ED9               	movwf	fsr2l,c
 27114  009270  50F4               	movf	prodh,w,c
 27115  009272  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 27116  009274  6EDA               	movwf	fsr2h,c
 27117  009276  50DF               	movf	indf2,w,c
 27118  009278  EC55  F051         	call	__i2c_send
 27119                           
 27120                           ;i2c.c: 297: _i2c_wait_idle();
 27121  00927C  EC42  F048         	call	__i2c_wait_idle	;wreg free
 27122  009280  2A09               	incf	i2c_display_write_fixed@pos,f,c
 27123  009282                     l1228:
 27124  009282  5008               	movf	i2c_display_write_fixed@length,w,c
 27125  009284  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 27126  009286  A0D8               	btfss	status,0,c
 27127  009288  D7EE               	goto	l1229
 27128                           
 27129                           ;i2c.c: 298: };i2c.c: 300: _i2c_stop();
 27130  00928A  EC4D  F051         	call	__i2c_stop	;wreg free
 27131  00928E  0012               	return		;funcret
 27132  009290                     __end_of_i2c_display_write_fixed:
 27133                           	opt stack 0
 27134                           tosu	equ	0xFFF
 27135                           tosh	equ	0xFFE
 27136                           tosl	equ	0xFFD
 27137                           pclath	equ	0xFFA
 27138                           tblptru	equ	0xFF8
 27139                           tblptrh	equ	0xFF7
 27140                           tblptrl	equ	0xFF6
 27141                           tablat	equ	0xFF5
 27142                           prodh	equ	0xFF4
 27143                           prodl	equ	0xFF3
 27144                           intcon	equ	0xFF2
 27145                           intcon2	equ	0xFF1
 27146                           intcon3	equ	0xFF0
 27147                           indf0	equ	0xFEF
 27148                           postinc0	equ	0xFEE
 27149                           fsr0h	equ	0xFEA
 27150                           fsr0l	equ	0xFE9
 27151                           wreg	equ	0xFE8
 27152                           indf1	equ	0xFE7
 27153                           postdec1	equ	0xFE5
 27154                           plusw1	equ	0xFE3
 27155                           fsr1h	equ	0xFE2
 27156                           fsr1l	equ	0xFE1
 27157                           indf2	equ	0xFDF
 27158                           postinc2	equ	0xFDE
 27159                           postdec2	equ	0xFDD
 27160                           plusw2	equ	0xFDB
 27161                           fsr2h	equ	0xFDA
 27162                           fsr2l	equ	0xFD9
 27163                           status	equ	0xFD8
 27164                           
 27165 ;; *************** function _i2c_display_cursor *****************
 27166 ;; Defined at:
 27167 ;;		line 238 in file "i2c.c"
 27168 ;; Parameters:    Size  Location     Type
 27169 ;;  line            1    wreg     unsigned char 
 27170 ;;  position        1   13[COMRAM] unsigned char 
 27171 ;; Auto vars:     Size  Location     Type
 27172 ;;  line            1   14[COMRAM] unsigned char 
 27173 ;;  address         1   15[COMRAM] unsigned char 
 27174 ;; Return value:  Size  Location     Type
 27175 ;;                  1    wreg      void 
 27176 ;; Registers used:
 27177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27178 ;; Tracked objects:
 27179 ;;		On entry : 0/0
 27180 ;;		On exit  : 0/0
 27181 ;;		Unchanged: 0/0
 27182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27186 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27187 ;;Total ram usage:        3 bytes
 27188 ;; Hardware stack levels used:    1
 27189 ;; Hardware stack levels required when called:    3
 27190 ;; This function calls:
 27191 ;;		__ic2_display_set_address
 27192 ;;		_i2c_set_frequency
 27193 ;; This function is called by:
 27194 ;;		_display_update
 27195 ;; This function uses a non-reentrant model
 27196 ;;
 27197                           
 27198                           	psect	text130
 27199  009F22                     __ptext130:
 27200                           	opt stack 0
 27201  009F22                     _i2c_display_cursor:
 27202                           	opt stack 23
 27203                           
 27204                           ;incstack = 0
 27205                           ;i2c_display_cursor@line stored from wreg
 27206  009F22  6E0F               	movwf	i2c_display_cursor@line,c
 27207                           
 27208                           ;i2c.c: 240: uint8_t address;;i2c.c: 243: line &= 0b11;
 27209  009F24  0E03               	movlw	3
 27210  009F26  160F               	andwf	i2c_display_cursor@line,f,c
 27211                           
 27212                           ;i2c.c: 244: address = line<<5;
 27213  009F28  380F               	swapf	i2c_display_cursor@line,w,c
 27214  009F2A  46E8               	rlncf	wreg,f,c
 27215  009F2C  0BE0               	andlw	224
 27216  009F2E  6E10               	movwf	i2c_display_cursor@address,c
 27217                           
 27218                           ;i2c.c: 245: position &= 0b11111;
 27219  009F30  0E1F               	movlw	31
 27220  009F32  160E               	andwf	i2c_display_cursor@position,f,c
 27221                           
 27222                           ;i2c.c: 246: address |= position;
 27223  009F34  500E               	movf	i2c_display_cursor@position,w,c
 27224  009F36  1210               	iorwf	i2c_display_cursor@address,f,c
 27225                           
 27226                           ;i2c.c: 249: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27227  009F38  0E02               	movlw	2
 27228  009F3A  ECA5  F04E         	call	_i2c_set_frequency
 27229                           
 27230                           ;i2c.c: 252: _ic2_display_set_address(address);
 27231  009F3E  5010               	movf	i2c_display_cursor@address,w,c
 27232  009F40  EC21  F04F         	call	__ic2_display_set_address
 27233  009F44  0012               	return		;funcret
 27234  009F46                     __end_of_i2c_display_cursor:
 27235                           	opt stack 0
 27236                           tosu	equ	0xFFF
 27237                           tosh	equ	0xFFE
 27238                           tosl	equ	0xFFD
 27239                           pclath	equ	0xFFA
 27240                           tblptru	equ	0xFF8
 27241                           tblptrh	equ	0xFF7
 27242                           tblptrl	equ	0xFF6
 27243                           tablat	equ	0xFF5
 27244                           prodh	equ	0xFF4
 27245                           prodl	equ	0xFF3
 27246                           intcon	equ	0xFF2
 27247                           intcon2	equ	0xFF1
 27248                           intcon3	equ	0xFF0
 27249                           indf0	equ	0xFEF
 27250                           postinc0	equ	0xFEE
 27251                           fsr0h	equ	0xFEA
 27252                           fsr0l	equ	0xFE9
 27253                           wreg	equ	0xFE8
 27254                           indf1	equ	0xFE7
 27255                           postdec1	equ	0xFE5
 27256                           plusw1	equ	0xFE3
 27257                           fsr1h	equ	0xFE2
 27258                           fsr1l	equ	0xFE1
 27259                           indf2	equ	0xFDF
 27260                           postinc2	equ	0xFDE
 27261                           postdec2	equ	0xFDD
 27262                           plusw2	equ	0xFDB
 27263                           fsr2h	equ	0xFDA
 27264                           fsr2l	equ	0xFD9
 27265                           status	equ	0xFD8
 27266                           
 27267 ;; *************** function __ic2_display_set_address *****************
 27268 ;; Defined at:
 27269 ;;		line 202 in file "i2c.c"
 27270 ;; Parameters:    Size  Location     Type
 27271 ;;  address         1    wreg     unsigned char 
 27272 ;; Auto vars:     Size  Location     Type
 27273 ;;  address         1   10[COMRAM] unsigned char 
 27274 ;;  data_array      2   11[COMRAM] unsigned char [2]
 27275 ;; Return value:  Size  Location     Type
 27276 ;;                  1    wreg      void 
 27277 ;; Registers used:
 27278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27279 ;; Tracked objects:
 27280 ;;		On entry : 0/0
 27281 ;;		On exit  : 0/0
 27282 ;;		Unchanged: 0/0
 27283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27285 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27287 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27288 ;;Total ram usage:        3 bytes
 27289 ;; Hardware stack levels used:    1
 27290 ;; Hardware stack levels required when called:    2
 27291 ;; This function calls:
 27292 ;;		__i2c_write
 27293 ;;		_i2c_set_frequency
 27294 ;; This function is called by:
 27295 ;;		_i2c_display_cursor
 27296 ;; This function uses a non-reentrant model
 27297 ;;
 27298                           
 27299                           	psect	text131
 27300  009E42                     __ptext131:
 27301                           	opt stack 0
 27302  009E42                     __ic2_display_set_address:
 27303                           	opt stack 23
 27304                           
 27305                           ;incstack = 0
 27306                           ;__ic2_display_set_address@address stored from wreg
 27307  009E42  6E0B               	movwf	__ic2_display_set_address@address,c
 27308                           
 27309                           ;i2c.c: 204: uint8_t data_array[2];;i2c.c: 205: data_array[0] = 0b00000000;
 27310  009E44  0E00               	movlw	0
 27311  009E46  6E0C               	movwf	__ic2_display_set_address@data_array,c
 27312                           
 27313                           ;i2c.c: 206: data_array[1] = 0b10000000 | address;
 27314  009E48  500B               	movf	__ic2_display_set_address@address,w,c
 27315  009E4A  0980               	iorlw	128
 27316  009E4C  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 27317                           
 27318                           ;i2c.c: 209: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27319  009E4E  0E02               	movlw	2
 27320  009E50  ECA5  F04E         	call	_i2c_set_frequency
 27321                           
 27322                           ;i2c.c: 212: _i2c_write(0b01111000, &data_array[0], 2);
 27323  009E54  0E0C               	movlw	low __ic2_display_set_address@data_array
 27324  009E56  6E06               	movwf	__i2c_write@data,c
 27325  009E58  0E00               	movlw	high __ic2_display_set_address@data_array
 27326  009E5A  6E07               	movwf	__i2c_write@data+1,c
 27327  009E5C  0E02               	movlw	2
 27328  009E5E  6E08               	movwf	__i2c_write@length,c
 27329  009E60  0E78               	movlw	120
 27330  009E62  EC38  F04B         	call	__i2c_write
 27331  009E66  0012               	return		;funcret
 27332  009E68                     __end_of__ic2_display_set_address:
 27333                           	opt stack 0
 27334                           tosu	equ	0xFFF
 27335                           tosh	equ	0xFFE
 27336                           tosl	equ	0xFFD
 27337                           pclath	equ	0xFFA
 27338                           tblptru	equ	0xFF8
 27339                           tblptrh	equ	0xFF7
 27340                           tblptrl	equ	0xFF6
 27341                           tablat	equ	0xFF5
 27342                           prodh	equ	0xFF4
 27343                           prodl	equ	0xFF3
 27344                           intcon	equ	0xFF2
 27345                           intcon2	equ	0xFF1
 27346                           intcon3	equ	0xFF0
 27347                           indf0	equ	0xFEF
 27348                           postinc0	equ	0xFEE
 27349                           fsr0h	equ	0xFEA
 27350                           fsr0l	equ	0xFE9
 27351                           wreg	equ	0xFE8
 27352                           indf1	equ	0xFE7
 27353                           postdec1	equ	0xFE5
 27354                           plusw1	equ	0xFE3
 27355                           fsr1h	equ	0xFE2
 27356                           fsr1l	equ	0xFE1
 27357                           indf2	equ	0xFDF
 27358                           postinc2	equ	0xFDE
 27359                           postdec2	equ	0xFDD
 27360                           plusw2	equ	0xFDB
 27361                           fsr2h	equ	0xFDA
 27362                           fsr2l	equ	0xFD9
 27363                           status	equ	0xFD8
 27364                           
 27365 ;; *************** function _display_prepare *****************
 27366 ;; Defined at:
 27367 ;;		line 292 in file "display.c"
 27368 ;; Parameters:    Size  Location     Type
 27369 ;;  mode            1    wreg     unsigned char 
 27370 ;; Auto vars:     Size  Location     Type
 27371 ;;  mode            1   40[COMRAM] unsigned char 
 27372 ;; Return value:  Size  Location     Type
 27373 ;;                  1    wreg      void 
 27374 ;; Registers used:
 27375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27376 ;; Tracked objects:
 27377 ;;		On entry : 0/0
 27378 ;;		On exit  : 0/0
 27379 ;;		Unchanged: 0/0
 27380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27384 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27385 ;;Total ram usage:        3 bytes
 27386 ;; Hardware stack levels used:    1
 27387 ;; Hardware stack levels required when called:    6
 27388 ;; This function calls:
 27389 ;;		__display_checked
 27390 ;;		__display_clear
 27391 ;;		__display_done
 27392 ;;		__display_failed
 27393 ;;		__display_found
 27394 ;;		__display_programming
 27395 ;;		__display_rebooting
 27396 ;;		__display_search
 27397 ;;		__display_start
 27398 ;;		__display_suspended
 27399 ;;		__display_verify
 27400 ;; This function is called by:
 27401 ;;		_main
 27402 ;;		_reboot
 27403 ;; This function uses a non-reentrant model
 27404 ;;
 27405                           
 27406                           	psect	text132
 27407  0069F2                     __ptext132:
 27408                           	opt stack 0
 27409  0069F2                     _display_prepare:
 27410                           	opt stack 21
 27411                           
 27412                           ;incstack = 0
 27413                           ;display_prepare@mode stored from wreg
 27414  0069F2  6E29               	movwf	display_prepare@mode,c
 27415                           
 27416                           ;display.c: 294: _display_clear();
 27417  0069F4  EC14  F04B         	call	__display_clear	;wreg free
 27418                           
 27419                           ;display.c: 296: switch(mode&0xF0)
 27420  0069F8  D01E               	goto	l1549
 27421  0069FA                     
 27422                           ;display.c: 299: _display_start();
 27423  0069FA  ECC1  F01B         	call	__display_start	;wreg free
 27424                           
 27425                           ;display.c: 300: break;
 27426  0069FE  D04D               	goto	l1561
 27427  006A00                     
 27428                           ;display.c: 303: _display_search();
 27429  006A00  EC1D  F026         	call	__display_search	;wreg free
 27430                           
 27431                           ;display.c: 304: break;
 27432  006A04  D04A               	goto	l1561
 27433  006A06                     
 27434                           ;display.c: 307: _display_found();
 27435  006A06  ECE5  F019         	call	__display_found	;wreg free
 27436                           
 27437                           ;display.c: 308: break;
 27438  006A0A  D047               	goto	l1561
 27439  006A0C                     
 27440                           ;display.c: 311: _display_verify();
 27441  006A0C  EC46  F029         	call	__display_verify	;wreg free
 27442                           
 27443                           ;display.c: 312: break;
 27444  006A10  D044               	goto	l1561
 27445  006A12                     
 27446                           ;display.c: 315: _display_checked();
 27447  006A12  ECDB  F01F         	call	__display_checked	;wreg free
 27448                           
 27449                           ;display.c: 316: break;
 27450  006A16  D041               	goto	l1561
 27451  006A18                     
 27452                           ;display.c: 319: _display_failed();
 27453  006A18  EC4D  F009         	call	__display_failed	;wreg free
 27454                           
 27455                           ;display.c: 320: break;
 27456  006A1C  D03E               	goto	l1561
 27457  006A1E                     
 27458                           ;display.c: 323: _display_programming();
 27459  006A1E  ECAD  F01C         	call	__display_programming	;wreg free
 27460                           
 27461                           ;display.c: 324: break;
 27462  006A22  D03B               	goto	l1561
 27463  006A24                     
 27464                           ;display.c: 327: _display_done();
 27465  006A24  EC97  F020         	call	__display_done	;wreg free
 27466                           
 27467                           ;display.c: 328: break;
 27468  006A28  D038               	goto	l1561
 27469  006A2A                     
 27470                           ;display.c: 331: _display_rebooting();
 27471  006A2A  EC48  F049         	call	__display_rebooting	;wreg free
 27472                           
 27473                           ;display.c: 332: break;
 27474  006A2E  D035               	goto	l1561
 27475  006A30                     
 27476                           ;display.c: 335: _display_suspended();
 27477  006A30  EC74  F025         	call	__display_suspended	;wreg free
 27478                           
 27479                           ;display.c: 337: }
 27480                           
 27481                           ;display.c: 336: break;
 27482  006A34  D032               	goto	l1561
 27483  006A36                     l1549:
 27484  006A36  5029               	movf	display_prepare@mode,w,c
 27485  006A38  0BF0               	andlw	240
 27486  006A3A  6E27               	movwf	??_display_prepare& (0+255),c
 27487  006A3C  6A28               	clrf	(??_display_prepare+1)& (0+255),c
 27488                           
 27489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27490                           ; Switch size 1, requested type "space"
 27491                           ; Number of cases is 1, Range of values is 0 to 0
 27492                           ; switch strategies available:
 27493                           ; Name         Instructions Cycles
 27494                           ; simple_byte            4     3 (average)
 27495                           ;	Chosen strategy is simple_byte
 27496  006A3E  5028               	movf	??_display_prepare+1,w,c
 27497  006A40  0A00               	xorlw	0	; case 0
 27498  006A42  A4D8               	btfss	status,2,c
 27499  006A44  D02A               	goto	l1561
 27500                           
 27501                           ; Switch size 1, requested type "space"
 27502                           ; Number of cases is 10, Range of values is 0 to 144
 27503                           ; switch strategies available:
 27504                           ; Name         Instructions Cycles
 27505                           ; simple_byte           31    16 (average)
 27506                           ;	Chosen strategy is simple_byte
 27507  006A46  5027               	movf	??_display_prepare,w,c
 27508  006A48  0A00               	xorlw	0	; case 0
 27509  006A4A  B4D8               	btfsc	status,2,c
 27510  006A4C  D7D6               	goto	l1550
 27511  006A4E  0A10               	xorlw	16	; case 16
 27512  006A50  B4D8               	btfsc	status,2,c
 27513  006A52  D7D6               	goto	l1552
 27514  006A54  0A30               	xorlw	48	; case 32
 27515  006A56  B4D8               	btfsc	status,2,c
 27516  006A58  D7D6               	goto	l1553
 27517  006A5A  0A10               	xorlw	16	; case 48
 27518  006A5C  B4D8               	btfsc	status,2,c
 27519  006A5E  D7D6               	goto	l1554
 27520  006A60  0A70               	xorlw	112	; case 64
 27521  006A62  B4D8               	btfsc	status,2,c
 27522  006A64  D7D6               	goto	l1555
 27523  006A66  0A10               	xorlw	16	; case 80
 27524  006A68  B4D8               	btfsc	status,2,c
 27525  006A6A  D7D6               	goto	l1556
 27526  006A6C  0A30               	xorlw	48	; case 96
 27527  006A6E  B4D8               	btfsc	status,2,c
 27528  006A70  D7D6               	goto	l1557
 27529  006A72  0A10               	xorlw	16	; case 112
 27530  006A74  B4D8               	btfsc	status,2,c
 27531  006A76  D7D6               	goto	l1558
 27532  006A78  0AF0               	xorlw	240	; case 128
 27533  006A7A  B4D8               	btfsc	status,2,c
 27534  006A7C  D7D6               	goto	l1559
 27535  006A7E  0A10               	xorlw	16	; case 144
 27536  006A80  B4D8               	btfsc	status,2,c
 27537  006A82  D7D6               	goto	l1560
 27538                           
 27539                           ;display.c: 340: switch((os.timeSlot>>5)&0b11)
 27540  006A84  D00A               	goto	l1561
 27541  006A86                     
 27542                           ;display.c: 343: display_content[0][17] = '.';
 27543  006A86  0E2E               	movlw	46
 27544  006A88  0102               	movlb	2	; () banked
 27545  006A8A  6F11               	movwf	(_display_content+17)& (0+255),b
 27546  006A8C                     l1563:
 27547                           
 27548                           ;display.c: 346: display_content[0][16] = '.';
 27549  006A8C  0E2E               	movlw	46
 27550  006A8E  0102               	movlb	2	; () banked
 27551  006A90  6F10               	movwf	(_display_content+16)& (0+255),b
 27552  006A92                     l1564:
 27553                           
 27554                           ;display.c: 349: display_content[0][15] = '.';
 27555  006A92  0E2E               	movlw	46
 27556  006A94  0102               	movlb	2	; () banked
 27557  006A96  6F0F               	movwf	(_display_content+15)& (0+255),b
 27558                           
 27559                           ;display.c: 351: }
 27560  006A98  D015               	goto	l1565
 27561  006A9A                     l1561:
 27562                           
 27563                           ; BSR set to: 2
 27564  006A9A  0101               	movlb	1	; () banked
 27565  006A9C  3933               	swapf	(_os+2)& (0+255),w,b
 27566  006A9E  42E8               	rrncf	wreg,f,c
 27567  006AA0  0B07               	andlw	7
 27568  006AA2  0B03               	andlw	3
 27569  006AA4  6E27               	movwf	??_display_prepare& (0+255),c
 27570  006AA6  6A28               	clrf	(??_display_prepare+1)& (0+255),c
 27571                           
 27572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27573                           ; Switch size 1, requested type "space"
 27574                           ; Number of cases is 1, Range of values is 0 to 0
 27575                           ; switch strategies available:
 27576                           ; Name         Instructions Cycles
 27577                           ; simple_byte            4     3 (average)
 27578                           ;	Chosen strategy is simple_byte
 27579  006AA8  5028               	movf	??_display_prepare+1,w,c
 27580  006AAA  0A00               	xorlw	0	; case 0
 27581  006AAC  A4D8               	btfss	status,2,c
 27582  006AAE  D00A               	goto	l1565
 27583                           
 27584                           ; BSR set to: 1
 27585                           ; Switch size 1, requested type "space"
 27586                           ; Number of cases is 3, Range of values is 1 to 3
 27587                           ; switch strategies available:
 27588                           ; Name         Instructions Cycles
 27589                           ; simple_byte           10     6 (average)
 27590                           ;	Chosen strategy is simple_byte
 27591  006AB0  5027               	movf	??_display_prepare,w,c
 27592  006AB2  0A01               	xorlw	1	; case 1
 27593  006AB4  B4D8               	btfsc	status,2,c
 27594  006AB6  D7ED               	goto	l1564
 27595  006AB8  0A03               	xorlw	3	; case 2
 27596  006ABA  B4D8               	btfsc	status,2,c
 27597  006ABC  D7E7               	goto	l1563
 27598  006ABE  0A01               	xorlw	1	; case 3
 27599  006AC0  B4D8               	btfsc	status,2,c
 27600  006AC2  D7E1               	goto	l1562
 27601  006AC4                     l1565:
 27602                           
 27603                           ;display.c: 355: if(INTCONbits.GIE)
 27604  006AC4  AEF2               	btfss	intcon,7,c	;volatile
 27605  006AC6  0012               	return	
 27606                           
 27607                           ;display.c: 356: {;display.c: 357: display_content[0][18] = 'I';
 27608  006AC8  0E49               	movlw	73
 27609  006ACA  0102               	movlb	2	; () banked
 27610  006ACC  6F12               	movwf	(_display_content+18)& (0+255),b
 27611  006ACE  0012               	return	
 27612  006AD0                     __end_of_display_prepare:
 27613                           	opt stack 0
 27614                           tosu	equ	0xFFF
 27615                           tosh	equ	0xFFE
 27616                           tosl	equ	0xFFD
 27617                           pclath	equ	0xFFA
 27618                           tblptru	equ	0xFF8
 27619                           tblptrh	equ	0xFF7
 27620                           tblptrl	equ	0xFF6
 27621                           tablat	equ	0xFF5
 27622                           prodh	equ	0xFF4
 27623                           prodl	equ	0xFF3
 27624                           intcon	equ	0xFF2
 27625                           intcon2	equ	0xFF1
 27626                           intcon3	equ	0xFF0
 27627                           indf0	equ	0xFEF
 27628                           postinc0	equ	0xFEE
 27629                           fsr0h	equ	0xFEA
 27630                           fsr0l	equ	0xFE9
 27631                           wreg	equ	0xFE8
 27632                           indf1	equ	0xFE7
 27633                           postdec1	equ	0xFE5
 27634                           plusw1	equ	0xFE3
 27635                           fsr1h	equ	0xFE2
 27636                           fsr1l	equ	0xFE1
 27637                           indf2	equ	0xFDF
 27638                           postinc2	equ	0xFDE
 27639                           postdec2	equ	0xFDD
 27640                           plusw2	equ	0xFDB
 27641                           fsr2h	equ	0xFDA
 27642                           fsr2l	equ	0xFD9
 27643                           status	equ	0xFD8
 27644                           
 27645 ;; *************** function __display_verify *****************
 27646 ;; Defined at:
 27647 ;;		line 427 in file "display.c"
 27648 ;; Parameters:    Size  Location     Type
 27649 ;;		None
 27650 ;; Auto vars:     Size  Location     Type
 27651 ;;  cntr            1   30[COMRAM] unsigned char 
 27652 ;;  start           1    0        unsigned char 
 27653 ;; Return value:  Size  Location     Type
 27654 ;;                  1    wreg      void 
 27655 ;; Registers used:
 27656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27657 ;; Tracked objects:
 27658 ;;		On entry : 0/0
 27659 ;;		On exit  : 0/0
 27660 ;;		Unchanged: 0/0
 27661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27665 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27666 ;;Total ram usage:        3 bytes
 27667 ;; Hardware stack levels used:    1
 27668 ;; Hardware stack levels required when called:    4
 27669 ;; This function calls:
 27670 ;;		__display_itoa_u16
 27671 ;;		_bootloader_get_entries
 27672 ;; This function is called by:
 27673 ;;		_display_prepare
 27674 ;; This function uses a non-reentrant model
 27675 ;;
 27676                           
 27677                           	psect	text133
 27678  00528C                     __ptext133:
 27679                           	opt stack 0
 27680  00528C                     __display_verify:
 27681                           	opt stack 22
 27682                           
 27683                           ;display.c: 429: uint8_t cntr;;display.c: 430: uint8_t start;;display.c: 431: cntr = 0;
 27684                           
 27685                           ;incstack = 0
 27686  00528C  0E00               	movlw	0
 27687  00528E  6E1F               	movwf	__display_verify@cntr,c
 27688                           
 27689                           ;display.c: 432: while(verify_line1[cntr])
 27690  005290  D017               	goto	l1618
 27691  005292                     
 27692                           ;display.c: 433: display_content[0][cntr] = verify_line1[cntr++];
 27693  005292  501F               	movf	__display_verify@cntr,w,c
 27694  005294  0D01               	mullw	1
 27695  005296  0EB8               	movlw	low _verify_line1
 27696  005298  24F3               	addwf	prodl,w,c
 27697  00529A  6EF6               	movwf	tblptrl,c
 27698  00529C  0EBD               	movlw	high _verify_line1
 27699  00529E  20F4               	addwfc	prodh,w,c
 27700  0052A0  6EF7               	movwf	tblptrh,c
 27701  0052A2                     	if	1	;There are 3 active tblptr bytes
 27702  0052A2  6AF8               	clrf	tblptru,c
 27703  0052A4  0E00               	movlw	low (__mediumconst shr (0+16))
 27704  0052A6  22F8               	addwfc	tblptru,f,c
 27705  0052A8                     	endif
 27706  0052A8  501F               	movf	__display_verify@cntr,w,c
 27707  0052AA  0D01               	mullw	1
 27708  0052AC  0E00               	movlw	low _display_content
 27709  0052AE  24F3               	addwf	prodl,w,c
 27710  0052B0  6ED9               	movwf	fsr2l,c
 27711  0052B2  0E02               	movlw	high _display_content
 27712  0052B4  20F4               	addwfc	prodh,w,c
 27713  0052B6  6EDA               	movwf	fsr2h,c
 27714  0052B8  0008               	tblrd		*
 27715  0052BA  CFF5 FFDF          	movff	tablat,indf2
 27716  0052BE  2A1F               	incf	__display_verify@cntr,f,c
 27717  0052C0                     l1618:
 27718  0052C0  501F               	movf	__display_verify@cntr,w,c
 27719  0052C2  0D01               	mullw	1
 27720  0052C4  0EB8               	movlw	low _verify_line1
 27721  0052C6  24F3               	addwf	prodl,w,c
 27722  0052C8  6EF6               	movwf	tblptrl,c
 27723  0052CA  0EBD               	movlw	high _verify_line1
 27724  0052CC  20F4               	addwfc	prodh,w,c
 27725  0052CE  6EF7               	movwf	tblptrh,c
 27726  0052D0                     	if	1	;There are 3 active tblptr bytes
 27727  0052D0  6AF8               	clrf	tblptru,c
 27728  0052D2  0E00               	movlw	low (__mediumconst shr (0+16))
 27729  0052D4  22F8               	addwfc	tblptru,f,c
 27730  0052D6                     	endif
 27731  0052D6  0008               	tblrd		*
 27732  0052D8  50F5               	movf	tablat,w,c
 27733  0052DA  0900               	iorlw	0
 27734  0052DC  A4D8               	btfss	status,2,c
 27735  0052DE  D7D9               	goto	l1619
 27736                           
 27737                           ;display.c: 434: cntr = 0;
 27738  0052E0  0E00               	movlw	0
 27739  0052E2  6E1F               	movwf	__display_verify@cntr,c
 27740                           
 27741                           ;display.c: 435: while(verify_line2[cntr])
 27742  0052E4  D017               	goto	l1621
 27743  0052E6                     
 27744                           ;display.c: 436: display_content[1][cntr] = verify_line2[cntr++];
 27745  0052E6  501F               	movf	__display_verify@cntr,w,c
 27746  0052E8  0D01               	mullw	1
 27747  0052EA  0E40               	movlw	low _verify_line2
 27748  0052EC  24F3               	addwf	prodl,w,c
 27749  0052EE  6EF6               	movwf	tblptrl,c
 27750  0052F0  0EBE               	movlw	high _verify_line2
 27751  0052F2  20F4               	addwfc	prodh,w,c
 27752  0052F4  6EF7               	movwf	tblptrh,c
 27753  0052F6                     	if	1	;There are 3 active tblptr bytes
 27754  0052F6  6AF8               	clrf	tblptru,c
 27755  0052F8  0E00               	movlw	low (__mediumconst shr (0+16))
 27756  0052FA  22F8               	addwfc	tblptru,f,c
 27757  0052FC                     	endif
 27758  0052FC  501F               	movf	__display_verify@cntr,w,c
 27759  0052FE  0D01               	mullw	1
 27760  005300  0E14               	movlw	low (_display_content+20)
 27761  005302  24F3               	addwf	prodl,w,c
 27762  005304  6ED9               	movwf	fsr2l,c
 27763  005306  0E02               	movlw	high (_display_content+20)
 27764  005308  20F4               	addwfc	prodh,w,c
 27765  00530A  6EDA               	movwf	fsr2h,c
 27766  00530C  0008               	tblrd		*
 27767  00530E  CFF5 FFDF          	movff	tablat,indf2
 27768  005312  2A1F               	incf	__display_verify@cntr,f,c
 27769  005314                     l1621:
 27770  005314  501F               	movf	__display_verify@cntr,w,c
 27771  005316  0D01               	mullw	1
 27772  005318  0E40               	movlw	low _verify_line2
 27773  00531A  24F3               	addwf	prodl,w,c
 27774  00531C  6EF6               	movwf	tblptrl,c
 27775  00531E  0EBE               	movlw	high _verify_line2
 27776  005320  20F4               	addwfc	prodh,w,c
 27777  005322  6EF7               	movwf	tblptrh,c
 27778  005324                     	if	1	;There are 3 active tblptr bytes
 27779  005324  6AF8               	clrf	tblptru,c
 27780  005326  0E00               	movlw	low (__mediumconst shr (0+16))
 27781  005328  22F8               	addwfc	tblptru,f,c
 27782  00532A                     	endif
 27783  00532A  0008               	tblrd		*
 27784  00532C  50F5               	movf	tablat,w,c
 27785  00532E  0900               	iorlw	0
 27786  005330  A4D8               	btfss	status,2,c
 27787  005332  D7D9               	goto	l1622
 27788                           
 27789                           ;display.c: 437: cntr = 0;
 27790  005334  0E00               	movlw	0
 27791  005336  6E1F               	movwf	__display_verify@cntr,c
 27792                           
 27793                           ;display.c: 438: while(verify_line3[cntr])
 27794  005338  D017               	goto	l1624
 27795  00533A                     
 27796                           ;display.c: 439: display_content[2][cntr] = verify_line3[cntr++];
 27797  00533A  501F               	movf	__display_verify@cntr,w,c
 27798  00533C  0D01               	mullw	1
 27799  00533E  0E88               	movlw	low _verify_line3
 27800  005340  24F3               	addwf	prodl,w,c
 27801  005342  6EF6               	movwf	tblptrl,c
 27802  005344  0EBE               	movlw	high _verify_line3
 27803  005346  20F4               	addwfc	prodh,w,c
 27804  005348  6EF7               	movwf	tblptrh,c
 27805  00534A                     	if	1	;There are 3 active tblptr bytes
 27806  00534A  6AF8               	clrf	tblptru,c
 27807  00534C  0E00               	movlw	low (__mediumconst shr (0+16))
 27808  00534E  22F8               	addwfc	tblptru,f,c
 27809  005350                     	endif
 27810  005350  501F               	movf	__display_verify@cntr,w,c
 27811  005352  0D01               	mullw	1
 27812  005354  0E28               	movlw	low (_display_content+40)
 27813  005356  24F3               	addwf	prodl,w,c
 27814  005358  6ED9               	movwf	fsr2l,c
 27815  00535A  0E02               	movlw	high (_display_content+40)
 27816  00535C  20F4               	addwfc	prodh,w,c
 27817  00535E  6EDA               	movwf	fsr2h,c
 27818  005360  0008               	tblrd		*
 27819  005362  CFF5 FFDF          	movff	tablat,indf2
 27820  005366  2A1F               	incf	__display_verify@cntr,f,c
 27821  005368                     l1624:
 27822  005368  501F               	movf	__display_verify@cntr,w,c
 27823  00536A  0D01               	mullw	1
 27824  00536C  0E88               	movlw	low _verify_line3
 27825  00536E  24F3               	addwf	prodl,w,c
 27826  005370  6EF6               	movwf	tblptrl,c
 27827  005372  0EBE               	movlw	high _verify_line3
 27828  005374  20F4               	addwfc	prodh,w,c
 27829  005376  6EF7               	movwf	tblptrh,c
 27830  005378                     	if	1	;There are 3 active tblptr bytes
 27831  005378  6AF8               	clrf	tblptru,c
 27832  00537A  0E00               	movlw	low (__mediumconst shr (0+16))
 27833  00537C  22F8               	addwfc	tblptru,f,c
 27834  00537E                     	endif
 27835  00537E  0008               	tblrd		*
 27836  005380  50F5               	movf	tablat,w,c
 27837  005382  0900               	iorlw	0
 27838  005384  A4D8               	btfss	status,2,c
 27839  005386  D7D9               	goto	l1625
 27840                           
 27841                           ;display.c: 440: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27842  005388  EC34  F051         	call	_bootloader_get_entries	;wreg free
 27843  00538C  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27844  005390  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27845  005394  501F               	movf	__display_verify@cntr,w,c
 27846  005396  6E1D               	movwf	??__display_verify& (0+255),c
 27847  005398  6A1E               	clrf	(??__display_verify+1)& (0+255),c
 27848  00539A  0E01               	movlw	1
 27849  00539C  261D               	addwf	??__display_verify,f,c
 27850  00539E  0E00               	movlw	0
 27851  0053A0  221E               	addwfc	??__display_verify+1,f,c
 27852  0053A2  0E28               	movlw	low (_display_content+40)
 27853  0053A4  241D               	addwf	??__display_verify,w,c
 27854  0053A6  6E1B               	movwf	__display_itoa_u16@text,c
 27855  0053A8  0E02               	movlw	high (_display_content+40)
 27856  0053AA  201E               	addwfc	??__display_verify+1,w,c
 27857  0053AC  6E1C               	movwf	__display_itoa_u16@text+1,c
 27858  0053AE  EC06  F03D         	call	__display_itoa_u16	;wreg free
 27859  0053B2  0012               	return		;funcret
 27860  0053B4                     __end_of__display_verify:
 27861                           	opt stack 0
 27862                           tosu	equ	0xFFF
 27863                           tosh	equ	0xFFE
 27864                           tosl	equ	0xFFD
 27865                           pclath	equ	0xFFA
 27866                           tblptru	equ	0xFF8
 27867                           tblptrh	equ	0xFF7
 27868                           tblptrl	equ	0xFF6
 27869                           tablat	equ	0xFF5
 27870                           prodh	equ	0xFF4
 27871                           prodl	equ	0xFF3
 27872                           intcon	equ	0xFF2
 27873                           intcon2	equ	0xFF1
 27874                           intcon3	equ	0xFF0
 27875                           indf0	equ	0xFEF
 27876                           postinc0	equ	0xFEE
 27877                           fsr0h	equ	0xFEA
 27878                           fsr0l	equ	0xFE9
 27879                           wreg	equ	0xFE8
 27880                           indf1	equ	0xFE7
 27881                           postdec1	equ	0xFE5
 27882                           plusw1	equ	0xFE3
 27883                           fsr1h	equ	0xFE2
 27884                           fsr1l	equ	0xFE1
 27885                           indf2	equ	0xFDF
 27886                           postinc2	equ	0xFDE
 27887                           postdec2	equ	0xFDD
 27888                           plusw2	equ	0xFDB
 27889                           fsr2h	equ	0xFDA
 27890                           fsr2l	equ	0xFD9
 27891                           status	equ	0xFD8
 27892                           
 27893 ;; *************** function __display_suspended *****************
 27894 ;; Defined at:
 27895 ;;		line 565 in file "display.c"
 27896 ;; Parameters:    Size  Location     Type
 27897 ;;		None
 27898 ;; Auto vars:     Size  Location     Type
 27899 ;;  cntr            1    0[COMRAM] unsigned char 
 27900 ;; Return value:  Size  Location     Type
 27901 ;;                  1    wreg      void 
 27902 ;; Registers used:
 27903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27904 ;; Tracked objects:
 27905 ;;		On entry : 0/0
 27906 ;;		On exit  : 0/0
 27907 ;;		Unchanged: 0/0
 27908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27913 ;;Total ram usage:        1 bytes
 27914 ;; Hardware stack levels used:    1
 27915 ;; This function calls:
 27916 ;;		Nothing
 27917 ;; This function is called by:
 27918 ;;		_display_prepare
 27919 ;; This function uses a non-reentrant model
 27920 ;;
 27921                           
 27922                           	psect	text134
 27923  004AE8                     __ptext134:
 27924                           	opt stack 0
 27925  004AE8                     __display_suspended:
 27926                           	opt stack 26
 27927                           
 27928                           ;display.c: 567: uint8_t cntr;;display.c: 570: cntr = 0;
 27929                           
 27930                           ;incstack = 0
 27931  004AE8  0E00               	movlw	0
 27932  004AEA  6E01               	movwf	__display_suspended@cntr,c
 27933                           
 27934                           ;display.c: 571: while(suspended_line1[cntr])
 27935  004AEC  D017               	goto	l1715
 27936  004AEE                     
 27937                           ;display.c: 572: display_content[0][cntr] = suspended_line1[cntr++];
 27938  004AEE  5001               	movf	__display_suspended@cntr,w,c
 27939  004AF0  0D01               	mullw	1
 27940  004AF2  0E38               	movlw	low _suspended_line1
 27941  004AF4  24F3               	addwf	prodl,w,c
 27942  004AF6  6EF6               	movwf	tblptrl,c
 27943  004AF8  0EBD               	movlw	high _suspended_line1
 27944  004AFA  20F4               	addwfc	prodh,w,c
 27945  004AFC  6EF7               	movwf	tblptrh,c
 27946  004AFE                     	if	1	;There are 3 active tblptr bytes
 27947  004AFE  6AF8               	clrf	tblptru,c
 27948  004B00  0E00               	movlw	low (__mediumconst shr (0+16))
 27949  004B02  22F8               	addwfc	tblptru,f,c
 27950  004B04                     	endif
 27951  004B04  5001               	movf	__display_suspended@cntr,w,c
 27952  004B06  0D01               	mullw	1
 27953  004B08  0E00               	movlw	low _display_content
 27954  004B0A  24F3               	addwf	prodl,w,c
 27955  004B0C  6ED9               	movwf	fsr2l,c
 27956  004B0E  0E02               	movlw	high _display_content
 27957  004B10  20F4               	addwfc	prodh,w,c
 27958  004B12  6EDA               	movwf	fsr2h,c
 27959  004B14  0008               	tblrd		*
 27960  004B16  CFF5 FFDF          	movff	tablat,indf2
 27961  004B1A  2A01               	incf	__display_suspended@cntr,f,c
 27962  004B1C                     l1715:
 27963  004B1C  5001               	movf	__display_suspended@cntr,w,c
 27964  004B1E  0D01               	mullw	1
 27965  004B20  0E38               	movlw	low _suspended_line1
 27966  004B22  24F3               	addwf	prodl,w,c
 27967  004B24  6EF6               	movwf	tblptrl,c
 27968  004B26  0EBD               	movlw	high _suspended_line1
 27969  004B28  20F4               	addwfc	prodh,w,c
 27970  004B2A  6EF7               	movwf	tblptrh,c
 27971  004B2C                     	if	1	;There are 3 active tblptr bytes
 27972  004B2C  6AF8               	clrf	tblptru,c
 27973  004B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 27974  004B30  22F8               	addwfc	tblptru,f,c
 27975  004B32                     	endif
 27976  004B32  0008               	tblrd		*
 27977  004B34  50F5               	movf	tablat,w,c
 27978  004B36  0900               	iorlw	0
 27979  004B38  A4D8               	btfss	status,2,c
 27980  004B3A  D7D9               	goto	l1716
 27981                           
 27982                           ;display.c: 574: cntr = 0;
 27983  004B3C  0E00               	movlw	0
 27984  004B3E  6E01               	movwf	__display_suspended@cntr,c
 27985                           
 27986                           ;display.c: 575: while(suspended_line2[cntr])
 27987  004B40  D017               	goto	l1718
 27988  004B42                     
 27989                           ;display.c: 576: display_content[1][cntr] = suspended_line2[cntr++];
 27990  004B42  5001               	movf	__display_suspended@cntr,w,c
 27991  004B44  0D01               	mullw	1
 27992  004B46  0E4D               	movlw	low _suspended_line2
 27993  004B48  24F3               	addwf	prodl,w,c
 27994  004B4A  6EF6               	movwf	tblptrl,c
 27995  004B4C  0EBE               	movlw	high _suspended_line2
 27996  004B4E  20F4               	addwfc	prodh,w,c
 27997  004B50  6EF7               	movwf	tblptrh,c
 27998  004B52                     	if	1	;There are 3 active tblptr bytes
 27999  004B52  6AF8               	clrf	tblptru,c
 28000  004B54  0E00               	movlw	low (__mediumconst shr (0+16))
 28001  004B56  22F8               	addwfc	tblptru,f,c
 28002  004B58                     	endif
 28003  004B58  5001               	movf	__display_suspended@cntr,w,c
 28004  004B5A  0D01               	mullw	1
 28005  004B5C  0E14               	movlw	low (_display_content+20)
 28006  004B5E  24F3               	addwf	prodl,w,c
 28007  004B60  6ED9               	movwf	fsr2l,c
 28008  004B62  0E02               	movlw	high (_display_content+20)
 28009  004B64  20F4               	addwfc	prodh,w,c
 28010  004B66  6EDA               	movwf	fsr2h,c
 28011  004B68  0008               	tblrd		*
 28012  004B6A  CFF5 FFDF          	movff	tablat,indf2
 28013  004B6E  2A01               	incf	__display_suspended@cntr,f,c
 28014  004B70                     l1718:
 28015  004B70  5001               	movf	__display_suspended@cntr,w,c
 28016  004B72  0D01               	mullw	1
 28017  004B74  0E4D               	movlw	low _suspended_line2
 28018  004B76  24F3               	addwf	prodl,w,c
 28019  004B78  6EF6               	movwf	tblptrl,c
 28020  004B7A  0EBE               	movlw	high _suspended_line2
 28021  004B7C  20F4               	addwfc	prodh,w,c
 28022  004B7E  6EF7               	movwf	tblptrh,c
 28023  004B80                     	if	1	;There are 3 active tblptr bytes
 28024  004B80  6AF8               	clrf	tblptru,c
 28025  004B82  0E00               	movlw	low (__mediumconst shr (0+16))
 28026  004B84  22F8               	addwfc	tblptru,f,c
 28027  004B86                     	endif
 28028  004B86  0008               	tblrd		*
 28029  004B88  50F5               	movf	tablat,w,c
 28030  004B8A  0900               	iorlw	0
 28031  004B8C  A4D8               	btfss	status,2,c
 28032  004B8E  D7D9               	goto	l1719
 28033                           
 28034                           ;display.c: 578: cntr = 0;
 28035  004B90  0E00               	movlw	0
 28036  004B92  6E01               	movwf	__display_suspended@cntr,c
 28037                           
 28038                           ;display.c: 579: while(suspended_line3[cntr])
 28039  004B94  D017               	goto	l1721
 28040  004B96                     
 28041                           ;display.c: 580: display_content[2][cntr] = suspended_line3[cntr++];
 28042  004B96  5001               	movf	__display_suspended@cntr,w,c
 28043  004B98  0D01               	mullw	1
 28044  004B9A  0EA5               	movlw	low _suspended_line3
 28045  004B9C  24F3               	addwf	prodl,w,c
 28046  004B9E  6EF6               	movwf	tblptrl,c
 28047  004BA0  0EBE               	movlw	high _suspended_line3
 28048  004BA2  20F4               	addwfc	prodh,w,c
 28049  004BA4  6EF7               	movwf	tblptrh,c
 28050  004BA6                     	if	1	;There are 3 active tblptr bytes
 28051  004BA6  6AF8               	clrf	tblptru,c
 28052  004BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 28053  004BAA  22F8               	addwfc	tblptru,f,c
 28054  004BAC                     	endif
 28055  004BAC  5001               	movf	__display_suspended@cntr,w,c
 28056  004BAE  0D01               	mullw	1
 28057  004BB0  0E28               	movlw	low (_display_content+40)
 28058  004BB2  24F3               	addwf	prodl,w,c
 28059  004BB4  6ED9               	movwf	fsr2l,c
 28060  004BB6  0E02               	movlw	high (_display_content+40)
 28061  004BB8  20F4               	addwfc	prodh,w,c
 28062  004BBA  6EDA               	movwf	fsr2h,c
 28063  004BBC  0008               	tblrd		*
 28064  004BBE  CFF5 FFDF          	movff	tablat,indf2
 28065  004BC2  2A01               	incf	__display_suspended@cntr,f,c
 28066  004BC4                     l1721:
 28067  004BC4  5001               	movf	__display_suspended@cntr,w,c
 28068  004BC6  0D01               	mullw	1
 28069  004BC8  0EA5               	movlw	low _suspended_line3
 28070  004BCA  24F3               	addwf	prodl,w,c
 28071  004BCC  6EF6               	movwf	tblptrl,c
 28072  004BCE  0EBE               	movlw	high _suspended_line3
 28073  004BD0  20F4               	addwfc	prodh,w,c
 28074  004BD2  6EF7               	movwf	tblptrh,c
 28075  004BD4                     	if	1	;There are 3 active tblptr bytes
 28076  004BD4  6AF8               	clrf	tblptru,c
 28077  004BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 28078  004BD8  22F8               	addwfc	tblptru,f,c
 28079  004BDA                     	endif
 28080  004BDA  0008               	tblrd		*
 28081  004BDC  50F5               	movf	tablat,w,c
 28082  004BDE  0900               	iorlw	0
 28083  004BE0  A4D8               	btfss	status,2,c
 28084  004BE2  D7D9               	goto	l1722
 28085                           
 28086                           ;display.c: 582: cntr = 0;
 28087  004BE4  0E00               	movlw	0
 28088  004BE6  6E01               	movwf	__display_suspended@cntr,c
 28089                           
 28090                           ;display.c: 583: while(suspended_line4[cntr])
 28091  004BE8  D017               	goto	l1724
 28092  004BEA                     
 28093                           ;display.c: 584: display_content[3][cntr] = suspended_line4[cntr++];
 28094  004BEA  5001               	movf	__display_suspended@cntr,w,c
 28095  004BEC  0D01               	mullw	1
 28096  004BEE  0E28               	movlw	low _suspended_line4
 28097  004BF0  24F3               	addwf	prodl,w,c
 28098  004BF2  6EF6               	movwf	tblptrl,c
 28099  004BF4  0EBD               	movlw	high _suspended_line4
 28100  004BF6  20F4               	addwfc	prodh,w,c
 28101  004BF8  6EF7               	movwf	tblptrh,c
 28102  004BFA                     	if	1	;There are 3 active tblptr bytes
 28103  004BFA  6AF8               	clrf	tblptru,c
 28104  004BFC  0E00               	movlw	low (__mediumconst shr (0+16))
 28105  004BFE  22F8               	addwfc	tblptru,f,c
 28106  004C00                     	endif
 28107  004C00  5001               	movf	__display_suspended@cntr,w,c
 28108  004C02  0D01               	mullw	1
 28109  004C04  0E3C               	movlw	low (_display_content+60)
 28110  004C06  24F3               	addwf	prodl,w,c
 28111  004C08  6ED9               	movwf	fsr2l,c
 28112  004C0A  0E02               	movlw	high (_display_content+60)
 28113  004C0C  20F4               	addwfc	prodh,w,c
 28114  004C0E  6EDA               	movwf	fsr2h,c
 28115  004C10  0008               	tblrd		*
 28116  004C12  CFF5 FFDF          	movff	tablat,indf2
 28117  004C16  2A01               	incf	__display_suspended@cntr,f,c
 28118  004C18                     l1724:
 28119  004C18  5001               	movf	__display_suspended@cntr,w,c
 28120  004C1A  0D01               	mullw	1
 28121  004C1C  0E28               	movlw	low _suspended_line4
 28122  004C1E  24F3               	addwf	prodl,w,c
 28123  004C20  6EF6               	movwf	tblptrl,c
 28124  004C22  0EBD               	movlw	high _suspended_line4
 28125  004C24  20F4               	addwfc	prodh,w,c
 28126  004C26  6EF7               	movwf	tblptrh,c
 28127  004C28                     	if	1	;There are 3 active tblptr bytes
 28128  004C28  6AF8               	clrf	tblptru,c
 28129  004C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 28130  004C2C  22F8               	addwfc	tblptru,f,c
 28131  004C2E                     	endif
 28132  004C2E  0008               	tblrd		*
 28133  004C30  50F5               	movf	tablat,w,c
 28134  004C32  0900               	iorlw	0
 28135  004C34  B4D8               	btfsc	status,2,c
 28136  004C36  0012               	return	
 28137  004C38  D7D8               	goto	l1725
 28138  004C3A                     __end_of__display_suspended:
 28139                           	opt stack 0
 28140                           tosu	equ	0xFFF
 28141                           tosh	equ	0xFFE
 28142                           tosl	equ	0xFFD
 28143                           pclath	equ	0xFFA
 28144                           tblptru	equ	0xFF8
 28145                           tblptrh	equ	0xFF7
 28146                           tblptrl	equ	0xFF6
 28147                           tablat	equ	0xFF5
 28148                           prodh	equ	0xFF4
 28149                           prodl	equ	0xFF3
 28150                           intcon	equ	0xFF2
 28151                           intcon2	equ	0xFF1
 28152                           intcon3	equ	0xFF0
 28153                           indf0	equ	0xFEF
 28154                           postinc0	equ	0xFEE
 28155                           fsr0h	equ	0xFEA
 28156                           fsr0l	equ	0xFE9
 28157                           wreg	equ	0xFE8
 28158                           indf1	equ	0xFE7
 28159                           postdec1	equ	0xFE5
 28160                           plusw1	equ	0xFE3
 28161                           fsr1h	equ	0xFE2
 28162                           fsr1l	equ	0xFE1
 28163                           indf2	equ	0xFDF
 28164                           postinc2	equ	0xFDE
 28165                           postdec2	equ	0xFDD
 28166                           plusw2	equ	0xFDB
 28167                           fsr2h	equ	0xFDA
 28168                           fsr2l	equ	0xFD9
 28169                           status	equ	0xFD8
 28170                           
 28171 ;; *************** function __display_start *****************
 28172 ;; Defined at:
 28173 ;;		line 361 in file "display.c"
 28174 ;; Parameters:    Size  Location     Type
 28175 ;;		None
 28176 ;; Auto vars:     Size  Location     Type
 28177 ;;  cntr            1   28[COMRAM] unsigned char 
 28178 ;; Return value:  Size  Location     Type
 28179 ;;                  1    wreg      void 
 28180 ;; Registers used:
 28181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28182 ;; Tracked objects:
 28183 ;;		On entry : 0/0
 28184 ;;		On exit  : 0/0
 28185 ;;		Unchanged: 0/0
 28186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28191 ;;Total ram usage:        1 bytes
 28192 ;; Hardware stack levels used:    1
 28193 ;; Hardware stack levels required when called:    4
 28194 ;; This function calls:
 28195 ;;		__display_itoa_u16
 28196 ;; This function is called by:
 28197 ;;		_display_prepare
 28198 ;; This function uses a non-reentrant model
 28199 ;;
 28200                           
 28201                           	psect	text135
 28202  003782                     __ptext135:
 28203                           	opt stack 0
 28204  003782                     __display_start:
 28205                           	opt stack 22
 28206                           
 28207                           ;display.c: 363: uint8_t cntr;;display.c: 364: cntr = 0;
 28208                           
 28209                           ;incstack = 0
 28210  003782  0E00               	movlw	0
 28211  003784  6E1D               	movwf	__display_start@cntr,c
 28212                           
 28213                           ;display.c: 365: while(start_line1[cntr])
 28214  003786  D017               	goto	l1570
 28215  003788                     
 28216                           ;display.c: 366: display_content[0][cntr] = start_line1[cntr++];
 28217  003788  501D               	movf	__display_start@cntr,w,c
 28218  00378A  0D01               	mullw	1
 28219  00378C  0EE8               	movlw	low _start_line1
 28220  00378E  24F3               	addwf	prodl,w,c
 28221  003790  6EF6               	movwf	tblptrl,c
 28222  003792  0EBD               	movlw	high _start_line1
 28223  003794  20F4               	addwfc	prodh,w,c
 28224  003796  6EF7               	movwf	tblptrh,c
 28225  003798                     	if	1	;There are 3 active tblptr bytes
 28226  003798  6AF8               	clrf	tblptru,c
 28227  00379A  0E00               	movlw	low (__mediumconst shr (0+16))
 28228  00379C  22F8               	addwfc	tblptru,f,c
 28229  00379E                     	endif
 28230  00379E  501D               	movf	__display_start@cntr,w,c
 28231  0037A0  0D01               	mullw	1
 28232  0037A2  0E00               	movlw	low _display_content
 28233  0037A4  24F3               	addwf	prodl,w,c
 28234  0037A6  6ED9               	movwf	fsr2l,c
 28235  0037A8  0E02               	movlw	high _display_content
 28236  0037AA  20F4               	addwfc	prodh,w,c
 28237  0037AC  6EDA               	movwf	fsr2h,c
 28238  0037AE  0008               	tblrd		*
 28239  0037B0  CFF5 FFDF          	movff	tablat,indf2
 28240  0037B4  2A1D               	incf	__display_start@cntr,f,c
 28241  0037B6                     l1570:
 28242  0037B6  501D               	movf	__display_start@cntr,w,c
 28243  0037B8  0D01               	mullw	1
 28244  0037BA  0EE8               	movlw	low _start_line1
 28245  0037BC  24F3               	addwf	prodl,w,c
 28246  0037BE  6EF6               	movwf	tblptrl,c
 28247  0037C0  0EBD               	movlw	high _start_line1
 28248  0037C2  20F4               	addwfc	prodh,w,c
 28249  0037C4  6EF7               	movwf	tblptrh,c
 28250  0037C6                     	if	1	;There are 3 active tblptr bytes
 28251  0037C6  6AF8               	clrf	tblptru,c
 28252  0037C8  0E00               	movlw	low (__mediumconst shr (0+16))
 28253  0037CA  22F8               	addwfc	tblptru,f,c
 28254  0037CC                     	endif
 28255  0037CC  0008               	tblrd		*
 28256  0037CE  50F5               	movf	tablat,w,c
 28257  0037D0  0900               	iorlw	0
 28258  0037D2  A4D8               	btfss	status,2,c
 28259  0037D4  D7D9               	goto	l1571
 28260                           
 28261                           ;display.c: 367: cntr = 0;
 28262  0037D6  0E00               	movlw	0
 28263  0037D8  6E1D               	movwf	__display_start@cntr,c
 28264                           
 28265                           ;display.c: 368: while(start_line2[cntr])
 28266  0037DA  D017               	goto	l1573
 28267  0037DC                     
 28268                           ;display.c: 369: display_content[1][cntr] = start_line2[cntr++];
 28269  0037DC  501D               	movf	__display_start@cntr,w,c
 28270  0037DE  0D01               	mullw	1
 28271  0037E0  0E60               	movlw	low _start_line2
 28272  0037E2  24F3               	addwf	prodl,w,c
 28273  0037E4  6EF6               	movwf	tblptrl,c
 28274  0037E6  0EBE               	movlw	high _start_line2
 28275  0037E8  20F4               	addwfc	prodh,w,c
 28276  0037EA  6EF7               	movwf	tblptrh,c
 28277  0037EC                     	if	1	;There are 3 active tblptr bytes
 28278  0037EC  6AF8               	clrf	tblptru,c
 28279  0037EE  0E00               	movlw	low (__mediumconst shr (0+16))
 28280  0037F0  22F8               	addwfc	tblptru,f,c
 28281  0037F2                     	endif
 28282  0037F2  501D               	movf	__display_start@cntr,w,c
 28283  0037F4  0D01               	mullw	1
 28284  0037F6  0E14               	movlw	low (_display_content+20)
 28285  0037F8  24F3               	addwf	prodl,w,c
 28286  0037FA  6ED9               	movwf	fsr2l,c
 28287  0037FC  0E02               	movlw	high (_display_content+20)
 28288  0037FE  20F4               	addwfc	prodh,w,c
 28289  003800  6EDA               	movwf	fsr2h,c
 28290  003802  0008               	tblrd		*
 28291  003804  CFF5 FFDF          	movff	tablat,indf2
 28292  003808  2A1D               	incf	__display_start@cntr,f,c
 28293  00380A                     l1573:
 28294  00380A  501D               	movf	__display_start@cntr,w,c
 28295  00380C  0D01               	mullw	1
 28296  00380E  0E60               	movlw	low _start_line2
 28297  003810  24F3               	addwf	prodl,w,c
 28298  003812  6EF6               	movwf	tblptrl,c
 28299  003814  0EBE               	movlw	high _start_line2
 28300  003816  20F4               	addwfc	prodh,w,c
 28301  003818  6EF7               	movwf	tblptrh,c
 28302  00381A                     	if	1	;There are 3 active tblptr bytes
 28303  00381A  6AF8               	clrf	tblptru,c
 28304  00381C  0E00               	movlw	low (__mediumconst shr (0+16))
 28305  00381E  22F8               	addwfc	tblptru,f,c
 28306  003820                     	endif
 28307  003820  0008               	tblrd		*
 28308  003822  50F5               	movf	tablat,w,c
 28309  003824  0900               	iorlw	0
 28310  003826  A4D8               	btfss	status,2,c
 28311  003828  D7D9               	goto	l1574
 28312                           
 28313                           ;display.c: 370: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 28314  00382A  0E00               	movlw	0
 28315  00382C  6E1A               	movwf	__display_itoa_u16@value+1,c
 28316  00382E  0E00               	movlw	0
 28317  003830  6E19               	movwf	__display_itoa_u16@value,c
 28318  003832  501D               	movf	__display_start@cntr,w,c
 28319  003834  0D01               	mullw	1
 28320  003836  0E14               	movlw	low (_display_content+20)
 28321  003838  24F3               	addwf	prodl,w,c
 28322  00383A  6E1B               	movwf	__display_itoa_u16@text,c
 28323  00383C  0E02               	movlw	high (_display_content+20)
 28324  00383E  20F4               	addwfc	prodh,w,c
 28325  003840  6E1C               	movwf	__display_itoa_u16@text+1,c
 28326  003842  EC06  F03D         	call	__display_itoa_u16	;wreg free
 28327  003846  261D               	addwf	__display_start@cntr,f,c
 28328                           
 28329                           ;display.c: 371: display_content[1][cntr++] = '.';
 28330  003848  501D               	movf	__display_start@cntr,w,c
 28331  00384A  0D01               	mullw	1
 28332  00384C  0E14               	movlw	low (_display_content+20)
 28333  00384E  24F3               	addwf	prodl,w,c
 28334  003850  6ED9               	movwf	fsr2l,c
 28335  003852  0E02               	movlw	high (_display_content+20)
 28336  003854  20F4               	addwfc	prodh,w,c
 28337  003856  6EDA               	movwf	fsr2h,c
 28338  003858  0E2E               	movlw	46
 28339  00385A  6EDF               	movwf	indf2,c
 28340  00385C  2A1D               	incf	__display_start@cntr,f,c
 28341                           
 28342                           ;display.c: 372: cntr += _display_itoa_u16(0x04, &display_content[1][cntr]);
 28343  00385E  0E00               	movlw	0
 28344  003860  6E1A               	movwf	__display_itoa_u16@value+1,c
 28345  003862  0E04               	movlw	4
 28346  003864  6E19               	movwf	__display_itoa_u16@value,c
 28347  003866  501D               	movf	__display_start@cntr,w,c
 28348  003868  0D01               	mullw	1
 28349  00386A  0E14               	movlw	low (_display_content+20)
 28350  00386C  24F3               	addwf	prodl,w,c
 28351  00386E  6E1B               	movwf	__display_itoa_u16@text,c
 28352  003870  0E02               	movlw	high (_display_content+20)
 28353  003872  20F4               	addwfc	prodh,w,c
 28354  003874  6E1C               	movwf	__display_itoa_u16@text+1,c
 28355  003876  EC06  F03D         	call	__display_itoa_u16	;wreg free
 28356  00387A  261D               	addwf	__display_start@cntr,f,c
 28357                           
 28358                           ;display.c: 373: display_content[1][cntr++] = '.';
 28359  00387C  501D               	movf	__display_start@cntr,w,c
 28360  00387E  0D01               	mullw	1
 28361  003880  0E14               	movlw	low (_display_content+20)
 28362  003882  24F3               	addwf	prodl,w,c
 28363  003884  6ED9               	movwf	fsr2l,c
 28364  003886  0E02               	movlw	high (_display_content+20)
 28365  003888  20F4               	addwfc	prodh,w,c
 28366  00388A  6EDA               	movwf	fsr2h,c
 28367  00388C  0E2E               	movlw	46
 28368  00388E  6EDF               	movwf	indf2,c
 28369  003890  2A1D               	incf	__display_start@cntr,f,c
 28370                           
 28371                           ;display.c: 374: cntr += _display_itoa_u16(0x01, &display_content[1][cntr]);
 28372  003892  0E00               	movlw	0
 28373  003894  6E1A               	movwf	__display_itoa_u16@value+1,c
 28374  003896  0E01               	movlw	1
 28375  003898  6E19               	movwf	__display_itoa_u16@value,c
 28376  00389A  501D               	movf	__display_start@cntr,w,c
 28377  00389C  0D01               	mullw	1
 28378  00389E  0E14               	movlw	low (_display_content+20)
 28379  0038A0  24F3               	addwf	prodl,w,c
 28380  0038A2  6E1B               	movwf	__display_itoa_u16@text,c
 28381  0038A4  0E02               	movlw	high (_display_content+20)
 28382  0038A6  20F4               	addwfc	prodh,w,c
 28383  0038A8  6E1C               	movwf	__display_itoa_u16@text+1,c
 28384  0038AA  EC06  F03D         	call	__display_itoa_u16	;wreg free
 28385  0038AE  261D               	addwf	__display_start@cntr,f,c
 28386                           
 28387                           ;display.c: 375: cntr = 0;
 28388  0038B0  0E00               	movlw	0
 28389  0038B2  6E1D               	movwf	__display_start@cntr,c
 28390                           
 28391                           ;display.c: 376: while(start_line3[cntr])
 28392  0038B4  D017               	goto	l1576
 28393  0038B6                     
 28394                           ;display.c: 377: display_content[2][cntr] = start_line3[cntr++];
 28395  0038B6  501D               	movf	__display_start@cntr,w,c
 28396  0038B8  0D01               	mullw	1
 28397  0038BA  0EA6               	movlw	low _start_line3
 28398  0038BC  24F3               	addwf	prodl,w,c
 28399  0038BE  6EF6               	movwf	tblptrl,c
 28400  0038C0  0EBE               	movlw	high _start_line3
 28401  0038C2  20F4               	addwfc	prodh,w,c
 28402  0038C4  6EF7               	movwf	tblptrh,c
 28403  0038C6                     	if	1	;There are 3 active tblptr bytes
 28404  0038C6  6AF8               	clrf	tblptru,c
 28405  0038C8  0E00               	movlw	low (__mediumconst shr (0+16))
 28406  0038CA  22F8               	addwfc	tblptru,f,c
 28407  0038CC                     	endif
 28408  0038CC  501D               	movf	__display_start@cntr,w,c
 28409  0038CE  0D01               	mullw	1
 28410  0038D0  0E28               	movlw	low (_display_content+40)
 28411  0038D2  24F3               	addwf	prodl,w,c
 28412  0038D4  6ED9               	movwf	fsr2l,c
 28413  0038D6  0E02               	movlw	high (_display_content+40)
 28414  0038D8  20F4               	addwfc	prodh,w,c
 28415  0038DA  6EDA               	movwf	fsr2h,c
 28416  0038DC  0008               	tblrd		*
 28417  0038DE  CFF5 FFDF          	movff	tablat,indf2
 28418  0038E2  2A1D               	incf	__display_start@cntr,f,c
 28419  0038E4                     l1576:
 28420  0038E4  501D               	movf	__display_start@cntr,w,c
 28421  0038E6  0D01               	mullw	1
 28422  0038E8  0EA6               	movlw	low _start_line3
 28423  0038EA  24F3               	addwf	prodl,w,c
 28424  0038EC  6EF6               	movwf	tblptrl,c
 28425  0038EE  0EBE               	movlw	high _start_line3
 28426  0038F0  20F4               	addwfc	prodh,w,c
 28427  0038F2  6EF7               	movwf	tblptrh,c
 28428  0038F4                     	if	1	;There are 3 active tblptr bytes
 28429  0038F4  6AF8               	clrf	tblptru,c
 28430  0038F6  0E00               	movlw	low (__mediumconst shr (0+16))
 28431  0038F8  22F8               	addwfc	tblptru,f,c
 28432  0038FA                     	endif
 28433  0038FA  0008               	tblrd		*
 28434  0038FC  50F5               	movf	tablat,w,c
 28435  0038FE  0900               	iorlw	0
 28436  003900  A4D8               	btfss	status,2,c
 28437  003902  D7D9               	goto	l1577
 28438                           
 28439                           ;display.c: 378: cntr = 0;
 28440  003904  0E00               	movlw	0
 28441  003906  6E1D               	movwf	__display_start@cntr,c
 28442                           
 28443                           ;display.c: 379: while(start_line4[cntr])
 28444  003908  D017               	goto	l1579
 28445  00390A                     
 28446                           ;display.c: 380: display_content[3][cntr] = start_line4[cntr++];
 28447  00390A  501D               	movf	__display_start@cntr,w,c
 28448  00390C  0D01               	mullw	1
 28449  00390E  0E16               	movlw	low _start_line4
 28450  003910  24F3               	addwf	prodl,w,c
 28451  003912  6EF6               	movwf	tblptrl,c
 28452  003914  0EBE               	movlw	high _start_line4
 28453  003916  20F4               	addwfc	prodh,w,c
 28454  003918  6EF7               	movwf	tblptrh,c
 28455  00391A                     	if	1	;There are 3 active tblptr bytes
 28456  00391A  6AF8               	clrf	tblptru,c
 28457  00391C  0E00               	movlw	low (__mediumconst shr (0+16))
 28458  00391E  22F8               	addwfc	tblptru,f,c
 28459  003920                     	endif
 28460  003920  501D               	movf	__display_start@cntr,w,c
 28461  003922  0D01               	mullw	1
 28462  003924  0E3C               	movlw	low (_display_content+60)
 28463  003926  24F3               	addwf	prodl,w,c
 28464  003928  6ED9               	movwf	fsr2l,c
 28465  00392A  0E02               	movlw	high (_display_content+60)
 28466  00392C  20F4               	addwfc	prodh,w,c
 28467  00392E  6EDA               	movwf	fsr2h,c
 28468  003930  0008               	tblrd		*
 28469  003932  CFF5 FFDF          	movff	tablat,indf2
 28470  003936  2A1D               	incf	__display_start@cntr,f,c
 28471  003938                     l1579:
 28472  003938  501D               	movf	__display_start@cntr,w,c
 28473  00393A  0D01               	mullw	1
 28474  00393C  0E16               	movlw	low _start_line4
 28475  00393E  24F3               	addwf	prodl,w,c
 28476  003940  6EF6               	movwf	tblptrl,c
 28477  003942  0EBE               	movlw	high _start_line4
 28478  003944  20F4               	addwfc	prodh,w,c
 28479  003946  6EF7               	movwf	tblptrh,c
 28480  003948                     	if	1	;There are 3 active tblptr bytes
 28481  003948  6AF8               	clrf	tblptru,c
 28482  00394A  0E00               	movlw	low (__mediumconst shr (0+16))
 28483  00394C  22F8               	addwfc	tblptru,f,c
 28484  00394E                     	endif
 28485  00394E  0008               	tblrd		*
 28486  003950  50F5               	movf	tablat,w,c
 28487  003952  0900               	iorlw	0
 28488  003954  B4D8               	btfsc	status,2,c
 28489  003956  0012               	return	
 28490  003958  D7D8               	goto	l1580
 28491  00395A                     __end_of__display_start:
 28492                           	opt stack 0
 28493                           tosu	equ	0xFFF
 28494                           tosh	equ	0xFFE
 28495                           tosl	equ	0xFFD
 28496                           pclath	equ	0xFFA
 28497                           tblptru	equ	0xFF8
 28498                           tblptrh	equ	0xFF7
 28499                           tblptrl	equ	0xFF6
 28500                           tablat	equ	0xFF5
 28501                           prodh	equ	0xFF4
 28502                           prodl	equ	0xFF3
 28503                           intcon	equ	0xFF2
 28504                           intcon2	equ	0xFF1
 28505                           intcon3	equ	0xFF0
 28506                           indf0	equ	0xFEF
 28507                           postinc0	equ	0xFEE
 28508                           fsr0h	equ	0xFEA
 28509                           fsr0l	equ	0xFE9
 28510                           wreg	equ	0xFE8
 28511                           indf1	equ	0xFE7
 28512                           postdec1	equ	0xFE5
 28513                           plusw1	equ	0xFE3
 28514                           fsr1h	equ	0xFE2
 28515                           fsr1l	equ	0xFE1
 28516                           indf2	equ	0xFDF
 28517                           postinc2	equ	0xFDE
 28518                           postdec2	equ	0xFDD
 28519                           plusw2	equ	0xFDB
 28520                           fsr2h	equ	0xFDA
 28521                           fsr2l	equ	0xFD9
 28522                           status	equ	0xFD8
 28523                           
 28524 ;; *************** function __display_search *****************
 28525 ;; Defined at:
 28526 ;;		line 383 in file "display.c"
 28527 ;; Parameters:    Size  Location     Type
 28528 ;;		None
 28529 ;; Auto vars:     Size  Location     Type
 28530 ;;  cntr            1    0[COMRAM] unsigned char 
 28531 ;; Return value:  Size  Location     Type
 28532 ;;                  1    wreg      void 
 28533 ;; Registers used:
 28534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28535 ;; Tracked objects:
 28536 ;;		On entry : 0/0
 28537 ;;		On exit  : 0/0
 28538 ;;		Unchanged: 0/0
 28539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28544 ;;Total ram usage:        1 bytes
 28545 ;; Hardware stack levels used:    1
 28546 ;; This function calls:
 28547 ;;		Nothing
 28548 ;; This function is called by:
 28549 ;;		_display_prepare
 28550 ;; This function uses a non-reentrant model
 28551 ;;
 28552                           
 28553                           	psect	text136
 28554  004C3A                     __ptext136:
 28555                           	opt stack 0
 28556  004C3A                     __display_search:
 28557                           	opt stack 26
 28558                           
 28559                           ;display.c: 385: uint8_t cntr;;display.c: 386: cntr = 0;
 28560                           
 28561                           ;incstack = 0
 28562  004C3A  0E00               	movlw	0
 28563  004C3C  6E01               	movwf	__display_search@cntr,c
 28564                           
 28565                           ;display.c: 387: while(search_line1[cntr])
 28566  004C3E  D017               	goto	l1585
 28567  004C40                     
 28568                           ;display.c: 388: display_content[0][cntr] = search_line1[cntr++];
 28569  004C40  5001               	movf	__display_search@cntr,w,c
 28570  004C42  0D01               	mullw	1
 28571  004C44  0ED8               	movlw	low _search_line1
 28572  004C46  24F3               	addwf	prodl,w,c
 28573  004C48  6EF6               	movwf	tblptrl,c
 28574  004C4A  0EBD               	movlw	high _search_line1
 28575  004C4C  20F4               	addwfc	prodh,w,c
 28576  004C4E  6EF7               	movwf	tblptrh,c
 28577  004C50                     	if	1	;There are 3 active tblptr bytes
 28578  004C50  6AF8               	clrf	tblptru,c
 28579  004C52  0E00               	movlw	low (__mediumconst shr (0+16))
 28580  004C54  22F8               	addwfc	tblptru,f,c
 28581  004C56                     	endif
 28582  004C56  5001               	movf	__display_search@cntr,w,c
 28583  004C58  0D01               	mullw	1
 28584  004C5A  0E00               	movlw	low _display_content
 28585  004C5C  24F3               	addwf	prodl,w,c
 28586  004C5E  6ED9               	movwf	fsr2l,c
 28587  004C60  0E02               	movlw	high _display_content
 28588  004C62  20F4               	addwfc	prodh,w,c
 28589  004C64  6EDA               	movwf	fsr2h,c
 28590  004C66  0008               	tblrd		*
 28591  004C68  CFF5 FFDF          	movff	tablat,indf2
 28592  004C6C  2A01               	incf	__display_search@cntr,f,c
 28593  004C6E                     l1585:
 28594  004C6E  5001               	movf	__display_search@cntr,w,c
 28595  004C70  0D01               	mullw	1
 28596  004C72  0ED8               	movlw	low _search_line1
 28597  004C74  24F3               	addwf	prodl,w,c
 28598  004C76  6EF6               	movwf	tblptrl,c
 28599  004C78  0EBD               	movlw	high _search_line1
 28600  004C7A  20F4               	addwfc	prodh,w,c
 28601  004C7C  6EF7               	movwf	tblptrh,c
 28602  004C7E                     	if	1	;There are 3 active tblptr bytes
 28603  004C7E  6AF8               	clrf	tblptru,c
 28604  004C80  0E00               	movlw	low (__mediumconst shr (0+16))
 28605  004C82  22F8               	addwfc	tblptru,f,c
 28606  004C84                     	endif
 28607  004C84  0008               	tblrd		*
 28608  004C86  50F5               	movf	tablat,w,c
 28609  004C88  0900               	iorlw	0
 28610  004C8A  A4D8               	btfss	status,2,c
 28611  004C8C  D7D9               	goto	l1586
 28612                           
 28613                           ;display.c: 389: cntr = 0;
 28614  004C8E  0E00               	movlw	0
 28615  004C90  6E01               	movwf	__display_search@cntr,c
 28616                           
 28617                           ;display.c: 390: while(search_line2[cntr])
 28618  004C92  D017               	goto	l1588
 28619  004C94                     
 28620                           ;display.c: 391: display_content[1][cntr] = search_line2[cntr++];
 28621  004C94  5001               	movf	__display_search@cntr,w,c
 28622  004C96  0D01               	mullw	1
 28623  004C98  0E17               	movlw	low _search_line2
 28624  004C9A  24F3               	addwf	prodl,w,c
 28625  004C9C  6EF6               	movwf	tblptrl,c
 28626  004C9E  0EBD               	movlw	high _search_line2
 28627  004CA0  20F4               	addwfc	prodh,w,c
 28628  004CA2  6EF7               	movwf	tblptrh,c
 28629  004CA4                     	if	1	;There are 3 active tblptr bytes
 28630  004CA4  6AF8               	clrf	tblptru,c
 28631  004CA6  0E00               	movlw	low (__mediumconst shr (0+16))
 28632  004CA8  22F8               	addwfc	tblptru,f,c
 28633  004CAA                     	endif
 28634  004CAA  5001               	movf	__display_search@cntr,w,c
 28635  004CAC  0D01               	mullw	1
 28636  004CAE  0E14               	movlw	low (_display_content+20)
 28637  004CB0  24F3               	addwf	prodl,w,c
 28638  004CB2  6ED9               	movwf	fsr2l,c
 28639  004CB4  0E02               	movlw	high (_display_content+20)
 28640  004CB6  20F4               	addwfc	prodh,w,c
 28641  004CB8  6EDA               	movwf	fsr2h,c
 28642  004CBA  0008               	tblrd		*
 28643  004CBC  CFF5 FFDF          	movff	tablat,indf2
 28644  004CC0  2A01               	incf	__display_search@cntr,f,c
 28645  004CC2                     l1588:
 28646  004CC2  5001               	movf	__display_search@cntr,w,c
 28647  004CC4  0D01               	mullw	1
 28648  004CC6  0E17               	movlw	low _search_line2
 28649  004CC8  24F3               	addwf	prodl,w,c
 28650  004CCA  6EF6               	movwf	tblptrl,c
 28651  004CCC  0EBD               	movlw	high _search_line2
 28652  004CCE  20F4               	addwfc	prodh,w,c
 28653  004CD0  6EF7               	movwf	tblptrh,c
 28654  004CD2                     	if	1	;There are 3 active tblptr bytes
 28655  004CD2  6AF8               	clrf	tblptru,c
 28656  004CD4  0E00               	movlw	low (__mediumconst shr (0+16))
 28657  004CD6  22F8               	addwfc	tblptru,f,c
 28658  004CD8                     	endif
 28659  004CD8  0008               	tblrd		*
 28660  004CDA  50F5               	movf	tablat,w,c
 28661  004CDC  0900               	iorlw	0
 28662  004CDE  A4D8               	btfss	status,2,c
 28663  004CE0  D7D9               	goto	l1589
 28664                           
 28665                           ;display.c: 392: cntr = 0;
 28666  004CE2  0E00               	movlw	0
 28667  004CE4  6E01               	movwf	__display_search@cntr,c
 28668                           
 28669                           ;display.c: 393: while(search_line3[cntr])
 28670  004CE6  D017               	goto	l1591
 28671  004CE8                     
 28672                           ;display.c: 394: display_content[2][cntr] = search_line3[cntr++];
 28673  004CE8  5001               	movf	__display_search@cntr,w,c
 28674  004CEA  0D01               	mullw	1
 28675  004CEC  0E96               	movlw	low _search_line3
 28676  004CEE  24F3               	addwf	prodl,w,c
 28677  004CF0  6EF6               	movwf	tblptrl,c
 28678  004CF2  0EBC               	movlw	high _search_line3
 28679  004CF4  20F4               	addwfc	prodh,w,c
 28680  004CF6  6EF7               	movwf	tblptrh,c
 28681  004CF8                     	if	1	;There are 3 active tblptr bytes
 28682  004CF8  6AF8               	clrf	tblptru,c
 28683  004CFA  0E00               	movlw	low (__mediumconst shr (0+16))
 28684  004CFC  22F8               	addwfc	tblptru,f,c
 28685  004CFE                     	endif
 28686  004CFE  5001               	movf	__display_search@cntr,w,c
 28687  004D00  0D01               	mullw	1
 28688  004D02  0E28               	movlw	low (_display_content+40)
 28689  004D04  24F3               	addwf	prodl,w,c
 28690  004D06  6ED9               	movwf	fsr2l,c
 28691  004D08  0E02               	movlw	high (_display_content+40)
 28692  004D0A  20F4               	addwfc	prodh,w,c
 28693  004D0C  6EDA               	movwf	fsr2h,c
 28694  004D0E  0008               	tblrd		*
 28695  004D10  CFF5 FFDF          	movff	tablat,indf2
 28696  004D14  2A01               	incf	__display_search@cntr,f,c
 28697  004D16                     l1591:
 28698  004D16  5001               	movf	__display_search@cntr,w,c
 28699  004D18  0D01               	mullw	1
 28700  004D1A  0E96               	movlw	low _search_line3
 28701  004D1C  24F3               	addwf	prodl,w,c
 28702  004D1E  6EF6               	movwf	tblptrl,c
 28703  004D20  0EBC               	movlw	high _search_line3
 28704  004D22  20F4               	addwfc	prodh,w,c
 28705  004D24  6EF7               	movwf	tblptrh,c
 28706  004D26                     	if	1	;There are 3 active tblptr bytes
 28707  004D26  6AF8               	clrf	tblptru,c
 28708  004D28  0E00               	movlw	low (__mediumconst shr (0+16))
 28709  004D2A  22F8               	addwfc	tblptru,f,c
 28710  004D2C                     	endif
 28711  004D2C  0008               	tblrd		*
 28712  004D2E  50F5               	movf	tablat,w,c
 28713  004D30  0900               	iorlw	0
 28714  004D32  A4D8               	btfss	status,2,c
 28715  004D34  D7D9               	goto	l1592
 28716                           
 28717                           ;display.c: 395: cntr = 0;
 28718  004D36  0E00               	movlw	0
 28719  004D38  6E01               	movwf	__display_search@cntr,c
 28720                           
 28721                           ;display.c: 396: while(search_line4[cntr])
 28722  004D3A  D017               	goto	l1594
 28723  004D3C                     
 28724                           ;display.c: 397: display_content[3][cntr] = search_line4[cntr++];
 28725  004D3C  5001               	movf	__display_search@cntr,w,c
 28726  004D3E  0D01               	mullw	1
 28727  004D40  0E57               	movlw	low _search_line4
 28728  004D42  24F3               	addwf	prodl,w,c
 28729  004D44  6EF6               	movwf	tblptrl,c
 28730  004D46  0EBE               	movlw	high _search_line4
 28731  004D48  20F4               	addwfc	prodh,w,c
 28732  004D4A  6EF7               	movwf	tblptrh,c
 28733  004D4C                     	if	1	;There are 3 active tblptr bytes
 28734  004D4C  6AF8               	clrf	tblptru,c
 28735  004D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 28736  004D50  22F8               	addwfc	tblptru,f,c
 28737  004D52                     	endif
 28738  004D52  5001               	movf	__display_search@cntr,w,c
 28739  004D54  0D01               	mullw	1
 28740  004D56  0E3C               	movlw	low (_display_content+60)
 28741  004D58  24F3               	addwf	prodl,w,c
 28742  004D5A  6ED9               	movwf	fsr2l,c
 28743  004D5C  0E02               	movlw	high (_display_content+60)
 28744  004D5E  20F4               	addwfc	prodh,w,c
 28745  004D60  6EDA               	movwf	fsr2h,c
 28746  004D62  0008               	tblrd		*
 28747  004D64  CFF5 FFDF          	movff	tablat,indf2
 28748  004D68  2A01               	incf	__display_search@cntr,f,c
 28749  004D6A                     l1594:
 28750  004D6A  5001               	movf	__display_search@cntr,w,c
 28751  004D6C  0D01               	mullw	1
 28752  004D6E  0E57               	movlw	low _search_line4
 28753  004D70  24F3               	addwf	prodl,w,c
 28754  004D72  6EF6               	movwf	tblptrl,c
 28755  004D74  0EBE               	movlw	high _search_line4
 28756  004D76  20F4               	addwfc	prodh,w,c
 28757  004D78  6EF7               	movwf	tblptrh,c
 28758  004D7A                     	if	1	;There are 3 active tblptr bytes
 28759  004D7A  6AF8               	clrf	tblptru,c
 28760  004D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 28761  004D7E  22F8               	addwfc	tblptru,f,c
 28762  004D80                     	endif
 28763  004D80  0008               	tblrd		*
 28764  004D82  50F5               	movf	tablat,w,c
 28765  004D84  0900               	iorlw	0
 28766  004D86  B4D8               	btfsc	status,2,c
 28767  004D88  0012               	return	
 28768  004D8A  D7D8               	goto	l1595
 28769  004D8C                     __end_of__display_search:
 28770                           	opt stack 0
 28771                           tosu	equ	0xFFF
 28772                           tosh	equ	0xFFE
 28773                           tosl	equ	0xFFD
 28774                           pclath	equ	0xFFA
 28775                           tblptru	equ	0xFF8
 28776                           tblptrh	equ	0xFF7
 28777                           tblptrl	equ	0xFF6
 28778                           tablat	equ	0xFF5
 28779                           prodh	equ	0xFF4
 28780                           prodl	equ	0xFF3
 28781                           intcon	equ	0xFF2
 28782                           intcon2	equ	0xFF1
 28783                           intcon3	equ	0xFF0
 28784                           indf0	equ	0xFEF
 28785                           postinc0	equ	0xFEE
 28786                           fsr0h	equ	0xFEA
 28787                           fsr0l	equ	0xFE9
 28788                           wreg	equ	0xFE8
 28789                           indf1	equ	0xFE7
 28790                           postdec1	equ	0xFE5
 28791                           plusw1	equ	0xFE3
 28792                           fsr1h	equ	0xFE2
 28793                           fsr1l	equ	0xFE1
 28794                           indf2	equ	0xFDF
 28795                           postinc2	equ	0xFDE
 28796                           postdec2	equ	0xFDD
 28797                           plusw2	equ	0xFDB
 28798                           fsr2h	equ	0xFDA
 28799                           fsr2l	equ	0xFD9
 28800                           status	equ	0xFD8
 28801                           
 28802 ;; *************** function __display_rebooting *****************
 28803 ;; Defined at:
 28804 ;;		line 557 in file "display.c"
 28805 ;; Parameters:    Size  Location     Type
 28806 ;;		None
 28807 ;; Auto vars:     Size  Location     Type
 28808 ;;  cntr            1    0[COMRAM] unsigned char 
 28809 ;; Return value:  Size  Location     Type
 28810 ;;                  1    wreg      void 
 28811 ;; Registers used:
 28812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28813 ;; Tracked objects:
 28814 ;;		On entry : 0/0
 28815 ;;		On exit  : 0/0
 28816 ;;		Unchanged: 0/0
 28817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28822 ;;Total ram usage:        1 bytes
 28823 ;; Hardware stack levels used:    1
 28824 ;; This function calls:
 28825 ;;		Nothing
 28826 ;; This function is called by:
 28827 ;;		_display_prepare
 28828 ;; This function uses a non-reentrant model
 28829 ;;
 28830                           
 28831                           	psect	text137
 28832  009290                     __ptext137:
 28833                           	opt stack 0
 28834  009290                     __display_rebooting:
 28835                           	opt stack 26
 28836                           
 28837                           ;display.c: 559: uint8_t cntr;;display.c: 560: cntr = 0;
 28838                           
 28839                           ;incstack = 0
 28840  009290  0E00               	movlw	0
 28841  009292  6E01               	movwf	__display_rebooting@cntr,c
 28842                           
 28843                           ;display.c: 561: while(reboot_line1[cntr])
 28844  009294  D017               	goto	l1709
 28845  009296                     
 28846                           ;display.c: 562: display_content[0][cntr] = reboot_line1[cntr++];
 28847  009296  5001               	movf	__display_rebooting@cntr,w,c
 28848  009298  0D01               	mullw	1
 28849  00929A  0E33               	movlw	low _reboot_line1
 28850  00929C  24F3               	addwf	prodl,w,c
 28851  00929E  6EF6               	movwf	tblptrl,c
 28852  0092A0  0EBE               	movlw	high _reboot_line1
 28853  0092A2  20F4               	addwfc	prodh,w,c
 28854  0092A4  6EF7               	movwf	tblptrh,c
 28855  0092A6                     	if	1	;There are 3 active tblptr bytes
 28856  0092A6  6AF8               	clrf	tblptru,c
 28857  0092A8  0E00               	movlw	low (__mediumconst shr (0+16))
 28858  0092AA  22F8               	addwfc	tblptru,f,c
 28859  0092AC                     	endif
 28860  0092AC  5001               	movf	__display_rebooting@cntr,w,c
 28861  0092AE  0D01               	mullw	1
 28862  0092B0  0E00               	movlw	low _display_content
 28863  0092B2  24F3               	addwf	prodl,w,c
 28864  0092B4  6ED9               	movwf	fsr2l,c
 28865  0092B6  0E02               	movlw	high _display_content
 28866  0092B8  20F4               	addwfc	prodh,w,c
 28867  0092BA  6EDA               	movwf	fsr2h,c
 28868  0092BC  0008               	tblrd		*
 28869  0092BE  CFF5 FFDF          	movff	tablat,indf2
 28870  0092C2  2A01               	incf	__display_rebooting@cntr,f,c
 28871  0092C4                     l1709:
 28872  0092C4  5001               	movf	__display_rebooting@cntr,w,c
 28873  0092C6  0D01               	mullw	1
 28874  0092C8  0E33               	movlw	low _reboot_line1
 28875  0092CA  24F3               	addwf	prodl,w,c
 28876  0092CC  6EF6               	movwf	tblptrl,c
 28877  0092CE  0EBE               	movlw	high _reboot_line1
 28878  0092D0  20F4               	addwfc	prodh,w,c
 28879  0092D2  6EF7               	movwf	tblptrh,c
 28880  0092D4                     	if	1	;There are 3 active tblptr bytes
 28881  0092D4  6AF8               	clrf	tblptru,c
 28882  0092D6  0E00               	movlw	low (__mediumconst shr (0+16))
 28883  0092D8  22F8               	addwfc	tblptru,f,c
 28884  0092DA                     	endif
 28885  0092DA  0008               	tblrd		*
 28886  0092DC  50F5               	movf	tablat,w,c
 28887  0092DE  0900               	iorlw	0
 28888  0092E0  B4D8               	btfsc	status,2,c
 28889  0092E2  0012               	return	
 28890  0092E4  D7D8               	goto	l1710
 28891  0092E6                     __end_of__display_rebooting:
 28892                           	opt stack 0
 28893                           tosu	equ	0xFFF
 28894                           tosh	equ	0xFFE
 28895                           tosl	equ	0xFFD
 28896                           pclath	equ	0xFFA
 28897                           tblptru	equ	0xFF8
 28898                           tblptrh	equ	0xFF7
 28899                           tblptrl	equ	0xFF6
 28900                           tablat	equ	0xFF5
 28901                           prodh	equ	0xFF4
 28902                           prodl	equ	0xFF3
 28903                           intcon	equ	0xFF2
 28904                           intcon2	equ	0xFF1
 28905                           intcon3	equ	0xFF0
 28906                           indf0	equ	0xFEF
 28907                           postinc0	equ	0xFEE
 28908                           fsr0h	equ	0xFEA
 28909                           fsr0l	equ	0xFE9
 28910                           wreg	equ	0xFE8
 28911                           indf1	equ	0xFE7
 28912                           postdec1	equ	0xFE5
 28913                           plusw1	equ	0xFE3
 28914                           fsr1h	equ	0xFE2
 28915                           fsr1l	equ	0xFE1
 28916                           indf2	equ	0xFDF
 28917                           postinc2	equ	0xFDE
 28918                           postdec2	equ	0xFDD
 28919                           plusw2	equ	0xFDB
 28920                           fsr2h	equ	0xFDA
 28921                           fsr2l	equ	0xFD9
 28922                           status	equ	0xFD8
 28923                           
 28924 ;; *************** function __display_programming *****************
 28925 ;; Defined at:
 28926 ;;		line 515 in file "display.c"
 28927 ;; Parameters:    Size  Location     Type
 28928 ;;		None
 28929 ;; Auto vars:     Size  Location     Type
 28930 ;;  cntr            1   28[COMRAM] unsigned char 
 28931 ;; Return value:  Size  Location     Type
 28932 ;;                  1    wreg      void 
 28933 ;; Registers used:
 28934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28935 ;; Tracked objects:
 28936 ;;		On entry : 0/0
 28937 ;;		On exit  : 0/0
 28938 ;;		Unchanged: 0/0
 28939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28944 ;;Total ram usage:        1 bytes
 28945 ;; Hardware stack levels used:    1
 28946 ;; Hardware stack levels required when called:    4
 28947 ;; This function calls:
 28948 ;;		__display_itoa_u16
 28949 ;;		_bootloader_get_entries
 28950 ;;		_bootloader_get_flashPagesWritten
 28951 ;;		_bootloader_get_total_entries
 28952 ;; This function is called by:
 28953 ;;		_display_prepare
 28954 ;; This function uses a non-reentrant model
 28955 ;;
 28956                           
 28957                           	psect	text138
 28958  00395A                     __ptext138:
 28959                           	opt stack 0
 28960  00395A                     __display_programming:
 28961                           	opt stack 22
 28962                           
 28963                           ;display.c: 517: uint8_t cntr;;display.c: 518: cntr = 0;
 28964                           
 28965                           ;incstack = 0
 28966  00395A  0E00               	movlw	0
 28967  00395C  6E1D               	movwf	__display_programming@cntr,c
 28968                           
 28969                           ;display.c: 519: while(programming_line1[cntr])
 28970  00395E  D017               	goto	l1679
 28971  003960                     
 28972                           ;display.c: 520: display_content[0][cntr] = programming_line1[cntr++];
 28973  003960  501D               	movf	__display_programming@cntr,w,c
 28974  003962  0D01               	mullw	1
 28975  003964  0E88               	movlw	low _programming_line1
 28976  003966  24F3               	addwf	prodl,w,c
 28977  003968  6EF6               	movwf	tblptrl,c
 28978  00396A  0EBD               	movlw	high _programming_line1
 28979  00396C  20F4               	addwfc	prodh,w,c
 28980  00396E  6EF7               	movwf	tblptrh,c
 28981  003970                     	if	1	;There are 3 active tblptr bytes
 28982  003970  6AF8               	clrf	tblptru,c
 28983  003972  0E00               	movlw	low (__mediumconst shr (0+16))
 28984  003974  22F8               	addwfc	tblptru,f,c
 28985  003976                     	endif
 28986  003976  501D               	movf	__display_programming@cntr,w,c
 28987  003978  0D01               	mullw	1
 28988  00397A  0E00               	movlw	low _display_content
 28989  00397C  24F3               	addwf	prodl,w,c
 28990  00397E  6ED9               	movwf	fsr2l,c
 28991  003980  0E02               	movlw	high _display_content
 28992  003982  20F4               	addwfc	prodh,w,c
 28993  003984  6EDA               	movwf	fsr2h,c
 28994  003986  0008               	tblrd		*
 28995  003988  CFF5 FFDF          	movff	tablat,indf2
 28996  00398C  2A1D               	incf	__display_programming@cntr,f,c
 28997  00398E                     l1679:
 28998  00398E  501D               	movf	__display_programming@cntr,w,c
 28999  003990  0D01               	mullw	1
 29000  003992  0E88               	movlw	low _programming_line1
 29001  003994  24F3               	addwf	prodl,w,c
 29002  003996  6EF6               	movwf	tblptrl,c
 29003  003998  0EBD               	movlw	high _programming_line1
 29004  00399A  20F4               	addwfc	prodh,w,c
 29005  00399C  6EF7               	movwf	tblptrh,c
 29006  00399E                     	if	1	;There are 3 active tblptr bytes
 29007  00399E  6AF8               	clrf	tblptru,c
 29008  0039A0  0E00               	movlw	low (__mediumconst shr (0+16))
 29009  0039A2  22F8               	addwfc	tblptru,f,c
 29010  0039A4                     	endif
 29011  0039A4  0008               	tblrd		*
 29012  0039A6  50F5               	movf	tablat,w,c
 29013  0039A8  0900               	iorlw	0
 29014  0039AA  A4D8               	btfss	status,2,c
 29015  0039AC  D7D9               	goto	l1680
 29016                           
 29017                           ;display.c: 522: cntr = 0;
 29018  0039AE  0E00               	movlw	0
 29019  0039B0  6E1D               	movwf	__display_programming@cntr,c
 29020                           
 29021                           ;display.c: 523: while(programming_line2[cntr])
 29022  0039B2  D017               	goto	l1682
 29023  0039B4                     
 29024                           ;display.c: 524: display_content[1][cntr] = programming_line2[cntr++];
 29025  0039B4  501D               	movf	__display_programming@cntr,w,c
 29026  0039B6  0D01               	mullw	1
 29027  0039B8  0ED0               	movlw	low _programming_line2
 29028  0039BA  24F3               	addwf	prodl,w,c
 29029  0039BC  6EF6               	movwf	tblptrl,c
 29030  0039BE  0EBC               	movlw	high _programming_line2
 29031  0039C0  20F4               	addwfc	prodh,w,c
 29032  0039C2  6EF7               	movwf	tblptrh,c
 29033  0039C4                     	if	1	;There are 3 active tblptr bytes
 29034  0039C4  6AF8               	clrf	tblptru,c
 29035  0039C6  0E00               	movlw	low (__mediumconst shr (0+16))
 29036  0039C8  22F8               	addwfc	tblptru,f,c
 29037  0039CA                     	endif
 29038  0039CA  501D               	movf	__display_programming@cntr,w,c
 29039  0039CC  0D01               	mullw	1
 29040  0039CE  0E14               	movlw	low (_display_content+20)
 29041  0039D0  24F3               	addwf	prodl,w,c
 29042  0039D2  6ED9               	movwf	fsr2l,c
 29043  0039D4  0E02               	movlw	high (_display_content+20)
 29044  0039D6  20F4               	addwfc	prodh,w,c
 29045  0039D8  6EDA               	movwf	fsr2h,c
 29046  0039DA  0008               	tblrd		*
 29047  0039DC  CFF5 FFDF          	movff	tablat,indf2
 29048  0039E0  2A1D               	incf	__display_programming@cntr,f,c
 29049  0039E2                     l1682:
 29050  0039E2  501D               	movf	__display_programming@cntr,w,c
 29051  0039E4  0D01               	mullw	1
 29052  0039E6  0ED0               	movlw	low _programming_line2
 29053  0039E8  24F3               	addwf	prodl,w,c
 29054  0039EA  6EF6               	movwf	tblptrl,c
 29055  0039EC  0EBC               	movlw	high _programming_line2
 29056  0039EE  20F4               	addwfc	prodh,w,c
 29057  0039F0  6EF7               	movwf	tblptrh,c
 29058  0039F2                     	if	1	;There are 3 active tblptr bytes
 29059  0039F2  6AF8               	clrf	tblptru,c
 29060  0039F4  0E00               	movlw	low (__mediumconst shr (0+16))
 29061  0039F6  22F8               	addwfc	tblptru,f,c
 29062  0039F8                     	endif
 29063  0039F8  0008               	tblrd		*
 29064  0039FA  50F5               	movf	tablat,w,c
 29065  0039FC  0900               	iorlw	0
 29066  0039FE  A4D8               	btfss	status,2,c
 29067  003A00  D7D9               	goto	l1683
 29068                           
 29069                           ;display.c: 526: cntr = 0;
 29070  003A02  0E00               	movlw	0
 29071  003A04  6E1D               	movwf	__display_programming@cntr,c
 29072                           
 29073                           ;display.c: 527: while(programming_line3[cntr])
 29074  003A06  D017               	goto	l1685
 29075  003A08                     
 29076                           ;display.c: 528: display_content[2][cntr] = programming_line3[cntr++];
 29077  003A08  501D               	movf	__display_programming@cntr,w,c
 29078  003A0A  0D01               	mullw	1
 29079  003A0C  0E81               	movlw	low _programming_line3
 29080  003A0E  24F3               	addwf	prodl,w,c
 29081  003A10  6EF6               	movwf	tblptrl,c
 29082  003A12  0EBE               	movlw	high _programming_line3
 29083  003A14  20F4               	addwfc	prodh,w,c
 29084  003A16  6EF7               	movwf	tblptrh,c
 29085  003A18                     	if	1	;There are 3 active tblptr bytes
 29086  003A18  6AF8               	clrf	tblptru,c
 29087  003A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 29088  003A1C  22F8               	addwfc	tblptru,f,c
 29089  003A1E                     	endif
 29090  003A1E  501D               	movf	__display_programming@cntr,w,c
 29091  003A20  0D01               	mullw	1
 29092  003A22  0E28               	movlw	low (_display_content+40)
 29093  003A24  24F3               	addwf	prodl,w,c
 29094  003A26  6ED9               	movwf	fsr2l,c
 29095  003A28  0E02               	movlw	high (_display_content+40)
 29096  003A2A  20F4               	addwfc	prodh,w,c
 29097  003A2C  6EDA               	movwf	fsr2h,c
 29098  003A2E  0008               	tblrd		*
 29099  003A30  CFF5 FFDF          	movff	tablat,indf2
 29100  003A34  2A1D               	incf	__display_programming@cntr,f,c
 29101  003A36                     l1685:
 29102  003A36  501D               	movf	__display_programming@cntr,w,c
 29103  003A38  0D01               	mullw	1
 29104  003A3A  0E81               	movlw	low _programming_line3
 29105  003A3C  24F3               	addwf	prodl,w,c
 29106  003A3E  6EF6               	movwf	tblptrl,c
 29107  003A40  0EBE               	movlw	high _programming_line3
 29108  003A42  20F4               	addwfc	prodh,w,c
 29109  003A44  6EF7               	movwf	tblptrh,c
 29110  003A46                     	if	1	;There are 3 active tblptr bytes
 29111  003A46  6AF8               	clrf	tblptru,c
 29112  003A48  0E00               	movlw	low (__mediumconst shr (0+16))
 29113  003A4A  22F8               	addwfc	tblptru,f,c
 29114  003A4C                     	endif
 29115  003A4C  0008               	tblrd		*
 29116  003A4E  50F5               	movf	tablat,w,c
 29117  003A50  0900               	iorlw	0
 29118  003A52  A4D8               	btfss	status,2,c
 29119  003A54  D7D9               	goto	l1686
 29120                           
 29121                           ;display.c: 529: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 29122  003A56  EC34  F051         	call	_bootloader_get_entries	;wreg free
 29123  003A5A  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29124  003A5E  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29125  003A62  501D               	movf	__display_programming@cntr,w,c
 29126  003A64  0D01               	mullw	1
 29127  003A66  0E28               	movlw	low (_display_content+40)
 29128  003A68  24F3               	addwf	prodl,w,c
 29129  003A6A  6E1B               	movwf	__display_itoa_u16@text,c
 29130  003A6C  0E02               	movlw	high (_display_content+40)
 29131  003A6E  20F4               	addwfc	prodh,w,c
 29132  003A70  6E1C               	movwf	__display_itoa_u16@text+1,c
 29133  003A72  EC06  F03D         	call	__display_itoa_u16	;wreg free
 29134  003A76  261D               	addwf	__display_programming@cntr,f,c
 29135                           
 29136                           ;display.c: 530: display_content[2][cntr++] = '/';
 29137  003A78  501D               	movf	__display_programming@cntr,w,c
 29138  003A7A  0D01               	mullw	1
 29139  003A7C  0E28               	movlw	low (_display_content+40)
 29140  003A7E  24F3               	addwf	prodl,w,c
 29141  003A80  6ED9               	movwf	fsr2l,c
 29142  003A82  0E02               	movlw	high (_display_content+40)
 29143  003A84  20F4               	addwfc	prodh,w,c
 29144  003A86  6EDA               	movwf	fsr2h,c
 29145  003A88  0E2F               	movlw	47
 29146  003A8A  6EDF               	movwf	indf2,c
 29147  003A8C  2A1D               	incf	__display_programming@cntr,f,c
 29148                           
 29149                           ;display.c: 531: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 29150  003A8E  EC3E  F051         	call	_bootloader_get_total_entries	;wreg free
 29151  003A92  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 29152  003A96  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 29153  003A9A  501D               	movf	__display_programming@cntr,w,c
 29154  003A9C  0D01               	mullw	1
 29155  003A9E  0E28               	movlw	low (_display_content+40)
 29156  003AA0  24F3               	addwf	prodl,w,c
 29157  003AA2  6E1B               	movwf	__display_itoa_u16@text,c
 29158  003AA4  0E02               	movlw	high (_display_content+40)
 29159  003AA6  20F4               	addwfc	prodh,w,c
 29160  003AA8  6E1C               	movwf	__display_itoa_u16@text+1,c
 29161  003AAA  EC06  F03D         	call	__display_itoa_u16	;wreg free
 29162                           
 29163                           ;display.c: 533: cntr = 0;
 29164  003AAE  0E00               	movlw	0
 29165  003AB0  6E1D               	movwf	__display_programming@cntr,c
 29166                           
 29167                           ;display.c: 534: while(programming_line4[cntr])
 29168  003AB2  D017               	goto	l1688
 29169  003AB4                     
 29170                           ;display.c: 535: display_content[3][cntr] = programming_line4[cntr++];
 29171  003AB4  501D               	movf	__display_programming@cntr,w,c
 29172  003AB6  0D01               	mullw	1
 29173  003AB8  0E78               	movlw	low _programming_line4
 29174  003ABA  24F3               	addwf	prodl,w,c
 29175  003ABC  6EF6               	movwf	tblptrl,c
 29176  003ABE  0EBD               	movlw	high _programming_line4
 29177  003AC0  20F4               	addwfc	prodh,w,c
 29178  003AC2  6EF7               	movwf	tblptrh,c
 29179  003AC4                     	if	1	;There are 3 active tblptr bytes
 29180  003AC4  6AF8               	clrf	tblptru,c
 29181  003AC6  0E00               	movlw	low (__mediumconst shr (0+16))
 29182  003AC8  22F8               	addwfc	tblptru,f,c
 29183  003ACA                     	endif
 29184  003ACA  501D               	movf	__display_programming@cntr,w,c
 29185  003ACC  0D01               	mullw	1
 29186  003ACE  0E3C               	movlw	low (_display_content+60)
 29187  003AD0  24F3               	addwf	prodl,w,c
 29188  003AD2  6ED9               	movwf	fsr2l,c
 29189  003AD4  0E02               	movlw	high (_display_content+60)
 29190  003AD6  20F4               	addwfc	prodh,w,c
 29191  003AD8  6EDA               	movwf	fsr2h,c
 29192  003ADA  0008               	tblrd		*
 29193  003ADC  CFF5 FFDF          	movff	tablat,indf2
 29194  003AE0  2A1D               	incf	__display_programming@cntr,f,c
 29195  003AE2                     l1688:
 29196  003AE2  501D               	movf	__display_programming@cntr,w,c
 29197  003AE4  0D01               	mullw	1
 29198  003AE6  0E78               	movlw	low _programming_line4
 29199  003AE8  24F3               	addwf	prodl,w,c
 29200  003AEA  6EF6               	movwf	tblptrl,c
 29201  003AEC  0EBD               	movlw	high _programming_line4
 29202  003AEE  20F4               	addwfc	prodh,w,c
 29203  003AF0  6EF7               	movwf	tblptrh,c
 29204  003AF2                     	if	1	;There are 3 active tblptr bytes
 29205  003AF2  6AF8               	clrf	tblptru,c
 29206  003AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 29207  003AF6  22F8               	addwfc	tblptru,f,c
 29208  003AF8                     	endif
 29209  003AF8  0008               	tblrd		*
 29210  003AFA  50F5               	movf	tablat,w,c
 29211  003AFC  0900               	iorlw	0
 29212  003AFE  A4D8               	btfss	status,2,c
 29213  003B00  D7D9               	goto	l1689
 29214                           
 29215                           ;display.c: 536: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 29216  003B02  EC39  F051         	call	_bootloader_get_flashPagesWritten	;wreg free
 29217  003B06  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 29218  003B0A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 29219  003B0E  501D               	movf	__display_programming@cntr,w,c
 29220  003B10  0D01               	mullw	1
 29221  003B12  0E3C               	movlw	low (_display_content+60)
 29222  003B14  24F3               	addwf	prodl,w,c
 29223  003B16  6E1B               	movwf	__display_itoa_u16@text,c
 29224  003B18  0E02               	movlw	high (_display_content+60)
 29225  003B1A  20F4               	addwfc	prodh,w,c
 29226  003B1C  6E1C               	movwf	__display_itoa_u16@text+1,c
 29227  003B1E  EC06  F03D         	call	__display_itoa_u16	;wreg free
 29228  003B22  0012               	return		;funcret
 29229  003B24                     __end_of__display_programming:
 29230                           	opt stack 0
 29231                           tosu	equ	0xFFF
 29232                           tosh	equ	0xFFE
 29233                           tosl	equ	0xFFD
 29234                           pclath	equ	0xFFA
 29235                           tblptru	equ	0xFF8
 29236                           tblptrh	equ	0xFF7
 29237                           tblptrl	equ	0xFF6
 29238                           tablat	equ	0xFF5
 29239                           prodh	equ	0xFF4
 29240                           prodl	equ	0xFF3
 29241                           intcon	equ	0xFF2
 29242                           intcon2	equ	0xFF1
 29243                           intcon3	equ	0xFF0
 29244                           indf0	equ	0xFEF
 29245                           postinc0	equ	0xFEE
 29246                           fsr0h	equ	0xFEA
 29247                           fsr0l	equ	0xFE9
 29248                           wreg	equ	0xFE8
 29249                           indf1	equ	0xFE7
 29250                           postdec1	equ	0xFE5
 29251                           plusw1	equ	0xFE3
 29252                           fsr1h	equ	0xFE2
 29253                           fsr1l	equ	0xFE1
 29254                           indf2	equ	0xFDF
 29255                           postinc2	equ	0xFDE
 29256                           postdec2	equ	0xFDD
 29257                           plusw2	equ	0xFDB
 29258                           fsr2h	equ	0xFDA
 29259                           fsr2l	equ	0xFD9
 29260                           status	equ	0xFD8
 29261                           
 29262 ;; *************** function __display_found *****************
 29263 ;; Defined at:
 29264 ;;		line 400 in file "display.c"
 29265 ;; Parameters:    Size  Location     Type
 29266 ;;		None
 29267 ;; Auto vars:     Size  Location     Type
 29268 ;;  cntr            1   37[COMRAM] unsigned char 
 29269 ;;  start           1   36[COMRAM] unsigned char 
 29270 ;; Return value:  Size  Location     Type
 29271 ;;                  1    wreg      void 
 29272 ;; Registers used:
 29273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29274 ;; Tracked objects:
 29275 ;;		On entry : 0/0
 29276 ;;		On exit  : 0/0
 29277 ;;		Unchanged: 0/0
 29278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29283 ;;Total ram usage:        4 bytes
 29284 ;; Hardware stack levels used:    1
 29285 ;; Hardware stack levels required when called:    5
 29286 ;; This function calls:
 29287 ;;		__display_itoa_u32
 29288 ;;		_bootloader_get_file_size
 29289 ;; This function is called by:
 29290 ;;		_display_prepare
 29291 ;; This function uses a non-reentrant model
 29292 ;;
 29293                           
 29294                           	psect	text139
 29295  0033CA                     __ptext139:
 29296                           	opt stack 0
 29297  0033CA                     __display_found:
 29298                           	opt stack 21
 29299                           
 29300                           ;display.c: 402: uint8_t cntr;;display.c: 403: uint8_t start;;display.c: 405: cntr = 0;
 29301                           
 29302                           ;incstack = 0
 29303  0033CA  0E00               	movlw	0
 29304  0033CC  6E26               	movwf	__display_found@cntr,c
 29305                           
 29306                           ;display.c: 406: while(found_line1[cntr])
 29307  0033CE  D017               	goto	l1600
 29308  0033D0                     
 29309                           ;display.c: 407: display_content[0][cntr] = found_line1[cntr++];
 29310  0033D0  5026               	movf	__display_found@cntr,w,c
 29311  0033D2  0D01               	mullw	1
 29312  0033D4  0EC8               	movlw	low _found_line1
 29313  0033D6  24F3               	addwf	prodl,w,c
 29314  0033D8  6EF6               	movwf	tblptrl,c
 29315  0033DA  0EBD               	movlw	high _found_line1
 29316  0033DC  20F4               	addwfc	prodh,w,c
 29317  0033DE  6EF7               	movwf	tblptrh,c
 29318  0033E0                     	if	1	;There are 3 active tblptr bytes
 29319  0033E0  6AF8               	clrf	tblptru,c
 29320  0033E2  0E00               	movlw	low (__mediumconst shr (0+16))
 29321  0033E4  22F8               	addwfc	tblptru,f,c
 29322  0033E6                     	endif
 29323  0033E6  5026               	movf	__display_found@cntr,w,c
 29324  0033E8  0D01               	mullw	1
 29325  0033EA  0E00               	movlw	low _display_content
 29326  0033EC  24F3               	addwf	prodl,w,c
 29327  0033EE  6ED9               	movwf	fsr2l,c
 29328  0033F0  0E02               	movlw	high _display_content
 29329  0033F2  20F4               	addwfc	prodh,w,c
 29330  0033F4  6EDA               	movwf	fsr2h,c
 29331  0033F6  0008               	tblrd		*
 29332  0033F8  CFF5 FFDF          	movff	tablat,indf2
 29333  0033FC  2A26               	incf	__display_found@cntr,f,c
 29334  0033FE                     l1600:
 29335  0033FE  5026               	movf	__display_found@cntr,w,c
 29336  003400  0D01               	mullw	1
 29337  003402  0EC8               	movlw	low _found_line1
 29338  003404  24F3               	addwf	prodl,w,c
 29339  003406  6EF6               	movwf	tblptrl,c
 29340  003408  0EBD               	movlw	high _found_line1
 29341  00340A  20F4               	addwfc	prodh,w,c
 29342  00340C  6EF7               	movwf	tblptrh,c
 29343  00340E                     	if	1	;There are 3 active tblptr bytes
 29344  00340E  6AF8               	clrf	tblptru,c
 29345  003410  0E00               	movlw	low (__mediumconst shr (0+16))
 29346  003412  22F8               	addwfc	tblptru,f,c
 29347  003414                     	endif
 29348  003414  0008               	tblrd		*
 29349  003416  50F5               	movf	tablat,w,c
 29350  003418  0900               	iorlw	0
 29351  00341A  A4D8               	btfss	status,2,c
 29352  00341C  D7D9               	goto	l1601
 29353                           
 29354                           ;display.c: 409: cntr = 0;
 29355  00341E  0E00               	movlw	0
 29356  003420  6E26               	movwf	__display_found@cntr,c
 29357                           
 29358                           ;display.c: 410: while(found_line2[cntr])
 29359  003422  D017               	goto	l1603
 29360  003424                     
 29361                           ;display.c: 411: display_content[1][cntr] = found_line2[cntr++];
 29362  003424  5026               	movf	__display_found@cntr,w,c
 29363  003426  0D01               	mullw	1
 29364  003428  0EBD               	movlw	low _found_line2
 29365  00342A  24F3               	addwf	prodl,w,c
 29366  00342C  6EF6               	movwf	tblptrl,c
 29367  00342E  0EBC               	movlw	high _found_line2
 29368  003430  20F4               	addwfc	prodh,w,c
 29369  003432  6EF7               	movwf	tblptrh,c
 29370  003434                     	if	1	;There are 3 active tblptr bytes
 29371  003434  6AF8               	clrf	tblptru,c
 29372  003436  0E00               	movlw	low (__mediumconst shr (0+16))
 29373  003438  22F8               	addwfc	tblptru,f,c
 29374  00343A                     	endif
 29375  00343A  5026               	movf	__display_found@cntr,w,c
 29376  00343C  0D01               	mullw	1
 29377  00343E  0E14               	movlw	low (_display_content+20)
 29378  003440  24F3               	addwf	prodl,w,c
 29379  003442  6ED9               	movwf	fsr2l,c
 29380  003444  0E02               	movlw	high (_display_content+20)
 29381  003446  20F4               	addwfc	prodh,w,c
 29382  003448  6EDA               	movwf	fsr2h,c
 29383  00344A  0008               	tblrd		*
 29384  00344C  CFF5 FFDF          	movff	tablat,indf2
 29385  003450  2A26               	incf	__display_found@cntr,f,c
 29386  003452                     l1603:
 29387  003452  5026               	movf	__display_found@cntr,w,c
 29388  003454  0D01               	mullw	1
 29389  003456  0EBD               	movlw	low _found_line2
 29390  003458  24F3               	addwf	prodl,w,c
 29391  00345A  6EF6               	movwf	tblptrl,c
 29392  00345C  0EBC               	movlw	high _found_line2
 29393  00345E  20F4               	addwfc	prodh,w,c
 29394  003460  6EF7               	movwf	tblptrh,c
 29395  003462                     	if	1	;There are 3 active tblptr bytes
 29396  003462  6AF8               	clrf	tblptru,c
 29397  003464  0E00               	movlw	low (__mediumconst shr (0+16))
 29398  003466  22F8               	addwfc	tblptru,f,c
 29399  003468                     	endif
 29400  003468  0008               	tblrd		*
 29401  00346A  50F5               	movf	tablat,w,c
 29402  00346C  0900               	iorlw	0
 29403  00346E  A4D8               	btfss	status,2,c
 29404  003470  D7D9               	goto	l1604
 29405                           
 29406                           ;display.c: 413: cntr = 0;
 29407  003472  0E00               	movlw	0
 29408  003474  6E26               	movwf	__display_found@cntr,c
 29409                           
 29410                           ;display.c: 414: while(found_line3[cntr])
 29411  003476  D017               	goto	l1606
 29412  003478                     
 29413                           ;display.c: 415: display_content[2][cntr] = found_line3[cntr++];
 29414  003478  5026               	movf	__display_found@cntr,w,c
 29415  00347A  0D01               	mullw	1
 29416  00347C  0E96               	movlw	low _found_line3
 29417  00347E  24F3               	addwf	prodl,w,c
 29418  003480  6EF6               	movwf	tblptrl,c
 29419  003482  0EBE               	movlw	high _found_line3
 29420  003484  20F4               	addwfc	prodh,w,c
 29421  003486  6EF7               	movwf	tblptrh,c
 29422  003488                     	if	1	;There are 3 active tblptr bytes
 29423  003488  6AF8               	clrf	tblptru,c
 29424  00348A  0E00               	movlw	low (__mediumconst shr (0+16))
 29425  00348C  22F8               	addwfc	tblptru,f,c
 29426  00348E                     	endif
 29427  00348E  5026               	movf	__display_found@cntr,w,c
 29428  003490  0D01               	mullw	1
 29429  003492  0E28               	movlw	low (_display_content+40)
 29430  003494  24F3               	addwf	prodl,w,c
 29431  003496  6ED9               	movwf	fsr2l,c
 29432  003498  0E02               	movlw	high (_display_content+40)
 29433  00349A  20F4               	addwfc	prodh,w,c
 29434  00349C  6EDA               	movwf	fsr2h,c
 29435  00349E  0008               	tblrd		*
 29436  0034A0  CFF5 FFDF          	movff	tablat,indf2
 29437  0034A4  2A26               	incf	__display_found@cntr,f,c
 29438  0034A6                     l1606:
 29439  0034A6  5026               	movf	__display_found@cntr,w,c
 29440  0034A8  0D01               	mullw	1
 29441  0034AA  0E96               	movlw	low _found_line3
 29442  0034AC  24F3               	addwf	prodl,w,c
 29443  0034AE  6EF6               	movwf	tblptrl,c
 29444  0034B0  0EBE               	movlw	high _found_line3
 29445  0034B2  20F4               	addwfc	prodh,w,c
 29446  0034B4  6EF7               	movwf	tblptrh,c
 29447  0034B6                     	if	1	;There are 3 active tblptr bytes
 29448  0034B6  6AF8               	clrf	tblptru,c
 29449  0034B8  0E00               	movlw	low (__mediumconst shr (0+16))
 29450  0034BA  22F8               	addwfc	tblptru,f,c
 29451  0034BC                     	endif
 29452  0034BC  0008               	tblrd		*
 29453  0034BE  50F5               	movf	tablat,w,c
 29454  0034C0  0900               	iorlw	0
 29455  0034C2  A4D8               	btfss	status,2,c
 29456  0034C4  D7D9               	goto	l1607
 29457                           
 29458                           ;display.c: 416: start = cntr;
 29459  0034C6  C026  F025         	movff	__display_found@cntr,__display_found@start
 29460                           
 29461                           ;display.c: 417: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 29462  0034CA  ECCA  F050         	call	_bootloader_get_file_size	;wreg free
 29463  0034CE  C001  F01D         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29464  0034D2  C002  F01E         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29465  0034D6  C003  F01F         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29466  0034DA  C004  F020         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29467  0034DE  5026               	movf	__display_found@cntr,w,c
 29468  0034E0  0D01               	mullw	1
 29469  0034E2  0E28               	movlw	low (_display_content+40)
 29470  0034E4  24F3               	addwf	prodl,w,c
 29471  0034E6  6E21               	movwf	__display_itoa_u32@text,c
 29472  0034E8  0E02               	movlw	high (_display_content+40)
 29473  0034EA  20F4               	addwfc	prodh,w,c
 29474  0034EC  6E22               	movwf	__display_itoa_u32@text+1,c
 29475  0034EE  EC06  F006         	call	__display_itoa_u32	;wreg free
 29476  0034F2  2625               	addwf	__display_found@start,f,c
 29477                           
 29478                           ;display.c: 418: cntr = 0;
 29479  0034F4  0E00               	movlw	0
 29480  0034F6  6E26               	movwf	__display_found@cntr,c
 29481                           
 29482                           ;display.c: 419: while(found_line3b[cntr])
 29483  0034F8  D01C               	goto	l1609
 29484  0034FA                     
 29485                           ;display.c: 420: display_content[2][start+cntr] = found_line3b[cntr++];
 29486  0034FA  5026               	movf	__display_found@cntr,w,c
 29487  0034FC  0D01               	mullw	1
 29488  0034FE  0E8F               	movlw	low _found_line3b
 29489  003500  24F3               	addwf	prodl,w,c
 29490  003502  6EF6               	movwf	tblptrl,c
 29491  003504  0EBE               	movlw	high _found_line3b
 29492  003506  20F4               	addwfc	prodh,w,c
 29493  003508  6EF7               	movwf	tblptrh,c
 29494  00350A                     	if	1	;There are 3 active tblptr bytes
 29495  00350A  6AF8               	clrf	tblptru,c
 29496  00350C  0E00               	movlw	low (__mediumconst shr (0+16))
 29497  00350E  22F8               	addwfc	tblptru,f,c
 29498  003510                     	endif
 29499  003510  5026               	movf	__display_found@cntr,w,c
 29500  003512  C025  F023         	movff	__display_found@start,??__display_found
 29501  003516  6A24               	clrf	(??__display_found+1)& (0+255),c
 29502  003518  2623               	addwf	??__display_found,f,c
 29503  00351A  0E00               	movlw	0
 29504  00351C  2224               	addwfc	??__display_found+1,f,c
 29505  00351E  0E28               	movlw	low (_display_content+40)
 29506  003520  2423               	addwf	??__display_found,w,c
 29507  003522  6ED9               	movwf	fsr2l,c
 29508  003524  0E02               	movlw	high (_display_content+40)
 29509  003526  2024               	addwfc	??__display_found+1,w,c
 29510  003528  6EDA               	movwf	fsr2h,c
 29511  00352A  0008               	tblrd		*
 29512  00352C  CFF5 FFDF          	movff	tablat,indf2
 29513  003530  2A26               	incf	__display_found@cntr,f,c
 29514  003532                     l1609:
 29515  003532  5026               	movf	__display_found@cntr,w,c
 29516  003534  0D01               	mullw	1
 29517  003536  0E8F               	movlw	low _found_line3b
 29518  003538  24F3               	addwf	prodl,w,c
 29519  00353A  6EF6               	movwf	tblptrl,c
 29520  00353C  0EBE               	movlw	high _found_line3b
 29521  00353E  20F4               	addwfc	prodh,w,c
 29522  003540  6EF7               	movwf	tblptrh,c
 29523  003542                     	if	1	;There are 3 active tblptr bytes
 29524  003542  6AF8               	clrf	tblptru,c
 29525  003544  0E00               	movlw	low (__mediumconst shr (0+16))
 29526  003546  22F8               	addwfc	tblptru,f,c
 29527  003548                     	endif
 29528  003548  0008               	tblrd		*
 29529  00354A  50F5               	movf	tablat,w,c
 29530  00354C  0900               	iorlw	0
 29531  00354E  A4D8               	btfss	status,2,c
 29532  003550  D7D4               	goto	l1610
 29533                           
 29534                           ;display.c: 422: cntr = 0;
 29535  003552  0E00               	movlw	0
 29536  003554  6E26               	movwf	__display_found@cntr,c
 29537                           
 29538                           ;display.c: 423: while(found_line4[cntr])
 29539  003556  D017               	goto	l1612
 29540  003558                     
 29541                           ;display.c: 424: display_content[3][cntr] = found_line4[cntr++];
 29542  003558  5026               	movf	__display_found@cntr,w,c
 29543  00355A  0D01               	mullw	1
 29544  00355C  0EF4               	movlw	low _found_line4
 29545  00355E  24F3               	addwf	prodl,w,c
 29546  003560  6EF6               	movwf	tblptrl,c
 29547  003562  0EBC               	movlw	high _found_line4
 29548  003564  20F4               	addwfc	prodh,w,c
 29549  003566  6EF7               	movwf	tblptrh,c
 29550  003568                     	if	1	;There are 3 active tblptr bytes
 29551  003568  6AF8               	clrf	tblptru,c
 29552  00356A  0E00               	movlw	low (__mediumconst shr (0+16))
 29553  00356C  22F8               	addwfc	tblptru,f,c
 29554  00356E                     	endif
 29555  00356E  5026               	movf	__display_found@cntr,w,c
 29556  003570  0D01               	mullw	1
 29557  003572  0E3C               	movlw	low (_display_content+60)
 29558  003574  24F3               	addwf	prodl,w,c
 29559  003576  6ED9               	movwf	fsr2l,c
 29560  003578  0E02               	movlw	high (_display_content+60)
 29561  00357A  20F4               	addwfc	prodh,w,c
 29562  00357C  6EDA               	movwf	fsr2h,c
 29563  00357E  0008               	tblrd		*
 29564  003580  CFF5 FFDF          	movff	tablat,indf2
 29565  003584  2A26               	incf	__display_found@cntr,f,c
 29566  003586                     l1612:
 29567  003586  5026               	movf	__display_found@cntr,w,c
 29568  003588  0D01               	mullw	1
 29569  00358A  0EF4               	movlw	low _found_line4
 29570  00358C  24F3               	addwf	prodl,w,c
 29571  00358E  6EF6               	movwf	tblptrl,c
 29572  003590  0EBC               	movlw	high _found_line4
 29573  003592  20F4               	addwfc	prodh,w,c
 29574  003594  6EF7               	movwf	tblptrh,c
 29575  003596                     	if	1	;There are 3 active tblptr bytes
 29576  003596  6AF8               	clrf	tblptru,c
 29577  003598  0E00               	movlw	low (__mediumconst shr (0+16))
 29578  00359A  22F8               	addwfc	tblptru,f,c
 29579  00359C                     	endif
 29580  00359C  0008               	tblrd		*
 29581  00359E  50F5               	movf	tablat,w,c
 29582  0035A0  0900               	iorlw	0
 29583  0035A2  B4D8               	btfsc	status,2,c
 29584  0035A4  0012               	return	
 29585  0035A6  D7D8               	goto	l1613
 29586  0035A8                     __end_of__display_found:
 29587                           	opt stack 0
 29588                           tosu	equ	0xFFF
 29589                           tosh	equ	0xFFE
 29590                           tosl	equ	0xFFD
 29591                           pclath	equ	0xFFA
 29592                           tblptru	equ	0xFF8
 29593                           tblptrh	equ	0xFF7
 29594                           tblptrl	equ	0xFF6
 29595                           tablat	equ	0xFF5
 29596                           prodh	equ	0xFF4
 29597                           prodl	equ	0xFF3
 29598                           intcon	equ	0xFF2
 29599                           intcon2	equ	0xFF1
 29600                           intcon3	equ	0xFF0
 29601                           indf0	equ	0xFEF
 29602                           postinc0	equ	0xFEE
 29603                           fsr0h	equ	0xFEA
 29604                           fsr0l	equ	0xFE9
 29605                           wreg	equ	0xFE8
 29606                           indf1	equ	0xFE7
 29607                           postdec1	equ	0xFE5
 29608                           plusw1	equ	0xFE3
 29609                           fsr1h	equ	0xFE2
 29610                           fsr1l	equ	0xFE1
 29611                           indf2	equ	0xFDF
 29612                           postinc2	equ	0xFDE
 29613                           postdec2	equ	0xFDD
 29614                           plusw2	equ	0xFDB
 29615                           fsr2h	equ	0xFDA
 29616                           fsr2l	equ	0xFD9
 29617                           status	equ	0xFD8
 29618                           
 29619 ;; *************** function _bootloader_get_file_size *****************
 29620 ;; Defined at:
 29621 ;;		line 463 in file "bootloader.c"
 29622 ;; Parameters:    Size  Location     Type
 29623 ;;		None
 29624 ;; Auto vars:     Size  Location     Type
 29625 ;;		None
 29626 ;; Return value:  Size  Location     Type
 29627 ;;                  4    0[COMRAM] unsigned long 
 29628 ;; Registers used:
 29629 ;;		None
 29630 ;; Tracked objects:
 29631 ;;		On entry : 0/0
 29632 ;;		On exit  : 0/0
 29633 ;;		Unchanged: 0/0
 29634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29639 ;;Total ram usage:        4 bytes
 29640 ;; Hardware stack levels used:    1
 29641 ;; This function calls:
 29642 ;;		Nothing
 29643 ;; This function is called by:
 29644 ;;		__display_found
 29645 ;;		__fill_buffer_get_bootloader_details
 29646 ;; This function uses a non-reentrant model
 29647 ;;
 29648                           
 29649                           	psect	text140
 29650  00A194                     __ptext140:
 29651                           	opt stack 0
 29652  00A194                     _bootloader_get_file_size:
 29653                           	opt stack 25
 29654                           
 29655                           ;bootloader.c: 465: return hex_file_size;
 29656                           
 29657                           ;incstack = 0
 29658  00A194  C0D1  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29659  00A198  C0D2  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29660  00A19C  C0D3  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29661  00A1A0  C0D4  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29662  00A1A4  0012               	return		;funcret
 29663  00A1A6                     __end_of_bootloader_get_file_size:
 29664                           	opt stack 0
 29665                           tosu	equ	0xFFF
 29666                           tosh	equ	0xFFE
 29667                           tosl	equ	0xFFD
 29668                           pclath	equ	0xFFA
 29669                           tblptru	equ	0xFF8
 29670                           tblptrh	equ	0xFF7
 29671                           tblptrl	equ	0xFF6
 29672                           tablat	equ	0xFF5
 29673                           prodh	equ	0xFF4
 29674                           prodl	equ	0xFF3
 29675                           intcon	equ	0xFF2
 29676                           intcon2	equ	0xFF1
 29677                           intcon3	equ	0xFF0
 29678                           indf0	equ	0xFEF
 29679                           postinc0	equ	0xFEE
 29680                           fsr0h	equ	0xFEA
 29681                           fsr0l	equ	0xFE9
 29682                           wreg	equ	0xFE8
 29683                           indf1	equ	0xFE7
 29684                           postdec1	equ	0xFE5
 29685                           plusw1	equ	0xFE3
 29686                           fsr1h	equ	0xFE2
 29687                           fsr1l	equ	0xFE1
 29688                           indf2	equ	0xFDF
 29689                           postinc2	equ	0xFDE
 29690                           postdec2	equ	0xFDD
 29691                           plusw2	equ	0xFDB
 29692                           fsr2h	equ	0xFDA
 29693                           fsr2l	equ	0xFD9
 29694                           status	equ	0xFD8
 29695                           
 29696 ;; *************** function __display_failed *****************
 29697 ;; Defined at:
 29698 ;;		line 465 in file "display.c"
 29699 ;; Parameters:    Size  Location     Type
 29700 ;;		None
 29701 ;; Auto vars:     Size  Location     Type
 29702 ;;  cntr            1   34[COMRAM] unsigned char 
 29703 ;;  start           1    0        unsigned char 
 29704 ;; Return value:  Size  Location     Type
 29705 ;;                  1    wreg      void 
 29706 ;; Registers used:
 29707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29708 ;; Tracked objects:
 29709 ;;		On entry : 0/0
 29710 ;;		On exit  : 0/0
 29711 ;;		Unchanged: 0/0
 29712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29717 ;;Total ram usage:        1 bytes
 29718 ;; Hardware stack levels used:    1
 29719 ;; Hardware stack levels required when called:    5
 29720 ;; This function calls:
 29721 ;;		__display_itoa_u16
 29722 ;;		__display_itoa_u32
 29723 ;;		_bootloader_get_entries
 29724 ;;		_bootloader_get_error
 29725 ;;		_bootloader_get_rec_address
 29726 ;; This function is called by:
 29727 ;;		_display_prepare
 29728 ;; This function uses a non-reentrant model
 29729 ;;
 29730                           
 29731                           	psect	text141
 29732  00129A                     __ptext141:
 29733                           	opt stack 0
 29734  00129A                     __display_failed:
 29735                           	opt stack 21
 29736                           
 29737                           ;display.c: 467: uint8_t cntr;;display.c: 468: uint8_t start;;display.c: 469: cntr = 0;
 29738                           
 29739                           ;incstack = 0
 29740  00129A  0E00               	movlw	0
 29741  00129C  6E23               	movwf	__display_failed@cntr,c
 29742                           
 29743                           ;display.c: 470: while(failed_line1[cntr])
 29744  00129E  D017               	goto	l1645
 29745  0012A0                     
 29746                           ;display.c: 471: display_content[0][cntr] = failed_line1[cntr++];
 29747  0012A0  5023               	movf	__display_failed@cntr,w,c
 29748  0012A2  0D01               	mullw	1
 29749  0012A4  0E98               	movlw	low _failed_line1
 29750  0012A6  24F3               	addwf	prodl,w,c
 29751  0012A8  6EF6               	movwf	tblptrl,c
 29752  0012AA  0EBD               	movlw	high _failed_line1
 29753  0012AC  20F4               	addwfc	prodh,w,c
 29754  0012AE  6EF7               	movwf	tblptrh,c
 29755  0012B0                     	if	1	;There are 3 active tblptr bytes
 29756  0012B0  6AF8               	clrf	tblptru,c
 29757  0012B2  0E00               	movlw	low (__mediumconst shr (0+16))
 29758  0012B4  22F8               	addwfc	tblptru,f,c
 29759  0012B6                     	endif
 29760  0012B6  5023               	movf	__display_failed@cntr,w,c
 29761  0012B8  0D01               	mullw	1
 29762  0012BA  0E00               	movlw	low _display_content
 29763  0012BC  24F3               	addwf	prodl,w,c
 29764  0012BE  6ED9               	movwf	fsr2l,c
 29765  0012C0  0E02               	movlw	high _display_content
 29766  0012C2  20F4               	addwfc	prodh,w,c
 29767  0012C4  6EDA               	movwf	fsr2h,c
 29768  0012C6  0008               	tblrd		*
 29769  0012C8  CFF5 FFDF          	movff	tablat,indf2
 29770  0012CC  2A23               	incf	__display_failed@cntr,f,c
 29771  0012CE                     l1645:
 29772  0012CE  5023               	movf	__display_failed@cntr,w,c
 29773  0012D0  0D01               	mullw	1
 29774  0012D2  0E98               	movlw	low _failed_line1
 29775  0012D4  24F3               	addwf	prodl,w,c
 29776  0012D6  6EF6               	movwf	tblptrl,c
 29777  0012D8  0EBD               	movlw	high _failed_line1
 29778  0012DA  20F4               	addwfc	prodh,w,c
 29779  0012DC  6EF7               	movwf	tblptrh,c
 29780  0012DE                     	if	1	;There are 3 active tblptr bytes
 29781  0012DE  6AF8               	clrf	tblptru,c
 29782  0012E0  0E00               	movlw	low (__mediumconst shr (0+16))
 29783  0012E2  22F8               	addwfc	tblptru,f,c
 29784  0012E4                     	endif
 29785  0012E4  0008               	tblrd		*
 29786  0012E6  50F5               	movf	tablat,w,c
 29787  0012E8  0900               	iorlw	0
 29788  0012EA  A4D8               	btfss	status,2,c
 29789  0012EC  D7D9               	goto	l1646
 29790                           
 29791                           ;display.c: 472: cntr = 0;
 29792  0012EE  0E00               	movlw	0
 29793  0012F0  6E23               	movwf	__display_failed@cntr,c
 29794                           
 29795                           ;display.c: 473: while(failed_line2[cntr])
 29796  0012F2  D017               	goto	l1648
 29797  0012F4                     
 29798                           ;display.c: 474: display_content[1][cntr] = failed_line2[cntr++];
 29799  0012F4  5023               	movf	__display_failed@cntr,w,c
 29800  0012F6  0D01               	mullw	1
 29801  0012F8  0EE2               	movlw	low _failed_line2
 29802  0012FA  24F3               	addwf	prodl,w,c
 29803  0012FC  6EF6               	movwf	tblptrl,c
 29804  0012FE  0EBC               	movlw	high _failed_line2
 29805  001300  20F4               	addwfc	prodh,w,c
 29806  001302  6EF7               	movwf	tblptrh,c
 29807  001304                     	if	1	;There are 3 active tblptr bytes
 29808  001304  6AF8               	clrf	tblptru,c
 29809  001306  0E00               	movlw	low (__mediumconst shr (0+16))
 29810  001308  22F8               	addwfc	tblptru,f,c
 29811  00130A                     	endif
 29812  00130A  5023               	movf	__display_failed@cntr,w,c
 29813  00130C  0D01               	mullw	1
 29814  00130E  0E14               	movlw	low (_display_content+20)
 29815  001310  24F3               	addwf	prodl,w,c
 29816  001312  6ED9               	movwf	fsr2l,c
 29817  001314  0E02               	movlw	high (_display_content+20)
 29818  001316  20F4               	addwfc	prodh,w,c
 29819  001318  6EDA               	movwf	fsr2h,c
 29820  00131A  0008               	tblrd		*
 29821  00131C  CFF5 FFDF          	movff	tablat,indf2
 29822  001320  2A23               	incf	__display_failed@cntr,f,c
 29823  001322                     l1648:
 29824  001322  5023               	movf	__display_failed@cntr,w,c
 29825  001324  0D01               	mullw	1
 29826  001326  0EE2               	movlw	low _failed_line2
 29827  001328  24F3               	addwf	prodl,w,c
 29828  00132A  6EF6               	movwf	tblptrl,c
 29829  00132C  0EBC               	movlw	high _failed_line2
 29830  00132E  20F4               	addwfc	prodh,w,c
 29831  001330  6EF7               	movwf	tblptrh,c
 29832  001332                     	if	1	;There are 3 active tblptr bytes
 29833  001332  6AF8               	clrf	tblptru,c
 29834  001334  0E00               	movlw	low (__mediumconst shr (0+16))
 29835  001336  22F8               	addwfc	tblptru,f,c
 29836  001338                     	endif
 29837  001338  0008               	tblrd		*
 29838  00133A  50F5               	movf	tablat,w,c
 29839  00133C  0900               	iorlw	0
 29840  00133E  A4D8               	btfss	status,2,c
 29841  001340  D7D9               	goto	l1649
 29842                           
 29843                           ;display.c: 476: cntr = 0;
 29844  001342  0E00               	movlw	0
 29845  001344  6E23               	movwf	__display_failed@cntr,c
 29846                           
 29847                           ;display.c: 477: switch(bootloader_get_error())
 29848  001346  D0D6               	goto	l1651
 29849  001348                     
 29850                           ;display.c: 481: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29851  001348  5023               	movf	__display_failed@cntr,w,c
 29852  00134A  0D01               	mullw	1
 29853  00134C  0EAA               	movlw	low _failed_line3_startCode
 29854  00134E  24F3               	addwf	prodl,w,c
 29855  001350  6EF6               	movwf	tblptrl,c
 29856  001352  0EBC               	movlw	high _failed_line3_startCode
 29857  001354  20F4               	addwfc	prodh,w,c
 29858  001356  6EF7               	movwf	tblptrh,c
 29859  001358                     	if	1	;There are 3 active tblptr bytes
 29860  001358  6AF8               	clrf	tblptru,c
 29861  00135A  0E00               	movlw	low (__mediumconst shr (0+16))
 29862  00135C  22F8               	addwfc	tblptru,f,c
 29863  00135E                     	endif
 29864  00135E  5023               	movf	__display_failed@cntr,w,c
 29865  001360  0D01               	mullw	1
 29866  001362  0E28               	movlw	low (_display_content+40)
 29867  001364  24F3               	addwf	prodl,w,c
 29868  001366  6ED9               	movwf	fsr2l,c
 29869  001368  0E02               	movlw	high (_display_content+40)
 29870  00136A  20F4               	addwfc	prodh,w,c
 29871  00136C  6EDA               	movwf	fsr2h,c
 29872  00136E  0008               	tblrd		*
 29873  001370  CFF5 FFDF          	movff	tablat,indf2
 29874  001374  2A23               	incf	__display_failed@cntr,f,c
 29875  001376  5023               	movf	__display_failed@cntr,w,c
 29876  001378  0D01               	mullw	1
 29877  00137A  0EAA               	movlw	low _failed_line3_startCode
 29878  00137C  24F3               	addwf	prodl,w,c
 29879  00137E  6EF6               	movwf	tblptrl,c
 29880  001380  0EBC               	movlw	high _failed_line3_startCode
 29881  001382  20F4               	addwfc	prodh,w,c
 29882  001384  6EF7               	movwf	tblptrh,c
 29883  001386                     	if	1	;There are 3 active tblptr bytes
 29884  001386  6AF8               	clrf	tblptru,c
 29885  001388  0E00               	movlw	low (__mediumconst shr (0+16))
 29886  00138A  22F8               	addwfc	tblptru,f,c
 29887  00138C                     	endif
 29888  00138C  0008               	tblrd		*
 29889  00138E  50F5               	movf	tablat,w,c
 29890  001390  0900               	iorlw	0
 29891  001392  B4D8               	btfsc	status,2,c
 29892  001394  D0C0               	goto	l1656
 29893  001396  D7D8               	goto	l1654
 29894  001398                     
 29895                           ;display.c: 486: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29896  001398  5023               	movf	__display_failed@cntr,w,c
 29897  00139A  0D01               	mullw	1
 29898  00139C  0EF8               	movlw	low _failed_line3_checksum
 29899  00139E  24F3               	addwf	prodl,w,c
 29900  0013A0  6EF6               	movwf	tblptrl,c
 29901  0013A2  0EBD               	movlw	high _failed_line3_checksum
 29902  0013A4  20F4               	addwfc	prodh,w,c
 29903  0013A6  6EF7               	movwf	tblptrh,c
 29904  0013A8                     	if	1	;There are 3 active tblptr bytes
 29905  0013A8  6AF8               	clrf	tblptru,c
 29906  0013AA  0E00               	movlw	low (__mediumconst shr (0+16))
 29907  0013AC  22F8               	addwfc	tblptru,f,c
 29908  0013AE                     	endif
 29909  0013AE  5023               	movf	__display_failed@cntr,w,c
 29910  0013B0  0D01               	mullw	1
 29911  0013B2  0E28               	movlw	low (_display_content+40)
 29912  0013B4  24F3               	addwf	prodl,w,c
 29913  0013B6  6ED9               	movwf	fsr2l,c
 29914  0013B8  0E02               	movlw	high (_display_content+40)
 29915  0013BA  20F4               	addwfc	prodh,w,c
 29916  0013BC  6EDA               	movwf	fsr2h,c
 29917  0013BE  0008               	tblrd		*
 29918  0013C0  CFF5 FFDF          	movff	tablat,indf2
 29919  0013C4  2A23               	incf	__display_failed@cntr,f,c
 29920  0013C6  5023               	movf	__display_failed@cntr,w,c
 29921  0013C8  0D01               	mullw	1
 29922  0013CA  0EF8               	movlw	low _failed_line3_checksum
 29923  0013CC  24F3               	addwf	prodl,w,c
 29924  0013CE  6EF6               	movwf	tblptrl,c
 29925  0013D0  0EBD               	movlw	high _failed_line3_checksum
 29926  0013D2  20F4               	addwfc	prodh,w,c
 29927  0013D4  6EF7               	movwf	tblptrh,c
 29928  0013D6                     	if	1	;There are 3 active tblptr bytes
 29929  0013D6  6AF8               	clrf	tblptru,c
 29930  0013D8  0E00               	movlw	low (__mediumconst shr (0+16))
 29931  0013DA  22F8               	addwfc	tblptru,f,c
 29932  0013DC                     	endif
 29933  0013DC  0008               	tblrd		*
 29934  0013DE  50F5               	movf	tablat,w,c
 29935  0013E0  0900               	iorlw	0
 29936  0013E2  B4D8               	btfsc	status,2,c
 29937  0013E4  D098               	goto	l1656
 29938  0013E6  D7D8               	goto	l1659
 29939  0013E8                     
 29940                           ;display.c: 493: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29941  0013E8  5023               	movf	__display_failed@cntr,w,c
 29942  0013EA  0D01               	mullw	1
 29943  0013EC  0E07               	movlw	low _failed_line3_noNextRecord
 29944  0013EE  24F3               	addwf	prodl,w,c
 29945  0013F0  6EF6               	movwf	tblptrl,c
 29946  0013F2  0EBE               	movlw	high _failed_line3_noNextRecord
 29947  0013F4  20F4               	addwfc	prodh,w,c
 29948  0013F6  6EF7               	movwf	tblptrh,c
 29949  0013F8                     	if	1	;There are 3 active tblptr bytes
 29950  0013F8  6AF8               	clrf	tblptru,c
 29951  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 29952  0013FC  22F8               	addwfc	tblptru,f,c
 29953  0013FE                     	endif
 29954  0013FE  5023               	movf	__display_failed@cntr,w,c
 29955  001400  0D01               	mullw	1
 29956  001402  0E28               	movlw	low (_display_content+40)
 29957  001404  24F3               	addwf	prodl,w,c
 29958  001406  6ED9               	movwf	fsr2l,c
 29959  001408  0E02               	movlw	high (_display_content+40)
 29960  00140A  20F4               	addwfc	prodh,w,c
 29961  00140C  6EDA               	movwf	fsr2h,c
 29962  00140E  0008               	tblrd		*
 29963  001410  CFF5 FFDF          	movff	tablat,indf2
 29964  001414  2A23               	incf	__display_failed@cntr,f,c
 29965  001416  5023               	movf	__display_failed@cntr,w,c
 29966  001418  0D01               	mullw	1
 29967  00141A  0E07               	movlw	low _failed_line3_noNextRecord
 29968  00141C  24F3               	addwf	prodl,w,c
 29969  00141E  6EF6               	movwf	tblptrl,c
 29970  001420  0EBE               	movlw	high _failed_line3_noNextRecord
 29971  001422  20F4               	addwfc	prodh,w,c
 29972  001424  6EF7               	movwf	tblptrh,c
 29973  001426                     	if	1	;There are 3 active tblptr bytes
 29974  001426  6AF8               	clrf	tblptru,c
 29975  001428  0E00               	movlw	low (__mediumconst shr (0+16))
 29976  00142A  22F8               	addwfc	tblptru,f,c
 29977  00142C                     	endif
 29978  00142C  0008               	tblrd		*
 29979  00142E  50F5               	movf	tablat,w,c
 29980  001430  0900               	iorlw	0
 29981  001432  B4D8               	btfsc	status,2,c
 29982  001434  D070               	goto	l1656
 29983  001436  D7D8               	goto	l1663
 29984  001438                     
 29985                           ;display.c: 498: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 29986  001438  5023               	movf	__display_failed@cntr,w,c
 29987  00143A  0D01               	mullw	1
 29988  00143C  0E25               	movlw	low _failed_line3_dataTooLong
 29989  00143E  24F3               	addwf	prodl,w,c
 29990  001440  6EF6               	movwf	tblptrl,c
 29991  001442  0EBE               	movlw	high _failed_line3_dataTooLong
 29992  001444  20F4               	addwfc	prodh,w,c
 29993  001446  6EF7               	movwf	tblptrh,c
 29994  001448                     	if	1	;There are 3 active tblptr bytes
 29995  001448  6AF8               	clrf	tblptru,c
 29996  00144A  0E00               	movlw	low (__mediumconst shr (0+16))
 29997  00144C  22F8               	addwfc	tblptru,f,c
 29998  00144E                     	endif
 29999  00144E  5023               	movf	__display_failed@cntr,w,c
 30000  001450  0D01               	mullw	1
 30001  001452  0E28               	movlw	low (_display_content+40)
 30002  001454  24F3               	addwf	prodl,w,c
 30003  001456  6ED9               	movwf	fsr2l,c
 30004  001458  0E02               	movlw	high (_display_content+40)
 30005  00145A  20F4               	addwfc	prodh,w,c
 30006  00145C  6EDA               	movwf	fsr2h,c
 30007  00145E  0008               	tblrd		*
 30008  001460  CFF5 FFDF          	movff	tablat,indf2
 30009  001464  2A23               	incf	__display_failed@cntr,f,c
 30010  001466  5023               	movf	__display_failed@cntr,w,c
 30011  001468  0D01               	mullw	1
 30012  00146A  0E25               	movlw	low _failed_line3_dataTooLong
 30013  00146C  24F3               	addwf	prodl,w,c
 30014  00146E  6EF6               	movwf	tblptrl,c
 30015  001470  0EBE               	movlw	high _failed_line3_dataTooLong
 30016  001472  20F4               	addwfc	prodh,w,c
 30017  001474  6EF7               	movwf	tblptrh,c
 30018  001476                     	if	1	;There are 3 active tblptr bytes
 30019  001476  6AF8               	clrf	tblptru,c
 30020  001478  0E00               	movlw	low (__mediumconst shr (0+16))
 30021  00147A  22F8               	addwfc	tblptru,f,c
 30022  00147C                     	endif
 30023  00147C  0008               	tblrd		*
 30024  00147E  50F5               	movf	tablat,w,c
 30025  001480  0900               	iorlw	0
 30026  001482  B4D8               	btfsc	status,2,c
 30027  001484  D048               	goto	l1656
 30028  001486  D7D8               	goto	l1667
 30029  001488                     
 30030                           ;display.c: 503: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 30031  001488  5023               	movf	__display_failed@cntr,w,c
 30032  00148A  0D01               	mullw	1
 30033  00148C  0E82               	movlw	low _failed_line3_addressRange
 30034  00148E  24F3               	addwf	prodl,w,c
 30035  001490  6EF6               	movwf	tblptrl,c
 30036  001492  0EBC               	movlw	high _failed_line3_addressRange
 30037  001494  20F4               	addwfc	prodh,w,c
 30038  001496  6EF7               	movwf	tblptrh,c
 30039  001498                     	if	1	;There are 3 active tblptr bytes
 30040  001498  6AF8               	clrf	tblptru,c
 30041  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
 30042  00149C  22F8               	addwfc	tblptru,f,c
 30043  00149E                     	endif
 30044  00149E  5023               	movf	__display_failed@cntr,w,c
 30045  0014A0  0D01               	mullw	1
 30046  0014A2  0E28               	movlw	low (_display_content+40)
 30047  0014A4  24F3               	addwf	prodl,w,c
 30048  0014A6  6ED9               	movwf	fsr2l,c
 30049  0014A8  0E02               	movlw	high (_display_content+40)
 30050  0014AA  20F4               	addwfc	prodh,w,c
 30051  0014AC  6EDA               	movwf	fsr2h,c
 30052  0014AE  0008               	tblrd		*
 30053  0014B0  CFF5 FFDF          	movff	tablat,indf2
 30054  0014B4  2A23               	incf	__display_failed@cntr,f,c
 30055  0014B6  5023               	movf	__display_failed@cntr,w,c
 30056  0014B8  0D01               	mullw	1
 30057  0014BA  0E82               	movlw	low _failed_line3_addressRange
 30058  0014BC  24F3               	addwf	prodl,w,c
 30059  0014BE  6EF6               	movwf	tblptrl,c
 30060  0014C0  0EBC               	movlw	high _failed_line3_addressRange
 30061  0014C2  20F4               	addwfc	prodh,w,c
 30062  0014C4  6EF7               	movwf	tblptrh,c
 30063  0014C6                     	if	1	;There are 3 active tblptr bytes
 30064  0014C6  6AF8               	clrf	tblptru,c
 30065  0014C8  0E00               	movlw	low (__mediumconst shr (0+16))
 30066  0014CA  22F8               	addwfc	tblptru,f,c
 30067  0014CC                     	endif
 30068  0014CC  0008               	tblrd		*
 30069  0014CE  50F5               	movf	tablat,w,c
 30070  0014D0  0900               	iorlw	0
 30071  0014D2  A4D8               	btfss	status,2,c
 30072  0014D4  D7D9               	goto	l1671
 30073                           
 30074                           ;display.c: 504: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 30075  0014D6  EC2F  F051         	call	_bootloader_get_rec_address	;wreg free
 30076  0014DA  C001  F01D         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 30077  0014DE  C002  F01E         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 30078  0014E2  6A1F               	clrf	__display_itoa_u32@value+2,c
 30079  0014E4  6A20               	clrf	__display_itoa_u32@value+3,c
 30080  0014E6  0E4A               	movlw	low (_display_content+74)
 30081  0014E8  6E21               	movwf	__display_itoa_u32@text,c
 30082  0014EA  0E02               	movlw	high (_display_content+74)
 30083  0014EC  6E22               	movwf	__display_itoa_u32@text+1,c
 30084  0014EE  EC06  F006         	call	__display_itoa_u32	;wreg free
 30085                           
 30086                           ;display.c: 507: }
 30087                           
 30088                           ;display.c: 505: break;
 30089  0014F2  D011               	goto	l1656
 30090  0014F4                     l1651:
 30091  0014F4  EC68  F051         	call	_bootloader_get_error	;wreg free
 30092                           
 30093                           ; Switch size 1, requested type "space"
 30094                           ; Number of cases is 5, Range of values is 11 to 15
 30095                           ; switch strategies available:
 30096                           ; Name         Instructions Cycles
 30097                           ; simple_byte           16     9 (average)
 30098                           ;	Chosen strategy is simple_byte
 30099  0014F8  0A0B               	xorlw	11	; case 11
 30100  0014FA  B4D8               	btfsc	status,2,c
 30101  0014FC  D7DC               	goto	l1670
 30102  0014FE  0A07               	xorlw	7	; case 12
 30103  001500  B4D8               	btfsc	status,2,c
 30104  001502  D7B1               	goto	l1666
 30105  001504  0A01               	xorlw	1	; case 13
 30106  001506  B4D8               	btfsc	status,2,c
 30107  001508  D786               	goto	l1662
 30108  00150A  0A03               	xorlw	3	; case 14
 30109  00150C  B4D8               	btfsc	status,2,c
 30110  00150E  D75B               	goto	l1658
 30111  001510  0A01               	xorlw	1	; case 15
 30112  001512  B4D8               	btfsc	status,2,c
 30113  001514  D730               	goto	l1653
 30114  001516                     l1656:
 30115                           
 30116                           ;display.c: 509: cntr = 0;
 30117  001516  0E00               	movlw	0
 30118  001518  6E23               	movwf	__display_failed@cntr,c
 30119                           
 30120                           ;display.c: 510: while(failed_line4[cntr])
 30121  00151A  D017               	goto	l1673
 30122  00151C                     
 30123                           ;display.c: 511: display_content[3][cntr] = failed_line4[cntr++];
 30124  00151C  5023               	movf	__display_failed@cntr,w,c
 30125  00151E  0D01               	mullw	1
 30126  001520  0E69               	movlw	low _failed_line4
 30127  001522  24F3               	addwf	prodl,w,c
 30128  001524  6EF6               	movwf	tblptrl,c
 30129  001526  0EBE               	movlw	high _failed_line4
 30130  001528  20F4               	addwfc	prodh,w,c
 30131  00152A  6EF7               	movwf	tblptrh,c
 30132  00152C                     	if	1	;There are 3 active tblptr bytes
 30133  00152C  6AF8               	clrf	tblptru,c
 30134  00152E  0E00               	movlw	low (__mediumconst shr (0+16))
 30135  001530  22F8               	addwfc	tblptru,f,c
 30136  001532                     	endif
 30137  001532  5023               	movf	__display_failed@cntr,w,c
 30138  001534  0D01               	mullw	1
 30139  001536  0E3C               	movlw	low (_display_content+60)
 30140  001538  24F3               	addwf	prodl,w,c
 30141  00153A  6ED9               	movwf	fsr2l,c
 30142  00153C  0E02               	movlw	high (_display_content+60)
 30143  00153E  20F4               	addwfc	prodh,w,c
 30144  001540  6EDA               	movwf	fsr2h,c
 30145  001542  0008               	tblrd		*
 30146  001544  CFF5 FFDF          	movff	tablat,indf2
 30147  001548  2A23               	incf	__display_failed@cntr,f,c
 30148  00154A                     l1673:
 30149  00154A  5023               	movf	__display_failed@cntr,w,c
 30150  00154C  0D01               	mullw	1
 30151  00154E  0E69               	movlw	low _failed_line4
 30152  001550  24F3               	addwf	prodl,w,c
 30153  001552  6EF6               	movwf	tblptrl,c
 30154  001554  0EBE               	movlw	high _failed_line4
 30155  001556  20F4               	addwfc	prodh,w,c
 30156  001558  6EF7               	movwf	tblptrh,c
 30157  00155A                     	if	1	;There are 3 active tblptr bytes
 30158  00155A  6AF8               	clrf	tblptru,c
 30159  00155C  0E00               	movlw	low (__mediumconst shr (0+16))
 30160  00155E  22F8               	addwfc	tblptru,f,c
 30161  001560                     	endif
 30162  001560  0008               	tblrd		*
 30163  001562  50F5               	movf	tablat,w,c
 30164  001564  0900               	iorlw	0
 30165  001566  A4D8               	btfss	status,2,c
 30166  001568  D7D9               	goto	l1674
 30167                           
 30168                           ;display.c: 512: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 30169  00156A  EC34  F051         	call	_bootloader_get_entries	;wreg free
 30170  00156E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 30171  001572  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 30172  001576  5023               	movf	__display_failed@cntr,w,c
 30173  001578  0D01               	mullw	1
 30174  00157A  0E3C               	movlw	low (_display_content+60)
 30175  00157C  24F3               	addwf	prodl,w,c
 30176  00157E  6E1B               	movwf	__display_itoa_u16@text,c
 30177  001580  0E02               	movlw	high (_display_content+60)
 30178  001582  20F4               	addwfc	prodh,w,c
 30179  001584  6E1C               	movwf	__display_itoa_u16@text+1,c
 30180  001586  EC06  F03D         	call	__display_itoa_u16	;wreg free
 30181  00158A  0012               	return		;funcret
 30182  00158C                     __end_of__display_failed:
 30183                           	opt stack 0
 30184                           tosu	equ	0xFFF
 30185                           tosh	equ	0xFFE
 30186                           tosl	equ	0xFFD
 30187                           pclath	equ	0xFFA
 30188                           tblptru	equ	0xFF8
 30189                           tblptrh	equ	0xFF7
 30190                           tblptrl	equ	0xFF6
 30191                           tablat	equ	0xFF5
 30192                           prodh	equ	0xFF4
 30193                           prodl	equ	0xFF3
 30194                           intcon	equ	0xFF2
 30195                           intcon2	equ	0xFF1
 30196                           intcon3	equ	0xFF0
 30197                           indf0	equ	0xFEF
 30198                           postinc0	equ	0xFEE
 30199                           fsr0h	equ	0xFEA
 30200                           fsr0l	equ	0xFE9
 30201                           wreg	equ	0xFE8
 30202                           indf1	equ	0xFE7
 30203                           postdec1	equ	0xFE5
 30204                           plusw1	equ	0xFE3
 30205                           fsr1h	equ	0xFE2
 30206                           fsr1l	equ	0xFE1
 30207                           indf2	equ	0xFDF
 30208                           postinc2	equ	0xFDE
 30209                           postdec2	equ	0xFDD
 30210                           plusw2	equ	0xFDB
 30211                           fsr2h	equ	0xFDA
 30212                           fsr2l	equ	0xFD9
 30213                           status	equ	0xFD8
 30214                           
 30215 ;; *************** function _bootloader_get_rec_address *****************
 30216 ;; Defined at:
 30217 ;;		line 488 in file "bootloader.c"
 30218 ;; Parameters:    Size  Location     Type
 30219 ;;		None
 30220 ;; Auto vars:     Size  Location     Type
 30221 ;;		None
 30222 ;; Return value:  Size  Location     Type
 30223 ;;                  2    0[COMRAM] unsigned int 
 30224 ;; Registers used:
 30225 ;;		None
 30226 ;; Tracked objects:
 30227 ;;		On entry : 0/0
 30228 ;;		On exit  : 0/0
 30229 ;;		Unchanged: 0/0
 30230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30235 ;;Total ram usage:        2 bytes
 30236 ;; Hardware stack levels used:    1
 30237 ;; This function calls:
 30238 ;;		Nothing
 30239 ;; This function is called by:
 30240 ;;		__display_failed
 30241 ;;		__fill_buffer_get_bootloader_details
 30242 ;; This function uses a non-reentrant model
 30243 ;;
 30244                           
 30245                           	psect	text142
 30246  00A25E                     __ptext142:
 30247                           	opt stack 0
 30248  00A25E                     _bootloader_get_rec_address:
 30249                           	opt stack 25
 30250                           
 30251                           ;bootloader.c: 491: return hex_file_entry.address;
 30252                           
 30253                           ;incstack = 0
 30254  00A25E  C195  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30255  00A262  C196  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30256  00A266  0012               	return		;funcret
 30257  00A268                     __end_of_bootloader_get_rec_address:
 30258                           	opt stack 0
 30259                           tosu	equ	0xFFF
 30260                           tosh	equ	0xFFE
 30261                           tosl	equ	0xFFD
 30262                           pclath	equ	0xFFA
 30263                           tblptru	equ	0xFF8
 30264                           tblptrh	equ	0xFF7
 30265                           tblptrl	equ	0xFF6
 30266                           tablat	equ	0xFF5
 30267                           prodh	equ	0xFF4
 30268                           prodl	equ	0xFF3
 30269                           intcon	equ	0xFF2
 30270                           intcon2	equ	0xFF1
 30271                           intcon3	equ	0xFF0
 30272                           indf0	equ	0xFEF
 30273                           postinc0	equ	0xFEE
 30274                           fsr0h	equ	0xFEA
 30275                           fsr0l	equ	0xFE9
 30276                           wreg	equ	0xFE8
 30277                           indf1	equ	0xFE7
 30278                           postdec1	equ	0xFE5
 30279                           plusw1	equ	0xFE3
 30280                           fsr1h	equ	0xFE2
 30281                           fsr1l	equ	0xFE1
 30282                           indf2	equ	0xFDF
 30283                           postinc2	equ	0xFDE
 30284                           postdec2	equ	0xFDD
 30285                           plusw2	equ	0xFDB
 30286                           fsr2h	equ	0xFDA
 30287                           fsr2l	equ	0xFD9
 30288                           status	equ	0xFD8
 30289                           
 30290 ;; *************** function _bootloader_get_error *****************
 30291 ;; Defined at:
 30292 ;;		line 478 in file "bootloader.c"
 30293 ;; Parameters:    Size  Location     Type
 30294 ;;		None
 30295 ;; Auto vars:     Size  Location     Type
 30296 ;;		None
 30297 ;; Return value:  Size  Location     Type
 30298 ;;                  1    wreg      enum E7018
 30299 ;; Registers used:
 30300 ;;		wreg, status,2
 30301 ;; Tracked objects:
 30302 ;;		On entry : 0/0
 30303 ;;		On exit  : 0/0
 30304 ;;		Unchanged: 0/0
 30305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30310 ;;Total ram usage:        0 bytes
 30311 ;; Hardware stack levels used:    1
 30312 ;; This function calls:
 30313 ;;		Nothing
 30314 ;; This function is called by:
 30315 ;;		__display_failed
 30316 ;;		__fill_buffer_get_bootloader_details
 30317 ;; This function uses a non-reentrant model
 30318 ;;
 30319                           
 30320                           	psect	text143
 30321  00A2D0                     __ptext143:
 30322                           	opt stack 0
 30323  00A2D0                     _bootloader_get_error:
 30324                           	opt stack 25
 30325                           
 30326                           ;bootloader.c: 480: return last_error;
 30327                           
 30328                           ;incstack = 0
 30329  00A2D0  0101               	movlb	1	; () banked
 30330  00A2D2  518E               	movf	_last_error& (0+255),w,b
 30331  00A2D4  0012               	return	
 30332  00A2D6                     __end_of_bootloader_get_error:
 30333                           	opt stack 0
 30334                           tosu	equ	0xFFF
 30335                           tosh	equ	0xFFE
 30336                           tosl	equ	0xFFD
 30337                           pclath	equ	0xFFA
 30338                           tblptru	equ	0xFF8
 30339                           tblptrh	equ	0xFF7
 30340                           tblptrl	equ	0xFF6
 30341                           tablat	equ	0xFF5
 30342                           prodh	equ	0xFF4
 30343                           prodl	equ	0xFF3
 30344                           intcon	equ	0xFF2
 30345                           intcon2	equ	0xFF1
 30346                           intcon3	equ	0xFF0
 30347                           indf0	equ	0xFEF
 30348                           postinc0	equ	0xFEE
 30349                           fsr0h	equ	0xFEA
 30350                           fsr0l	equ	0xFE9
 30351                           wreg	equ	0xFE8
 30352                           indf1	equ	0xFE7
 30353                           postdec1	equ	0xFE5
 30354                           plusw1	equ	0xFE3
 30355                           fsr1h	equ	0xFE2
 30356                           fsr1l	equ	0xFE1
 30357                           indf2	equ	0xFDF
 30358                           postinc2	equ	0xFDE
 30359                           postdec2	equ	0xFDD
 30360                           plusw2	equ	0xFDB
 30361                           fsr2h	equ	0xFDA
 30362                           fsr2l	equ	0xFD9
 30363                           status	equ	0xFD8
 30364                           
 30365 ;; *************** function _bootloader_get_entries *****************
 30366 ;; Defined at:
 30367 ;;		line 468 in file "bootloader.c"
 30368 ;; Parameters:    Size  Location     Type
 30369 ;;		None
 30370 ;; Auto vars:     Size  Location     Type
 30371 ;;		None
 30372 ;; Return value:  Size  Location     Type
 30373 ;;                  2    0[COMRAM] unsigned int 
 30374 ;; Registers used:
 30375 ;;		None
 30376 ;; Tracked objects:
 30377 ;;		On entry : 0/0
 30378 ;;		On exit  : 0/0
 30379 ;;		Unchanged: 0/0
 30380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30385 ;;Total ram usage:        2 bytes
 30386 ;; Hardware stack levels used:    1
 30387 ;; This function calls:
 30388 ;;		Nothing
 30389 ;; This function is called by:
 30390 ;;		__display_verify
 30391 ;;		__display_failed
 30392 ;;		__display_programming
 30393 ;;		__fill_buffer_get_bootloader_details
 30394 ;; This function uses a non-reentrant model
 30395 ;;
 30396                           
 30397                           	psect	text144
 30398  00A268                     __ptext144:
 30399                           	opt stack 0
 30400  00A268                     _bootloader_get_entries:
 30401                           	opt stack 25
 30402                           
 30403                           ;bootloader.c: 470: return hex_file_entries;
 30404                           
 30405                           ; BSR set to: 1
 30406                           ;incstack = 0
 30407  00A268  C17A  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30408  00A26C  C17B  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30409  00A270  0012               	return		;funcret
 30410  00A272                     __end_of_bootloader_get_entries:
 30411                           	opt stack 0
 30412                           tosu	equ	0xFFF
 30413                           tosh	equ	0xFFE
 30414                           tosl	equ	0xFFD
 30415                           pclath	equ	0xFFA
 30416                           tblptru	equ	0xFF8
 30417                           tblptrh	equ	0xFF7
 30418                           tblptrl	equ	0xFF6
 30419                           tablat	equ	0xFF5
 30420                           prodh	equ	0xFF4
 30421                           prodl	equ	0xFF3
 30422                           intcon	equ	0xFF2
 30423                           intcon2	equ	0xFF1
 30424                           intcon3	equ	0xFF0
 30425                           indf0	equ	0xFEF
 30426                           postinc0	equ	0xFEE
 30427                           fsr0h	equ	0xFEA
 30428                           fsr0l	equ	0xFE9
 30429                           wreg	equ	0xFE8
 30430                           indf1	equ	0xFE7
 30431                           postdec1	equ	0xFE5
 30432                           plusw1	equ	0xFE3
 30433                           fsr1h	equ	0xFE2
 30434                           fsr1l	equ	0xFE1
 30435                           indf2	equ	0xFDF
 30436                           postinc2	equ	0xFDE
 30437                           postdec2	equ	0xFDD
 30438                           plusw2	equ	0xFDB
 30439                           fsr2h	equ	0xFDA
 30440                           fsr2l	equ	0xFD9
 30441                           status	equ	0xFD8
 30442                           
 30443 ;; *************** function __display_itoa_u32 *****************
 30444 ;; Defined at:
 30445 ;;		line 178 in file "display.c"
 30446 ;; Parameters:    Size  Location     Type
 30447 ;;  value           4   28[COMRAM] unsigned long 
 30448 ;;  text            2   32[COMRAM] PTR unsigned char 
 30449 ;;		 -> display_content(80), 
 30450 ;; Auto vars:     Size  Location     Type
 30451 ;;		None
 30452 ;; Return value:  Size  Location     Type
 30453 ;;                  1    wreg      unsigned char 
 30454 ;; Registers used:
 30455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30456 ;; Tracked objects:
 30457 ;;		On entry : 0/0
 30458 ;;		On exit  : 0/0
 30459 ;;		Unchanged: 0/0
 30460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30461 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30465 ;;Total ram usage:        6 bytes
 30466 ;; Hardware stack levels used:    1
 30467 ;; Hardware stack levels required when called:    4
 30468 ;; This function calls:
 30469 ;;		___lldiv
 30470 ;;		___llmod
 30471 ;;		__display_itoa_u16
 30472 ;;		_itoa
 30473 ;; This function is called by:
 30474 ;;		__display_found
 30475 ;;		__display_failed
 30476 ;; This function uses a non-reentrant model
 30477 ;;
 30478                           
 30479                           	psect	text145
 30480  000C0C                     __ptext145:
 30481                           	opt stack 0
 30482  000C0C                     __display_itoa_u32:
 30483                           	opt stack 21
 30484                           
 30485                           ;display.c: 181: if(value<=0x7FFF)
 30486                           
 30487                           ;incstack = 0
 30488  000C0C  5020               	movf	__display_itoa_u32@value+3,w,c
 30489  000C0E  101F               	iorwf	__display_itoa_u32@value+2,w,c
 30490  000C10  E10F               	bnz	l11772
 30491  000C12  0E80               	movlw	128
 30492  000C14  5C1E               	subwf	__display_itoa_u32@value+1,w,c
 30493  000C16  B0D8               	btfsc	status,0,c
 30494  000C18  D00B               	goto	l1515
 30495                           
 30496                           ;display.c: 182: {;display.c: 183: return _display_itoa_u16((uint16_t) value, text);
 30497  000C1A  C01D  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 30498  000C1E  C01E  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 30499  000C22  C021  F01B         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 30500  000C26  C022  F01C         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 30501  000C2A  EC06  F03D         	call	__display_itoa_u16	;wreg free
 30502  000C2E  0012               	return	
 30503  000C30                     l1515:
 30504  000C30                     l11772:
 30505                           
 30506                           ;display.c: 184: };display.c: 187: if(value>100000000)
 30507  000C30  041D               	decf	__display_itoa_u32@value,w,c
 30508  000C32  0EE1               	movlw	225
 30509  000C34  581E               	subwfb	__display_itoa_u32@value+1,w,c
 30510  000C36  0EF5               	movlw	245
 30511  000C38  581F               	subwfb	__display_itoa_u32@value+2,w,c
 30512  000C3A  0E05               	movlw	5
 30513  000C3C  5820               	subwfb	__display_itoa_u32@value+3,w,c
 30514  000C3E  A0D8               	btfss	status,0,c
 30515  000C40  D04C               	goto	l1517
 30516                           
 30517                           ;display.c: 188: {;display.c: 189: itoa(text, (uint16_t)(value/10000), 10);
 30518  000C42  C021  F011         	movff	__display_itoa_u32@text,itoa@buf
 30519  000C46  C022  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30520  000C4A  C01D  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30521  000C4E  C01E  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30522  000C52  C01F  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30523  000C56  C020  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30524  000C5A  0E10               	movlw	16
 30525  000C5C  6E05               	movwf	___lldiv@divisor,c
 30526  000C5E  0E27               	movlw	39
 30527  000C60  6E06               	movwf	___lldiv@divisor+1,c
 30528  000C62  0E00               	movlw	0
 30529  000C64  6E07               	movwf	___lldiv@divisor+2,c
 30530  000C66  0E00               	movlw	0
 30531  000C68  6E08               	movwf	___lldiv@divisor+3,c
 30532  000C6A  EC73  F043         	call	___lldiv	;wreg free
 30533  000C6E  C001  F013         	movff	?___lldiv,itoa@val
 30534  000C72  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30535  000C76  0E00               	movlw	0
 30536  000C78  6E16               	movwf	itoa@base+1,c
 30537  000C7A  0E0A               	movlw	10
 30538  000C7C  6E15               	movwf	itoa@base,c
 30539  000C7E  EC2C  F04C         	call	_itoa	;wreg free
 30540                           
 30541                           ;display.c: 190: itoa(text+5, (uint16_t)(value%10000), 10);
 30542  000C82  0E05               	movlw	5
 30543  000C84  2421               	addwf	__display_itoa_u32@text,w,c
 30544  000C86  6E11               	movwf	itoa@buf,c
 30545  000C88  0E00               	movlw	0
 30546  000C8A  2022               	addwfc	__display_itoa_u32@text+1,w,c
 30547  000C8C  6E12               	movwf	itoa@buf+1,c
 30548  000C8E  C01D  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30549  000C92  C01E  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30550  000C96  C01F  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30551  000C9A  C020  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30552  000C9E  0E10               	movlw	16
 30553  000CA0  6E05               	movwf	___llmod@divisor,c
 30554  000CA2  0E27               	movlw	39
 30555  000CA4  6E06               	movwf	___llmod@divisor+1,c
 30556  000CA6  0E00               	movlw	0
 30557  000CA8  6E07               	movwf	___llmod@divisor+2,c
 30558  000CAA  0E00               	movlw	0
 30559  000CAC  6E08               	movwf	___llmod@divisor+3,c
 30560  000CAE  EC5F  F046         	call	___llmod	;wreg free
 30561  000CB2  C001  F013         	movff	?___llmod,itoa@val
 30562  000CB6  C002  F014         	movff	?___llmod+1,itoa@val+1
 30563  000CBA  0E00               	movlw	0
 30564  000CBC  6E16               	movwf	itoa@base+1,c
 30565  000CBE  0E0A               	movlw	10
 30566  000CC0  6E15               	movwf	itoa@base,c
 30567  000CC2  EC2C  F04C         	call	_itoa	;wreg free
 30568                           
 30569                           ;display.c: 191: *(text+9) = ' ';
 30570  000CC6  EE20 F009          	lfsr	2,9
 30571  000CCA  5021               	movf	__display_itoa_u32@text,w,c
 30572  000CCC  26D9               	addwf	fsr2l,f,c
 30573  000CCE  5022               	movf	__display_itoa_u32@text+1,w,c
 30574  000CD0  22DA               	addwfc	fsr2h,f,c
 30575  000CD2  0E20               	movlw	32
 30576  000CD4  6EDF               	movwf	indf2,c
 30577                           
 30578                           ;display.c: 192: return 9;
 30579  000CD6  0E09               	movlw	9
 30580                           
 30581                           ;display.c: 193: }
 30582  000CD8  0012               	return	
 30583  000CDA                     l1517:
 30584                           
 30585                           ;display.c: 194: else if(value>10000000)
 30586  000CDA  5020               	movf	__display_itoa_u32@value+3,w,c
 30587  000CDC  E108               	bnz	u8770
 30588  000CDE  0E81               	movlw	129
 30589  000CE0  5C1D               	subwf	__display_itoa_u32@value,w,c
 30590  000CE2  0E96               	movlw	150
 30591  000CE4  581E               	subwfb	__display_itoa_u32@value+1,w,c
 30592  000CE6  0E98               	movlw	152
 30593  000CE8  581F               	subwfb	__display_itoa_u32@value+2,w,c
 30594  000CEA  A0D8               	btfss	status,0,c
 30595  000CEC  D04C               	goto	l1519
 30596  000CEE                     u8770:
 30597                           
 30598                           ;display.c: 195: {;display.c: 196: itoa(text, (uint16_t)(value/10000), 10);
 30599  000CEE  C021  F011         	movff	__display_itoa_u32@text,itoa@buf
 30600  000CF2  C022  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30601  000CF6  C01D  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30602  000CFA  C01E  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30603  000CFE  C01F  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30604  000D02  C020  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30605  000D06  0E10               	movlw	16
 30606  000D08  6E05               	movwf	___lldiv@divisor,c
 30607  000D0A  0E27               	movlw	39
 30608  000D0C  6E06               	movwf	___lldiv@divisor+1,c
 30609  000D0E  0E00               	movlw	0
 30610  000D10  6E07               	movwf	___lldiv@divisor+2,c
 30611  000D12  0E00               	movlw	0
 30612  000D14  6E08               	movwf	___lldiv@divisor+3,c
 30613  000D16  EC73  F043         	call	___lldiv	;wreg free
 30614  000D1A  C001  F013         	movff	?___lldiv,itoa@val
 30615  000D1E  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30616  000D22  0E00               	movlw	0
 30617  000D24  6E16               	movwf	itoa@base+1,c
 30618  000D26  0E0A               	movlw	10
 30619  000D28  6E15               	movwf	itoa@base,c
 30620  000D2A  EC2C  F04C         	call	_itoa	;wreg free
 30621                           
 30622                           ;display.c: 197: itoa(text+4, (uint16_t)(value%10000), 10);
 30623  000D2E  0E04               	movlw	4
 30624  000D30  2421               	addwf	__display_itoa_u32@text,w,c
 30625  000D32  6E11               	movwf	itoa@buf,c
 30626  000D34  0E00               	movlw	0
 30627  000D36  2022               	addwfc	__display_itoa_u32@text+1,w,c
 30628  000D38  6E12               	movwf	itoa@buf+1,c
 30629  000D3A  C01D  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30630  000D3E  C01E  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30631  000D42  C01F  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30632  000D46  C020  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30633  000D4A  0E10               	movlw	16
 30634  000D4C  6E05               	movwf	___llmod@divisor,c
 30635  000D4E  0E27               	movlw	39
 30636  000D50  6E06               	movwf	___llmod@divisor+1,c
 30637  000D52  0E00               	movlw	0
 30638  000D54  6E07               	movwf	___llmod@divisor+2,c
 30639  000D56  0E00               	movlw	0
 30640  000D58  6E08               	movwf	___llmod@divisor+3,c
 30641  000D5A  EC5F  F046         	call	___llmod	;wreg free
 30642  000D5E  C001  F013         	movff	?___llmod,itoa@val
 30643  000D62  C002  F014         	movff	?___llmod+1,itoa@val+1
 30644  000D66  0E00               	movlw	0
 30645  000D68  6E16               	movwf	itoa@base+1,c
 30646  000D6A  0E0A               	movlw	10
 30647  000D6C  6E15               	movwf	itoa@base,c
 30648  000D6E  EC2C  F04C         	call	_itoa	;wreg free
 30649                           
 30650                           ;display.c: 198: *(text+8) = ' ';
 30651  000D72  EE20 F008          	lfsr	2,8
 30652  000D76  5021               	movf	__display_itoa_u32@text,w,c
 30653  000D78  26D9               	addwf	fsr2l,f,c
 30654  000D7A  5022               	movf	__display_itoa_u32@text+1,w,c
 30655  000D7C  22DA               	addwfc	fsr2h,f,c
 30656  000D7E  0E20               	movlw	32
 30657  000D80  6EDF               	movwf	indf2,c
 30658                           
 30659                           ;display.c: 199: return 8;
 30660  000D82  0E08               	movlw	8
 30661                           
 30662                           ;display.c: 200: }
 30663  000D84  0012               	return	
 30664  000D86                     l1519:
 30665                           
 30666                           ;display.c: 201: else if(value>1000000)
 30667  000D86  5020               	movf	__display_itoa_u32@value+3,w,c
 30668  000D88  E108               	bnz	u8780
 30669  000D8A  0E41               	movlw	65
 30670  000D8C  5C1D               	subwf	__display_itoa_u32@value,w,c
 30671  000D8E  0E42               	movlw	66
 30672  000D90  581E               	subwfb	__display_itoa_u32@value+1,w,c
 30673  000D92  0E0F               	movlw	15
 30674  000D94  581F               	subwfb	__display_itoa_u32@value+2,w,c
 30675  000D96  A0D8               	btfss	status,0,c
 30676  000D98  D04C               	goto	l1521
 30677  000D9A                     u8780:
 30678                           
 30679                           ;display.c: 202: {;display.c: 203: itoa(text, (uint16_t)(value/10000), 10);
 30680  000D9A  C021  F011         	movff	__display_itoa_u32@text,itoa@buf
 30681  000D9E  C022  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30682  000DA2  C01D  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30683  000DA6  C01E  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30684  000DAA  C01F  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30685  000DAE  C020  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30686  000DB2  0E10               	movlw	16
 30687  000DB4  6E05               	movwf	___lldiv@divisor,c
 30688  000DB6  0E27               	movlw	39
 30689  000DB8  6E06               	movwf	___lldiv@divisor+1,c
 30690  000DBA  0E00               	movlw	0
 30691  000DBC  6E07               	movwf	___lldiv@divisor+2,c
 30692  000DBE  0E00               	movlw	0
 30693  000DC0  6E08               	movwf	___lldiv@divisor+3,c
 30694  000DC2  EC73  F043         	call	___lldiv	;wreg free
 30695  000DC6  C001  F013         	movff	?___lldiv,itoa@val
 30696  000DCA  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30697  000DCE  0E00               	movlw	0
 30698  000DD0  6E16               	movwf	itoa@base+1,c
 30699  000DD2  0E0A               	movlw	10
 30700  000DD4  6E15               	movwf	itoa@base,c
 30701  000DD6  EC2C  F04C         	call	_itoa	;wreg free
 30702                           
 30703                           ;display.c: 204: itoa(text+3, (uint16_t)(value%10000), 10);
 30704  000DDA  0E03               	movlw	3
 30705  000DDC  2421               	addwf	__display_itoa_u32@text,w,c
 30706  000DDE  6E11               	movwf	itoa@buf,c
 30707  000DE0  0E00               	movlw	0
 30708  000DE2  2022               	addwfc	__display_itoa_u32@text+1,w,c
 30709  000DE4  6E12               	movwf	itoa@buf+1,c
 30710  000DE6  C01D  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30711  000DEA  C01E  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30712  000DEE  C01F  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30713  000DF2  C020  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30714  000DF6  0E10               	movlw	16
 30715  000DF8  6E05               	movwf	___llmod@divisor,c
 30716  000DFA  0E27               	movlw	39
 30717  000DFC  6E06               	movwf	___llmod@divisor+1,c
 30718  000DFE  0E00               	movlw	0
 30719  000E00  6E07               	movwf	___llmod@divisor+2,c
 30720  000E02  0E00               	movlw	0
 30721  000E04  6E08               	movwf	___llmod@divisor+3,c
 30722  000E06  EC5F  F046         	call	___llmod	;wreg free
 30723  000E0A  C001  F013         	movff	?___llmod,itoa@val
 30724  000E0E  C002  F014         	movff	?___llmod+1,itoa@val+1
 30725  000E12  0E00               	movlw	0
 30726  000E14  6E16               	movwf	itoa@base+1,c
 30727  000E16  0E0A               	movlw	10
 30728  000E18  6E15               	movwf	itoa@base,c
 30729  000E1A  EC2C  F04C         	call	_itoa	;wreg free
 30730                           
 30731                           ;display.c: 205: *(text+7) = ' ';
 30732  000E1E  EE20 F007          	lfsr	2,7
 30733  000E22  5021               	movf	__display_itoa_u32@text,w,c
 30734  000E24  26D9               	addwf	fsr2l,f,c
 30735  000E26  5022               	movf	__display_itoa_u32@text+1,w,c
 30736  000E28  22DA               	addwfc	fsr2h,f,c
 30737  000E2A  0E20               	movlw	32
 30738  000E2C  6EDF               	movwf	indf2,c
 30739                           
 30740                           ;display.c: 206: return 7;
 30741  000E2E  0E07               	movlw	7
 30742                           
 30743                           ;display.c: 207: }
 30744  000E30  0012               	return	
 30745  000E32                     l1521:
 30746                           
 30747                           ;display.c: 208: else if(value>100000)
 30748  000E32  5020               	movf	__display_itoa_u32@value+3,w,c
 30749  000E34  E108               	bnz	u8790
 30750  000E36  0EA1               	movlw	161
 30751  000E38  5C1D               	subwf	__display_itoa_u32@value,w,c
 30752  000E3A  0E86               	movlw	134
 30753  000E3C  581E               	subwfb	__display_itoa_u32@value+1,w,c
 30754  000E3E  0E01               	movlw	1
 30755  000E40  581F               	subwfb	__display_itoa_u32@value+2,w,c
 30756  000E42  A0D8               	btfss	status,0,c
 30757  000E44  D04C               	goto	l1523
 30758  000E46                     u8790:
 30759                           
 30760                           ;display.c: 209: {;display.c: 210: itoa(text, (uint16_t)(value/10000), 10);
 30761  000E46  C021  F011         	movff	__display_itoa_u32@text,itoa@buf
 30762  000E4A  C022  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30763  000E4E  C01D  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30764  000E52  C01E  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30765  000E56  C01F  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30766  000E5A  C020  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30767  000E5E  0E10               	movlw	16
 30768  000E60  6E05               	movwf	___lldiv@divisor,c
 30769  000E62  0E27               	movlw	39
 30770  000E64  6E06               	movwf	___lldiv@divisor+1,c
 30771  000E66  0E00               	movlw	0
 30772  000E68  6E07               	movwf	___lldiv@divisor+2,c
 30773  000E6A  0E00               	movlw	0
 30774  000E6C  6E08               	movwf	___lldiv@divisor+3,c
 30775  000E6E  EC73  F043         	call	___lldiv	;wreg free
 30776  000E72  C001  F013         	movff	?___lldiv,itoa@val
 30777  000E76  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30778  000E7A  0E00               	movlw	0
 30779  000E7C  6E16               	movwf	itoa@base+1,c
 30780  000E7E  0E0A               	movlw	10
 30781  000E80  6E15               	movwf	itoa@base,c
 30782  000E82  EC2C  F04C         	call	_itoa	;wreg free
 30783                           
 30784                           ;display.c: 211: itoa(text+2, (uint16_t)(value%10000), 10);
 30785  000E86  0E02               	movlw	2
 30786  000E88  2421               	addwf	__display_itoa_u32@text,w,c
 30787  000E8A  6E11               	movwf	itoa@buf,c
 30788  000E8C  0E00               	movlw	0
 30789  000E8E  2022               	addwfc	__display_itoa_u32@text+1,w,c
 30790  000E90  6E12               	movwf	itoa@buf+1,c
 30791  000E92  C01D  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30792  000E96  C01E  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30793  000E9A  C01F  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30794  000E9E  C020  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30795  000EA2  0E10               	movlw	16
 30796  000EA4  6E05               	movwf	___llmod@divisor,c
 30797  000EA6  0E27               	movlw	39
 30798  000EA8  6E06               	movwf	___llmod@divisor+1,c
 30799  000EAA  0E00               	movlw	0
 30800  000EAC  6E07               	movwf	___llmod@divisor+2,c
 30801  000EAE  0E00               	movlw	0
 30802  000EB0  6E08               	movwf	___llmod@divisor+3,c
 30803  000EB2  EC5F  F046         	call	___llmod	;wreg free
 30804  000EB6  C001  F013         	movff	?___llmod,itoa@val
 30805  000EBA  C002  F014         	movff	?___llmod+1,itoa@val+1
 30806  000EBE  0E00               	movlw	0
 30807  000EC0  6E16               	movwf	itoa@base+1,c
 30808  000EC2  0E0A               	movlw	10
 30809  000EC4  6E15               	movwf	itoa@base,c
 30810  000EC6  EC2C  F04C         	call	_itoa	;wreg free
 30811                           
 30812                           ;display.c: 212: *(text+6) = ' ';
 30813  000ECA  EE20 F006          	lfsr	2,6
 30814  000ECE  5021               	movf	__display_itoa_u32@text,w,c
 30815  000ED0  26D9               	addwf	fsr2l,f,c
 30816  000ED2  5022               	movf	__display_itoa_u32@text+1,w,c
 30817  000ED4  22DA               	addwfc	fsr2h,f,c
 30818  000ED6  0E20               	movlw	32
 30819  000ED8  6EDF               	movwf	indf2,c
 30820                           
 30821                           ;display.c: 213: return 6;
 30822  000EDA  0E06               	movlw	6
 30823                           
 30824                           ;display.c: 214: }
 30825  000EDC  0012               	return	
 30826  000EDE                     l1523:
 30827                           
 30828                           ;display.c: 215: else;display.c: 216: {;display.c: 217: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 30829  000EDE  C021  F011         	movff	__display_itoa_u32@text,itoa@buf
 30830  000EE2  C022  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30831  000EE6  C01D  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30832  000EEA  C01E  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30833  000EEE  C01F  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30834  000EF2  C020  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30835  000EF6  0E10               	movlw	16
 30836  000EF8  6E05               	movwf	___lldiv@divisor,c
 30837  000EFA  0E27               	movlw	39
 30838  000EFC  6E06               	movwf	___lldiv@divisor+1,c
 30839  000EFE  0E00               	movlw	0
 30840  000F00  6E07               	movwf	___lldiv@divisor+2,c
 30841  000F02  0E00               	movlw	0
 30842  000F04  6E08               	movwf	___lldiv@divisor+3,c
 30843  000F06  EC73  F043         	call	___lldiv	;wreg free
 30844  000F0A  C001  F013         	movff	?___lldiv,itoa@val
 30845  000F0E  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30846  000F12  0E00               	movlw	0
 30847  000F14  6E16               	movwf	itoa@base+1,c
 30848  000F16  0E0A               	movlw	10
 30849  000F18  6E15               	movwf	itoa@base,c
 30850  000F1A  EC2C  F04C         	call	_itoa	;wreg free
 30851                           
 30852                           ;display.c: 218: itoa(text+1, (uint16_t)(value%10000), 10);
 30853  000F1E  0E01               	movlw	1
 30854  000F20  2421               	addwf	__display_itoa_u32@text,w,c
 30855  000F22  6E11               	movwf	itoa@buf,c
 30856  000F24  0E00               	movlw	0
 30857  000F26  2022               	addwfc	__display_itoa_u32@text+1,w,c
 30858  000F28  6E12               	movwf	itoa@buf+1,c
 30859  000F2A  C01D  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30860  000F2E  C01E  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30861  000F32  C01F  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30862  000F36  C020  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30863  000F3A  0E10               	movlw	16
 30864  000F3C  6E05               	movwf	___llmod@divisor,c
 30865  000F3E  0E27               	movlw	39
 30866  000F40  6E06               	movwf	___llmod@divisor+1,c
 30867  000F42  0E00               	movlw	0
 30868  000F44  6E07               	movwf	___llmod@divisor+2,c
 30869  000F46  0E00               	movlw	0
 30870  000F48  6E08               	movwf	___llmod@divisor+3,c
 30871  000F4A  EC5F  F046         	call	___llmod	;wreg free
 30872  000F4E  C001  F013         	movff	?___llmod,itoa@val
 30873  000F52  C002  F014         	movff	?___llmod+1,itoa@val+1
 30874  000F56  0E00               	movlw	0
 30875  000F58  6E16               	movwf	itoa@base+1,c
 30876  000F5A  0E0A               	movlw	10
 30877  000F5C  6E15               	movwf	itoa@base,c
 30878  000F5E  EC2C  F04C         	call	_itoa	;wreg free
 30879                           
 30880                           ;display.c: 219: *(text+5) = ' ';
 30881  000F62  EE20 F005          	lfsr	2,5
 30882  000F66  5021               	movf	__display_itoa_u32@text,w,c
 30883  000F68  26D9               	addwf	fsr2l,f,c
 30884  000F6A  5022               	movf	__display_itoa_u32@text+1,w,c
 30885  000F6C  22DA               	addwfc	fsr2h,f,c
 30886  000F6E  0E20               	movlw	32
 30887  000F70  6EDF               	movwf	indf2,c
 30888                           
 30889                           ;display.c: 220: return 5;
 30890  000F72  0E05               	movlw	5
 30891  000F74  0012               	return	
 30892  000F76                     __end_of__display_itoa_u32:
 30893                           	opt stack 0
 30894                           tosu	equ	0xFFF
 30895                           tosh	equ	0xFFE
 30896                           tosl	equ	0xFFD
 30897                           pclath	equ	0xFFA
 30898                           tblptru	equ	0xFF8
 30899                           tblptrh	equ	0xFF7
 30900                           tblptrl	equ	0xFF6
 30901                           tablat	equ	0xFF5
 30902                           prodh	equ	0xFF4
 30903                           prodl	equ	0xFF3
 30904                           intcon	equ	0xFF2
 30905                           intcon2	equ	0xFF1
 30906                           intcon3	equ	0xFF0
 30907                           indf0	equ	0xFEF
 30908                           postinc0	equ	0xFEE
 30909                           fsr0h	equ	0xFEA
 30910                           fsr0l	equ	0xFE9
 30911                           wreg	equ	0xFE8
 30912                           indf1	equ	0xFE7
 30913                           postdec1	equ	0xFE5
 30914                           plusw1	equ	0xFE3
 30915                           fsr1h	equ	0xFE2
 30916                           fsr1l	equ	0xFE1
 30917                           indf2	equ	0xFDF
 30918                           postinc2	equ	0xFDE
 30919                           postdec2	equ	0xFDD
 30920                           plusw2	equ	0xFDB
 30921                           fsr2h	equ	0xFDA
 30922                           fsr2l	equ	0xFD9
 30923                           status	equ	0xFD8
 30924                           
 30925 ;; *************** function ___llmod *****************
 30926 ;; Defined at:
 30927 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30928 ;; Parameters:    Size  Location     Type
 30929 ;;  dividend        4    0[COMRAM] unsigned long 
 30930 ;;  divisor         4    4[COMRAM] unsigned long 
 30931 ;; Auto vars:     Size  Location     Type
 30932 ;;  counter         1    8[COMRAM] unsigned char 
 30933 ;; Return value:  Size  Location     Type
 30934 ;;                  4    0[COMRAM] unsigned long 
 30935 ;; Registers used:
 30936 ;;		wreg, status,2, status,0
 30937 ;; Tracked objects:
 30938 ;;		On entry : 0/0
 30939 ;;		On exit  : 0/0
 30940 ;;		Unchanged: 0/0
 30941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30942 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30945 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30946 ;;Total ram usage:        9 bytes
 30947 ;; Hardware stack levels used:    1
 30948 ;; This function calls:
 30949 ;;		Nothing
 30950 ;; This function is called by:
 30951 ;;		__display_itoa_u32
 30952 ;; This function uses a non-reentrant model
 30953 ;;
 30954                           
 30955                           	psect	text146
 30956  008CBE                     __ptext146:
 30957                           	opt stack 0
 30958  008CBE                     ___llmod:
 30959                           	opt stack 24
 30960                           
 30961                           ;incstack = 0
 30962  008CBE  5005               	movf	___llmod@divisor,w,c
 30963  008CC0  1006               	iorwf	___llmod@divisor+1,w,c
 30964  008CC2  1007               	iorwf	___llmod@divisor+2,w,c
 30965  008CC4  1008               	iorwf	___llmod@divisor+3,w,c
 30966  008CC6  B4D8               	btfsc	status,2,c
 30967  008CC8  D024               	goto	l3534
 30968  008CCA  0E01               	movlw	1
 30969  008CCC  6E09               	movwf	___llmod@counter,c
 30970  008CCE  D006               	goto	l3529
 30971  008CD0  90D8               	bcf	status,0,c
 30972  008CD2  3605               	rlcf	___llmod@divisor,f,c
 30973  008CD4  3606               	rlcf	___llmod@divisor+1,f,c
 30974  008CD6  3607               	rlcf	___llmod@divisor+2,f,c
 30975  008CD8  3608               	rlcf	___llmod@divisor+3,f,c
 30976  008CDA  2A09               	incf	___llmod@counter,f,c
 30977  008CDC                     l3529:
 30978  008CDC  AE08               	btfss	___llmod@divisor+3,7,c
 30979  008CDE  D7F8               	goto	l3530
 30980  008CE0                     u8360:
 30981  008CE0  5005               	movf	___llmod@divisor,w,c
 30982  008CE2  5C01               	subwf	___llmod@dividend,w,c
 30983  008CE4  5006               	movf	___llmod@divisor+1,w,c
 30984  008CE6  5802               	subwfb	___llmod@dividend+1,w,c
 30985  008CE8  5007               	movf	___llmod@divisor+2,w,c
 30986  008CEA  5803               	subwfb	___llmod@dividend+2,w,c
 30987  008CEC  5008               	movf	___llmod@divisor+3,w,c
 30988  008CEE  5804               	subwfb	___llmod@dividend+3,w,c
 30989  008CF0  A0D8               	btfss	status,0,c
 30990  008CF2  D008               	goto	l3533
 30991  008CF4  5005               	movf	___llmod@divisor,w,c
 30992  008CF6  5E01               	subwf	___llmod@dividend,f,c
 30993  008CF8  5006               	movf	___llmod@divisor+1,w,c
 30994  008CFA  5A02               	subwfb	___llmod@dividend+1,f,c
 30995  008CFC  5007               	movf	___llmod@divisor+2,w,c
 30996  008CFE  5A03               	subwfb	___llmod@dividend+2,f,c
 30997  008D00  5008               	movf	___llmod@divisor+3,w,c
 30998  008D02  5A04               	subwfb	___llmod@dividend+3,f,c
 30999  008D04                     l3533:
 31000  008D04  90D8               	bcf	status,0,c
 31001  008D06  3208               	rrcf	___llmod@divisor+3,f,c
 31002  008D08  3207               	rrcf	___llmod@divisor+2,f,c
 31003  008D0A  3206               	rrcf	___llmod@divisor+1,f,c
 31004  008D0C  3205               	rrcf	___llmod@divisor,f,c
 31005  008D0E  2E09               	decfsz	___llmod@counter,f,c
 31006  008D10  D7E7               	goto	u8360
 31007  008D12                     l3534:
 31008  008D12  C001  F001         	movff	___llmod@dividend,?___llmod
 31009  008D16  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 31010  008D1A  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 31011  008D1E  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 31012  008D22  0012               	return		;funcret
 31013  008D24                     __end_of___llmod:
 31014                           	opt stack 0
 31015                           tosu	equ	0xFFF
 31016                           tosh	equ	0xFFE
 31017                           tosl	equ	0xFFD
 31018                           pclath	equ	0xFFA
 31019                           tblptru	equ	0xFF8
 31020                           tblptrh	equ	0xFF7
 31021                           tblptrl	equ	0xFF6
 31022                           tablat	equ	0xFF5
 31023                           prodh	equ	0xFF4
 31024                           prodl	equ	0xFF3
 31025                           intcon	equ	0xFF2
 31026                           intcon2	equ	0xFF1
 31027                           intcon3	equ	0xFF0
 31028                           indf0	equ	0xFEF
 31029                           postinc0	equ	0xFEE
 31030                           fsr0h	equ	0xFEA
 31031                           fsr0l	equ	0xFE9
 31032                           wreg	equ	0xFE8
 31033                           indf1	equ	0xFE7
 31034                           postdec1	equ	0xFE5
 31035                           plusw1	equ	0xFE3
 31036                           fsr1h	equ	0xFE2
 31037                           fsr1l	equ	0xFE1
 31038                           indf2	equ	0xFDF
 31039                           postinc2	equ	0xFDE
 31040                           postdec2	equ	0xFDD
 31041                           plusw2	equ	0xFDB
 31042                           fsr2h	equ	0xFDA
 31043                           fsr2l	equ	0xFD9
 31044                           status	equ	0xFD8
 31045                           
 31046 ;; *************** function ___lldiv *****************
 31047 ;; Defined at:
 31048 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 31049 ;; Parameters:    Size  Location     Type
 31050 ;;  dividend        4    0[COMRAM] unsigned long 
 31051 ;;  divisor         4    4[COMRAM] unsigned long 
 31052 ;; Auto vars:     Size  Location     Type
 31053 ;;  quotient        4    8[COMRAM] unsigned long 
 31054 ;;  counter         1   12[COMRAM] unsigned char 
 31055 ;; Return value:  Size  Location     Type
 31056 ;;                  4    0[COMRAM] unsigned long 
 31057 ;; Registers used:
 31058 ;;		wreg, status,2, status,0
 31059 ;; Tracked objects:
 31060 ;;		On entry : 0/0
 31061 ;;		On exit  : 0/0
 31062 ;;		Unchanged: 0/0
 31063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31064 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31065 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31067 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31068 ;;Total ram usage:       13 bytes
 31069 ;; Hardware stack levels used:    1
 31070 ;; This function calls:
 31071 ;;		Nothing
 31072 ;; This function is called by:
 31073 ;;		__display_itoa_u32
 31074 ;; This function uses a non-reentrant model
 31075 ;;
 31076                           
 31077                           	psect	text147
 31078  0086E6                     __ptext147:
 31079                           	opt stack 0
 31080  0086E6                     ___lldiv:
 31081                           	opt stack 24
 31082                           
 31083                           ;incstack = 0
 31084  0086E6  0E00               	movlw	0
 31085  0086E8  6E09               	movwf	___lldiv@quotient,c
 31086  0086EA  0E00               	movlw	0
 31087  0086EC  6E0A               	movwf	___lldiv@quotient+1,c
 31088  0086EE  0E00               	movlw	0
 31089  0086F0  6E0B               	movwf	___lldiv@quotient+2,c
 31090  0086F2  0E00               	movlw	0
 31091  0086F4  6E0C               	movwf	___lldiv@quotient+3,c
 31092  0086F6  5005               	movf	___lldiv@divisor,w,c
 31093  0086F8  1006               	iorwf	___lldiv@divisor+1,w,c
 31094  0086FA  1007               	iorwf	___lldiv@divisor+2,w,c
 31095  0086FC  1008               	iorwf	___lldiv@divisor+3,w,c
 31096  0086FE  B4D8               	btfsc	status,2,c
 31097  008700  D02A               	goto	l3153
 31098  008702  0E01               	movlw	1
 31099  008704  6E0D               	movwf	___lldiv@counter,c
 31100  008706  D006               	goto	l3148
 31101  008708  90D8               	bcf	status,0,c
 31102  00870A  3605               	rlcf	___lldiv@divisor,f,c
 31103  00870C  3606               	rlcf	___lldiv@divisor+1,f,c
 31104  00870E  3607               	rlcf	___lldiv@divisor+2,f,c
 31105  008710  3608               	rlcf	___lldiv@divisor+3,f,c
 31106  008712  2A0D               	incf	___lldiv@counter,f,c
 31107  008714                     l3148:
 31108  008714  AE08               	btfss	___lldiv@divisor+3,7,c
 31109  008716  D7F8               	goto	l3149
 31110  008718                     u8330:
 31111  008718  90D8               	bcf	status,0,c
 31112  00871A  3609               	rlcf	___lldiv@quotient,f,c
 31113  00871C  360A               	rlcf	___lldiv@quotient+1,f,c
 31114  00871E  360B               	rlcf	___lldiv@quotient+2,f,c
 31115  008720  360C               	rlcf	___lldiv@quotient+3,f,c
 31116  008722  5005               	movf	___lldiv@divisor,w,c
 31117  008724  5C01               	subwf	___lldiv@dividend,w,c
 31118  008726  5006               	movf	___lldiv@divisor+1,w,c
 31119  008728  5802               	subwfb	___lldiv@dividend+1,w,c
 31120  00872A  5007               	movf	___lldiv@divisor+2,w,c
 31121  00872C  5803               	subwfb	___lldiv@dividend+2,w,c
 31122  00872E  5008               	movf	___lldiv@divisor+3,w,c
 31123  008730  5804               	subwfb	___lldiv@dividend+3,w,c
 31124  008732  A0D8               	btfss	status,0,c
 31125  008734  D009               	goto	l3152
 31126  008736  5005               	movf	___lldiv@divisor,w,c
 31127  008738  5E01               	subwf	___lldiv@dividend,f,c
 31128  00873A  5006               	movf	___lldiv@divisor+1,w,c
 31129  00873C  5A02               	subwfb	___lldiv@dividend+1,f,c
 31130  00873E  5007               	movf	___lldiv@divisor+2,w,c
 31131  008740  5A03               	subwfb	___lldiv@dividend+2,f,c
 31132  008742  5008               	movf	___lldiv@divisor+3,w,c
 31133  008744  5A04               	subwfb	___lldiv@dividend+3,f,c
 31134  008746  8009               	bsf	___lldiv@quotient,0,c
 31135  008748                     l3152:
 31136  008748  90D8               	bcf	status,0,c
 31137  00874A  3208               	rrcf	___lldiv@divisor+3,f,c
 31138  00874C  3207               	rrcf	___lldiv@divisor+2,f,c
 31139  00874E  3206               	rrcf	___lldiv@divisor+1,f,c
 31140  008750  3205               	rrcf	___lldiv@divisor,f,c
 31141  008752  2E0D               	decfsz	___lldiv@counter,f,c
 31142  008754  D7E1               	goto	u8330
 31143  008756                     l3153:
 31144  008756  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31145  00875A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31146  00875E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31147  008762  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31148  008766  0012               	return		;funcret
 31149  008768                     __end_of___lldiv:
 31150                           	opt stack 0
 31151                           tosu	equ	0xFFF
 31152                           tosh	equ	0xFFE
 31153                           tosl	equ	0xFFD
 31154                           pclath	equ	0xFFA
 31155                           tblptru	equ	0xFF8
 31156                           tblptrh	equ	0xFF7
 31157                           tblptrl	equ	0xFF6
 31158                           tablat	equ	0xFF5
 31159                           prodh	equ	0xFF4
 31160                           prodl	equ	0xFF3
 31161                           intcon	equ	0xFF2
 31162                           intcon2	equ	0xFF1
 31163                           intcon3	equ	0xFF0
 31164                           indf0	equ	0xFEF
 31165                           postinc0	equ	0xFEE
 31166                           fsr0h	equ	0xFEA
 31167                           fsr0l	equ	0xFE9
 31168                           wreg	equ	0xFE8
 31169                           indf1	equ	0xFE7
 31170                           postdec1	equ	0xFE5
 31171                           plusw1	equ	0xFE3
 31172                           fsr1h	equ	0xFE2
 31173                           fsr1l	equ	0xFE1
 31174                           indf2	equ	0xFDF
 31175                           postinc2	equ	0xFDE
 31176                           postdec2	equ	0xFDD
 31177                           plusw2	equ	0xFDB
 31178                           fsr2h	equ	0xFDA
 31179                           fsr2l	equ	0xFD9
 31180                           status	equ	0xFD8
 31181                           
 31182 ;; *************** function __display_done *****************
 31183 ;; Defined at:
 31184 ;;		line 539 in file "display.c"
 31185 ;; Parameters:    Size  Location     Type
 31186 ;;		None
 31187 ;; Auto vars:     Size  Location     Type
 31188 ;;  cntr            1   28[COMRAM] unsigned char 
 31189 ;; Return value:  Size  Location     Type
 31190 ;;                  1    wreg      void 
 31191 ;; Registers used:
 31192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31193 ;; Tracked objects:
 31194 ;;		On entry : 0/0
 31195 ;;		On exit  : 0/0
 31196 ;;		Unchanged: 0/0
 31197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31202 ;;Total ram usage:        1 bytes
 31203 ;; Hardware stack levels used:    1
 31204 ;; Hardware stack levels required when called:    4
 31205 ;; This function calls:
 31206 ;;		__display_itoa_u16
 31207 ;;		_bootloader_get_flashPagesWritten
 31208 ;; This function is called by:
 31209 ;;		_display_prepare
 31210 ;; This function uses a non-reentrant model
 31211 ;;
 31212                           
 31213                           	psect	text148
 31214  00412E                     __ptext148:
 31215                           	opt stack 0
 31216  00412E                     __display_done:
 31217                           	opt stack 22
 31218                           
 31219                           ;display.c: 541: uint8_t cntr;;display.c: 542: cntr = 0;
 31220                           
 31221                           ;incstack = 0
 31222  00412E  0E00               	movlw	0
 31223  004130  6E1D               	movwf	__display_done@cntr,c
 31224                           
 31225                           ;display.c: 543: while(done_line1[cntr])
 31226  004132  D017               	goto	l1694
 31227  004134                     
 31228                           ;display.c: 544: display_content[0][cntr] = done_line1[cntr++];
 31229  004134  501D               	movf	__display_done@cntr,w,c
 31230  004136  0D01               	mullw	1
 31231  004138  0E68               	movlw	low _done_line1
 31232  00413A  24F3               	addwf	prodl,w,c
 31233  00413C  6EF6               	movwf	tblptrl,c
 31234  00413E  0EBD               	movlw	high _done_line1
 31235  004140  20F4               	addwfc	prodh,w,c
 31236  004142  6EF7               	movwf	tblptrh,c
 31237  004144                     	if	1	;There are 3 active tblptr bytes
 31238  004144  6AF8               	clrf	tblptru,c
 31239  004146  0E00               	movlw	low (__mediumconst shr (0+16))
 31240  004148  22F8               	addwfc	tblptru,f,c
 31241  00414A                     	endif
 31242  00414A  501D               	movf	__display_done@cntr,w,c
 31243  00414C  0D01               	mullw	1
 31244  00414E  0E00               	movlw	low _display_content
 31245  004150  24F3               	addwf	prodl,w,c
 31246  004152  6ED9               	movwf	fsr2l,c
 31247  004154  0E02               	movlw	high _display_content
 31248  004156  20F4               	addwfc	prodh,w,c
 31249  004158  6EDA               	movwf	fsr2h,c
 31250  00415A  0008               	tblrd		*
 31251  00415C  CFF5 FFDF          	movff	tablat,indf2
 31252  004160  2A1D               	incf	__display_done@cntr,f,c
 31253  004162                     l1694:
 31254  004162  501D               	movf	__display_done@cntr,w,c
 31255  004164  0D01               	mullw	1
 31256  004166  0E68               	movlw	low _done_line1
 31257  004168  24F3               	addwf	prodl,w,c
 31258  00416A  6EF6               	movwf	tblptrl,c
 31259  00416C  0EBD               	movlw	high _done_line1
 31260  00416E  20F4               	addwfc	prodh,w,c
 31261  004170  6EF7               	movwf	tblptrh,c
 31262  004172                     	if	1	;There are 3 active tblptr bytes
 31263  004172  6AF8               	clrf	tblptru,c
 31264  004174  0E00               	movlw	low (__mediumconst shr (0+16))
 31265  004176  22F8               	addwfc	tblptru,f,c
 31266  004178                     	endif
 31267  004178  0008               	tblrd		*
 31268  00417A  50F5               	movf	tablat,w,c
 31269  00417C  0900               	iorlw	0
 31270  00417E  A4D8               	btfss	status,2,c
 31271  004180  D7D9               	goto	l1695
 31272                           
 31273                           ;display.c: 545: cntr = 0;
 31274  004182  0E00               	movlw	0
 31275  004184  6E1D               	movwf	__display_done@cntr,c
 31276                           
 31277                           ;display.c: 546: while(done_line2[cntr])
 31278  004186  D017               	goto	l1697
 31279  004188                     
 31280                           ;display.c: 547: display_content[1][cntr] = done_line2[cntr++];
 31281  004188  501D               	movf	__display_done@cntr,w,c
 31282  00418A  0D01               	mullw	1
 31283  00418C  0E9D               	movlw	low _done_line2
 31284  00418E  24F3               	addwf	prodl,w,c
 31285  004190  6EF6               	movwf	tblptrl,c
 31286  004192  0EBE               	movlw	high _done_line2
 31287  004194  20F4               	addwfc	prodh,w,c
 31288  004196  6EF7               	movwf	tblptrh,c
 31289  004198                     	if	1	;There are 3 active tblptr bytes
 31290  004198  6AF8               	clrf	tblptru,c
 31291  00419A  0E00               	movlw	low (__mediumconst shr (0+16))
 31292  00419C  22F8               	addwfc	tblptru,f,c
 31293  00419E                     	endif
 31294  00419E  501D               	movf	__display_done@cntr,w,c
 31295  0041A0  0D01               	mullw	1
 31296  0041A2  0E14               	movlw	low (_display_content+20)
 31297  0041A4  24F3               	addwf	prodl,w,c
 31298  0041A6  6ED9               	movwf	fsr2l,c
 31299  0041A8  0E02               	movlw	high (_display_content+20)
 31300  0041AA  20F4               	addwfc	prodh,w,c
 31301  0041AC  6EDA               	movwf	fsr2h,c
 31302  0041AE  0008               	tblrd		*
 31303  0041B0  CFF5 FFDF          	movff	tablat,indf2
 31304  0041B4  2A1D               	incf	__display_done@cntr,f,c
 31305  0041B6                     l1697:
 31306  0041B6  501D               	movf	__display_done@cntr,w,c
 31307  0041B8  0D01               	mullw	1
 31308  0041BA  0E9D               	movlw	low _done_line2
 31309  0041BC  24F3               	addwf	prodl,w,c
 31310  0041BE  6EF6               	movwf	tblptrl,c
 31311  0041C0  0EBE               	movlw	high _done_line2
 31312  0041C2  20F4               	addwfc	prodh,w,c
 31313  0041C4  6EF7               	movwf	tblptrh,c
 31314  0041C6                     	if	1	;There are 3 active tblptr bytes
 31315  0041C6  6AF8               	clrf	tblptru,c
 31316  0041C8  0E00               	movlw	low (__mediumconst shr (0+16))
 31317  0041CA  22F8               	addwfc	tblptru,f,c
 31318  0041CC                     	endif
 31319  0041CC  0008               	tblrd		*
 31320  0041CE  50F5               	movf	tablat,w,c
 31321  0041D0  0900               	iorlw	0
 31322  0041D2  A4D8               	btfss	status,2,c
 31323  0041D4  D7D9               	goto	l1698
 31324                           
 31325                           ;display.c: 548: cntr = 0;
 31326  0041D6  0E00               	movlw	0
 31327  0041D8  6E1D               	movwf	__display_done@cntr,c
 31328                           
 31329                           ;display.c: 549: while(done_line3[cntr])
 31330  0041DA  D017               	goto	l1700
 31331  0041DC                     
 31332                           ;display.c: 550: display_content[2][cntr] = done_line3[cntr++];
 31333  0041DC  501D               	movf	__display_done@cntr,w,c
 31334  0041DE  0D01               	mullw	1
 31335  0041E0  0E58               	movlw	low _done_line3
 31336  0041E2  24F3               	addwf	prodl,w,c
 31337  0041E4  6EF6               	movwf	tblptrl,c
 31338  0041E6  0EBD               	movlw	high _done_line3
 31339  0041E8  20F4               	addwfc	prodh,w,c
 31340  0041EA  6EF7               	movwf	tblptrh,c
 31341  0041EC                     	if	1	;There are 3 active tblptr bytes
 31342  0041EC  6AF8               	clrf	tblptru,c
 31343  0041EE  0E00               	movlw	low (__mediumconst shr (0+16))
 31344  0041F0  22F8               	addwfc	tblptru,f,c
 31345  0041F2                     	endif
 31346  0041F2  501D               	movf	__display_done@cntr,w,c
 31347  0041F4  0D01               	mullw	1
 31348  0041F6  0E28               	movlw	low (_display_content+40)
 31349  0041F8  24F3               	addwf	prodl,w,c
 31350  0041FA  6ED9               	movwf	fsr2l,c
 31351  0041FC  0E02               	movlw	high (_display_content+40)
 31352  0041FE  20F4               	addwfc	prodh,w,c
 31353  004200  6EDA               	movwf	fsr2h,c
 31354  004202  0008               	tblrd		*
 31355  004204  CFF5 FFDF          	movff	tablat,indf2
 31356  004208  2A1D               	incf	__display_done@cntr,f,c
 31357  00420A                     l1700:
 31358  00420A  501D               	movf	__display_done@cntr,w,c
 31359  00420C  0D01               	mullw	1
 31360  00420E  0E58               	movlw	low _done_line3
 31361  004210  24F3               	addwf	prodl,w,c
 31362  004212  6EF6               	movwf	tblptrl,c
 31363  004214  0EBD               	movlw	high _done_line3
 31364  004216  20F4               	addwfc	prodh,w,c
 31365  004218  6EF7               	movwf	tblptrh,c
 31366  00421A                     	if	1	;There are 3 active tblptr bytes
 31367  00421A  6AF8               	clrf	tblptru,c
 31368  00421C  0E00               	movlw	low (__mediumconst shr (0+16))
 31369  00421E  22F8               	addwfc	tblptru,f,c
 31370  004220                     	endif
 31371  004220  0008               	tblrd		*
 31372  004222  50F5               	movf	tablat,w,c
 31373  004224  0900               	iorlw	0
 31374  004226  A4D8               	btfss	status,2,c
 31375  004228  D7D9               	goto	l1701
 31376                           
 31377                           ;display.c: 551: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 31378  00422A  EC39  F051         	call	_bootloader_get_flashPagesWritten	;wreg free
 31379  00422E  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 31380  004232  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 31381  004236  501D               	movf	__display_done@cntr,w,c
 31382  004238  0D01               	mullw	1
 31383  00423A  0E28               	movlw	low (_display_content+40)
 31384  00423C  24F3               	addwf	prodl,w,c
 31385  00423E  6E1B               	movwf	__display_itoa_u16@text,c
 31386  004240  0E02               	movlw	high (_display_content+40)
 31387  004242  20F4               	addwfc	prodh,w,c
 31388  004244  6E1C               	movwf	__display_itoa_u16@text+1,c
 31389  004246  EC06  F03D         	call	__display_itoa_u16	;wreg free
 31390                           
 31391                           ;display.c: 552: cntr = 0;
 31392  00424A  0E00               	movlw	0
 31393  00424C  6E1D               	movwf	__display_done@cntr,c
 31394                           
 31395                           ;display.c: 553: while(done_line4[cntr])
 31396  00424E  D017               	goto	l1703
 31397  004250                     
 31398                           ;display.c: 554: display_content[3][cntr] = done_line4[cntr++];
 31399  004250  501D               	movf	__display_done@cntr,w,c
 31400  004252  0D01               	mullw	1
 31401  004254  0E48               	movlw	low _done_line4
 31402  004256  24F3               	addwf	prodl,w,c
 31403  004258  6EF6               	movwf	tblptrl,c
 31404  00425A  0EBD               	movlw	high _done_line4
 31405  00425C  20F4               	addwfc	prodh,w,c
 31406  00425E  6EF7               	movwf	tblptrh,c
 31407  004260                     	if	1	;There are 3 active tblptr bytes
 31408  004260  6AF8               	clrf	tblptru,c
 31409  004262  0E00               	movlw	low (__mediumconst shr (0+16))
 31410  004264  22F8               	addwfc	tblptru,f,c
 31411  004266                     	endif
 31412  004266  501D               	movf	__display_done@cntr,w,c
 31413  004268  0D01               	mullw	1
 31414  00426A  0E3C               	movlw	low (_display_content+60)
 31415  00426C  24F3               	addwf	prodl,w,c
 31416  00426E  6ED9               	movwf	fsr2l,c
 31417  004270  0E02               	movlw	high (_display_content+60)
 31418  004272  20F4               	addwfc	prodh,w,c
 31419  004274  6EDA               	movwf	fsr2h,c
 31420  004276  0008               	tblrd		*
 31421  004278  CFF5 FFDF          	movff	tablat,indf2
 31422  00427C  2A1D               	incf	__display_done@cntr,f,c
 31423  00427E                     l1703:
 31424  00427E  501D               	movf	__display_done@cntr,w,c
 31425  004280  0D01               	mullw	1
 31426  004282  0E48               	movlw	low _done_line4
 31427  004284  24F3               	addwf	prodl,w,c
 31428  004286  6EF6               	movwf	tblptrl,c
 31429  004288  0EBD               	movlw	high _done_line4
 31430  00428A  20F4               	addwfc	prodh,w,c
 31431  00428C  6EF7               	movwf	tblptrh,c
 31432  00428E                     	if	1	;There are 3 active tblptr bytes
 31433  00428E  6AF8               	clrf	tblptru,c
 31434  004290  0E00               	movlw	low (__mediumconst shr (0+16))
 31435  004292  22F8               	addwfc	tblptru,f,c
 31436  004294                     	endif
 31437  004294  0008               	tblrd		*
 31438  004296  50F5               	movf	tablat,w,c
 31439  004298  0900               	iorlw	0
 31440  00429A  B4D8               	btfsc	status,2,c
 31441  00429C  0012               	return	
 31442  00429E  D7D8               	goto	l1704
 31443  0042A0                     __end_of__display_done:
 31444                           	opt stack 0
 31445                           tosu	equ	0xFFF
 31446                           tosh	equ	0xFFE
 31447                           tosl	equ	0xFFD
 31448                           pclath	equ	0xFFA
 31449                           tblptru	equ	0xFF8
 31450                           tblptrh	equ	0xFF7
 31451                           tblptrl	equ	0xFF6
 31452                           tablat	equ	0xFF5
 31453                           prodh	equ	0xFF4
 31454                           prodl	equ	0xFF3
 31455                           intcon	equ	0xFF2
 31456                           intcon2	equ	0xFF1
 31457                           intcon3	equ	0xFF0
 31458                           indf0	equ	0xFEF
 31459                           postinc0	equ	0xFEE
 31460                           fsr0h	equ	0xFEA
 31461                           fsr0l	equ	0xFE9
 31462                           wreg	equ	0xFE8
 31463                           indf1	equ	0xFE7
 31464                           postdec1	equ	0xFE5
 31465                           plusw1	equ	0xFE3
 31466                           fsr1h	equ	0xFE2
 31467                           fsr1l	equ	0xFE1
 31468                           indf2	equ	0xFDF
 31469                           postinc2	equ	0xFDE
 31470                           postdec2	equ	0xFDD
 31471                           plusw2	equ	0xFDB
 31472                           fsr2h	equ	0xFDA
 31473                           fsr2l	equ	0xFD9
 31474                           status	equ	0xFD8
 31475                           
 31476 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31477 ;; Defined at:
 31478 ;;		line 514 in file "bootloader.c"
 31479 ;; Parameters:    Size  Location     Type
 31480 ;;		None
 31481 ;; Auto vars:     Size  Location     Type
 31482 ;;		None
 31483 ;; Return value:  Size  Location     Type
 31484 ;;                  2    0[COMRAM] unsigned int 
 31485 ;; Registers used:
 31486 ;;		None
 31487 ;; Tracked objects:
 31488 ;;		On entry : 0/0
 31489 ;;		On exit  : 0/0
 31490 ;;		Unchanged: 0/0
 31491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31496 ;;Total ram usage:        2 bytes
 31497 ;; Hardware stack levels used:    1
 31498 ;; This function calls:
 31499 ;;		Nothing
 31500 ;; This function is called by:
 31501 ;;		__display_programming
 31502 ;;		__display_done
 31503 ;;		__fill_buffer_get_bootloader_details
 31504 ;; This function uses a non-reentrant model
 31505 ;;
 31506                           
 31507                           	psect	text149
 31508  00A272                     __ptext149:
 31509                           	opt stack 0
 31510  00A272                     _bootloader_get_flashPagesWritten:
 31511                           	opt stack 25
 31512                           
 31513                           ;bootloader.c: 516: return flash_pages_written;
 31514                           
 31515                           ;incstack = 0
 31516  00A272  C176  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31517  00A276  C177  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31518  00A27A  0012               	return		;funcret
 31519  00A27C                     __end_of_bootloader_get_flashPagesWritten:
 31520                           	opt stack 0
 31521                           tosu	equ	0xFFF
 31522                           tosh	equ	0xFFE
 31523                           tosl	equ	0xFFD
 31524                           pclath	equ	0xFFA
 31525                           tblptru	equ	0xFF8
 31526                           tblptrh	equ	0xFF7
 31527                           tblptrl	equ	0xFF6
 31528                           tablat	equ	0xFF5
 31529                           prodh	equ	0xFF4
 31530                           prodl	equ	0xFF3
 31531                           intcon	equ	0xFF2
 31532                           intcon2	equ	0xFF1
 31533                           intcon3	equ	0xFF0
 31534                           indf0	equ	0xFEF
 31535                           postinc0	equ	0xFEE
 31536                           fsr0h	equ	0xFEA
 31537                           fsr0l	equ	0xFE9
 31538                           wreg	equ	0xFE8
 31539                           indf1	equ	0xFE7
 31540                           postdec1	equ	0xFE5
 31541                           plusw1	equ	0xFE3
 31542                           fsr1h	equ	0xFE2
 31543                           fsr1l	equ	0xFE1
 31544                           indf2	equ	0xFDF
 31545                           postinc2	equ	0xFDE
 31546                           postdec2	equ	0xFDD
 31547                           plusw2	equ	0xFDB
 31548                           fsr2h	equ	0xFDA
 31549                           fsr2l	equ	0xFD9
 31550                           status	equ	0xFD8
 31551                           
 31552 ;; *************** function __display_clear *****************
 31553 ;; Defined at:
 31554 ;;		line 81 in file "display.c"
 31555 ;; Parameters:    Size  Location     Type
 31556 ;;		None
 31557 ;; Auto vars:     Size  Location     Type
 31558 ;;  col             1    3[COMRAM] unsigned char 
 31559 ;;  row             1    2[COMRAM] unsigned char 
 31560 ;; Return value:  Size  Location     Type
 31561 ;;                  1    wreg      void 
 31562 ;; Registers used:
 31563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31564 ;; Tracked objects:
 31565 ;;		On entry : 0/0
 31566 ;;		On exit  : 0/0
 31567 ;;		Unchanged: 0/0
 31568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31573 ;;Total ram usage:        4 bytes
 31574 ;; Hardware stack levels used:    1
 31575 ;; This function calls:
 31576 ;;		Nothing
 31577 ;; This function is called by:
 31578 ;;		_display_prepare
 31579 ;; This function uses a non-reentrant model
 31580 ;;
 31581                           
 31582                           	psect	text150
 31583  009628                     __ptext150:
 31584                           	opt stack 0
 31585  009628                     __display_clear:
 31586                           	opt stack 26
 31587                           
 31588                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 31589                           
 31590                           ;incstack = 0
 31591  009628  0E00               	movlw	0
 31592  00962A  6E03               	movwf	__display_clear@row,c
 31593  00962C                     l12408:
 31594  00962C  0E03               	movlw	3
 31595  00962E  6403               	cpfsgt	__display_clear@row,c
 31596  009630  D001               	goto	l1471
 31597  009632  0012               	return	
 31598  009634                     l1471:
 31599                           
 31600                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 31601  009634  0E00               	movlw	0
 31602  009636  6E04               	movwf	__display_clear@col,c
 31603  009638                     l12414:
 31604  009638  0E13               	movlw	19
 31605  00963A  6404               	cpfsgt	__display_clear@col,c
 31606  00963C  D001               	goto	l1473
 31607  00963E  D016               	goto	u9600
 31608  009640                     l1473:
 31609                           
 31610                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 31611  009640  5003               	movf	__display_clear@row,w,c
 31612  009642  0D14               	mullw	20
 31613  009644  0E00               	movlw	low _display_content
 31614  009646  6E01               	movwf	??__display_clear& (0+255),c
 31615  009648  0E02               	movlw	high _display_content
 31616  00964A  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31617  00964C  50F3               	movf	prodl,w,c
 31618  00964E  2601               	addwf	??__display_clear,f,c
 31619  009650  50F4               	movf	prodh,w,c
 31620  009652  2202               	addwfc	??__display_clear+1,f,c
 31621  009654  5004               	movf	__display_clear@col,w,c
 31622  009656  0D01               	mullw	1
 31623  009658  50F3               	movf	prodl,w,c
 31624  00965A  2401               	addwf	??__display_clear,w,c
 31625  00965C  6ED9               	movwf	fsr2l,c
 31626  00965E  50F4               	movf	prodh,w,c
 31627  009660  2002               	addwfc	??__display_clear+1,w,c
 31628  009662  6EDA               	movwf	fsr2h,c
 31629  009664  0E20               	movlw	32
 31630  009666  6EDF               	movwf	indf2,c
 31631  009668  2A04               	incf	__display_clear@col,f,c
 31632  00966A  D7E6               	goto	l12414
 31633  00966C                     u9600:
 31634  00966C  2A03               	incf	__display_clear@row,f,c
 31635  00966E  D7DE               	goto	l12408
 31636  009670                     __end_of__display_clear:
 31637                           	opt stack 0
 31638                           tosu	equ	0xFFF
 31639                           tosh	equ	0xFFE
 31640                           tosl	equ	0xFFD
 31641                           pclath	equ	0xFFA
 31642                           tblptru	equ	0xFF8
 31643                           tblptrh	equ	0xFF7
 31644                           tblptrl	equ	0xFF6
 31645                           tablat	equ	0xFF5
 31646                           prodh	equ	0xFF4
 31647                           prodl	equ	0xFF3
 31648                           intcon	equ	0xFF2
 31649                           intcon2	equ	0xFF1
 31650                           intcon3	equ	0xFF0
 31651                           indf0	equ	0xFEF
 31652                           postinc0	equ	0xFEE
 31653                           fsr0h	equ	0xFEA
 31654                           fsr0l	equ	0xFE9
 31655                           wreg	equ	0xFE8
 31656                           indf1	equ	0xFE7
 31657                           postdec1	equ	0xFE5
 31658                           plusw1	equ	0xFE3
 31659                           fsr1h	equ	0xFE2
 31660                           fsr1l	equ	0xFE1
 31661                           indf2	equ	0xFDF
 31662                           postinc2	equ	0xFDE
 31663                           postdec2	equ	0xFDD
 31664                           plusw2	equ	0xFDB
 31665                           fsr2h	equ	0xFDA
 31666                           fsr2l	equ	0xFD9
 31667                           status	equ	0xFD8
 31668                           
 31669 ;; *************** function __display_checked *****************
 31670 ;; Defined at:
 31671 ;;		line 443 in file "display.c"
 31672 ;; Parameters:    Size  Location     Type
 31673 ;;		None
 31674 ;; Auto vars:     Size  Location     Type
 31675 ;;  cntr            1   31[COMRAM] unsigned char 
 31676 ;;  start           1   30[COMRAM] unsigned char 
 31677 ;; Return value:  Size  Location     Type
 31678 ;;                  1    wreg      void 
 31679 ;; Registers used:
 31680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31681 ;; Tracked objects:
 31682 ;;		On entry : 0/0
 31683 ;;		On exit  : 0/0
 31684 ;;		Unchanged: 0/0
 31685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31690 ;;Total ram usage:        4 bytes
 31691 ;; Hardware stack levels used:    1
 31692 ;; Hardware stack levels required when called:    4
 31693 ;; This function calls:
 31694 ;;		__display_itoa_u16
 31695 ;;		_bootloader_get_total_entries
 31696 ;; This function is called by:
 31697 ;;		_display_prepare
 31698 ;; This function uses a non-reentrant model
 31699 ;;
 31700                           
 31701                           	psect	text151
 31702  003FB6                     __ptext151:
 31703                           	opt stack 0
 31704  003FB6                     __display_checked:
 31705                           	opt stack 22
 31706                           
 31707                           ;display.c: 445: uint8_t cntr;;display.c: 446: uint8_t start;;display.c: 447: cntr = 0;
 31708                           
 31709                           ;incstack = 0
 31710  003FB6  0E00               	movlw	0
 31711  003FB8  6E20               	movwf	__display_checked@cntr,c
 31712                           
 31713                           ;display.c: 448: while(checked_line1[cntr])
 31714  003FBA  D017               	goto	l1630
 31715  003FBC                     
 31716                           ;display.c: 449: display_content[0][cntr] = checked_line1[cntr++];
 31717  003FBC  5020               	movf	__display_checked@cntr,w,c
 31718  003FBE  0D01               	mullw	1
 31719  003FC0  0EA8               	movlw	low _checked_line1
 31720  003FC2  24F3               	addwf	prodl,w,c
 31721  003FC4  6EF6               	movwf	tblptrl,c
 31722  003FC6  0EBD               	movlw	high _checked_line1
 31723  003FC8  20F4               	addwfc	prodh,w,c
 31724  003FCA  6EF7               	movwf	tblptrh,c
 31725  003FCC                     	if	1	;There are 3 active tblptr bytes
 31726  003FCC  6AF8               	clrf	tblptru,c
 31727  003FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 31728  003FD0  22F8               	addwfc	tblptru,f,c
 31729  003FD2                     	endif
 31730  003FD2  5020               	movf	__display_checked@cntr,w,c
 31731  003FD4  0D01               	mullw	1
 31732  003FD6  0E00               	movlw	low _display_content
 31733  003FD8  24F3               	addwf	prodl,w,c
 31734  003FDA  6ED9               	movwf	fsr2l,c
 31735  003FDC  0E02               	movlw	high _display_content
 31736  003FDE  20F4               	addwfc	prodh,w,c
 31737  003FE0  6EDA               	movwf	fsr2h,c
 31738  003FE2  0008               	tblrd		*
 31739  003FE4  CFF5 FFDF          	movff	tablat,indf2
 31740  003FE8  2A20               	incf	__display_checked@cntr,f,c
 31741  003FEA                     l1630:
 31742  003FEA  5020               	movf	__display_checked@cntr,w,c
 31743  003FEC  0D01               	mullw	1
 31744  003FEE  0EA8               	movlw	low _checked_line1
 31745  003FF0  24F3               	addwf	prodl,w,c
 31746  003FF2  6EF6               	movwf	tblptrl,c
 31747  003FF4  0EBD               	movlw	high _checked_line1
 31748  003FF6  20F4               	addwfc	prodh,w,c
 31749  003FF8  6EF7               	movwf	tblptrh,c
 31750  003FFA                     	if	1	;There are 3 active tblptr bytes
 31751  003FFA  6AF8               	clrf	tblptru,c
 31752  003FFC  0E00               	movlw	low (__mediumconst shr (0+16))
 31753  003FFE  22F8               	addwfc	tblptru,f,c
 31754  004000                     	endif
 31755  004000  0008               	tblrd		*
 31756  004002  50F5               	movf	tablat,w,c
 31757  004004  0900               	iorlw	0
 31758  004006  A4D8               	btfss	status,2,c
 31759  004008  D7D9               	goto	l1631
 31760                           
 31761                           ;display.c: 450: cntr = 0;
 31762  00400A  0E00               	movlw	0
 31763  00400C  6E20               	movwf	__display_checked@cntr,c
 31764                           
 31765                           ;display.c: 451: while(checked_line2[cntr])
 31766  00400E  D017               	goto	l1633
 31767  004010                     
 31768                           ;display.c: 452: display_content[1][cntr] = checked_line2[cntr++];
 31769  004010  5020               	movf	__display_checked@cntr,w,c
 31770  004012  0D01               	mullw	1
 31771  004014  0E6D               	movlw	low _checked_line2
 31772  004016  24F3               	addwf	prodl,w,c
 31773  004018  6EF6               	movwf	tblptrl,c
 31774  00401A  0EBC               	movlw	high _checked_line2
 31775  00401C  20F4               	addwfc	prodh,w,c
 31776  00401E  6EF7               	movwf	tblptrh,c
 31777  004020                     	if	1	;There are 3 active tblptr bytes
 31778  004020  6AF8               	clrf	tblptru,c
 31779  004022  0E00               	movlw	low (__mediumconst shr (0+16))
 31780  004024  22F8               	addwfc	tblptru,f,c
 31781  004026                     	endif
 31782  004026  5020               	movf	__display_checked@cntr,w,c
 31783  004028  0D01               	mullw	1
 31784  00402A  0E14               	movlw	low (_display_content+20)
 31785  00402C  24F3               	addwf	prodl,w,c
 31786  00402E  6ED9               	movwf	fsr2l,c
 31787  004030  0E02               	movlw	high (_display_content+20)
 31788  004032  20F4               	addwfc	prodh,w,c
 31789  004034  6EDA               	movwf	fsr2h,c
 31790  004036  0008               	tblrd		*
 31791  004038  CFF5 FFDF          	movff	tablat,indf2
 31792  00403C  2A20               	incf	__display_checked@cntr,f,c
 31793  00403E                     l1633:
 31794  00403E  5020               	movf	__display_checked@cntr,w,c
 31795  004040  0D01               	mullw	1
 31796  004042  0E6D               	movlw	low _checked_line2
 31797  004044  24F3               	addwf	prodl,w,c
 31798  004046  6EF6               	movwf	tblptrl,c
 31799  004048  0EBC               	movlw	high _checked_line2
 31800  00404A  20F4               	addwfc	prodh,w,c
 31801  00404C  6EF7               	movwf	tblptrh,c
 31802  00404E                     	if	1	;There are 3 active tblptr bytes
 31803  00404E  6AF8               	clrf	tblptru,c
 31804  004050  0E00               	movlw	low (__mediumconst shr (0+16))
 31805  004052  22F8               	addwfc	tblptru,f,c
 31806  004054                     	endif
 31807  004054  0008               	tblrd		*
 31808  004056  50F5               	movf	tablat,w,c
 31809  004058  0900               	iorlw	0
 31810  00405A  A4D8               	btfss	status,2,c
 31811  00405C  D7D9               	goto	l1634
 31812                           
 31813                           ;display.c: 454: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31814  00405E  EC3E  F051         	call	_bootloader_get_total_entries	;wreg free
 31815  004062  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31816  004066  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31817  00406A  0E28               	movlw	low (_display_content+40)
 31818  00406C  6E1B               	movwf	__display_itoa_u16@text,c
 31819  00406E  0E02               	movlw	high (_display_content+40)
 31820  004070  6E1C               	movwf	__display_itoa_u16@text+1,c
 31821  004072  EC06  F03D         	call	__display_itoa_u16	;wreg free
 31822  004076  6E1F               	movwf	__display_checked@start,c
 31823                           
 31824                           ;display.c: 455: start++;
 31825  004078  2A1F               	incf	__display_checked@start,f,c
 31826                           
 31827                           ;display.c: 456: cntr = 0;
 31828  00407A  0E00               	movlw	0
 31829  00407C  6E20               	movwf	__display_checked@cntr,c
 31830                           
 31831                           ;display.c: 457: while(checked_line3[cntr])
 31832  00407E  D01C               	goto	l1636
 31833  004080                     
 31834                           ;display.c: 458: display_content[2][start+cntr] = checked_line3[cntr++];
 31835  004080  5020               	movf	__display_checked@cntr,w,c
 31836  004082  0D01               	mullw	1
 31837  004084  0E71               	movlw	low _checked_line3
 31838  004086  24F3               	addwf	prodl,w,c
 31839  004088  6EF6               	movwf	tblptrl,c
 31840  00408A  0EBE               	movlw	high _checked_line3
 31841  00408C  20F4               	addwfc	prodh,w,c
 31842  00408E  6EF7               	movwf	tblptrh,c
 31843  004090                     	if	1	;There are 3 active tblptr bytes
 31844  004090  6AF8               	clrf	tblptru,c
 31845  004092  0E00               	movlw	low (__mediumconst shr (0+16))
 31846  004094  22F8               	addwfc	tblptru,f,c
 31847  004096                     	endif
 31848  004096  5020               	movf	__display_checked@cntr,w,c
 31849  004098  C01F  F01D         	movff	__display_checked@start,??__display_checked
 31850  00409C  6A1E               	clrf	(??__display_checked+1)& (0+255),c
 31851  00409E  261D               	addwf	??__display_checked,f,c
 31852  0040A0  0E00               	movlw	0
 31853  0040A2  221E               	addwfc	??__display_checked+1,f,c
 31854  0040A4  0E28               	movlw	low (_display_content+40)
 31855  0040A6  241D               	addwf	??__display_checked,w,c
 31856  0040A8  6ED9               	movwf	fsr2l,c
 31857  0040AA  0E02               	movlw	high (_display_content+40)
 31858  0040AC  201E               	addwfc	??__display_checked+1,w,c
 31859  0040AE  6EDA               	movwf	fsr2h,c
 31860  0040B0  0008               	tblrd		*
 31861  0040B2  CFF5 FFDF          	movff	tablat,indf2
 31862  0040B6  2A20               	incf	__display_checked@cntr,f,c
 31863  0040B8                     l1636:
 31864  0040B8  5020               	movf	__display_checked@cntr,w,c
 31865  0040BA  0D01               	mullw	1
 31866  0040BC  0E71               	movlw	low _checked_line3
 31867  0040BE  24F3               	addwf	prodl,w,c
 31868  0040C0  6EF6               	movwf	tblptrl,c
 31869  0040C2  0EBE               	movlw	high _checked_line3
 31870  0040C4  20F4               	addwfc	prodh,w,c
 31871  0040C6  6EF7               	movwf	tblptrh,c
 31872  0040C8                     	if	1	;There are 3 active tblptr bytes
 31873  0040C8  6AF8               	clrf	tblptru,c
 31874  0040CA  0E00               	movlw	low (__mediumconst shr (0+16))
 31875  0040CC  22F8               	addwfc	tblptru,f,c
 31876  0040CE                     	endif
 31877  0040CE  0008               	tblrd		*
 31878  0040D0  50F5               	movf	tablat,w,c
 31879  0040D2  0900               	iorlw	0
 31880  0040D4  A4D8               	btfss	status,2,c
 31881  0040D6  D7D4               	goto	l1637
 31882                           
 31883                           ;display.c: 460: cntr = 0;
 31884  0040D8  0E00               	movlw	0
 31885  0040DA  6E20               	movwf	__display_checked@cntr,c
 31886                           
 31887                           ;display.c: 461: while(checked_line4[cntr])
 31888  0040DC  D017               	goto	l1639
 31889  0040DE                     
 31890                           ;display.c: 462: display_content[3][cntr] = checked_line4[cntr++];
 31891  0040DE  5020               	movf	__display_checked@cntr,w,c
 31892  0040E0  0D01               	mullw	1
 31893  0040E2  0E06               	movlw	low _checked_line4
 31894  0040E4  24F3               	addwf	prodl,w,c
 31895  0040E6  6EF6               	movwf	tblptrl,c
 31896  0040E8  0EBD               	movlw	high _checked_line4
 31897  0040EA  20F4               	addwfc	prodh,w,c
 31898  0040EC  6EF7               	movwf	tblptrh,c
 31899  0040EE                     	if	1	;There are 3 active tblptr bytes
 31900  0040EE  6AF8               	clrf	tblptru,c
 31901  0040F0  0E00               	movlw	low (__mediumconst shr (0+16))
 31902  0040F2  22F8               	addwfc	tblptru,f,c
 31903  0040F4                     	endif
 31904  0040F4  5020               	movf	__display_checked@cntr,w,c
 31905  0040F6  0D01               	mullw	1
 31906  0040F8  0E3C               	movlw	low (_display_content+60)
 31907  0040FA  24F3               	addwf	prodl,w,c
 31908  0040FC  6ED9               	movwf	fsr2l,c
 31909  0040FE  0E02               	movlw	high (_display_content+60)
 31910  004100  20F4               	addwfc	prodh,w,c
 31911  004102  6EDA               	movwf	fsr2h,c
 31912  004104  0008               	tblrd		*
 31913  004106  CFF5 FFDF          	movff	tablat,indf2
 31914  00410A  2A20               	incf	__display_checked@cntr,f,c
 31915  00410C                     l1639:
 31916  00410C  5020               	movf	__display_checked@cntr,w,c
 31917  00410E  0D01               	mullw	1
 31918  004110  0E06               	movlw	low _checked_line4
 31919  004112  24F3               	addwf	prodl,w,c
 31920  004114  6EF6               	movwf	tblptrl,c
 31921  004116  0EBD               	movlw	high _checked_line4
 31922  004118  20F4               	addwfc	prodh,w,c
 31923  00411A  6EF7               	movwf	tblptrh,c
 31924  00411C                     	if	1	;There are 3 active tblptr bytes
 31925  00411C  6AF8               	clrf	tblptru,c
 31926  00411E  0E00               	movlw	low (__mediumconst shr (0+16))
 31927  004120  22F8               	addwfc	tblptru,f,c
 31928  004122                     	endif
 31929  004122  0008               	tblrd		*
 31930  004124  50F5               	movf	tablat,w,c
 31931  004126  0900               	iorlw	0
 31932  004128  B4D8               	btfsc	status,2,c
 31933  00412A  0012               	return	
 31934  00412C  D7D8               	goto	l1640
 31935  00412E                     __end_of__display_checked:
 31936                           	opt stack 0
 31937                           tosu	equ	0xFFF
 31938                           tosh	equ	0xFFE
 31939                           tosl	equ	0xFFD
 31940                           pclath	equ	0xFFA
 31941                           tblptru	equ	0xFF8
 31942                           tblptrh	equ	0xFF7
 31943                           tblptrl	equ	0xFF6
 31944                           tablat	equ	0xFF5
 31945                           prodh	equ	0xFF4
 31946                           prodl	equ	0xFF3
 31947                           intcon	equ	0xFF2
 31948                           intcon2	equ	0xFF1
 31949                           intcon3	equ	0xFF0
 31950                           indf0	equ	0xFEF
 31951                           postinc0	equ	0xFEE
 31952                           fsr0h	equ	0xFEA
 31953                           fsr0l	equ	0xFE9
 31954                           wreg	equ	0xFE8
 31955                           indf1	equ	0xFE7
 31956                           postdec1	equ	0xFE5
 31957                           plusw1	equ	0xFE3
 31958                           fsr1h	equ	0xFE2
 31959                           fsr1l	equ	0xFE1
 31960                           indf2	equ	0xFDF
 31961                           postinc2	equ	0xFDE
 31962                           postdec2	equ	0xFDD
 31963                           plusw2	equ	0xFDB
 31964                           fsr2h	equ	0xFDA
 31965                           fsr2l	equ	0xFD9
 31966                           status	equ	0xFD8
 31967                           
 31968 ;; *************** function _bootloader_get_total_entries *****************
 31969 ;; Defined at:
 31970 ;;		line 473 in file "bootloader.c"
 31971 ;; Parameters:    Size  Location     Type
 31972 ;;		None
 31973 ;; Auto vars:     Size  Location     Type
 31974 ;;		None
 31975 ;; Return value:  Size  Location     Type
 31976 ;;                  2    0[COMRAM] unsigned int 
 31977 ;; Registers used:
 31978 ;;		None
 31979 ;; Tracked objects:
 31980 ;;		On entry : 0/0
 31981 ;;		On exit  : 0/0
 31982 ;;		Unchanged: 0/0
 31983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31988 ;;Total ram usage:        2 bytes
 31989 ;; Hardware stack levels used:    1
 31990 ;; This function calls:
 31991 ;;		Nothing
 31992 ;; This function is called by:
 31993 ;;		__display_checked
 31994 ;;		__display_programming
 31995 ;;		__fill_buffer_get_bootloader_details
 31996 ;; This function uses a non-reentrant model
 31997 ;;
 31998                           
 31999                           	psect	text152
 32000  00A27C                     __ptext152:
 32001                           	opt stack 0
 32002  00A27C                     _bootloader_get_total_entries:
 32003                           	opt stack 25
 32004                           
 32005                           ;bootloader.c: 475: return total_hex_file_entries;
 32006                           
 32007                           ;incstack = 0
 32008  00A27C  C178  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 32009  00A280  C179  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 32010  00A284  0012               	return		;funcret
 32011  00A286                     __end_of_bootloader_get_total_entries:
 32012                           	opt stack 0
 32013                           tosu	equ	0xFFF
 32014                           tosh	equ	0xFFE
 32015                           tosl	equ	0xFFD
 32016                           pclath	equ	0xFFA
 32017                           tblptru	equ	0xFF8
 32018                           tblptrh	equ	0xFF7
 32019                           tblptrl	equ	0xFF6
 32020                           tablat	equ	0xFF5
 32021                           prodh	equ	0xFF4
 32022                           prodl	equ	0xFF3
 32023                           intcon	equ	0xFF2
 32024                           intcon2	equ	0xFF1
 32025                           intcon3	equ	0xFF0
 32026                           indf0	equ	0xFEF
 32027                           postinc0	equ	0xFEE
 32028                           fsr0h	equ	0xFEA
 32029                           fsr0l	equ	0xFE9
 32030                           wreg	equ	0xFE8
 32031                           indf1	equ	0xFE7
 32032                           postdec1	equ	0xFE5
 32033                           plusw1	equ	0xFE3
 32034                           fsr1h	equ	0xFE2
 32035                           fsr1l	equ	0xFE1
 32036                           indf2	equ	0xFDF
 32037                           postinc2	equ	0xFDE
 32038                           postdec2	equ	0xFDD
 32039                           plusw2	equ	0xFDB
 32040                           fsr2h	equ	0xFDA
 32041                           fsr2l	equ	0xFD9
 32042                           status	equ	0xFD8
 32043                           
 32044 ;; *************** function __display_itoa_u16 *****************
 32045 ;; Defined at:
 32046 ;;		line 94 in file "display.c"
 32047 ;; Parameters:    Size  Location     Type
 32048 ;;  value           2   24[COMRAM] unsigned int 
 32049 ;;  text            2   26[COMRAM] PTR unsigned char 
 32050 ;;		 -> display_content(80), 
 32051 ;; Auto vars:     Size  Location     Type
 32052 ;;		None
 32053 ;; Return value:  Size  Location     Type
 32054 ;;                  1    wreg      unsigned char 
 32055 ;; Registers used:
 32056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32057 ;; Tracked objects:
 32058 ;;		On entry : 0/0
 32059 ;;		On exit  : 0/0
 32060 ;;		Unchanged: 0/0
 32061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32066 ;;Total ram usage:        4 bytes
 32067 ;; Hardware stack levels used:    1
 32068 ;; Hardware stack levels required when called:    3
 32069 ;; This function calls:
 32070 ;;		_itoa
 32071 ;; This function is called by:
 32072 ;;		__display_itoa_u32
 32073 ;;		__display_start
 32074 ;;		__display_verify
 32075 ;;		__display_checked
 32076 ;;		__display_failed
 32077 ;;		__display_programming
 32078 ;;		__display_done
 32079 ;; This function uses a non-reentrant model
 32080 ;;
 32081                           
 32082                           	psect	text153
 32083  007A0C                     __ptext153:
 32084                           	opt stack 0
 32085  007A0C                     __display_itoa_u16:
 32086                           	opt stack 22
 32087                           
 32088                           ;display.c: 96: itoa(text, value, 10);
 32089                           
 32090                           ;incstack = 0
 32091  007A0C  C01B  F011         	movff	__display_itoa_u16@text,itoa@buf
 32092  007A10  C01C  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 32093  007A14  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 32094  007A18  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 32095  007A1C  0E00               	movlw	0
 32096  007A1E  6E16               	movwf	itoa@base+1,c
 32097  007A20  0E0A               	movlw	10
 32098  007A22  6E15               	movwf	itoa@base,c
 32099  007A24  EC2C  F04C         	call	_itoa	;wreg free
 32100                           
 32101                           ;display.c: 97: if(value>9999)
 32102  007A28  0E10               	movlw	16
 32103  007A2A  5C19               	subwf	__display_itoa_u16@value,w,c
 32104  007A2C  0E27               	movlw	39
 32105  007A2E  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32106  007A30  A0D8               	btfss	status,0,c
 32107  007A32  D00A               	goto	l1478
 32108                           
 32109                           ;display.c: 98: {;display.c: 99: *(text+5) = ' ';
 32110  007A34  EE20 F005          	lfsr	2,5
 32111  007A38  501B               	movf	__display_itoa_u16@text,w,c
 32112  007A3A  26D9               	addwf	fsr2l,f,c
 32113  007A3C  501C               	movf	__display_itoa_u16@text+1,w,c
 32114  007A3E  22DA               	addwfc	fsr2h,f,c
 32115  007A40  0E20               	movlw	32
 32116  007A42  6EDF               	movwf	indf2,c
 32117                           
 32118                           ;display.c: 100: return 5;
 32119  007A44  0E05               	movlw	5
 32120                           
 32121                           ;display.c: 101: }
 32122  007A46  0012               	return	
 32123  007A48                     l1478:
 32124                           
 32125                           ;display.c: 102: else if (value>999)
 32126  007A48  0EE8               	movlw	232
 32127  007A4A  5C19               	subwf	__display_itoa_u16@value,w,c
 32128  007A4C  0E03               	movlw	3
 32129  007A4E  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32130  007A50  A0D8               	btfss	status,0,c
 32131  007A52  D00A               	goto	l1481
 32132                           
 32133                           ;display.c: 103: {;display.c: 104: *(text+4) = ' ';
 32134  007A54  EE20 F004          	lfsr	2,4
 32135  007A58  501B               	movf	__display_itoa_u16@text,w,c
 32136  007A5A  26D9               	addwf	fsr2l,f,c
 32137  007A5C  501C               	movf	__display_itoa_u16@text+1,w,c
 32138  007A5E  22DA               	addwfc	fsr2h,f,c
 32139  007A60  0E20               	movlw	32
 32140  007A62  6EDF               	movwf	indf2,c
 32141                           
 32142                           ;display.c: 105: return 4;
 32143  007A64  0E04               	movlw	4
 32144                           
 32145                           ;display.c: 106: }
 32146  007A66  0012               	return	
 32147  007A68                     l1481:
 32148                           
 32149                           ;display.c: 107: else if (value>99)
 32150  007A68  501A               	movf	__display_itoa_u16@value+1,w,c
 32151  007A6A  E104               	bnz	u8130
 32152  007A6C  0E64               	movlw	100
 32153  007A6E  5C19               	subwf	__display_itoa_u16@value,w,c
 32154  007A70  A0D8               	btfss	status,0,c
 32155  007A72  D00A               	goto	l1483
 32156  007A74                     u8130:
 32157                           
 32158                           ;display.c: 108: {;display.c: 109: *(text+3) = ' ';
 32159  007A74  EE20 F003          	lfsr	2,3
 32160  007A78  501B               	movf	__display_itoa_u16@text,w,c
 32161  007A7A  26D9               	addwf	fsr2l,f,c
 32162  007A7C  501C               	movf	__display_itoa_u16@text+1,w,c
 32163  007A7E  22DA               	addwfc	fsr2h,f,c
 32164  007A80  0E20               	movlw	32
 32165  007A82  6EDF               	movwf	indf2,c
 32166                           
 32167                           ;display.c: 110: return 3;
 32168  007A84  0E03               	movlw	3
 32169                           
 32170                           ;display.c: 111: }
 32171  007A86  0012               	return	
 32172  007A88                     l1483:
 32173                           
 32174                           ;display.c: 112: else if (value>9)
 32175  007A88  501A               	movf	__display_itoa_u16@value+1,w,c
 32176  007A8A  E104               	bnz	u8140
 32177  007A8C  0E0A               	movlw	10
 32178  007A8E  5C19               	subwf	__display_itoa_u16@value,w,c
 32179  007A90  A0D8               	btfss	status,0,c
 32180  007A92  D00A               	goto	l1485
 32181  007A94                     u8140:
 32182                           
 32183                           ;display.c: 113: {;display.c: 114: *(text+2) = ' ';
 32184  007A94  EE20 F002          	lfsr	2,2
 32185  007A98  501B               	movf	__display_itoa_u16@text,w,c
 32186  007A9A  26D9               	addwf	fsr2l,f,c
 32187  007A9C  501C               	movf	__display_itoa_u16@text+1,w,c
 32188  007A9E  22DA               	addwfc	fsr2h,f,c
 32189  007AA0  0E20               	movlw	32
 32190  007AA2  6EDF               	movwf	indf2,c
 32191                           
 32192                           ;display.c: 115: return 2;
 32193  007AA4  0E02               	movlw	2
 32194                           
 32195                           ;display.c: 116: }
 32196  007AA6  0012               	return	
 32197  007AA8                     l1485:
 32198                           
 32199                           ;display.c: 117: else;display.c: 118: {;display.c: 119: *(text+1) = ' ';
 32200  007AA8  EE20 F001          	lfsr	2,1
 32201  007AAC  501B               	movf	__display_itoa_u16@text,w,c
 32202  007AAE  26D9               	addwf	fsr2l,f,c
 32203  007AB0  501C               	movf	__display_itoa_u16@text+1,w,c
 32204  007AB2  22DA               	addwfc	fsr2h,f,c
 32205  007AB4  0E20               	movlw	32
 32206  007AB6  6EDF               	movwf	indf2,c
 32207                           
 32208                           ;display.c: 120: return 1;
 32209  007AB8  0E01               	movlw	1
 32210  007ABA  0012               	return	
 32211  007ABC                     __end_of__display_itoa_u16:
 32212                           	opt stack 0
 32213                           tosu	equ	0xFFF
 32214                           tosh	equ	0xFFE
 32215                           tosl	equ	0xFFD
 32216                           pclath	equ	0xFFA
 32217                           tblptru	equ	0xFF8
 32218                           tblptrh	equ	0xFF7
 32219                           tblptrl	equ	0xFF6
 32220                           tablat	equ	0xFF5
 32221                           prodh	equ	0xFF4
 32222                           prodl	equ	0xFF3
 32223                           intcon	equ	0xFF2
 32224                           intcon2	equ	0xFF1
 32225                           intcon3	equ	0xFF0
 32226                           indf0	equ	0xFEF
 32227                           postinc0	equ	0xFEE
 32228                           fsr0h	equ	0xFEA
 32229                           fsr0l	equ	0xFE9
 32230                           wreg	equ	0xFE8
 32231                           indf1	equ	0xFE7
 32232                           postdec1	equ	0xFE5
 32233                           plusw1	equ	0xFE3
 32234                           fsr1h	equ	0xFE2
 32235                           fsr1l	equ	0xFE1
 32236                           indf2	equ	0xFDF
 32237                           postinc2	equ	0xFDE
 32238                           postdec2	equ	0xFDD
 32239                           plusw2	equ	0xFDB
 32240                           fsr2h	equ	0xFDA
 32241                           fsr2l	equ	0xFD9
 32242                           status	equ	0xFD8
 32243                           
 32244 ;; *************** function _itoa *****************
 32245 ;; Defined at:
 32246 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32247 ;; Parameters:    Size  Location     Type
 32248 ;;  buf             2   16[COMRAM] PTR unsigned char 
 32249 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32250 ;;  val             2   18[COMRAM] int 
 32251 ;;  base            2   20[COMRAM] int 
 32252 ;; Auto vars:     Size  Location     Type
 32253 ;;  cp              2   22[COMRAM] PTR unsigned char 
 32254 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32255 ;; Return value:  Size  Location     Type
 32256 ;;                  2   16[COMRAM] PTR unsigned char 
 32257 ;; Registers used:
 32258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32259 ;; Tracked objects:
 32260 ;;		On entry : 0/0
 32261 ;;		On exit  : 0/0
 32262 ;;		Unchanged: 0/0
 32263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32264 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32267 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32268 ;;Total ram usage:        8 bytes
 32269 ;; Hardware stack levels used:    1
 32270 ;; Hardware stack levels required when called:    2
 32271 ;; This function calls:
 32272 ;;		_utoa
 32273 ;; This function is called by:
 32274 ;;		__display_itoa_u16
 32275 ;;		__display_itoa_u32
 32276 ;;		__display_itoa
 32277 ;; This function uses a non-reentrant model
 32278 ;;
 32279                           
 32280                           	psect	text154
 32281  009858                     __ptext154:
 32282                           	opt stack 0
 32283  009858                     _itoa:
 32284                           	opt stack 22
 32285                           
 32286                           ;incstack = 0
 32287  009858  C011  F017         	movff	itoa@buf,itoa@cp
 32288  00985C  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 32289  009860  AE14               	btfss	itoa@val+1,7,c
 32290  009862  D00C               	goto	l3784
 32291  009864  C011  FFD9         	movff	itoa@buf,fsr2l
 32292  009868  C012  FFDA         	movff	itoa@buf+1,fsr2h
 32293  00986C  0E2D               	movlw	45
 32294  00986E  6EDF               	movwf	indf2,c
 32295  009870  4A11               	infsnz	itoa@buf,f,c
 32296  009872  2A12               	incf	itoa@buf+1,f,c
 32297  009874  6C13               	negf	itoa@val,c
 32298  009876  1E14               	comf	itoa@val+1,f,c
 32299  009878  B0D8               	btfsc	status,0,c
 32300  00987A  2A14               	incf	itoa@val+1,f,c
 32301  00987C                     l3784:
 32302  00987C  C011  F008         	movff	itoa@buf,utoa@buf
 32303  009880  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 32304  009884  C013  F00A         	movff	itoa@val,utoa@val
 32305  009888  C014  F00B         	movff	itoa@val+1,utoa@val+1
 32306  00988C  C015  F00C         	movff	itoa@base,utoa@base
 32307  009890  C016  F00D         	movff	itoa@base+1,utoa@base+1
 32308  009894  ECB0  F03E         	call	_utoa	;wreg free
 32309  009898  0012               	return	
 32310  00989A                     __end_of_itoa:
 32311                           	opt stack 0
 32312                           tosu	equ	0xFFF
 32313                           tosh	equ	0xFFE
 32314                           tosl	equ	0xFFD
 32315                           pclath	equ	0xFFA
 32316                           tblptru	equ	0xFF8
 32317                           tblptrh	equ	0xFF7
 32318                           tblptrl	equ	0xFF6
 32319                           tablat	equ	0xFF5
 32320                           prodh	equ	0xFF4
 32321                           prodl	equ	0xFF3
 32322                           intcon	equ	0xFF2
 32323                           intcon2	equ	0xFF1
 32324                           intcon3	equ	0xFF0
 32325                           indf0	equ	0xFEF
 32326                           postinc0	equ	0xFEE
 32327                           fsr0h	equ	0xFEA
 32328                           fsr0l	equ	0xFE9
 32329                           wreg	equ	0xFE8
 32330                           indf1	equ	0xFE7
 32331                           postdec1	equ	0xFE5
 32332                           plusw1	equ	0xFE3
 32333                           fsr1h	equ	0xFE2
 32334                           fsr1l	equ	0xFE1
 32335                           indf2	equ	0xFDF
 32336                           postinc2	equ	0xFDE
 32337                           postdec2	equ	0xFDD
 32338                           plusw2	equ	0xFDB
 32339                           fsr2h	equ	0xFDA
 32340                           fsr2l	equ	0xFD9
 32341                           status	equ	0xFD8
 32342                           
 32343 ;; *************** function _utoa *****************
 32344 ;; Defined at:
 32345 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32346 ;; Parameters:    Size  Location     Type
 32347 ;;  buf             2    7[COMRAM] PTR unsigned char 
 32348 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32349 ;;  val             2    9[COMRAM] unsigned int 
 32350 ;;  base            2   11[COMRAM] int 
 32351 ;; Auto vars:     Size  Location     Type
 32352 ;;  v               2   13[COMRAM] unsigned int 
 32353 ;;  c               1   15[COMRAM] unsigned char 
 32354 ;; Return value:  Size  Location     Type
 32355 ;;                  2    7[COMRAM] PTR unsigned char 
 32356 ;; Registers used:
 32357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32358 ;; Tracked objects:
 32359 ;;		On entry : 0/0
 32360 ;;		On exit  : 0/0
 32361 ;;		Unchanged: 0/0
 32362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32366 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32367 ;;Total ram usage:        9 bytes
 32368 ;; Hardware stack levels used:    1
 32369 ;; Hardware stack levels required when called:    1
 32370 ;; This function calls:
 32371 ;;		___lwdiv
 32372 ;;		___lwmod
 32373 ;; This function is called by:
 32374 ;;		_itoa
 32375 ;; This function uses a non-reentrant model
 32376 ;;
 32377                           
 32378                           	psect	text155
 32379  007D60                     __ptext155:
 32380                           	opt stack 0
 32381  007D60                     _utoa:
 32382                           	opt stack 22
 32383                           
 32384                           ;incstack = 0
 32385  007D60  C00A  F00E         	movff	utoa@val,utoa@v
 32386  007D64  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 32387  007D68  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 32388  007D6C  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 32389  007D70  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32390  007D74  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32391  007D78  EC73  F04A         	call	___lwdiv	;wreg free
 32392  007D7C  C001  F00E         	movff	?___lwdiv,utoa@v
 32393  007D80  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 32394  007D84  4A08               	infsnz	utoa@buf,f,c
 32395  007D86  2A09               	incf	utoa@buf+1,f,c
 32396  007D88  500E               	movf	utoa@v,w,c
 32397  007D8A  100F               	iorwf	utoa@v+1,w,c
 32398  007D8C  A4D8               	btfss	status,2,c
 32399  007D8E  D7EC               	goto	l3788
 32400  007D90  C008  FFD9         	movff	utoa@buf,fsr2l
 32401  007D94  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32402  007D98  0E00               	movlw	0
 32403  007D9A  6EDF               	movwf	indf2,c
 32404  007D9C  0608               	decf	utoa@buf,f,c
 32405  007D9E  A0D8               	btfss	status,0,c
 32406  007DA0  0609               	decf	utoa@buf+1,f,c
 32407  007DA2  C00A  F001         	movff	utoa@val,___lwmod@dividend
 32408  007DA6  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 32409  007DAA  C00C  F003         	movff	utoa@base,___lwmod@divisor
 32410  007DAE  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 32411  007DB2  EC4D  F04C         	call	___lwmod	;wreg free
 32412  007DB6  5001               	movf	?___lwmod,w,c
 32413  007DB8  6E10               	movwf	utoa@c,c
 32414  007DBA  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 32415  007DBE  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 32416  007DC2  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32417  007DC6  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32418  007DCA  EC73  F04A         	call	___lwdiv	;wreg free
 32419  007DCE  C001  F00A         	movff	?___lwdiv,utoa@val
 32420  007DD2  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 32421  007DD6  0E09               	movlw	9
 32422  007DD8  6410               	cpfsgt	utoa@c,c
 32423  007DDA  D002               	goto	l3791
 32424  007DDC  0E07               	movlw	7
 32425  007DDE  2610               	addwf	utoa@c,f,c
 32426  007DE0                     l3791:
 32427  007DE0  0E30               	movlw	48
 32428  007DE2  2610               	addwf	utoa@c,f,c
 32429  007DE4  C008  FFD9         	movff	utoa@buf,fsr2l
 32430  007DE8  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32431  007DEC  C010  FFDF         	movff	utoa@c,indf2
 32432  007DF0  0608               	decf	utoa@buf,f,c
 32433  007DF2  A0D8               	btfss	status,0,c
 32434  007DF4  0609               	decf	utoa@buf+1,f,c
 32435  007DF6  500A               	movf	utoa@val,w,c
 32436  007DF8  100B               	iorwf	utoa@val+1,w,c
 32437  007DFA  A4D8               	btfss	status,2,c
 32438  007DFC  D7D2               	goto	l3790
 32439                           
 32440                           ;	Return value of _utoa is never used
 32441  007DFE  4A08               	infsnz	utoa@buf,f,c
 32442  007E00  2A09               	incf	utoa@buf+1,f,c
 32443  007E02  0012               	return	
 32444  007E04                     __end_of_utoa:
 32445                           	opt stack 0
 32446                           tosu	equ	0xFFF
 32447                           tosh	equ	0xFFE
 32448                           tosl	equ	0xFFD
 32449                           pclath	equ	0xFFA
 32450                           tblptru	equ	0xFF8
 32451                           tblptrh	equ	0xFF7
 32452                           tblptrl	equ	0xFF6
 32453                           tablat	equ	0xFF5
 32454                           prodh	equ	0xFF4
 32455                           prodl	equ	0xFF3
 32456                           intcon	equ	0xFF2
 32457                           intcon2	equ	0xFF1
 32458                           intcon3	equ	0xFF0
 32459                           indf0	equ	0xFEF
 32460                           postinc0	equ	0xFEE
 32461                           fsr0h	equ	0xFEA
 32462                           fsr0l	equ	0xFE9
 32463                           wreg	equ	0xFE8
 32464                           indf1	equ	0xFE7
 32465                           postdec1	equ	0xFE5
 32466                           plusw1	equ	0xFE3
 32467                           fsr1h	equ	0xFE2
 32468                           fsr1l	equ	0xFE1
 32469                           indf2	equ	0xFDF
 32470                           postinc2	equ	0xFDE
 32471                           postdec2	equ	0xFDD
 32472                           plusw2	equ	0xFDB
 32473                           fsr2h	equ	0xFDA
 32474                           fsr2l	equ	0xFD9
 32475                           status	equ	0xFD8
 32476                           
 32477 ;; *************** function ___lwmod *****************
 32478 ;; Defined at:
 32479 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 32480 ;; Parameters:    Size  Location     Type
 32481 ;;  dividend        2    0[COMRAM] unsigned int 
 32482 ;;  divisor         2    2[COMRAM] unsigned int 
 32483 ;; Auto vars:     Size  Location     Type
 32484 ;;  counter         1    4[COMRAM] unsigned char 
 32485 ;; Return value:  Size  Location     Type
 32486 ;;                  2    0[COMRAM] unsigned int 
 32487 ;; Registers used:
 32488 ;;		wreg, status,2, status,0
 32489 ;; Tracked objects:
 32490 ;;		On entry : 0/0
 32491 ;;		On exit  : 0/0
 32492 ;;		Unchanged: 0/0
 32493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32498 ;;Total ram usage:        5 bytes
 32499 ;; Hardware stack levels used:    1
 32500 ;; This function calls:
 32501 ;;		Nothing
 32502 ;; This function is called by:
 32503 ;;		_utoa
 32504 ;; This function uses a non-reentrant model
 32505 ;;
 32506                           
 32507                           	psect	text156
 32508  00989A                     __ptext156:
 32509                           	opt stack 0
 32510  00989A                     ___lwmod:
 32511                           	opt stack 22
 32512                           
 32513                           ;incstack = 0
 32514  00989A  5003               	movf	___lwmod@divisor,w,c
 32515  00989C  1004               	iorwf	___lwmod@divisor+1,w,c
 32516  00989E  B4D8               	btfsc	status,2,c
 32517  0098A0  D018               	goto	l3615
 32518  0098A2  0E01               	movlw	1
 32519  0098A4  6E05               	movwf	___lwmod@counter,c
 32520  0098A6  D004               	goto	l3610
 32521  0098A8  90D8               	bcf	status,0,c
 32522  0098AA  3603               	rlcf	___lwmod@divisor,f,c
 32523  0098AC  3604               	rlcf	___lwmod@divisor+1,f,c
 32524  0098AE  2A05               	incf	___lwmod@counter,f,c
 32525  0098B0                     l3610:
 32526  0098B0  AE04               	btfss	___lwmod@divisor+1,7,c
 32527  0098B2  D7FA               	goto	l3611
 32528  0098B4                     u7490:
 32529  0098B4  5003               	movf	___lwmod@divisor,w,c
 32530  0098B6  5C01               	subwf	___lwmod@dividend,w,c
 32531  0098B8  5004               	movf	___lwmod@divisor+1,w,c
 32532  0098BA  5802               	subwfb	___lwmod@dividend+1,w,c
 32533  0098BC  A0D8               	btfss	status,0,c
 32534  0098BE  D004               	goto	l3614
 32535  0098C0  5003               	movf	___lwmod@divisor,w,c
 32536  0098C2  5E01               	subwf	___lwmod@dividend,f,c
 32537  0098C4  5004               	movf	___lwmod@divisor+1,w,c
 32538  0098C6  5A02               	subwfb	___lwmod@dividend+1,f,c
 32539  0098C8                     l3614:
 32540  0098C8  90D8               	bcf	status,0,c
 32541  0098CA  3204               	rrcf	___lwmod@divisor+1,f,c
 32542  0098CC  3203               	rrcf	___lwmod@divisor,f,c
 32543  0098CE  2E05               	decfsz	___lwmod@counter,f,c
 32544  0098D0  D7F1               	goto	u7490
 32545  0098D2                     l3615:
 32546  0098D2  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32547  0098D6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32548  0098DA  0012               	return		;funcret
 32549  0098DC                     __end_of___lwmod:
 32550                           	opt stack 0
 32551                           tosu	equ	0xFFF
 32552                           tosh	equ	0xFFE
 32553                           tosl	equ	0xFFD
 32554                           pclath	equ	0xFFA
 32555                           tblptru	equ	0xFF8
 32556                           tblptrh	equ	0xFF7
 32557                           tblptrl	equ	0xFF6
 32558                           tablat	equ	0xFF5
 32559                           prodh	equ	0xFF4
 32560                           prodl	equ	0xFF3
 32561                           intcon	equ	0xFF2
 32562                           intcon2	equ	0xFF1
 32563                           intcon3	equ	0xFF0
 32564                           indf0	equ	0xFEF
 32565                           postinc0	equ	0xFEE
 32566                           fsr0h	equ	0xFEA
 32567                           fsr0l	equ	0xFE9
 32568                           wreg	equ	0xFE8
 32569                           indf1	equ	0xFE7
 32570                           postdec1	equ	0xFE5
 32571                           plusw1	equ	0xFE3
 32572                           fsr1h	equ	0xFE2
 32573                           fsr1l	equ	0xFE1
 32574                           indf2	equ	0xFDF
 32575                           postinc2	equ	0xFDE
 32576                           postdec2	equ	0xFDD
 32577                           plusw2	equ	0xFDB
 32578                           fsr2h	equ	0xFDA
 32579                           fsr2l	equ	0xFD9
 32580                           status	equ	0xFD8
 32581                           
 32582 ;; *************** function ___lwdiv *****************
 32583 ;; Defined at:
 32584 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32585 ;; Parameters:    Size  Location     Type
 32586 ;;  dividend        2    0[COMRAM] unsigned int 
 32587 ;;  divisor         2    2[COMRAM] unsigned int 
 32588 ;; Auto vars:     Size  Location     Type
 32589 ;;  quotient        2    4[COMRAM] unsigned int 
 32590 ;;  counter         1    6[COMRAM] unsigned char 
 32591 ;; Return value:  Size  Location     Type
 32592 ;;                  2    0[COMRAM] unsigned int 
 32593 ;; Registers used:
 32594 ;;		wreg, status,2, status,0
 32595 ;; Tracked objects:
 32596 ;;		On entry : 0/0
 32597 ;;		On exit  : 0/0
 32598 ;;		Unchanged: 0/0
 32599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32601 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32603 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32604 ;;Total ram usage:        7 bytes
 32605 ;; Hardware stack levels used:    1
 32606 ;; This function calls:
 32607 ;;		Nothing
 32608 ;; This function is called by:
 32609 ;;		_utoa
 32610 ;; This function uses a non-reentrant model
 32611 ;;
 32612                           
 32613                           	psect	text157
 32614  0094E6                     __ptext157:
 32615                           	opt stack 0
 32616  0094E6                     ___lwdiv:
 32617                           	opt stack 22
 32618                           
 32619                           ;incstack = 0
 32620  0094E6  0E00               	movlw	0
 32621  0094E8  6E06               	movwf	___lwdiv@quotient+1,c
 32622  0094EA  0E00               	movlw	0
 32623  0094EC  6E05               	movwf	___lwdiv@quotient,c
 32624  0094EE  5003               	movf	___lwdiv@divisor,w,c
 32625  0094F0  1004               	iorwf	___lwdiv@divisor+1,w,c
 32626  0094F2  B4D8               	btfsc	status,2,c
 32627  0094F4  D01C               	goto	l3605
 32628  0094F6  0E01               	movlw	1
 32629  0094F8  6E07               	movwf	___lwdiv@counter,c
 32630  0094FA  D004               	goto	l3600
 32631  0094FC  90D8               	bcf	status,0,c
 32632  0094FE  3603               	rlcf	___lwdiv@divisor,f,c
 32633  009500  3604               	rlcf	___lwdiv@divisor+1,f,c
 32634  009502  2A07               	incf	___lwdiv@counter,f,c
 32635  009504                     l3600:
 32636  009504  AE04               	btfss	___lwdiv@divisor+1,7,c
 32637  009506  D7FA               	goto	l3601
 32638  009508                     u7460:
 32639  009508  90D8               	bcf	status,0,c
 32640  00950A  3605               	rlcf	___lwdiv@quotient,f,c
 32641  00950C  3606               	rlcf	___lwdiv@quotient+1,f,c
 32642  00950E  5003               	movf	___lwdiv@divisor,w,c
 32643  009510  5C01               	subwf	___lwdiv@dividend,w,c
 32644  009512  5004               	movf	___lwdiv@divisor+1,w,c
 32645  009514  5802               	subwfb	___lwdiv@dividend+1,w,c
 32646  009516  A0D8               	btfss	status,0,c
 32647  009518  D005               	goto	l3604
 32648  00951A  5003               	movf	___lwdiv@divisor,w,c
 32649  00951C  5E01               	subwf	___lwdiv@dividend,f,c
 32650  00951E  5004               	movf	___lwdiv@divisor+1,w,c
 32651  009520  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32652  009522  8005               	bsf	___lwdiv@quotient,0,c
 32653  009524                     l3604:
 32654  009524  90D8               	bcf	status,0,c
 32655  009526  3204               	rrcf	___lwdiv@divisor+1,f,c
 32656  009528  3203               	rrcf	___lwdiv@divisor,f,c
 32657  00952A  2E07               	decfsz	___lwdiv@counter,f,c
 32658  00952C  D7ED               	goto	u7460
 32659  00952E                     l3605:
 32660  00952E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32661  009532  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32662  009536  0012               	return		;funcret
 32663  009538                     __end_of___lwdiv:
 32664                           	opt stack 0
 32665                           tosu	equ	0xFFF
 32666                           tosh	equ	0xFFE
 32667                           tosl	equ	0xFFD
 32668                           pclath	equ	0xFFA
 32669                           tblptru	equ	0xFF8
 32670                           tblptrh	equ	0xFF7
 32671                           tblptrl	equ	0xFF6
 32672                           tablat	equ	0xFF5
 32673                           prodh	equ	0xFF4
 32674                           prodl	equ	0xFF3
 32675                           intcon	equ	0xFF2
 32676                           intcon2	equ	0xFF1
 32677                           intcon3	equ	0xFF0
 32678                           indf0	equ	0xFEF
 32679                           postinc0	equ	0xFEE
 32680                           fsr0h	equ	0xFEA
 32681                           fsr0l	equ	0xFE9
 32682                           wreg	equ	0xFE8
 32683                           indf1	equ	0xFE7
 32684                           postdec1	equ	0xFE5
 32685                           plusw1	equ	0xFE3
 32686                           fsr1h	equ	0xFE2
 32687                           fsr1l	equ	0xFE1
 32688                           indf2	equ	0xFDF
 32689                           postinc2	equ	0xFDE
 32690                           postdec2	equ	0xFDD
 32691                           plusw2	equ	0xFDB
 32692                           fsr2h	equ	0xFDA
 32693                           fsr2l	equ	0xFD9
 32694                           status	equ	0xFD8
 32695                           
 32696 ;; *************** function _i2c_eeprom_writeByte *****************
 32697 ;; Defined at:
 32698 ;;		line 380 in file "i2c.c"
 32699 ;; Parameters:    Size  Location     Type
 32700 ;;  address         2   10[COMRAM] unsigned int 
 32701 ;;  data            1   12[COMRAM] unsigned char 
 32702 ;; Auto vars:     Size  Location     Type
 32703 ;;  dat             2   16[COMRAM] unsigned char [2]
 32704 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32705 ;; Return value:  Size  Location     Type
 32706 ;;                  1    wreg      void 
 32707 ;; Registers used:
 32708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32709 ;; Tracked objects:
 32710 ;;		On entry : 0/0
 32711 ;;		On exit  : 0/0
 32712 ;;		Unchanged: 0/0
 32713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32717 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32718 ;;Total ram usage:        9 bytes
 32719 ;; Hardware stack levels used:    1
 32720 ;; Hardware stack levels required when called:    2
 32721 ;; This function calls:
 32722 ;;		__i2c_write
 32723 ;;		_i2c_set_frequency
 32724 ;; This function is called by:
 32725 ;;		__normal_mode
 32726 ;;		__ui_encoder
 32727 ;;		__parse_command_short
 32728 ;; This function uses a non-reentrant model
 32729 ;;
 32730                           
 32731                           	psect	text158
 32732  0098DC                     __ptext158:
 32733                           	opt stack 0
 32734  0098DC                     _i2c_eeprom_writeByte:
 32735                           	opt stack 26
 32736                           
 32737                           ;i2c.c: 382: uint8_t slave_address;;i2c.c: 383: uint8_t dat[2];;i2c.c: 385: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 32738                           
 32739                           ;incstack = 0
 32740  0098DC  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32741  0098E0  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32742  0098E4  0E07               	movlw	7
 32743  0098E6  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32744  0098E8                     u11535:
 32745  0098E8  90D8               	bcf	status,0,c
 32746  0098EA  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32747  0098EC  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32748  0098EE  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32749  0098F0  D7FB               	goto	u11535
 32750  0098F2  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32751  0098F4  0B0E               	andlw	14
 32752  0098F6  09A0               	iorlw	160
 32753  0098F8  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32754                           
 32755                           ;i2c.c: 386: dat[0] = address & 0xFF;
 32756  0098FA  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32757                           
 32758                           ;i2c.c: 387: dat[1] = data;
 32759  0098FE  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32760                           
 32761                           ;i2c.c: 390: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 32762  009902  0E02               	movlw	2
 32763  009904  ECA5  F04E         	call	_i2c_set_frequency
 32764                           
 32765                           ;i2c.c: 392: _i2c_write(slave_address, &dat[0], 2);
 32766  009908  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32767  00990A  6E06               	movwf	__i2c_write@data,c
 32768  00990C  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32769  00990E  6E07               	movwf	__i2c_write@data+1,c
 32770  009910  0E02               	movlw	2
 32771  009912  6E08               	movwf	__i2c_write@length,c
 32772  009914  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32773  009916  EC38  F04B         	call	__i2c_write
 32774  00991A  0012               	return		;funcret
 32775  00991C                     __end_of_i2c_eeprom_writeByte:
 32776                           	opt stack 0
 32777                           tosu	equ	0xFFF
 32778                           tosh	equ	0xFFE
 32779                           tosl	equ	0xFFD
 32780                           pclath	equ	0xFFA
 32781                           tblptru	equ	0xFF8
 32782                           tblptrh	equ	0xFF7
 32783                           tblptrl	equ	0xFF6
 32784                           tablat	equ	0xFF5
 32785                           prodh	equ	0xFF4
 32786                           prodl	equ	0xFF3
 32787                           intcon	equ	0xFF2
 32788                           intcon2	equ	0xFF1
 32789                           intcon3	equ	0xFF0
 32790                           indf0	equ	0xFEF
 32791                           postinc0	equ	0xFEE
 32792                           fsr0h	equ	0xFEA
 32793                           fsr0l	equ	0xFE9
 32794                           wreg	equ	0xFE8
 32795                           indf1	equ	0xFE7
 32796                           postdec1	equ	0xFE5
 32797                           plusw1	equ	0xFE3
 32798                           fsr1h	equ	0xFE2
 32799                           fsr1l	equ	0xFE1
 32800                           indf2	equ	0xFDF
 32801                           postinc2	equ	0xFDE
 32802                           postdec2	equ	0xFDD
 32803                           plusw2	equ	0xFDB
 32804                           fsr2h	equ	0xFDA
 32805                           fsr2l	equ	0xFD9
 32806                           status	equ	0xFD8
 32807                           
 32808 ;; *************** function _i2c_set_frequency *****************
 32809 ;; Defined at:
 32810 ;;		line 131 in file "i2c.c"
 32811 ;; Parameters:    Size  Location     Type
 32812 ;;  frequency       1    wreg     enum E6622
 32813 ;; Auto vars:     Size  Location     Type
 32814 ;;  frequency       1    0[COMRAM] enum E6622
 32815 ;; Return value:  Size  Location     Type
 32816 ;;                  1    wreg      void 
 32817 ;; Registers used:
 32818 ;;		wreg, status,2, status,0
 32819 ;; Tracked objects:
 32820 ;;		On entry : 0/0
 32821 ;;		On exit  : 0/0
 32822 ;;		Unchanged: 0/0
 32823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32828 ;;Total ram usage:        1 bytes
 32829 ;; Hardware stack levels used:    1
 32830 ;; This function calls:
 32831 ;;		Nothing
 32832 ;; This function is called by:
 32833 ;;		_i2c_init
 32834 ;;		__ic2_display_set_address
 32835 ;;		_i2c_display_send_init_sequence
 32836 ;;		_i2c_display_cursor
 32837 ;;		_i2c_display_write_fixed
 32838 ;;		_i2c_digipot_reset_on
 32839 ;;		_i2c_digipot_reset_off
 32840 ;;		_i2c_digipot_backlight
 32841 ;;		_i2c_eeprom_writeByte
 32842 ;;		_i2c_eeprom_readByte
 32843 ;;		_i2c_display_write
 32844 ;;		_i2c_digipot_set_defaults
 32845 ;;		_i2c_eeprom_write
 32846 ;;		_i2c_eeprom_read
 32847 ;; This function uses a non-reentrant model
 32848 ;;
 32849                           
 32850                           	psect	text159
 32851  009D4A                     __ptext159:
 32852                           	opt stack 0
 32853  009D4A                     _i2c_set_frequency:
 32854                           	opt stack 28
 32855                           
 32856                           ;incstack = 0
 32857                           ;i2c_set_frequency@frequency stored from wreg
 32858  009D4A  6E01               	movwf	i2c_set_frequency@frequency,c
 32859                           
 32860                           ;i2c.c: 133: switch(frequency)
 32861  009D4C  D007               	goto	l1191
 32862  009D4E                     
 32863                           ;i2c.c: 136: SSP1ADD = 119;
 32864  009D4E  0E77               	movlw	119
 32865  009D50  D003               	goto	L34
 32866  009D52                     
 32867                           ;i2c.c: 139: SSP1ADD = 59;
 32868  009D52  0E3B               	movlw	59
 32869  009D54  D001               	goto	L34
 32870  009D56                     
 32871                           ;i2c.c: 142: SSP1ADD = 29;
 32872  009D56  0E1D               	movlw	29
 32873  009D58                     L34:
 32874  009D58  6EC8               	movwf	4040,c	;volatile
 32875                           
 32876                           ;i2c.c: 144: }
 32877                           
 32878                           ;i2c.c: 143: break;
 32879  009D5A  D00A               	goto	l1193
 32880  009D5C                     l1191:
 32881  009D5C  5001               	movf	i2c_set_frequency@frequency,w,c
 32882                           
 32883                           ; Switch size 1, requested type "space"
 32884                           ; Number of cases is 3, Range of values is 0 to 2
 32885                           ; switch strategies available:
 32886                           ; Name         Instructions Cycles
 32887                           ; simple_byte           10     6 (average)
 32888                           ;	Chosen strategy is simple_byte
 32889  009D5E  0A00               	xorlw	0	; case 0
 32890  009D60  B4D8               	btfsc	status,2,c
 32891  009D62  D7F5               	goto	l1192
 32892  009D64  0A01               	xorlw	1	; case 1
 32893  009D66  B4D8               	btfsc	status,2,c
 32894  009D68  D7F4               	goto	l1194
 32895  009D6A  0A03               	xorlw	3	; case 2
 32896  009D6C  B4D8               	btfsc	status,2,c
 32897  009D6E  D7F3               	goto	l1195
 32898  009D70                     l1193:
 32899                           
 32900                           ;i2c.c: 146: i2c_frequency = frequency;
 32901  009D70  C001  F18F         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32902  009D74  0012               	return		;funcret
 32903  009D76                     __end_of_i2c_set_frequency:
 32904                           	opt stack 0
 32905                           tosu	equ	0xFFF
 32906                           tosh	equ	0xFFE
 32907                           tosl	equ	0xFFD
 32908                           pclath	equ	0xFFA
 32909                           tblptru	equ	0xFF8
 32910                           tblptrh	equ	0xFF7
 32911                           tblptrl	equ	0xFF6
 32912                           tablat	equ	0xFF5
 32913                           prodh	equ	0xFF4
 32914                           prodl	equ	0xFF3
 32915                           intcon	equ	0xFF2
 32916                           intcon2	equ	0xFF1
 32917                           intcon3	equ	0xFF0
 32918                           indf0	equ	0xFEF
 32919                           postinc0	equ	0xFEE
 32920                           fsr0h	equ	0xFEA
 32921                           fsr0l	equ	0xFE9
 32922                           wreg	equ	0xFE8
 32923                           indf1	equ	0xFE7
 32924                           postdec1	equ	0xFE5
 32925                           plusw1	equ	0xFE3
 32926                           fsr1h	equ	0xFE2
 32927                           fsr1l	equ	0xFE1
 32928                           indf2	equ	0xFDF
 32929                           postinc2	equ	0xFDE
 32930                           postdec2	equ	0xFDD
 32931                           plusw2	equ	0xFDB
 32932                           fsr2h	equ	0xFDA
 32933                           fsr2l	equ	0xFD9
 32934                           status	equ	0xFD8
 32935                           
 32936 ;; *************** function __i2c_write *****************
 32937 ;; Defined at:
 32938 ;;		line 150 in file "i2c.c"
 32939 ;; Parameters:    Size  Location     Type
 32940 ;;  slave_addres    1    wreg     unsigned char 
 32941 ;;  data            2    5[COMRAM] PTR unsigned char 
 32942 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32943 ;;		 -> i2c_digipot_set_defaults@data_array(2), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2)
      +, i2c_digipot_reset_on@data_array(2), 
 32944 ;;		 -> i2c_display_send_init_sequence@init_sequence(9), _ic2_display_set_address@data_array(2), 
 32945 ;;  length          1    7[COMRAM] unsigned char 
 32946 ;; Auto vars:     Size  Location     Type
 32947 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32948 ;;  cntr            1    9[COMRAM] unsigned char 
 32949 ;; Return value:  Size  Location     Type
 32950 ;;                  1    wreg      void 
 32951 ;; Registers used:
 32952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32953 ;; Tracked objects:
 32954 ;;		On entry : 0/0
 32955 ;;		On exit  : 0/0
 32956 ;;		Unchanged: 0/0
 32957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32958 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32961 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32962 ;;Total ram usage:        5 bytes
 32963 ;; Hardware stack levels used:    1
 32964 ;; Hardware stack levels required when called:    1
 32965 ;; This function calls:
 32966 ;;		__i2c_send
 32967 ;;		__i2c_start
 32968 ;;		__i2c_stop
 32969 ;;		__i2c_wait_idle
 32970 ;; This function is called by:
 32971 ;;		__ic2_display_set_address
 32972 ;;		_i2c_display_send_init_sequence
 32973 ;;		_i2c_digipot_reset_on
 32974 ;;		_i2c_digipot_reset_off
 32975 ;;		_i2c_digipot_backlight
 32976 ;;		_i2c_eeprom_writeByte
 32977 ;;		_i2c_eeprom_readByte
 32978 ;;		_i2c_digipot_set_defaults
 32979 ;;		_i2c_eeprom_write
 32980 ;;		_i2c_eeprom_read
 32981 ;; This function uses a non-reentrant model
 32982 ;;
 32983                           
 32984                           	psect	text160
 32985  009670                     __ptext160:
 32986                           	opt stack 0
 32987  009670                     __i2c_write:
 32988                           	opt stack 27
 32989                           
 32990                           ;incstack = 0
 32991                           ;__i2c_write@slave_address stored from wreg
 32992  009670  6E09               	movwf	__i2c_write@slave_address,c
 32993                           
 32994                           ;i2c.c: 152: uint8_t cntr;;i2c.c: 154: _i2c_wait_idle();
 32995  009672  EC42  F048         	call	__i2c_wait_idle	;wreg free
 32996                           
 32997                           ;i2c.c: 155: _i2c_start();
 32998  009676  EC51  F051         	call	__i2c_start	;wreg free
 32999                           
 33000                           ;i2c.c: 156: _i2c_wait_idle();
 33001  00967A  EC42  F048         	call	__i2c_wait_idle	;wreg free
 33002                           
 33003                           ;i2c.c: 157: _i2c_send(slave_address);
 33004  00967E  5009               	movf	__i2c_write@slave_address,w,c
 33005  009680  EC55  F051         	call	__i2c_send
 33006                           
 33007                           ;i2c.c: 158: _i2c_wait_idle();
 33008  009684  EC42  F048         	call	__i2c_wait_idle	;wreg free
 33009                           
 33010                           ;i2c.c: 160: for(cntr=0; cntr<length; ++cntr)
 33011  009688  0E00               	movlw	0
 33012  00968A  6E0A               	movwf	__i2c_write@cntr,c
 33013  00968C  D00E               	goto	l1199
 33014  00968E                     
 33015                           ;i2c.c: 161: {;i2c.c: 162: _i2c_send(data[cntr]);
 33016  00968E  500A               	movf	__i2c_write@cntr,w,c
 33017  009690  0D01               	mullw	1
 33018  009692  50F3               	movf	prodl,w,c
 33019  009694  2406               	addwf	__i2c_write@data,w,c
 33020  009696  6ED9               	movwf	fsr2l,c
 33021  009698  50F4               	movf	prodh,w,c
 33022  00969A  2007               	addwfc	__i2c_write@data+1,w,c
 33023  00969C  6EDA               	movwf	fsr2h,c
 33024  00969E  50DF               	movf	indf2,w,c
 33025  0096A0  EC55  F051         	call	__i2c_send
 33026                           
 33027                           ;i2c.c: 163: _i2c_wait_idle();
 33028  0096A4  EC42  F048         	call	__i2c_wait_idle	;wreg free
 33029  0096A8  2A0A               	incf	__i2c_write@cntr,f,c
 33030  0096AA                     l1199:
 33031  0096AA  5008               	movf	__i2c_write@length,w,c
 33032  0096AC  5C0A               	subwf	__i2c_write@cntr,w,c
 33033  0096AE  A0D8               	btfss	status,0,c
 33034  0096B0  D7EE               	goto	l1200
 33035                           
 33036                           ;i2c.c: 164: };i2c.c: 166: _i2c_stop();
 33037  0096B2  EC4D  F051         	call	__i2c_stop	;wreg free
 33038  0096B6  0012               	return		;funcret
 33039  0096B8                     __end_of__i2c_write:
 33040                           	opt stack 0
 33041                           tosu	equ	0xFFF
 33042                           tosh	equ	0xFFE
 33043                           tosl	equ	0xFFD
 33044                           pclath	equ	0xFFA
 33045                           tblptru	equ	0xFF8
 33046                           tblptrh	equ	0xFF7
 33047                           tblptrl	equ	0xFF6
 33048                           tablat	equ	0xFF5
 33049                           prodh	equ	0xFF4
 33050                           prodl	equ	0xFF3
 33051                           intcon	equ	0xFF2
 33052                           intcon2	equ	0xFF1
 33053                           intcon3	equ	0xFF0
 33054                           indf0	equ	0xFEF
 33055                           postinc0	equ	0xFEE
 33056                           fsr0h	equ	0xFEA
 33057                           fsr0l	equ	0xFE9
 33058                           wreg	equ	0xFE8
 33059                           indf1	equ	0xFE7
 33060                           postdec1	equ	0xFE5
 33061                           plusw1	equ	0xFE3
 33062                           fsr1h	equ	0xFE2
 33063                           fsr1l	equ	0xFE1
 33064                           indf2	equ	0xFDF
 33065                           postinc2	equ	0xFDE
 33066                           postdec2	equ	0xFDD
 33067                           plusw2	equ	0xFDB
 33068                           fsr2h	equ	0xFDA
 33069                           fsr2l	equ	0xFD9
 33070                           status	equ	0xFD8
 33071                           
 33072 ;; *************** function __i2c_wait_idle *****************
 33073 ;; Defined at:
 33074 ;;		line 56 in file "i2c.c"
 33075 ;; Parameters:    Size  Location     Type
 33076 ;;		None
 33077 ;; Auto vars:     Size  Location     Type
 33078 ;;		None
 33079 ;; Return value:  Size  Location     Type
 33080 ;;                  1    wreg      void 
 33081 ;; Registers used:
 33082 ;;		wreg, status,2, status,0
 33083 ;; Tracked objects:
 33084 ;;		On entry : 0/0
 33085 ;;		On exit  : 0/0
 33086 ;;		Unchanged: 0/0
 33087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33090 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33091 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33092 ;;Total ram usage:        5 bytes
 33093 ;; Hardware stack levels used:    1
 33094 ;; This function calls:
 33095 ;;		Nothing
 33096 ;; This function is called by:
 33097 ;;		__i2c_write
 33098 ;;		__i2c_read
 33099 ;;		_i2c_display_write_fixed
 33100 ;;		_i2c_display_write
 33101 ;; This function uses a non-reentrant model
 33102 ;;
 33103                           
 33104                           	psect	text161
 33105  009084                     __ptext161:
 33106                           	opt stack 0
 33107  009084                     __i2c_wait_idle:
 33108                           	opt stack 27
 33109                           
 33110                           ;i2c.c: 58: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 33111                           
 33112                           ;incstack = 0
 33113  009084  A4C7               	btfss	4039,2,c	;volatile
 33114  009086  D003               	goto	u7640
 33115  009088  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33116  00908A  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33117  00908C  D001               	goto	u7648
 33118  00908E                     u7640:
 33119  00908E  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33120  009090                     u7648:
 33121  009090  A0C5               	btfss	4037,0,c	;volatile
 33122  009092  D003               	goto	u7650
 33123  009094  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33124  009096  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33125  009098  D001               	goto	u7658
 33126  00909A                     u7650:
 33127  00909A  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33128  00909C                     u7658:
 33129  00909C  A2C5               	btfss	4037,1,c	;volatile
 33130  00909E  D003               	goto	u7660
 33131  0090A0  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33132  0090A2  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33133  0090A4  D001               	goto	u7668
 33134  0090A6                     u7660:
 33135  0090A6  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33136  0090A8                     u7668:
 33137  0090A8  A4C5               	btfss	4037,2,c	;volatile
 33138  0090AA  D003               	goto	u7670
 33139  0090AC  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33140  0090AE  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33141  0090B0  D001               	goto	u7678
 33142  0090B2                     u7670:
 33143  0090B2  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33144  0090B4                     u7678:
 33145  0090B4  A6C5               	btfss	4037,3,c	;volatile
 33146  0090B6  D003               	goto	u7680
 33147  0090B8  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33148  0090BA  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33149  0090BC  D001               	goto	u7688
 33150  0090BE                     u7680:
 33151  0090BE  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33152  0090C0                     u7688:
 33153  0090C0  A8C5               	btfss	4037,4,c	;volatile
 33154  0090C2  D002               	goto	u7690
 33155  0090C4  0E01               	movlw	1
 33156  0090C6  D001               	goto	u7696
 33157  0090C8                     u7690:
 33158  0090C8  0E00               	movlw	0
 33159  0090CA                     u7696:
 33160  0090CA  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33161  0090CC  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33162  0090CE  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33163  0090D0  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33164  0090D2  1001               	iorwf	??__i2c_wait_idle,w,c
 33165  0090D4  0900               	iorlw	0
 33166  0090D6  B4D8               	btfsc	status,2,c
 33167  0090D8  0012               	return	
 33168  0090DA  D7D4               	goto	__i2c_wait_idle
 33169  0090DC                     __end_of__i2c_wait_idle:
 33170                           	opt stack 0
 33171                           tosu	equ	0xFFF
 33172                           tosh	equ	0xFFE
 33173                           tosl	equ	0xFFD
 33174                           pclath	equ	0xFFA
 33175                           tblptru	equ	0xFF8
 33176                           tblptrh	equ	0xFF7
 33177                           tblptrl	equ	0xFF6
 33178                           tablat	equ	0xFF5
 33179                           prodh	equ	0xFF4
 33180                           prodl	equ	0xFF3
 33181                           intcon	equ	0xFF2
 33182                           intcon2	equ	0xFF1
 33183                           intcon3	equ	0xFF0
 33184                           indf0	equ	0xFEF
 33185                           postinc0	equ	0xFEE
 33186                           fsr0h	equ	0xFEA
 33187                           fsr0l	equ	0xFE9
 33188                           wreg	equ	0xFE8
 33189                           indf1	equ	0xFE7
 33190                           postdec1	equ	0xFE5
 33191                           plusw1	equ	0xFE3
 33192                           fsr1h	equ	0xFE2
 33193                           fsr1l	equ	0xFE1
 33194                           indf2	equ	0xFDF
 33195                           postinc2	equ	0xFDE
 33196                           postdec2	equ	0xFDD
 33197                           plusw2	equ	0xFDB
 33198                           fsr2h	equ	0xFDA
 33199                           fsr2l	equ	0xFD9
 33200                           status	equ	0xFD8
 33201                           
 33202 ;; *************** function __i2c_stop *****************
 33203 ;; Defined at:
 33204 ;;		line 83 in file "i2c.c"
 33205 ;; Parameters:    Size  Location     Type
 33206 ;;		None
 33207 ;; Auto vars:     Size  Location     Type
 33208 ;;		None
 33209 ;; Return value:  Size  Location     Type
 33210 ;;                  1    wreg      void 
 33211 ;; Registers used:
 33212 ;;		None
 33213 ;; Tracked objects:
 33214 ;;		On entry : 0/0
 33215 ;;		On exit  : 0/0
 33216 ;;		Unchanged: 0/0
 33217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33222 ;;Total ram usage:        0 bytes
 33223 ;; Hardware stack levels used:    1
 33224 ;; This function calls:
 33225 ;;		Nothing
 33226 ;; This function is called by:
 33227 ;;		__i2c_write
 33228 ;;		__i2c_read
 33229 ;;		_i2c_display_write_fixed
 33230 ;;		_i2c_display_write
 33231 ;; This function uses a non-reentrant model
 33232 ;;
 33233                           
 33234                           	psect	text162
 33235  00A29A                     __ptext162:
 33236                           	opt stack 0
 33237  00A29A                     __i2c_stop:
 33238                           	opt stack 27
 33239                           
 33240                           ;i2c.c: 85: SSP1CON2bits.PEN = 1;
 33241                           
 33242                           ;incstack = 0
 33243  00A29A  84C5               	bsf	4037,2,c	;volatile
 33244  00A29C  A4C5               	btfss	4037,2,c	;volatile
 33245  00A29E  0012               	return	
 33246  00A2A0  D7FD               	goto	l1165
 33247  00A2A2                     __end_of__i2c_stop:
 33248                           	opt stack 0
 33249                           tosu	equ	0xFFF
 33250                           tosh	equ	0xFFE
 33251                           tosl	equ	0xFFD
 33252                           pclath	equ	0xFFA
 33253                           tblptru	equ	0xFF8
 33254                           tblptrh	equ	0xFF7
 33255                           tblptrl	equ	0xFF6
 33256                           tablat	equ	0xFF5
 33257                           prodh	equ	0xFF4
 33258                           prodl	equ	0xFF3
 33259                           intcon	equ	0xFF2
 33260                           intcon2	equ	0xFF1
 33261                           intcon3	equ	0xFF0
 33262                           indf0	equ	0xFEF
 33263                           postinc0	equ	0xFEE
 33264                           fsr0h	equ	0xFEA
 33265                           fsr0l	equ	0xFE9
 33266                           wreg	equ	0xFE8
 33267                           indf1	equ	0xFE7
 33268                           postdec1	equ	0xFE5
 33269                           plusw1	equ	0xFE3
 33270                           fsr1h	equ	0xFE2
 33271                           fsr1l	equ	0xFE1
 33272                           indf2	equ	0xFDF
 33273                           postinc2	equ	0xFDE
 33274                           postdec2	equ	0xFDD
 33275                           plusw2	equ	0xFDB
 33276                           fsr2h	equ	0xFDA
 33277                           fsr2l	equ	0xFD9
 33278                           status	equ	0xFD8
 33279                           
 33280 ;; *************** function __i2c_start *****************
 33281 ;; Defined at:
 33282 ;;		line 62 in file "i2c.c"
 33283 ;; Parameters:    Size  Location     Type
 33284 ;;		None
 33285 ;; Auto vars:     Size  Location     Type
 33286 ;;		None
 33287 ;; Return value:  Size  Location     Type
 33288 ;;                  1    wreg      void 
 33289 ;; Registers used:
 33290 ;;		None
 33291 ;; Tracked objects:
 33292 ;;		On entry : 0/0
 33293 ;;		On exit  : 0/0
 33294 ;;		Unchanged: 0/0
 33295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33300 ;;Total ram usage:        0 bytes
 33301 ;; Hardware stack levels used:    1
 33302 ;; This function calls:
 33303 ;;		Nothing
 33304 ;; This function is called by:
 33305 ;;		__i2c_write
 33306 ;;		__i2c_read
 33307 ;;		_i2c_display_write_fixed
 33308 ;;		_i2c_display_write
 33309 ;; This function uses a non-reentrant model
 33310 ;;
 33311                           
 33312                           	psect	text163
 33313  00A2A2                     __ptext163:
 33314                           	opt stack 0
 33315  00A2A2                     __i2c_start:
 33316                           	opt stack 27
 33317                           
 33318                           ;i2c.c: 64: SSP1CON2bits.SEN=1;
 33319                           
 33320                           ;incstack = 0
 33321  00A2A2  80C5               	bsf	4037,0,c	;volatile
 33322  00A2A4  A0C5               	btfss	4037,0,c	;volatile
 33323  00A2A6  0012               	return	
 33324  00A2A8  D7FD               	goto	l1150
 33325  00A2AA                     __end_of__i2c_start:
 33326                           	opt stack 0
 33327                           tosu	equ	0xFFF
 33328                           tosh	equ	0xFFE
 33329                           tosl	equ	0xFFD
 33330                           pclath	equ	0xFFA
 33331                           tblptru	equ	0xFF8
 33332                           tblptrh	equ	0xFF7
 33333                           tblptrl	equ	0xFF6
 33334                           tablat	equ	0xFF5
 33335                           prodh	equ	0xFF4
 33336                           prodl	equ	0xFF3
 33337                           intcon	equ	0xFF2
 33338                           intcon2	equ	0xFF1
 33339                           intcon3	equ	0xFF0
 33340                           indf0	equ	0xFEF
 33341                           postinc0	equ	0xFEE
 33342                           fsr0h	equ	0xFEA
 33343                           fsr0l	equ	0xFE9
 33344                           wreg	equ	0xFE8
 33345                           indf1	equ	0xFE7
 33346                           postdec1	equ	0xFE5
 33347                           plusw1	equ	0xFE3
 33348                           fsr1h	equ	0xFE2
 33349                           fsr1l	equ	0xFE1
 33350                           indf2	equ	0xFDF
 33351                           postinc2	equ	0xFDE
 33352                           postdec2	equ	0xFDD
 33353                           plusw2	equ	0xFDB
 33354                           fsr2h	equ	0xFDA
 33355                           fsr2l	equ	0xFD9
 33356                           status	equ	0xFD8
 33357                           
 33358 ;; *************** function __i2c_send *****************
 33359 ;; Defined at:
 33360 ;;		line 69 in file "i2c.c"
 33361 ;; Parameters:    Size  Location     Type
 33362 ;;  dat             1    wreg     unsigned char 
 33363 ;; Auto vars:     Size  Location     Type
 33364 ;;  dat             1    0[COMRAM] unsigned char 
 33365 ;; Return value:  Size  Location     Type
 33366 ;;                  1    wreg      void 
 33367 ;; Registers used:
 33368 ;;		wreg
 33369 ;; Tracked objects:
 33370 ;;		On entry : 0/0
 33371 ;;		On exit  : 0/0
 33372 ;;		Unchanged: 0/0
 33373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33378 ;;Total ram usage:        1 bytes
 33379 ;; Hardware stack levels used:    1
 33380 ;; This function calls:
 33381 ;;		Nothing
 33382 ;; This function is called by:
 33383 ;;		__i2c_write
 33384 ;;		__i2c_read
 33385 ;;		_i2c_display_write_fixed
 33386 ;;		_i2c_display_write
 33387 ;; This function uses a non-reentrant model
 33388 ;;
 33389                           
 33390                           	psect	text164
 33391  00A2AA                     __ptext164:
 33392                           	opt stack 0
 33393  00A2AA                     __i2c_send:
 33394                           	opt stack 27
 33395                           
 33396                           ;incstack = 0
 33397                           ;__i2c_send@dat stored from wreg
 33398  00A2AA  6E01               	movwf	__i2c_send@dat,c
 33399                           
 33400                           ;i2c.c: 71: SSP1BUF = dat;
 33401  00A2AC  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 33402  00A2B0  0012               	return		;funcret
 33403  00A2B2                     __end_of__i2c_send:
 33404                           	opt stack 0
 33405                           tosu	equ	0xFFF
 33406                           tosh	equ	0xFFE
 33407                           tosl	equ	0xFFD
 33408                           pclath	equ	0xFFA
 33409                           tblptru	equ	0xFF8
 33410                           tblptrh	equ	0xFF7
 33411                           tblptrl	equ	0xFF6
 33412                           tablat	equ	0xFF5
 33413                           prodh	equ	0xFF4
 33414                           prodl	equ	0xFF3
 33415                           intcon	equ	0xFF2
 33416                           intcon2	equ	0xFF1
 33417                           intcon3	equ	0xFF0
 33418                           indf0	equ	0xFEF
 33419                           postinc0	equ	0xFEE
 33420                           fsr0h	equ	0xFEA
 33421                           fsr0l	equ	0xFE9
 33422                           wreg	equ	0xFE8
 33423                           indf1	equ	0xFE7
 33424                           postdec1	equ	0xFE5
 33425                           plusw1	equ	0xFE3
 33426                           fsr1h	equ	0xFE2
 33427                           fsr1l	equ	0xFE1
 33428                           indf2	equ	0xFDF
 33429                           postinc2	equ	0xFDE
 33430                           postdec2	equ	0xFDD
 33431                           plusw2	equ	0xFDB
 33432                           fsr2h	equ	0xFDA
 33433                           fsr2l	equ	0xFD9
 33434                           status	equ	0xFD8
 33435                           
 33436 ;; *************** function __parse_command_long *****************
 33437 ;; Defined at:
 33438 ;;		line 546 in file "api.c"
 33439 ;; Parameters:    Size  Location     Type
 33440 ;;  data            2   61[BANK0 ] PTR unsigned char 
 33441 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33442 ;;  out_buffer      2   63[BANK0 ] PTR unsigned char 
 33443 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 33444 ;;  out_idx_ptr     2   65[BANK0 ] PTR unsigned char 
 33445 ;;		 -> api_parse@out_idx(1), 
 33446 ;; Auto vars:     Size  Location     Type
 33447 ;;  length          1   67[BANK0 ] unsigned char 
 33448 ;; Return value:  Size  Location     Type
 33449 ;;                  1    wreg      unsigned char 
 33450 ;; Registers used:
 33451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33452 ;; Tracked objects:
 33453 ;;		On entry : 0/0
 33454 ;;		On exit  : 0/0
 33455 ;;		Unchanged: 0/0
 33456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33457 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33460 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33461 ;;Total ram usage:        7 bytes
 33462 ;; Hardware stack levels used:    1
 33463 ;; Hardware stack levels required when called:   10
 33464 ;; This function calls:
 33465 ;;		__parse_buffer_to_sector
 33466 ;;		__parse_file_append
 33467 ;;		__parse_file_copy
 33468 ;;		__parse_file_create
 33469 ;;		__parse_file_delete
 33470 ;;		__parse_file_modify
 33471 ;;		__parse_file_rename
 33472 ;;		__parse_file_resize
 33473 ;;		__parse_format_drive
 33474 ;;		__parse_sector_to_buffer
 33475 ;;		__parse_settings_i2c_frequency
 33476 ;;		__parse_settings_i2c_masterModeSlaveAddress
 33477 ;;		__parse_settings_i2c_mode
 33478 ;;		__parse_settings_i2c_slaveModeSlaveAddress
 33479 ;;		__parse_settings_spi_frequency
 33480 ;;		__parse_settings_spi_mode
 33481 ;;		__parse_settings_spi_polarity
 33482 ;;		__parse_write_buffer
 33483 ;; This function is called by:
 33484 ;;		_api_parse
 33485 ;; This function uses a non-reentrant model
 33486 ;;
 33487                           
 33488                           	psect	text165
 33489  001B02                     __ptext165:
 33490                           	opt stack 0
 33491  001B02                     __parse_command_long:
 33492                           	opt stack 19
 33493                           
 33494                           ;api.c: 548: uint8_t length = 65;
 33495                           
 33496                           ;incstack = 0
 33497  001B02  0E41               	movlw	65
 33498  001B04  0100               	movlb	0	; () banked
 33499  001B06  6FA3               	movwf	__parse_command_long@length& (0+255),b
 33500                           
 33501                           ;api.c: 550: switch(data[0])
 33502  001B08  D110               	goto	l2844
 33503  001B0A                     
 33504                           ; BSR set to: 0
 33505                           ;api.c: 553: length = _parse_file_resize(data, out_buffer, out_idx_ptr);
 33506                           
 33507                           ; BSR set to: 0
 33508  001B0A  C09D  F055         	movff	__parse_command_long@data,__parse_file_resize@data
 33509  001B0E  C09E  F056         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 33510  001B12  C09F  F057         	movff	__parse_command_long@out_buffer,__parse_file_resize@out_buffer
 33511  001B16  C0A0  F058         	movff	__parse_command_long@out_buffer+1,__parse_file_resize@out_buffer+1
 33512  001B1A  C0A1  F059         	movff	__parse_command_long@out_idx_ptr,__parse_file_resize@out_idx_ptr
 33513  001B1E  C0A2  F05A         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_resize@out_idx_ptr+1
 33514  001B22  ECEC  F016         	call	__parse_file_resize	;wreg free
 33515  001B26  D0FE               	goto	L51
 33516  001B28                     
 33517                           ; BSR set to: 0
 33518                           ;api.c: 557: length = _parse_file_delete(data, out_buffer, out_idx_ptr);
 33519                           
 33520                           ; BSR set to: 0
 33521  001B28  C09D  F050         	movff	__parse_command_long@data,__parse_file_delete@data
 33522  001B2C  C09E  F051         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33523  001B30  C09F  F052         	movff	__parse_command_long@out_buffer,__parse_file_delete@out_buffer
 33524  001B34  C0A0  F053         	movff	__parse_command_long@out_buffer+1,__parse_file_delete@out_buffer+1
 33525  001B38  C0A1  F054         	movff	__parse_command_long@out_idx_ptr,__parse_file_delete@out_idx_ptr
 33526  001B3C  C0A2  F055         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_delete@out_idx_ptr+1
 33527  001B40  EC19  F034         	call	__parse_file_delete	;wreg free
 33528  001B44  D0EF               	goto	L51
 33529  001B46                     
 33530                           ; BSR set to: 0
 33531                           ;api.c: 561: length = _parse_file_create(data, out_buffer, out_idx_ptr);
 33532                           
 33533                           ; BSR set to: 0
 33534  001B46  C09D  F059         	movff	__parse_command_long@data,__parse_file_create@data
 33535  001B4A  C09E  F05A         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33536  001B4E  C09F  F05B         	movff	__parse_command_long@out_buffer,__parse_file_create@out_buffer
 33537  001B52  C0A0  F05C         	movff	__parse_command_long@out_buffer+1,__parse_file_create@out_buffer+1
 33538  001B56  C0A1  F05D         	movff	__parse_command_long@out_idx_ptr,__parse_file_create@out_idx_ptr
 33539  001B5A  C0A2  F05E         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_create@out_idx_ptr+1
 33540  001B5E  EC1F  F024         	call	__parse_file_create	;wreg free
 33541  001B62  D0E0               	goto	L51
 33542  001B64                     
 33543                           ; BSR set to: 0
 33544                           ;api.c: 565: length = _parse_file_rename(data, out_buffer, out_idx_ptr);
 33545                           
 33546                           ; BSR set to: 0
 33547  001B64  C09D  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 33548  001B68  C09E  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33549  001B6C  C09F  F062         	movff	__parse_command_long@out_buffer,__parse_file_rename@out_buffer
 33550  001B70  C0A0  F063         	movff	__parse_command_long@out_buffer+1,__parse_file_rename@out_buffer+1
 33551  001B74  C0A1  F064         	movff	__parse_command_long@out_idx_ptr,__parse_file_rename@out_idx_ptr
 33552  001B78  C0A2  F065         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_rename@out_idx_ptr+1
 33553  001B7C  ECFC  F02E         	call	__parse_file_rename	;wreg free
 33554  001B80  D0D1               	goto	L51
 33555  001B82                     
 33556                           ; BSR set to: 0
 33557                           ;api.c: 569: length = _parse_file_append(data, out_buffer, out_idx_ptr);
 33558                           
 33559                           ; BSR set to: 0
 33560  001B82  C09D  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 33561  001B86  C09E  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33562  001B8A  C09F  F05C         	movff	__parse_command_long@out_buffer,__parse_file_append@out_buffer
 33563  001B8E  C0A0  F05D         	movff	__parse_command_long@out_buffer+1,__parse_file_append@out_buffer+1
 33564  001B92  C0A1  F05E         	movff	__parse_command_long@out_idx_ptr,__parse_file_append@out_idx_ptr
 33565  001B96  C0A2  F05F         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_append@out_idx_ptr+1
 33566  001B9A  ECBD  F022         	call	__parse_file_append	;wreg free
 33567  001B9E  D0C2               	goto	L51
 33568  001BA0                     
 33569                           ; BSR set to: 0
 33570                           ;api.c: 573: length = _parse_file_modify(data, out_buffer, out_idx_ptr);
 33571                           
 33572                           ; BSR set to: 0
 33573  001BA0  C09D  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 33574  001BA4  C09E  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33575  001BA8  C09F  F058         	movff	__parse_command_long@out_buffer,__parse_file_modify@out_buffer
 33576  001BAC  C0A0  F059         	movff	__parse_command_long@out_buffer+1,__parse_file_modify@out_buffer+1
 33577  001BB0  C0A1  F05A         	movff	__parse_command_long@out_idx_ptr,__parse_file_modify@out_idx_ptr
 33578  001BB4  C0A2  F05B         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_modify@out_idx_ptr+1
 33579  001BB8  EC14  F010         	call	__parse_file_modify	;wreg free
 33580  001BBC  D0B3               	goto	L51
 33581  001BBE                     
 33582                           ; BSR set to: 0
 33583                           ;api.c: 577: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 33584                           
 33585                           ; BSR set to: 0
 33586  001BBE  C09D  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 33587  001BC2  C09E  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 33588  001BC6  C09F  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 33589  001BCA  C0A0  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 33590  001BCE  C0A1  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 33591  001BD2  C0A2  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 33592  001BD6  EC09  F03E         	call	__parse_format_drive	;wreg free
 33593  001BDA  D0A4               	goto	L51
 33594  001BDC                     
 33595                           ; BSR set to: 0
 33596                           ;api.c: 581: length = _parse_sector_to_buffer(data, out_buffer, out_idx_ptr);
 33597                           
 33598                           ; BSR set to: 0
 33599  001BDC  C09D  F054         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 33600  001BE0  C09E  F055         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 33601  001BE4  C09F  F056         	movff	__parse_command_long@out_buffer,__parse_sector_to_buffer@out_buffer
 33602  001BE8  C0A0  F057         	movff	__parse_command_long@out_buffer+1,__parse_sector_to_buffer@out_buffer+1
 33603  001BEC  C0A1  F058         	movff	__parse_command_long@out_idx_ptr,__parse_sector_to_buffer@out_idx_ptr
 33604  001BF0  C0A2  F059         	movff	__parse_command_long@out_idx_ptr+1,__parse_sector_to_buffer@out_idx_ptr+1
 33605  001BF4  EC07  F022         	call	__parse_sector_to_buffer	;wreg free
 33606  001BF8  D095               	goto	L51
 33607  001BFA                     
 33608                           ; BSR set to: 0
 33609                           ;api.c: 585: length = _parse_buffer_to_sector(data, out_buffer, out_idx_ptr);
 33610                           
 33611                           ; BSR set to: 0
 33612  001BFA  C09D  F052         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 33613  001BFE  C09E  F053         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 33614  001C02  C09F  F054         	movff	__parse_command_long@out_buffer,__parse_buffer_to_sector@out_buffer
 33615  001C06  C0A0  F055         	movff	__parse_command_long@out_buffer+1,__parse_buffer_to_sector@out_buffer+1
 33616  001C0A  C0A1  F056         	movff	__parse_command_long@out_idx_ptr,__parse_buffer_to_sector@out_idx_ptr
 33617  001C0E  C0A2  F057         	movff	__parse_command_long@out_idx_ptr+1,__parse_buffer_to_sector@out_idx_ptr+1
 33618  001C12  EC6F  F023         	call	__parse_buffer_to_sector	;wreg free
 33619  001C16  D086               	goto	L51
 33620  001C18                     
 33621                           ; BSR set to: 0
 33622                           ;api.c: 589: length = _parse_write_buffer(data, out_buffer, out_idx_ptr);
 33623                           
 33624                           ; BSR set to: 0
 33625  001C18  C09D  F02B         	movff	__parse_command_long@data,__parse_write_buffer@data
 33626  001C1C  C09E  F02C         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 33627  001C20  C09F  F02D         	movff	__parse_command_long@out_buffer,__parse_write_buffer@out_buffer
 33628  001C24  C0A0  F02E         	movff	__parse_command_long@out_buffer+1,__parse_write_buffer@out_buffer+1
 33629  001C28  C0A1  F02F         	movff	__parse_command_long@out_idx_ptr,__parse_write_buffer@out_idx_ptr
 33630  001C2C  C0A2  F030         	movff	__parse_command_long@out_idx_ptr+1,__parse_write_buffer@out_idx_ptr+1
 33631  001C30  ECCA  F024         	call	__parse_write_buffer	;wreg free
 33632  001C34  D077               	goto	L51
 33633  001C36                     
 33634                           ; BSR set to: 0
 33635                           ;api.c: 593: length = _parse_file_copy(data, out_buffer, out_idx_ptr);
 33636                           
 33637                           ; BSR set to: 0
 33638  001C36  C09D  F094         	movff	__parse_command_long@data,__parse_file_copy@data
 33639  001C3A  C09E  F095         	movff	__parse_command_long@data+1,__parse_file_copy@data+1
 33640  001C3E  C09F  F096         	movff	__parse_command_long@out_buffer,__parse_file_copy@out_buffer
 33641  001C42  C0A0  F097         	movff	__parse_command_long@out_buffer+1,__parse_file_copy@out_buffer+1
 33642  001C46  C0A1  F098         	movff	__parse_command_long@out_idx_ptr,__parse_file_copy@out_idx_ptr
 33643  001C4A  C0A2  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_file_copy@out_idx_ptr+1
 33644  001C4E  EC7B  F02F         	call	__parse_file_copy	;wreg free
 33645  001C52  D068               	goto	L51
 33646  001C54                     
 33647                           ; BSR set to: 0
 33648                           ;api.c: 597: length = _parse_settings_spi_mode(data, out_buffer, out_idx_ptr);
 33649                           
 33650                           ; BSR set to: 0
 33651  001C54  C09D  F001         	movff	__parse_command_long@data,__parse_settings_spi_mode@data
 33652  001C58  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_spi_mode@data+1
 33653  001C5C  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_spi_mode@out_buffer
 33654  001C60  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_mode@out_buffer+1
 33655  001C64  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_mode@out_idx_ptr
 33656  001C68  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_mode@out_idx_ptr+1
 33657  001C6C  ECF4  F038         	call	__parse_settings_spi_mode	;wreg free
 33658  001C70  D059               	goto	L51
 33659  001C72                     
 33660                           ; BSR set to: 0
 33661                           ;api.c: 601: length = _parse_settings_spi_frequency(data, out_buffer, out_idx_ptr);
 33662                           
 33663                           ; BSR set to: 0
 33664  001C72  C09D  F001         	movff	__parse_command_long@data,__parse_settings_spi_frequency@data
 33665  001C76  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_spi_frequency@data+1
 33666  001C7A  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_spi_frequency@out_buffer
 33667  001C7E  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_frequency@out_buffer+1
 33668  001C82  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_frequency@out_idx_ptr
 33669  001C86  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_frequency@out_idx_ptr+1
 33670  001C8A  EC55  F039         	call	__parse_settings_spi_frequency	;wreg free
 33671  001C8E  D04A               	goto	L51
 33672  001C90                     
 33673                           ; BSR set to: 0
 33674                           ;api.c: 605: length = _parse_settings_spi_polarity(data, out_buffer, out_idx_ptr);
 33675                           
 33676                           ; BSR set to: 0
 33677  001C90  C09D  F001         	movff	__parse_command_long@data,__parse_settings_spi_polarity@data
 33678  001C94  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_spi_polarity@data+1
 33679  001C98  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_spi_polarity@out_buffer
 33680  001C9C  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_spi_polarity@out_buffer+1
 33681  001CA0  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_spi_polarity@out_idx_ptr
 33682  001CA4  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_spi_polarity@out_idx_ptr+1
 33683  001CA8  EC93  F038         	call	__parse_settings_spi_polarity	;wreg free
 33684  001CAC  D03B               	goto	L51
 33685  001CAE                     
 33686                           ; BSR set to: 0
 33687                           ;api.c: 609: length = _parse_settings_i2c_mode(data, out_buffer, out_idx_ptr);
 33688                           
 33689                           ; BSR set to: 0
 33690  001CAE  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_mode@data
 33691  001CB2  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_mode@data+1
 33692  001CB6  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_mode@out_buffer
 33693  001CBA  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_mode@out_buffer+1
 33694  001CBE  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_mode@out_idx_ptr
 33695  001CC2  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_mode@out_idx_ptr+1
 33696  001CC6  EC17  F03A         	call	__parse_settings_i2c_mode	;wreg free
 33697  001CCA  D02C               	goto	L51
 33698  001CCC                     
 33699                           ; BSR set to: 0
 33700                           ;api.c: 613: length = _parse_settings_i2c_frequency(data, out_buffer, out_idx_ptr);
 33701                           
 33702                           ; BSR set to: 0
 33703  001CCC  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_frequency@data
 33704  001CD0  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_frequency@data+1
 33705  001CD4  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_frequency@out_buffer
 33706  001CD8  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_frequency@out_buffer+1
 33707  001CDC  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_frequency@out_idx_ptr
 33708  001CE0  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_frequency@out_idx_ptr+1
 33709  001CE4  ECD9  F03A         	call	__parse_settings_i2c_frequency	;wreg free
 33710  001CE8  D01D               	goto	L51
 33711  001CEA                     
 33712                           ; BSR set to: 0
 33713                           ;api.c: 617: length = _parse_settings_i2c_slaveModeSlaveAddress(data, out_buffer, out_id
      +                          x_ptr);
 33714                           
 33715                           ; BSR set to: 0
 33716  001CEA  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_slaveModeSlaveAddress@data
 33717  001CEE  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_slaveModeSlaveAddress@data+1
 33718  001CF2  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_slaveModeSlaveAddress@out_bu
      +                          ffer
 33719  001CF6  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_slaveModeSlaveAddress@out_
      +                          buffer+1
 33720  001CFA  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_slaveModeSlaveAddress@out_i
      +                          dx_ptr
 33721  001CFE  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_slaveModeSlaveAddress@out
      +                          _idx_ptr+1
 33722  001D02  ECB6  F039         	call	__parse_settings_i2c_slaveModeSlaveAddress	;wreg free
 33723  001D06  D00E               	goto	L51
 33724  001D08                     
 33725                           ; BSR set to: 0
 33726                           ;api.c: 621: length = _parse_settings_i2c_masterModeSlaveAddress(data, out_buffer, out_i
      +                          dx_ptr);
 33727                           
 33728                           ; BSR set to: 0
 33729  001D08  C09D  F001         	movff	__parse_command_long@data,__parse_settings_i2c_masterModeSlaveAddress@data
 33730  001D0C  C09E  F002         	movff	__parse_command_long@data+1,__parse_settings_i2c_masterModeSlaveAddress@data+1
 33731  001D10  C09F  F003         	movff	__parse_command_long@out_buffer,__parse_settings_i2c_masterModeSlaveAddress@out_b
      +                          uffer
 33732  001D14  C0A0  F004         	movff	__parse_command_long@out_buffer+1,__parse_settings_i2c_masterModeSlaveAddress@out
      +                          _buffer+1
 33733  001D18  C0A1  F005         	movff	__parse_command_long@out_idx_ptr,__parse_settings_i2c_masterModeSlaveAddress@out_
      +                          idx_ptr
 33734  001D1C  C0A2  F006         	movff	__parse_command_long@out_idx_ptr+1,__parse_settings_i2c_masterModeSlaveAddress@ou
      +                          t_idx_ptr+1
 33735  001D20  EC78  F03A         	call	__parse_settings_i2c_masterModeSlaveAddress	;wreg free
 33736  001D24                     L51:
 33737  001D24  0100               	movlb	0	; () banked
 33738  001D26  6FA3               	movwf	__parse_command_long@length& (0+255),b
 33739                           
 33740                           ; BSR set to: 0
 33741                           ;api.c: 623: }
 33742                           
 33743                           ;api.c: 622: break;
 33744  001D28  D03B               	goto	l2846
 33745  001D2A                     l2844:
 33746                           
 33747                           ; BSR set to: 0
 33748                           
 33749                           ; BSR set to: 0
 33750  001D2A  C09D  FFD9         	movff	__parse_command_long@data,fsr2l
 33751  001D2E  C09E  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33752  001D32  50DF               	movf	indf2,w,c
 33753                           
 33754                           ; Switch size 1, requested type "space"
 33755                           ; Number of cases is 18, Range of values is 80 to 118
 33756                           ; switch strategies available:
 33757                           ; Name         Instructions Cycles
 33758                           ; simple_byte           55    28 (average)
 33759                           ;	Chosen strategy is simple_byte
 33760  001D34  0A50               	xorlw	80	; case 80
 33761  001D36  B4D8               	btfsc	status,2,c
 33762  001D38  D6E8               	goto	l2845
 33763  001D3A  0A01               	xorlw	1	; case 81
 33764  001D3C  B4D8               	btfsc	status,2,c
 33765  001D3E  D6F4               	goto	l2847
 33766  001D40  0A03               	xorlw	3	; case 82
 33767  001D42  B4D8               	btfsc	status,2,c
 33768  001D44  D700               	goto	l2848
 33769  001D46  0A01               	xorlw	1	; case 83
 33770  001D48  B4D8               	btfsc	status,2,c
 33771  001D4A  D70C               	goto	l2849
 33772  001D4C  0A07               	xorlw	7	; case 84
 33773  001D4E  B4D8               	btfsc	status,2,c
 33774  001D50  D718               	goto	l2850
 33775  001D52  0A01               	xorlw	1	; case 85
 33776  001D54  B4D8               	btfsc	status,2,c
 33777  001D56  D724               	goto	l2851
 33778  001D58  0A03               	xorlw	3	; case 86
 33779  001D5A  B4D8               	btfsc	status,2,c
 33780  001D5C  D730               	goto	l2852
 33781  001D5E  0A01               	xorlw	1	; case 87
 33782  001D60  B4D8               	btfsc	status,2,c
 33783  001D62  D73C               	goto	l2853
 33784  001D64  0A0F               	xorlw	15	; case 88
 33785  001D66  B4D8               	btfsc	status,2,c
 33786  001D68  D748               	goto	l2854
 33787  001D6A  0A01               	xorlw	1	; case 89
 33788  001D6C  B4D8               	btfsc	status,2,c
 33789  001D6E  D754               	goto	l2855
 33790  001D70  0A03               	xorlw	3	; case 90
 33791  001D72  B4D8               	btfsc	status,2,c
 33792  001D74  D760               	goto	l2856
 33793  001D76  0A2A               	xorlw	42	; case 112
 33794  001D78  B4D8               	btfsc	status,2,c
 33795  001D7A  D76C               	goto	l2857
 33796  001D7C  0A01               	xorlw	1	; case 113
 33797  001D7E  B4D8               	btfsc	status,2,c
 33798  001D80  D778               	goto	l2858
 33799  001D82  0A03               	xorlw	3	; case 114
 33800  001D84  B4D8               	btfsc	status,2,c
 33801  001D86  D784               	goto	l2859
 33802  001D88  0A01               	xorlw	1	; case 115
 33803  001D8A  B4D8               	btfsc	status,2,c
 33804  001D8C  D790               	goto	l2860
 33805  001D8E  0A07               	xorlw	7	; case 116
 33806  001D90  B4D8               	btfsc	status,2,c
 33807  001D92  D79C               	goto	l2861
 33808  001D94  0A01               	xorlw	1	; case 117
 33809  001D96  B4D8               	btfsc	status,2,c
 33810  001D98  D7A8               	goto	l2862
 33811  001D9A  0A03               	xorlw	3	; case 118
 33812  001D9C  B4D8               	btfsc	status,2,c
 33813  001D9E  D7B4               	goto	l2863
 33814  001DA0                     l2846:
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;api.c: 625: return length;
 33818                           
 33819                           ; BSR set to: 0
 33820  001DA0  51A3               	movf	__parse_command_long@length& (0+255),w,b
 33821  001DA2  0012               	return	
 33822  001DA4                     __end_of__parse_command_long:
 33823                           	opt stack 0
 33824                           tosu	equ	0xFFF
 33825                           tosh	equ	0xFFE
 33826                           tosl	equ	0xFFD
 33827                           pclath	equ	0xFFA
 33828                           tblptru	equ	0xFF8
 33829                           tblptrh	equ	0xFF7
 33830                           tblptrl	equ	0xFF6
 33831                           tablat	equ	0xFF5
 33832                           prodh	equ	0xFF4
 33833                           prodl	equ	0xFF3
 33834                           intcon	equ	0xFF2
 33835                           intcon2	equ	0xFF1
 33836                           intcon3	equ	0xFF0
 33837                           indf0	equ	0xFEF
 33838                           postinc0	equ	0xFEE
 33839                           fsr0h	equ	0xFEA
 33840                           fsr0l	equ	0xFE9
 33841                           wreg	equ	0xFE8
 33842                           indf1	equ	0xFE7
 33843                           postdec1	equ	0xFE5
 33844                           plusw1	equ	0xFE3
 33845                           fsr1h	equ	0xFE2
 33846                           fsr1l	equ	0xFE1
 33847                           indf2	equ	0xFDF
 33848                           postinc2	equ	0xFDE
 33849                           postdec2	equ	0xFDD
 33850                           plusw2	equ	0xFDB
 33851                           fsr2h	equ	0xFDA
 33852                           fsr2l	equ	0xFD9
 33853                           status	equ	0xFD8
 33854                           
 33855 ;; *************** function __parse_write_buffer *****************
 33856 ;; Defined at:
 33857 ;;		line 940 in file "api.c"
 33858 ;; Parameters:    Size  Location     Type
 33859 ;;  data            2   42[COMRAM] PTR unsigned char 
 33860 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33861 ;;  out_buffer      2   44[COMRAM] PTR unsigned char 
 33862 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 33863 ;;  out_idx_ptr     2   46[COMRAM] PTR unsigned char 
 33864 ;;		 -> api_parse@out_idx(1), 
 33865 ;; Auto vars:     Size  Location     Type
 33866 ;;  start_byte      2   51[COMRAM] unsigned int 
 33867 ;;  number_of_by    2   49[COMRAM] unsigned int 
 33868 ;; Return value:  Size  Location     Type
 33869 ;;                  1    wreg      unsigned char 
 33870 ;; Registers used:
 33871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33872 ;; Tracked objects:
 33873 ;;		On entry : 0/0
 33874 ;;		On exit  : 0/0
 33875 ;;		Unchanged: 0/0
 33876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33877 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33878 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33880 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33881 ;;Total ram usage:       11 bytes
 33882 ;; Hardware stack levels used:    1
 33883 ;; Hardware stack levels required when called:    6
 33884 ;; This function calls:
 33885 ;;		_fat_write_to_buffer
 33886 ;; This function is called by:
 33887 ;;		__parse_command_long
 33888 ;; This function uses a non-reentrant model
 33889 ;;
 33890                           
 33891                           	psect	text166
 33892  004994                     __ptext166:
 33893                           	opt stack 0
 33894  004994                     __parse_write_buffer:
 33895                           	opt stack 22
 33896                           
 33897                           ;api.c: 942: uint16_t start_byte;;api.c: 943: uint16_t number_of_bytes;;api.c: 946: if((
      +                          data[0]!=COMMAND_WRITE_BUFFER) || (data[4]!=0xE2) || (data[5]!=0x30))
 33898                           
 33899                           ; BSR set to: 0
 33900                           ;incstack = 0
 33901  004994  C02B  FFD9         	movff	__parse_write_buffer@data,fsr2l
 33902  004998  C02C  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 33903  00499C  0E59               	movlw	89
 33904  00499E  18DE               	xorwf	postinc2,w,c
 33905  0049A0  A4D8               	btfss	status,2,c
 33906  0049A2  D014               	goto	u12140
 33907  0049A4  EE20 F004          	lfsr	2,4
 33908  0049A8  502B               	movf	__parse_write_buffer@data,w,c
 33909  0049AA  26D9               	addwf	fsr2l,f,c
 33910  0049AC  502C               	movf	__parse_write_buffer@data+1,w,c
 33911  0049AE  22DA               	addwfc	fsr2h,f,c
 33912  0049B0  0EE2               	movlw	226
 33913  0049B2  18DE               	xorwf	postinc2,w,c
 33914  0049B4  A4D8               	btfss	status,2,c
 33915  0049B6  D00A               	goto	u12140
 33916  0049B8  EE20 F005          	lfsr	2,5
 33917  0049BC  502B               	movf	__parse_write_buffer@data,w,c
 33918  0049BE  26D9               	addwf	fsr2l,f,c
 33919  0049C0  502C               	movf	__parse_write_buffer@data+1,w,c
 33920  0049C2  22DA               	addwfc	fsr2h,f,c
 33921  0049C4  0E30               	movlw	48
 33922  0049C6  18DE               	xorwf	postinc2,w,c
 33923  0049C8  B4D8               	btfsc	status,2,c
 33924  0049CA  D002               	goto	l2930
 33925  0049CC                     u12140:
 33926                           
 33927                           ;api.c: 947: {;api.c: 949: return 65;
 33928  0049CC  0E41               	movlw	65
 33929  0049CE  0012               	return	
 33930  0049D0                     l2930:
 33931                           
 33932                           ;api.c: 950: };api.c: 953: start_byte = data[1];
 33933  0049D0  EE20 F001          	lfsr	2,1
 33934  0049D4  502B               	movf	__parse_write_buffer@data,w,c
 33935  0049D6  26D9               	addwf	fsr2l,f,c
 33936  0049D8  502C               	movf	__parse_write_buffer@data+1,w,c
 33937  0049DA  22DA               	addwfc	fsr2h,f,c
 33938  0049DC  50DF               	movf	indf2,w,c
 33939  0049DE  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33940  0049E0  5031               	movf	??__parse_write_buffer,w,c
 33941  0049E2  6E34               	movwf	__parse_write_buffer@start_byte,c
 33942  0049E4  6A35               	clrf	__parse_write_buffer@start_byte+1,c
 33943                           
 33944                           ;api.c: 954: start_byte <<= 8;
 33945  0049E6  5034               	movf	__parse_write_buffer@start_byte,w,c
 33946  0049E8  6E35               	movwf	__parse_write_buffer@start_byte+1,c
 33947  0049EA  6A34               	clrf	__parse_write_buffer@start_byte,c
 33948                           
 33949                           ;api.c: 955: start_byte |= data[2];
 33950  0049EC  EE20 F002          	lfsr	2,2
 33951  0049F0  502B               	movf	__parse_write_buffer@data,w,c
 33952  0049F2  26D9               	addwf	fsr2l,f,c
 33953  0049F4  502C               	movf	__parse_write_buffer@data+1,w,c
 33954  0049F6  22DA               	addwfc	fsr2h,f,c
 33955  0049F8  50DF               	movf	indf2,w,c
 33956  0049FA  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33957  0049FC  5031               	movf	??__parse_write_buffer,w,c
 33958  0049FE  1234               	iorwf	__parse_write_buffer@start_byte,f,c
 33959                           
 33960                           ;api.c: 958: number_of_bytes = data[3];
 33961  004A00  EE20 F003          	lfsr	2,3
 33962  004A04  502B               	movf	__parse_write_buffer@data,w,c
 33963  004A06  26D9               	addwf	fsr2l,f,c
 33964  004A08  502C               	movf	__parse_write_buffer@data+1,w,c
 33965  004A0A  22DA               	addwfc	fsr2h,f,c
 33966  004A0C  50DF               	movf	indf2,w,c
 33967  004A0E  6E31               	movwf	??__parse_write_buffer& (0+255),c
 33968  004A10  5031               	movf	??__parse_write_buffer,w,c
 33969  004A12  6E32               	movwf	__parse_write_buffer@number_of_bytes,c
 33970  004A14  6A33               	clrf	__parse_write_buffer@number_of_bytes+1,c
 33971                           
 33972                           ;api.c: 961: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 33973  004A16  C034  F025         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 33974  004A1A  C035  F026         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 33975  004A1E  C032  F027         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 33976  004A22  C033  F028         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 33977  004A26  0E06               	movlw	6
 33978  004A28  242B               	addwf	__parse_write_buffer@data,w,c
 33979  004A2A  6E29               	movwf	fat_write_to_buffer@data,c
 33980  004A2C  0E00               	movlw	0
 33981  004A2E  202C               	addwfc	__parse_write_buffer@data+1,w,c
 33982  004A30  6E2A               	movwf	fat_write_to_buffer@data+1,c
 33983  004A32  EC07  F050         	call	_fat_write_to_buffer	;wreg free
 33984                           
 33985                           ;api.c: 964: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<61))
 33986  004A36  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33987  004A3A  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33988  004A3E  50DF               	movf	indf2,w,c
 33989  004A40  B4D8               	btfsc	status,2,c
 33990  004A42  D04F               	goto	l2934
 33991  004A44  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33992  004A48  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 33993  004A4C  0E3D               	movlw	61
 33994  004A4E  60DF               	cpfslt	indf2,c
 33995  004A50  D048               	goto	l2934
 33996                           
 33997                           ;api.c: 965: {;api.c: 966: out_buffer[(*out_idx_ptr)++] = COMMAND_WRITE_BUFFER;
 33998  004A52  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 33999  004A56  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 34000  004A5A  CFDF F031          	movff	indf2,??__parse_write_buffer
 34001  004A5E  0E01               	movlw	1
 34002  004A60  26DF               	addwf	indf2,f,c
 34003  004A62  5031               	movf	??__parse_write_buffer,w,c
 34004  004A64  0D01               	mullw	1
 34005  004A66  50F3               	movf	prodl,w,c
 34006  004A68  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 34007  004A6A  6ED9               	movwf	fsr2l,c
 34008  004A6C  50F4               	movf	prodh,w,c
 34009  004A6E  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 34010  004A70  6EDA               	movwf	fsr2h,c
 34011  004A72  0E59               	movlw	89
 34012  004A74  6EDF               	movwf	indf2,c
 34013                           
 34014                           ;api.c: 967: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((start_byte)>>8)&0xFF));
 34015  004A76  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 34016  004A7A  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 34017  004A7E  CFDF F031          	movff	indf2,??__parse_write_buffer
 34018  004A82  0E01               	movlw	1
 34019  004A84  26DF               	addwf	indf2,f,c
 34020  004A86  5031               	movf	??__parse_write_buffer,w,c
 34021  004A88  0D01               	mullw	1
 34022  004A8A  50F3               	movf	prodl,w,c
 34023  004A8C  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 34024  004A8E  6ED9               	movwf	fsr2l,c
 34025  004A90  50F4               	movf	prodh,w,c
 34026  004A92  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 34027  004A94  6EDA               	movwf	fsr2h,c
 34028  004A96  5035               	movf	__parse_write_buffer@start_byte+1,w,c
 34029  004A98  6EDF               	movwf	indf2,c
 34030                           
 34031                           ;api.c: 968: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((start_byte)&0xFF));
 34032  004A9A  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 34033  004A9E  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 34034  004AA2  CFDF F031          	movff	indf2,??__parse_write_buffer
 34035  004AA6  0E01               	movlw	1
 34036  004AA8  26DF               	addwf	indf2,f,c
 34037  004AAA  5031               	movf	??__parse_write_buffer,w,c
 34038  004AAC  0D01               	mullw	1
 34039  004AAE  50F3               	movf	prodl,w,c
 34040  004AB0  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 34041  004AB2  6ED9               	movwf	fsr2l,c
 34042  004AB4  50F4               	movf	prodh,w,c
 34043  004AB6  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 34044  004AB8  6EDA               	movwf	fsr2h,c
 34045  004ABA  C034  FFDF         	movff	__parse_write_buffer@start_byte,indf2
 34046                           
 34047                           ;api.c: 969: out_buffer[(*out_idx_ptr)++] = number_of_bytes;
 34048  004ABE  C02F  FFD9         	movff	__parse_write_buffer@out_idx_ptr,fsr2l
 34049  004AC2  C030  FFDA         	movff	__parse_write_buffer@out_idx_ptr+1,fsr2h
 34050  004AC6  CFDF F031          	movff	indf2,??__parse_write_buffer
 34051  004ACA  0E01               	movlw	1
 34052  004ACC  26DF               	addwf	indf2,f,c
 34053  004ACE  5031               	movf	??__parse_write_buffer,w,c
 34054  004AD0  0D01               	mullw	1
 34055  004AD2  50F3               	movf	prodl,w,c
 34056  004AD4  242D               	addwf	__parse_write_buffer@out_buffer,w,c
 34057  004AD6  6ED9               	movwf	fsr2l,c
 34058  004AD8  50F4               	movf	prodh,w,c
 34059  004ADA  202E               	addwfc	__parse_write_buffer@out_buffer+1,w,c
 34060  004ADC  6EDA               	movwf	fsr2h,c
 34061  004ADE  C032  FFDF         	movff	__parse_write_buffer@number_of_bytes,indf2
 34062  004AE2                     l2934:
 34063                           
 34064                           ;api.c: 970: };api.c: 973: return 6 + number_of_bytes;
 34065  004AE2  5032               	movf	__parse_write_buffer@number_of_bytes,w,c
 34066  004AE4  0F06               	addlw	6
 34067  004AE6  0012               	return	
 34068  004AE8                     __end_of__parse_write_buffer:
 34069                           	opt stack 0
 34070                           tosu	equ	0xFFF
 34071                           tosh	equ	0xFFE
 34072                           tosl	equ	0xFFD
 34073                           pclath	equ	0xFFA
 34074                           tblptru	equ	0xFF8
 34075                           tblptrh	equ	0xFF7
 34076                           tblptrl	equ	0xFF6
 34077                           tablat	equ	0xFF5
 34078                           prodh	equ	0xFF4
 34079                           prodl	equ	0xFF3
 34080                           intcon	equ	0xFF2
 34081                           intcon2	equ	0xFF1
 34082                           intcon3	equ	0xFF0
 34083                           indf0	equ	0xFEF
 34084                           postinc0	equ	0xFEE
 34085                           fsr0h	equ	0xFEA
 34086                           fsr0l	equ	0xFE9
 34087                           wreg	equ	0xFE8
 34088                           indf1	equ	0xFE7
 34089                           postdec1	equ	0xFE5
 34090                           plusw1	equ	0xFE3
 34091                           fsr1h	equ	0xFE2
 34092                           fsr1l	equ	0xFE1
 34093                           indf2	equ	0xFDF
 34094                           postinc2	equ	0xFDE
 34095                           postdec2	equ	0xFDD
 34096                           plusw2	equ	0xFDB
 34097                           fsr2h	equ	0xFDA
 34098                           fsr2l	equ	0xFD9
 34099                           status	equ	0xFD8
 34100                           
 34101 ;; *************** function _fat_write_to_buffer *****************
 34102 ;; Defined at:
 34103 ;;		line 1503 in file "fat16.c"
 34104 ;; Parameters:    Size  Location     Type
 34105 ;;  start           2   36[COMRAM] unsigned int 
 34106 ;;  length          2   38[COMRAM] unsigned int 
 34107 ;;  data            2   40[COMRAM] PTR unsigned char 
 34108 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34109 ;; Auto vars:     Size  Location     Type
 34110 ;;		None
 34111 ;; Return value:  Size  Location     Type
 34112 ;;                  1    wreg      void 
 34113 ;; Registers used:
 34114 ;;		wreg, status,2, status,0, cstack
 34115 ;; Tracked objects:
 34116 ;;		On entry : 0/0
 34117 ;;		On exit  : 0/0
 34118 ;;		Unchanged: 0/0
 34119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34124 ;;Total ram usage:        6 bytes
 34125 ;; Hardware stack levels used:    1
 34126 ;; Hardware stack levels required when called:    5
 34127 ;; This function calls:
 34128 ;;		_flash_write_to_buffer
 34129 ;; This function is called by:
 34130 ;;		__parse_write_buffer
 34131 ;; This function uses a non-reentrant model
 34132 ;;
 34133                           
 34134                           	psect	text167
 34135  00A00E                     __ptext167:
 34136                           	opt stack 0
 34137  00A00E                     _fat_write_to_buffer:
 34138                           	opt stack 22
 34139                           
 34140                           ;fat16.c: 1505: flash_write_to_buffer(start, length, data);
 34141                           
 34142                           ;incstack = 0
 34143  00A00E  C025  F01F         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 34144  00A012  C026  F020         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 34145  00A016  C027  F021         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 34146  00A01A  C028  F022         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 34147  00A01E  C029  F023         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 34148  00A022  C02A  F024         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 34149  00A026  EC4C  F04E         	call	_flash_write_to_buffer	;wreg free
 34150  00A02A  0012               	return		;funcret
 34151  00A02C                     __end_of_fat_write_to_buffer:
 34152                           	opt stack 0
 34153                           tosu	equ	0xFFF
 34154                           tosh	equ	0xFFE
 34155                           tosl	equ	0xFFD
 34156                           pclath	equ	0xFFA
 34157                           tblptru	equ	0xFF8
 34158                           tblptrh	equ	0xFF7
 34159                           tblptrl	equ	0xFF6
 34160                           tablat	equ	0xFF5
 34161                           prodh	equ	0xFF4
 34162                           prodl	equ	0xFF3
 34163                           intcon	equ	0xFF2
 34164                           intcon2	equ	0xFF1
 34165                           intcon3	equ	0xFF0
 34166                           indf0	equ	0xFEF
 34167                           postinc0	equ	0xFEE
 34168                           fsr0h	equ	0xFEA
 34169                           fsr0l	equ	0xFE9
 34170                           wreg	equ	0xFE8
 34171                           indf1	equ	0xFE7
 34172                           postdec1	equ	0xFE5
 34173                           plusw1	equ	0xFE3
 34174                           fsr1h	equ	0xFE2
 34175                           fsr1l	equ	0xFE1
 34176                           indf2	equ	0xFDF
 34177                           postinc2	equ	0xFDE
 34178                           postdec2	equ	0xFDD
 34179                           plusw2	equ	0xFDB
 34180                           fsr2h	equ	0xFDA
 34181                           fsr2l	equ	0xFD9
 34182                           status	equ	0xFD8
 34183                           
 34184 ;; *************** function _flash_write_to_buffer *****************
 34185 ;; Defined at:
 34186 ;;		line 557 in file "flash.c"
 34187 ;; Parameters:    Size  Location     Type
 34188 ;;  start           2   30[COMRAM] unsigned int 
 34189 ;;  length          2   32[COMRAM] unsigned int 
 34190 ;;  data            2   34[COMRAM] PTR unsigned char 
 34191 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34192 ;; Auto vars:     Size  Location     Type
 34193 ;;		None
 34194 ;; Return value:  Size  Location     Type
 34195 ;;                  1    wreg      void 
 34196 ;; Registers used:
 34197 ;;		wreg, status,2, status,0, cstack
 34198 ;; Tracked objects:
 34199 ;;		On entry : 0/0
 34200 ;;		On exit  : 0/0
 34201 ;;		Unchanged: 0/0
 34202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34203 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34207 ;;Total ram usage:        6 bytes
 34208 ;; Hardware stack levels used:    1
 34209 ;; Hardware stack levels required when called:    4
 34210 ;; This function calls:
 34211 ;;		__flash_write_to_buffer
 34212 ;;		_spi_set_configuration
 34213 ;; This function is called by:
 34214 ;;		_fat_write_to_buffer
 34215 ;; This function uses a non-reentrant model
 34216 ;;
 34217                           
 34218                           	psect	text168
 34219  009C98                     __ptext168:
 34220                           	opt stack 0
 34221  009C98                     _flash_write_to_buffer:
 34222                           	opt stack 22
 34223                           
 34224                           ;flash.c: 560: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 34225                           
 34226                           ;incstack = 0
 34227  009C98  0E00               	movlw	0
 34228  009C9A  ECEF  F02A         	call	_spi_set_configuration
 34229                           
 34230                           ;flash.c: 562: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 34231  009C9E  C01F  F014         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 34232  009CA2  C020  F015         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 34233  009CA6  C023  F016         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 34234  009CAA  C024  F017         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 34235  009CAE  C021  F018         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 34236  009CB2  C022  F019         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 34237  009CB6  0E01               	movlw	1
 34238  009CB8  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 34239  009CBA  ECEC  F04A         	call	__flash_write_to_buffer	;wreg free
 34240                           
 34241                           ;flash.c: 565: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 34242  009CBE  0E01               	movlw	1
 34243  009CC0  ECEF  F02A         	call	_spi_set_configuration
 34244  009CC4  0012               	return		;funcret
 34245  009CC6                     __end_of_flash_write_to_buffer:
 34246                           	opt stack 0
 34247                           tosu	equ	0xFFF
 34248                           tosh	equ	0xFFE
 34249                           tosl	equ	0xFFD
 34250                           pclath	equ	0xFFA
 34251                           tblptru	equ	0xFF8
 34252                           tblptrh	equ	0xFF7
 34253                           tblptrl	equ	0xFF6
 34254                           tablat	equ	0xFF5
 34255                           prodh	equ	0xFF4
 34256                           prodl	equ	0xFF3
 34257                           intcon	equ	0xFF2
 34258                           intcon2	equ	0xFF1
 34259                           intcon3	equ	0xFF0
 34260                           indf0	equ	0xFEF
 34261                           postinc0	equ	0xFEE
 34262                           fsr0h	equ	0xFEA
 34263                           fsr0l	equ	0xFE9
 34264                           wreg	equ	0xFE8
 34265                           indf1	equ	0xFE7
 34266                           postdec1	equ	0xFE5
 34267                           plusw1	equ	0xFE3
 34268                           fsr1h	equ	0xFE2
 34269                           fsr1l	equ	0xFE1
 34270                           indf2	equ	0xFDF
 34271                           postinc2	equ	0xFDE
 34272                           postdec2	equ	0xFDD
 34273                           plusw2	equ	0xFDB
 34274                           fsr2h	equ	0xFDA
 34275                           fsr2l	equ	0xFD9
 34276                           status	equ	0xFD8
 34277                           
 34278 ;; *************** function __parse_settings_spi_polarity *****************
 34279 ;; Defined at:
 34280 ;;		line 1050 in file "api.c"
 34281 ;; Parameters:    Size  Location     Type
 34282 ;;  data            2    0[COMRAM] PTR unsigned char 
 34283 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34284 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34285 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34286 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34287 ;;		 -> api_parse@out_idx(1), 
 34288 ;; Auto vars:     Size  Location     Type
 34289 ;;		None
 34290 ;; Return value:  Size  Location     Type
 34291 ;;                  1    wreg      unsigned char 
 34292 ;; Registers used:
 34293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34294 ;; Tracked objects:
 34295 ;;		On entry : 0/0
 34296 ;;		On exit  : 0/0
 34297 ;;		Unchanged: 0/0
 34298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34299 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34302 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34303 ;;Total ram usage:        7 bytes
 34304 ;; Hardware stack levels used:    1
 34305 ;; This function calls:
 34306 ;;		Nothing
 34307 ;; This function is called by:
 34308 ;;		__parse_command_long
 34309 ;; This function uses a non-reentrant model
 34310 ;;
 34311                           
 34312                           	psect	text169
 34313  007126                     __ptext169:
 34314                           	opt stack 0
 34315  007126                     __parse_settings_spi_polarity:
 34316                           	opt stack 28
 34317                           
 34318                           ;api.c: 1054: if((data[0]!=COMMAND_SET_SPI_POLARITY) || (data[2]!=0x0D) || (data[3]!=0xB
      +                          B))
 34319                           
 34320                           ;incstack = 0
 34321  007126  C001  FFD9         	movff	__parse_settings_spi_polarity@data,fsr2l
 34322  00712A  C002  FFDA         	movff	__parse_settings_spi_polarity@data+1,fsr2h
 34323  00712E  0E72               	movlw	114
 34324  007130  18DE               	xorwf	postinc2,w,c
 34325  007132  A4D8               	btfss	status,2,c
 34326  007134  D014               	goto	u12340
 34327  007136  EE20 F002          	lfsr	2,2
 34328  00713A  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34329  00713C  26D9               	addwf	fsr2l,f,c
 34330  00713E  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34331  007140  22DA               	addwfc	fsr2h,f,c
 34332  007142  0E0D               	movlw	13
 34333  007144  18DE               	xorwf	postinc2,w,c
 34334  007146  A4D8               	btfss	status,2,c
 34335  007148  D00A               	goto	u12340
 34336  00714A  EE20 F003          	lfsr	2,3
 34337  00714E  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34338  007150  26D9               	addwf	fsr2l,f,c
 34339  007152  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34340  007154  22DA               	addwfc	fsr2h,f,c
 34341  007156  0EBB               	movlw	187
 34342  007158  18DE               	xorwf	postinc2,w,c
 34343  00715A  B4D8               	btfsc	status,2,c
 34344  00715C  D002               	goto	l2958
 34345  00715E                     u12340:
 34346                           
 34347                           ;api.c: 1055: {;api.c: 1056: return 4;
 34348  00715E  0E04               	movlw	4
 34349  007160  0012               	return	
 34350  007162                     l2958:
 34351                           
 34352                           ;api.c: 1057: };api.c: 1060: os.communicationSettings.spiFrequency = (spiFrequency_t) da
      +                          ta[1];
 34353  007162  EE20 F001          	lfsr	2,1
 34354  007166  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34355  007168  26D9               	addwf	fsr2l,f,c
 34356  00716A  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34357  00716C  22DA               	addwfc	fsr2h,f,c
 34358  00716E  50DF               	movf	indf2,w,c
 34359  007170  0101               	movlb	1	; () banked
 34360  007172  6F38               	movwf	(_os+7)& (0+255),b
 34361                           
 34362                           ; BSR set to: 1
 34363                           ;api.c: 1063: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34364  007174  C005  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 34365  007178  C006  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 34366  00717C  50DF               	movf	indf2,w,c
 34367  00717E  B4D8               	btfsc	status,2,c
 34368  007180  D031               	goto	l2962
 34369                           
 34370                           ; BSR set to: 1
 34371  007182  C005  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 34372  007186  C006  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 34373  00718A  0E3F               	movlw	63
 34374  00718C  60DF               	cpfslt	indf2,c
 34375  00718E  D02A               	goto	l2962
 34376                           
 34377                           ; BSR set to: 1
 34378                           ;api.c: 1064: {;api.c: 1065: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_POLARITY;
 34379  007190  C005  FFD9         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr2l
 34380  007194  C006  FFDA         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr2h
 34381  007198  CFDF F007          	movff	indf2,??__parse_settings_spi_polarity
 34382  00719C  0E01               	movlw	1
 34383  00719E  26DF               	addwf	indf2,f,c
 34384  0071A0  5007               	movf	??__parse_settings_spi_polarity,w,c
 34385  0071A2  0D01               	mullw	1
 34386  0071A4  50F3               	movf	prodl,w,c
 34387  0071A6  2403               	addwf	__parse_settings_spi_polarity@out_buffer,w,c
 34388  0071A8  6ED9               	movwf	fsr2l,c
 34389  0071AA  50F4               	movf	prodh,w,c
 34390  0071AC  2004               	addwfc	__parse_settings_spi_polarity@out_buffer+1,w,c
 34391  0071AE  6EDA               	movwf	fsr2h,c
 34392  0071B0  0E72               	movlw	114
 34393  0071B2  6EDF               	movwf	indf2,c
 34394                           
 34395                           ; BSR set to: 1
 34396                           ;api.c: 1066: out_buffer[(*out_idx_ptr)++] = data[1];
 34397  0071B4  EE20 F001          	lfsr	2,1
 34398  0071B8  5001               	movf	__parse_settings_spi_polarity@data,w,c
 34399  0071BA  26D9               	addwf	fsr2l,f,c
 34400  0071BC  5002               	movf	__parse_settings_spi_polarity@data+1,w,c
 34401  0071BE  22DA               	addwfc	fsr2h,f,c
 34402  0071C0  C005  FFE1         	movff	__parse_settings_spi_polarity@out_idx_ptr,fsr1l
 34403  0071C4  C006  FFE2         	movff	__parse_settings_spi_polarity@out_idx_ptr+1,fsr1h
 34404  0071C8  CFE7 F007          	movff	indf1,??__parse_settings_spi_polarity
 34405  0071CC  0E01               	movlw	1
 34406  0071CE  26E7               	addwf	indf1,f,c
 34407  0071D0  5007               	movf	??__parse_settings_spi_polarity,w,c
 34408  0071D2  0D01               	mullw	1
 34409  0071D4  50F3               	movf	prodl,w,c
 34410  0071D6  2403               	addwf	__parse_settings_spi_polarity@out_buffer,w,c
 34411  0071D8  6EE1               	movwf	fsr1l,c
 34412  0071DA  50F4               	movf	prodh,w,c
 34413  0071DC  2004               	addwfc	__parse_settings_spi_polarity@out_buffer+1,w,c
 34414  0071DE  6EE2               	movwf	fsr1h,c
 34415  0071E0  CFDF FFE7          	movff	indf2,indf1
 34416  0071E4                     l2962:
 34417                           
 34418                           ; BSR set to: 1
 34419                           ;api.c: 1067: };api.c: 1069: return 4;
 34420                           
 34421                           ; BSR set to: 1
 34422  0071E4  0E04               	movlw	4
 34423  0071E6  0012               	return	
 34424  0071E8                     __end_of__parse_settings_spi_polarity:
 34425                           	opt stack 0
 34426                           tosu	equ	0xFFF
 34427                           tosh	equ	0xFFE
 34428                           tosl	equ	0xFFD
 34429                           pclath	equ	0xFFA
 34430                           tblptru	equ	0xFF8
 34431                           tblptrh	equ	0xFF7
 34432                           tblptrl	equ	0xFF6
 34433                           tablat	equ	0xFF5
 34434                           prodh	equ	0xFF4
 34435                           prodl	equ	0xFF3
 34436                           intcon	equ	0xFF2
 34437                           intcon2	equ	0xFF1
 34438                           intcon3	equ	0xFF0
 34439                           indf0	equ	0xFEF
 34440                           postinc0	equ	0xFEE
 34441                           fsr0h	equ	0xFEA
 34442                           fsr0l	equ	0xFE9
 34443                           wreg	equ	0xFE8
 34444                           indf1	equ	0xFE7
 34445                           postdec1	equ	0xFE5
 34446                           plusw1	equ	0xFE3
 34447                           fsr1h	equ	0xFE2
 34448                           fsr1l	equ	0xFE1
 34449                           indf2	equ	0xFDF
 34450                           postinc2	equ	0xFDE
 34451                           postdec2	equ	0xFDD
 34452                           plusw2	equ	0xFDB
 34453                           fsr2h	equ	0xFDA
 34454                           fsr2l	equ	0xFD9
 34455                           status	equ	0xFD8
 34456                           
 34457 ;; *************** function __parse_settings_spi_mode *****************
 34458 ;; Defined at:
 34459 ;;		line 1005 in file "api.c"
 34460 ;; Parameters:    Size  Location     Type
 34461 ;;  data            2    0[COMRAM] PTR unsigned char 
 34462 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34463 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34464 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34465 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34466 ;;		 -> api_parse@out_idx(1), 
 34467 ;; Auto vars:     Size  Location     Type
 34468 ;;		None
 34469 ;; Return value:  Size  Location     Type
 34470 ;;                  1    wreg      unsigned char 
 34471 ;; Registers used:
 34472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34473 ;; Tracked objects:
 34474 ;;		On entry : 0/0
 34475 ;;		On exit  : 0/0
 34476 ;;		Unchanged: 0/0
 34477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34478 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34482 ;;Total ram usage:        7 bytes
 34483 ;; Hardware stack levels used:    1
 34484 ;; This function calls:
 34485 ;;		Nothing
 34486 ;; This function is called by:
 34487 ;;		__parse_command_long
 34488 ;; This function uses a non-reentrant model
 34489 ;;
 34490                           
 34491                           	psect	text170
 34492  0071E8                     __ptext170:
 34493                           	opt stack 0
 34494  0071E8                     __parse_settings_spi_mode:
 34495                           	opt stack 28
 34496                           
 34497                           ;api.c: 1009: if((data[0]!=COMMAND_SET_SPI_MODE) || (data[2]!=0x88) || (data[3]!=0xE2))
 34498                           
 34499                           ;incstack = 0
 34500  0071E8  C001  FFD9         	movff	__parse_settings_spi_mode@data,fsr2l
 34501  0071EC  C002  FFDA         	movff	__parse_settings_spi_mode@data+1,fsr2h
 34502  0071F0  0E70               	movlw	112
 34503  0071F2  18DE               	xorwf	postinc2,w,c
 34504  0071F4  A4D8               	btfss	status,2,c
 34505  0071F6  D014               	goto	u12240
 34506  0071F8  EE20 F002          	lfsr	2,2
 34507  0071FC  5001               	movf	__parse_settings_spi_mode@data,w,c
 34508  0071FE  26D9               	addwf	fsr2l,f,c
 34509  007200  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34510  007202  22DA               	addwfc	fsr2h,f,c
 34511  007204  0E88               	movlw	136
 34512  007206  18DE               	xorwf	postinc2,w,c
 34513  007208  A4D8               	btfss	status,2,c
 34514  00720A  D00A               	goto	u12240
 34515  00720C  EE20 F003          	lfsr	2,3
 34516  007210  5001               	movf	__parse_settings_spi_mode@data,w,c
 34517  007212  26D9               	addwf	fsr2l,f,c
 34518  007214  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34519  007216  22DA               	addwfc	fsr2h,f,c
 34520  007218  0EE2               	movlw	226
 34521  00721A  18DE               	xorwf	postinc2,w,c
 34522  00721C  B4D8               	btfsc	status,2,c
 34523  00721E  D002               	goto	l2944
 34524  007220                     u12240:
 34525                           
 34526                           ;api.c: 1010: {;api.c: 1011: return 4;
 34527  007220  0E04               	movlw	4
 34528  007222  0012               	return	
 34529  007224                     l2944:
 34530                           
 34531                           ;api.c: 1012: };api.c: 1015: os.communicationSettings.spiMode = (externalMode_t) data[1]
      +                          ;
 34532  007224  EE20 F001          	lfsr	2,1
 34533  007228  5001               	movf	__parse_settings_spi_mode@data,w,c
 34534  00722A  26D9               	addwf	fsr2l,f,c
 34535  00722C  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34536  00722E  22DA               	addwfc	fsr2h,f,c
 34537  007230  50DF               	movf	indf2,w,c
 34538  007232  0101               	movlb	1	; () banked
 34539  007234  6F37               	movwf	(_os+6)& (0+255),b
 34540                           
 34541                           ; BSR set to: 1
 34542                           ;api.c: 1018: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34543  007236  C005  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 34544  00723A  C006  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 34545  00723E  50DF               	movf	indf2,w,c
 34546  007240  B4D8               	btfsc	status,2,c
 34547  007242  D031               	goto	l2948
 34548                           
 34549                           ; BSR set to: 1
 34550  007244  C005  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 34551  007248  C006  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 34552  00724C  0E3F               	movlw	63
 34553  00724E  60DF               	cpfslt	indf2,c
 34554  007250  D02A               	goto	l2948
 34555                           
 34556                           ; BSR set to: 1
 34557                           ;api.c: 1019: {;api.c: 1020: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_MODE;
 34558  007252  C005  FFD9         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr2l
 34559  007256  C006  FFDA         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr2h
 34560  00725A  CFDF F007          	movff	indf2,??__parse_settings_spi_mode
 34561  00725E  0E01               	movlw	1
 34562  007260  26DF               	addwf	indf2,f,c
 34563  007262  5007               	movf	??__parse_settings_spi_mode,w,c
 34564  007264  0D01               	mullw	1
 34565  007266  50F3               	movf	prodl,w,c
 34566  007268  2403               	addwf	__parse_settings_spi_mode@out_buffer,w,c
 34567  00726A  6ED9               	movwf	fsr2l,c
 34568  00726C  50F4               	movf	prodh,w,c
 34569  00726E  2004               	addwfc	__parse_settings_spi_mode@out_buffer+1,w,c
 34570  007270  6EDA               	movwf	fsr2h,c
 34571  007272  0E70               	movlw	112
 34572  007274  6EDF               	movwf	indf2,c
 34573                           
 34574                           ; BSR set to: 1
 34575                           ;api.c: 1021: out_buffer[(*out_idx_ptr)++] = data[1];
 34576  007276  EE20 F001          	lfsr	2,1
 34577  00727A  5001               	movf	__parse_settings_spi_mode@data,w,c
 34578  00727C  26D9               	addwf	fsr2l,f,c
 34579  00727E  5002               	movf	__parse_settings_spi_mode@data+1,w,c
 34580  007280  22DA               	addwfc	fsr2h,f,c
 34581  007282  C005  FFE1         	movff	__parse_settings_spi_mode@out_idx_ptr,fsr1l
 34582  007286  C006  FFE2         	movff	__parse_settings_spi_mode@out_idx_ptr+1,fsr1h
 34583  00728A  CFE7 F007          	movff	indf1,??__parse_settings_spi_mode
 34584  00728E  0E01               	movlw	1
 34585  007290  26E7               	addwf	indf1,f,c
 34586  007292  5007               	movf	??__parse_settings_spi_mode,w,c
 34587  007294  0D01               	mullw	1
 34588  007296  50F3               	movf	prodl,w,c
 34589  007298  2403               	addwf	__parse_settings_spi_mode@out_buffer,w,c
 34590  00729A  6EE1               	movwf	fsr1l,c
 34591  00729C  50F4               	movf	prodh,w,c
 34592  00729E  2004               	addwfc	__parse_settings_spi_mode@out_buffer+1,w,c
 34593  0072A0  6EE2               	movwf	fsr1h,c
 34594  0072A2  CFDF FFE7          	movff	indf2,indf1
 34595  0072A6                     l2948:
 34596                           
 34597                           ; BSR set to: 1
 34598                           ;api.c: 1022: };api.c: 1024: return 4;
 34599                           
 34600                           ; BSR set to: 1
 34601  0072A6  0E04               	movlw	4
 34602  0072A8  0012               	return	
 34603  0072AA                     __end_of__parse_settings_spi_mode:
 34604                           	opt stack 0
 34605                           tosu	equ	0xFFF
 34606                           tosh	equ	0xFFE
 34607                           tosl	equ	0xFFD
 34608                           pclath	equ	0xFFA
 34609                           tblptru	equ	0xFF8
 34610                           tblptrh	equ	0xFF7
 34611                           tblptrl	equ	0xFF6
 34612                           tablat	equ	0xFF5
 34613                           prodh	equ	0xFF4
 34614                           prodl	equ	0xFF3
 34615                           intcon	equ	0xFF2
 34616                           intcon2	equ	0xFF1
 34617                           intcon3	equ	0xFF0
 34618                           indf0	equ	0xFEF
 34619                           postinc0	equ	0xFEE
 34620                           fsr0h	equ	0xFEA
 34621                           fsr0l	equ	0xFE9
 34622                           wreg	equ	0xFE8
 34623                           indf1	equ	0xFE7
 34624                           postdec1	equ	0xFE5
 34625                           plusw1	equ	0xFE3
 34626                           fsr1h	equ	0xFE2
 34627                           fsr1l	equ	0xFE1
 34628                           indf2	equ	0xFDF
 34629                           postinc2	equ	0xFDE
 34630                           postdec2	equ	0xFDD
 34631                           plusw2	equ	0xFDB
 34632                           fsr2h	equ	0xFDA
 34633                           fsr2l	equ	0xFD9
 34634                           status	equ	0xFD8
 34635                           
 34636 ;; *************** function __parse_settings_spi_frequency *****************
 34637 ;; Defined at:
 34638 ;;		line 1027 in file "api.c"
 34639 ;; Parameters:    Size  Location     Type
 34640 ;;  data            2    0[COMRAM] PTR unsigned char 
 34641 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34642 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34643 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34644 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34645 ;;		 -> api_parse@out_idx(1), 
 34646 ;; Auto vars:     Size  Location     Type
 34647 ;;		None
 34648 ;; Return value:  Size  Location     Type
 34649 ;;                  1    wreg      unsigned char 
 34650 ;; Registers used:
 34651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34652 ;; Tracked objects:
 34653 ;;		On entry : 0/0
 34654 ;;		On exit  : 0/0
 34655 ;;		Unchanged: 0/0
 34656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34657 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34660 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34661 ;;Total ram usage:        7 bytes
 34662 ;; Hardware stack levels used:    1
 34663 ;; This function calls:
 34664 ;;		Nothing
 34665 ;; This function is called by:
 34666 ;;		__parse_command_long
 34667 ;; This function uses a non-reentrant model
 34668 ;;
 34669                           
 34670                           	psect	text171
 34671  0072AA                     __ptext171:
 34672                           	opt stack 0
 34673  0072AA                     __parse_settings_spi_frequency:
 34674                           	opt stack 28
 34675                           
 34676                           ;api.c: 1032: if((data[0]!=COMMAND_SET_SPI_FREQUENCY) || (data[2]!=0xAE) || (data[3]!=0x
      +                          A8))
 34677                           
 34678                           ;incstack = 0
 34679  0072AA  C001  FFD9         	movff	__parse_settings_spi_frequency@data,fsr2l
 34680  0072AE  C002  FFDA         	movff	__parse_settings_spi_frequency@data+1,fsr2h
 34681  0072B2  0E71               	movlw	113
 34682  0072B4  18DE               	xorwf	postinc2,w,c
 34683  0072B6  A4D8               	btfss	status,2,c
 34684  0072B8  D014               	goto	u12290
 34685  0072BA  EE20 F002          	lfsr	2,2
 34686  0072BE  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34687  0072C0  26D9               	addwf	fsr2l,f,c
 34688  0072C2  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34689  0072C4  22DA               	addwfc	fsr2h,f,c
 34690  0072C6  0EAE               	movlw	174
 34691  0072C8  18DE               	xorwf	postinc2,w,c
 34692  0072CA  A4D8               	btfss	status,2,c
 34693  0072CC  D00A               	goto	u12290
 34694  0072CE  EE20 F003          	lfsr	2,3
 34695  0072D2  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34696  0072D4  26D9               	addwf	fsr2l,f,c
 34697  0072D6  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34698  0072D8  22DA               	addwfc	fsr2h,f,c
 34699  0072DA  0EA8               	movlw	168
 34700  0072DC  18DE               	xorwf	postinc2,w,c
 34701  0072DE  B4D8               	btfsc	status,2,c
 34702  0072E0  D002               	goto	l2951
 34703  0072E2                     u12290:
 34704                           
 34705                           ;api.c: 1033: {;api.c: 1034: return 4;
 34706  0072E2  0E04               	movlw	4
 34707  0072E4  0012               	return	
 34708  0072E6                     l2951:
 34709                           
 34710                           ;api.c: 1035: };api.c: 1038: os.communicationSettings.spiFrequency = (spiFrequency_t) da
      +                          ta[1];
 34711  0072E6  EE20 F001          	lfsr	2,1
 34712  0072EA  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34713  0072EC  26D9               	addwf	fsr2l,f,c
 34714  0072EE  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34715  0072F0  22DA               	addwfc	fsr2h,f,c
 34716  0072F2  50DF               	movf	indf2,w,c
 34717  0072F4  0101               	movlb	1	; () banked
 34718  0072F6  6F38               	movwf	(_os+7)& (0+255),b
 34719                           
 34720                           ; BSR set to: 1
 34721                           ;api.c: 1041: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34722  0072F8  C005  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 34723  0072FC  C006  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 34724  007300  50DF               	movf	indf2,w,c
 34725  007302  B4D8               	btfsc	status,2,c
 34726  007304  D031               	goto	l2955
 34727                           
 34728                           ; BSR set to: 1
 34729  007306  C005  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 34730  00730A  C006  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 34731  00730E  0E3F               	movlw	63
 34732  007310  60DF               	cpfslt	indf2,c
 34733  007312  D02A               	goto	l2955
 34734                           
 34735                           ; BSR set to: 1
 34736                           ;api.c: 1042: {;api.c: 1043: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_SPI_FREQUENCY;
 34737  007314  C005  FFD9         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr2l
 34738  007318  C006  FFDA         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr2h
 34739  00731C  CFDF F007          	movff	indf2,??__parse_settings_spi_frequency
 34740  007320  0E01               	movlw	1
 34741  007322  26DF               	addwf	indf2,f,c
 34742  007324  5007               	movf	??__parse_settings_spi_frequency,w,c
 34743  007326  0D01               	mullw	1
 34744  007328  50F3               	movf	prodl,w,c
 34745  00732A  2403               	addwf	__parse_settings_spi_frequency@out_buffer,w,c
 34746  00732C  6ED9               	movwf	fsr2l,c
 34747  00732E  50F4               	movf	prodh,w,c
 34748  007330  2004               	addwfc	__parse_settings_spi_frequency@out_buffer+1,w,c
 34749  007332  6EDA               	movwf	fsr2h,c
 34750  007334  0E71               	movlw	113
 34751  007336  6EDF               	movwf	indf2,c
 34752                           
 34753                           ; BSR set to: 1
 34754                           ;api.c: 1044: out_buffer[(*out_idx_ptr)++] = data[1];
 34755  007338  EE20 F001          	lfsr	2,1
 34756  00733C  5001               	movf	__parse_settings_spi_frequency@data,w,c
 34757  00733E  26D9               	addwf	fsr2l,f,c
 34758  007340  5002               	movf	__parse_settings_spi_frequency@data+1,w,c
 34759  007342  22DA               	addwfc	fsr2h,f,c
 34760  007344  C005  FFE1         	movff	__parse_settings_spi_frequency@out_idx_ptr,fsr1l
 34761  007348  C006  FFE2         	movff	__parse_settings_spi_frequency@out_idx_ptr+1,fsr1h
 34762  00734C  CFE7 F007          	movff	indf1,??__parse_settings_spi_frequency
 34763  007350  0E01               	movlw	1
 34764  007352  26E7               	addwf	indf1,f,c
 34765  007354  5007               	movf	??__parse_settings_spi_frequency,w,c
 34766  007356  0D01               	mullw	1
 34767  007358  50F3               	movf	prodl,w,c
 34768  00735A  2403               	addwf	__parse_settings_spi_frequency@out_buffer,w,c
 34769  00735C  6EE1               	movwf	fsr1l,c
 34770  00735E  50F4               	movf	prodh,w,c
 34771  007360  2004               	addwfc	__parse_settings_spi_frequency@out_buffer+1,w,c
 34772  007362  6EE2               	movwf	fsr1h,c
 34773  007364  CFDF FFE7          	movff	indf2,indf1
 34774  007368                     l2955:
 34775                           
 34776                           ; BSR set to: 1
 34777                           ;api.c: 1045: };api.c: 1047: return 4;
 34778                           
 34779                           ; BSR set to: 1
 34780  007368  0E04               	movlw	4
 34781  00736A  0012               	return	
 34782  00736C                     __end_of__parse_settings_spi_frequency:
 34783                           	opt stack 0
 34784                           tosu	equ	0xFFF
 34785                           tosh	equ	0xFFE
 34786                           tosl	equ	0xFFD
 34787                           pclath	equ	0xFFA
 34788                           tblptru	equ	0xFF8
 34789                           tblptrh	equ	0xFF7
 34790                           tblptrl	equ	0xFF6
 34791                           tablat	equ	0xFF5
 34792                           prodh	equ	0xFF4
 34793                           prodl	equ	0xFF3
 34794                           intcon	equ	0xFF2
 34795                           intcon2	equ	0xFF1
 34796                           intcon3	equ	0xFF0
 34797                           indf0	equ	0xFEF
 34798                           postinc0	equ	0xFEE
 34799                           fsr0h	equ	0xFEA
 34800                           fsr0l	equ	0xFE9
 34801                           wreg	equ	0xFE8
 34802                           indf1	equ	0xFE7
 34803                           postdec1	equ	0xFE5
 34804                           plusw1	equ	0xFE3
 34805                           fsr1h	equ	0xFE2
 34806                           fsr1l	equ	0xFE1
 34807                           indf2	equ	0xFDF
 34808                           postinc2	equ	0xFDE
 34809                           postdec2	equ	0xFDD
 34810                           plusw2	equ	0xFDB
 34811                           fsr2h	equ	0xFDA
 34812                           fsr2l	equ	0xFD9
 34813                           status	equ	0xFD8
 34814                           
 34815 ;; *************** function __parse_settings_i2c_slaveModeSlaveAddress *****************
 34816 ;; Defined at:
 34817 ;;		line 1116 in file "api.c"
 34818 ;; Parameters:    Size  Location     Type
 34819 ;;  data            2    0[COMRAM] PTR unsigned char 
 34820 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 34821 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 34822 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 34823 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 34824 ;;		 -> api_parse@out_idx(1), 
 34825 ;; Auto vars:     Size  Location     Type
 34826 ;;		None
 34827 ;; Return value:  Size  Location     Type
 34828 ;;                  1    wreg      unsigned char 
 34829 ;; Registers used:
 34830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34831 ;; Tracked objects:
 34832 ;;		On entry : 0/0
 34833 ;;		On exit  : 0/0
 34834 ;;		Unchanged: 0/0
 34835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34836 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34839 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34840 ;;Total ram usage:        7 bytes
 34841 ;; Hardware stack levels used:    1
 34842 ;; This function calls:
 34843 ;;		Nothing
 34844 ;; This function is called by:
 34845 ;;		__parse_command_long
 34846 ;; This function uses a non-reentrant model
 34847 ;;
 34848                           
 34849                           	psect	text172
 34850  00736C                     __ptext172:
 34851                           	opt stack 0
 34852  00736C                     __parse_settings_i2c_slaveModeSlaveAddress:
 34853                           	opt stack 28
 34854                           
 34855                           ;api.c: 1120: if((data[0]!=COMMAND_SET_I2C_SLAVE_MODE_ADDRESS) || (data[2]!=0x88) || (da
      +                          ta[3]!=0xE2))
 34856                           
 34857                           ;incstack = 0
 34858  00736C  C001  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@data,fsr2l
 34859  007370  C002  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@data+1,fsr2h
 34860  007374  0E75               	movlw	117
 34861  007376  18DE               	xorwf	postinc2,w,c
 34862  007378  A4D8               	btfss	status,2,c
 34863  00737A  D014               	goto	u12490
 34864  00737C  EE20 F002          	lfsr	2,2
 34865  007380  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34866  007382  26D9               	addwf	fsr2l,f,c
 34867  007384  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34868  007386  22DA               	addwfc	fsr2h,f,c
 34869  007388  0E88               	movlw	136
 34870  00738A  18DE               	xorwf	postinc2,w,c
 34871  00738C  A4D8               	btfss	status,2,c
 34872  00738E  D00A               	goto	u12490
 34873  007390  EE20 F003          	lfsr	2,3
 34874  007394  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34875  007396  26D9               	addwf	fsr2l,f,c
 34876  007398  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34877  00739A  22DA               	addwfc	fsr2h,f,c
 34878  00739C  0EE2               	movlw	226
 34879  00739E  18DE               	xorwf	postinc2,w,c
 34880  0073A0  B4D8               	btfsc	status,2,c
 34881  0073A2  D002               	goto	l2979
 34882  0073A4                     u12490:
 34883                           
 34884                           ;api.c: 1121: {;api.c: 1122: return 4;
 34885  0073A4  0E04               	movlw	4
 34886  0073A6  0012               	return	
 34887  0073A8                     l2979:
 34888                           
 34889                           ;api.c: 1123: };api.c: 1126: os.communicationSettings.i2cSlaveModeSlaveAddress = data[1]
      +                          ;
 34890  0073A8  EE20 F001          	lfsr	2,1
 34891  0073AC  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34892  0073AE  26D9               	addwf	fsr2l,f,c
 34893  0073B0  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34894  0073B2  22DA               	addwfc	fsr2h,f,c
 34895  0073B4  50DF               	movf	indf2,w,c
 34896  0073B6  0101               	movlb	1	; () banked
 34897  0073B8  6F3C               	movwf	(_os+11)& (0+255),b
 34898                           
 34899                           ; BSR set to: 1
 34900                           ;api.c: 1129: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 34901  0073BA  C005  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 34902  0073BE  C006  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 34903  0073C2  50DF               	movf	indf2,w,c
 34904  0073C4  B4D8               	btfsc	status,2,c
 34905  0073C6  D031               	goto	l2983
 34906                           
 34907                           ; BSR set to: 1
 34908  0073C8  C005  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 34909  0073CC  C006  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 34910  0073D0  0E3F               	movlw	63
 34911  0073D2  60DF               	cpfslt	indf2,c
 34912  0073D4  D02A               	goto	l2983
 34913                           
 34914                           ; BSR set to: 1
 34915                           ;api.c: 1130: {;api.c: 1131: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_SLAVE_MODE_A
      +                          DDRESS;
 34916  0073D6  C005  FFD9         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr2l
 34917  0073DA  C006  FFDA         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr2h
 34918  0073DE  CFDF F007          	movff	indf2,??__parse_settings_i2c_slaveModeSlaveAddress
 34919  0073E2  0E01               	movlw	1
 34920  0073E4  26DF               	addwf	indf2,f,c
 34921  0073E6  5007               	movf	??__parse_settings_i2c_slaveModeSlaveAddress,w,c
 34922  0073E8  0D01               	mullw	1
 34923  0073EA  50F3               	movf	prodl,w,c
 34924  0073EC  2403               	addwf	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer,w,c
 34925  0073EE  6ED9               	movwf	fsr2l,c
 34926  0073F0  50F4               	movf	prodh,w,c
 34927  0073F2  2004               	addwfc	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer+1,w,c
 34928  0073F4  6EDA               	movwf	fsr2h,c
 34929  0073F6  0E75               	movlw	117
 34930  0073F8  6EDF               	movwf	indf2,c
 34931                           
 34932                           ; BSR set to: 1
 34933                           ;api.c: 1132: out_buffer[(*out_idx_ptr)++] = data[1];
 34934  0073FA  EE20 F001          	lfsr	2,1
 34935  0073FE  5001               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data,w,c
 34936  007400  26D9               	addwf	fsr2l,f,c
 34937  007402  5002               	movf	__parse_settings_i2c_slaveModeSlaveAddress@data+1,w,c
 34938  007404  22DA               	addwfc	fsr2h,f,c
 34939  007406  C005  FFE1         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr,fsr1l
 34940  00740A  C006  FFE2         	movff	__parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr+1,fsr1h
 34941  00740E  CFE7 F007          	movff	indf1,??__parse_settings_i2c_slaveModeSlaveAddress
 34942  007412  0E01               	movlw	1
 34943  007414  26E7               	addwf	indf1,f,c
 34944  007416  5007               	movf	??__parse_settings_i2c_slaveModeSlaveAddress,w,c
 34945  007418  0D01               	mullw	1
 34946  00741A  50F3               	movf	prodl,w,c
 34947  00741C  2403               	addwf	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer,w,c
 34948  00741E  6EE1               	movwf	fsr1l,c
 34949  007420  50F4               	movf	prodh,w,c
 34950  007422  2004               	addwfc	__parse_settings_i2c_slaveModeSlaveAddress@out_buffer+1,w,c
 34951  007424  6EE2               	movwf	fsr1h,c
 34952  007426  CFDF FFE7          	movff	indf2,indf1
 34953  00742A                     l2983:
 34954                           
 34955                           ; BSR set to: 1
 34956                           ;api.c: 1133: };api.c: 1135: return 4;
 34957                           
 34958                           ; BSR set to: 1
 34959  00742A  0E04               	movlw	4
 34960  00742C  0012               	return	
 34961  00742E                     __end_of__parse_settings_i2c_slaveModeSlaveAddress:
 34962                           	opt stack 0
 34963                           tosu	equ	0xFFF
 34964                           tosh	equ	0xFFE
 34965                           tosl	equ	0xFFD
 34966                           pclath	equ	0xFFA
 34967                           tblptru	equ	0xFF8
 34968                           tblptrh	equ	0xFF7
 34969                           tblptrl	equ	0xFF6
 34970                           tablat	equ	0xFF5
 34971                           prodh	equ	0xFF4
 34972                           prodl	equ	0xFF3
 34973                           intcon	equ	0xFF2
 34974                           intcon2	equ	0xFF1
 34975                           intcon3	equ	0xFF0
 34976                           indf0	equ	0xFEF
 34977                           postinc0	equ	0xFEE
 34978                           fsr0h	equ	0xFEA
 34979                           fsr0l	equ	0xFE9
 34980                           wreg	equ	0xFE8
 34981                           indf1	equ	0xFE7
 34982                           postdec1	equ	0xFE5
 34983                           plusw1	equ	0xFE3
 34984                           fsr1h	equ	0xFE2
 34985                           fsr1l	equ	0xFE1
 34986                           indf2	equ	0xFDF
 34987                           postinc2	equ	0xFDE
 34988                           postdec2	equ	0xFDD
 34989                           plusw2	equ	0xFDB
 34990                           fsr2h	equ	0xFDA
 34991                           fsr2l	equ	0xFD9
 34992                           status	equ	0xFD8
 34993                           
 34994 ;; *************** function __parse_settings_i2c_mode *****************
 34995 ;; Defined at:
 34996 ;;		line 1072 in file "api.c"
 34997 ;; Parameters:    Size  Location     Type
 34998 ;;  data            2    0[COMRAM] PTR unsigned char 
 34999 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35000 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 35001 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35002 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 35003 ;;		 -> api_parse@out_idx(1), 
 35004 ;; Auto vars:     Size  Location     Type
 35005 ;;		None
 35006 ;; Return value:  Size  Location     Type
 35007 ;;                  1    wreg      unsigned char 
 35008 ;; Registers used:
 35009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35010 ;; Tracked objects:
 35011 ;;		On entry : 0/0
 35012 ;;		On exit  : 0/0
 35013 ;;		Unchanged: 0/0
 35014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35015 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35018 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35019 ;;Total ram usage:        7 bytes
 35020 ;; Hardware stack levels used:    1
 35021 ;; This function calls:
 35022 ;;		Nothing
 35023 ;; This function is called by:
 35024 ;;		__parse_command_long
 35025 ;; This function uses a non-reentrant model
 35026 ;;
 35027                           
 35028                           	psect	text173
 35029  00742E                     __ptext173:
 35030                           	opt stack 0
 35031  00742E                     __parse_settings_i2c_mode:
 35032                           	opt stack 28
 35033                           
 35034                           ;api.c: 1076: if((data[0]!=COMMAND_SET_I2C_MODE) || (data[2]!=0xB6) || (data[3]!=0xB9))
 35035                           
 35036                           ;incstack = 0
 35037  00742E  C001  FFD9         	movff	__parse_settings_i2c_mode@data,fsr2l
 35038  007432  C002  FFDA         	movff	__parse_settings_i2c_mode@data+1,fsr2h
 35039  007436  0E73               	movlw	115
 35040  007438  18DE               	xorwf	postinc2,w,c
 35041  00743A  A4D8               	btfss	status,2,c
 35042  00743C  D014               	goto	u12390
 35043  00743E  EE20 F002          	lfsr	2,2
 35044  007442  5001               	movf	__parse_settings_i2c_mode@data,w,c
 35045  007444  26D9               	addwf	fsr2l,f,c
 35046  007446  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 35047  007448  22DA               	addwfc	fsr2h,f,c
 35048  00744A  0EB6               	movlw	182
 35049  00744C  18DE               	xorwf	postinc2,w,c
 35050  00744E  A4D8               	btfss	status,2,c
 35051  007450  D00A               	goto	u12390
 35052  007452  EE20 F003          	lfsr	2,3
 35053  007456  5001               	movf	__parse_settings_i2c_mode@data,w,c
 35054  007458  26D9               	addwf	fsr2l,f,c
 35055  00745A  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 35056  00745C  22DA               	addwfc	fsr2h,f,c
 35057  00745E  0EB9               	movlw	185
 35058  007460  18DE               	xorwf	postinc2,w,c
 35059  007462  B4D8               	btfsc	status,2,c
 35060  007464  D002               	goto	l2965
 35061  007466                     u12390:
 35062                           
 35063                           ;api.c: 1077: {;api.c: 1078: return 4;
 35064  007466  0E04               	movlw	4
 35065  007468  0012               	return	
 35066  00746A                     l2965:
 35067                           
 35068                           ;api.c: 1079: };api.c: 1082: os.communicationSettings.i2cMode = (externalMode_t) data[1]
      +                          ;
 35069  00746A  EE20 F001          	lfsr	2,1
 35070  00746E  5001               	movf	__parse_settings_i2c_mode@data,w,c
 35071  007470  26D9               	addwf	fsr2l,f,c
 35072  007472  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 35073  007474  22DA               	addwfc	fsr2h,f,c
 35074  007476  50DF               	movf	indf2,w,c
 35075  007478  0101               	movlb	1	; () banked
 35076  00747A  6F3A               	movwf	(_os+9)& (0+255),b
 35077                           
 35078                           ; BSR set to: 1
 35079                           ;api.c: 1085: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35080  00747C  C005  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 35081  007480  C006  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 35082  007484  50DF               	movf	indf2,w,c
 35083  007486  B4D8               	btfsc	status,2,c
 35084  007488  D031               	goto	l2969
 35085                           
 35086                           ; BSR set to: 1
 35087  00748A  C005  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 35088  00748E  C006  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 35089  007492  0E3F               	movlw	63
 35090  007494  60DF               	cpfslt	indf2,c
 35091  007496  D02A               	goto	l2969
 35092                           
 35093                           ; BSR set to: 1
 35094                           ;api.c: 1086: {;api.c: 1087: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_MODE;
 35095  007498  C005  FFD9         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr2l
 35096  00749C  C006  FFDA         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr2h
 35097  0074A0  CFDF F007          	movff	indf2,??__parse_settings_i2c_mode
 35098  0074A4  0E01               	movlw	1
 35099  0074A6  26DF               	addwf	indf2,f,c
 35100  0074A8  5007               	movf	??__parse_settings_i2c_mode,w,c
 35101  0074AA  0D01               	mullw	1
 35102  0074AC  50F3               	movf	prodl,w,c
 35103  0074AE  2403               	addwf	__parse_settings_i2c_mode@out_buffer,w,c
 35104  0074B0  6ED9               	movwf	fsr2l,c
 35105  0074B2  50F4               	movf	prodh,w,c
 35106  0074B4  2004               	addwfc	__parse_settings_i2c_mode@out_buffer+1,w,c
 35107  0074B6  6EDA               	movwf	fsr2h,c
 35108  0074B8  0E73               	movlw	115
 35109  0074BA  6EDF               	movwf	indf2,c
 35110                           
 35111                           ; BSR set to: 1
 35112                           ;api.c: 1088: out_buffer[(*out_idx_ptr)++] = data[1];
 35113  0074BC  EE20 F001          	lfsr	2,1
 35114  0074C0  5001               	movf	__parse_settings_i2c_mode@data,w,c
 35115  0074C2  26D9               	addwf	fsr2l,f,c
 35116  0074C4  5002               	movf	__parse_settings_i2c_mode@data+1,w,c
 35117  0074C6  22DA               	addwfc	fsr2h,f,c
 35118  0074C8  C005  FFE1         	movff	__parse_settings_i2c_mode@out_idx_ptr,fsr1l
 35119  0074CC  C006  FFE2         	movff	__parse_settings_i2c_mode@out_idx_ptr+1,fsr1h
 35120  0074D0  CFE7 F007          	movff	indf1,??__parse_settings_i2c_mode
 35121  0074D4  0E01               	movlw	1
 35122  0074D6  26E7               	addwf	indf1,f,c
 35123  0074D8  5007               	movf	??__parse_settings_i2c_mode,w,c
 35124  0074DA  0D01               	mullw	1
 35125  0074DC  50F3               	movf	prodl,w,c
 35126  0074DE  2403               	addwf	__parse_settings_i2c_mode@out_buffer,w,c
 35127  0074E0  6EE1               	movwf	fsr1l,c
 35128  0074E2  50F4               	movf	prodh,w,c
 35129  0074E4  2004               	addwfc	__parse_settings_i2c_mode@out_buffer+1,w,c
 35130  0074E6  6EE2               	movwf	fsr1h,c
 35131  0074E8  CFDF FFE7          	movff	indf2,indf1
 35132  0074EC                     l2969:
 35133                           
 35134                           ; BSR set to: 1
 35135                           ;api.c: 1089: };api.c: 1091: return 4;
 35136                           
 35137                           ; BSR set to: 1
 35138  0074EC  0E04               	movlw	4
 35139  0074EE  0012               	return	
 35140  0074F0                     __end_of__parse_settings_i2c_mode:
 35141                           	opt stack 0
 35142                           tosu	equ	0xFFF
 35143                           tosh	equ	0xFFE
 35144                           tosl	equ	0xFFD
 35145                           pclath	equ	0xFFA
 35146                           tblptru	equ	0xFF8
 35147                           tblptrh	equ	0xFF7
 35148                           tblptrl	equ	0xFF6
 35149                           tablat	equ	0xFF5
 35150                           prodh	equ	0xFF4
 35151                           prodl	equ	0xFF3
 35152                           intcon	equ	0xFF2
 35153                           intcon2	equ	0xFF1
 35154                           intcon3	equ	0xFF0
 35155                           indf0	equ	0xFEF
 35156                           postinc0	equ	0xFEE
 35157                           fsr0h	equ	0xFEA
 35158                           fsr0l	equ	0xFE9
 35159                           wreg	equ	0xFE8
 35160                           indf1	equ	0xFE7
 35161                           postdec1	equ	0xFE5
 35162                           plusw1	equ	0xFE3
 35163                           fsr1h	equ	0xFE2
 35164                           fsr1l	equ	0xFE1
 35165                           indf2	equ	0xFDF
 35166                           postinc2	equ	0xFDE
 35167                           postdec2	equ	0xFDD
 35168                           plusw2	equ	0xFDB
 35169                           fsr2h	equ	0xFDA
 35170                           fsr2l	equ	0xFD9
 35171                           status	equ	0xFD8
 35172                           
 35173 ;; *************** function __parse_settings_i2c_masterModeSlaveAddress *****************
 35174 ;; Defined at:
 35175 ;;		line 1138 in file "api.c"
 35176 ;; Parameters:    Size  Location     Type
 35177 ;;  data            2    0[COMRAM] PTR unsigned char 
 35178 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35179 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 35180 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35181 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 35182 ;;		 -> api_parse@out_idx(1), 
 35183 ;; Auto vars:     Size  Location     Type
 35184 ;;		None
 35185 ;; Return value:  Size  Location     Type
 35186 ;;                  1    wreg      unsigned char 
 35187 ;; Registers used:
 35188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35189 ;; Tracked objects:
 35190 ;;		On entry : 0/0
 35191 ;;		On exit  : 0/0
 35192 ;;		Unchanged: 0/0
 35193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35197 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35198 ;;Total ram usage:        7 bytes
 35199 ;; Hardware stack levels used:    1
 35200 ;; This function calls:
 35201 ;;		Nothing
 35202 ;; This function is called by:
 35203 ;;		__parse_command_long
 35204 ;; This function uses a non-reentrant model
 35205 ;;
 35206                           
 35207                           	psect	text174
 35208  0074F0                     __ptext174:
 35209                           	opt stack 0
 35210  0074F0                     __parse_settings_i2c_masterModeSlaveAddress:
 35211                           	opt stack 28
 35212                           
 35213                           ;api.c: 1142: if((data[0]!=COMMAND_SET_I2C_MASTER_MODE_ADDRESS) || (data[2]!=0x54) || (d
      +                          ata[3]!=0x0D))
 35214                           
 35215                           ;incstack = 0
 35216  0074F0  C001  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@data,fsr2l
 35217  0074F4  C002  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@data+1,fsr2h
 35218  0074F8  0E76               	movlw	118
 35219  0074FA  18DE               	xorwf	postinc2,w,c
 35220  0074FC  A4D8               	btfss	status,2,c
 35221  0074FE  D014               	goto	u12540
 35222  007500  EE20 F002          	lfsr	2,2
 35223  007504  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35224  007506  26D9               	addwf	fsr2l,f,c
 35225  007508  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35226  00750A  22DA               	addwfc	fsr2h,f,c
 35227  00750C  0E54               	movlw	84
 35228  00750E  18DE               	xorwf	postinc2,w,c
 35229  007510  A4D8               	btfss	status,2,c
 35230  007512  D00A               	goto	u12540
 35231  007514  EE20 F003          	lfsr	2,3
 35232  007518  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35233  00751A  26D9               	addwf	fsr2l,f,c
 35234  00751C  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35235  00751E  22DA               	addwfc	fsr2h,f,c
 35236  007520  0E0D               	movlw	13
 35237  007522  18DE               	xorwf	postinc2,w,c
 35238  007524  B4D8               	btfsc	status,2,c
 35239  007526  D002               	goto	l2986
 35240  007528                     u12540:
 35241                           
 35242                           ;api.c: 1143: {;api.c: 1144: return 4;
 35243  007528  0E04               	movlw	4
 35244  00752A  0012               	return	
 35245  00752C                     l2986:
 35246                           
 35247                           ;api.c: 1145: };api.c: 1148: os.communicationSettings.i2cMasterModeSlaveAddress = data[1
      +                          ];
 35248  00752C  EE20 F001          	lfsr	2,1
 35249  007530  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35250  007532  26D9               	addwf	fsr2l,f,c
 35251  007534  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35252  007536  22DA               	addwfc	fsr2h,f,c
 35253  007538  50DF               	movf	indf2,w,c
 35254  00753A  0101               	movlb	1	; () banked
 35255  00753C  6F3D               	movwf	(_os+12)& (0+255),b
 35256                           
 35257                           ; BSR set to: 1
 35258                           ;api.c: 1151: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35259  00753E  C005  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 35260  007542  C006  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 35261  007546  50DF               	movf	indf2,w,c
 35262  007548  B4D8               	btfsc	status,2,c
 35263  00754A  D031               	goto	l2990
 35264                           
 35265                           ; BSR set to: 1
 35266  00754C  C005  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 35267  007550  C006  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 35268  007554  0E3F               	movlw	63
 35269  007556  60DF               	cpfslt	indf2,c
 35270  007558  D02A               	goto	l2990
 35271                           
 35272                           ; BSR set to: 1
 35273                           ;api.c: 1152: {;api.c: 1153: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_MASTER_MODE_
      +                          ADDRESS;
 35274  00755A  C005  FFD9         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr2l
 35275  00755E  C006  FFDA         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr2h
 35276  007562  CFDF F007          	movff	indf2,??__parse_settings_i2c_masterModeSlaveAddress
 35277  007566  0E01               	movlw	1
 35278  007568  26DF               	addwf	indf2,f,c
 35279  00756A  5007               	movf	??__parse_settings_i2c_masterModeSlaveAddress,w,c
 35280  00756C  0D01               	mullw	1
 35281  00756E  50F3               	movf	prodl,w,c
 35282  007570  2403               	addwf	__parse_settings_i2c_masterModeSlaveAddress@out_buffer,w,c
 35283  007572  6ED9               	movwf	fsr2l,c
 35284  007574  50F4               	movf	prodh,w,c
 35285  007576  2004               	addwfc	__parse_settings_i2c_masterModeSlaveAddress@out_buffer+1,w,c
 35286  007578  6EDA               	movwf	fsr2h,c
 35287  00757A  0E76               	movlw	118
 35288  00757C  6EDF               	movwf	indf2,c
 35289                           
 35290                           ; BSR set to: 1
 35291                           ;api.c: 1154: out_buffer[(*out_idx_ptr)++] = data[1];
 35292  00757E  EE20 F001          	lfsr	2,1
 35293  007582  5001               	movf	__parse_settings_i2c_masterModeSlaveAddress@data,w,c
 35294  007584  26D9               	addwf	fsr2l,f,c
 35295  007586  5002               	movf	__parse_settings_i2c_masterModeSlaveAddress@data+1,w,c
 35296  007588  22DA               	addwfc	fsr2h,f,c
 35297  00758A  C005  FFE1         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr,fsr1l
 35298  00758E  C006  FFE2         	movff	__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr+1,fsr1h
 35299  007592  CFE7 F007          	movff	indf1,??__parse_settings_i2c_masterModeSlaveAddress
 35300  007596  0E01               	movlw	1
 35301  007598  26E7               	addwf	indf1,f,c
 35302  00759A  5007               	movf	??__parse_settings_i2c_masterModeSlaveAddress,w,c
 35303  00759C  0D01               	mullw	1
 35304  00759E  50F3               	movf	prodl,w,c
 35305  0075A0  2403               	addwf	__parse_settings_i2c_masterModeSlaveAddress@out_buffer,w,c
 35306  0075A2  6EE1               	movwf	fsr1l,c
 35307  0075A4  50F4               	movf	prodh,w,c
 35308  0075A6  2004               	addwfc	__parse_settings_i2c_masterModeSlaveAddress@out_buffer+1,w,c
 35309  0075A8  6EE2               	movwf	fsr1h,c
 35310  0075AA  CFDF FFE7          	movff	indf2,indf1
 35311  0075AE                     l2990:
 35312                           
 35313                           ; BSR set to: 1
 35314                           ;api.c: 1155: };api.c: 1157: return 4;
 35315                           
 35316                           ; BSR set to: 1
 35317  0075AE  0E04               	movlw	4
 35318  0075B0  0012               	return	
 35319  0075B2                     __end_of__parse_settings_i2c_masterModeSlaveAddress:
 35320                           	opt stack 0
 35321                           tosu	equ	0xFFF
 35322                           tosh	equ	0xFFE
 35323                           tosl	equ	0xFFD
 35324                           pclath	equ	0xFFA
 35325                           tblptru	equ	0xFF8
 35326                           tblptrh	equ	0xFF7
 35327                           tblptrl	equ	0xFF6
 35328                           tablat	equ	0xFF5
 35329                           prodh	equ	0xFF4
 35330                           prodl	equ	0xFF3
 35331                           intcon	equ	0xFF2
 35332                           intcon2	equ	0xFF1
 35333                           intcon3	equ	0xFF0
 35334                           indf0	equ	0xFEF
 35335                           postinc0	equ	0xFEE
 35336                           fsr0h	equ	0xFEA
 35337                           fsr0l	equ	0xFE9
 35338                           wreg	equ	0xFE8
 35339                           indf1	equ	0xFE7
 35340                           postdec1	equ	0xFE5
 35341                           plusw1	equ	0xFE3
 35342                           fsr1h	equ	0xFE2
 35343                           fsr1l	equ	0xFE1
 35344                           indf2	equ	0xFDF
 35345                           postinc2	equ	0xFDE
 35346                           postdec2	equ	0xFDD
 35347                           plusw2	equ	0xFDB
 35348                           fsr2h	equ	0xFDA
 35349                           fsr2l	equ	0xFD9
 35350                           status	equ	0xFD8
 35351                           
 35352 ;; *************** function __parse_settings_i2c_frequency *****************
 35353 ;; Defined at:
 35354 ;;		line 1094 in file "api.c"
 35355 ;; Parameters:    Size  Location     Type
 35356 ;;  data            2    0[COMRAM] PTR unsigned char 
 35357 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35358 ;;  out_buffer      2    2[COMRAM] PTR unsigned char 
 35359 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35360 ;;  out_idx_ptr     2    4[COMRAM] PTR unsigned char 
 35361 ;;		 -> api_parse@out_idx(1), 
 35362 ;; Auto vars:     Size  Location     Type
 35363 ;;		None
 35364 ;; Return value:  Size  Location     Type
 35365 ;;                  1    wreg      unsigned char 
 35366 ;; Registers used:
 35367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35368 ;; Tracked objects:
 35369 ;;		On entry : 0/0
 35370 ;;		On exit  : 0/0
 35371 ;;		Unchanged: 0/0
 35372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35373 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35376 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35377 ;;Total ram usage:        7 bytes
 35378 ;; Hardware stack levels used:    1
 35379 ;; This function calls:
 35380 ;;		Nothing
 35381 ;; This function is called by:
 35382 ;;		__parse_command_long
 35383 ;; This function uses a non-reentrant model
 35384 ;;
 35385                           
 35386                           	psect	text175
 35387  0075B2                     __ptext175:
 35388                           	opt stack 0
 35389  0075B2                     __parse_settings_i2c_frequency:
 35390                           	opt stack 28
 35391                           
 35392                           ;api.c: 1098: if((data[0]!=COMMAND_SET_I2C_FREQUENCY) || (data[2]!=0x4E) || (data[3]!=0x
      +                          03))
 35393                           
 35394                           ;incstack = 0
 35395  0075B2  C001  FFD9         	movff	__parse_settings_i2c_frequency@data,fsr2l
 35396  0075B6  C002  FFDA         	movff	__parse_settings_i2c_frequency@data+1,fsr2h
 35397  0075BA  0E74               	movlw	116
 35398  0075BC  18DE               	xorwf	postinc2,w,c
 35399  0075BE  A4D8               	btfss	status,2,c
 35400  0075C0  D014               	goto	u12440
 35401  0075C2  EE20 F002          	lfsr	2,2
 35402  0075C6  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35403  0075C8  26D9               	addwf	fsr2l,f,c
 35404  0075CA  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35405  0075CC  22DA               	addwfc	fsr2h,f,c
 35406  0075CE  0E4E               	movlw	78
 35407  0075D0  18DE               	xorwf	postinc2,w,c
 35408  0075D2  A4D8               	btfss	status,2,c
 35409  0075D4  D00A               	goto	u12440
 35410  0075D6  EE20 F003          	lfsr	2,3
 35411  0075DA  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35412  0075DC  26D9               	addwf	fsr2l,f,c
 35413  0075DE  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35414  0075E0  22DA               	addwfc	fsr2h,f,c
 35415  0075E2  0E03               	movlw	3
 35416  0075E4  18DE               	xorwf	postinc2,w,c
 35417  0075E6  B4D8               	btfsc	status,2,c
 35418  0075E8  D002               	goto	l2972
 35419  0075EA                     u12440:
 35420                           
 35421                           ;api.c: 1099: {;api.c: 1100: return 4;
 35422  0075EA  0E04               	movlw	4
 35423  0075EC  0012               	return	
 35424  0075EE                     l2972:
 35425                           
 35426                           ;api.c: 1101: };api.c: 1104: os.communicationSettings.i2cFrequency = (i2cFrequency_t) da
      +                          ta[1];
 35427  0075EE  EE20 F001          	lfsr	2,1
 35428  0075F2  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35429  0075F4  26D9               	addwf	fsr2l,f,c
 35430  0075F6  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35431  0075F8  22DA               	addwfc	fsr2h,f,c
 35432  0075FA  50DF               	movf	indf2,w,c
 35433  0075FC  0101               	movlb	1	; () banked
 35434  0075FE  6F3B               	movwf	(_os+10)& (0+255),b
 35435                           
 35436                           ; BSR set to: 1
 35437                           ;api.c: 1107: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35438  007600  C005  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 35439  007604  C006  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 35440  007608  50DF               	movf	indf2,w,c
 35441  00760A  B4D8               	btfsc	status,2,c
 35442  00760C  D031               	goto	l2976
 35443                           
 35444                           ; BSR set to: 1
 35445  00760E  C005  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 35446  007612  C006  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 35447  007616  0E3F               	movlw	63
 35448  007618  60DF               	cpfslt	indf2,c
 35449  00761A  D02A               	goto	l2976
 35450                           
 35451                           ; BSR set to: 1
 35452                           ;api.c: 1108: {;api.c: 1109: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_I2C_FREQUENCY;
 35453  00761C  C005  FFD9         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr2l
 35454  007620  C006  FFDA         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr2h
 35455  007624  CFDF F007          	movff	indf2,??__parse_settings_i2c_frequency
 35456  007628  0E01               	movlw	1
 35457  00762A  26DF               	addwf	indf2,f,c
 35458  00762C  5007               	movf	??__parse_settings_i2c_frequency,w,c
 35459  00762E  0D01               	mullw	1
 35460  007630  50F3               	movf	prodl,w,c
 35461  007632  2403               	addwf	__parse_settings_i2c_frequency@out_buffer,w,c
 35462  007634  6ED9               	movwf	fsr2l,c
 35463  007636  50F4               	movf	prodh,w,c
 35464  007638  2004               	addwfc	__parse_settings_i2c_frequency@out_buffer+1,w,c
 35465  00763A  6EDA               	movwf	fsr2h,c
 35466  00763C  0E74               	movlw	116
 35467  00763E  6EDF               	movwf	indf2,c
 35468                           
 35469                           ; BSR set to: 1
 35470                           ;api.c: 1110: out_buffer[(*out_idx_ptr)++] = data[1];
 35471  007640  EE20 F001          	lfsr	2,1
 35472  007644  5001               	movf	__parse_settings_i2c_frequency@data,w,c
 35473  007646  26D9               	addwf	fsr2l,f,c
 35474  007648  5002               	movf	__parse_settings_i2c_frequency@data+1,w,c
 35475  00764A  22DA               	addwfc	fsr2h,f,c
 35476  00764C  C005  FFE1         	movff	__parse_settings_i2c_frequency@out_idx_ptr,fsr1l
 35477  007650  C006  FFE2         	movff	__parse_settings_i2c_frequency@out_idx_ptr+1,fsr1h
 35478  007654  CFE7 F007          	movff	indf1,??__parse_settings_i2c_frequency
 35479  007658  0E01               	movlw	1
 35480  00765A  26E7               	addwf	indf1,f,c
 35481  00765C  5007               	movf	??__parse_settings_i2c_frequency,w,c
 35482  00765E  0D01               	mullw	1
 35483  007660  50F3               	movf	prodl,w,c
 35484  007662  2403               	addwf	__parse_settings_i2c_frequency@out_buffer,w,c
 35485  007664  6EE1               	movwf	fsr1l,c
 35486  007666  50F4               	movf	prodh,w,c
 35487  007668  2004               	addwfc	__parse_settings_i2c_frequency@out_buffer+1,w,c
 35488  00766A  6EE2               	movwf	fsr1h,c
 35489  00766C  CFDF FFE7          	movff	indf2,indf1
 35490  007670                     l2976:
 35491                           
 35492                           ; BSR set to: 1
 35493                           ;api.c: 1111: };api.c: 1113: return 4;
 35494                           
 35495                           ; BSR set to: 1
 35496  007670  0E04               	movlw	4
 35497  007672  0012               	return	
 35498  007674                     __end_of__parse_settings_i2c_frequency:
 35499                           	opt stack 0
 35500                           tosu	equ	0xFFF
 35501                           tosh	equ	0xFFE
 35502                           tosl	equ	0xFFD
 35503                           pclath	equ	0xFFA
 35504                           tblptru	equ	0xFF8
 35505                           tblptrh	equ	0xFF7
 35506                           tblptrl	equ	0xFF6
 35507                           tablat	equ	0xFF5
 35508                           prodh	equ	0xFF4
 35509                           prodl	equ	0xFF3
 35510                           intcon	equ	0xFF2
 35511                           intcon2	equ	0xFF1
 35512                           intcon3	equ	0xFF0
 35513                           indf0	equ	0xFEF
 35514                           postinc0	equ	0xFEE
 35515                           fsr0h	equ	0xFEA
 35516                           fsr0l	equ	0xFE9
 35517                           wreg	equ	0xFE8
 35518                           indf1	equ	0xFE7
 35519                           postdec1	equ	0xFE5
 35520                           plusw1	equ	0xFE3
 35521                           fsr1h	equ	0xFE2
 35522                           fsr1l	equ	0xFE1
 35523                           indf2	equ	0xFDF
 35524                           postinc2	equ	0xFDE
 35525                           postdec2	equ	0xFDD
 35526                           plusw2	equ	0xFDB
 35527                           fsr2h	equ	0xFDA
 35528                           fsr2l	equ	0xFD9
 35529                           status	equ	0xFD8
 35530                           
 35531 ;; *************** function __parse_sector_to_buffer *****************
 35532 ;; Defined at:
 35533 ;;		line 868 in file "api.c"
 35534 ;; Parameters:    Size  Location     Type
 35535 ;;  data            2   83[COMRAM] PTR unsigned char 
 35536 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35537 ;;  out_buffer      2   85[COMRAM] PTR unsigned char 
 35538 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35539 ;;  out_idx_ptr     2   87[COMRAM] PTR unsigned char 
 35540 ;;		 -> api_parse@out_idx(1), 
 35541 ;; Auto vars:     Size  Location     Type
 35542 ;;  sector          2   92[COMRAM] unsigned int 
 35543 ;;  return_value    1   91[COMRAM] unsigned char 
 35544 ;;  file_number     1   90[COMRAM] unsigned char 
 35545 ;; Return value:  Size  Location     Type
 35546 ;;                  1    wreg      unsigned char 
 35547 ;; Registers used:
 35548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35549 ;; Tracked objects:
 35550 ;;		On entry : 0/0
 35551 ;;		On exit  : 0/0
 35552 ;;		Unchanged: 0/0
 35553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35557 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35558 ;;Total ram usage:       11 bytes
 35559 ;; Hardware stack levels used:    1
 35560 ;; Hardware stack levels required when called:    8
 35561 ;; This function calls:
 35562 ;;		_fat_copy_sector_to_buffer
 35563 ;; This function is called by:
 35564 ;;		__parse_command_long
 35565 ;; This function uses a non-reentrant model
 35566 ;;
 35567                           
 35568                           	psect	text176
 35569  00440E                     __ptext176:
 35570                           	opt stack 0
 35571  00440E                     __parse_sector_to_buffer:
 35572                           	opt stack 20
 35573                           
 35574                           ;api.c: 871: uint8_t file_number;;api.c: 872: uint16_t sector;;api.c: 873: uint8_t retur
      +                          n_value;;api.c: 875: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (data[4]!=0x1B) || (data[
      +                          5]!=0x35))
 35575                           
 35576                           ;incstack = 0
 35577  00440E  C054  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 35578  004412  C055  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 35579  004416  0E57               	movlw	87
 35580  004418  18DE               	xorwf	postinc2,w,c
 35581  00441A  A4D8               	btfss	status,2,c
 35582  00441C  D014               	goto	u12040
 35583  00441E  EE20 F004          	lfsr	2,4
 35584  004422  5054               	movf	__parse_sector_to_buffer@data,w,c
 35585  004424  26D9               	addwf	fsr2l,f,c
 35586  004426  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35587  004428  22DA               	addwfc	fsr2h,f,c
 35588  00442A  0E1B               	movlw	27
 35589  00442C  18DE               	xorwf	postinc2,w,c
 35590  00442E  A4D8               	btfss	status,2,c
 35591  004430  D00A               	goto	u12040
 35592  004432  EE20 F005          	lfsr	2,5
 35593  004436  5054               	movf	__parse_sector_to_buffer@data,w,c
 35594  004438  26D9               	addwf	fsr2l,f,c
 35595  00443A  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35596  00443C  22DA               	addwfc	fsr2h,f,c
 35597  00443E  0E35               	movlw	53
 35598  004440  18DE               	xorwf	postinc2,w,c
 35599  004442  B4D8               	btfsc	status,2,c
 35600  004444  D002               	goto	l2916
 35601  004446                     u12040:
 35602                           
 35603                           ;api.c: 876: {;api.c: 877: return 6;
 35604  004446  0E06               	movlw	6
 35605  004448  0012               	return	
 35606  00444A                     l2916:
 35607                           
 35608                           ;api.c: 878: };api.c: 881: file_number = data[1];
 35609  00444A  EE20 F001          	lfsr	2,1
 35610  00444E  5054               	movf	__parse_sector_to_buffer@data,w,c
 35611  004450  26D9               	addwf	fsr2l,f,c
 35612  004452  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35613  004454  22DA               	addwfc	fsr2h,f,c
 35614  004456  50DF               	movf	indf2,w,c
 35615  004458  6E5B               	movwf	__parse_sector_to_buffer@file_number,c
 35616                           
 35617                           ;api.c: 884: sector = data[2];
 35618  00445A  EE20 F002          	lfsr	2,2
 35619  00445E  5054               	movf	__parse_sector_to_buffer@data,w,c
 35620  004460  26D9               	addwf	fsr2l,f,c
 35621  004462  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35622  004464  22DA               	addwfc	fsr2h,f,c
 35623  004466  50DF               	movf	indf2,w,c
 35624  004468  6E5A               	movwf	??__parse_sector_to_buffer& (0+255),c
 35625  00446A  505A               	movf	??__parse_sector_to_buffer,w,c
 35626  00446C  6E5D               	movwf	__parse_sector_to_buffer@sector,c
 35627  00446E  6A5E               	clrf	__parse_sector_to_buffer@sector+1,c
 35628                           
 35629                           ;api.c: 885: sector <<= 8;
 35630  004470  505D               	movf	__parse_sector_to_buffer@sector,w,c
 35631  004472  6E5E               	movwf	__parse_sector_to_buffer@sector+1,c
 35632  004474  6A5D               	clrf	__parse_sector_to_buffer@sector,c
 35633                           
 35634                           ;api.c: 886: sector |= data[3];
 35635  004476  EE20 F003          	lfsr	2,3
 35636  00447A  5054               	movf	__parse_sector_to_buffer@data,w,c
 35637  00447C  26D9               	addwf	fsr2l,f,c
 35638  00447E  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35639  004480  22DA               	addwfc	fsr2h,f,c
 35640  004482  50DF               	movf	indf2,w,c
 35641  004484  6E5A               	movwf	??__parse_sector_to_buffer& (0+255),c
 35642  004486  505A               	movf	??__parse_sector_to_buffer,w,c
 35643  004488  125D               	iorwf	__parse_sector_to_buffer@sector,f,c
 35644                           
 35645                           ;api.c: 889: return_value = fat_copy_sector_to_buffer(data[1], sector);
 35646  00448A  C05D  F043         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 35647  00448E  C05E  F044         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 35648  004492  EE20 F001          	lfsr	2,1
 35649  004496  5054               	movf	__parse_sector_to_buffer@data,w,c
 35650  004498  26D9               	addwf	fsr2l,f,c
 35651  00449A  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 35652  00449C  22DA               	addwfc	fsr2h,f,c
 35653  00449E  50DF               	movf	indf2,w,c
 35654  0044A0  ECF7  F03B         	call	_fat_copy_sector_to_buffer
 35655  0044A4  6E5C               	movwf	__parse_sector_to_buffer@return_value,c
 35656                           
 35657                           ;api.c: 892: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 35658  0044A6  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35659  0044AA  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35660  0044AE  50DF               	movf	indf2,w,c
 35661  0044B0  B4D8               	btfsc	status,2,c
 35662  0044B2  D061               	goto	l2920
 35663  0044B4  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35664  0044B8  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35665  0044BC  0E3C               	movlw	60
 35666  0044BE  60DF               	cpfslt	indf2,c
 35667  0044C0  D05A               	goto	l2920
 35668                           
 35669                           ;api.c: 893: {;api.c: 894: out_buffer[(*out_idx_ptr)++] = COMMAND_SECTOR_TO_BUFFER;
 35670  0044C2  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35671  0044C6  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35672  0044CA  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35673  0044CE  0E01               	movlw	1
 35674  0044D0  26DF               	addwf	indf2,f,c
 35675  0044D2  505A               	movf	??__parse_sector_to_buffer,w,c
 35676  0044D4  0D01               	mullw	1
 35677  0044D6  50F3               	movf	prodl,w,c
 35678  0044D8  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35679  0044DA  6ED9               	movwf	fsr2l,c
 35680  0044DC  50F4               	movf	prodh,w,c
 35681  0044DE  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35682  0044E0  6EDA               	movwf	fsr2h,c
 35683  0044E2  0E57               	movlw	87
 35684  0044E4  6EDF               	movwf	indf2,c
 35685                           
 35686                           ;api.c: 895: out_buffer[(*out_idx_ptr)++] = file_number;
 35687  0044E6  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35688  0044EA  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35689  0044EE  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35690  0044F2  0E01               	movlw	1
 35691  0044F4  26DF               	addwf	indf2,f,c
 35692  0044F6  505A               	movf	??__parse_sector_to_buffer,w,c
 35693  0044F8  0D01               	mullw	1
 35694  0044FA  50F3               	movf	prodl,w,c
 35695  0044FC  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35696  0044FE  6ED9               	movwf	fsr2l,c
 35697  004500  50F4               	movf	prodh,w,c
 35698  004502  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35699  004504  6EDA               	movwf	fsr2h,c
 35700  004506  C05B  FFDF         	movff	__parse_sector_to_buffer@file_number,indf2
 35701                           
 35702                           ;api.c: 896: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 35703  00450A  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35704  00450E  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35705  004512  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35706  004516  0E01               	movlw	1
 35707  004518  26DF               	addwf	indf2,f,c
 35708  00451A  505A               	movf	??__parse_sector_to_buffer,w,c
 35709  00451C  0D01               	mullw	1
 35710  00451E  50F3               	movf	prodl,w,c
 35711  004520  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35712  004522  6ED9               	movwf	fsr2l,c
 35713  004524  50F4               	movf	prodh,w,c
 35714  004526  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35715  004528  6EDA               	movwf	fsr2h,c
 35716  00452A  505E               	movf	__parse_sector_to_buffer@sector+1,w,c
 35717  00452C  6EDF               	movwf	indf2,c
 35718                           
 35719                           ;api.c: 897: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 35720  00452E  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35721  004532  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35722  004536  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35723  00453A  0E01               	movlw	1
 35724  00453C  26DF               	addwf	indf2,f,c
 35725  00453E  505A               	movf	??__parse_sector_to_buffer,w,c
 35726  004540  0D01               	mullw	1
 35727  004542  50F3               	movf	prodl,w,c
 35728  004544  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35729  004546  6ED9               	movwf	fsr2l,c
 35730  004548  50F4               	movf	prodh,w,c
 35731  00454A  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35732  00454C  6EDA               	movwf	fsr2h,c
 35733  00454E  C05D  FFDF         	movff	__parse_sector_to_buffer@sector,indf2
 35734                           
 35735                           ;api.c: 898: out_buffer[(*out_idx_ptr)++] = return_value;
 35736  004552  C058  FFD9         	movff	__parse_sector_to_buffer@out_idx_ptr,fsr2l
 35737  004556  C059  FFDA         	movff	__parse_sector_to_buffer@out_idx_ptr+1,fsr2h
 35738  00455A  CFDF F05A          	movff	indf2,??__parse_sector_to_buffer
 35739  00455E  0E01               	movlw	1
 35740  004560  26DF               	addwf	indf2,f,c
 35741  004562  505A               	movf	??__parse_sector_to_buffer,w,c
 35742  004564  0D01               	mullw	1
 35743  004566  50F3               	movf	prodl,w,c
 35744  004568  2456               	addwf	__parse_sector_to_buffer@out_buffer,w,c
 35745  00456A  6ED9               	movwf	fsr2l,c
 35746  00456C  50F4               	movf	prodh,w,c
 35747  00456E  2057               	addwfc	__parse_sector_to_buffer@out_buffer+1,w,c
 35748  004570  6EDA               	movwf	fsr2h,c
 35749  004572  C05C  FFDF         	movff	__parse_sector_to_buffer@return_value,indf2
 35750  004576                     l2920:
 35751                           
 35752                           ;api.c: 899: };api.c: 901: return 6;
 35753  004576  0E06               	movlw	6
 35754  004578  0012               	return	
 35755  00457A                     __end_of__parse_sector_to_buffer:
 35756                           	opt stack 0
 35757                           tosu	equ	0xFFF
 35758                           tosh	equ	0xFFE
 35759                           tosl	equ	0xFFD
 35760                           pclath	equ	0xFFA
 35761                           tblptru	equ	0xFF8
 35762                           tblptrh	equ	0xFF7
 35763                           tblptrl	equ	0xFF6
 35764                           tablat	equ	0xFF5
 35765                           prodh	equ	0xFF4
 35766                           prodl	equ	0xFF3
 35767                           intcon	equ	0xFF2
 35768                           intcon2	equ	0xFF1
 35769                           intcon3	equ	0xFF0
 35770                           indf0	equ	0xFEF
 35771                           postinc0	equ	0xFEE
 35772                           fsr0h	equ	0xFEA
 35773                           fsr0l	equ	0xFE9
 35774                           wreg	equ	0xFE8
 35775                           indf1	equ	0xFE7
 35776                           postdec1	equ	0xFE5
 35777                           plusw1	equ	0xFE3
 35778                           fsr1h	equ	0xFE2
 35779                           fsr1l	equ	0xFE1
 35780                           indf2	equ	0xFDF
 35781                           postinc2	equ	0xFDE
 35782                           postdec2	equ	0xFDD
 35783                           plusw2	equ	0xFDB
 35784                           fsr2h	equ	0xFDA
 35785                           fsr2l	equ	0xFD9
 35786                           status	equ	0xFD8
 35787                           
 35788 ;; *************** function __parse_format_drive *****************
 35789 ;; Defined at:
 35790 ;;		line 845 in file "api.c"
 35791 ;; Parameters:    Size  Location     Type
 35792 ;;  data            2   38[COMRAM] PTR unsigned char 
 35793 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35794 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 35795 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 35796 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 35797 ;;		 -> api_parse@out_idx(1), 
 35798 ;; Auto vars:     Size  Location     Type
 35799 ;;  return_value    1   45[COMRAM] unsigned char 
 35800 ;; Return value:  Size  Location     Type
 35801 ;;                  1    wreg      unsigned char 
 35802 ;; Registers used:
 35803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35804 ;; Tracked objects:
 35805 ;;		On entry : 0/0
 35806 ;;		On exit  : 0/0
 35807 ;;		Unchanged: 0/0
 35808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35809 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35812 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35813 ;;Total ram usage:        8 bytes
 35814 ;; Hardware stack levels used:    1
 35815 ;; Hardware stack levels required when called:    6
 35816 ;; This function calls:
 35817 ;;		_fat_format
 35818 ;; This function is called by:
 35819 ;;		__parse_command_long
 35820 ;; This function uses a non-reentrant model
 35821 ;;
 35822                           
 35823                           	psect	text177
 35824  007C12                     __ptext177:
 35825                           	opt stack 0
 35826  007C12                     __parse_format_drive:
 35827                           	opt stack 22
 35828                           
 35829                           ;api.c: 849: uint8_t return_value;;api.c: 851: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 35830                           
 35831                           ;incstack = 0
 35832  007C12  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 35833  007C16  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 35834  007C1A  0E56               	movlw	86
 35835  007C1C  18DE               	xorwf	postinc2,w,c
 35836  007C1E  A4D8               	btfss	status,2,c
 35837  007C20  D014               	goto	u11990
 35838  007C22  EE20 F001          	lfsr	2,1
 35839  007C26  5027               	movf	__parse_format_drive@data,w,c
 35840  007C28  26D9               	addwf	fsr2l,f,c
 35841  007C2A  5028               	movf	__parse_format_drive@data+1,w,c
 35842  007C2C  22DA               	addwfc	fsr2h,f,c
 35843  007C2E  0EDA               	movlw	218
 35844  007C30  18DE               	xorwf	postinc2,w,c
 35845  007C32  A4D8               	btfss	status,2,c
 35846  007C34  D00A               	goto	u11990
 35847  007C36  EE20 F002          	lfsr	2,2
 35848  007C3A  5027               	movf	__parse_format_drive@data,w,c
 35849  007C3C  26D9               	addwf	fsr2l,f,c
 35850  007C3E  5028               	movf	__parse_format_drive@data+1,w,c
 35851  007C40  22DA               	addwfc	fsr2h,f,c
 35852  007C42  0E22               	movlw	34
 35853  007C44  18DE               	xorwf	postinc2,w,c
 35854  007C46  B4D8               	btfsc	status,2,c
 35855  007C48  D002               	goto	l2909
 35856  007C4A                     u11990:
 35857                           
 35858                           ;api.c: 852: {;api.c: 853: return 3;
 35859  007C4A  0E03               	movlw	3
 35860  007C4C  0012               	return	
 35861  007C4E                     l2909:
 35862                           
 35863                           ;api.c: 854: };api.c: 856: return_value = fat_format();
 35864  007C4E  ECEE  F017         	call	_fat_format	;wreg free
 35865  007C52  6E2E               	movwf	__parse_format_drive@return_value,c
 35866                           
 35867                           ;api.c: 859: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 35868  007C54  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35869  007C58  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35870  007C5C  50DF               	movf	indf2,w,c
 35871  007C5E  B4D8               	btfsc	status,2,c
 35872  007C60  D02B               	goto	l2913
 35873  007C62  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35874  007C66  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35875  007C6A  0E3F               	movlw	63
 35876  007C6C  60DF               	cpfslt	indf2,c
 35877  007C6E  D024               	goto	l2913
 35878                           
 35879                           ;api.c: 860: {;api.c: 861: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 35880  007C70  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35881  007C74  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35882  007C78  CFDF F02D          	movff	indf2,??__parse_format_drive
 35883  007C7C  0E01               	movlw	1
 35884  007C7E  26DF               	addwf	indf2,f,c
 35885  007C80  502D               	movf	??__parse_format_drive,w,c
 35886  007C82  0D01               	mullw	1
 35887  007C84  50F3               	movf	prodl,w,c
 35888  007C86  2429               	addwf	__parse_format_drive@out_buffer,w,c
 35889  007C88  6ED9               	movwf	fsr2l,c
 35890  007C8A  50F4               	movf	prodh,w,c
 35891  007C8C  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 35892  007C8E  6EDA               	movwf	fsr2h,c
 35893  007C90  0E56               	movlw	86
 35894  007C92  6EDF               	movwf	indf2,c
 35895                           
 35896                           ;api.c: 862: out_buffer[(*out_idx_ptr)++] = return_value;
 35897  007C94  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 35898  007C98  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 35899  007C9C  CFDF F02D          	movff	indf2,??__parse_format_drive
 35900  007CA0  0E01               	movlw	1
 35901  007CA2  26DF               	addwf	indf2,f,c
 35902  007CA4  502D               	movf	??__parse_format_drive,w,c
 35903  007CA6  0D01               	mullw	1
 35904  007CA8  50F3               	movf	prodl,w,c
 35905  007CAA  2429               	addwf	__parse_format_drive@out_buffer,w,c
 35906  007CAC  6ED9               	movwf	fsr2l,c
 35907  007CAE  50F4               	movf	prodh,w,c
 35908  007CB0  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 35909  007CB2  6EDA               	movwf	fsr2h,c
 35910  007CB4  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 35911  007CB8                     l2913:
 35912                           
 35913                           ;api.c: 863: };api.c: 865: return 3;
 35914  007CB8  0E03               	movlw	3
 35915  007CBA  0012               	return	
 35916  007CBC                     __end_of__parse_format_drive:
 35917                           	opt stack 0
 35918                           tosu	equ	0xFFF
 35919                           tosh	equ	0xFFE
 35920                           tosl	equ	0xFFD
 35921                           pclath	equ	0xFFA
 35922                           tblptru	equ	0xFF8
 35923                           tblptrh	equ	0xFF7
 35924                           tblptrl	equ	0xFF6
 35925                           tablat	equ	0xFF5
 35926                           prodh	equ	0xFF4
 35927                           prodl	equ	0xFF3
 35928                           intcon	equ	0xFF2
 35929                           intcon2	equ	0xFF1
 35930                           intcon3	equ	0xFF0
 35931                           indf0	equ	0xFEF
 35932                           postinc0	equ	0xFEE
 35933                           fsr0h	equ	0xFEA
 35934                           fsr0l	equ	0xFE9
 35935                           wreg	equ	0xFE8
 35936                           indf1	equ	0xFE7
 35937                           postdec1	equ	0xFE5
 35938                           plusw1	equ	0xFE3
 35939                           fsr1h	equ	0xFE2
 35940                           fsr1l	equ	0xFE1
 35941                           indf2	equ	0xFDF
 35942                           postinc2	equ	0xFDE
 35943                           postdec2	equ	0xFDD
 35944                           plusw2	equ	0xFDB
 35945                           fsr2h	equ	0xFDA
 35946                           fsr2l	equ	0xFD9
 35947                           status	equ	0xFD8
 35948                           
 35949 ;; *************** function _fat_format *****************
 35950 ;; Defined at:
 35951 ;;		line 1320 in file "fat16.c"
 35952 ;; Parameters:    Size  Location     Type
 35953 ;;		None
 35954 ;; Auto vars:     Size  Location     Type
 35955 ;;  cntr            2   36[COMRAM] unsigned int 
 35956 ;; Return value:  Size  Location     Type
 35957 ;;                  1    wreg      unsigned char 
 35958 ;; Registers used:
 35959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35960 ;; Tracked objects:
 35961 ;;		On entry : 0/0
 35962 ;;		On exit  : 0/0
 35963 ;;		Unchanged: 0/0
 35964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35969 ;;Total ram usage:        2 bytes
 35970 ;; Hardware stack levels used:    1
 35971 ;; Hardware stack levels required when called:    5
 35972 ;; This function calls:
 35973 ;;		__get_data
 35974 ;;		__get_fat
 35975 ;;		__get_fbr
 35976 ;;		__get_mbr
 35977 ;;		__get_root
 35978 ;;		_flash_sector_write
 35979 ;; This function is called by:
 35980 ;;		_fat_init
 35981 ;;		__parse_format_drive
 35982 ;; This function uses a non-reentrant model
 35983 ;;
 35984                           
 35985                           	psect	text178
 35986  002FDC                     __ptext178:
 35987                           	opt stack 0
 35988  002FDC                     _fat_format:
 35989                           	opt stack 23
 35990                           
 35991                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 35992                           
 35993                           ;incstack = 0
 35994  002FDC  0E00               	movlw	0
 35995  002FDE  6E26               	movwf	fat_format@cntr+1,c
 35996  002FE0  0E00               	movlw	0
 35997  002FE2  6E25               	movwf	fat_format@cntr,c
 35998  002FE4                     l14098:
 35999  002FE4  0E02               	movlw	2
 36000  002FE6  5C26               	subwf	fat_format@cntr+1,w,c
 36001  002FE8  B0D8               	btfsc	status,0,c
 36002  002FEA  D010               	goto	u11200
 36003                           
 36004                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 36005  002FEC  0EC0               	movlw	low _buffer
 36006  002FEE  2425               	addwf	fat_format@cntr,w,c
 36007  002FF0  6ED9               	movwf	fsr2l,c
 36008  002FF2  0E03               	movlw	high _buffer
 36009  002FF4  2026               	addwfc	fat_format@cntr+1,w,c
 36010  002FF6  6EDA               	movwf	fsr2h,c
 36011  002FF8  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 36012  002FFC  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 36013  003000  EC3F  F036         	call	__get_mbr	;wreg free
 36014  003004  6EDF               	movwf	indf2,c
 36015  003006  4A25               	infsnz	fat_format@cntr,f,c
 36016  003008  2A26               	incf	fat_format@cntr+1,f,c
 36017  00300A  D7EC               	goto	l14098
 36018  00300C                     u11200:
 36019                           
 36020                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 36021  00300C  0E00               	movlw	0
 36022  00300E  6E21               	movwf	flash_sector_write@page+1,c
 36023  003010  0E00               	movlw	0
 36024  003012  6E20               	movwf	flash_sector_write@page,c
 36025  003014  0EC0               	movlw	low _buffer
 36026  003016  6E22               	movwf	flash_sector_write@data,c
 36027  003018  0E03               	movlw	high _buffer
 36028  00301A  6E23               	movwf	flash_sector_write@data+1,c
 36029  00301C  EC9E  F049         	call	_flash_sector_write	;wreg free
 36030                           
 36031                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 36032  003020  0E00               	movlw	0
 36033  003022  6E26               	movwf	fat_format@cntr+1,c
 36034  003024  0E00               	movlw	0
 36035  003026  6E25               	movwf	fat_format@cntr,c
 36036  003028                     l14112:
 36037  003028  0E02               	movlw	2
 36038  00302A  5C26               	subwf	fat_format@cntr+1,w,c
 36039  00302C  B0D8               	btfsc	status,0,c
 36040  00302E  D010               	goto	u11220
 36041                           
 36042                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 36043  003030  0EC0               	movlw	low _buffer
 36044  003032  2425               	addwf	fat_format@cntr,w,c
 36045  003034  6ED9               	movwf	fsr2l,c
 36046  003036  0E03               	movlw	high _buffer
 36047  003038  2026               	addwfc	fat_format@cntr+1,w,c
 36048  00303A  6EDA               	movwf	fsr2h,c
 36049  00303C  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 36050  003040  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 36051  003044  EC50  F011         	call	__get_fbr	;wreg free
 36052  003048  6EDF               	movwf	indf2,c
 36053  00304A  4A25               	infsnz	fat_format@cntr,f,c
 36054  00304C  2A26               	incf	fat_format@cntr+1,f,c
 36055  00304E  D7EC               	goto	l14112
 36056  003050                     u11220:
 36057                           
 36058                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 36059  003050  0E00               	movlw	0
 36060  003052  6E21               	movwf	flash_sector_write@page+1,c
 36061  003054  0E01               	movlw	1
 36062  003056  6E20               	movwf	flash_sector_write@page,c
 36063  003058  0EC0               	movlw	low _buffer
 36064  00305A  6E22               	movwf	flash_sector_write@data,c
 36065  00305C  0E03               	movlw	high _buffer
 36066  00305E  6E23               	movwf	flash_sector_write@data+1,c
 36067  003060  EC9E  F049         	call	_flash_sector_write	;wreg free
 36068                           
 36069                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 36070  003064  0E00               	movlw	0
 36071  003066  6E26               	movwf	fat_format@cntr+1,c
 36072  003068  0E00               	movlw	0
 36073  00306A  6E25               	movwf	fat_format@cntr,c
 36074  00306C                     l14126:
 36075  00306C  0E02               	movlw	2
 36076  00306E  5C26               	subwf	fat_format@cntr+1,w,c
 36077  003070  B0D8               	btfsc	status,0,c
 36078  003072  D010               	goto	u11240
 36079                           
 36080                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 36081  003074  0EC0               	movlw	low _buffer
 36082  003076  2425               	addwf	fat_format@cntr,w,c
 36083  003078  6ED9               	movwf	fsr2l,c
 36084  00307A  0E03               	movlw	high _buffer
 36085  00307C  2026               	addwfc	fat_format@cntr+1,w,c
 36086  00307E  6EDA               	movwf	fsr2h,c
 36087  003080  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 36088  003084  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 36089  003088  EC73  F049         	call	__get_fat	;wreg free
 36090  00308C  6EDF               	movwf	indf2,c
 36091  00308E  4A25               	infsnz	fat_format@cntr,f,c
 36092  003090  2A26               	incf	fat_format@cntr+1,f,c
 36093  003092  D7EC               	goto	l14126
 36094  003094                     u11240:
 36095                           
 36096                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 36097  003094  0E00               	movlw	0
 36098  003096  6E21               	movwf	flash_sector_write@page+1,c
 36099  003098  0E02               	movlw	2
 36100  00309A  6E20               	movwf	flash_sector_write@page,c
 36101  00309C  0EC0               	movlw	low _buffer
 36102  00309E  6E22               	movwf	flash_sector_write@data,c
 36103  0030A0  0E03               	movlw	high _buffer
 36104  0030A2  6E23               	movwf	flash_sector_write@data+1,c
 36105  0030A4  EC9E  F049         	call	_flash_sector_write	;wreg free
 36106                           
 36107                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 36108  0030A8  0E00               	movlw	0
 36109  0030AA  6E26               	movwf	fat_format@cntr+1,c
 36110  0030AC  0E00               	movlw	0
 36111  0030AE  6E25               	movwf	fat_format@cntr,c
 36112  0030B0                     l14140:
 36113  0030B0  0E02               	movlw	2
 36114  0030B2  5C26               	subwf	fat_format@cntr+1,w,c
 36115  0030B4  B0D8               	btfsc	status,0,c
 36116  0030B6  D00B               	goto	u11260
 36117                           
 36118                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 36119  0030B8  0EC0               	movlw	low _buffer
 36120  0030BA  2425               	addwf	fat_format@cntr,w,c
 36121  0030BC  6ED9               	movwf	fsr2l,c
 36122  0030BE  0E03               	movlw	high _buffer
 36123  0030C0  2026               	addwfc	fat_format@cntr+1,w,c
 36124  0030C2  6EDA               	movwf	fsr2h,c
 36125  0030C4  0E00               	movlw	0
 36126  0030C6  6EDF               	movwf	indf2,c
 36127  0030C8  4A25               	infsnz	fat_format@cntr,f,c
 36128  0030CA  2A26               	incf	fat_format@cntr+1,f,c
 36129  0030CC  D7F1               	goto	l14140
 36130  0030CE                     u11260:
 36131                           
 36132                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 36133  0030CE  0E00               	movlw	0
 36134  0030D0  6E26               	movwf	fat_format@cntr+1,c
 36135  0030D2  0E03               	movlw	3
 36136  0030D4  6E25               	movwf	fat_format@cntr,c
 36137  0030D6                     l14152:
 36138  0030D6  5026               	movf	fat_format@cntr+1,w,c
 36139  0030D8  E111               	bnz	l14162
 36140  0030DA  0E22               	movlw	34
 36141  0030DC  5C25               	subwf	fat_format@cntr,w,c
 36142  0030DE  B0D8               	btfsc	status,0,c
 36143  0030E0  D00D               	goto	u11280
 36144                           
 36145                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 36146  0030E2  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 36147  0030E6  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 36148  0030EA  0EC0               	movlw	low _buffer
 36149  0030EC  6E22               	movwf	flash_sector_write@data,c
 36150  0030EE  0E03               	movlw	high _buffer
 36151  0030F0  6E23               	movwf	flash_sector_write@data+1,c
 36152  0030F2  EC9E  F049         	call	_flash_sector_write	;wreg free
 36153  0030F6  4A25               	infsnz	fat_format@cntr,f,c
 36154  0030F8  2A26               	incf	fat_format@cntr+1,f,c
 36155  0030FA  D7ED               	goto	l14152
 36156  0030FC                     u11280:
 36157  0030FC                     l14162:
 36158                           
 36159                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 36160  0030FC  0E00               	movlw	0
 36161  0030FE  6E26               	movwf	fat_format@cntr+1,c
 36162  003100  0E00               	movlw	0
 36163  003102  6E25               	movwf	fat_format@cntr,c
 36164  003104                     l14164:
 36165  003104  0E02               	movlw	2
 36166  003106  5C26               	subwf	fat_format@cntr+1,w,c
 36167  003108  B0D8               	btfsc	status,0,c
 36168  00310A  D010               	goto	u11300
 36169                           
 36170                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 36171  00310C  0EC0               	movlw	low _buffer
 36172  00310E  2425               	addwf	fat_format@cntr,w,c
 36173  003110  6ED9               	movwf	fsr2l,c
 36174  003112  0E03               	movlw	high _buffer
 36175  003114  2026               	addwfc	fat_format@cntr+1,w,c
 36176  003116  6EDA               	movwf	fsr2h,c
 36177  003118  C025  F001         	movff	fat_format@cntr,__get_root@idx
 36178  00311C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 36179  003120  EC92  F01D         	call	__get_root	;wreg free
 36180  003124  6EDF               	movwf	indf2,c
 36181  003126  4A25               	infsnz	fat_format@cntr,f,c
 36182  003128  2A26               	incf	fat_format@cntr+1,f,c
 36183  00312A  D7EC               	goto	l14164
 36184  00312C                     u11300:
 36185                           
 36186                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 36187  00312C  0E00               	movlw	0
 36188  00312E  6E21               	movwf	flash_sector_write@page+1,c
 36189  003130  0E22               	movlw	34
 36190  003132  6E20               	movwf	flash_sector_write@page,c
 36191  003134  0EC0               	movlw	low _buffer
 36192  003136  6E22               	movwf	flash_sector_write@data,c
 36193  003138  0E03               	movlw	high _buffer
 36194  00313A  6E23               	movwf	flash_sector_write@data+1,c
 36195  00313C  EC9E  F049         	call	_flash_sector_write	;wreg free
 36196                           
 36197                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 36198  003140  0E00               	movlw	0
 36199  003142  6E26               	movwf	fat_format@cntr+1,c
 36200  003144  0E00               	movlw	0
 36201  003146  6E25               	movwf	fat_format@cntr,c
 36202  003148                     l14178:
 36203  003148  0E02               	movlw	2
 36204  00314A  5C26               	subwf	fat_format@cntr+1,w,c
 36205  00314C  B0D8               	btfsc	status,0,c
 36206  00314E  D00B               	goto	u11320
 36207                           
 36208                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 36209  003150  0EC0               	movlw	low _buffer
 36210  003152  2425               	addwf	fat_format@cntr,w,c
 36211  003154  6ED9               	movwf	fsr2l,c
 36212  003156  0E03               	movlw	high _buffer
 36213  003158  2026               	addwfc	fat_format@cntr+1,w,c
 36214  00315A  6EDA               	movwf	fsr2h,c
 36215  00315C  0E00               	movlw	0
 36216  00315E  6EDF               	movwf	indf2,c
 36217  003160  4A25               	infsnz	fat_format@cntr,f,c
 36218  003162  2A26               	incf	fat_format@cntr+1,f,c
 36219  003164  D7F1               	goto	l14178
 36220  003166                     u11320:
 36221                           
 36222                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 36223  003166  0E00               	movlw	0
 36224  003168  6E26               	movwf	fat_format@cntr+1,c
 36225  00316A  0E23               	movlw	35
 36226  00316C  6E25               	movwf	fat_format@cntr,c
 36227  00316E                     l14190:
 36228  00316E  5026               	movf	fat_format@cntr+1,w,c
 36229  003170  E111               	bnz	l14200
 36230  003172  0E26               	movlw	38
 36231  003174  5C25               	subwf	fat_format@cntr,w,c
 36232  003176  B0D8               	btfsc	status,0,c
 36233  003178  D00D               	goto	u11340
 36234                           
 36235                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 36236  00317A  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 36237  00317E  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 36238  003182  0EC0               	movlw	low _buffer
 36239  003184  6E22               	movwf	flash_sector_write@data,c
 36240  003186  0E03               	movlw	high _buffer
 36241  003188  6E23               	movwf	flash_sector_write@data+1,c
 36242  00318A  EC9E  F049         	call	_flash_sector_write	;wreg free
 36243  00318E  4A25               	infsnz	fat_format@cntr,f,c
 36244  003190  2A26               	incf	fat_format@cntr+1,f,c
 36245  003192  D7ED               	goto	l14190
 36246  003194                     u11340:
 36247  003194                     l14200:
 36248                           
 36249                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 36250  003194  0E00               	movlw	0
 36251  003196  6E26               	movwf	fat_format@cntr+1,c
 36252  003198  0E00               	movlw	0
 36253  00319A  6E25               	movwf	fat_format@cntr,c
 36254  00319C                     l14202:
 36255  00319C  0E02               	movlw	2
 36256  00319E  5C26               	subwf	fat_format@cntr+1,w,c
 36257  0031A0  B0D8               	btfsc	status,0,c
 36258  0031A2  D010               	goto	u11360
 36259                           
 36260                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 36261  0031A4  0EC0               	movlw	low _buffer
 36262  0031A6  2425               	addwf	fat_format@cntr,w,c
 36263  0031A8  6ED9               	movwf	fsr2l,c
 36264  0031AA  0E03               	movlw	high _buffer
 36265  0031AC  2026               	addwfc	fat_format@cntr+1,w,c
 36266  0031AE  6EDA               	movwf	fsr2h,c
 36267  0031B0  C025  F001         	movff	fat_format@cntr,__get_data@idx
 36268  0031B4  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 36269  0031B8  ECFA  F04E         	call	__get_data	;wreg free
 36270  0031BC  6EDF               	movwf	indf2,c
 36271  0031BE  4A25               	infsnz	fat_format@cntr,f,c
 36272  0031C0  2A26               	incf	fat_format@cntr+1,f,c
 36273  0031C2  D7EC               	goto	l14202
 36274  0031C4                     u11360:
 36275                           
 36276                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 36277  0031C4  0E00               	movlw	0
 36278  0031C6  6E21               	movwf	flash_sector_write@page+1,c
 36279  0031C8  0E26               	movlw	38
 36280  0031CA  6E20               	movwf	flash_sector_write@page,c
 36281  0031CC  0EC0               	movlw	low _buffer
 36282  0031CE  6E22               	movwf	flash_sector_write@data,c
 36283  0031D0  0E03               	movlw	high _buffer
 36284  0031D2  6E23               	movwf	flash_sector_write@data+1,c
 36285  0031D4  EC9E  F049         	call	_flash_sector_write	;wreg free
 36286                           
 36287                           ;fat16.c: 1379: return 0x00;
 36288  0031D8  0E00               	movlw	0
 36289  0031DA  0012               	return	
 36290  0031DC                     __end_of_fat_format:
 36291                           	opt stack 0
 36292                           tosu	equ	0xFFF
 36293                           tosh	equ	0xFFE
 36294                           tosl	equ	0xFFD
 36295                           pclath	equ	0xFFA
 36296                           tblptru	equ	0xFF8
 36297                           tblptrh	equ	0xFF7
 36298                           tblptrl	equ	0xFF6
 36299                           tablat	equ	0xFF5
 36300                           prodh	equ	0xFF4
 36301                           prodl	equ	0xFF3
 36302                           intcon	equ	0xFF2
 36303                           intcon2	equ	0xFF1
 36304                           intcon3	equ	0xFF0
 36305                           indf0	equ	0xFEF
 36306                           postinc0	equ	0xFEE
 36307                           fsr0h	equ	0xFEA
 36308                           fsr0l	equ	0xFE9
 36309                           wreg	equ	0xFE8
 36310                           indf1	equ	0xFE7
 36311                           postdec1	equ	0xFE5
 36312                           plusw1	equ	0xFE3
 36313                           fsr1h	equ	0xFE2
 36314                           fsr1l	equ	0xFE1
 36315                           indf2	equ	0xFDF
 36316                           postinc2	equ	0xFDE
 36317                           postdec2	equ	0xFDD
 36318                           plusw2	equ	0xFDB
 36319                           fsr2h	equ	0xFDA
 36320                           fsr2l	equ	0xFD9
 36321                           status	equ	0xFD8
 36322                           
 36323 ;; *************** function __get_root *****************
 36324 ;; Defined at:
 36325 ;;		line 1210 in file "fat16.c"
 36326 ;; Parameters:    Size  Location     Type
 36327 ;;  idx             2    0[COMRAM] unsigned int 
 36328 ;; Auto vars:     Size  Location     Type
 36329 ;;		None
 36330 ;; Return value:  Size  Location     Type
 36331 ;;                  1    wreg      unsigned char 
 36332 ;; Registers used:
 36333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36334 ;; Tracked objects:
 36335 ;;		On entry : 0/0
 36336 ;;		On exit  : 0/0
 36337 ;;		Unchanged: 0/0
 36338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36341 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36342 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36343 ;;Total ram usage:        6 bytes
 36344 ;; Hardware stack levels used:    1
 36345 ;; This function calls:
 36346 ;;		Nothing
 36347 ;; This function is called by:
 36348 ;;		_fat_format
 36349 ;; This function uses a non-reentrant model
 36350 ;;
 36351                           
 36352                           	psect	text179
 36353  003B24                     __ptext179:
 36354                           	opt stack 0
 36355  003B24                     __get_root:
 36356                           	opt stack 27
 36357                           
 36358                           ;fat16.c: 1212: if(idx < 0x20)
 36359                           
 36360                           ;incstack = 0
 36361  003B24  5002               	movf	__get_root@idx+1,w,c
 36362  003B26  E11D               	bnz	l13354
 36363  003B28  0E20               	movlw	32
 36364  003B2A  5C01               	subwf	__get_root@idx,w,c
 36365  003B2C  B0D8               	btfsc	status,0,c
 36366  003B2E  D019               	goto	l2247
 36367                           
 36368                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 36369  003B30  5002               	movf	__get_root@idx+1,w,c
 36370  003B32  E110               	bnz	l13348
 36371  003B34  0E0B               	movlw	11
 36372  003B36  5C01               	subwf	__get_root@idx,w,c
 36373  003B38  B0D8               	btfsc	status,0,c
 36374  003B3A  D00C               	goto	l2245
 36375                           
 36376                           ;fat16.c: 1215: {;fat16.c: 1216: return "SolarChargr"[idx];
 36377  003B3C  0EDC               	movlw	low STR_9
 36378  003B3E  2401               	addwf	__get_root@idx,w,c
 36379  003B40  6EF6               	movwf	tblptrl,c
 36380  003B42  0EBF               	movlw	high STR_9
 36381  003B44  2002               	addwfc	__get_root@idx+1,w,c
 36382  003B46  6EF7               	movwf	tblptrh,c
 36383  003B48                     	if	1	;There are 3 active tblptr bytes
 36384  003B48  6AF8               	clrf	tblptru,c
 36385  003B4A  0E00               	movlw	low (__mediumconst shr (0+16))
 36386  003B4C  22F8               	addwfc	tblptru,f,c
 36387  003B4E                     	endif
 36388  003B4E  0008               	tblrd		*
 36389  003B50  50F5               	movf	tablat,w,c
 36390  003B52  0012               	return	
 36391  003B54                     l2245:
 36392  003B54                     l13348:
 36393                           
 36394                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 36395  003B54  0E0B               	movlw	11
 36396  003B56  1801               	xorwf	__get_root@idx,w,c
 36397  003B58  1002               	iorwf	__get_root@idx+1,w,c
 36398  003B5A  A4D8               	btfss	status,2,c
 36399  003B5C  D002               	goto	l2247
 36400                           
 36401                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 36402  003B5E  0E08               	movlw	8
 36403  003B60  0012               	return	
 36404  003B62                     l2247:
 36405  003B62                     l13354:
 36406                           
 36407                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 36408  003B62  5002               	movf	__get_root@idx+1,w,c
 36409  003B64  E103               	bnz	u10321
 36410  003B66  0E40               	movlw	64
 36411  003B68  5C01               	subwf	__get_root@idx,w,c
 36412  003B6A  B0D8               	btfsc	status,0,c
 36413  003B6C                     u10321:
 36414  003B6C  D0A4               	goto	l2273
 36415                           
 36416                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 36417  003B6E  0E20               	movlw	32
 36418  003B70  5E01               	subwf	__get_root@idx,f,c
 36419  003B72  0E00               	movlw	0
 36420  003B74  5A02               	subwfb	__get_root@idx+1,f,c
 36421                           
 36422                           ;fat16.c: 1226: if(idx < 0+8)
 36423  003B76  5002               	movf	__get_root@idx+1,w,c
 36424  003B78  E110               	bnz	l13362
 36425  003B7A  0E08               	movlw	8
 36426  003B7C  5C01               	subwf	__get_root@idx,w,c
 36427  003B7E  B0D8               	btfsc	status,0,c
 36428  003B80  D00C               	goto	l2249
 36429                           
 36430                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 36431  003B82  0EE8               	movlw	low STR_10
 36432  003B84  2401               	addwf	__get_root@idx,w,c
 36433  003B86  6EF6               	movwf	tblptrl,c
 36434  003B88  0EBF               	movlw	high STR_10
 36435  003B8A  2002               	addwfc	__get_root@idx+1,w,c
 36436  003B8C  6EF7               	movwf	tblptrh,c
 36437  003B8E                     	if	1	;There are 3 active tblptr bytes
 36438  003B8E  6AF8               	clrf	tblptru,c
 36439  003B90  0E00               	movlw	low (__mediumconst shr (0+16))
 36440  003B92  22F8               	addwfc	tblptru,f,c
 36441  003B94                     	endif
 36442  003B94  0008               	tblrd		*
 36443  003B96  50F5               	movf	tablat,w,c
 36444  003B98  0012               	return	
 36445  003B9A                     l2249:
 36446  003B9A                     l13362:
 36447                           
 36448                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 36449  003B9A  5002               	movf	__get_root@idx+1,w,c
 36450  003B9C  E146               	bnz	l13454
 36451  003B9E  0E0B               	movlw	11
 36452  003BA0  5C01               	subwf	__get_root@idx,w,c
 36453  003BA2  B0D8               	btfsc	status,0,c
 36454  003BA4  D042               	goto	l2251
 36455                           
 36456                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 36457  003BA6  0EF8               	movlw	248
 36458  003BA8  6E03               	movwf	??__get_root& (0+255),c
 36459  003BAA  0EFF               	movlw	255
 36460  003BAC  6E04               	movwf	(??__get_root+1)& (0+255),c
 36461  003BAE  C001  F005         	movff	__get_root@idx,??__get_root+2
 36462  003BB2  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 36463  003BB6  5003               	movf	??__get_root,w,c
 36464  003BB8  2605               	addwf	??__get_root+2,f,c
 36465  003BBA  5004               	movf	??__get_root+1,w,c
 36466  003BBC  2206               	addwfc	??__get_root+3,f,c
 36467  003BBE  0EFA               	movlw	low STR_11
 36468  003BC0  2405               	addwf	??__get_root+2,w,c
 36469  003BC2  6EF6               	movwf	tblptrl,c
 36470  003BC4  0EBF               	movlw	high STR_11
 36471  003BC6  2006               	addwfc	??__get_root+3,w,c
 36472  003BC8  6EF7               	movwf	tblptrh,c
 36473  003BCA                     	if	1	;There are 3 active tblptr bytes
 36474  003BCA  6AF8               	clrf	tblptru,c
 36475  003BCC  0E00               	movlw	low (__mediumconst shr (0+16))
 36476  003BCE  22F8               	addwfc	tblptru,f,c
 36477  003BD0                     	endif
 36478  003BD0  0008               	tblrd		*
 36479  003BD2  50F5               	movf	tablat,w,c
 36480  003BD4  0012               	return	
 36481  003BD6                     
 36482                           ;fat16.c: 1237: return 0x20;
 36483  003BD6  0E20               	movlw	32
 36484  003BD8  0012               	return	
 36485  003BDA                     
 36486                           ;fat16.c: 1239: return 0x06;
 36487  003BDA  0E06               	movlw	6
 36488  003BDC  0012               	return	
 36489  003BDE                     
 36490                           ;fat16.c: 1241: return 0x28;
 36491  003BDE  0E28               	movlw	40
 36492  003BE0  0012               	return	
 36493  003BE2                     
 36494                           ;fat16.c: 1243: return 0x78;
 36495  003BE2  0E78               	movlw	120
 36496  003BE4  0012               	return	
 36497  003BE6                     
 36498                           ;fat16.c: 1245: return 0xDE;
 36499  003BE6  0EDE               	movlw	222
 36500  003BE8  0012               	return	
 36501  003BEA                     
 36502                           ;fat16.c: 1247: return 0x38;
 36503  003BEA  0E38               	movlw	56
 36504  003BEC  0012               	return	
 36505  003BEE                     
 36506                           ;fat16.c: 1249: return 0x5F;
 36507  003BEE  0E5F               	movlw	95
 36508  003BF0  0012               	return	
 36509  003BF2                     
 36510                           ;fat16.c: 1251: return 0x4B;
 36511  003BF2  0E4B               	movlw	75
 36512  003BF4  0012               	return	
 36513  003BF6                     
 36514                           ;fat16.c: 1253: return 0x00;
 36515  003BF6  0E00               	movlw	0
 36516  003BF8  0012               	return	
 36517  003BFA                     
 36518                           ;fat16.c: 1255: return 0x00;
 36519  003BFA  0E00               	movlw	0
 36520  003BFC  0012               	return	
 36521  003BFE                     
 36522                           ;fat16.c: 1257: return 0x04;
 36523  003BFE  0E04               	movlw	4
 36524  003C00  0012               	return	
 36525  003C02                     
 36526                           ;fat16.c: 1259: return 0x77;
 36527  003C02  0E77               	movlw	119
 36528  003C04  0012               	return	
 36529  003C06                     
 36530                           ;fat16.c: 1261: return 0xDE;
 36531  003C06  0EDE               	movlw	222
 36532  003C08  0012               	return	
 36533  003C0A                     
 36534                           ;fat16.c: 1263: return 0x38;
 36535  003C0A  0E38               	movlw	56
 36536  003C0C  0012               	return	
 36537  003C0E                     
 36538                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 36539  003C0E  0E02               	movlw	2
 36540  003C10  0012               	return	
 36541  003C12                     
 36542                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 36543  003C12  0E00               	movlw	0
 36544  003C14  0012               	return	
 36545  003C16                     
 36546                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 36547  003C16  0E0C               	movlw	12
 36548  003C18  0012               	return	
 36549  003C1A                     
 36550                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 36551  003C1A  0E00               	movlw	0
 36552  003C1C  0012               	return	
 36553  003C1E                     
 36554                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 36555  003C1E  0E00               	movlw	0
 36556  003C20  0012               	return	
 36557  003C22                     
 36558                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 36559  003C22  0E00               	movlw	0
 36560  003C24  0012               	return	
 36561  003C26                     
 36562                           ;fat16.c: 1277: return 0x00;
 36563  003C26  0E00               	movlw	0
 36564  003C28  0012               	return	
 36565  003C2A                     l2251:
 36566  003C2A                     l13454:
 36567  003C2A  C001  F003         	movff	__get_root@idx,??__get_root
 36568  003C2E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 36569                           
 36570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36571                           ; Switch size 1, requested type "space"
 36572                           ; Number of cases is 1, Range of values is 0 to 0
 36573                           ; switch strategies available:
 36574                           ; Name         Instructions Cycles
 36575                           ; simple_byte            4     3 (average)
 36576                           ;	Chosen strategy is simple_byte
 36577  003C32  5004               	movf	??__get_root+1,w,c
 36578  003C34  0A00               	xorlw	0	; case 0
 36579  003C36  A4D8               	btfss	status,2,c
 36580  003C38  D7F6               	goto	l2272
 36581                           
 36582                           ; Switch size 1, requested type "space"
 36583                           ; Number of cases is 20, Range of values is 11 to 31
 36584                           ; switch strategies available:
 36585                           ; Name         Instructions Cycles
 36586                           ; simple_byte           61    31 (average)
 36587                           ;	Chosen strategy is simple_byte
 36588  003C3A  5003               	movf	??__get_root,w,c
 36589  003C3C  0A0B               	xorlw	11	; case 11
 36590  003C3E  B4D8               	btfsc	status,2,c
 36591  003C40  D7CA               	goto	l2252
 36592  003C42  0A06               	xorlw	6	; case 13
 36593  003C44  B4D8               	btfsc	status,2,c
 36594  003C46  D7C9               	goto	l2253
 36595  003C48  0A03               	xorlw	3	; case 14
 36596  003C4A  B4D8               	btfsc	status,2,c
 36597  003C4C  D7C8               	goto	l2254
 36598  003C4E  0A01               	xorlw	1	; case 15
 36599  003C50  B4D8               	btfsc	status,2,c
 36600  003C52  D7C7               	goto	l2255
 36601  003C54  0A1F               	xorlw	31	; case 16
 36602  003C56  B4D8               	btfsc	status,2,c
 36603  003C58  D7C6               	goto	l2256
 36604  003C5A  0A01               	xorlw	1	; case 17
 36605  003C5C  B4D8               	btfsc	status,2,c
 36606  003C5E  D7C5               	goto	l2257
 36607  003C60  0A03               	xorlw	3	; case 18
 36608  003C62  B4D8               	btfsc	status,2,c
 36609  003C64  D7C4               	goto	l2258
 36610  003C66  0A01               	xorlw	1	; case 19
 36611  003C68  B4D8               	btfsc	status,2,c
 36612  003C6A  D7C3               	goto	l2259
 36613  003C6C  0A07               	xorlw	7	; case 20
 36614  003C6E  B4D8               	btfsc	status,2,c
 36615  003C70  D7C2               	goto	l2260
 36616  003C72  0A01               	xorlw	1	; case 21
 36617  003C74  B4D8               	btfsc	status,2,c
 36618  003C76  D7C1               	goto	l2261
 36619  003C78  0A03               	xorlw	3	; case 22
 36620  003C7A  B4D8               	btfsc	status,2,c
 36621  003C7C  D7C0               	goto	l2262
 36622  003C7E  0A01               	xorlw	1	; case 23
 36623  003C80  B4D8               	btfsc	status,2,c
 36624  003C82  D7BF               	goto	l2263
 36625  003C84  0A0F               	xorlw	15	; case 24
 36626  003C86  B4D8               	btfsc	status,2,c
 36627  003C88  D7BE               	goto	l2264
 36628  003C8A  0A01               	xorlw	1	; case 25
 36629  003C8C  B4D8               	btfsc	status,2,c
 36630  003C8E  D7BD               	goto	l2265
 36631  003C90  0A03               	xorlw	3	; case 26
 36632  003C92  B4D8               	btfsc	status,2,c
 36633  003C94  D7BC               	goto	l2266
 36634  003C96  0A01               	xorlw	1	; case 27
 36635  003C98  B4D8               	btfsc	status,2,c
 36636  003C9A  D7BB               	goto	l2267
 36637  003C9C  0A07               	xorlw	7	; case 28
 36638  003C9E  B4D8               	btfsc	status,2,c
 36639  003CA0  D7BA               	goto	l2268
 36640  003CA2  0A01               	xorlw	1	; case 29
 36641  003CA4  B4D8               	btfsc	status,2,c
 36642  003CA6  D7B9               	goto	l2269
 36643  003CA8  0A03               	xorlw	3	; case 30
 36644  003CAA  B4D8               	btfsc	status,2,c
 36645  003CAC  D7B8               	goto	l2270
 36646  003CAE  0A01               	xorlw	1	; case 31
 36647  003CB0  B4D8               	btfsc	status,2,c
 36648  003CB2  D7B7               	goto	l2271
 36649  003CB4  D7B8               	goto	l2272
 36650  003CB6                     l2273:
 36651                           
 36652                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 36653  003CB6  0E00               	movlw	0
 36654  003CB8  0012               	return	
 36655  003CBA                     __end_of__get_root:
 36656                           	opt stack 0
 36657                           tosu	equ	0xFFF
 36658                           tosh	equ	0xFFE
 36659                           tosl	equ	0xFFD
 36660                           pclath	equ	0xFFA
 36661                           tblptru	equ	0xFF8
 36662                           tblptrh	equ	0xFF7
 36663                           tblptrl	equ	0xFF6
 36664                           tablat	equ	0xFF5
 36665                           prodh	equ	0xFF4
 36666                           prodl	equ	0xFF3
 36667                           intcon	equ	0xFF2
 36668                           intcon2	equ	0xFF1
 36669                           intcon3	equ	0xFF0
 36670                           indf0	equ	0xFEF
 36671                           postinc0	equ	0xFEE
 36672                           fsr0h	equ	0xFEA
 36673                           fsr0l	equ	0xFE9
 36674                           wreg	equ	0xFE8
 36675                           indf1	equ	0xFE7
 36676                           postdec1	equ	0xFE5
 36677                           plusw1	equ	0xFE3
 36678                           fsr1h	equ	0xFE2
 36679                           fsr1l	equ	0xFE1
 36680                           indf2	equ	0xFDF
 36681                           postinc2	equ	0xFDE
 36682                           postdec2	equ	0xFDD
 36683                           plusw2	equ	0xFDB
 36684                           fsr2h	equ	0xFDA
 36685                           fsr2l	equ	0xFD9
 36686                           status	equ	0xFD8
 36687                           
 36688 ;; *************** function __get_mbr *****************
 36689 ;; Defined at:
 36690 ;;		line 1037 in file "fat16.c"
 36691 ;; Parameters:    Size  Location     Type
 36692 ;;  idx             2    0[COMRAM] unsigned int 
 36693 ;; Auto vars:     Size  Location     Type
 36694 ;;		None
 36695 ;; Return value:  Size  Location     Type
 36696 ;;                  1    wreg      unsigned char 
 36697 ;; Registers used:
 36698 ;;		wreg, status,2, status,0
 36699 ;; Tracked objects:
 36700 ;;		On entry : 0/0
 36701 ;;		On exit  : 0/0
 36702 ;;		Unchanged: 0/0
 36703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36708 ;;Total ram usage:        4 bytes
 36709 ;; Hardware stack levels used:    1
 36710 ;; This function calls:
 36711 ;;		Nothing
 36712 ;; This function is called by:
 36713 ;;		_fat_get_format_status
 36714 ;;		_fat_format
 36715 ;; This function uses a non-reentrant model
 36716 ;;
 36717                           
 36718                           	psect	text180
 36719  006C7E                     __ptext180:
 36720                           	opt stack 0
 36721  006C7E                     __get_mbr:
 36722                           	opt stack 27
 36723                           
 36724                           ;fat16.c: 1039: switch (idx)
 36725                           
 36726                           ;incstack = 0
 36727  006C7E  D026               	goto	l2154
 36728  006C80                     
 36729                           ;fat16.c: 1042: return 0x80;
 36730  006C80  0E80               	movlw	128
 36731  006C82  0012               	return	
 36732  006C84                     
 36733                           ;fat16.c: 1044: return 0;
 36734  006C84  0E00               	movlw	0
 36735  006C86  0012               	return	
 36736  006C88                     
 36737                           ;fat16.c: 1046: return 2;
 36738  006C88  0E02               	movlw	2
 36739  006C8A  0012               	return	
 36740  006C8C                     
 36741                           ;fat16.c: 1048: return 0;
 36742  006C8C  0E00               	movlw	0
 36743  006C8E  0012               	return	
 36744  006C90                     
 36745                           ;fat16.c: 1050: return 0x04;
 36746  006C90  0E04               	movlw	4
 36747  006C92  0012               	return	
 36748  006C94                     
 36749                           ;fat16.c: 1052: return 2;
 36750  006C94  0E02               	movlw	2
 36751  006C96  0012               	return	
 36752  006C98                     
 36753                           ;fat16.c: 1054: return 3;
 36754  006C98  0E03               	movlw	3
 36755  006C9A  0012               	return	
 36756  006C9C                     
 36757                           ;fat16.c: 1056: return 8;
 36758  006C9C  0E08               	movlw	8
 36759  006C9E  0012               	return	
 36760  006CA0                     
 36761                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 36762  006CA0  0E01               	movlw	1
 36763  006CA2  0012               	return	
 36764  006CA4                     
 36765                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 36766  006CA4  0E00               	movlw	0
 36767  006CA6  0012               	return	
 36768  006CA8                     
 36769                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 36770  006CA8  0E00               	movlw	0
 36771  006CAA  0012               	return	
 36772  006CAC                     
 36773                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 36774  006CAC  0E00               	movlw	0
 36775  006CAE  0012               	return	
 36776  006CB0                     
 36777                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 36778  006CB0  0EFF               	movlw	255
 36779  006CB2  0012               	return	
 36780  006CB4                     
 36781                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 36782  006CB4  0E1F               	movlw	31
 36783  006CB6  0012               	return	
 36784  006CB8                     
 36785                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 36786  006CB8  0E00               	movlw	0
 36787  006CBA  0012               	return	
 36788  006CBC                     
 36789                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 36790  006CBC  0E00               	movlw	0
 36791  006CBE  0012               	return	
 36792  006CC0                     
 36793                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 36794  006CC0  0E55               	movlw	85
 36795  006CC2  0012               	return	
 36796  006CC4                     
 36797                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 36798  006CC4  0EAA               	movlw	170
 36799  006CC6  0012               	return	
 36800  006CC8                     
 36801                           ;fat16.c: 1078: return 0X00;
 36802  006CC8  0E00               	movlw	0
 36803                           
 36804                           ;fat16.c: 1079: }
 36805  006CCA  0012               	return	
 36806  006CCC                     l2154:
 36807  006CCC  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 36808  006CD0  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 36809                           
 36810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36811                           ; Switch size 1, requested type "space"
 36812                           ; Number of cases is 1, Range of values is 1 to 1
 36813                           ; switch strategies available:
 36814                           ; Name         Instructions Cycles
 36815                           ; simple_byte            4     3 (average)
 36816                           ;	Chosen strategy is simple_byte
 36817  006CD4  5004               	movf	??__get_mbr+1,w,c
 36818  006CD6  0A01               	xorlw	1	; case 1
 36819  006CD8  A4D8               	btfss	status,2,c
 36820  006CDA  D7F6               	goto	l2174
 36821                           
 36822                           ; Switch size 1, requested type "space"
 36823                           ; Number of cases is 18, Range of values is 190 to 255
 36824                           ; switch strategies available:
 36825                           ; Name         Instructions Cycles
 36826                           ; simple_byte           55    28 (average)
 36827                           ;	Chosen strategy is simple_byte
 36828  006CDC  5003               	movf	??__get_mbr,w,c
 36829  006CDE  0ABE               	xorlw	190	; case 190
 36830  006CE0  B4D8               	btfsc	status,2,c
 36831  006CE2  D7CE               	goto	l2155
 36832  006CE4  0A01               	xorlw	1	; case 191
 36833  006CE6  B4D8               	btfsc	status,2,c
 36834  006CE8  D7CD               	goto	l2157
 36835  006CEA  0A7F               	xorlw	127	; case 192
 36836  006CEC  B4D8               	btfsc	status,2,c
 36837  006CEE  D7CC               	goto	l2158
 36838  006CF0  0A01               	xorlw	1	; case 193
 36839  006CF2  B4D8               	btfsc	status,2,c
 36840  006CF4  D7CB               	goto	l2159
 36841  006CF6  0A03               	xorlw	3	; case 194
 36842  006CF8  B4D8               	btfsc	status,2,c
 36843  006CFA  D7CA               	goto	l2160
 36844  006CFC  0A01               	xorlw	1	; case 195
 36845  006CFE  B4D8               	btfsc	status,2,c
 36846  006D00  D7C9               	goto	l2161
 36847  006D02  0A07               	xorlw	7	; case 196
 36848  006D04  B4D8               	btfsc	status,2,c
 36849  006D06  D7C8               	goto	l2162
 36850  006D08  0A01               	xorlw	1	; case 197
 36851  006D0A  B4D8               	btfsc	status,2,c
 36852  006D0C  D7C7               	goto	l2163
 36853  006D0E  0A03               	xorlw	3	; case 198
 36854  006D10  B4D8               	btfsc	status,2,c
 36855  006D12  D7C6               	goto	l2164
 36856  006D14  0A01               	xorlw	1	; case 199
 36857  006D16  B4D8               	btfsc	status,2,c
 36858  006D18  D7C5               	goto	l2165
 36859  006D1A  0A0F               	xorlw	15	; case 200
 36860  006D1C  B4D8               	btfsc	status,2,c
 36861  006D1E  D7C4               	goto	l2166
 36862  006D20  0A01               	xorlw	1	; case 201
 36863  006D22  B4D8               	btfsc	status,2,c
 36864  006D24  D7C3               	goto	l2167
 36865  006D26  0A03               	xorlw	3	; case 202
 36866  006D28  B4D8               	btfsc	status,2,c
 36867  006D2A  D7C2               	goto	l2168
 36868  006D2C  0A01               	xorlw	1	; case 203
 36869  006D2E  B4D8               	btfsc	status,2,c
 36870  006D30  D7C1               	goto	l2169
 36871  006D32  0A07               	xorlw	7	; case 204
 36872  006D34  B4D8               	btfsc	status,2,c
 36873  006D36  D7C0               	goto	l2170
 36874  006D38  0A01               	xorlw	1	; case 205
 36875  006D3A  B4D8               	btfsc	status,2,c
 36876  006D3C  D7BF               	goto	l2171
 36877  006D3E  0A33               	xorlw	51	; case 254
 36878  006D40  B4D8               	btfsc	status,2,c
 36879  006D42  D7BE               	goto	l2172
 36880  006D44  0A01               	xorlw	1	; case 255
 36881  006D46  B4D8               	btfsc	status,2,c
 36882  006D48  D7BD               	goto	l2173
 36883  006D4A  D7BE               	goto	l2174
 36884  006D4C                     __end_of__get_mbr:
 36885                           	opt stack 0
 36886                           tosu	equ	0xFFF
 36887                           tosh	equ	0xFFE
 36888                           tosl	equ	0xFFD
 36889                           pclath	equ	0xFFA
 36890                           tblptru	equ	0xFF8
 36891                           tblptrh	equ	0xFF7
 36892                           tblptrl	equ	0xFF6
 36893                           tablat	equ	0xFF5
 36894                           prodh	equ	0xFF4
 36895                           prodl	equ	0xFF3
 36896                           intcon	equ	0xFF2
 36897                           intcon2	equ	0xFF1
 36898                           intcon3	equ	0xFF0
 36899                           indf0	equ	0xFEF
 36900                           postinc0	equ	0xFEE
 36901                           fsr0h	equ	0xFEA
 36902                           fsr0l	equ	0xFE9
 36903                           wreg	equ	0xFE8
 36904                           indf1	equ	0xFE7
 36905                           postdec1	equ	0xFE5
 36906                           plusw1	equ	0xFE3
 36907                           fsr1h	equ	0xFE2
 36908                           fsr1l	equ	0xFE1
 36909                           indf2	equ	0xFDF
 36910                           postinc2	equ	0xFDE
 36911                           postdec2	equ	0xFDD
 36912                           plusw2	equ	0xFDB
 36913                           fsr2h	equ	0xFDA
 36914                           fsr2l	equ	0xFD9
 36915                           status	equ	0xFD8
 36916                           
 36917 ;; *************** function __get_fbr *****************
 36918 ;; Defined at:
 36919 ;;		line 1082 in file "fat16.c"
 36920 ;; Parameters:    Size  Location     Type
 36921 ;;  idx             2    0[COMRAM] unsigned int 
 36922 ;; Auto vars:     Size  Location     Type
 36923 ;;		None
 36924 ;; Return value:  Size  Location     Type
 36925 ;;                  1    wreg      unsigned char 
 36926 ;; Registers used:
 36927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36928 ;; Tracked objects:
 36929 ;;		On entry : 0/0
 36930 ;;		On exit  : 0/0
 36931 ;;		Unchanged: 0/0
 36932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36937 ;;Total ram usage:        4 bytes
 36938 ;; Hardware stack levels used:    1
 36939 ;; This function calls:
 36940 ;;		Nothing
 36941 ;; This function is called by:
 36942 ;;		_fat_get_format_status
 36943 ;;		_fat_format
 36944 ;; This function uses a non-reentrant model
 36945 ;;
 36946                           
 36947                           	psect	text181
 36948  0022A0                     __ptext181:
 36949                           	opt stack 0
 36950  0022A0                     __get_fbr:
 36951                           	opt stack 27
 36952                           
 36953                           ;fat16.c: 1084: switch (idx)
 36954                           
 36955                           ;incstack = 0
 36956  0022A0  D091               	goto	l2178
 36957  0022A2                     
 36958                           ;fat16.c: 1087: return 0xEB;
 36959  0022A2  0EEB               	movlw	235
 36960  0022A4  0012               	return	
 36961  0022A6                     
 36962                           ;fat16.c: 1089: return 0x3C;
 36963  0022A6  0E3C               	movlw	60
 36964  0022A8  0012               	return	
 36965  0022AA                     
 36966                           ;fat16.c: 1091: return 0x90;
 36967  0022AA  0E90               	movlw	144
 36968  0022AC  0012               	return	
 36969  0022AE                     
 36970                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 36971  0022AE  0EF1               	movlw	low STR_1
 36972  0022B0  6EF6               	movwf	tblptrl,c
 36973  0022B2                     	if	1	;There is more than 1 active tblptr byte
 36974  0022B2  0EBF               	movlw	high STR_1
 36975  0022B4  6EF7               	movwf	tblptrh,c
 36976  0022B6                     	endif
 36977  0022B6                     	if	1	;There are 3 active tblptr bytes
 36978  0022B6  0E00               	movlw	low (STR_1 shr (0+16))
 36979  0022B8  6EF8               	movwf	tblptru,c
 36980  0022BA                     	endif
 36981  0022BA  0008               	tblrd		*
 36982  0022BC  50F5               	movf	tablat,w,c
 36983  0022BE  0012               	return	
 36984  0022C0                     
 36985                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 36986  0022C0  0EF2               	movlw	low (STR_1+1)
 36987  0022C2  6EF6               	movwf	tblptrl,c
 36988  0022C4  0EBF               	movlw	high (STR_1+1)
 36989  0022C6  6EF7               	movwf	tblptrh,c
 36990  0022C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36991  0022C8  6AF8               	clrf	tblptru,c
 36992  0022CA                     	endif
 36993  0022CA                     	if	0	;tblptru may be non-zero
 36994  0022CA                     	endif
 36995  0022CA  0008               	tblrd		*
 36996  0022CC  50F5               	movf	tablat,w,c
 36997  0022CE  0012               	return	
 36998  0022D0                     
 36999                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 37000  0022D0  0EF3               	movlw	low (STR_1+2)
 37001  0022D2  6EF6               	movwf	tblptrl,c
 37002  0022D4  0EBF               	movlw	high (STR_1+2)
 37003  0022D6  6EF7               	movwf	tblptrh,c
 37004  0022D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37005  0022D8  6AF8               	clrf	tblptru,c
 37006  0022DA                     	endif
 37007  0022DA                     	if	0	;tblptru may be non-zero
 37008  0022DA                     	endif
 37009  0022DA  0008               	tblrd		*
 37010  0022DC  50F5               	movf	tablat,w,c
 37011  0022DE  0012               	return	
 37012  0022E0                     
 37013                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 37014  0022E0  0EF4               	movlw	low (STR_1+3)
 37015  0022E2  6EF6               	movwf	tblptrl,c
 37016  0022E4  0EBF               	movlw	high (STR_1+3)
 37017  0022E6  6EF7               	movwf	tblptrh,c
 37018  0022E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37019  0022E8  6AF8               	clrf	tblptru,c
 37020  0022EA                     	endif
 37021  0022EA                     	if	0	;tblptru may be non-zero
 37022  0022EA                     	endif
 37023  0022EA  0008               	tblrd		*
 37024  0022EC  50F5               	movf	tablat,w,c
 37025  0022EE  0012               	return	
 37026  0022F0                     
 37027                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 37028  0022F0  0EF5               	movlw	low (STR_1+4)
 37029  0022F2  6EF6               	movwf	tblptrl,c
 37030  0022F4  0EBF               	movlw	high (STR_1+4)
 37031  0022F6  6EF7               	movwf	tblptrh,c
 37032  0022F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37033  0022F8  6AF8               	clrf	tblptru,c
 37034  0022FA                     	endif
 37035  0022FA                     	if	0	;tblptru may be non-zero
 37036  0022FA                     	endif
 37037  0022FA  0008               	tblrd		*
 37038  0022FC  50F5               	movf	tablat,w,c
 37039  0022FE  0012               	return	
 37040  002300                     
 37041                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 37042  002300  0EF6               	movlw	low (STR_1+5)
 37043  002302  6EF6               	movwf	tblptrl,c
 37044  002304  0EBF               	movlw	high (STR_1+5)
 37045  002306  6EF7               	movwf	tblptrh,c
 37046  002308                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37047  002308  6AF8               	clrf	tblptru,c
 37048  00230A                     	endif
 37049  00230A                     	if	0	;tblptru may be non-zero
 37050  00230A                     	endif
 37051  00230A  0008               	tblrd		*
 37052  00230C  50F5               	movf	tablat,w,c
 37053  00230E  0012               	return	
 37054  002310                     
 37055                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 37056  002310  0EF7               	movlw	low (STR_1+6)
 37057  002312  6EF6               	movwf	tblptrl,c
 37058  002314  0EBF               	movlw	high (STR_1+6)
 37059  002316  6EF7               	movwf	tblptrh,c
 37060  002318                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37061  002318  6AF8               	clrf	tblptru,c
 37062  00231A                     	endif
 37063  00231A                     	if	0	;tblptru may be non-zero
 37064  00231A                     	endif
 37065  00231A  0008               	tblrd		*
 37066  00231C  50F5               	movf	tablat,w,c
 37067  00231E  0012               	return	
 37068  002320                     
 37069                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 37070  002320  0EF8               	movlw	low (STR_1+7)
 37071  002322  6EF6               	movwf	tblptrl,c
 37072  002324  0EBF               	movlw	high (STR_1+7)
 37073  002326  6EF7               	movwf	tblptrh,c
 37074  002328                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37075  002328  6AF8               	clrf	tblptru,c
 37076  00232A                     	endif
 37077  00232A                     	if	0	;tblptru may be non-zero
 37078  00232A                     	endif
 37079  00232A  0008               	tblrd		*
 37080  00232C  50F5               	movf	tablat,w,c
 37081  00232E  0012               	return	
 37082  002330                     
 37083                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 37084  002330  0E00               	movlw	0
 37085  002332  0012               	return	
 37086  002334                     
 37087                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 37088  002334  0E02               	movlw	2
 37089  002336  0012               	return	
 37090  002338                     
 37091                           ;fat16.c: 1113: return 1;
 37092  002338  0E01               	movlw	1
 37093  00233A  0012               	return	
 37094  00233C                     
 37095                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 37096  00233C  0E01               	movlw	1
 37097  00233E  0012               	return	
 37098  002340                     
 37099                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 37100  002340  0E00               	movlw	0
 37101  002342  0012               	return	
 37102  002344                     
 37103                           ;fat16.c: 1119: return 1;
 37104  002344  0E01               	movlw	1
 37105  002346  0012               	return	
 37106  002348                     
 37107                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 37108  002348  0E40               	movlw	64
 37109  00234A  0012               	return	
 37110  00234C                     
 37111                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 37112  00234C  0E00               	movlw	0
 37113  00234E  0012               	return	
 37114  002350                     
 37115                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 37116  002350  0EFF               	movlw	255
 37117  002352  0012               	return	
 37118  002354                     
 37119                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 37120  002354  0E1F               	movlw	31
 37121  002356  0012               	return	
 37122  002358                     
 37123                           ;fat16.c: 1129: return 0XF8;
 37124  002358  0EF8               	movlw	248
 37125  00235A  0012               	return	
 37126  00235C                     
 37127                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 37128  00235C  0E20               	movlw	32
 37129  00235E  0012               	return	
 37130  002360                     
 37131                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 37132  002360  0E00               	movlw	0
 37133  002362  0012               	return	
 37134  002364                     
 37135                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 37136  002364  0E3F               	movlw	63
 37137  002366  0012               	return	
 37138  002368                     
 37139                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 37140  002368  0E00               	movlw	0
 37141  00236A  0012               	return	
 37142  00236C                     
 37143                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 37144  00236C  0E10               	movlw	16
 37145  00236E  0012               	return	
 37146  002370                     
 37147                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 37148  002370  0E00               	movlw	0
 37149  002372  0012               	return	
 37150  002374                     
 37151                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 37152  002374  0E00               	movlw	0
 37153  002376  0012               	return	
 37154  002378                     
 37155                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 37156  002378  0E00               	movlw	0
 37157  00237A  0012               	return	
 37158  00237C                     
 37159                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 37160  00237C  0E00               	movlw	0
 37161  00237E  0012               	return	
 37162  002380                     
 37163                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 37164  002380  0E00               	movlw	0
 37165  002382  0012               	return	
 37166  002384                     
 37167                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 37168  002384  0E01               	movlw	1
 37169  002386  0012               	return	
 37170  002388                     
 37171                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 37172  002388  0E00               	movlw	0
 37173  00238A  0012               	return	
 37174  00238C                     
 37175                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 37176  00238C  0E22               	movlw	34
 37177  00238E  0012               	return	
 37178  002390                     
 37179                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 37180  002390  0E00               	movlw	0
 37181  002392  0012               	return	
 37182  002394                     
 37183                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 37184                           
 37185                           ;fat16.c: 1160: case 0x2F:
 37186  002394  0E00               	movlw	0
 37187  002396  0012               	return	
 37188  002398                     
 37189                           ;fat16.c: 1163: return 'F';
 37190  002398  0E46               	movlw	70
 37191  00239A  0012               	return	
 37192  00239C                     
 37193                           ;fat16.c: 1165: return 'A';
 37194  00239C  0E41               	movlw	65
 37195  00239E  0012               	return	
 37196  0023A0                     
 37197                           ;fat16.c: 1167: return 'T';
 37198  0023A0  0E54               	movlw	84
 37199  0023A2  0012               	return	
 37200  0023A4                     
 37201                           ;fat16.c: 1169: return '1';
 37202  0023A4  0E31               	movlw	49
 37203  0023A6  0012               	return	
 37204  0023A8                     
 37205                           ;fat16.c: 1171: return '6';
 37206  0023A8  0E36               	movlw	54
 37207  0023AA  0012               	return	
 37208  0023AC                     
 37209                           ;fat16.c: 1173: return ' ';
 37210  0023AC  0E20               	movlw	32
 37211  0023AE  0012               	return	
 37212  0023B0                     
 37213                           ;fat16.c: 1175: return ' ';
 37214  0023B0  0E20               	movlw	32
 37215  0023B2  0012               	return	
 37216  0023B4                     
 37217                           ;fat16.c: 1177: return ' ';
 37218  0023B4  0E20               	movlw	32
 37219  0023B6  0012               	return	
 37220  0023B8                     
 37221                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 37222  0023B8  0E55               	movlw	85
 37223  0023BA  0012               	return	
 37224  0023BC                     
 37225                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 37226  0023BC  0EAA               	movlw	170
 37227  0023BE  0012               	return	
 37228  0023C0                     
 37229                           ;fat16.c: 1183: return 0X00;
 37230  0023C0  0E00               	movlw	0
 37231                           
 37232                           ;fat16.c: 1184: }
 37233  0023C2  0012               	return	
 37234  0023C4                     l2178:
 37235  0023C4  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 37236  0023C8  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 37237                           
 37238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 37239                           ; Switch size 1, requested type "space"
 37240                           ; Number of cases is 2, Range of values is 0 to 1
 37241                           ; switch strategies available:
 37242                           ; Name         Instructions Cycles
 37243                           ; simple_byte            7     4 (average)
 37244                           ;	Chosen strategy is simple_byte
 37245  0023CC  5004               	movf	??__get_fbr+1,w,c
 37246  0023CE  0A00               	xorlw	0	; case 0
 37247  0023D0  B4D8               	btfsc	status,2,c
 37248  0023D2  D004               	goto	l17280
 37249  0023D4  0A01               	xorlw	1	; case 1
 37250  0023D6  B4D8               	btfsc	status,2,c
 37251  0023D8  D08D               	goto	l17282
 37252  0023DA  D7F2               	goto	l2228
 37253  0023DC                     l17280:
 37254                           
 37255                           ; Switch size 1, requested type "space"
 37256                           ; Number of cases is 46, Range of values is 0 to 61
 37257                           ; switch strategies available:
 37258                           ; Name         Instructions Cycles
 37259                           ; simple_byte          139    70 (average)
 37260                           ;	Chosen strategy is simple_byte
 37261  0023DC  5003               	movf	??__get_fbr,w,c
 37262  0023DE  0A00               	xorlw	0	; case 0
 37263  0023E0  B4D8               	btfsc	status,2,c
 37264  0023E2  D75F               	goto	l2179
 37265  0023E4  0A01               	xorlw	1	; case 1
 37266  0023E6  B4D8               	btfsc	status,2,c
 37267  0023E8  D75E               	goto	l2181
 37268  0023EA  0A03               	xorlw	3	; case 2
 37269  0023EC  B4D8               	btfsc	status,2,c
 37270  0023EE  D75D               	goto	l2182
 37271  0023F0  0A01               	xorlw	1	; case 3
 37272  0023F2  B4D8               	btfsc	status,2,c
 37273  0023F4  D75C               	goto	l2183
 37274  0023F6  0A07               	xorlw	7	; case 4
 37275  0023F8  B4D8               	btfsc	status,2,c
 37276  0023FA  D762               	goto	l2184
 37277  0023FC  0A01               	xorlw	1	; case 5
 37278  0023FE  B4D8               	btfsc	status,2,c
 37279  002400  D767               	goto	l2185
 37280  002402  0A03               	xorlw	3	; case 6
 37281  002404  B4D8               	btfsc	status,2,c
 37282  002406  D76C               	goto	l2186
 37283  002408  0A01               	xorlw	1	; case 7
 37284  00240A  B4D8               	btfsc	status,2,c
 37285  00240C  D771               	goto	l2187
 37286  00240E  0A0F               	xorlw	15	; case 8
 37287  002410  B4D8               	btfsc	status,2,c
 37288  002412  D776               	goto	l2188
 37289  002414  0A01               	xorlw	1	; case 9
 37290  002416  B4D8               	btfsc	status,2,c
 37291  002418  D77B               	goto	l2189
 37292  00241A  0A03               	xorlw	3	; case 10
 37293  00241C  B4D8               	btfsc	status,2,c
 37294  00241E  D780               	goto	l2190
 37295  002420  0A01               	xorlw	1	; case 11
 37296  002422  B4D8               	btfsc	status,2,c
 37297  002424  D785               	goto	l2191
 37298  002426  0A07               	xorlw	7	; case 12
 37299  002428  B4D8               	btfsc	status,2,c
 37300  00242A  D784               	goto	l2192
 37301  00242C  0A01               	xorlw	1	; case 13
 37302  00242E  B4D8               	btfsc	status,2,c
 37303  002430  D783               	goto	l2193
 37304  002432  0A03               	xorlw	3	; case 14
 37305  002434  B4D8               	btfsc	status,2,c
 37306  002436  D782               	goto	l2194
 37307  002438  0A01               	xorlw	1	; case 15
 37308  00243A  B4D8               	btfsc	status,2,c
 37309  00243C  D781               	goto	l2195
 37310  00243E  0A1F               	xorlw	31	; case 16
 37311  002440  B4D8               	btfsc	status,2,c
 37312  002442  D780               	goto	l2196
 37313  002444  0A01               	xorlw	1	; case 17
 37314  002446  B4D8               	btfsc	status,2,c
 37315  002448  D77F               	goto	l2197
 37316  00244A  0A03               	xorlw	3	; case 18
 37317  00244C  B4D8               	btfsc	status,2,c
 37318  00244E  D77E               	goto	l2198
 37319  002450  0A01               	xorlw	1	; case 19
 37320  002452  B4D8               	btfsc	status,2,c
 37321  002454  D77D               	goto	l2199
 37322  002456  0A07               	xorlw	7	; case 20
 37323  002458  B4D8               	btfsc	status,2,c
 37324  00245A  D77C               	goto	l2200
 37325  00245C  0A01               	xorlw	1	; case 21
 37326  00245E  B4D8               	btfsc	status,2,c
 37327  002460  D77B               	goto	l2201
 37328  002462  0A03               	xorlw	3	; case 22
 37329  002464  B4D8               	btfsc	status,2,c
 37330  002466  D77A               	goto	l2202
 37331  002468  0A01               	xorlw	1	; case 23
 37332  00246A  B4D8               	btfsc	status,2,c
 37333  00246C  D779               	goto	l2203
 37334  00246E  0A0F               	xorlw	15	; case 24
 37335  002470  B4D8               	btfsc	status,2,c
 37336  002472  D778               	goto	l2204
 37337  002474  0A01               	xorlw	1	; case 25
 37338  002476  B4D8               	btfsc	status,2,c
 37339  002478  D777               	goto	l2205
 37340  00247A  0A03               	xorlw	3	; case 26
 37341  00247C  B4D8               	btfsc	status,2,c
 37342  00247E  D776               	goto	l2206
 37343  002480  0A01               	xorlw	1	; case 27
 37344  002482  B4D8               	btfsc	status,2,c
 37345  002484  D775               	goto	l2207
 37346  002486  0A07               	xorlw	7	; case 28
 37347  002488  B4D8               	btfsc	status,2,c
 37348  00248A  D774               	goto	l2208
 37349  00248C  0A01               	xorlw	1	; case 29
 37350  00248E  B4D8               	btfsc	status,2,c
 37351  002490  D773               	goto	l2209
 37352  002492  0A03               	xorlw	3	; case 30
 37353  002494  B4D8               	btfsc	status,2,c
 37354  002496  D772               	goto	l2210
 37355  002498  0A01               	xorlw	1	; case 31
 37356  00249A  B4D8               	btfsc	status,2,c
 37357  00249C  D771               	goto	l2211
 37358  00249E  0A37               	xorlw	55	; case 40
 37359  0024A0  B4D8               	btfsc	status,2,c
 37360  0024A2  D770               	goto	l2212
 37361  0024A4  0A01               	xorlw	1	; case 41
 37362  0024A6  B4D8               	btfsc	status,2,c
 37363  0024A8  D76F               	goto	l2213
 37364  0024AA  0A05               	xorlw	5	; case 44
 37365  0024AC  B4D8               	btfsc	status,2,c
 37366  0024AE  D76E               	goto	l2214
 37367  0024B0  0A01               	xorlw	1	; case 45
 37368  0024B2  B4D8               	btfsc	status,2,c
 37369  0024B4  D76D               	goto	l2215
 37370  0024B6  0A03               	xorlw	3	; case 46
 37371  0024B8  B4D8               	btfsc	status,2,c
 37372  0024BA  D76C               	goto	l2216
 37373  0024BC  0A01               	xorlw	1	; case 47
 37374  0024BE  B4D8               	btfsc	status,2,c
 37375  0024C0  D769               	goto	l2216
 37376  0024C2  0A19               	xorlw	25	; case 54
 37377  0024C4  B4D8               	btfsc	status,2,c
 37378  0024C6  D768               	goto	l2218
 37379  0024C8  0A01               	xorlw	1	; case 55
 37380  0024CA  B4D8               	btfsc	status,2,c
 37381  0024CC  D767               	goto	l2219
 37382  0024CE  0A0F               	xorlw	15	; case 56
 37383  0024D0  B4D8               	btfsc	status,2,c
 37384  0024D2  D766               	goto	l2220
 37385  0024D4  0A01               	xorlw	1	; case 57
 37386  0024D6  B4D8               	btfsc	status,2,c
 37387  0024D8  D765               	goto	l2221
 37388  0024DA  0A03               	xorlw	3	; case 58
 37389  0024DC  B4D8               	btfsc	status,2,c
 37390  0024DE  D764               	goto	l2222
 37391  0024E0  0A01               	xorlw	1	; case 59
 37392  0024E2  B4D8               	btfsc	status,2,c
 37393  0024E4  D763               	goto	l2223
 37394  0024E6  0A07               	xorlw	7	; case 60
 37395  0024E8  B4D8               	btfsc	status,2,c
 37396  0024EA  D762               	goto	l2224
 37397  0024EC  0A01               	xorlw	1	; case 61
 37398  0024EE  B4D8               	btfsc	status,2,c
 37399  0024F0  D761               	goto	l2225
 37400  0024F2  D766               	goto	l2228
 37401  0024F4                     l17282:
 37402                           
 37403                           ; Switch size 1, requested type "space"
 37404                           ; Number of cases is 2, Range of values is 254 to 255
 37405                           ; switch strategies available:
 37406                           ; Name         Instructions Cycles
 37407                           ; simple_byte            7     4 (average)
 37408                           ;	Chosen strategy is simple_byte
 37409  0024F4  5003               	movf	??__get_fbr,w,c
 37410  0024F6  0AFE               	xorlw	254	; case 254
 37411  0024F8  B4D8               	btfsc	status,2,c
 37412  0024FA  D75E               	goto	l2226
 37413  0024FC  0A01               	xorlw	1	; case 255
 37414  0024FE  B4D8               	btfsc	status,2,c
 37415  002500  D75D               	goto	l2227
 37416  002502  D75E               	goto	l2228
 37417  002504                     __end_of__get_fbr:
 37418                           	opt stack 0
 37419                           tosu	equ	0xFFF
 37420                           tosh	equ	0xFFE
 37421                           tosl	equ	0xFFD
 37422                           pclath	equ	0xFFA
 37423                           tblptru	equ	0xFF8
 37424                           tblptrh	equ	0xFF7
 37425                           tblptrl	equ	0xFF6
 37426                           tablat	equ	0xFF5
 37427                           prodh	equ	0xFF4
 37428                           prodl	equ	0xFF3
 37429                           intcon	equ	0xFF2
 37430                           intcon2	equ	0xFF1
 37431                           intcon3	equ	0xFF0
 37432                           indf0	equ	0xFEF
 37433                           postinc0	equ	0xFEE
 37434                           fsr0h	equ	0xFEA
 37435                           fsr0l	equ	0xFE9
 37436                           wreg	equ	0xFE8
 37437                           indf1	equ	0xFE7
 37438                           postdec1	equ	0xFE5
 37439                           plusw1	equ	0xFE3
 37440                           fsr1h	equ	0xFE2
 37441                           fsr1l	equ	0xFE1
 37442                           indf2	equ	0xFDF
 37443                           postinc2	equ	0xFDE
 37444                           postdec2	equ	0xFDD
 37445                           plusw2	equ	0xFDB
 37446                           fsr2h	equ	0xFDA
 37447                           fsr2l	equ	0xFD9
 37448                           status	equ	0xFD8
 37449                           
 37450 ;; *************** function __get_fat *****************
 37451 ;; Defined at:
 37452 ;;		line 1187 in file "fat16.c"
 37453 ;; Parameters:    Size  Location     Type
 37454 ;;  idx             2    0[COMRAM] unsigned int 
 37455 ;; Auto vars:     Size  Location     Type
 37456 ;;		None
 37457 ;; Return value:  Size  Location     Type
 37458 ;;                  1    wreg      unsigned char 
 37459 ;; Registers used:
 37460 ;;		wreg, status,2, status,0
 37461 ;; Tracked objects:
 37462 ;;		On entry : 0/0
 37463 ;;		On exit  : 0/0
 37464 ;;		Unchanged: 0/0
 37465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37469 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37470 ;;Total ram usage:        4 bytes
 37471 ;; Hardware stack levels used:    1
 37472 ;; This function calls:
 37473 ;;		Nothing
 37474 ;; This function is called by:
 37475 ;;		_fat_format
 37476 ;; This function uses a non-reentrant model
 37477 ;;
 37478                           
 37479                           	psect	text182
 37480  0092E6                     __ptext182:
 37481                           	opt stack 0
 37482  0092E6                     __get_fat:
 37483                           	opt stack 27
 37484                           
 37485                           ;fat16.c: 1189: switch (idx)
 37486                           
 37487                           ;incstack = 0
 37488  0092E6  D00E               	goto	l2232
 37489  0092E8                     
 37490                           ;fat16.c: 1193: return 0xF8;
 37491  0092E8  0EF8               	movlw	248
 37492  0092EA  0012               	return	
 37493  0092EC                     
 37494                           ;fat16.c: 1195: return 0xFF;
 37495  0092EC  0EFF               	movlw	255
 37496  0092EE  0012               	return	
 37497  0092F0                     
 37498                           ;fat16.c: 1197: return 0xFF;
 37499  0092F0  0EFF               	movlw	255
 37500  0092F2  0012               	return	
 37501  0092F4                     
 37502                           ;fat16.c: 1199: return 0xFF;
 37503  0092F4  0EFF               	movlw	255
 37504  0092F6  0012               	return	
 37505  0092F8                     
 37506                           ;fat16.c: 1202: return 0xFF;
 37507  0092F8  0EFF               	movlw	255
 37508  0092FA  0012               	return	
 37509  0092FC                     
 37510                           ;fat16.c: 1204: return 0xFF;
 37511  0092FC  0EFF               	movlw	255
 37512  0092FE  0012               	return	
 37513  009300                     
 37514                           ;fat16.c: 1206: return 0X00;
 37515  009300  0E00               	movlw	0
 37516                           
 37517                           ;fat16.c: 1207: }
 37518  009302  0012               	return	
 37519  009304                     l2232:
 37520  009304  C001  F003         	movff	__get_fat@idx,??__get_fat
 37521  009308  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 37522                           
 37523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37524                           ; Switch size 1, requested type "space"
 37525                           ; Number of cases is 1, Range of values is 0 to 0
 37526                           ; switch strategies available:
 37527                           ; Name         Instructions Cycles
 37528                           ; simple_byte            4     3 (average)
 37529                           ;	Chosen strategy is simple_byte
 37530  00930C  5004               	movf	??__get_fat+1,w,c
 37531  00930E  0A00               	xorlw	0	; case 0
 37532  009310  A4D8               	btfss	status,2,c
 37533  009312  D7F6               	goto	l2240
 37534                           
 37535                           ; Switch size 1, requested type "space"
 37536                           ; Number of cases is 6, Range of values is 0 to 5
 37537                           ; switch strategies available:
 37538                           ; Name         Instructions Cycles
 37539                           ; simple_byte           19    10 (average)
 37540                           ;	Chosen strategy is simple_byte
 37541  009314  5003               	movf	??__get_fat,w,c
 37542  009316  0A00               	xorlw	0	; case 0
 37543  009318  B4D8               	btfsc	status,2,c
 37544  00931A  D7E6               	goto	l2233
 37545  00931C  0A01               	xorlw	1	; case 1
 37546  00931E  B4D8               	btfsc	status,2,c
 37547  009320  D7E5               	goto	l2235
 37548  009322  0A03               	xorlw	3	; case 2
 37549  009324  B4D8               	btfsc	status,2,c
 37550  009326  D7E4               	goto	l2236
 37551  009328  0A01               	xorlw	1	; case 3
 37552  00932A  B4D8               	btfsc	status,2,c
 37553  00932C  D7E3               	goto	l2237
 37554  00932E  0A07               	xorlw	7	; case 4
 37555  009330  B4D8               	btfsc	status,2,c
 37556  009332  D7E2               	goto	l2238
 37557  009334  0A01               	xorlw	1	; case 5
 37558  009336  B4D8               	btfsc	status,2,c
 37559  009338  D7E1               	goto	l2239
 37560  00933A  D7E2               	goto	l2240
 37561  00933C                     __end_of__get_fat:
 37562                           	opt stack 0
 37563                           tosu	equ	0xFFF
 37564                           tosh	equ	0xFFE
 37565                           tosl	equ	0xFFD
 37566                           pclath	equ	0xFFA
 37567                           tblptru	equ	0xFF8
 37568                           tblptrh	equ	0xFF7
 37569                           tblptrl	equ	0xFF6
 37570                           tablat	equ	0xFF5
 37571                           prodh	equ	0xFF4
 37572                           prodl	equ	0xFF3
 37573                           intcon	equ	0xFF2
 37574                           intcon2	equ	0xFF1
 37575                           intcon3	equ	0xFF0
 37576                           indf0	equ	0xFEF
 37577                           postinc0	equ	0xFEE
 37578                           fsr0h	equ	0xFEA
 37579                           fsr0l	equ	0xFE9
 37580                           wreg	equ	0xFE8
 37581                           indf1	equ	0xFE7
 37582                           postdec1	equ	0xFE5
 37583                           plusw1	equ	0xFE3
 37584                           fsr1h	equ	0xFE2
 37585                           fsr1l	equ	0xFE1
 37586                           indf2	equ	0xFDF
 37587                           postinc2	equ	0xFDE
 37588                           postdec2	equ	0xFDD
 37589                           plusw2	equ	0xFDB
 37590                           fsr2h	equ	0xFDA
 37591                           fsr2l	equ	0xFD9
 37592                           status	equ	0xFD8
 37593                           
 37594 ;; *************** function __get_data *****************
 37595 ;; Defined at:
 37596 ;;		line 1283 in file "fat16.c"
 37597 ;; Parameters:    Size  Location     Type
 37598 ;;  idx             2    0[COMRAM] unsigned int 
 37599 ;; Auto vars:     Size  Location     Type
 37600 ;;		None
 37601 ;; Return value:  Size  Location     Type
 37602 ;;                  1    wreg      unsigned char 
 37603 ;; Registers used:
 37604 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 37605 ;; Tracked objects:
 37606 ;;		On entry : 0/0
 37607 ;;		On exit  : 0/0
 37608 ;;		Unchanged: 0/0
 37609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37614 ;;Total ram usage:        2 bytes
 37615 ;; Hardware stack levels used:    1
 37616 ;; This function calls:
 37617 ;;		Nothing
 37618 ;; This function is called by:
 37619 ;;		_fat_format
 37620 ;; This function uses a non-reentrant model
 37621 ;;
 37622                           
 37623                           	psect	text183
 37624  009DF4                     __ptext183:
 37625                           	opt stack 0
 37626  009DF4                     __get_data:
 37627                           	opt stack 27
 37628                           
 37629                           ;fat16.c: 1285: if(idx < 12)
 37630                           
 37631                           ;incstack = 0
 37632  009DF4  5002               	movf	__get_data@idx+1,w,c
 37633  009DF6  E110               	bnz	l13470
 37634  009DF8  0E0C               	movlw	12
 37635  009DFA  5C01               	subwf	__get_data@idx,w,c
 37636  009DFC  B0D8               	btfsc	status,0,c
 37637  009DFE  D00C               	goto	l2276
 37638                           
 37639                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 37640  009E00  0ECF               	movlw	low STR_12
 37641  009E02  2401               	addwf	__get_data@idx,w,c
 37642  009E04  6EF6               	movwf	tblptrl,c
 37643  009E06  0EBF               	movlw	high STR_12
 37644  009E08  2002               	addwfc	__get_data@idx+1,w,c
 37645  009E0A  6EF7               	movwf	tblptrh,c
 37646  009E0C                     	if	1	;There are 3 active tblptr bytes
 37647  009E0C  6AF8               	clrf	tblptru,c
 37648  009E0E  0E00               	movlw	low (__mediumconst shr (0+16))
 37649  009E10  22F8               	addwfc	tblptru,f,c
 37650  009E12                     	endif
 37651  009E12  0008               	tblrd		*
 37652  009E14  50F5               	movf	tablat,w,c
 37653  009E16  0012               	return	
 37654  009E18                     l2276:
 37655  009E18                     l13470:
 37656                           
 37657                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 37658  009E18  0E00               	movlw	0
 37659  009E1A  0012               	return	
 37660  009E1C                     __end_of__get_data:
 37661                           	opt stack 0
 37662                           tosu	equ	0xFFF
 37663                           tosh	equ	0xFFE
 37664                           tosl	equ	0xFFD
 37665                           pclath	equ	0xFFA
 37666                           tblptru	equ	0xFF8
 37667                           tblptrh	equ	0xFF7
 37668                           tblptrl	equ	0xFF6
 37669                           tablat	equ	0xFF5
 37670                           prodh	equ	0xFF4
 37671                           prodl	equ	0xFF3
 37672                           intcon	equ	0xFF2
 37673                           intcon2	equ	0xFF1
 37674                           intcon3	equ	0xFF0
 37675                           indf0	equ	0xFEF
 37676                           postinc0	equ	0xFEE
 37677                           fsr0h	equ	0xFEA
 37678                           fsr0l	equ	0xFE9
 37679                           wreg	equ	0xFE8
 37680                           indf1	equ	0xFE7
 37681                           postdec1	equ	0xFE5
 37682                           plusw1	equ	0xFE3
 37683                           fsr1h	equ	0xFE2
 37684                           fsr1l	equ	0xFE1
 37685                           indf2	equ	0xFDF
 37686                           postinc2	equ	0xFDE
 37687                           postdec2	equ	0xFDD
 37688                           plusw2	equ	0xFDB
 37689                           fsr2h	equ	0xFDA
 37690                           fsr2l	equ	0xFD9
 37691                           status	equ	0xFD8
 37692                           
 37693 ;; *************** function __parse_file_resize *****************
 37694 ;; Defined at:
 37695 ;;		line 628 in file "api.c"
 37696 ;; Parameters:    Size  Location     Type
 37697 ;;  data            2   84[COMRAM] PTR unsigned char 
 37698 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37699 ;;  out_buffer      2   86[COMRAM] PTR unsigned char 
 37700 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 37701 ;;  out_idx_ptr     2   88[COMRAM] PTR unsigned char 
 37702 ;;		 -> api_parse@out_idx(1), 
 37703 ;; Auto vars:     Size  Location     Type
 37704 ;;  file_size       4   41[BANK0 ] unsigned long 
 37705 ;;  file_number     1   40[BANK0 ] unsigned char 
 37706 ;;  return_value    1   39[BANK0 ] unsigned char 
 37707 ;; Return value:  Size  Location     Type
 37708 ;;                  1    wreg      unsigned char 
 37709 ;; Registers used:
 37710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37711 ;; Tracked objects:
 37712 ;;		On entry : 0/0
 37713 ;;		On exit  : 0/0
 37714 ;;		Unchanged: 0/0
 37715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37716 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37717 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37719 ;;      Totals:         7       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37720 ;;Total ram usage:       13 bytes
 37721 ;; Hardware stack levels used:    1
 37722 ;; Hardware stack levels required when called:    8
 37723 ;; This function calls:
 37724 ;;		_fat_resize_file
 37725 ;; This function is called by:
 37726 ;;		__parse_command_long
 37727 ;; This function uses a non-reentrant model
 37728 ;;
 37729                           
 37730                           	psect	text184
 37731  002DD8                     __ptext184:
 37732                           	opt stack 0
 37733  002DD8                     __parse_file_resize:
 37734                           	opt stack 20
 37735                           
 37736                           ;api.c: 631: uint32_t file_size;;api.c: 632: uint8_t return_value;;api.c: 633: uint8_t f
      +                          ile_number;;api.c: 635: if((data[0]!=COMMAND_FILE_RESIZE) || (data[6]!=0x4C) || (data[7]
      +                          !=0xEA))
 37737                           
 37738                           ;incstack = 0
 37739  002DD8  C055  FFD9         	movff	__parse_file_resize@data,fsr2l
 37740  002DDC  C056  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 37741  002DE0  0E50               	movlw	80
 37742  002DE2  18DE               	xorwf	postinc2,w,c
 37743  002DE4  A4D8               	btfss	status,2,c
 37744  002DE6  D014               	goto	u11690
 37745  002DE8  EE20 F006          	lfsr	2,6
 37746  002DEC  5055               	movf	__parse_file_resize@data,w,c
 37747  002DEE  26D9               	addwf	fsr2l,f,c
 37748  002DF0  5056               	movf	__parse_file_resize@data+1,w,c
 37749  002DF2  22DA               	addwfc	fsr2h,f,c
 37750  002DF4  0E4C               	movlw	76
 37751  002DF6  18DE               	xorwf	postinc2,w,c
 37752  002DF8  A4D8               	btfss	status,2,c
 37753  002DFA  D00A               	goto	u11690
 37754  002DFC  EE20 F007          	lfsr	2,7
 37755  002E00  5055               	movf	__parse_file_resize@data,w,c
 37756  002E02  26D9               	addwf	fsr2l,f,c
 37757  002E04  5056               	movf	__parse_file_resize@data+1,w,c
 37758  002E06  22DA               	addwfc	fsr2h,f,c
 37759  002E08  0EEA               	movlw	234
 37760  002E0A  18DE               	xorwf	postinc2,w,c
 37761  002E0C  B4D8               	btfsc	status,2,c
 37762  002E0E  D002               	goto	l2867
 37763  002E10                     u11690:
 37764                           
 37765                           ;api.c: 636: {;api.c: 637: return 8;
 37766  002E10  0E08               	movlw	8
 37767  002E12  0012               	return	
 37768  002E14                     l2867:
 37769                           
 37770                           ;api.c: 638: };api.c: 641: file_number = data[1];
 37771  002E14  EE20 F001          	lfsr	2,1
 37772  002E18  5055               	movf	__parse_file_resize@data,w,c
 37773  002E1A  26D9               	addwf	fsr2l,f,c
 37774  002E1C  5056               	movf	__parse_file_resize@data+1,w,c
 37775  002E1E  22DA               	addwfc	fsr2h,f,c
 37776  002E20  50DF               	movf	indf2,w,c
 37777  002E22  0100               	movlb	0	; () banked
 37778  002E24  6F88               	movwf	__parse_file_resize@file_number& (0+255),b
 37779                           
 37780                           ;api.c: 644: file_size = data[2];
 37781  002E26  EE20 F002          	lfsr	2,2
 37782  002E2A  5055               	movf	__parse_file_resize@data,w,c
 37783  002E2C  26D9               	addwf	fsr2l,f,c
 37784  002E2E  5056               	movf	__parse_file_resize@data+1,w,c
 37785  002E30  22DA               	addwfc	fsr2h,f,c
 37786  002E32  50DF               	movf	indf2,w,c
 37787  002E34  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37788  002E36  505B               	movf	??__parse_file_resize,w,c
 37789  002E38  6F89               	movwf	__parse_file_resize@file_size& (0+255),b
 37790  002E3A  6B8A               	clrf	(__parse_file_resize@file_size+1)& (0+255),b
 37791  002E3C  6B8B               	clrf	(__parse_file_resize@file_size+2)& (0+255),b
 37792  002E3E  6B8C               	clrf	(__parse_file_resize@file_size+3)& (0+255),b
 37793                           
 37794                           ; BSR set to: 0
 37795                           ;api.c: 645: file_size <<= 8;
 37796  002E40  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 37797  002E44  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 37798  002E48  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 37799  002E4C  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 37800                           
 37801                           ; BSR set to: 0
 37802                           ;api.c: 646: file_size |= data[3];
 37803  002E4E  EE20 F003          	lfsr	2,3
 37804  002E52  5055               	movf	__parse_file_resize@data,w,c
 37805  002E54  26D9               	addwf	fsr2l,f,c
 37806  002E56  5056               	movf	__parse_file_resize@data+1,w,c
 37807  002E58  22DA               	addwfc	fsr2h,f,c
 37808  002E5A  50DF               	movf	indf2,w,c
 37809  002E5C  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37810  002E5E  505B               	movf	??__parse_file_resize,w,c
 37811  002E60  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 37812                           
 37813                           ;api.c: 647: file_size <<= 8;
 37814  002E62  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 37815  002E66  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 37816  002E6A  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 37817  002E6E  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 37818                           
 37819                           ; BSR set to: 0
 37820                           ;api.c: 648: file_size |= data[4];
 37821  002E70  EE20 F004          	lfsr	2,4
 37822  002E74  5055               	movf	__parse_file_resize@data,w,c
 37823  002E76  26D9               	addwf	fsr2l,f,c
 37824  002E78  5056               	movf	__parse_file_resize@data+1,w,c
 37825  002E7A  22DA               	addwfc	fsr2h,f,c
 37826  002E7C  50DF               	movf	indf2,w,c
 37827  002E7E  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37828  002E80  505B               	movf	??__parse_file_resize,w,c
 37829  002E82  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 37830                           
 37831                           ; BSR set to: 0
 37832                           ;api.c: 649: file_size <<= 8;
 37833  002E84  C08B  F08C         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 37834  002E88  C08A  F08B         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 37835  002E8C  C089  F08A         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 37836  002E90  6B89               	clrf	__parse_file_resize@file_size& (0+255),b
 37837                           
 37838                           ;api.c: 650: file_size |= data[5];
 37839  002E92  EE20 F005          	lfsr	2,5
 37840  002E96  5055               	movf	__parse_file_resize@data,w,c
 37841  002E98  26D9               	addwf	fsr2l,f,c
 37842  002E9A  5056               	movf	__parse_file_resize@data+1,w,c
 37843  002E9C  22DA               	addwfc	fsr2h,f,c
 37844  002E9E  50DF               	movf	indf2,w,c
 37845  002EA0  6E5B               	movwf	??__parse_file_resize& (0+255),c
 37846  002EA2  505B               	movf	??__parse_file_resize,w,c
 37847  002EA4  1389               	iorwf	__parse_file_resize@file_size& (0+255),f,b
 37848                           
 37849                           ; BSR set to: 0
 37850                           ;api.c: 653: return_value = fat_resize_file(file_number, file_size);
 37851  002EA6  C089  F04D         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 37852  002EAA  C08A  F04E         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 37853  002EAE  C08B  F04F         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 37854  002EB2  C08C  F050         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 37855  002EB6  5188               	movf	__parse_file_resize@file_number& (0+255),w,b
 37856  002EB8  ECFA  F02F         	call	_fat_resize_file
 37857  002EBC  0100               	movlb	0	; () banked
 37858  002EBE  6F87               	movwf	__parse_file_resize@return_value& (0+255),b
 37859                           
 37860                           ; BSR set to: 0
 37861                           ;api.c: 656: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<58))
 37862  002EC0  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37863  002EC4  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37864  002EC8  50DF               	movf	indf2,w,c
 37865  002ECA  B4D8               	btfsc	status,2,c
 37866  002ECC  D085               	goto	l2871
 37867                           
 37868                           ; BSR set to: 0
 37869  002ECE  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37870  002ED2  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37871  002ED6  0E3A               	movlw	58
 37872  002ED8  60DF               	cpfslt	indf2,c
 37873  002EDA  D07E               	goto	l2871
 37874                           
 37875                           ; BSR set to: 0
 37876                           ;api.c: 657: {;api.c: 658: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RESIZE;
 37877  002EDC  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37878  002EE0  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37879  002EE4  CFDF F05B          	movff	indf2,??__parse_file_resize
 37880  002EE8  0E01               	movlw	1
 37881  002EEA  26DF               	addwf	indf2,f,c
 37882  002EEC  505B               	movf	??__parse_file_resize,w,c
 37883  002EEE  0D01               	mullw	1
 37884  002EF0  50F3               	movf	prodl,w,c
 37885  002EF2  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37886  002EF4  6ED9               	movwf	fsr2l,c
 37887  002EF6  50F4               	movf	prodh,w,c
 37888  002EF8  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37889  002EFA  6EDA               	movwf	fsr2h,c
 37890  002EFC  0E50               	movlw	80
 37891  002EFE  6EDF               	movwf	indf2,c
 37892                           
 37893                           ;api.c: 659: out_buffer[(*out_idx_ptr)++] = file_number;
 37894  002F00  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37895  002F04  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37896  002F08  CFDF F05B          	movff	indf2,??__parse_file_resize
 37897  002F0C  0E01               	movlw	1
 37898  002F0E  26DF               	addwf	indf2,f,c
 37899  002F10  505B               	movf	??__parse_file_resize,w,c
 37900  002F12  0D01               	mullw	1
 37901  002F14  50F3               	movf	prodl,w,c
 37902  002F16  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37903  002F18  6ED9               	movwf	fsr2l,c
 37904  002F1A  50F4               	movf	prodh,w,c
 37905  002F1C  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37906  002F1E  6EDA               	movwf	fsr2h,c
 37907  002F20  C088  FFDF         	movff	__parse_file_resize@file_number,indf2
 37908                           
 37909                           ;api.c: 660: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((file_
      +                          size)>>16)&0xFFFF)))>>8)&0xFF));
 37910  002F24  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37911  002F28  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37912  002F2C  CFDF F05B          	movff	indf2,??__parse_file_resize
 37913  002F30  0E01               	movlw	1
 37914  002F32  26DF               	addwf	indf2,f,c
 37915  002F34  505B               	movf	??__parse_file_resize,w,c
 37916  002F36  0D01               	mullw	1
 37917  002F38  50F3               	movf	prodl,w,c
 37918  002F3A  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37919  002F3C  6ED9               	movwf	fsr2l,c
 37920  002F3E  50F4               	movf	prodh,w,c
 37921  002F40  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37922  002F42  6EDA               	movwf	fsr2h,c
 37923  002F44  518C               	movf	(__parse_file_resize@file_size+3)& (0+255),w,b
 37924  002F46  6EDF               	movwf	indf2,c
 37925                           
 37926                           ;api.c: 661: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((file_s
      +                          ize)>>16)&0xFFFF)))&0xFF));
 37927  002F48  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37928  002F4C  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37929  002F50  CFDF F05B          	movff	indf2,??__parse_file_resize
 37930  002F54  0E01               	movlw	1
 37931  002F56  26DF               	addwf	indf2,f,c
 37932  002F58  505B               	movf	??__parse_file_resize,w,c
 37933  002F5A  0D01               	mullw	1
 37934  002F5C  50F3               	movf	prodl,w,c
 37935  002F5E  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37936  002F60  6ED9               	movwf	fsr2l,c
 37937  002F62  50F4               	movf	prodh,w,c
 37938  002F64  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37939  002F66  6EDA               	movwf	fsr2h,c
 37940  002F68  C08B  FFDF         	movff	__parse_file_resize@file_size+2,indf2
 37941                           
 37942                           ;api.c: 662: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((file_s
      +                          ize)&0xFFFF)))>>8)&0xFF));
 37943  002F6C  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37944  002F70  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37945  002F74  CFDF F05B          	movff	indf2,??__parse_file_resize
 37946  002F78  0E01               	movlw	1
 37947  002F7A  26DF               	addwf	indf2,f,c
 37948  002F7C  505B               	movf	??__parse_file_resize,w,c
 37949  002F7E  0D01               	mullw	1
 37950  002F80  50F3               	movf	prodl,w,c
 37951  002F82  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37952  002F84  6ED9               	movwf	fsr2l,c
 37953  002F86  50F4               	movf	prodh,w,c
 37954  002F88  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37955  002F8A  6EDA               	movwf	fsr2h,c
 37956  002F8C  518A               	movf	(__parse_file_resize@file_size+1)& (0+255),w,b
 37957  002F8E  6EDF               	movwf	indf2,c
 37958                           
 37959                           ;api.c: 663: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((file_si
      +                          ze)&0xFFFF)))&0xFF));
 37960  002F90  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37961  002F94  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37962  002F98  CFDF F05B          	movff	indf2,??__parse_file_resize
 37963  002F9C  0E01               	movlw	1
 37964  002F9E  26DF               	addwf	indf2,f,c
 37965  002FA0  505B               	movf	??__parse_file_resize,w,c
 37966  002FA2  0D01               	mullw	1
 37967  002FA4  50F3               	movf	prodl,w,c
 37968  002FA6  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37969  002FA8  6ED9               	movwf	fsr2l,c
 37970  002FAA  50F4               	movf	prodh,w,c
 37971  002FAC  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37972  002FAE  6EDA               	movwf	fsr2h,c
 37973  002FB0  C089  FFDF         	movff	__parse_file_resize@file_size,indf2
 37974                           
 37975                           ;api.c: 664: out_buffer[(*out_idx_ptr)++] = return_value;
 37976  002FB4  C059  FFD9         	movff	__parse_file_resize@out_idx_ptr,fsr2l
 37977  002FB8  C05A  FFDA         	movff	__parse_file_resize@out_idx_ptr+1,fsr2h
 37978  002FBC  CFDF F05B          	movff	indf2,??__parse_file_resize
 37979  002FC0  0E01               	movlw	1
 37980  002FC2  26DF               	addwf	indf2,f,c
 37981  002FC4  505B               	movf	??__parse_file_resize,w,c
 37982  002FC6  0D01               	mullw	1
 37983  002FC8  50F3               	movf	prodl,w,c
 37984  002FCA  2457               	addwf	__parse_file_resize@out_buffer,w,c
 37985  002FCC  6ED9               	movwf	fsr2l,c
 37986  002FCE  50F4               	movf	prodh,w,c
 37987  002FD0  2058               	addwfc	__parse_file_resize@out_buffer+1,w,c
 37988  002FD2  6EDA               	movwf	fsr2h,c
 37989  002FD4  C087  FFDF         	movff	__parse_file_resize@return_value,indf2
 37990  002FD8                     l2871:
 37991                           
 37992                           ; BSR set to: 0
 37993                           ;api.c: 665: };api.c: 667: return 8;
 37994                           
 37995                           ; BSR set to: 0
 37996  002FD8  0E08               	movlw	8
 37997  002FDA  0012               	return	
 37998  002FDC                     __end_of__parse_file_resize:
 37999                           	opt stack 0
 38000                           tosu	equ	0xFFF
 38001                           tosh	equ	0xFFE
 38002                           tosl	equ	0xFFD
 38003                           pclath	equ	0xFFA
 38004                           tblptru	equ	0xFF8
 38005                           tblptrh	equ	0xFF7
 38006                           tblptrl	equ	0xFF6
 38007                           tablat	equ	0xFF5
 38008                           prodh	equ	0xFF4
 38009                           prodl	equ	0xFF3
 38010                           intcon	equ	0xFF2
 38011                           intcon2	equ	0xFF1
 38012                           intcon3	equ	0xFF0
 38013                           indf0	equ	0xFEF
 38014                           postinc0	equ	0xFEE
 38015                           fsr0h	equ	0xFEA
 38016                           fsr0l	equ	0xFE9
 38017                           wreg	equ	0xFE8
 38018                           indf1	equ	0xFE7
 38019                           postdec1	equ	0xFE5
 38020                           plusw1	equ	0xFE3
 38021                           fsr1h	equ	0xFE2
 38022                           fsr1l	equ	0xFE1
 38023                           indf2	equ	0xFDF
 38024                           postinc2	equ	0xFDE
 38025                           postdec2	equ	0xFDD
 38026                           plusw2	equ	0xFDB
 38027                           fsr2h	equ	0xFDA
 38028                           fsr2l	equ	0xFD9
 38029                           status	equ	0xFD8
 38030                           
 38031 ;; *************** function __parse_file_rename *****************
 38032 ;; Defined at:
 38033 ;;		line 732 in file "api.c"
 38034 ;; Parameters:    Size  Location     Type
 38035 ;;  data            2    0[BANK0 ] PTR unsigned char 
 38036 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38037 ;;  out_buffer      2    2[BANK0 ] PTR unsigned char 
 38038 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 38039 ;;  out_idx_ptr     2    4[BANK0 ] PTR unsigned char 
 38040 ;;		 -> api_parse@out_idx(1), 
 38041 ;; Auto vars:     Size  Location     Type
 38042 ;;  file_number     1    7[BANK0 ] unsigned char 
 38043 ;;  return_value    1    6[BANK0 ] unsigned char 
 38044 ;; Return value:  Size  Location     Type
 38045 ;;                  1    wreg      unsigned char 
 38046 ;; Registers used:
 38047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38048 ;; Tracked objects:
 38049 ;;		On entry : 0/0
 38050 ;;		On exit  : 0/0
 38051 ;;		Unchanged: 0/0
 38052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38053 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38056 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38057 ;;Total ram usage:        9 bytes
 38058 ;; Hardware stack levels used:    1
 38059 ;; Hardware stack levels required when called:    7
 38060 ;; This function calls:
 38061 ;;		_fat_rename_file
 38062 ;; This function is called by:
 38063 ;;		__parse_command_long
 38064 ;; This function uses a non-reentrant model
 38065 ;;
 38066                           
 38067                           	psect	text185
 38068  005DF8                     __ptext185:
 38069                           	opt stack 0
 38070  005DF8                     __parse_file_rename:
 38071                           	opt stack 21
 38072                           
 38073                           ;api.c: 736: uint8_t file_number;;api.c: 737: uint8_t return_value;;api.c: 739: if((data
      +                          [0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 38074                           
 38075                           ;incstack = 0
 38076  005DF8  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 38077  005DFC  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 38078  005E00  0E53               	movlw	83
 38079  005E02  18DE               	xorwf	postinc2,w,c
 38080  005E04  A4D8               	btfss	status,2,c
 38081  005E06  D015               	goto	u11840
 38082  005E08  0100               	movlb	0	; () banked
 38083  005E0A  EE20 F00D          	lfsr	2,13
 38084  005E0E  5160               	movf	__parse_file_rename@data& (0+255),w,b
 38085  005E10  26D9               	addwf	fsr2l,f,c
 38086  005E12  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 38087  005E14  22DA               	addwfc	fsr2h,f,c
 38088  005E16  0E7E               	movlw	126
 38089  005E18  18DE               	xorwf	postinc2,w,c
 38090  005E1A  A4D8               	btfss	status,2,c
 38091  005E1C  D00A               	goto	u11840
 38092                           
 38093                           ; BSR set to: 0
 38094  005E1E  EE20 F00E          	lfsr	2,14
 38095  005E22  5160               	movf	__parse_file_rename@data& (0+255),w,b
 38096  005E24  26D9               	addwf	fsr2l,f,c
 38097  005E26  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 38098  005E28  22DA               	addwfc	fsr2h,f,c
 38099  005E2A  0E18               	movlw	24
 38100  005E2C  18DE               	xorwf	postinc2,w,c
 38101  005E2E  B4D8               	btfsc	status,2,c
 38102  005E30  D002               	goto	l2888
 38103  005E32                     u11840:
 38104                           
 38105                           ;api.c: 740: {;api.c: 741: return 15;
 38106                           
 38107                           ; BSR set to: 0
 38108  005E32  0E0F               	movlw	15
 38109  005E34  0012               	return	
 38110  005E36                     l2888:
 38111                           
 38112                           ;api.c: 742: };api.c: 745: file_number = data[1];
 38113  005E36  0100               	movlb	0	; () banked
 38114  005E38  EE20 F001          	lfsr	2,1
 38115  005E3C  5160               	movf	__parse_file_rename@data& (0+255),w,b
 38116  005E3E  26D9               	addwf	fsr2l,f,c
 38117  005E40  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 38118  005E42  22DA               	addwfc	fsr2h,f,c
 38119  005E44  50DF               	movf	indf2,w,c
 38120  005E46  6F67               	movwf	__parse_file_rename@file_number& (0+255),b
 38121                           
 38122                           ; BSR set to: 0
 38123                           ;api.c: 748: return_value = fat_rename_file(file_number, &data[2], &data[10]);
 38124  005E48  0E02               	movlw	2
 38125  005E4A  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 38126  005E4C  6E38               	movwf	fat_rename_file@name,c
 38127  005E4E  0E00               	movlw	0
 38128  005E50  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 38129  005E52  6E39               	movwf	fat_rename_file@name+1,c
 38130  005E54  0E0A               	movlw	10
 38131  005E56  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 38132  005E58  6E3A               	movwf	fat_rename_file@extension,c
 38133  005E5A  0E00               	movlw	0
 38134  005E5C  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 38135  005E5E  6E3B               	movwf	fat_rename_file@extension+1,c
 38136  005E60  5167               	movf	__parse_file_rename@file_number& (0+255),w,b
 38137  005E62  EC93  F040         	call	_fat_rename_file
 38138  005E66  0100               	movlb	0	; () banked
 38139  005E68  6F66               	movwf	__parse_file_rename@return_value& (0+255),b
 38140                           
 38141                           ; BSR set to: 0
 38142                           ;api.c: 751: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 38143  005E6A  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38144  005E6E  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38145  005E72  50DF               	movf	indf2,w,c
 38146  005E74  B4D8               	btfsc	status,2,c
 38147  005E76  D03D               	goto	l2892
 38148                           
 38149                           ; BSR set to: 0
 38150  005E78  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38151  005E7C  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38152  005E80  0E3E               	movlw	62
 38153  005E82  60DF               	cpfslt	indf2,c
 38154  005E84  D036               	goto	l2892
 38155                           
 38156                           ; BSR set to: 0
 38157                           ;api.c: 752: {;api.c: 753: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_RENAME;
 38158  005E86  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38159  005E8A  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38160  005E8E  CFDF F05F          	movff	indf2,??__parse_file_rename
 38161  005E92  0E01               	movlw	1
 38162  005E94  26DF               	addwf	indf2,f,c
 38163  005E96  505F               	movf	??__parse_file_rename,w,c
 38164  005E98  0D01               	mullw	1
 38165  005E9A  50F3               	movf	prodl,w,c
 38166  005E9C  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 38167  005E9E  6ED9               	movwf	fsr2l,c
 38168  005EA0  50F4               	movf	prodh,w,c
 38169  005EA2  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 38170  005EA4  6EDA               	movwf	fsr2h,c
 38171  005EA6  0E53               	movlw	83
 38172  005EA8  6EDF               	movwf	indf2,c
 38173                           
 38174                           ;api.c: 754: out_buffer[(*out_idx_ptr)++] = file_number;
 38175  005EAA  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38176  005EAE  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38177  005EB2  CFDF F05F          	movff	indf2,??__parse_file_rename
 38178  005EB6  0E01               	movlw	1
 38179  005EB8  26DF               	addwf	indf2,f,c
 38180  005EBA  505F               	movf	??__parse_file_rename,w,c
 38181  005EBC  0D01               	mullw	1
 38182  005EBE  50F3               	movf	prodl,w,c
 38183  005EC0  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 38184  005EC2  6ED9               	movwf	fsr2l,c
 38185  005EC4  50F4               	movf	prodh,w,c
 38186  005EC6  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 38187  005EC8  6EDA               	movwf	fsr2h,c
 38188  005ECA  C067  FFDF         	movff	__parse_file_rename@file_number,indf2
 38189                           
 38190                           ;api.c: 755: out_buffer[(*out_idx_ptr)++] = return_value;
 38191  005ECE  C064  FFD9         	movff	__parse_file_rename@out_idx_ptr,fsr2l
 38192  005ED2  C065  FFDA         	movff	__parse_file_rename@out_idx_ptr+1,fsr2h
 38193  005ED6  CFDF F05F          	movff	indf2,??__parse_file_rename
 38194  005EDA  0E01               	movlw	1
 38195  005EDC  26DF               	addwf	indf2,f,c
 38196  005EDE  505F               	movf	??__parse_file_rename,w,c
 38197  005EE0  0D01               	mullw	1
 38198  005EE2  50F3               	movf	prodl,w,c
 38199  005EE4  2562               	addwf	__parse_file_rename@out_buffer& (0+255),w,b
 38200  005EE6  6ED9               	movwf	fsr2l,c
 38201  005EE8  50F4               	movf	prodh,w,c
 38202  005EEA  2163               	addwfc	(__parse_file_rename@out_buffer+1)& (0+255),w,b
 38203  005EEC  6EDA               	movwf	fsr2h,c
 38204  005EEE  C066  FFDF         	movff	__parse_file_rename@return_value,indf2
 38205  005EF2                     l2892:
 38206                           
 38207                           ; BSR set to: 0
 38208                           ;api.c: 756: };api.c: 758: return 15;
 38209                           
 38210                           ; BSR set to: 0
 38211  005EF2  0E0F               	movlw	15
 38212  005EF4  0012               	return	
 38213  005EF6                     __end_of__parse_file_rename:
 38214                           	opt stack 0
 38215                           tosu	equ	0xFFF
 38216                           tosh	equ	0xFFE
 38217                           tosl	equ	0xFFD
 38218                           pclath	equ	0xFFA
 38219                           tblptru	equ	0xFF8
 38220                           tblptrh	equ	0xFF7
 38221                           tblptrl	equ	0xFF6
 38222                           tablat	equ	0xFF5
 38223                           prodh	equ	0xFF4
 38224                           prodl	equ	0xFF3
 38225                           intcon	equ	0xFF2
 38226                           intcon2	equ	0xFF1
 38227                           intcon3	equ	0xFF0
 38228                           indf0	equ	0xFEF
 38229                           postinc0	equ	0xFEE
 38230                           fsr0h	equ	0xFEA
 38231                           fsr0l	equ	0xFE9
 38232                           wreg	equ	0xFE8
 38233                           indf1	equ	0xFE7
 38234                           postdec1	equ	0xFE5
 38235                           plusw1	equ	0xFE3
 38236                           fsr1h	equ	0xFE2
 38237                           fsr1l	equ	0xFE1
 38238                           indf2	equ	0xFDF
 38239                           postinc2	equ	0xFDE
 38240                           postdec2	equ	0xFDD
 38241                           plusw2	equ	0xFDB
 38242                           fsr2h	equ	0xFDA
 38243                           fsr2l	equ	0xFD9
 38244                           status	equ	0xFD8
 38245                           
 38246 ;; *************** function _fat_rename_file *****************
 38247 ;; Defined at:
 38248 ;;		line 719 in file "fat16.c"
 38249 ;; Parameters:    Size  Location     Type
 38250 ;;  file_number     1    wreg     unsigned char 
 38251 ;;  name            2   55[COMRAM] PTR unsigned char 
 38252 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38253 ;;  extension       2   57[COMRAM] PTR unsigned char 
 38254 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38255 ;; Auto vars:     Size  Location     Type
 38256 ;;  file_number     1   59[COMRAM] unsigned char 
 38257 ;;  root           32   61[COMRAM] struct .
 38258 ;;  cntr            1   93[COMRAM] unsigned char 
 38259 ;;  return_code     1   60[COMRAM] unsigned char 
 38260 ;; Return value:  Size  Location     Type
 38261 ;;                  1    wreg      unsigned char 
 38262 ;; Registers used:
 38263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38264 ;; Tracked objects:
 38265 ;;		On entry : 0/0
 38266 ;;		On exit  : 0/0
 38267 ;;		Unchanged: 0/0
 38268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38270 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38272 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38273 ;;Total ram usage:       39 bytes
 38274 ;; Hardware stack levels used:    1
 38275 ;; Hardware stack levels required when called:    6
 38276 ;; This function calls:
 38277 ;;		__write_root
 38278 ;;		_fat_get_file_information
 38279 ;; This function is called by:
 38280 ;;		__parse_file_rename
 38281 ;; This function uses a non-reentrant model
 38282 ;;
 38283                           
 38284                           	psect	text186
 38285  008126                     __ptext186:
 38286                           	opt stack 0
 38287  008126                     _fat_rename_file:
 38288                           	opt stack 21
 38289                           
 38290                           ;incstack = 0
 38291                           ;fat_rename_file@file_number stored from wreg
 38292  008126  6E3C               	movwf	fat_rename_file@file_number,c
 38293                           
 38294                           ;fat16.c: 721: rootEntry_t root;;fat16.c: 722: uint8_t cntr;;fat16.c: 723: uint8_t retur
      +                          n_code;;fat16.c: 726: return_code = fat_get_file_information(file_number, &root);
 38295  008128  0E3E               	movlw	low fat_rename_file@root
 38296  00812A  6E30               	movwf	fat_get_file_information@data,c
 38297  00812C  0E00               	movlw	high fat_rename_file@root
 38298  00812E  6E31               	movwf	fat_get_file_information@data+1,c
 38299  008130  503C               	movf	fat_rename_file@file_number,w,c
 38300  008132  ECE0  F044         	call	_fat_get_file_information
 38301  008136  6E3D               	movwf	fat_rename_file@return_code,c
 38302                           
 38303                           ;fat16.c: 727: if(return_code!=0x00)
 38304  008138  503D               	movf	fat_rename_file@return_code,w,c
 38305  00813A  B4D8               	btfsc	status,2,c
 38306  00813C  D002               	goto	l2102
 38307                           
 38308                           ;fat16.c: 728: {;fat16.c: 730: return return_code;
 38309  00813E  503D               	movf	fat_rename_file@return_code,w,c
 38310  008140  0012               	return	
 38311  008142                     l2102:
 38312                           
 38313                           ;fat16.c: 731: };fat16.c: 734: for(cntr=0; cntr<8; ++cntr)
 38314  008142  0E00               	movlw	0
 38315  008144  6E5E               	movwf	fat_rename_file@cntr,c
 38316  008146                     l13972:
 38317  008146  0E07               	movlw	7
 38318  008148  645E               	cpfsgt	fat_rename_file@cntr,c
 38319  00814A  D001               	goto	l2104
 38320  00814C  D014               	goto	u11030
 38321  00814E                     l2104:
 38322                           
 38323                           ;fat16.c: 735: {;fat16.c: 736: root.fileName[cntr] = name[cntr];
 38324  00814E  505E               	movf	fat_rename_file@cntr,w,c
 38325  008150  0D01               	mullw	1
 38326  008152  50F3               	movf	prodl,w,c
 38327  008154  2438               	addwf	fat_rename_file@name,w,c
 38328  008156  6ED9               	movwf	fsr2l,c
 38329  008158  50F4               	movf	prodh,w,c
 38330  00815A  2039               	addwfc	fat_rename_file@name+1,w,c
 38331  00815C  6EDA               	movwf	fsr2h,c
 38332  00815E  505E               	movf	fat_rename_file@cntr,w,c
 38333  008160  0D01               	mullw	1
 38334  008162  0E3E               	movlw	low fat_rename_file@root
 38335  008164  24F3               	addwf	prodl,w,c
 38336  008166  6EE1               	movwf	fsr1l,c
 38337  008168  0E00               	movlw	high fat_rename_file@root
 38338  00816A  20F4               	addwfc	prodh,w,c
 38339  00816C  6EE2               	movwf	fsr1h,c
 38340  00816E  CFDF FFE7          	movff	indf2,indf1
 38341  008172  2A5E               	incf	fat_rename_file@cntr,f,c
 38342  008174  D7E8               	goto	l13972
 38343  008176                     u11030:
 38344                           
 38345                           ;fat16.c: 737: };fat16.c: 740: for(cntr=0; cntr<3; ++cntr)
 38346  008176  0E00               	movlw	0
 38347  008178  6E5E               	movwf	fat_rename_file@cntr,c
 38348  00817A                     l13984:
 38349  00817A  0E02               	movlw	2
 38350  00817C  645E               	cpfsgt	fat_rename_file@cntr,c
 38351  00817E  D001               	goto	l2106
 38352  008180  D018               	goto	u11050
 38353  008182                     l2106:
 38354                           
 38355                           ;fat16.c: 741: {;fat16.c: 742: root.fileExtension[cntr] = extension[cntr];
 38356  008182  505E               	movf	fat_rename_file@cntr,w,c
 38357  008184  0D01               	mullw	1
 38358  008186  50F3               	movf	prodl,w,c
 38359  008188  243A               	addwf	fat_rename_file@extension,w,c
 38360  00818A  6ED9               	movwf	fsr2l,c
 38361  00818C  50F4               	movf	prodh,w,c
 38362  00818E  203B               	addwfc	fat_rename_file@extension+1,w,c
 38363  008190  6EDA               	movwf	fsr2h,c
 38364  008192  505E               	movf	fat_rename_file@cntr,w,c
 38365  008194  0D01               	mullw	1
 38366  008196  0E08               	movlw	8
 38367  008198  26F3               	addwf	prodl,f,c
 38368  00819A  0E00               	movlw	0
 38369  00819C  22F4               	addwfc	prodh,f,c
 38370  00819E  0E3E               	movlw	low fat_rename_file@root
 38371  0081A0  24F3               	addwf	prodl,w,c
 38372  0081A2  6EE1               	movwf	fsr1l,c
 38373  0081A4  0E00               	movlw	high fat_rename_file@root
 38374  0081A6  20F4               	addwfc	prodh,w,c
 38375  0081A8  6EE2               	movwf	fsr1h,c
 38376  0081AA  CFDF FFE7          	movff	indf2,indf1
 38377  0081AE  2A5E               	incf	fat_rename_file@cntr,f,c
 38378  0081B0  D7E4               	goto	l13984
 38379  0081B2                     u11050:
 38380                           
 38381                           ;fat16.c: 743: };fat16.c: 746: _write_root(file_number, &root);
 38382  0081B2  0E3E               	movlw	low fat_rename_file@root
 38383  0081B4  6E29               	movwf	__write_root@data,c
 38384  0081B6  0E00               	movlw	high fat_rename_file@root
 38385  0081B8  6E2A               	movwf	__write_root@data+1,c
 38386  0081BA  503C               	movf	fat_rename_file@file_number,w,c
 38387  0081BC  ECE9  F04B         	call	__write_root
 38388                           
 38389                           ;fat16.c: 748: return 0x00;
 38390  0081C0  0E00               	movlw	0
 38391  0081C2  0012               	return	
 38392  0081C4                     __end_of_fat_rename_file:
 38393                           	opt stack 0
 38394                           tosu	equ	0xFFF
 38395                           tosh	equ	0xFFE
 38396                           tosl	equ	0xFFD
 38397                           pclath	equ	0xFFA
 38398                           tblptru	equ	0xFF8
 38399                           tblptrh	equ	0xFF7
 38400                           tblptrl	equ	0xFF6
 38401                           tablat	equ	0xFF5
 38402                           prodh	equ	0xFF4
 38403                           prodl	equ	0xFF3
 38404                           intcon	equ	0xFF2
 38405                           intcon2	equ	0xFF1
 38406                           intcon3	equ	0xFF0
 38407                           indf0	equ	0xFEF
 38408                           postinc0	equ	0xFEE
 38409                           fsr0h	equ	0xFEA
 38410                           fsr0l	equ	0xFE9
 38411                           wreg	equ	0xFE8
 38412                           indf1	equ	0xFE7
 38413                           postdec1	equ	0xFE5
 38414                           plusw1	equ	0xFE3
 38415                           fsr1h	equ	0xFE2
 38416                           fsr1l	equ	0xFE1
 38417                           indf2	equ	0xFDF
 38418                           postinc2	equ	0xFDE
 38419                           postdec2	equ	0xFDD
 38420                           plusw2	equ	0xFDB
 38421                           fsr2h	equ	0xFDA
 38422                           fsr2l	equ	0xFD9
 38423                           status	equ	0xFD8
 38424                           
 38425 ;; *************** function __parse_file_modify *****************
 38426 ;; Defined at:
 38427 ;;		line 797 in file "api.c"
 38428 ;; Parameters:    Size  Location     Type
 38429 ;;  data            2   85[COMRAM] PTR unsigned char 
 38430 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38431 ;;  out_buffer      2   87[COMRAM] PTR unsigned char 
 38432 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 38433 ;;  out_idx_ptr     2   89[COMRAM] PTR unsigned char 
 38434 ;;		 -> api_parse@out_idx(1), 
 38435 ;; Auto vars:     Size  Location     Type
 38436 ;;  start_byte      4   50[BANK0 ] unsigned long 
 38437 ;;  number_of_by    2   48[BANK0 ] unsigned int 
 38438 ;;  file_number     1   47[BANK0 ] unsigned char 
 38439 ;;  return_value    1   46[BANK0 ] unsigned char 
 38440 ;; Return value:  Size  Location     Type
 38441 ;;                  1    wreg      unsigned char 
 38442 ;; Registers used:
 38443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38444 ;; Tracked objects:
 38445 ;;		On entry : 0/0
 38446 ;;		On exit  : 0/0
 38447 ;;		Unchanged: 0/0
 38448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38450 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38452 ;;      Totals:         7       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38453 ;;Total ram usage:       15 bytes
 38454 ;; Hardware stack levels used:    1
 38455 ;; Hardware stack levels required when called:    8
 38456 ;; This function calls:
 38457 ;;		_fat_modify_file
 38458 ;; This function is called by:
 38459 ;;		__parse_command_long
 38460 ;; This function uses a non-reentrant model
 38461 ;;
 38462                           
 38463                           	psect	text187
 38464  002028                     __ptext187:
 38465                           	opt stack 0
 38466  002028                     __parse_file_modify:
 38467                           	opt stack 20
 38468                           
 38469                           ;api.c: 799: uint16_t number_of_bytes;;api.c: 800: uint32_t start_byte;;api.c: 801: uint
      +                          8_t file_number;;api.c: 802: uint8_t return_value;;api.c: 805: if((data[0]!=COMMAND_FILE
      +                          _MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 38470                           
 38471                           ;incstack = 0
 38472  002028  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 38473  00202C  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 38474  002030  0E55               	movlw	85
 38475  002032  18DE               	xorwf	postinc2,w,c
 38476  002034  A4D8               	btfss	status,2,c
 38477  002036  D014               	goto	u11940
 38478  002038  EE20 F007          	lfsr	2,7
 38479  00203C  5056               	movf	__parse_file_modify@data,w,c
 38480  00203E  26D9               	addwf	fsr2l,f,c
 38481  002040  5057               	movf	__parse_file_modify@data+1,w,c
 38482  002042  22DA               	addwfc	fsr2h,f,c
 38483  002044  0E0F               	movlw	15
 38484  002046  18DE               	xorwf	postinc2,w,c
 38485  002048  A4D8               	btfss	status,2,c
 38486  00204A  D00A               	goto	u11940
 38487  00204C  EE20 F008          	lfsr	2,8
 38488  002050  5056               	movf	__parse_file_modify@data,w,c
 38489  002052  26D9               	addwf	fsr2l,f,c
 38490  002054  5057               	movf	__parse_file_modify@data+1,w,c
 38491  002056  22DA               	addwfc	fsr2h,f,c
 38492  002058  0E9B               	movlw	155
 38493  00205A  18DE               	xorwf	postinc2,w,c
 38494  00205C  B4D8               	btfsc	status,2,c
 38495  00205E  D002               	goto	l2902
 38496  002060                     u11940:
 38497                           
 38498                           ;api.c: 806: {;api.c: 808: return 65;
 38499  002060  0E41               	movlw	65
 38500  002062  0012               	return	
 38501  002064                     l2902:
 38502                           
 38503                           ;api.c: 809: };api.c: 812: file_number = data[1];
 38504  002064  EE20 F001          	lfsr	2,1
 38505  002068  5056               	movf	__parse_file_modify@data,w,c
 38506  00206A  26D9               	addwf	fsr2l,f,c
 38507  00206C  5057               	movf	__parse_file_modify@data+1,w,c
 38508  00206E  22DA               	addwfc	fsr2h,f,c
 38509  002070  50DF               	movf	indf2,w,c
 38510  002072  0100               	movlb	0	; () banked
 38511  002074  6F8F               	movwf	__parse_file_modify@file_number& (0+255),b
 38512                           
 38513                           ;api.c: 815: number_of_bytes = data[6];
 38514  002076  EE20 F006          	lfsr	2,6
 38515  00207A  5056               	movf	__parse_file_modify@data,w,c
 38516  00207C  26D9               	addwf	fsr2l,f,c
 38517  00207E  5057               	movf	__parse_file_modify@data+1,w,c
 38518  002080  22DA               	addwfc	fsr2h,f,c
 38519  002082  50DF               	movf	indf2,w,c
 38520  002084  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38521  002086  505C               	movf	??__parse_file_modify,w,c
 38522  002088  6F90               	movwf	__parse_file_modify@number_of_bytes& (0+255),b
 38523  00208A  6B91               	clrf	(__parse_file_modify@number_of_bytes+1)& (0+255),b
 38524                           
 38525                           ;api.c: 818: start_byte = data[2];
 38526  00208C  EE20 F002          	lfsr	2,2
 38527  002090  5056               	movf	__parse_file_modify@data,w,c
 38528  002092  26D9               	addwf	fsr2l,f,c
 38529  002094  5057               	movf	__parse_file_modify@data+1,w,c
 38530  002096  22DA               	addwfc	fsr2h,f,c
 38531  002098  50DF               	movf	indf2,w,c
 38532  00209A  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38533  00209C  505C               	movf	??__parse_file_modify,w,c
 38534  00209E  6F92               	movwf	__parse_file_modify@start_byte& (0+255),b
 38535  0020A0  6B93               	clrf	(__parse_file_modify@start_byte+1)& (0+255),b
 38536  0020A2  6B94               	clrf	(__parse_file_modify@start_byte+2)& (0+255),b
 38537  0020A4  6B95               	clrf	(__parse_file_modify@start_byte+3)& (0+255),b
 38538                           
 38539                           ; BSR set to: 0
 38540                           ;api.c: 819: start_byte <<= 8;
 38541  0020A6  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 38542  0020AA  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 38543  0020AE  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 38544  0020B2  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 38545                           
 38546                           ; BSR set to: 0
 38547                           ;api.c: 820: start_byte |= data[3];
 38548  0020B4  EE20 F003          	lfsr	2,3
 38549  0020B8  5056               	movf	__parse_file_modify@data,w,c
 38550  0020BA  26D9               	addwf	fsr2l,f,c
 38551  0020BC  5057               	movf	__parse_file_modify@data+1,w,c
 38552  0020BE  22DA               	addwfc	fsr2h,f,c
 38553  0020C0  50DF               	movf	indf2,w,c
 38554  0020C2  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38555  0020C4  505C               	movf	??__parse_file_modify,w,c
 38556  0020C6  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 38557                           
 38558                           ;api.c: 821: start_byte <<= 8;
 38559  0020C8  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 38560  0020CC  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 38561  0020D0  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 38562  0020D4  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 38563                           
 38564                           ; BSR set to: 0
 38565                           ;api.c: 822: start_byte |= data[4];
 38566  0020D6  EE20 F004          	lfsr	2,4
 38567  0020DA  5056               	movf	__parse_file_modify@data,w,c
 38568  0020DC  26D9               	addwf	fsr2l,f,c
 38569  0020DE  5057               	movf	__parse_file_modify@data+1,w,c
 38570  0020E0  22DA               	addwfc	fsr2h,f,c
 38571  0020E2  50DF               	movf	indf2,w,c
 38572  0020E4  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38573  0020E6  505C               	movf	??__parse_file_modify,w,c
 38574  0020E8  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 38575                           
 38576                           ; BSR set to: 0
 38577                           ;api.c: 823: start_byte <<= 8;
 38578  0020EA  C094  F095         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 38579  0020EE  C093  F094         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 38580  0020F2  C092  F093         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 38581  0020F6  6B92               	clrf	__parse_file_modify@start_byte& (0+255),b
 38582                           
 38583                           ;api.c: 824: start_byte |= data[5];
 38584  0020F8  EE20 F005          	lfsr	2,5
 38585  0020FC  5056               	movf	__parse_file_modify@data,w,c
 38586  0020FE  26D9               	addwf	fsr2l,f,c
 38587  002100  5057               	movf	__parse_file_modify@data+1,w,c
 38588  002102  22DA               	addwfc	fsr2h,f,c
 38589  002104  50DF               	movf	indf2,w,c
 38590  002106  6E5C               	movwf	??__parse_file_modify& (0+255),c
 38591  002108  505C               	movf	??__parse_file_modify,w,c
 38592  00210A  1392               	iorwf	__parse_file_modify@start_byte& (0+255),f,b
 38593                           
 38594                           ; BSR set to: 0
 38595                           ;api.c: 826: return_value = fat_modify_file(file_number, start_byte, number_of_bytes, &d
      +                          ata[9]);
 38596  00210C  C092  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 38597  002110  C093  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 38598  002114  C094  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 38599  002118  C095  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 38600  00211C  C090  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 38601  002120  C091  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 38602  002124  0E09               	movlw	9
 38603  002126  2456               	addwf	__parse_file_modify@data,w,c
 38604  002128  6E48               	movwf	fat_modify_file@data,c
 38605  00212A  0E00               	movlw	0
 38606  00212C  2057               	addwfc	__parse_file_modify@data+1,w,c
 38607  00212E  6E49               	movwf	fat_modify_file@data+1,c
 38608  002130  518F               	movf	__parse_file_modify@file_number& (0+255),w,b
 38609  002132  ECAC  F013         	call	_fat_modify_file
 38610  002136  0100               	movlb	0	; () banked
 38611  002138  6F8E               	movwf	__parse_file_modify@return_value& (0+255),b
 38612                           
 38613                           ; BSR set to: 0
 38614                           ;api.c: 829: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<56))
 38615  00213A  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38616  00213E  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38617  002142  50DF               	movf	indf2,w,c
 38618  002144  B4D8               	btfsc	status,2,c
 38619  002146  D0A9               	goto	l2906
 38620                           
 38621                           ; BSR set to: 0
 38622  002148  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38623  00214C  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38624  002150  0E38               	movlw	56
 38625  002152  60DF               	cpfslt	indf2,c
 38626  002154  D0A2               	goto	l2906
 38627                           
 38628                           ; BSR set to: 0
 38629                           ;api.c: 830: {;api.c: 831: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_MODIFY;
 38630  002156  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38631  00215A  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38632  00215E  CFDF F05C          	movff	indf2,??__parse_file_modify
 38633  002162  0E01               	movlw	1
 38634  002164  26DF               	addwf	indf2,f,c
 38635  002166  505C               	movf	??__parse_file_modify,w,c
 38636  002168  0D01               	mullw	1
 38637  00216A  50F3               	movf	prodl,w,c
 38638  00216C  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38639  00216E  6ED9               	movwf	fsr2l,c
 38640  002170  50F4               	movf	prodh,w,c
 38641  002172  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38642  002174  6EDA               	movwf	fsr2h,c
 38643  002176  0E55               	movlw	85
 38644  002178  6EDF               	movwf	indf2,c
 38645                           
 38646                           ;api.c: 832: out_buffer[(*out_idx_ptr)++] = file_number;
 38647  00217A  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38648  00217E  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38649  002182  CFDF F05C          	movff	indf2,??__parse_file_modify
 38650  002186  0E01               	movlw	1
 38651  002188  26DF               	addwf	indf2,f,c
 38652  00218A  505C               	movf	??__parse_file_modify,w,c
 38653  00218C  0D01               	mullw	1
 38654  00218E  50F3               	movf	prodl,w,c
 38655  002190  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38656  002192  6ED9               	movwf	fsr2l,c
 38657  002194  50F4               	movf	prodh,w,c
 38658  002196  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38659  002198  6EDA               	movwf	fsr2h,c
 38660  00219A  C08F  FFDF         	movff	__parse_file_modify@file_number,indf2
 38661                           
 38662                           ;api.c: 833: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)(((start
      +                          _byte)>>16)&0xFFFF)))>>8)&0xFF));
 38663  00219E  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38664  0021A2  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38665  0021A6  CFDF F05C          	movff	indf2,??__parse_file_modify
 38666  0021AA  0E01               	movlw	1
 38667  0021AC  26DF               	addwf	indf2,f,c
 38668  0021AE  505C               	movf	??__parse_file_modify,w,c
 38669  0021B0  0D01               	mullw	1
 38670  0021B2  50F3               	movf	prodl,w,c
 38671  0021B4  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38672  0021B6  6ED9               	movwf	fsr2l,c
 38673  0021B8  50F4               	movf	prodh,w,c
 38674  0021BA  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38675  0021BC  6EDA               	movwf	fsr2h,c
 38676  0021BE  5195               	movf	(__parse_file_modify@start_byte+3)& (0+255),w,b
 38677  0021C0  6EDF               	movwf	indf2,c
 38678                           
 38679                           ;api.c: 834: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)(((start_
      +                          byte)>>16)&0xFFFF)))&0xFF));
 38680  0021C2  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38681  0021C6  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38682  0021CA  CFDF F05C          	movff	indf2,??__parse_file_modify
 38683  0021CE  0E01               	movlw	1
 38684  0021D0  26DF               	addwf	indf2,f,c
 38685  0021D2  505C               	movf	??__parse_file_modify,w,c
 38686  0021D4  0D01               	mullw	1
 38687  0021D6  50F3               	movf	prodl,w,c
 38688  0021D8  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38689  0021DA  6ED9               	movwf	fsr2l,c
 38690  0021DC  50F4               	movf	prodh,w,c
 38691  0021DE  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38692  0021E0  6EDA               	movwf	fsr2h,c
 38693  0021E2  C094  FFDF         	movff	__parse_file_modify@start_byte+2,indf2
 38694                           
 38695                           ;api.c: 835: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((((unsigned short)((start_
      +                          byte)&0xFFFF)))>>8)&0xFF));
 38696  0021E6  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38697  0021EA  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38698  0021EE  CFDF F05C          	movff	indf2,??__parse_file_modify
 38699  0021F2  0E01               	movlw	1
 38700  0021F4  26DF               	addwf	indf2,f,c
 38701  0021F6  505C               	movf	??__parse_file_modify,w,c
 38702  0021F8  0D01               	mullw	1
 38703  0021FA  50F3               	movf	prodl,w,c
 38704  0021FC  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38705  0021FE  6ED9               	movwf	fsr2l,c
 38706  002200  50F4               	movf	prodh,w,c
 38707  002202  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38708  002204  6EDA               	movwf	fsr2h,c
 38709  002206  5193               	movf	(__parse_file_modify@start_byte+1)& (0+255),w,b
 38710  002208  6EDF               	movwf	indf2,c
 38711                           
 38712                           ;api.c: 836: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((((unsigned short)((start_b
      +                          yte)&0xFFFF)))&0xFF));
 38713  00220A  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38714  00220E  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38715  002212  CFDF F05C          	movff	indf2,??__parse_file_modify
 38716  002216  0E01               	movlw	1
 38717  002218  26DF               	addwf	indf2,f,c
 38718  00221A  505C               	movf	??__parse_file_modify,w,c
 38719  00221C  0D01               	mullw	1
 38720  00221E  50F3               	movf	prodl,w,c
 38721  002220  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38722  002222  6ED9               	movwf	fsr2l,c
 38723  002224  50F4               	movf	prodh,w,c
 38724  002226  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38725  002228  6EDA               	movwf	fsr2h,c
 38726  00222A  C092  FFDF         	movff	__parse_file_modify@start_byte,indf2
 38727                           
 38728                           ;api.c: 837: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 38729  00222E  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38730  002232  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38731  002236  CFDF F05C          	movff	indf2,??__parse_file_modify
 38732  00223A  0E01               	movlw	1
 38733  00223C  26DF               	addwf	indf2,f,c
 38734  00223E  505C               	movf	??__parse_file_modify,w,c
 38735  002240  0D01               	mullw	1
 38736  002242  50F3               	movf	prodl,w,c
 38737  002244  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38738  002246  6ED9               	movwf	fsr2l,c
 38739  002248  50F4               	movf	prodh,w,c
 38740  00224A  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38741  00224C  6EDA               	movwf	fsr2h,c
 38742  00224E  5191               	movf	(__parse_file_modify@number_of_bytes+1)& (0+255),w,b
 38743  002250  6EDF               	movwf	indf2,c
 38744                           
 38745                           ;api.c: 838: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 38746  002252  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38747  002256  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38748  00225A  CFDF F05C          	movff	indf2,??__parse_file_modify
 38749  00225E  0E01               	movlw	1
 38750  002260  26DF               	addwf	indf2,f,c
 38751  002262  505C               	movf	??__parse_file_modify,w,c
 38752  002264  0D01               	mullw	1
 38753  002266  50F3               	movf	prodl,w,c
 38754  002268  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38755  00226A  6ED9               	movwf	fsr2l,c
 38756  00226C  50F4               	movf	prodh,w,c
 38757  00226E  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38758  002270  6EDA               	movwf	fsr2h,c
 38759  002272  C090  FFDF         	movff	__parse_file_modify@number_of_bytes,indf2
 38760                           
 38761                           ;api.c: 839: out_buffer[(*out_idx_ptr)++] = return_value;
 38762  002276  C05A  FFD9         	movff	__parse_file_modify@out_idx_ptr,fsr2l
 38763  00227A  C05B  FFDA         	movff	__parse_file_modify@out_idx_ptr+1,fsr2h
 38764  00227E  CFDF F05C          	movff	indf2,??__parse_file_modify
 38765  002282  0E01               	movlw	1
 38766  002284  26DF               	addwf	indf2,f,c
 38767  002286  505C               	movf	??__parse_file_modify,w,c
 38768  002288  0D01               	mullw	1
 38769  00228A  50F3               	movf	prodl,w,c
 38770  00228C  2458               	addwf	__parse_file_modify@out_buffer,w,c
 38771  00228E  6ED9               	movwf	fsr2l,c
 38772  002290  50F4               	movf	prodh,w,c
 38773  002292  2059               	addwfc	__parse_file_modify@out_buffer+1,w,c
 38774  002294  6EDA               	movwf	fsr2h,c
 38775  002296  C08E  FFDF         	movff	__parse_file_modify@return_value,indf2
 38776  00229A                     l2906:
 38777                           
 38778                           ; BSR set to: 0
 38779                           ;api.c: 840: };api.c: 842: return number_of_bytes + 9;
 38780                           
 38781                           ; BSR set to: 0
 38782  00229A  5190               	movf	__parse_file_modify@number_of_bytes& (0+255),w,b
 38783  00229C  0F09               	addlw	9
 38784  00229E  0012               	return	
 38785  0022A0                     __end_of__parse_file_modify:
 38786                           	opt stack 0
 38787                           tosu	equ	0xFFF
 38788                           tosh	equ	0xFFE
 38789                           tosl	equ	0xFFD
 38790                           pclath	equ	0xFFA
 38791                           tblptru	equ	0xFF8
 38792                           tblptrh	equ	0xFF7
 38793                           tblptrl	equ	0xFF6
 38794                           tablat	equ	0xFF5
 38795                           prodh	equ	0xFF4
 38796                           prodl	equ	0xFF3
 38797                           intcon	equ	0xFF2
 38798                           intcon2	equ	0xFF1
 38799                           intcon3	equ	0xFF0
 38800                           indf0	equ	0xFEF
 38801                           postinc0	equ	0xFEE
 38802                           fsr0h	equ	0xFEA
 38803                           fsr0l	equ	0xFE9
 38804                           wreg	equ	0xFE8
 38805                           indf1	equ	0xFE7
 38806                           postdec1	equ	0xFE5
 38807                           plusw1	equ	0xFE3
 38808                           fsr1h	equ	0xFE2
 38809                           fsr1l	equ	0xFE1
 38810                           indf2	equ	0xFDF
 38811                           postinc2	equ	0xFDE
 38812                           postdec2	equ	0xFDD
 38813                           plusw2	equ	0xFDB
 38814                           fsr2h	equ	0xFDA
 38815                           fsr2l	equ	0xFD9
 38816                           status	equ	0xFD8
 38817                           
 38818 ;; *************** function __parse_file_delete *****************
 38819 ;; Defined at:
 38820 ;;		line 670 in file "api.c"
 38821 ;; Parameters:    Size  Location     Type
 38822 ;;  data            2   79[COMRAM] PTR unsigned char 
 38823 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 38824 ;;  out_buffer      2   81[COMRAM] PTR unsigned char 
 38825 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 38826 ;;  out_idx_ptr     2   83[COMRAM] PTR unsigned char 
 38827 ;;		 -> api_parse@out_idx(1), 
 38828 ;; Auto vars:     Size  Location     Type
 38829 ;;  file_number     1   87[COMRAM] unsigned char 
 38830 ;;  return_value    1   86[COMRAM] unsigned char 
 38831 ;; Return value:  Size  Location     Type
 38832 ;;                  1    wreg      unsigned char 
 38833 ;; Registers used:
 38834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38835 ;; Tracked objects:
 38836 ;;		On entry : 0/0
 38837 ;;		On exit  : 0/0
 38838 ;;		Unchanged: 0/0
 38839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38843 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38844 ;;Total ram usage:        9 bytes
 38845 ;; Hardware stack levels used:    1
 38846 ;; Hardware stack levels required when called:    8
 38847 ;; This function calls:
 38848 ;;		_fat_delete_file
 38849 ;; This function is called by:
 38850 ;;		__parse_command_long
 38851 ;; This function uses a non-reentrant model
 38852 ;;
 38853                           
 38854                           	psect	text188
 38855  006832                     __ptext188:
 38856                           	opt stack 0
 38857  006832                     __parse_file_delete:
 38858                           	opt stack 20
 38859                           
 38860                           ;api.c: 674: uint8_t return_value;;api.c: 675: uint8_t file_number;;api.c: 677: if((data
      +                          [0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 38861                           
 38862                           ;incstack = 0
 38863  006832  C050  FFD9         	movff	__parse_file_delete@data,fsr2l
 38864  006836  C051  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 38865  00683A  0E51               	movlw	81
 38866  00683C  18DE               	xorwf	postinc2,w,c
 38867  00683E  A4D8               	btfss	status,2,c
 38868  006840  D014               	goto	u11740
 38869  006842  EE20 F002          	lfsr	2,2
 38870  006846  5050               	movf	__parse_file_delete@data,w,c
 38871  006848  26D9               	addwf	fsr2l,f,c
 38872  00684A  5051               	movf	__parse_file_delete@data+1,w,c
 38873  00684C  22DA               	addwfc	fsr2h,f,c
 38874  00684E  0E66               	movlw	102
 38875  006850  18DE               	xorwf	postinc2,w,c
 38876  006852  A4D8               	btfss	status,2,c
 38877  006854  D00A               	goto	u11740
 38878  006856  EE20 F003          	lfsr	2,3
 38879  00685A  5050               	movf	__parse_file_delete@data,w,c
 38880  00685C  26D9               	addwf	fsr2l,f,c
 38881  00685E  5051               	movf	__parse_file_delete@data+1,w,c
 38882  006860  22DA               	addwfc	fsr2h,f,c
 38883  006862  0EA0               	movlw	160
 38884  006864  18DE               	xorwf	postinc2,w,c
 38885  006866  B4D8               	btfsc	status,2,c
 38886  006868  D002               	goto	l2874
 38887  00686A                     u11740:
 38888                           
 38889                           ;api.c: 678: {;api.c: 679: return 4;
 38890  00686A  0E04               	movlw	4
 38891  00686C  0012               	return	
 38892  00686E                     l2874:
 38893                           
 38894                           ;api.c: 680: };api.c: 683: file_number = data[1];
 38895  00686E  EE20 F001          	lfsr	2,1
 38896  006872  5050               	movf	__parse_file_delete@data,w,c
 38897  006874  26D9               	addwf	fsr2l,f,c
 38898  006876  5051               	movf	__parse_file_delete@data+1,w,c
 38899  006878  22DA               	addwfc	fsr2h,f,c
 38900  00687A  50DF               	movf	indf2,w,c
 38901  00687C  6E58               	movwf	__parse_file_delete@file_number,c
 38902                           
 38903                           ;api.c: 686: return_value = fat_delete_file(file_number);
 38904  00687E  5058               	movf	__parse_file_delete@file_number,w,c
 38905  006880  EC5C  F04B         	call	_fat_delete_file
 38906  006884  6E57               	movwf	__parse_file_delete@return_value,c
 38907                           
 38908                           ;api.c: 689: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 38909  006886  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38910  00688A  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38911  00688E  50DF               	movf	indf2,w,c
 38912  006890  B4D8               	btfsc	status,2,c
 38913  006892  D03D               	goto	l2878
 38914  006894  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38915  006898  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38916  00689C  0E3E               	movlw	62
 38917  00689E  60DF               	cpfslt	indf2,c
 38918  0068A0  D036               	goto	l2878
 38919                           
 38920                           ;api.c: 690: {;api.c: 691: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_DELETE;
 38921  0068A2  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38922  0068A6  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38923  0068AA  CFDF F056          	movff	indf2,??__parse_file_delete
 38924  0068AE  0E01               	movlw	1
 38925  0068B0  26DF               	addwf	indf2,f,c
 38926  0068B2  5056               	movf	??__parse_file_delete,w,c
 38927  0068B4  0D01               	mullw	1
 38928  0068B6  50F3               	movf	prodl,w,c
 38929  0068B8  2452               	addwf	__parse_file_delete@out_buffer,w,c
 38930  0068BA  6ED9               	movwf	fsr2l,c
 38931  0068BC  50F4               	movf	prodh,w,c
 38932  0068BE  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 38933  0068C0  6EDA               	movwf	fsr2h,c
 38934  0068C2  0E51               	movlw	81
 38935  0068C4  6EDF               	movwf	indf2,c
 38936                           
 38937                           ;api.c: 692: out_buffer[(*out_idx_ptr)++] = file_number;
 38938  0068C6  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38939  0068CA  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38940  0068CE  CFDF F056          	movff	indf2,??__parse_file_delete
 38941  0068D2  0E01               	movlw	1
 38942  0068D4  26DF               	addwf	indf2,f,c
 38943  0068D6  5056               	movf	??__parse_file_delete,w,c
 38944  0068D8  0D01               	mullw	1
 38945  0068DA  50F3               	movf	prodl,w,c
 38946  0068DC  2452               	addwf	__parse_file_delete@out_buffer,w,c
 38947  0068DE  6ED9               	movwf	fsr2l,c
 38948  0068E0  50F4               	movf	prodh,w,c
 38949  0068E2  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 38950  0068E4  6EDA               	movwf	fsr2h,c
 38951  0068E6  C058  FFDF         	movff	__parse_file_delete@file_number,indf2
 38952                           
 38953                           ;api.c: 693: out_buffer[(*out_idx_ptr)++] = return_value;
 38954  0068EA  C054  FFD9         	movff	__parse_file_delete@out_idx_ptr,fsr2l
 38955  0068EE  C055  FFDA         	movff	__parse_file_delete@out_idx_ptr+1,fsr2h
 38956  0068F2  CFDF F056          	movff	indf2,??__parse_file_delete
 38957  0068F6  0E01               	movlw	1
 38958  0068F8  26DF               	addwf	indf2,f,c
 38959  0068FA  5056               	movf	??__parse_file_delete,w,c
 38960  0068FC  0D01               	mullw	1
 38961  0068FE  50F3               	movf	prodl,w,c
 38962  006900  2452               	addwf	__parse_file_delete@out_buffer,w,c
 38963  006902  6ED9               	movwf	fsr2l,c
 38964  006904  50F4               	movf	prodh,w,c
 38965  006906  2053               	addwfc	__parse_file_delete@out_buffer+1,w,c
 38966  006908  6EDA               	movwf	fsr2h,c
 38967  00690A  C057  FFDF         	movff	__parse_file_delete@return_value,indf2
 38968  00690E                     l2878:
 38969                           
 38970                           ;api.c: 694: };api.c: 696: return 4;
 38971  00690E  0E04               	movlw	4
 38972  006910  0012               	return	
 38973  006912                     __end_of__parse_file_delete:
 38974                           	opt stack 0
 38975                           tosu	equ	0xFFF
 38976                           tosh	equ	0xFFE
 38977                           tosl	equ	0xFFD
 38978                           pclath	equ	0xFFA
 38979                           tblptru	equ	0xFF8
 38980                           tblptrh	equ	0xFF7
 38981                           tblptrl	equ	0xFF6
 38982                           tablat	equ	0xFF5
 38983                           prodh	equ	0xFF4
 38984                           prodl	equ	0xFF3
 38985                           intcon	equ	0xFF2
 38986                           intcon2	equ	0xFF1
 38987                           intcon3	equ	0xFF0
 38988                           indf0	equ	0xFEF
 38989                           postinc0	equ	0xFEE
 38990                           fsr0h	equ	0xFEA
 38991                           fsr0l	equ	0xFE9
 38992                           wreg	equ	0xFE8
 38993                           indf1	equ	0xFE7
 38994                           postdec1	equ	0xFE5
 38995                           plusw1	equ	0xFE3
 38996                           fsr1h	equ	0xFE2
 38997                           fsr1l	equ	0xFE1
 38998                           indf2	equ	0xFDF
 38999                           postinc2	equ	0xFDE
 39000                           postdec2	equ	0xFDD
 39001                           plusw2	equ	0xFDB
 39002                           fsr2h	equ	0xFDA
 39003                           fsr2l	equ	0xFD9
 39004                           status	equ	0xFD8
 39005                           
 39006 ;; *************** function _fat_delete_file *****************
 39007 ;; Defined at:
 39008 ;;		line 647 in file "fat16.c"
 39009 ;; Parameters:    Size  Location     Type
 39010 ;;  file_number     1    wreg     unsigned char 
 39011 ;; Auto vars:     Size  Location     Type
 39012 ;;  file_number     1   78[COMRAM] unsigned char 
 39013 ;;  first_cluste    2   76[COMRAM] unsigned int 
 39014 ;; Return value:  Size  Location     Type
 39015 ;;                  1    wreg      unsigned char 
 39016 ;; Registers used:
 39017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39018 ;; Tracked objects:
 39019 ;;		On entry : 0/0
 39020 ;;		On exit  : 0/0
 39021 ;;		Unchanged: 0/0
 39022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39024 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39026 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39027 ;;Total ram usage:        3 bytes
 39028 ;; Hardware stack levels used:    1
 39029 ;; Hardware stack levels required when called:    7
 39030 ;; This function calls:
 39031 ;;		__delete_root
 39032 ;;		__get_first_cluster
 39033 ;;		__make_cluster_chain
 39034 ;;		__root_is_available
 39035 ;; This function is called by:
 39036 ;;		__parse_file_delete
 39037 ;; This function uses a non-reentrant model
 39038 ;;
 39039                           
 39040                           	psect	text189
 39041  0096B8                     __ptext189:
 39042                           	opt stack 0
 39043  0096B8                     _fat_delete_file:
 39044                           	opt stack 20
 39045                           
 39046                           ;incstack = 0
 39047                           ;fat_delete_file@file_number stored from wreg
 39048  0096B8  6E4F               	movwf	fat_delete_file@file_number,c
 39049                           
 39050                           ;fat16.c: 649: uint16_t first_cluster;;fat16.c: 652: if(file_number>=64)
 39051  0096BA  0E3F               	movlw	63
 39052  0096BC  644F               	cpfsgt	fat_delete_file@file_number,c
 39053  0096BE  D002               	goto	l2091
 39054                           
 39055                           ;fat16.c: 653: {;fat16.c: 655: return 0xFF;
 39056  0096C0  0EFF               	movlw	255
 39057  0096C2  0012               	return	
 39058  0096C4                     l2091:
 39059                           
 39060                           ;fat16.c: 656: };fat16.c: 659: if(_root_is_available(file_number))
 39061  0096C4  504F               	movf	fat_delete_file@file_number,w,c
 39062  0096C6  EC27  F047         	call	__root_is_available
 39063  0096CA  0900               	iorlw	0
 39064  0096CC  B4D8               	btfsc	status,2,c
 39065  0096CE  D002               	goto	l2093
 39066                           
 39067                           ;fat16.c: 660: {;fat16.c: 662: return 0xFE;
 39068  0096D0  0EFE               	movlw	254
 39069  0096D2  0012               	return	
 39070  0096D4                     l2093:
 39071                           
 39072                           ;fat16.c: 663: };fat16.c: 666: first_cluster = _get_first_cluster(file_number);
 39073  0096D4  504F               	movf	fat_delete_file@file_number,w,c
 39074  0096D6  EC49  F04A         	call	__get_first_cluster
 39075  0096DA  C030  F04D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 39076  0096DE  C031  F04E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 39077                           
 39078                           ;fat16.c: 669: _make_cluster_chain(first_cluster, 0);
 39079  0096E2  C04D  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 39080  0096E6  C04E  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 39081  0096EA  0E00               	movlw	0
 39082  0096EC  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 39083  0096EE  0E00               	movlw	0
 39084  0096F0  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 39085  0096F2  ECC6  F00A         	call	__make_cluster_chain	;wreg free
 39086                           
 39087                           ;fat16.c: 673: _delete_root(file_number);
 39088  0096F6  504F               	movf	fat_delete_file@file_number,w,c
 39089  0096F8  EC80  F04B         	call	__delete_root
 39090                           
 39091                           ;fat16.c: 675: return 0x00;
 39092  0096FC  0E00               	movlw	0
 39093  0096FE  0012               	return	
 39094  009700                     __end_of_fat_delete_file:
 39095                           	opt stack 0
 39096                           tosu	equ	0xFFF
 39097                           tosh	equ	0xFFE
 39098                           tosl	equ	0xFFD
 39099                           pclath	equ	0xFFA
 39100                           tblptru	equ	0xFF8
 39101                           tblptrh	equ	0xFF7
 39102                           tblptrl	equ	0xFF6
 39103                           tablat	equ	0xFF5
 39104                           prodh	equ	0xFF4
 39105                           prodl	equ	0xFF3
 39106                           intcon	equ	0xFF2
 39107                           intcon2	equ	0xFF1
 39108                           intcon3	equ	0xFF0
 39109                           indf0	equ	0xFEF
 39110                           postinc0	equ	0xFEE
 39111                           fsr0h	equ	0xFEA
 39112                           fsr0l	equ	0xFE9
 39113                           wreg	equ	0xFE8
 39114                           indf1	equ	0xFE7
 39115                           postdec1	equ	0xFE5
 39116                           plusw1	equ	0xFE3
 39117                           fsr1h	equ	0xFE2
 39118                           fsr1l	equ	0xFE1
 39119                           indf2	equ	0xFDF
 39120                           postinc2	equ	0xFDE
 39121                           postdec2	equ	0xFDD
 39122                           plusw2	equ	0xFDB
 39123                           fsr2h	equ	0xFDA
 39124                           fsr2l	equ	0xFD9
 39125                           status	equ	0xFD8
 39126                           
 39127 ;; *************** function __delete_root *****************
 39128 ;; Defined at:
 39129 ;;		line 486 in file "fat16.c"
 39130 ;; Parameters:    Size  Location     Type
 39131 ;;  file_number     1    wreg     unsigned char 
 39132 ;; Auto vars:     Size  Location     Type
 39133 ;;  file_number     1   45[COMRAM] unsigned char 
 39134 ;;  offset          2   42[COMRAM] unsigned int 
 39135 ;;  sector          2   40[COMRAM] unsigned int 
 39136 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 39137 ;; Return value:  Size  Location     Type
 39138 ;;                  1    wreg      void 
 39139 ;; Registers used:
 39140 ;;		wreg, status,2, status,0, cstack
 39141 ;; Tracked objects:
 39142 ;;		On entry : 0/0
 39143 ;;		On exit  : 0/0
 39144 ;;		Unchanged: 0/0
 39145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39147 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39150 ;;Total ram usage:        6 bytes
 39151 ;; Hardware stack levels used:    1
 39152 ;; Hardware stack levels required when called:    5
 39153 ;; This function calls:
 39154 ;;		__offset_from_file_number
 39155 ;;		__sector_from_file_number
 39156 ;;		_flash_partial_write
 39157 ;; This function is called by:
 39158 ;;		_fat_delete_file
 39159 ;; This function uses a non-reentrant model
 39160 ;;
 39161                           
 39162                           	psect	text190
 39163  009700                     __ptext190:
 39164                           	opt stack 0
 39165  009700                     __delete_root:
 39166                           	opt stack 21
 39167                           
 39168                           ;incstack = 0
 39169                           ;__delete_root@file_number stored from wreg
 39170  009700  6E2E               	movwf	__delete_root@file_number,c
 39171                           
 39172                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 39173  009702  502E               	movf	__delete_root@file_number,w,c
 39174  009704  ECBB  F04E         	call	__sector_from_file_number
 39175  009708  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 39176  00970C  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 39177                           
 39178                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 39179  009710  502E               	movf	__delete_root@file_number,w,c
 39180  009712  EC47  F04F         	call	__offset_from_file_number
 39181  009716  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 39182  00971A  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 39183                           
 39184                           ;fat16.c: 497: deleted_value = 0xE5;
 39185  00971E  0EE5               	movlw	229
 39186  009720  6E2D               	movwf	__delete_root@deleted_value,c
 39187                           
 39188                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 39189  009722  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 39190  009726  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 39191  00972A  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 39192  00972E  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 39193  009732  0E00               	movlw	0
 39194  009734  6E25               	movwf	flash_partial_write@length+1,c
 39195  009736  0E01               	movlw	1
 39196  009738  6E24               	movwf	flash_partial_write@length,c
 39197  00973A  0E2D               	movlw	low __delete_root@deleted_value
 39198  00973C  6E26               	movwf	flash_partial_write@data,c
 39199  00973E  0E00               	movlw	high __delete_root@deleted_value
 39200  009740  6E27               	movwf	flash_partial_write@data+1,c
 39201  009742  EC51  F045         	call	_flash_partial_write	;wreg free
 39202  009746  0012               	return		;funcret
 39203  009748                     __end_of__delete_root:
 39204                           	opt stack 0
 39205                           tosu	equ	0xFFF
 39206                           tosh	equ	0xFFE
 39207                           tosl	equ	0xFFD
 39208                           pclath	equ	0xFFA
 39209                           tblptru	equ	0xFF8
 39210                           tblptrh	equ	0xFF7
 39211                           tblptrl	equ	0xFF6
 39212                           tablat	equ	0xFF5
 39213                           prodh	equ	0xFF4
 39214                           prodl	equ	0xFF3
 39215                           intcon	equ	0xFF2
 39216                           intcon2	equ	0xFF1
 39217                           intcon3	equ	0xFF0
 39218                           indf0	equ	0xFEF
 39219                           postinc0	equ	0xFEE
 39220                           fsr0h	equ	0xFEA
 39221                           fsr0l	equ	0xFE9
 39222                           wreg	equ	0xFE8
 39223                           indf1	equ	0xFE7
 39224                           postdec1	equ	0xFE5
 39225                           plusw1	equ	0xFE3
 39226                           fsr1h	equ	0xFE2
 39227                           fsr1l	equ	0xFE1
 39228                           indf2	equ	0xFDF
 39229                           postinc2	equ	0xFDE
 39230                           postdec2	equ	0xFDD
 39231                           plusw2	equ	0xFDB
 39232                           fsr2h	equ	0xFDA
 39233                           fsr2l	equ	0xFD9
 39234                           status	equ	0xFD8
 39235                           
 39236 ;; *************** function __parse_file_create *****************
 39237 ;; Defined at:
 39238 ;;		line 699 in file "api.c"
 39239 ;; Parameters:    Size  Location     Type
 39240 ;;  data            2   88[COMRAM] PTR unsigned char 
 39241 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39242 ;;  out_buffer      2   90[COMRAM] PTR unsigned char 
 39243 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 39244 ;;  out_idx_ptr     2   92[COMRAM] PTR unsigned char 
 39245 ;;		 -> api_parse@out_idx(1), 
 39246 ;; Auto vars:     Size  Location     Type
 39247 ;;  file_size       4   38[BANK0 ] unsigned long 
 39248 ;;  file_number     1   37[BANK0 ] unsigned char 
 39249 ;; Return value:  Size  Location     Type
 39250 ;;                  1    wreg      unsigned char 
 39251 ;; Registers used:
 39252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39253 ;; Tracked objects:
 39254 ;;		On entry : 0/0
 39255 ;;		On exit  : 0/0
 39256 ;;		Unchanged: 0/0
 39257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39261 ;;      Totals:         7       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39262 ;;Total ram usage:       12 bytes
 39263 ;; Hardware stack levels used:    1
 39264 ;; Hardware stack levels required when called:    8
 39265 ;; This function calls:
 39266 ;;		_fat_create_file
 39267 ;; This function is called by:
 39268 ;;		__parse_command_long
 39269 ;; This function uses a non-reentrant model
 39270 ;;
 39271                           
 39272                           	psect	text191
 39273  00483E                     __ptext191:
 39274                           	opt stack 0
 39275  00483E                     __parse_file_create:
 39276                           	opt stack 20
 39277                           
 39278                           ;api.c: 702: uint8_t file_number;;api.c: 704: uint32_t file_size;;api.c: 705: if((data[0
      +                          ]!=COMMAND_FILE_CREATE) || (data[16]!=0xBD) || (data[17]!=0x4F))
 39279                           
 39280                           ;incstack = 0
 39281  00483E  C059  FFD9         	movff	__parse_file_create@data,fsr2l
 39282  004842  C05A  FFDA         	movff	__parse_file_create@data+1,fsr2h
 39283  004846  0E52               	movlw	82
 39284  004848  18DE               	xorwf	postinc2,w,c
 39285  00484A  A4D8               	btfss	status,2,c
 39286  00484C  D014               	goto	u11790
 39287  00484E  EE20 F010          	lfsr	2,16
 39288  004852  5059               	movf	__parse_file_create@data,w,c
 39289  004854  26D9               	addwf	fsr2l,f,c
 39290  004856  505A               	movf	__parse_file_create@data+1,w,c
 39291  004858  22DA               	addwfc	fsr2h,f,c
 39292  00485A  0EBD               	movlw	189
 39293  00485C  18DE               	xorwf	postinc2,w,c
 39294  00485E  A4D8               	btfss	status,2,c
 39295  004860  D00A               	goto	u11790
 39296  004862  EE20 F011          	lfsr	2,17
 39297  004866  5059               	movf	__parse_file_create@data,w,c
 39298  004868  26D9               	addwf	fsr2l,f,c
 39299  00486A  505A               	movf	__parse_file_create@data+1,w,c
 39300  00486C  22DA               	addwfc	fsr2h,f,c
 39301  00486E  0E4F               	movlw	79
 39302  004870  18DE               	xorwf	postinc2,w,c
 39303  004872  B4D8               	btfsc	status,2,c
 39304  004874  D002               	goto	l2881
 39305  004876                     u11790:
 39306                           
 39307                           ;api.c: 706: {;api.c: 707: return 18;
 39308  004876  0E12               	movlw	18
 39309  004878  0012               	return	
 39310  00487A                     l2881:
 39311                           
 39312                           ;api.c: 708: };api.c: 711: file_size = data[12];
 39313  00487A  EE20 F00C          	lfsr	2,12
 39314  00487E  5059               	movf	__parse_file_create@data,w,c
 39315  004880  26D9               	addwf	fsr2l,f,c
 39316  004882  505A               	movf	__parse_file_create@data+1,w,c
 39317  004884  22DA               	addwfc	fsr2h,f,c
 39318  004886  50DF               	movf	indf2,w,c
 39319  004888  6E5F               	movwf	??__parse_file_create& (0+255),c
 39320  00488A  505F               	movf	??__parse_file_create,w,c
 39321  00488C  0100               	movlb	0	; () banked
 39322  00488E  6F86               	movwf	__parse_file_create@file_size& (0+255),b
 39323  004890  6B87               	clrf	(__parse_file_create@file_size+1)& (0+255),b
 39324  004892  6B88               	clrf	(__parse_file_create@file_size+2)& (0+255),b
 39325  004894  6B89               	clrf	(__parse_file_create@file_size+3)& (0+255),b
 39326                           
 39327                           ; BSR set to: 0
 39328                           ;api.c: 712: file_size <<= 8;
 39329  004896  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 39330  00489A  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 39331  00489E  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 39332  0048A2  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 39333                           
 39334                           ; BSR set to: 0
 39335                           ;api.c: 713: file_size |= data[13];
 39336  0048A4  EE20 F00D          	lfsr	2,13
 39337  0048A8  5059               	movf	__parse_file_create@data,w,c
 39338  0048AA  26D9               	addwf	fsr2l,f,c
 39339  0048AC  505A               	movf	__parse_file_create@data+1,w,c
 39340  0048AE  22DA               	addwfc	fsr2h,f,c
 39341  0048B0  50DF               	movf	indf2,w,c
 39342  0048B2  6E5F               	movwf	??__parse_file_create& (0+255),c
 39343  0048B4  505F               	movf	??__parse_file_create,w,c
 39344  0048B6  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 39345                           
 39346                           ;api.c: 714: file_size <<= 8;
 39347  0048B8  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 39348  0048BC  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 39349  0048C0  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 39350  0048C4  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 39351                           
 39352                           ; BSR set to: 0
 39353                           ;api.c: 715: file_size |= data[14];
 39354  0048C6  EE20 F00E          	lfsr	2,14
 39355  0048CA  5059               	movf	__parse_file_create@data,w,c
 39356  0048CC  26D9               	addwf	fsr2l,f,c
 39357  0048CE  505A               	movf	__parse_file_create@data+1,w,c
 39358  0048D0  22DA               	addwfc	fsr2h,f,c
 39359  0048D2  50DF               	movf	indf2,w,c
 39360  0048D4  6E5F               	movwf	??__parse_file_create& (0+255),c
 39361  0048D6  505F               	movf	??__parse_file_create,w,c
 39362  0048D8  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 39363                           
 39364                           ; BSR set to: 0
 39365                           ;api.c: 716: file_size <<= 8;
 39366  0048DA  C088  F089         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 39367  0048DE  C087  F088         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 39368  0048E2  C086  F087         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 39369  0048E6  6B86               	clrf	__parse_file_create@file_size& (0+255),b
 39370                           
 39371                           ;api.c: 717: file_size |= data[15];
 39372  0048E8  EE20 F00F          	lfsr	2,15
 39373  0048EC  5059               	movf	__parse_file_create@data,w,c
 39374  0048EE  26D9               	addwf	fsr2l,f,c
 39375  0048F0  505A               	movf	__parse_file_create@data+1,w,c
 39376  0048F2  22DA               	addwfc	fsr2h,f,c
 39377  0048F4  50DF               	movf	indf2,w,c
 39378  0048F6  6E5F               	movwf	??__parse_file_create& (0+255),c
 39379  0048F8  505F               	movf	??__parse_file_create,w,c
 39380  0048FA  1386               	iorwf	__parse_file_create@file_size& (0+255),f,b
 39381                           
 39382                           ; BSR set to: 0
 39383                           ;api.c: 720: file_number = fat_create_file(&data[1], &data[9], file_size);
 39384  0048FC  0E01               	movlw	1
 39385  0048FE  2459               	addwf	__parse_file_create@data,w,c
 39386  004900  6E4D               	movwf	fat_create_file@name,c
 39387  004902  0E00               	movlw	0
 39388  004904  205A               	addwfc	__parse_file_create@data+1,w,c
 39389  004906  6E4E               	movwf	fat_create_file@name+1,c
 39390  004908  0E09               	movlw	9
 39391  00490A  2459               	addwf	__parse_file_create@data,w,c
 39392  00490C  6E4F               	movwf	fat_create_file@extension,c
 39393  00490E  0E00               	movlw	0
 39394  004910  205A               	addwfc	__parse_file_create@data+1,w,c
 39395  004912  6E50               	movwf	fat_create_file@extension+1,c
 39396  004914  C086  F051         	movff	__parse_file_create@file_size,fat_create_file@size
 39397  004918  C087  F052         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 39398  00491C  C088  F053         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 39399  004920  C089  F054         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 39400  004924  EC6D  F027         	call	_fat_create_file	;wreg free
 39401  004928  0100               	movlb	0	; () banked
 39402  00492A  6F85               	movwf	__parse_file_create@file_number& (0+255),b
 39403                           
 39404                           ; BSR set to: 0
 39405                           ;api.c: 723: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 39406  00492C  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39407  004930  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39408  004934  50DF               	movf	indf2,w,c
 39409  004936  B4D8               	btfsc	status,2,c
 39410  004938  D02B               	goto	l2885
 39411                           
 39412                           ; BSR set to: 0
 39413  00493A  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39414  00493E  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39415  004942  0E3F               	movlw	63
 39416  004944  60DF               	cpfslt	indf2,c
 39417  004946  D024               	goto	l2885
 39418                           
 39419                           ; BSR set to: 0
 39420                           ;api.c: 724: {;api.c: 725: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_CREATE;
 39421  004948  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39422  00494C  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39423  004950  CFDF F05F          	movff	indf2,??__parse_file_create
 39424  004954  0E01               	movlw	1
 39425  004956  26DF               	addwf	indf2,f,c
 39426  004958  505F               	movf	??__parse_file_create,w,c
 39427  00495A  0D01               	mullw	1
 39428  00495C  50F3               	movf	prodl,w,c
 39429  00495E  245B               	addwf	__parse_file_create@out_buffer,w,c
 39430  004960  6ED9               	movwf	fsr2l,c
 39431  004962  50F4               	movf	prodh,w,c
 39432  004964  205C               	addwfc	__parse_file_create@out_buffer+1,w,c
 39433  004966  6EDA               	movwf	fsr2h,c
 39434  004968  0E52               	movlw	82
 39435  00496A  6EDF               	movwf	indf2,c
 39436                           
 39437                           ;api.c: 726: out_buffer[(*out_idx_ptr)++] = file_number;
 39438  00496C  C05D  FFD9         	movff	__parse_file_create@out_idx_ptr,fsr2l
 39439  004970  C05E  FFDA         	movff	__parse_file_create@out_idx_ptr+1,fsr2h
 39440  004974  CFDF F05F          	movff	indf2,??__parse_file_create
 39441  004978  0E01               	movlw	1
 39442  00497A  26DF               	addwf	indf2,f,c
 39443  00497C  505F               	movf	??__parse_file_create,w,c
 39444  00497E  0D01               	mullw	1
 39445  004980  50F3               	movf	prodl,w,c
 39446  004982  245B               	addwf	__parse_file_create@out_buffer,w,c
 39447  004984  6ED9               	movwf	fsr2l,c
 39448  004986  50F4               	movf	prodh,w,c
 39449  004988  205C               	addwfc	__parse_file_create@out_buffer+1,w,c
 39450  00498A  6EDA               	movwf	fsr2h,c
 39451  00498C  C085  FFDF         	movff	__parse_file_create@file_number,indf2
 39452  004990                     l2885:
 39453                           
 39454                           ; BSR set to: 0
 39455                           ;api.c: 727: };api.c: 729: return 18;
 39456                           
 39457                           ; BSR set to: 0
 39458  004990  0E12               	movlw	18
 39459  004992  0012               	return	
 39460  004994                     __end_of__parse_file_create:
 39461                           	opt stack 0
 39462                           tosu	equ	0xFFF
 39463                           tosh	equ	0xFFE
 39464                           tosl	equ	0xFFD
 39465                           pclath	equ	0xFFA
 39466                           tblptru	equ	0xFF8
 39467                           tblptrh	equ	0xFF7
 39468                           tblptrl	equ	0xFF6
 39469                           tablat	equ	0xFF5
 39470                           prodh	equ	0xFF4
 39471                           prodl	equ	0xFF3
 39472                           intcon	equ	0xFF2
 39473                           intcon2	equ	0xFF1
 39474                           intcon3	equ	0xFF0
 39475                           indf0	equ	0xFEF
 39476                           postinc0	equ	0xFEE
 39477                           fsr0h	equ	0xFEA
 39478                           fsr0l	equ	0xFE9
 39479                           wreg	equ	0xFE8
 39480                           indf1	equ	0xFE7
 39481                           postdec1	equ	0xFE5
 39482                           plusw1	equ	0xFE3
 39483                           fsr1h	equ	0xFE2
 39484                           fsr1l	equ	0xFE1
 39485                           indf2	equ	0xFDF
 39486                           postinc2	equ	0xFDE
 39487                           postdec2	equ	0xFDD
 39488                           plusw2	equ	0xFDB
 39489                           fsr2h	equ	0xFDA
 39490                           fsr2l	equ	0xFD9
 39491                           status	equ	0xFD8
 39492                           
 39493 ;; *************** function __parse_file_copy *****************
 39494 ;; Defined at:
 39495 ;;		line 976 in file "api.c"
 39496 ;; Parameters:    Size  Location     Type
 39497 ;;  data            2   52[BANK0 ] PTR unsigned char 
 39498 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39499 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 39500 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 39501 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 39502 ;;		 -> api_parse@out_idx(1), 
 39503 ;; Auto vars:     Size  Location     Type
 39504 ;;  file_number     1   94[COMRAM] unsigned char 
 39505 ;;  return_value    1   93[COMRAM] unsigned char 
 39506 ;; Return value:  Size  Location     Type
 39507 ;;                  1    wreg      unsigned char 
 39508 ;; Registers used:
 39509 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39510 ;; Tracked objects:
 39511 ;;		On entry : 0/0
 39512 ;;		On exit  : 0/0
 39513 ;;		Unchanged: 0/0
 39514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39515 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39517 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39518 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39519 ;;Total ram usage:        9 bytes
 39520 ;; Hardware stack levels used:    1
 39521 ;; Hardware stack levels required when called:    9
 39522 ;; This function calls:
 39523 ;;		_fat_copy_file
 39524 ;; This function is called by:
 39525 ;;		__parse_command_long
 39526 ;; This function uses a non-reentrant model
 39527 ;;
 39528                           
 39529                           	psect	text192
 39530  005EF6                     __ptext192:
 39531                           	opt stack 0
 39532  005EF6                     __parse_file_copy:
 39533                           	opt stack 19
 39534                           
 39535                           ;api.c: 980: uint8_t file_number;;api.c: 981: uint8_t return_value;;api.c: 983: if((data
      +                          [0]!=COMMAND_FILE_COPY) || (data[13]!=0x54) || (data[14]!=0xD9))
 39536                           
 39537                           ;incstack = 0
 39538  005EF6  C094  FFD9         	movff	__parse_file_copy@data,fsr2l
 39539  005EFA  C095  FFDA         	movff	__parse_file_copy@data+1,fsr2h
 39540  005EFE  0E5A               	movlw	90
 39541  005F00  18DE               	xorwf	postinc2,w,c
 39542  005F02  A4D8               	btfss	status,2,c
 39543  005F04  D015               	goto	u12190
 39544  005F06  0100               	movlb	0	; () banked
 39545  005F08  EE20 F00D          	lfsr	2,13
 39546  005F0C  5194               	movf	__parse_file_copy@data& (0+255),w,b
 39547  005F0E  26D9               	addwf	fsr2l,f,c
 39548  005F10  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 39549  005F12  22DA               	addwfc	fsr2h,f,c
 39550  005F14  0E54               	movlw	84
 39551  005F16  18DE               	xorwf	postinc2,w,c
 39552  005F18  A4D8               	btfss	status,2,c
 39553  005F1A  D00A               	goto	u12190
 39554                           
 39555                           ; BSR set to: 0
 39556  005F1C  EE20 F00E          	lfsr	2,14
 39557  005F20  5194               	movf	__parse_file_copy@data& (0+255),w,b
 39558  005F22  26D9               	addwf	fsr2l,f,c
 39559  005F24  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 39560  005F26  22DA               	addwfc	fsr2h,f,c
 39561  005F28  0ED9               	movlw	217
 39562  005F2A  18DE               	xorwf	postinc2,w,c
 39563  005F2C  B4D8               	btfsc	status,2,c
 39564  005F2E  D002               	goto	l2937
 39565  005F30                     u12190:
 39566                           
 39567                           ;api.c: 984: {;api.c: 985: return 15;
 39568                           
 39569                           ; BSR set to: 0
 39570  005F30  0E0F               	movlw	15
 39571  005F32  0012               	return	
 39572  005F34                     l2937:
 39573                           
 39574                           ;api.c: 986: };api.c: 989: file_number = data[1];
 39575  005F34  0100               	movlb	0	; () banked
 39576  005F36  EE20 F001          	lfsr	2,1
 39577  005F3A  5194               	movf	__parse_file_copy@data& (0+255),w,b
 39578  005F3C  26D9               	addwf	fsr2l,f,c
 39579  005F3E  5195               	movf	(__parse_file_copy@data+1)& (0+255),w,b
 39580  005F40  22DA               	addwfc	fsr2h,f,c
 39581  005F42  50DF               	movf	indf2,w,c
 39582  005F44  6E5F               	movwf	__parse_file_copy@file_number,c
 39583                           
 39584                           ; BSR set to: 0
 39585                           ;api.c: 992: return_value = fat_copy_file(file_number, &data[2], &data[10]);
 39586  005F46  0E02               	movlw	2
 39587  005F48  2594               	addwf	__parse_file_copy@data& (0+255),w,b
 39588  005F4A  6E59               	movwf	fat_copy_file@name,c
 39589  005F4C  0E00               	movlw	0
 39590  005F4E  2195               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 39591  005F50  6E5A               	movwf	fat_copy_file@name+1,c
 39592  005F52  0E0A               	movlw	10
 39593  005F54  2594               	addwf	__parse_file_copy@data& (0+255),w,b
 39594  005F56  6E5B               	movwf	fat_copy_file@extension,c
 39595  005F58  0E00               	movlw	0
 39596  005F5A  2195               	addwfc	(__parse_file_copy@data+1)& (0+255),w,b
 39597  005F5C  6E5C               	movwf	fat_copy_file@extension+1,c
 39598  005F5E  505F               	movf	__parse_file_copy@file_number,w,c
 39599  005F60  ECF4  F030         	call	_fat_copy_file
 39600  005F64  6E5E               	movwf	__parse_file_copy@return_value,c
 39601                           
 39602                           ;api.c: 995: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 39603  005F66  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39604  005F6A  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39605  005F6E  50DF               	movf	indf2,w,c
 39606  005F70  B4D8               	btfsc	status,2,c
 39607  005F72  D03E               	goto	l2941
 39608  005F74  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39609  005F78  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39610  005F7C  0E3E               	movlw	62
 39611  005F7E  60DF               	cpfslt	indf2,c
 39612  005F80  D037               	goto	l2941
 39613                           
 39614                           ;api.c: 996: {;api.c: 997: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_COPY;
 39615  005F82  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39616  005F86  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39617  005F8A  CFDF F05D          	movff	indf2,??__parse_file_copy
 39618  005F8E  0E01               	movlw	1
 39619  005F90  26DF               	addwf	indf2,f,c
 39620  005F92  505D               	movf	??__parse_file_copy,w,c
 39621  005F94  0D01               	mullw	1
 39622  005F96  50F3               	movf	prodl,w,c
 39623  005F98  0100               	movlb	0	; () banked
 39624  005F9A  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 39625  005F9C  6ED9               	movwf	fsr2l,c
 39626  005F9E  50F4               	movf	prodh,w,c
 39627  005FA0  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 39628  005FA2  6EDA               	movwf	fsr2h,c
 39629  005FA4  0E5A               	movlw	90
 39630  005FA6  6EDF               	movwf	indf2,c
 39631                           
 39632                           ;api.c: 998: out_buffer[(*out_idx_ptr)++] = file_number;
 39633  005FA8  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39634  005FAC  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39635  005FB0  CFDF F05D          	movff	indf2,??__parse_file_copy
 39636  005FB4  0E01               	movlw	1
 39637  005FB6  26DF               	addwf	indf2,f,c
 39638  005FB8  505D               	movf	??__parse_file_copy,w,c
 39639  005FBA  0D01               	mullw	1
 39640  005FBC  50F3               	movf	prodl,w,c
 39641  005FBE  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 39642  005FC0  6ED9               	movwf	fsr2l,c
 39643  005FC2  50F4               	movf	prodh,w,c
 39644  005FC4  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 39645  005FC6  6EDA               	movwf	fsr2h,c
 39646  005FC8  C05F  FFDF         	movff	__parse_file_copy@file_number,indf2
 39647                           
 39648                           ;api.c: 999: out_buffer[(*out_idx_ptr)++] = return_value;
 39649  005FCC  C098  FFD9         	movff	__parse_file_copy@out_idx_ptr,fsr2l
 39650  005FD0  C099  FFDA         	movff	__parse_file_copy@out_idx_ptr+1,fsr2h
 39651  005FD4  CFDF F05D          	movff	indf2,??__parse_file_copy
 39652  005FD8  0E01               	movlw	1
 39653  005FDA  26DF               	addwf	indf2,f,c
 39654  005FDC  505D               	movf	??__parse_file_copy,w,c
 39655  005FDE  0D01               	mullw	1
 39656  005FE0  50F3               	movf	prodl,w,c
 39657  005FE2  2596               	addwf	__parse_file_copy@out_buffer& (0+255),w,b
 39658  005FE4  6ED9               	movwf	fsr2l,c
 39659  005FE6  50F4               	movf	prodh,w,c
 39660  005FE8  2197               	addwfc	(__parse_file_copy@out_buffer+1)& (0+255),w,b
 39661  005FEA  6EDA               	movwf	fsr2h,c
 39662  005FEC  C05E  FFDF         	movff	__parse_file_copy@return_value,indf2
 39663  005FF0                     l2941:
 39664                           
 39665                           ;api.c: 1000: };api.c: 1002: return 15;
 39666                           
 39667                           ; BSR set to: 0
 39668  005FF0  0E0F               	movlw	15
 39669  005FF2  0012               	return	
 39670  005FF4                     __end_of__parse_file_copy:
 39671                           	opt stack 0
 39672                           tosu	equ	0xFFF
 39673                           tosh	equ	0xFFE
 39674                           tosl	equ	0xFFD
 39675                           pclath	equ	0xFFA
 39676                           tblptru	equ	0xFF8
 39677                           tblptrh	equ	0xFF7
 39678                           tblptrl	equ	0xFF6
 39679                           tablat	equ	0xFF5
 39680                           prodh	equ	0xFF4
 39681                           prodl	equ	0xFF3
 39682                           intcon	equ	0xFF2
 39683                           intcon2	equ	0xFF1
 39684                           intcon3	equ	0xFF0
 39685                           indf0	equ	0xFEF
 39686                           postinc0	equ	0xFEE
 39687                           fsr0h	equ	0xFEA
 39688                           fsr0l	equ	0xFE9
 39689                           wreg	equ	0xFE8
 39690                           indf1	equ	0xFE7
 39691                           postdec1	equ	0xFE5
 39692                           plusw1	equ	0xFE3
 39693                           fsr1h	equ	0xFE2
 39694                           fsr1l	equ	0xFE1
 39695                           indf2	equ	0xFDF
 39696                           postinc2	equ	0xFDE
 39697                           postdec2	equ	0xFDD
 39698                           plusw2	equ	0xFDB
 39699                           fsr2h	equ	0xFDA
 39700                           fsr2l	equ	0xFD9
 39701                           status	equ	0xFD8
 39702                           
 39703 ;; *************** function _fat_copy_file *****************
 39704 ;; Defined at:
 39705 ;;		line 854 in file "fat16.c"
 39706 ;; Parameters:    Size  Location     Type
 39707 ;;  file_number     1    wreg     unsigned char 
 39708 ;;  name            2   88[COMRAM] PTR unsigned char 
 39709 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39710 ;;  extension       2   90[COMRAM] PTR unsigned char 
 39711 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39712 ;; Auto vars:     Size  Location     Type
 39713 ;;  file_number     1   51[BANK0 ] unsigned char 
 39714 ;;  file_size       4   43[BANK0 ] unsigned long 
 39715 ;;  sector          2   49[BANK0 ] unsigned int 
 39716 ;;  number_of_cl    2   41[BANK0 ] unsigned int 
 39717 ;;  return_value    1   48[BANK0 ] unsigned char 
 39718 ;;  new_file_num    1   47[BANK0 ] unsigned char 
 39719 ;; Return value:  Size  Location     Type
 39720 ;;                  1    wreg      unsigned char 
 39721 ;; Registers used:
 39722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39723 ;; Tracked objects:
 39724 ;;		On entry : 0/0
 39725 ;;		On exit  : 0/0
 39726 ;;		Unchanged: 0/0
 39727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39729 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39730 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39731 ;;      Totals:         4      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39732 ;;Total ram usage:       19 bytes
 39733 ;; Hardware stack levels used:    1
 39734 ;; Hardware stack levels required when called:    8
 39735 ;; This function calls:
 39736 ;;		__root_is_available
 39737 ;;		_fat_copy_sector_to_buffer
 39738 ;;		_fat_create_file
 39739 ;;		_fat_get_file_size
 39740 ;;		_fat_write_sector_from_buffer
 39741 ;; This function is called by:
 39742 ;;		__parse_file_copy
 39743 ;; This function uses a non-reentrant model
 39744 ;;
 39745                           
 39746                           	psect	text193
 39747  0061E8                     __ptext193:
 39748                           	opt stack 0
 39749  0061E8                     _fat_copy_file:
 39750                           	opt stack 19
 39751                           
 39752                           ;incstack = 0
 39753                           ;fat_copy_file@file_number stored from wreg
 39754  0061E8  0100               	movlb	0	; () banked
 39755  0061EA  6F93               	movwf	fat_copy_file@file_number& (0+255),b
 39756                           
 39757                           ;fat16.c: 856: uint32_t file_size;;fat16.c: 857: uint8_t new_file_number;;fat16.c: 858: 
      +                          uint16_t number_of_clusters;;fat16.c: 859: uint16_t sector;;fat16.c: 860: uint8_t return
      +                          _value;;fat16.c: 863: if(file_number>=64)
 39758  0061EC  0E3F               	movlw	63
 39759  0061EE  0100               	movlb	0	; () banked
 39760  0061F0  6593               	cpfsgt	fat_copy_file@file_number& (0+255),b
 39761  0061F2  D002               	goto	l2125
 39762                           
 39763                           ; BSR set to: 0
 39764                           ;fat16.c: 864: {;fat16.c: 866: return 0xFF;
 39765  0061F4  0EFF               	movlw	255
 39766                           
 39767                           ; BSR set to: 0
 39768  0061F6  0012               	return	
 39769  0061F8                     l2125:
 39770                           
 39771                           ; BSR set to: 0
 39772                           ;fat16.c: 867: };fat16.c: 870: if(_root_is_available(file_number))
 39773                           
 39774                           ; BSR set to: 0
 39775  0061F8  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 39776  0061FA  EC27  F047         	call	__root_is_available
 39777  0061FE  0900               	iorlw	0
 39778  006200  B4D8               	btfsc	status,2,c
 39779  006202  D002               	goto	l2127
 39780                           
 39781                           ;fat16.c: 871: {;fat16.c: 873: return 0xFE;
 39782  006204  0EFE               	movlw	254
 39783  006206  0012               	return	
 39784  006208                     l2127:
 39785                           
 39786                           ;fat16.c: 874: };fat16.c: 877: file_size = fat_get_file_size(file_number);
 39787  006208  0100               	movlb	0	; () banked
 39788  00620A  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 39789  00620C  EC89  F045         	call	_fat_get_file_size
 39790  006210  C036  F08B         	movff	?_fat_get_file_size,fat_copy_file@file_size
 39791  006214  C037  F08C         	movff	?_fat_get_file_size+1,fat_copy_file@file_size+1
 39792  006218  C038  F08D         	movff	?_fat_get_file_size+2,fat_copy_file@file_size+2
 39793  00621C  C039  F08E         	movff	?_fat_get_file_size+3,fat_copy_file@file_size+3
 39794                           
 39795                           ;fat16.c: 880: new_file_number = fat_create_file(name, extension, file_size);
 39796  006220  C059  F04D         	movff	fat_copy_file@name,fat_create_file@name
 39797  006224  C05A  F04E         	movff	fat_copy_file@name+1,fat_create_file@name+1
 39798  006228  C05B  F04F         	movff	fat_copy_file@extension,fat_create_file@extension
 39799  00622C  C05C  F050         	movff	fat_copy_file@extension+1,fat_create_file@extension+1
 39800  006230  C08B  F051         	movff	fat_copy_file@file_size,fat_create_file@size
 39801  006234  C08C  F052         	movff	fat_copy_file@file_size+1,fat_create_file@size+1
 39802  006238  C08D  F053         	movff	fat_copy_file@file_size+2,fat_create_file@size+2
 39803  00623C  C08E  F054         	movff	fat_copy_file@file_size+3,fat_create_file@size+3
 39804  006240  EC6D  F027         	call	_fat_create_file	;wreg free
 39805  006244  0100               	movlb	0	; () banked
 39806  006246  6F8F               	movwf	fat_copy_file@new_file_number& (0+255),b
 39807                           
 39808                           ; BSR set to: 0
 39809                           ;fat16.c: 883: if(new_file_number>=64)
 39810  006248  0E3F               	movlw	63
 39811  00624A  658F               	cpfsgt	fat_copy_file@new_file_number& (0+255),b
 39812  00624C  D002               	goto	l2128
 39813                           
 39814                           ; BSR set to: 0
 39815                           ;fat16.c: 884: {;fat16.c: 886: return 0xFD;
 39816  00624E  0EFD               	movlw	253
 39817                           
 39818                           ; BSR set to: 0
 39819  006250  0012               	return	
 39820  006252                     l2128:
 39821                           
 39822                           ; BSR set to: 0
 39823                           ;fat16.c: 887: };fat16.c: 890: number_of_clusters = (file_size + 512 - 1) >> 9;
 39824                           
 39825                           ; BSR set to: 0
 39826  006252  0EFF               	movlw	255
 39827  006254  258B               	addwf	fat_copy_file@file_size& (0+255),w,b
 39828  006256  6F85               	movwf	??_fat_copy_file& (0+255),b
 39829  006258  0E01               	movlw	1
 39830  00625A  218C               	addwfc	(fat_copy_file@file_size+1)& (0+255),w,b
 39831  00625C  6F86               	movwf	(??_fat_copy_file+1)& (0+255),b
 39832  00625E  0E00               	movlw	0
 39833  006260  218D               	addwfc	(fat_copy_file@file_size+2)& (0+255),w,b
 39834  006262  6F87               	movwf	(??_fat_copy_file+2)& (0+255),b
 39835  006264  0E00               	movlw	0
 39836  006266  218E               	addwfc	(fat_copy_file@file_size+3)& (0+255),w,b
 39837  006268  6F88               	movwf	(??_fat_copy_file+3)& (0+255),b
 39838  00626A  0E0A               	movlw	10
 39839  00626C  D005               	goto	u11150
 39840  00626E                     u11155:
 39841  00626E  90D8               	bcf	status,0,c
 39842  006270  3388               	rrcf	(??_fat_copy_file+3)& (0+255),f,b
 39843  006272  3387               	rrcf	(??_fat_copy_file+2)& (0+255),f,b
 39844  006274  3386               	rrcf	(??_fat_copy_file+1)& (0+255),f,b
 39845  006276  3385               	rrcf	??_fat_copy_file& (0+255),f,b
 39846  006278                     u11150:
 39847  006278  2EE8               	decfsz	wreg,f,c
 39848  00627A  D7F9               	goto	u11155
 39849  00627C  C085  F089         	movff	??_fat_copy_file,fat_copy_file@number_of_clusters
 39850  006280  C086  F08A         	movff	??_fat_copy_file+1,fat_copy_file@number_of_clusters+1
 39851                           
 39852                           ; BSR set to: 0
 39853                           ;fat16.c: 893: for(sector=0; sector<number_of_clusters; ++sector)
 39854  006284  0E00               	movlw	0
 39855  006286  6F92               	movwf	(fat_copy_file@sector+1)& (0+255),b
 39856  006288  0E00               	movlw	0
 39857  00628A  6F91               	movwf	fat_copy_file@sector& (0+255),b
 39858  00628C  D01E               	goto	l2129
 39859  00628E                     
 39860                           ; BSR set to: 0
 39861                           ;fat16.c: 894: {;fat16.c: 895: return_value = fat_copy_sector_to_buffer(file_number, sec
      +                          tor);
 39862                           
 39863                           ; BSR set to: 0
 39864  00628E  C091  F043         	movff	fat_copy_file@sector,fat_copy_sector_to_buffer@sector
 39865  006292  C092  F044         	movff	fat_copy_file@sector+1,fat_copy_sector_to_buffer@sector+1
 39866  006296  5193               	movf	fat_copy_file@file_number& (0+255),w,b
 39867  006298  ECF7  F03B         	call	_fat_copy_sector_to_buffer
 39868  00629C  0100               	movlb	0	; () banked
 39869  00629E  6F90               	movwf	fat_copy_file@return_value& (0+255),b
 39870                           
 39871                           ; BSR set to: 0
 39872                           ;fat16.c: 896: if(return_value!=0x00)
 39873  0062A0  5190               	movf	fat_copy_file@return_value& (0+255),w,b
 39874  0062A2  B4D8               	btfsc	status,2,c
 39875  0062A4  D002               	goto	l2131
 39876                           
 39877                           ; BSR set to: 0
 39878                           ;fat16.c: 897: {;fat16.c: 898: return 0xFC;
 39879  0062A6  0EFC               	movlw	252
 39880                           
 39881                           ; BSR set to: 0
 39882  0062A8  0012               	return	
 39883  0062AA                     l2131:
 39884                           
 39885                           ; BSR set to: 0
 39886                           ;fat16.c: 899: };fat16.c: 900: return_value = fat_write_sector_from_buffer(new_file_numb
      +                          er, sector);
 39887                           
 39888                           ; BSR set to: 0
 39889  0062AA  C091  F043         	movff	fat_copy_file@sector,fat_write_sector_from_buffer@sector
 39890  0062AE  C092  F044         	movff	fat_copy_file@sector+1,fat_write_sector_from_buffer@sector+1
 39891  0062B2  518F               	movf	fat_copy_file@new_file_number& (0+255),w,b
 39892  0062B4  ECB4  F043         	call	_fat_write_sector_from_buffer
 39893  0062B8  0100               	movlb	0	; () banked
 39894  0062BA  6F90               	movwf	fat_copy_file@return_value& (0+255),b
 39895                           
 39896                           ; BSR set to: 0
 39897                           ;fat16.c: 901: if(return_value!=0x00)
 39898  0062BC  5190               	movf	fat_copy_file@return_value& (0+255),w,b
 39899  0062BE  B4D8               	btfsc	status,2,c
 39900  0062C0  D002               	goto	l2132
 39901                           
 39902                           ; BSR set to: 0
 39903                           ;fat16.c: 902: {;fat16.c: 903: return 0xFB;
 39904  0062C2  0EFB               	movlw	251
 39905                           
 39906                           ; BSR set to: 0
 39907  0062C4  0012               	return	
 39908  0062C6                     l2132:
 39909                           
 39910                           ; BSR set to: 0
 39911                           
 39912                           ; BSR set to: 0
 39913  0062C6  4B91               	infsnz	fat_copy_file@sector& (0+255),f,b
 39914  0062C8  2B92               	incf	(fat_copy_file@sector+1)& (0+255),f,b
 39915  0062CA                     l2129:
 39916                           
 39917                           ; BSR set to: 0
 39918                           
 39919                           ; BSR set to: 0
 39920  0062CA  5189               	movf	fat_copy_file@number_of_clusters& (0+255),w,b
 39921  0062CC  5D91               	subwf	fat_copy_file@sector& (0+255),w,b
 39922  0062CE  518A               	movf	(fat_copy_file@number_of_clusters+1)& (0+255),w,b
 39923  0062D0  5992               	subwfb	(fat_copy_file@sector+1)& (0+255),w,b
 39924  0062D2  A0D8               	btfss	status,0,c
 39925  0062D4  D7DC               	goto	l2130
 39926                           
 39927                           ; BSR set to: 0
 39928                           ;fat16.c: 904: };fat16.c: 905: };fat16.c: 907: return 0x00;
 39929                           
 39930                           ; BSR set to: 0
 39931  0062D6  0E00               	movlw	0
 39932  0062D8  0012               	return	
 39933  0062DA                     __end_of_fat_copy_file:
 39934                           	opt stack 0
 39935                           tosu	equ	0xFFF
 39936                           tosh	equ	0xFFE
 39937                           tosl	equ	0xFFD
 39938                           pclath	equ	0xFFA
 39939                           tblptru	equ	0xFF8
 39940                           tblptrh	equ	0xFF7
 39941                           tblptrl	equ	0xFF6
 39942                           tablat	equ	0xFF5
 39943                           prodh	equ	0xFF4
 39944                           prodl	equ	0xFF3
 39945                           intcon	equ	0xFF2
 39946                           intcon2	equ	0xFF1
 39947                           intcon3	equ	0xFF0
 39948                           indf0	equ	0xFEF
 39949                           postinc0	equ	0xFEE
 39950                           fsr0h	equ	0xFEA
 39951                           fsr0l	equ	0xFE9
 39952                           wreg	equ	0xFE8
 39953                           indf1	equ	0xFE7
 39954                           postdec1	equ	0xFE5
 39955                           plusw1	equ	0xFE3
 39956                           fsr1h	equ	0xFE2
 39957                           fsr1l	equ	0xFE1
 39958                           indf2	equ	0xFDF
 39959                           postinc2	equ	0xFDE
 39960                           postdec2	equ	0xFDD
 39961                           plusw2	equ	0xFDB
 39962                           fsr2h	equ	0xFDA
 39963                           fsr2l	equ	0xFD9
 39964                           status	equ	0xFD8
 39965                           
 39966 ;; *************** function _fat_create_file *****************
 39967 ;; Defined at:
 39968 ;;		line 586 in file "fat16.c"
 39969 ;; Parameters:    Size  Location     Type
 39970 ;;  name            2   76[COMRAM] PTR unsigned char 
 39971 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39972 ;;  extension       2   78[COMRAM] PTR unsigned char 
 39973 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39974 ;;  size            4   80[COMRAM] unsigned long 
 39975 ;; Auto vars:     Size  Location     Type
 39976 ;;  root_entry     32    5[BANK0 ] struct .
 39977 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 39978 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 39979 ;;  file_number     1    4[BANK0 ] unsigned char 
 39980 ;; Return value:  Size  Location     Type
 39981 ;;                  1    wreg      unsigned char 
 39982 ;; Registers used:
 39983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39984 ;; Tracked objects:
 39985 ;;		On entry : 0/0
 39986 ;;		On exit  : 0/0
 39987 ;;		Unchanged: 0/0
 39988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39989 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39990 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39992 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39993 ;;Total ram usage:       49 bytes
 39994 ;; Hardware stack levels used:    1
 39995 ;; Hardware stack levels required when called:    7
 39996 ;; This function calls:
 39997 ;;		__get_available_root_entry
 39998 ;;		__get_date
 39999 ;;		__get_time
 40000 ;;		__make_cluster_chain
 40001 ;;		__write_root
 40002 ;;		_fat_find_file
 40003 ;;		_memcpy
 40004 ;; This function is called by:
 40005 ;;		_fat_copy_file
 40006 ;;		__parse_file_create
 40007 ;; This function uses a non-reentrant model
 40008 ;;
 40009                           
 40010                           	psect	text194
 40011  004EDA                     __ptext194:
 40012                           	opt stack 0
 40013  004EDA                     _fat_create_file:
 40014                           	opt stack 20
 40015                           
 40016                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 40017                           
 40018                           ;incstack = 0
 40019  004EDA  C04D  F02C         	movff	fat_create_file@name,fat_find_file@name
 40020  004EDE  C04E  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 40021  004EE2  C04F  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 40022  004EE6  C050  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 40023  004EEA  EC89  F034         	call	_fat_find_file	;wreg free
 40024  004EEE  0AFF               	xorlw	255
 40025  004EF0  B4D8               	btfsc	status,2,c
 40026  004EF2  D002               	goto	l2085
 40027                           
 40028                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 40029  004EF4  0EFF               	movlw	255
 40030  004EF6  0012               	return	
 40031  004EF8                     l2085:
 40032                           
 40033                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 40034  004EF8  ECA3  F04F         	call	__get_available_root_entry	;wreg free
 40035  004EFC  0100               	movlb	0	; () banked
 40036  004EFE  6F64               	movwf	fat_create_file@file_number& (0+255),b
 40037                           
 40038                           ; BSR set to: 0
 40039                           ;fat16.c: 605: if(file_number == 0xFF)
 40040  004F00  2964               	incf	fat_create_file@file_number& (0+255),w,b
 40041  004F02  A4D8               	btfss	status,2,c
 40042  004F04  D002               	goto	l2087
 40043                           
 40044                           ; BSR set to: 0
 40045                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 40046  004F06  0EFE               	movlw	254
 40047                           
 40048                           ; BSR set to: 0
 40049  004F08  0012               	return	
 40050  004F0A                     l2087:
 40051                           
 40052                           ; BSR set to: 0
 40053                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 40054                           
 40055                           ; BSR set to: 0
 40056  004F0A  0EFF               	movlw	255
 40057  004F0C  2451               	addwf	fat_create_file@size,w,c
 40058  004F0E  6E55               	movwf	??_fat_create_file& (0+255),c
 40059  004F10  0E01               	movlw	1
 40060  004F12  2052               	addwfc	fat_create_file@size+1,w,c
 40061  004F14  6E56               	movwf	(??_fat_create_file+1)& (0+255),c
 40062  004F16  0E00               	movlw	0
 40063  004F18  2053               	addwfc	fat_create_file@size+2,w,c
 40064  004F1A  6E57               	movwf	(??_fat_create_file+2)& (0+255),c
 40065  004F1C  0E00               	movlw	0
 40066  004F1E  2054               	addwfc	fat_create_file@size+3,w,c
 40067  004F20  6E58               	movwf	(??_fat_create_file+3)& (0+255),c
 40068  004F22  0E0A               	movlw	10
 40069  004F24  D005               	goto	u10080
 40070  004F26                     u10085:
 40071  004F26  90D8               	bcf	status,0,c
 40072  004F28  3258               	rrcf	??_fat_create_file+3,f,c
 40073  004F2A  3257               	rrcf	??_fat_create_file+2,f,c
 40074  004F2C  3256               	rrcf	??_fat_create_file+1,f,c
 40075  004F2E  3255               	rrcf	??_fat_create_file,f,c
 40076  004F30                     u10080:
 40077  004F30  2EE8               	decfsz	wreg,f,c
 40078  004F32  D7F9               	goto	u10085
 40079  004F34  C055  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 40080  004F38  C056  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 40081                           
 40082                           ; BSR set to: 0
 40083                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 40084  004F3C  0E00               	movlw	0
 40085  004F3E  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 40086  004F40  0E00               	movlw	0
 40087  004F42  6E36               	movwf	__make_cluster_chain@first_cluster,c
 40088  004F44  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 40089  004F48  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 40090  004F4C  ECC6  F00A         	call	__make_cluster_chain	;wreg free
 40091  004F50  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 40092  004F54  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 40093                           
 40094                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 40095  004F58  0100               	movlb	0	; () banked
 40096  004F5A  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 40097  004F5C  E105               	bnz	l12844
 40098  004F5E  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 40099  004F60  A4D8               	btfss	status,2,c
 40100  004F62  D002               	goto	l2088
 40101                           
 40102                           ; BSR set to: 0
 40103                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 40104  004F64  0EFD               	movlw	253
 40105                           
 40106                           ; BSR set to: 0
 40107  004F66  0012               	return	
 40108  004F68                     l2088:
 40109  004F68                     l12844:
 40110                           
 40111                           ; BSR set to: 0
 40112                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 40113  004F68  0E65               	movlw	low fat_create_file@root_entry
 40114  004F6A  6E01               	movwf	memcpy@d1,c
 40115  004F6C  0E00               	movlw	high fat_create_file@root_entry
 40116  004F6E  6E02               	movwf	memcpy@d1+1,c
 40117  004F70  C04D  F003         	movff	fat_create_file@name,memcpy@s1
 40118  004F74  C04E  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 40119  004F78  5003               	movf	memcpy@s1,w,c
 40120  004F7A  1004               	iorwf	memcpy@s1+1,w,c
 40121  004F7C  A4D8               	btfss	status,2,c
 40122  004F7E  0E20               	movlw	32
 40123  004F80  6E05               	movwf	memcpy@s1+2,c
 40124  004F82  0E00               	movlw	0
 40125  004F84  6E07               	movwf	memcpy@n+1,c
 40126  004F86  0E08               	movlw	8
 40127  004F88  6E06               	movwf	memcpy@n,c
 40128  004F8A  EC92  F046         	call	_memcpy	;wreg free
 40129                           
 40130                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 40131  004F8E  0E6D               	movlw	low (fat_create_file@root_entry+8)
 40132  004F90  6E01               	movwf	memcpy@d1,c
 40133  004F92  0E00               	movlw	high (fat_create_file@root_entry+8)
 40134  004F94  6E02               	movwf	memcpy@d1+1,c
 40135  004F96  C04F  F003         	movff	fat_create_file@extension,memcpy@s1
 40136  004F9A  C050  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 40137  004F9E  5003               	movf	memcpy@s1,w,c
 40138  004FA0  1004               	iorwf	memcpy@s1+1,w,c
 40139  004FA2  A4D8               	btfss	status,2,c
 40140  004FA4  0E20               	movlw	32
 40141  004FA6  6E05               	movwf	memcpy@s1+2,c
 40142  004FA8  0E00               	movlw	0
 40143  004FAA  6E07               	movwf	memcpy@n+1,c
 40144  004FAC  0E03               	movlw	3
 40145  004FAE  6E06               	movwf	memcpy@n,c
 40146  004FB0  EC92  F046         	call	_memcpy	;wreg free
 40147                           
 40148                           ;fat16.c: 629: root_entry.attributes = 0x00;
 40149  004FB4  0E00               	movlw	0
 40150  004FB6  0100               	movlb	0	; () banked
 40151  004FB8  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 40152                           
 40153                           ; BSR set to: 0
 40154                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 40155  004FBA  0E00               	movlw	0
 40156  004FBC  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 40157                           
 40158                           ; BSR set to: 0
 40159                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 40160  004FBE  0E00               	movlw	0
 40161  004FC0  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 40162                           
 40163                           ; BSR set to: 0
 40164                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 40165  004FC2  EC43  F051         	call	__get_time	;wreg free
 40166  004FC6  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 40167  004FCA  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 40168                           
 40169                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 40170  004FCE  EC48  F051         	call	__get_date	;wreg free
 40171  004FD2  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 40172  004FD6  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 40173                           
 40174                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 40175  004FDA  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 40176  004FDE  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 40177                           
 40178                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 40179  004FE2  0E00               	movlw	0
 40180  004FE4  0100               	movlb	0	; () banked
 40181  004FE6  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 40182  004FE8  0E00               	movlw	0
 40183  004FEA  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 40184                           
 40185                           ; BSR set to: 0
 40186                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 40187  004FEC  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 40188  004FF0  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 40189                           
 40190                           ; BSR set to: 0
 40191                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 40192  004FF4  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 40193  004FF8  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 40194                           
 40195                           ; BSR set to: 0
 40196                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 40197  004FFC  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 40198  005000  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 40199                           
 40200                           ; BSR set to: 0
 40201                           ;fat16.c: 639: root_entry.fileSize = size;
 40202  005004  C051  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 40203  005008  C052  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 40204  00500C  C053  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 40205  005010  C054  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 40206                           
 40207                           ; BSR set to: 0
 40208                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 40209  005014  0E65               	movlw	low fat_create_file@root_entry
 40210  005016  6E29               	movwf	__write_root@data,c
 40211  005018  0E00               	movlw	high fat_create_file@root_entry
 40212  00501A  6E2A               	movwf	__write_root@data+1,c
 40213  00501C  5164               	movf	fat_create_file@file_number& (0+255),w,b
 40214  00501E  ECE9  F04B         	call	__write_root
 40215                           
 40216                           ;fat16.c: 644: return file_number;
 40217  005022  0100               	movlb	0	; () banked
 40218  005024  5164               	movf	fat_create_file@file_number& (0+255),w,b
 40219  005026  0012               	return	
 40220  005028                     __end_of_fat_create_file:
 40221                           	opt stack 0
 40222                           tosu	equ	0xFFF
 40223                           tosh	equ	0xFFE
 40224                           tosl	equ	0xFFD
 40225                           pclath	equ	0xFFA
 40226                           tblptru	equ	0xFF8
 40227                           tblptrh	equ	0xFF7
 40228                           tblptrl	equ	0xFF6
 40229                           tablat	equ	0xFF5
 40230                           prodh	equ	0xFF4
 40231                           prodl	equ	0xFF3
 40232                           intcon	equ	0xFF2
 40233                           intcon2	equ	0xFF1
 40234                           intcon3	equ	0xFF0
 40235                           indf0	equ	0xFEF
 40236                           postinc0	equ	0xFEE
 40237                           fsr0h	equ	0xFEA
 40238                           fsr0l	equ	0xFE9
 40239                           wreg	equ	0xFE8
 40240                           indf1	equ	0xFE7
 40241                           postdec1	equ	0xFE5
 40242                           plusw1	equ	0xFE3
 40243                           fsr1h	equ	0xFE2
 40244                           fsr1l	equ	0xFE1
 40245                           indf2	equ	0xFDF
 40246                           postinc2	equ	0xFDE
 40247                           postdec2	equ	0xFDD
 40248                           plusw2	equ	0xFDB
 40249                           fsr2h	equ	0xFDA
 40250                           fsr2l	equ	0xFD9
 40251                           status	equ	0xFD8
 40252                           
 40253 ;; *************** function _memcpy *****************
 40254 ;; Defined at:
 40255 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 40256 ;; Parameters:    Size  Location     Type
 40257 ;;  d1              2    0[COMRAM] PTR void 
 40258 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 40259 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 40260 ;;  s1              3    2[COMRAM] PTR const void 
 40261 ;;		 -> _spi_external_rx_buffer(64), ROM(49151), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 40262 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 40263 ;;		 -> SetupPkt(8), 
 40264 ;;  n               2    5[COMRAM] unsigned int 
 40265 ;; Auto vars:     Size  Location     Type
 40266 ;;  s               3    7[COMRAM] PTR const unsigned char 
 40267 ;;		 -> _spi_external_rx_buffer(64), ROM(49151), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 40268 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 40269 ;;		 -> SetupPkt(8), 
 40270 ;;  d               2   10[COMRAM] PTR unsigned char 
 40271 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 40272 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 40273 ;;  tmp             1   12[COMRAM] unsigned char 
 40274 ;; Return value:  Size  Location     Type
 40275 ;;                  2    0[COMRAM] PTR void 
 40276 ;; Registers used:
 40277 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40278 ;; Tracked objects:
 40279 ;;		On entry : 0/0
 40280 ;;		On exit  : 0/0
 40281 ;;		Unchanged: 0/0
 40282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40283 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40284 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40286 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40287 ;;Total ram usage:       13 bytes
 40288 ;; Hardware stack levels used:    1
 40289 ;; This function calls:
 40290 ;;		Nothing
 40291 ;; This function is called by:
 40292 ;;		_USBCtrlEPService
 40293 ;;		_MSDProcessCommandMediaPresent
 40294 ;;		__flash_set_page_size
 40295 ;;		_fat_create_file
 40296 ;;		_internalFlash_read
 40297 ;;		_api_prepare
 40298 ;; This function uses a non-reentrant model
 40299 ;;
 40300                           
 40301                           	psect	text195
 40302  008D24                     __ptext195:
 40303                           	opt stack 0
 40304  008D24                     _memcpy:
 40305                           	opt stack 27
 40306                           
 40307                           ;incstack = 0
 40308  008D24  C003  F008         	movff	memcpy@s1,memcpy@s
 40309  008D28  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 40310  008D2C  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 40311  008D30  C001  F00B         	movff	memcpy@d1,memcpy@d
 40312  008D34  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 40313  008D38  D01F               	goto	l3796
 40314  008D3A                     l11524:
 40315  008D3A  C008  FFF6         	movff	memcpy@s,tblptrl
 40316  008D3E  C009  FFF7         	movff	memcpy@s+1,tblptrh
 40317  008D42  C00A  FFF8         	movff	memcpy@s+2,tblptru
 40318  008D46  BAF8               	btfsc	tblptru,5,c
 40319  008D48  D003               	bra	u8387
 40320  008D4A  0008               	tblrd		*
 40321  008D4C  50F5               	movf	tablat,w,c
 40322  008D4E  D005               	bra	u8380
 40323  008D50                     u8387:
 40324  008D50  CFF6 FFE9          	movff	tblptrl,fsr0l
 40325  008D54  CFF7 FFEA          	movff	tblptrh,fsr0h
 40326  008D58  50EF               	movf	indf0,w,c
 40327  008D5A                     u8380:
 40328  008D5A  6E0D               	movwf	memcpy@tmp,c
 40329  008D5C  0E01               	movlw	1
 40330  008D5E  2608               	addwf	memcpy@s,f,c
 40331  008D60  0E00               	movlw	0
 40332  008D62  2209               	addwfc	memcpy@s+1,f,c
 40333  008D64  0E00               	movlw	0
 40334  008D66  220A               	addwfc	memcpy@s+2,f,c
 40335  008D68  C00B  FFD9         	movff	memcpy@d,fsr2l
 40336  008D6C  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 40337  008D70  C00D  FFDF         	movff	memcpy@tmp,indf2
 40338  008D74  4A0B               	infsnz	memcpy@d,f,c
 40339  008D76  2A0C               	incf	memcpy@d+1,f,c
 40340  008D78                     l3796:
 40341  008D78  0606               	decf	memcpy@n,f,c
 40342  008D7A  A0D8               	btfss	status,0,c
 40343  008D7C  0607               	decf	memcpy@n+1,f,c
 40344  008D7E  2806               	incf	memcpy@n,w,c
 40345  008D80  E1DC               	bnz	l11524
 40346  008D82  2807               	incf	memcpy@n+1,w,c
 40347  008D84  B4D8               	btfsc	status,2,c
 40348  008D86  0012               	return	
 40349  008D88  D7D8               	goto	l3797
 40350  008D8A                     __end_of_memcpy:
 40351                           	opt stack 0
 40352                           tosu	equ	0xFFF
 40353                           tosh	equ	0xFFE
 40354                           tosl	equ	0xFFD
 40355                           pclath	equ	0xFFA
 40356                           tblptru	equ	0xFF8
 40357                           tblptrh	equ	0xFF7
 40358                           tblptrl	equ	0xFF6
 40359                           tablat	equ	0xFF5
 40360                           prodh	equ	0xFF4
 40361                           prodl	equ	0xFF3
 40362                           intcon	equ	0xFF2
 40363                           intcon2	equ	0xFF1
 40364                           intcon3	equ	0xFF0
 40365                           indf0	equ	0xFEF
 40366                           postinc0	equ	0xFEE
 40367                           fsr0h	equ	0xFEA
 40368                           fsr0l	equ	0xFE9
 40369                           wreg	equ	0xFE8
 40370                           indf1	equ	0xFE7
 40371                           postdec1	equ	0xFE5
 40372                           plusw1	equ	0xFE3
 40373                           fsr1h	equ	0xFE2
 40374                           fsr1l	equ	0xFE1
 40375                           indf2	equ	0xFDF
 40376                           postinc2	equ	0xFDE
 40377                           postdec2	equ	0xFDD
 40378                           plusw2	equ	0xFDB
 40379                           fsr2h	equ	0xFDA
 40380                           fsr2l	equ	0xFD9
 40381                           status	equ	0xFD8
 40382                           
 40383 ;; *************** function _fat_find_file *****************
 40384 ;; Defined at:
 40385 ;;		line 517 in file "fat16.c"
 40386 ;; Parameters:    Size  Location     Type
 40387 ;;  name            2   43[COMRAM] PTR unsigned char 
 40388 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 40389 ;;  extension       2   45[COMRAM] PTR unsigned char 
 40390 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 40391 ;; Auto vars:     Size  Location     Type
 40392 ;;  offset          2   52[COMRAM] unsigned int 
 40393 ;;  sector          2   50[COMRAM] unsigned int 
 40394 ;;  file_number     1   49[COMRAM] unsigned char 
 40395 ;; Return value:  Size  Location     Type
 40396 ;;                  1    wreg      unsigned char 
 40397 ;; Registers used:
 40398 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40399 ;; Tracked objects:
 40400 ;;		On entry : 0/0
 40401 ;;		On exit  : 0/0
 40402 ;;		Unchanged: 0/0
 40403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40405 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40407 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40408 ;;Total ram usage:       11 bytes
 40409 ;; Hardware stack levels used:    1
 40410 ;; Hardware stack levels required when called:    5
 40411 ;; This function calls:
 40412 ;;		_flash_sector_read
 40413 ;;		_strncmp
 40414 ;; This function is called by:
 40415 ;;		_fat_create_file
 40416 ;;		__bootloader_find_file
 40417 ;;		__fill_buffer_find_file
 40418 ;; This function uses a non-reentrant model
 40419 ;;
 40420                           
 40421                           	psect	text196
 40422  006912                     __ptext196:
 40423                           	opt stack 0
 40424  006912                     _fat_find_file:
 40425                           	opt stack 23
 40426                           
 40427                           ;fat16.c: 519: uint8_t file_number = 0;
 40428                           
 40429                           ;incstack = 0
 40430  006912  0E00               	movlw	0
 40431  006914  6E32               	movwf	fat_find_file@file_number,c
 40432                           
 40433                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 40434  006916  0E00               	movlw	0
 40435  006918  6E34               	movwf	fat_find_file@sector+1,c
 40436  00691A  0E22               	movlw	34
 40437  00691C  6E33               	movwf	fat_find_file@sector,c
 40438  00691E  5034               	movf	fat_find_file@sector+1,w,c
 40439  006920  E166               	bnz	l2069
 40440  006922  0E26               	movlw	38
 40441  006924  5C33               	subwf	fat_find_file@sector,w,c
 40442  006926  B0D8               	btfsc	status,0,c
 40443  006928  D062               	goto	u9120
 40444                           
 40445                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 40446  00692A  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 40447  00692E  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 40448  006932  0EC0               	movlw	low _buffer
 40449  006934  6E2A               	movwf	flash_sector_read@data,c
 40450  006936  0E03               	movlw	high _buffer
 40451  006938  6E2B               	movwf	flash_sector_read@data+1,c
 40452  00693A  ECD3  F04D         	call	_flash_sector_read	;wreg free
 40453                           
 40454                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 40455  00693E  0E00               	movlw	0
 40456  006940  6E36               	movwf	fat_find_file@offset+1,c
 40457  006942  0E00               	movlw	0
 40458  006944  6E35               	movwf	fat_find_file@offset,c
 40459  006946                     l12048:
 40460  006946  0E02               	movlw	2
 40461  006948  5C36               	subwf	fat_find_file@offset+1,w,c
 40462  00694A  B0D8               	btfsc	status,0,c
 40463  00694C  D04B               	goto	u9110
 40464                           
 40465                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 40466  00694E  0EC0               	movlw	low _buffer
 40467  006950  2435               	addwf	fat_find_file@offset,w,c
 40468  006952  6ED9               	movwf	fsr2l,c
 40469  006954  0E03               	movlw	high _buffer
 40470  006956  2036               	addwfc	fat_find_file@offset+1,w,c
 40471  006958  6EDA               	movwf	fsr2h,c
 40472  00695A  50DF               	movf	indf2,w,c
 40473  00695C  A4D8               	btfss	status,2,c
 40474  00695E  D002               	goto	l2072
 40475                           
 40476                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 40477  006960  0EFF               	movlw	255
 40478  006962  0012               	return	
 40479  006964                     l2072:
 40480                           
 40481                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 40482  006964  0EC0               	movlw	low _buffer
 40483  006966  2435               	addwf	fat_find_file@offset,w,c
 40484  006968  6ED9               	movwf	fsr2l,c
 40485  00696A  0E03               	movlw	high _buffer
 40486  00696C  2036               	addwfc	fat_find_file@offset+1,w,c
 40487  00696E  6EDA               	movwf	fsr2h,c
 40488  006970  0EE5               	movlw	229
 40489  006972  18DE               	xorwf	postinc2,w,c
 40490  006974  B4D8               	btfsc	status,2,c
 40491  006976  D030               	goto	l2078
 40492                           
 40493                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 40494                           
 40495                           ;fat16.c: 537: {;fat16.c: 541: }
 40496  006978  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 40497  00697C  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 40498  006980  0EC0               	movlw	low _buffer
 40499  006982  2435               	addwf	fat_find_file@offset,w,c
 40500  006984  6E03               	movwf	strncmp@s2,c
 40501  006986  0E03               	movlw	high _buffer
 40502  006988  2036               	addwfc	fat_find_file@offset+1,w,c
 40503  00698A  6E04               	movwf	strncmp@s2+1,c
 40504  00698C  0E00               	movlw	0
 40505  00698E  6E06               	movwf	strncmp@len+1,c
 40506  006990  0E08               	movlw	8
 40507  006992  6E05               	movwf	strncmp@len,c
 40508  006994  EC3A  F03B         	call	_strncmp	;wreg free
 40509  006998  5001               	movf	?_strncmp,w,c
 40510  00699A  1002               	iorwf	?_strncmp+1,w,c
 40511  00699C  A4D8               	btfss	status,2,c
 40512  00699E  D01C               	goto	l2078
 40513                           
 40514                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 40515  0069A0  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 40516  0069A4  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 40517  0069A8  0E08               	movlw	8
 40518  0069AA  2435               	addwf	fat_find_file@offset,w,c
 40519  0069AC  6E30               	movwf	??_fat_find_file& (0+255),c
 40520  0069AE  0E00               	movlw	0
 40521  0069B0  2036               	addwfc	fat_find_file@offset+1,w,c
 40522  0069B2  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 40523  0069B4  0EC0               	movlw	low _buffer
 40524  0069B6  2430               	addwf	??_fat_find_file,w,c
 40525  0069B8  6E03               	movwf	strncmp@s2,c
 40526  0069BA  0E03               	movlw	high _buffer
 40527  0069BC  2031               	addwfc	??_fat_find_file+1,w,c
 40528  0069BE  6E04               	movwf	strncmp@s2+1,c
 40529  0069C0  0E00               	movlw	0
 40530  0069C2  6E06               	movwf	strncmp@len+1,c
 40531  0069C4  0E03               	movlw	3
 40532  0069C6  6E05               	movwf	strncmp@len,c
 40533  0069C8  EC3A  F03B         	call	_strncmp	;wreg free
 40534  0069CC  5001               	movf	?_strncmp,w,c
 40535  0069CE  1002               	iorwf	?_strncmp+1,w,c
 40536  0069D0  A4D8               	btfss	status,2,c
 40537  0069D2  D002               	goto	l2078
 40538                           
 40539                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 40540  0069D4  5032               	movf	fat_find_file@file_number,w,c
 40541  0069D6  0012               	return	
 40542  0069D8                     l2078:
 40543                           
 40544                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 40545  0069D8  2A32               	incf	fat_find_file@file_number,f,c
 40546  0069DA  0E20               	movlw	32
 40547  0069DC  2635               	addwf	fat_find_file@offset,f,c
 40548  0069DE  0E00               	movlw	0
 40549  0069E0  2236               	addwfc	fat_find_file@offset+1,f,c
 40550  0069E2  D7B1               	goto	l12048
 40551  0069E4                     u9110:
 40552  0069E4  4A33               	infsnz	fat_find_file@sector,f,c
 40553  0069E6  2A34               	incf	fat_find_file@sector+1,f,c
 40554  0069E8  5034               	movf	fat_find_file@sector+1,w,c
 40555  0069EA  E101               	bnz	l12082
 40556  0069EC  D79A               	goto	L52
 40557  0069EE                     u9120:
 40558  0069EE                     l2069:
 40559  0069EE                     l12082:
 40560                           
 40561                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 40562  0069EE  0EFF               	movlw	255
 40563  0069F0  0012               	return	
 40564  0069F2                     __end_of_fat_find_file:
 40565                           	opt stack 0
 40566                           tosu	equ	0xFFF
 40567                           tosh	equ	0xFFE
 40568                           tosl	equ	0xFFD
 40569                           pclath	equ	0xFFA
 40570                           tblptru	equ	0xFF8
 40571                           tblptrh	equ	0xFF7
 40572                           tblptrl	equ	0xFF6
 40573                           tablat	equ	0xFF5
 40574                           prodh	equ	0xFF4
 40575                           prodl	equ	0xFF3
 40576                           intcon	equ	0xFF2
 40577                           intcon2	equ	0xFF1
 40578                           intcon3	equ	0xFF0
 40579                           indf0	equ	0xFEF
 40580                           postinc0	equ	0xFEE
 40581                           fsr0h	equ	0xFEA
 40582                           fsr0l	equ	0xFE9
 40583                           wreg	equ	0xFE8
 40584                           indf1	equ	0xFE7
 40585                           postdec1	equ	0xFE5
 40586                           plusw1	equ	0xFE3
 40587                           fsr1h	equ	0xFE2
 40588                           fsr1l	equ	0xFE1
 40589                           indf2	equ	0xFDF
 40590                           postinc2	equ	0xFDE
 40591                           postdec2	equ	0xFDD
 40592                           plusw2	equ	0xFDB
 40593                           fsr2h	equ	0xFDA
 40594                           fsr2l	equ	0xFD9
 40595                           status	equ	0xFD8
 40596                           
 40597 ;; *************** function _strncmp *****************
 40598 ;; Defined at:
 40599 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 40600 ;; Parameters:    Size  Location     Type
 40601 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 40602 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 40603 ;;		 -> RAM(3759), 
 40604 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 40605 ;;		 -> buffer(512), 
 40606 ;;  len             2    4[COMRAM] unsigned int 
 40607 ;; Auto vars:     Size  Location     Type
 40608 ;;		None
 40609 ;; Return value:  Size  Location     Type
 40610 ;;                  2    0[COMRAM] int 
 40611 ;; Registers used:
 40612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40613 ;; Tracked objects:
 40614 ;;		On entry : 0/0
 40615 ;;		On exit  : 0/0
 40616 ;;		Unchanged: 0/0
 40617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40618 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40620 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40621 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40622 ;;Total ram usage:        9 bytes
 40623 ;; Hardware stack levels used:    1
 40624 ;; This function calls:
 40625 ;;		Nothing
 40626 ;; This function is called by:
 40627 ;;		_fat_find_file
 40628 ;; This function uses a non-reentrant model
 40629 ;;
 40630                           
 40631                           	psect	text197
 40632  007674                     __ptext197:
 40633                           	opt stack 0
 40634  007674                     _strncmp:
 40635                           	opt stack 27
 40636                           
 40637                           ;incstack = 0
 40638  007674  D053               	goto	l3814
 40639  007676                     l11468:
 40640  007676  C001  FFF6         	movff	strncmp@s1,tblptrl
 40641  00767A  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 40642  00767E  6AF8               	clrf	tblptru,c
 40643  007680  0E0E               	movlw	(high __ramtop+-1)
 40644  007682  64F7               	cpfsgt	tblptrh,c
 40645  007684  D003               	bra	u8277
 40646  007686  0008               	tblrd		*
 40647  007688  50F5               	movf	tablat,w,c
 40648  00768A  D005               	bra	u8270
 40649  00768C                     u8277:
 40650  00768C  CFF6 FFE9          	movff	tblptrl,fsr0l
 40651  007690  CFF7 FFEA          	movff	tblptrh,fsr0h
 40652  007694  50EF               	movf	indf0,w,c
 40653  007696                     u8270:
 40654  007696  0900               	iorlw	0
 40655  007698  B4D8               	btfsc	status,2,c
 40656  00769A  D019               	goto	u8290
 40657  00769C  C003  FFD9         	movff	strncmp@s2,fsr2l
 40658  0076A0  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 40659  0076A4  50DF               	movf	indf2,w,c
 40660  0076A6  6E07               	movwf	??_strncmp& (0+255),c
 40661  0076A8  C001  FFF6         	movff	strncmp@s1,tblptrl
 40662  0076AC  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 40663  0076B0  6AF8               	clrf	tblptru,c
 40664  0076B2  0E0E               	movlw	(high __ramtop+-1)
 40665  0076B4  64F7               	cpfsgt	tblptrh,c
 40666  0076B6  D003               	bra	u8297
 40667  0076B8  0008               	tblrd		*
 40668  0076BA  50F5               	movf	tablat,w,c
 40669  0076BC  D005               	bra	u8295
 40670  0076BE                     u8297:
 40671  0076BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 40672  0076C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 40673  0076C6  50EF               	movf	indf0,w,c
 40674  0076C8                     u8295:
 40675  0076C8  1807               	xorwf	??_strncmp,w,c
 40676  0076CA  B4D8               	btfsc	status,2,c
 40677  0076CC  D023               	goto	l3816
 40678  0076CE                     u8290:
 40679  0076CE  C003  FFD9         	movff	strncmp@s2,fsr2l
 40680  0076D2  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 40681  0076D6  50DF               	movf	indf2,w,c
 40682  0076D8  6E07               	movwf	??_strncmp& (0+255),c
 40683  0076DA  6A08               	clrf	(??_strncmp+1)& (0+255),c
 40684  0076DC  1E07               	comf	??_strncmp,f,c
 40685  0076DE  1E08               	comf	??_strncmp+1,f,c
 40686  0076E0  4A07               	infsnz	??_strncmp,f,c
 40687  0076E2  2A08               	incf	??_strncmp+1,f,c
 40688  0076E4  C001  FFF6         	movff	strncmp@s1,tblptrl
 40689  0076E8  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 40690  0076EC  6AF8               	clrf	tblptru,c
 40691  0076EE  0E0E               	movlw	(high __ramtop+-1)
 40692  0076F0  64F7               	cpfsgt	tblptrh,c
 40693  0076F2  D003               	bra	u8307
 40694  0076F4  0008               	tblrd		*
 40695  0076F6  50F5               	movf	tablat,w,c
 40696  0076F8  D005               	bra	u8300
 40697  0076FA                     u8307:
 40698  0076FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 40699  0076FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 40700  007702  50EF               	movf	indf0,w,c
 40701  007704                     u8300:
 40702  007704  6E09               	movwf	(??_strncmp+2)& (0+255),c
 40703  007706  5009               	movf	??_strncmp+2,w,c
 40704  007708  2407               	addwf	??_strncmp,w,c
 40705  00770A  6E01               	movwf	?_strncmp,c
 40706  00770C  0E00               	movlw	0
 40707  00770E  2008               	addwfc	??_strncmp+1,w,c
 40708  007710  6E02               	movwf	?_strncmp+1,c
 40709  007712  0012               	return	
 40710  007714                     l3816:
 40711  007714  4A01               	infsnz	strncmp@s1,f,c
 40712  007716  2A02               	incf	strncmp@s1+1,f,c
 40713  007718  4A03               	infsnz	strncmp@s2,f,c
 40714  00771A  2A04               	incf	strncmp@s2+1,f,c
 40715  00771C                     l3814:
 40716  00771C  0605               	decf	strncmp@len,f,c
 40717  00771E  A0D8               	btfss	status,0,c
 40718  007720  0606               	decf	strncmp@len+1,f,c
 40719  007722  2805               	incf	strncmp@len,w,c
 40720  007724  E1A8               	bnz	l11468
 40721  007726  2806               	incf	strncmp@len+1,w,c
 40722  007728  A4D8               	btfss	status,2,c
 40723  00772A  D7A5               	goto	l3815
 40724  00772C  0E00               	movlw	0
 40725  00772E  6E02               	movwf	?_strncmp+1,c
 40726  007730  0E00               	movlw	0
 40727  007732  6E01               	movwf	?_strncmp,c
 40728  007734  0012               	return	
 40729  007736                     __end_of_strncmp:
 40730                           	opt stack 0
 40731                           tosu	equ	0xFFF
 40732                           tosh	equ	0xFFE
 40733                           tosl	equ	0xFFD
 40734                           pclath	equ	0xFFA
 40735                           tblptru	equ	0xFF8
 40736                           tblptrh	equ	0xFF7
 40737                           tblptrl	equ	0xFF6
 40738                           tablat	equ	0xFF5
 40739                           prodh	equ	0xFF4
 40740                           prodl	equ	0xFF3
 40741                           intcon	equ	0xFF2
 40742                           intcon2	equ	0xFF1
 40743                           intcon3	equ	0xFF0
 40744                           indf0	equ	0xFEF
 40745                           postinc0	equ	0xFEE
 40746                           fsr0h	equ	0xFEA
 40747                           fsr0l	equ	0xFE9
 40748                           wreg	equ	0xFE8
 40749                           indf1	equ	0xFE7
 40750                           postdec1	equ	0xFE5
 40751                           plusw1	equ	0xFE3
 40752                           fsr1h	equ	0xFE2
 40753                           fsr1l	equ	0xFE1
 40754                           indf2	equ	0xFDF
 40755                           postinc2	equ	0xFDE
 40756                           postdec2	equ	0xFDD
 40757                           plusw2	equ	0xFDB
 40758                           fsr2h	equ	0xFDA
 40759                           fsr2l	equ	0xFD9
 40760                           status	equ	0xFD8
 40761                           
 40762 ;; *************** function __get_time *****************
 40763 ;; Defined at:
 40764 ;;		line 376 in file "fat16.c"
 40765 ;; Parameters:    Size  Location     Type
 40766 ;;		None
 40767 ;; Auto vars:     Size  Location     Type
 40768 ;;		None
 40769 ;; Return value:  Size  Location     Type
 40770 ;;                  2    0[COMRAM] unsigned int 
 40771 ;; Registers used:
 40772 ;;		wreg, status,2
 40773 ;; Tracked objects:
 40774 ;;		On entry : 0/0
 40775 ;;		On exit  : 0/0
 40776 ;;		Unchanged: 0/0
 40777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40782 ;;Total ram usage:        2 bytes
 40783 ;; Hardware stack levels used:    1
 40784 ;; This function calls:
 40785 ;;		Nothing
 40786 ;; This function is called by:
 40787 ;;		_fat_create_file
 40788 ;; This function uses a non-reentrant model
 40789 ;;
 40790                           
 40791                           	psect	text198
 40792  00A286                     __ptext198:
 40793                           	opt stack 0
 40794  00A286                     __get_time:
 40795                           	opt stack 26
 40796                           
 40797                           ;fat16.c: 388: return 0x0000;
 40798                           
 40799                           ;incstack = 0
 40800  00A286  0E00               	movlw	0
 40801  00A288  6E02               	movwf	?__get_time+1,c
 40802  00A28A  0E00               	movlw	0
 40803  00A28C  6E01               	movwf	?__get_time,c
 40804  00A28E  0012               	return	
 40805  00A290                     __end_of__get_time:
 40806                           	opt stack 0
 40807                           tosu	equ	0xFFF
 40808                           tosh	equ	0xFFE
 40809                           tosl	equ	0xFFD
 40810                           pclath	equ	0xFFA
 40811                           tblptru	equ	0xFF8
 40812                           tblptrh	equ	0xFF7
 40813                           tblptrl	equ	0xFF6
 40814                           tablat	equ	0xFF5
 40815                           prodh	equ	0xFF4
 40816                           prodl	equ	0xFF3
 40817                           intcon	equ	0xFF2
 40818                           intcon2	equ	0xFF1
 40819                           intcon3	equ	0xFF0
 40820                           indf0	equ	0xFEF
 40821                           postinc0	equ	0xFEE
 40822                           fsr0h	equ	0xFEA
 40823                           fsr0l	equ	0xFE9
 40824                           wreg	equ	0xFE8
 40825                           indf1	equ	0xFE7
 40826                           postdec1	equ	0xFE5
 40827                           plusw1	equ	0xFE3
 40828                           fsr1h	equ	0xFE2
 40829                           fsr1l	equ	0xFE1
 40830                           indf2	equ	0xFDF
 40831                           postinc2	equ	0xFDE
 40832                           postdec2	equ	0xFDD
 40833                           plusw2	equ	0xFDB
 40834                           fsr2h	equ	0xFDA
 40835                           fsr2l	equ	0xFD9
 40836                           status	equ	0xFD8
 40837                           
 40838 ;; *************** function __get_date *****************
 40839 ;; Defined at:
 40840 ;;		line 392 in file "fat16.c"
 40841 ;; Parameters:    Size  Location     Type
 40842 ;;		None
 40843 ;; Auto vars:     Size  Location     Type
 40844 ;;		None
 40845 ;; Return value:  Size  Location     Type
 40846 ;;                  2    0[COMRAM] unsigned int 
 40847 ;; Registers used:
 40848 ;;		wreg, status,2
 40849 ;; Tracked objects:
 40850 ;;		On entry : 0/0
 40851 ;;		On exit  : 0/0
 40852 ;;		Unchanged: 0/0
 40853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40857 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40858 ;;Total ram usage:        2 bytes
 40859 ;; Hardware stack levels used:    1
 40860 ;; This function calls:
 40861 ;;		Nothing
 40862 ;; This function is called by:
 40863 ;;		_fat_create_file
 40864 ;; This function uses a non-reentrant model
 40865 ;;
 40866                           
 40867                           	psect	text199
 40868  00A290                     __ptext199:
 40869                           	opt stack 0
 40870  00A290                     __get_date:
 40871                           	opt stack 26
 40872                           
 40873                           ;fat16.c: 404: return 0x0000;
 40874                           
 40875                           ;incstack = 0
 40876  00A290  0E00               	movlw	0
 40877  00A292  6E02               	movwf	?__get_date+1,c
 40878  00A294  0E00               	movlw	0
 40879  00A296  6E01               	movwf	?__get_date,c
 40880  00A298  0012               	return	
 40881  00A29A                     __end_of__get_date:
 40882                           	opt stack 0
 40883                           tosu	equ	0xFFF
 40884                           tosh	equ	0xFFE
 40885                           tosl	equ	0xFFD
 40886                           pclath	equ	0xFFA
 40887                           tblptru	equ	0xFF8
 40888                           tblptrh	equ	0xFF7
 40889                           tblptrl	equ	0xFF6
 40890                           tablat	equ	0xFF5
 40891                           prodh	equ	0xFF4
 40892                           prodl	equ	0xFF3
 40893                           intcon	equ	0xFF2
 40894                           intcon2	equ	0xFF1
 40895                           intcon3	equ	0xFF0
 40896                           indf0	equ	0xFEF
 40897                           postinc0	equ	0xFEE
 40898                           fsr0h	equ	0xFEA
 40899                           fsr0l	equ	0xFE9
 40900                           wreg	equ	0xFE8
 40901                           indf1	equ	0xFE7
 40902                           postdec1	equ	0xFE5
 40903                           plusw1	equ	0xFE3
 40904                           fsr1h	equ	0xFE2
 40905                           fsr1l	equ	0xFE1
 40906                           indf2	equ	0xFDF
 40907                           postinc2	equ	0xFDE
 40908                           postdec2	equ	0xFDD
 40909                           plusw2	equ	0xFDB
 40910                           fsr2h	equ	0xFDA
 40911                           fsr2l	equ	0xFD9
 40912                           status	equ	0xFD8
 40913                           
 40914 ;; *************** function __get_available_root_entry *****************
 40915 ;; Defined at:
 40916 ;;		line 442 in file "fat16.c"
 40917 ;; Parameters:    Size  Location     Type
 40918 ;;		None
 40919 ;; Auto vars:     Size  Location     Type
 40920 ;;  file_number     1   53[COMRAM] unsigned char 
 40921 ;; Return value:  Size  Location     Type
 40922 ;;                  1    wreg      unsigned char 
 40923 ;; Registers used:
 40924 ;;		wreg, status,2, status,0, cstack
 40925 ;; Tracked objects:
 40926 ;;		On entry : 0/0
 40927 ;;		On exit  : 0/0
 40928 ;;		Unchanged: 0/0
 40929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40934 ;;Total ram usage:        1 bytes
 40935 ;; Hardware stack levels used:    1
 40936 ;; Hardware stack levels required when called:    6
 40937 ;; This function calls:
 40938 ;;		__root_is_available
 40939 ;; This function is called by:
 40940 ;;		_fat_create_file
 40941 ;; This function uses a non-reentrant model
 40942 ;;
 40943                           
 40944                           	psect	text200
 40945  009F46                     __ptext200:
 40946                           	opt stack 0
 40947  009F46                     __get_available_root_entry:
 40948                           	opt stack 20
 40949                           
 40950                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 40951                           
 40952                           ;incstack = 0
 40953  009F46  0E00               	movlw	0
 40954  009F48  6E36               	movwf	__get_available_root_entry@file_number,c
 40955  009F4A                     l12008:
 40956  009F4A  0E3F               	movlw	63
 40957  009F4C  6436               	cpfsgt	__get_available_root_entry@file_number,c
 40958  009F4E  D001               	goto	l2050
 40959  009F50  D00A               	goto	u9040
 40960  009F52                     l2050:
 40961                           
 40962                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 40963  009F52  5036               	movf	__get_available_root_entry@file_number,w,c
 40964  009F54  EC27  F047         	call	__root_is_available
 40965  009F58  0900               	iorlw	0
 40966  009F5A  B4D8               	btfsc	status,2,c
 40967  009F5C  D002               	goto	l2052
 40968                           
 40969                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 40970  009F5E  5036               	movf	__get_available_root_entry@file_number,w,c
 40971  009F60  0012               	return	
 40972  009F62                     l2052:
 40973  009F62  2A36               	incf	__get_available_root_entry@file_number,f,c
 40974  009F64  D7F2               	goto	l12008
 40975  009F66                     u9040:
 40976                           
 40977                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 40978  009F66  0EFF               	movlw	255
 40979  009F68  0012               	return	
 40980  009F6A                     __end_of__get_available_root_entry:
 40981                           	opt stack 0
 40982                           tosu	equ	0xFFF
 40983                           tosh	equ	0xFFE
 40984                           tosl	equ	0xFFD
 40985                           pclath	equ	0xFFA
 40986                           tblptru	equ	0xFF8
 40987                           tblptrh	equ	0xFF7
 40988                           tblptrl	equ	0xFF6
 40989                           tablat	equ	0xFF5
 40990                           prodh	equ	0xFF4
 40991                           prodl	equ	0xFF3
 40992                           intcon	equ	0xFF2
 40993                           intcon2	equ	0xFF1
 40994                           intcon3	equ	0xFF0
 40995                           indf0	equ	0xFEF
 40996                           postinc0	equ	0xFEE
 40997                           fsr0h	equ	0xFEA
 40998                           fsr0l	equ	0xFE9
 40999                           wreg	equ	0xFE8
 41000                           indf1	equ	0xFE7
 41001                           postdec1	equ	0xFE5
 41002                           plusw1	equ	0xFE3
 41003                           fsr1h	equ	0xFE2
 41004                           fsr1l	equ	0xFE1
 41005                           indf2	equ	0xFDF
 41006                           postinc2	equ	0xFDE
 41007                           postdec2	equ	0xFDD
 41008                           plusw2	equ	0xFDB
 41009                           fsr2h	equ	0xFDA
 41010                           fsr2l	equ	0xFD9
 41011                           status	equ	0xFD8
 41012                           
 41013 ;; *************** function _fat_copy_sector_to_buffer *****************
 41014 ;; Defined at:
 41015 ;;		line 1420 in file "fat16.c"
 41016 ;; Parameters:    Size  Location     Type
 41017 ;;  file_number     1    wreg     unsigned char 
 41018 ;;  sector          2   66[COMRAM] unsigned int 
 41019 ;; Auto vars:     Size  Location     Type
 41020 ;;  file_number     1   82[COMRAM] unsigned char 
 41021 ;;  file_size       4   72[COMRAM] unsigned long 
 41022 ;;  cluster         2   80[COMRAM] unsigned int 
 41023 ;;  physical_sec    2   78[COMRAM] unsigned int 
 41024 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 41025 ;; Return value:  Size  Location     Type
 41026 ;;                  1    wreg      unsigned char 
 41027 ;; Registers used:
 41028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41029 ;; Tracked objects:
 41030 ;;		On entry : 0/0
 41031 ;;		On exit  : 0/0
 41032 ;;		Unchanged: 0/0
 41033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41035 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41037 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41038 ;;Total ram usage:       17 bytes
 41039 ;; Hardware stack levels used:    1
 41040 ;; Hardware stack levels required when called:    7
 41041 ;; This function calls:
 41042 ;;		__data_sector_from_cluster
 41043 ;;		__find_nth_cluster
 41044 ;;		__get_first_cluster
 41045 ;;		__root_is_available
 41046 ;;		_fat_get_file_size
 41047 ;;		_flash_copy_page_to_buffer
 41048 ;; This function is called by:
 41049 ;;		_fat_copy_file
 41050 ;;		__parse_sector_to_buffer
 41051 ;; This function uses a non-reentrant model
 41052 ;;
 41053                           
 41054                           	psect	text201
 41055  0077EE                     __ptext201:
 41056                           	opt stack 0
 41057  0077EE                     _fat_copy_sector_to_buffer:
 41058                           	opt stack 20
 41059                           
 41060                           ;incstack = 0
 41061                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 41062  0077EE  6E53               	movwf	fat_copy_sector_to_buffer@file_number,c
 41063                           
 41064                           ;fat16.c: 1422: uint32_t file_size;;fat16.c: 1423: uint16_t number_of_clusters;;fat16.c:
      +                           1424: uint16_t cluster;;fat16.c: 1425: uint16_t physical_sector;;fat16.c: 1428: if(_roo
      +                          t_is_available(file_number))
 41065  0077F0  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 41066  0077F2  EC27  F047         	call	__root_is_available
 41067  0077F6  0900               	iorlw	0
 41068  0077F8  B4D8               	btfsc	status,2,c
 41069  0077FA  D002               	goto	l2321
 41070                           
 41071                           ;fat16.c: 1429: {;fat16.c: 1431: return 0xFF;
 41072  0077FC  0EFF               	movlw	255
 41073  0077FE  0012               	return	
 41074  007800                     l2321:
 41075                           
 41076                           ;fat16.c: 1432: };fat16.c: 1435: file_size = fat_get_file_size(file_number);
 41077  007800  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 41078  007802  EC89  F045         	call	_fat_get_file_size
 41079  007806  C036  F049         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 41080  00780A  C037  F04A         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 41081  00780E  C038  F04B         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 41082  007812  C039  F04C         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 41083                           
 41084                           ;fat16.c: 1438: number_of_clusters = (uint16_t) ((file_size + 512 - 1) >> 9);
 41085  007816  0EFF               	movlw	255
 41086  007818  2449               	addwf	fat_copy_sector_to_buffer@file_size,w,c
 41087  00781A  6E45               	movwf	??_fat_copy_sector_to_buffer& (0+255),c
 41088  00781C  0E01               	movlw	1
 41089  00781E  204A               	addwfc	fat_copy_sector_to_buffer@file_size+1,w,c
 41090  007820  6E46               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),c
 41091  007822  0E00               	movlw	0
 41092  007824  204B               	addwfc	fat_copy_sector_to_buffer@file_size+2,w,c
 41093  007826  6E47               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),c
 41094  007828  0E00               	movlw	0
 41095  00782A  204C               	addwfc	fat_copy_sector_to_buffer@file_size+3,w,c
 41096  00782C  6E48               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),c
 41097  00782E  0E0A               	movlw	10
 41098  007830  D005               	goto	u10240
 41099  007832                     u10245:
 41100  007832  90D8               	bcf	status,0,c
 41101  007834  3248               	rrcf	??_fat_copy_sector_to_buffer+3,f,c
 41102  007836  3247               	rrcf	??_fat_copy_sector_to_buffer+2,f,c
 41103  007838  3246               	rrcf	??_fat_copy_sector_to_buffer+1,f,c
 41104  00783A  3245               	rrcf	??_fat_copy_sector_to_buffer,f,c
 41105  00783C                     u10240:
 41106  00783C  2EE8               	decfsz	wreg,f,c
 41107  00783E  D7F9               	goto	u10245
 41108  007840  C045  F04D         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 41109  007844  C046  F04E         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 41110                           
 41111                           ;fat16.c: 1439: if(sector >= number_of_clusters)
 41112  007848  504D               	movf	fat_copy_sector_to_buffer@number_of_clusters,w,c
 41113  00784A  5C43               	subwf	fat_copy_sector_to_buffer@sector,w,c
 41114  00784C  504E               	movf	fat_copy_sector_to_buffer@number_of_clusters+1,w,c
 41115  00784E  5844               	subwfb	fat_copy_sector_to_buffer@sector+1,w,c
 41116  007850  A0D8               	btfss	status,0,c
 41117  007852  D002               	goto	l2323
 41118                           
 41119                           ;fat16.c: 1440: {;fat16.c: 1442: return 0xFE;
 41120  007854  0EFE               	movlw	254
 41121  007856  0012               	return	
 41122  007858                     l2323:
 41123                           
 41124                           ;fat16.c: 1443: };fat16.c: 1446: cluster = _get_first_cluster(file_number);
 41125  007858  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 41126  00785A  EC49  F04A         	call	__get_first_cluster
 41127  00785E  C030  F051         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 41128  007862  C031  F052         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 41129                           
 41130                           ;fat16.c: 1447: cluster = _find_nth_cluster(cluster, sector);
 41131  007866  C051  F038         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 41132  00786A  C052  F039         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 41133  00786E  C043  F03A         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 41134  007872  C044  F03B         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 41135  007876  ECE2  F040         	call	__find_nth_cluster	;wreg free
 41136  00787A  C038  F051         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 41137  00787E  C039  F052         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 41138                           
 41139                           ;fat16.c: 1450: physical_sector = _data_sector_from_cluster(cluster);
 41140  007882  C051  F001         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 41141  007886  C052  F002         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 41142  00788A  ECFA  F050         	call	__data_sector_from_cluster	;wreg free
 41143  00788E  C001  F04F         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@physical_sector
 41144  007892  C002  F050         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@physical_sector+1
 41145                           
 41146                           ;fat16.c: 1453: flash_copy_page_to_buffer(physical_sector);
 41147  007896  C04F  F01E         	movff	fat_copy_sector_to_buffer@physical_sector,flash_copy_page_to_buffer@page
 41148  00789A  C050  F01F         	movff	fat_copy_sector_to_buffer@physical_sector+1,flash_copy_page_to_buffer@page+1
 41149  00789E  EC16  F050         	call	_flash_copy_page_to_buffer	;wreg free
 41150                           
 41151                           ;fat16.c: 1456: return 0x00;
 41152  0078A2  0E00               	movlw	0
 41153  0078A4  0012               	return	
 41154  0078A6                     __end_of_fat_copy_sector_to_buffer:
 41155                           	opt stack 0
 41156                           tosu	equ	0xFFF
 41157                           tosh	equ	0xFFE
 41158                           tosl	equ	0xFFD
 41159                           pclath	equ	0xFFA
 41160                           tblptru	equ	0xFF8
 41161                           tblptrh	equ	0xFF7
 41162                           tblptrl	equ	0xFF6
 41163                           tablat	equ	0xFF5
 41164                           prodh	equ	0xFF4
 41165                           prodl	equ	0xFF3
 41166                           intcon	equ	0xFF2
 41167                           intcon2	equ	0xFF1
 41168                           intcon3	equ	0xFF0
 41169                           indf0	equ	0xFEF
 41170                           postinc0	equ	0xFEE
 41171                           fsr0h	equ	0xFEA
 41172                           fsr0l	equ	0xFE9
 41173                           wreg	equ	0xFE8
 41174                           indf1	equ	0xFE7
 41175                           postdec1	equ	0xFE5
 41176                           plusw1	equ	0xFE3
 41177                           fsr1h	equ	0xFE2
 41178                           fsr1l	equ	0xFE1
 41179                           indf2	equ	0xFDF
 41180                           postinc2	equ	0xFDE
 41181                           postdec2	equ	0xFDD
 41182                           plusw2	equ	0xFDB
 41183                           fsr2h	equ	0xFDA
 41184                           fsr2l	equ	0xFD9
 41185                           status	equ	0xFD8
 41186                           
 41187 ;; *************** function _flash_copy_page_to_buffer *****************
 41188 ;; Defined at:
 41189 ;;		line 524 in file "flash.c"
 41190 ;; Parameters:    Size  Location     Type
 41191 ;;  page            2   29[COMRAM] unsigned int 
 41192 ;; Auto vars:     Size  Location     Type
 41193 ;;		None
 41194 ;; Return value:  Size  Location     Type
 41195 ;;                  1    wreg      void 
 41196 ;; Registers used:
 41197 ;;		wreg, status,2, status,0, cstack
 41198 ;; Tracked objects:
 41199 ;;		On entry : 0/0
 41200 ;;		On exit  : 0/0
 41201 ;;		Unchanged: 0/0
 41202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41207 ;;Total ram usage:        2 bytes
 41208 ;; Hardware stack levels used:    1
 41209 ;; Hardware stack levels required when called:    4
 41210 ;; This function calls:
 41211 ;;		__flash_copy_page_to_buffer
 41212 ;;		_spi_set_configuration
 41213 ;; This function is called by:
 41214 ;;		_fat_copy_sector_to_buffer
 41215 ;; This function uses a non-reentrant model
 41216 ;;
 41217                           
 41218                           	psect	text202
 41219  00A02C                     __ptext202:
 41220                           	opt stack 0
 41221  00A02C                     _flash_copy_page_to_buffer:
 41222                           	opt stack 22
 41223                           
 41224                           ;flash.c: 527: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 41225                           
 41226                           ;incstack = 0
 41227  00A02C  0E00               	movlw	0
 41228  00A02E  ECEF  F02A         	call	_spi_set_configuration
 41229                           
 41230                           ;flash.c: 529: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 41231  00A032  C01E  F014         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 41232  00A036  C01F  F015         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 41233  00A03A  0E01               	movlw	1
 41234  00A03C  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 41235  00A03E  EC9A  F048         	call	__flash_copy_page_to_buffer	;wreg free
 41236                           
 41237                           ;flash.c: 532: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 41238  00A042  0E01               	movlw	1
 41239  00A044  ECEF  F02A         	call	_spi_set_configuration
 41240  00A048  0012               	return		;funcret
 41241  00A04A                     __end_of_flash_copy_page_to_buffer:
 41242                           	opt stack 0
 41243                           tosu	equ	0xFFF
 41244                           tosh	equ	0xFFE
 41245                           tosl	equ	0xFFD
 41246                           pclath	equ	0xFFA
 41247                           tblptru	equ	0xFF8
 41248                           tblptrh	equ	0xFF7
 41249                           tblptrl	equ	0xFF6
 41250                           tablat	equ	0xFF5
 41251                           prodh	equ	0xFF4
 41252                           prodl	equ	0xFF3
 41253                           intcon	equ	0xFF2
 41254                           intcon2	equ	0xFF1
 41255                           intcon3	equ	0xFF0
 41256                           indf0	equ	0xFEF
 41257                           postinc0	equ	0xFEE
 41258                           fsr0h	equ	0xFEA
 41259                           fsr0l	equ	0xFE9
 41260                           wreg	equ	0xFE8
 41261                           indf1	equ	0xFE7
 41262                           postdec1	equ	0xFE5
 41263                           plusw1	equ	0xFE3
 41264                           fsr1h	equ	0xFE2
 41265                           fsr1l	equ	0xFE1
 41266                           indf2	equ	0xFDF
 41267                           postinc2	equ	0xFDE
 41268                           postdec2	equ	0xFDD
 41269                           plusw2	equ	0xFDB
 41270                           fsr2h	equ	0xFDA
 41271                           fsr2l	equ	0xFD9
 41272                           status	equ	0xFD8
 41273                           
 41274 ;; *************** function __parse_file_append *****************
 41275 ;; Defined at:
 41276 ;;		line 761 in file "api.c"
 41277 ;; Parameters:    Size  Location     Type
 41278 ;;  data            2   89[COMRAM] PTR unsigned char 
 41279 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 41280 ;;  out_buffer      2   91[COMRAM] PTR unsigned char 
 41281 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 41282 ;;  out_idx_ptr     2   93[COMRAM] PTR unsigned char 
 41283 ;;		 -> api_parse@out_idx(1), 
 41284 ;; Auto vars:     Size  Location     Type
 41285 ;;  number_of_by    2   59[BANK0 ] unsigned int 
 41286 ;;  file_number     1   58[BANK0 ] unsigned char 
 41287 ;;  return_value    1   57[BANK0 ] unsigned char 
 41288 ;; Return value:  Size  Location     Type
 41289 ;;                  1    wreg      unsigned char 
 41290 ;; Registers used:
 41291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41292 ;; Tracked objects:
 41293 ;;		On entry : 0/0
 41294 ;;		On exit  : 0/0
 41295 ;;		Unchanged: 0/0
 41296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41297 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41300 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41301 ;;Total ram usage:       11 bytes
 41302 ;; Hardware stack levels used:    1
 41303 ;; Hardware stack levels required when called:    9
 41304 ;; This function calls:
 41305 ;;		_fat_append_to_file
 41306 ;; This function is called by:
 41307 ;;		__parse_command_long
 41308 ;; This function uses a non-reentrant model
 41309 ;;
 41310                           
 41311                           	psect	text203
 41312  00457A                     __ptext203:
 41313                           	opt stack 0
 41314  00457A                     __parse_file_append:
 41315                           	opt stack 19
 41316                           
 41317                           ;api.c: 765: uint8_t file_number;;api.c: 766: uint8_t return_value;;api.c: 767: uint16_t
      +                           number_of_bytes;;api.c: 769: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (d
      +                          ata[4]!=0x4B))
 41318                           
 41319                           ;incstack = 0
 41320  00457A  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 41321  00457E  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 41322  004582  0E54               	movlw	84
 41323  004584  18DE               	xorwf	postinc2,w,c
 41324  004586  A4D8               	btfss	status,2,c
 41325  004588  D014               	goto	u11890
 41326  00458A  EE20 F003          	lfsr	2,3
 41327  00458E  505A               	movf	__parse_file_append@data,w,c
 41328  004590  26D9               	addwf	fsr2l,f,c
 41329  004592  505B               	movf	__parse_file_append@data+1,w,c
 41330  004594  22DA               	addwfc	fsr2h,f,c
 41331  004596  0EFE               	movlw	254
 41332  004598  18DE               	xorwf	postinc2,w,c
 41333  00459A  A4D8               	btfss	status,2,c
 41334  00459C  D00A               	goto	u11890
 41335  00459E  EE20 F004          	lfsr	2,4
 41336  0045A2  505A               	movf	__parse_file_append@data,w,c
 41337  0045A4  26D9               	addwf	fsr2l,f,c
 41338  0045A6  505B               	movf	__parse_file_append@data+1,w,c
 41339  0045A8  22DA               	addwfc	fsr2h,f,c
 41340  0045AA  0E4B               	movlw	75
 41341  0045AC  18DE               	xorwf	postinc2,w,c
 41342  0045AE  B4D8               	btfsc	status,2,c
 41343  0045B0  D002               	goto	l2895
 41344  0045B2                     u11890:
 41345                           
 41346                           ;api.c: 770: {;api.c: 772: return 65;
 41347  0045B2  0E41               	movlw	65
 41348  0045B4  0012               	return	
 41349  0045B6                     l2895:
 41350                           
 41351                           ;api.c: 773: };api.c: 776: file_number = data[1];
 41352  0045B6  EE20 F001          	lfsr	2,1
 41353  0045BA  505A               	movf	__parse_file_append@data,w,c
 41354  0045BC  26D9               	addwf	fsr2l,f,c
 41355  0045BE  505B               	movf	__parse_file_append@data+1,w,c
 41356  0045C0  22DA               	addwfc	fsr2h,f,c
 41357  0045C2  50DF               	movf	indf2,w,c
 41358  0045C4  0100               	movlb	0	; () banked
 41359  0045C6  6F9A               	movwf	__parse_file_append@file_number& (0+255),b
 41360                           
 41361                           ;api.c: 779: number_of_bytes = (uint16_t) data[2];
 41362  0045C8  EE20 F002          	lfsr	2,2
 41363  0045CC  505A               	movf	__parse_file_append@data,w,c
 41364  0045CE  26D9               	addwf	fsr2l,f,c
 41365  0045D0  505B               	movf	__parse_file_append@data+1,w,c
 41366  0045D2  22DA               	addwfc	fsr2h,f,c
 41367  0045D4  50DF               	movf	indf2,w,c
 41368  0045D6  6F98               	movwf	??__parse_file_append& (0+255),b
 41369  0045D8  5198               	movf	??__parse_file_append& (0+255),w,b
 41370  0045DA  6F9B               	movwf	__parse_file_append@number_of_bytes& (0+255),b
 41371  0045DC  6B9C               	clrf	(__parse_file_append@number_of_bytes+1)& (0+255),b
 41372                           
 41373                           ; BSR set to: 0
 41374                           ;api.c: 782: return_value = fat_append_to_file(file_number, number_of_bytes, &data[5]);
 41375  0045DE  C09B  F056         	movff	__parse_file_append@number_of_bytes,fat_append_to_file@number_of_bytes
 41376  0045E2  C09C  F057         	movff	__parse_file_append@number_of_bytes+1,fat_append_to_file@number_of_bytes+1
 41377  0045E6  0E05               	movlw	5
 41378  0045E8  245A               	addwf	__parse_file_append@data,w,c
 41379  0045EA  6E58               	movwf	fat_append_to_file@data,c
 41380  0045EC  0E00               	movlw	0
 41381  0045EE  205B               	addwfc	__parse_file_append@data+1,w,c
 41382  0045F0  6E59               	movwf	fat_append_to_file@data+1,c
 41383  0045F2  519A               	movf	__parse_file_append@file_number& (0+255),w,b
 41384  0045F4  ECA4  F03F         	call	_fat_append_to_file
 41385  0045F8  0100               	movlb	0	; () banked
 41386  0045FA  6F99               	movwf	__parse_file_append@return_value& (0+255),b
 41387                           
 41388                           ; BSR set to: 0
 41389                           ;api.c: 785: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 41390  0045FC  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41391  004600  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41392  004604  50DF               	movf	indf2,w,c
 41393  004606  B4D8               	btfsc	status,2,c
 41394  004608  D061               	goto	l2899
 41395                           
 41396                           ; BSR set to: 0
 41397  00460A  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41398  00460E  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41399  004612  0E3C               	movlw	60
 41400  004614  60DF               	cpfslt	indf2,c
 41401  004616  D05A               	goto	l2899
 41402                           
 41403                           ; BSR set to: 0
 41404                           ;api.c: 786: {;api.c: 787: out_buffer[(*out_idx_ptr)++] = COMMAND_FILE_APPEND;
 41405  004618  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41406  00461C  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41407  004620  CFDF F098          	movff	indf2,??__parse_file_append
 41408  004624  0E01               	movlw	1
 41409  004626  26DF               	addwf	indf2,f,c
 41410  004628  5198               	movf	??__parse_file_append& (0+255),w,b
 41411  00462A  0D01               	mullw	1
 41412  00462C  50F3               	movf	prodl,w,c
 41413  00462E  245C               	addwf	__parse_file_append@out_buffer,w,c
 41414  004630  6ED9               	movwf	fsr2l,c
 41415  004632  50F4               	movf	prodh,w,c
 41416  004634  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41417  004636  6EDA               	movwf	fsr2h,c
 41418  004638  0E54               	movlw	84
 41419  00463A  6EDF               	movwf	indf2,c
 41420                           
 41421                           ;api.c: 788: out_buffer[(*out_idx_ptr)++] = file_number;
 41422  00463C  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41423  004640  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41424  004644  CFDF F098          	movff	indf2,??__parse_file_append
 41425  004648  0E01               	movlw	1
 41426  00464A  26DF               	addwf	indf2,f,c
 41427  00464C  5198               	movf	??__parse_file_append& (0+255),w,b
 41428  00464E  0D01               	mullw	1
 41429  004650  50F3               	movf	prodl,w,c
 41430  004652  245C               	addwf	__parse_file_append@out_buffer,w,c
 41431  004654  6ED9               	movwf	fsr2l,c
 41432  004656  50F4               	movf	prodh,w,c
 41433  004658  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41434  00465A  6EDA               	movwf	fsr2h,c
 41435  00465C  C09A  FFDF         	movff	__parse_file_append@file_number,indf2
 41436                           
 41437                           ;api.c: 789: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((number_of_bytes)>>8)&0xFF
      +                          ));
 41438  004660  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41439  004664  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41440  004668  CFDF F098          	movff	indf2,??__parse_file_append
 41441  00466C  0E01               	movlw	1
 41442  00466E  26DF               	addwf	indf2,f,c
 41443  004670  5198               	movf	??__parse_file_append& (0+255),w,b
 41444  004672  0D01               	mullw	1
 41445  004674  50F3               	movf	prodl,w,c
 41446  004676  245C               	addwf	__parse_file_append@out_buffer,w,c
 41447  004678  6ED9               	movwf	fsr2l,c
 41448  00467A  50F4               	movf	prodh,w,c
 41449  00467C  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41450  00467E  6EDA               	movwf	fsr2h,c
 41451  004680  519C               	movf	(__parse_file_append@number_of_bytes+1)& (0+255),w,b
 41452  004682  6EDF               	movwf	indf2,c
 41453                           
 41454                           ;api.c: 790: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((number_of_bytes)&0xFF));
 41455  004684  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41456  004688  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41457  00468C  CFDF F098          	movff	indf2,??__parse_file_append
 41458  004690  0E01               	movlw	1
 41459  004692  26DF               	addwf	indf2,f,c
 41460  004694  5198               	movf	??__parse_file_append& (0+255),w,b
 41461  004696  0D01               	mullw	1
 41462  004698  50F3               	movf	prodl,w,c
 41463  00469A  245C               	addwf	__parse_file_append@out_buffer,w,c
 41464  00469C  6ED9               	movwf	fsr2l,c
 41465  00469E  50F4               	movf	prodh,w,c
 41466  0046A0  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41467  0046A2  6EDA               	movwf	fsr2h,c
 41468  0046A4  C09B  FFDF         	movff	__parse_file_append@number_of_bytes,indf2
 41469                           
 41470                           ;api.c: 791: out_buffer[(*out_idx_ptr)++] = return_value;
 41471  0046A8  C05E  FFD9         	movff	__parse_file_append@out_idx_ptr,fsr2l
 41472  0046AC  C05F  FFDA         	movff	__parse_file_append@out_idx_ptr+1,fsr2h
 41473  0046B0  CFDF F098          	movff	indf2,??__parse_file_append
 41474  0046B4  0E01               	movlw	1
 41475  0046B6  26DF               	addwf	indf2,f,c
 41476  0046B8  5198               	movf	??__parse_file_append& (0+255),w,b
 41477  0046BA  0D01               	mullw	1
 41478  0046BC  50F3               	movf	prodl,w,c
 41479  0046BE  245C               	addwf	__parse_file_append@out_buffer,w,c
 41480  0046C0  6ED9               	movwf	fsr2l,c
 41481  0046C2  50F4               	movf	prodh,w,c
 41482  0046C4  205D               	addwfc	__parse_file_append@out_buffer+1,w,c
 41483  0046C6  6EDA               	movwf	fsr2h,c
 41484  0046C8  C099  FFDF         	movff	__parse_file_append@return_value,indf2
 41485  0046CC                     l2899:
 41486                           
 41487                           ; BSR set to: 0
 41488                           ;api.c: 792: };api.c: 794: return data[2] + 5;
 41489                           
 41490                           ; BSR set to: 0
 41491  0046CC  EE20 F002          	lfsr	2,2
 41492  0046D0  505A               	movf	__parse_file_append@data,w,c
 41493  0046D2  26D9               	addwf	fsr2l,f,c
 41494  0046D4  505B               	movf	__parse_file_append@data+1,w,c
 41495  0046D6  22DA               	addwfc	fsr2h,f,c
 41496  0046D8  50DF               	movf	indf2,w,c
 41497  0046DA  0F05               	addlw	5
 41498  0046DC  0012               	return	
 41499  0046DE                     __end_of__parse_file_append:
 41500                           	opt stack 0
 41501                           tosu	equ	0xFFF
 41502                           tosh	equ	0xFFE
 41503                           tosl	equ	0xFFD
 41504                           pclath	equ	0xFFA
 41505                           tblptru	equ	0xFF8
 41506                           tblptrh	equ	0xFF7
 41507                           tblptrl	equ	0xFF6
 41508                           tablat	equ	0xFF5
 41509                           prodh	equ	0xFF4
 41510                           prodl	equ	0xFF3
 41511                           intcon	equ	0xFF2
 41512                           intcon2	equ	0xFF1
 41513                           intcon3	equ	0xFF0
 41514                           indf0	equ	0xFEF
 41515                           postinc0	equ	0xFEE
 41516                           fsr0h	equ	0xFEA
 41517                           fsr0l	equ	0xFE9
 41518                           wreg	equ	0xFE8
 41519                           indf1	equ	0xFE7
 41520                           postdec1	equ	0xFE5
 41521                           plusw1	equ	0xFE3
 41522                           fsr1h	equ	0xFE2
 41523                           fsr1l	equ	0xFE1
 41524                           indf2	equ	0xFDF
 41525                           postinc2	equ	0xFDE
 41526                           postdec2	equ	0xFDD
 41527                           plusw2	equ	0xFDB
 41528                           fsr2h	equ	0xFDA
 41529                           fsr2l	equ	0xFD9
 41530                           status	equ	0xFD8
 41531                           
 41532 ;; *************** function _fat_append_to_file *****************
 41533 ;; Defined at:
 41534 ;;		line 678 in file "fat16.c"
 41535 ;; Parameters:    Size  Location     Type
 41536 ;;  file_number     1    wreg     unsigned char 
 41537 ;;  number_of_by    2   85[COMRAM] unsigned int 
 41538 ;;  data            2   87[COMRAM] PTR unsigned char 
 41539 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 41540 ;; Auto vars:     Size  Location     Type
 41541 ;;  file_number     1   55[BANK0 ] unsigned char 
 41542 ;;  old_file_siz    4   50[BANK0 ] unsigned long 
 41543 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 41544 ;;  return_code     1   54[BANK0 ] unsigned char 
 41545 ;; Return value:  Size  Location     Type
 41546 ;;                  1    wreg      unsigned char 
 41547 ;; Registers used:
 41548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41549 ;; Tracked objects:
 41550 ;;		On entry : 0/0
 41551 ;;		On exit  : 0/0
 41552 ;;		Unchanged: 0/0
 41553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41555 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41557 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41558 ;;Total ram usage:       14 bytes
 41559 ;; Hardware stack levels used:    1
 41560 ;; Hardware stack levels required when called:    8
 41561 ;; This function calls:
 41562 ;;		__root_is_available
 41563 ;;		_fat_get_file_size
 41564 ;;		_fat_modify_file
 41565 ;;		_fat_resize_file
 41566 ;; This function is called by:
 41567 ;;		__parse_file_append
 41568 ;; This function uses a non-reentrant model
 41569 ;;
 41570                           
 41571                           	psect	text204
 41572  007F48                     __ptext204:
 41573                           	opt stack 0
 41574  007F48                     _fat_append_to_file:
 41575                           	opt stack 19
 41576                           
 41577                           ;incstack = 0
 41578                           ;fat_append_to_file@file_number stored from wreg
 41579  007F48  0100               	movlb	0	; () banked
 41580  007F4A  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 41581                           
 41582                           ;fat16.c: 680: uint32_t old_file_size;;fat16.c: 681: uint32_t new_file_size;;fat16.c: 68
      +                          2: uint8_t return_code;;fat16.c: 685: if(file_number>=64)
 41583  007F4C  0E3F               	movlw	63
 41584  007F4E  0100               	movlb	0	; () banked
 41585  007F50  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 41586  007F52  D002               	goto	l2096
 41587                           
 41588                           ; BSR set to: 0
 41589                           ;fat16.c: 686: {;fat16.c: 688: return 0xFF;
 41590  007F54  0EFF               	movlw	255
 41591                           
 41592                           ; BSR set to: 0
 41593  007F56  0012               	return	
 41594  007F58                     l2096:
 41595                           
 41596                           ; BSR set to: 0
 41597                           ;fat16.c: 689: };fat16.c: 692: if(_root_is_available(file_number))
 41598                           
 41599                           ; BSR set to: 0
 41600  007F58  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41601  007F5A  EC27  F047         	call	__root_is_available
 41602  007F5E  0900               	iorlw	0
 41603  007F60  B4D8               	btfsc	status,2,c
 41604  007F62  D002               	goto	l2098
 41605                           
 41606                           ;fat16.c: 693: {;fat16.c: 695: return 0xFE;
 41607  007F64  0EFE               	movlw	254
 41608  007F66  0012               	return	
 41609  007F68                     l2098:
 41610                           
 41611                           ;fat16.c: 696: };fat16.c: 699: old_file_size = fat_get_file_size(file_number);
 41612  007F68  0100               	movlb	0	; () banked
 41613  007F6A  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41614  007F6C  EC89  F045         	call	_fat_get_file_size
 41615  007F70  C036  F092         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 41616  007F74  C037  F093         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 41617  007F78  C038  F094         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 41618  007F7C  C039  F095         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 41619                           
 41620                           ;fat16.c: 702: new_file_size = old_file_size + number_of_bytes;
 41621  007F80  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 41622  007F82  0100               	movlb	0	; () banked
 41623  007F84  2592               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 41624  007F86  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 41625  007F88  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 41626  007F8A  2193               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 41627  007F8C  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 41628  007F8E  0E00               	movlw	0
 41629  007F90  2194               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 41630  007F92  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 41631  007F94  0E00               	movlw	0
 41632  007F96  2195               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 41633  007F98  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 41634                           
 41635                           ; BSR set to: 0
 41636                           ;fat16.c: 705: return_code = fat_resize_file(file_number, new_file_size);
 41637  007F9A  C08E  F04D         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 41638  007F9E  C08F  F04E         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 41639  007FA2  C090  F04F         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 41640  007FA6  C091  F050         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 41641  007FAA  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41642  007FAC  ECFA  F02F         	call	_fat_resize_file
 41643  007FB0  0100               	movlb	0	; () banked
 41644  007FB2  6F96               	movwf	fat_append_to_file@return_code& (0+255),b
 41645                           
 41646                           ; BSR set to: 0
 41647                           ;fat16.c: 706: if(return_code!=0x00)
 41648  007FB4  5196               	movf	fat_append_to_file@return_code& (0+255),w,b
 41649  007FB6  B4D8               	btfsc	status,2,c
 41650  007FB8  D003               	goto	l2099
 41651                           
 41652                           ; BSR set to: 0
 41653                           ;fat16.c: 707: {;fat16.c: 709: return return_code - 0x0F;
 41654  007FBA  5196               	movf	fat_append_to_file@return_code& (0+255),w,b
 41655  007FBC  0FF1               	addlw	241
 41656                           
 41657                           ; BSR set to: 0
 41658  007FBE  0012               	return	
 41659  007FC0                     l2099:
 41660                           
 41661                           ; BSR set to: 0
 41662                           ;fat16.c: 710: };fat16.c: 713: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 41663                           
 41664                           ; BSR set to: 0
 41665  007FC0  C092  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 41666  007FC4  C093  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 41667  007FC8  C094  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 41668  007FCC  C095  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 41669  007FD0  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 41670  007FD4  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 41671  007FD8  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 41672  007FDC  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 41673  007FE0  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 41674  007FE2  ECAC  F013         	call	_fat_modify_file
 41675                           
 41676                           ;fat16.c: 716: return 0x00;
 41677  007FE6  0E00               	movlw	0
 41678  007FE8  0012               	return	
 41679  007FEA                     __end_of_fat_append_to_file:
 41680                           	opt stack 0
 41681                           tosu	equ	0xFFF
 41682                           tosh	equ	0xFFE
 41683                           tosl	equ	0xFFD
 41684                           pclath	equ	0xFFA
 41685                           tblptru	equ	0xFF8
 41686                           tblptrh	equ	0xFF7
 41687                           tblptrl	equ	0xFF6
 41688                           tablat	equ	0xFF5
 41689                           prodh	equ	0xFF4
 41690                           prodl	equ	0xFF3
 41691                           intcon	equ	0xFF2
 41692                           intcon2	equ	0xFF1
 41693                           intcon3	equ	0xFF0
 41694                           indf0	equ	0xFEF
 41695                           postinc0	equ	0xFEE
 41696                           fsr0h	equ	0xFEA
 41697                           fsr0l	equ	0xFE9
 41698                           wreg	equ	0xFE8
 41699                           indf1	equ	0xFE7
 41700                           postdec1	equ	0xFE5
 41701                           plusw1	equ	0xFE3
 41702                           fsr1h	equ	0xFE2
 41703                           fsr1l	equ	0xFE1
 41704                           indf2	equ	0xFDF
 41705                           postinc2	equ	0xFDE
 41706                           postdec2	equ	0xFDD
 41707                           plusw2	equ	0xFDB
 41708                           fsr2h	equ	0xFDA
 41709                           fsr2l	equ	0xFD9
 41710                           status	equ	0xFD8
 41711                           
 41712 ;; *************** function _fat_resize_file *****************
 41713 ;; Defined at:
 41714 ;;		line 910 in file "fat16.c"
 41715 ;; Parameters:    Size  Location     Type
 41716 ;;  file_number     1    wreg     unsigned char 
 41717 ;;  new_file_siz    4   76[COMRAM] unsigned long 
 41718 ;; Auto vars:     Size  Location     Type
 41719 ;;  file_number     1    6[BANK0 ] unsigned char 
 41720 ;;  root           32    7[BANK0 ] struct .
 41721 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 41722 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 41723 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 41724 ;; Return value:  Size  Location     Type
 41725 ;;                  1    wreg      unsigned char 
 41726 ;; Registers used:
 41727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41728 ;; Tracked objects:
 41729 ;;		On entry : 0/0
 41730 ;;		On exit  : 0/0
 41731 ;;		Unchanged: 0/0
 41732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41734 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41736 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41737 ;;Total ram usage:       47 bytes
 41738 ;; Hardware stack levels used:    1
 41739 ;; Hardware stack levels required when called:    7
 41740 ;; This function calls:
 41741 ;;		__make_cluster_chain
 41742 ;;		__root_is_available
 41743 ;;		__write_root
 41744 ;;		_fat_get_file_information
 41745 ;; This function is called by:
 41746 ;;		_fat_append_to_file
 41747 ;;		__parse_file_resize
 41748 ;; This function uses a non-reentrant model
 41749 ;;
 41750                           
 41751                           	psect	text205
 41752  005FF4                     __ptext205:
 41753                           	opt stack 0
 41754  005FF4                     _fat_resize_file:
 41755                           	opt stack 20
 41756                           
 41757                           ;incstack = 0
 41758                           ;fat_resize_file@file_number stored from wreg
 41759  005FF4  0100               	movlb	0	; () banked
 41760  005FF6  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 41761                           
 41762                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 41763  005FF8  0E3F               	movlw	63
 41764  005FFA  0100               	movlb	0	; () banked
 41765  005FFC  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 41766  005FFE  D002               	goto	l2136
 41767                           
 41768                           ; BSR set to: 0
 41769                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 41770  006000  0EFF               	movlw	255
 41771                           
 41772                           ; BSR set to: 0
 41773  006002  0012               	return	
 41774  006004                     l2136:
 41775                           
 41776                           ; BSR set to: 0
 41777                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 41778                           
 41779                           ; BSR set to: 0
 41780  006004  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 41781  006006  EC27  F047         	call	__root_is_available
 41782  00600A  0900               	iorlw	0
 41783  00600C  B4D8               	btfsc	status,2,c
 41784  00600E  D002               	goto	l2138
 41785                           
 41786                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 41787  006010  0EFE               	movlw	254
 41788  006012  0012               	return	
 41789  006014                     l2138:
 41790                           
 41791                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 41792  006014  0E67               	movlw	low fat_resize_file@root
 41793  006016  6E30               	movwf	fat_get_file_information@data,c
 41794  006018  0E00               	movlw	high fat_resize_file@root
 41795  00601A  6E31               	movwf	fat_get_file_information@data+1,c
 41796  00601C  0100               	movlb	0	; () banked
 41797  00601E  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 41798  006020  ECE0  F044         	call	_fat_get_file_information
 41799                           
 41800                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 41801  006024  EE20  F083         	lfsr	2,fat_resize_file@root+28
 41802  006028  0EFF               	movlw	255
 41803  00602A  24DE               	addwf	postinc2,w,c
 41804  00602C  6E51               	movwf	??_fat_resize_file& (0+255),c
 41805  00602E  0E01               	movlw	1
 41806  006030  20DE               	addwfc	postinc2,w,c
 41807  006032  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 41808  006034  0E00               	movlw	0
 41809  006036  20DE               	addwfc	postinc2,w,c
 41810  006038  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 41811  00603A  0E00               	movlw	0
 41812  00603C  20DE               	addwfc	postinc2,w,c
 41813  00603E  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 41814  006040  0E0A               	movlw	10
 41815  006042  D005               	goto	u10120
 41816  006044                     u10125:
 41817  006044  90D8               	bcf	status,0,c
 41818  006046  3254               	rrcf	??_fat_resize_file+3,f,c
 41819  006048  3253               	rrcf	??_fat_resize_file+2,f,c
 41820  00604A  3252               	rrcf	??_fat_resize_file+1,f,c
 41821  00604C  3251               	rrcf	??_fat_resize_file,f,c
 41822  00604E                     u10120:
 41823  00604E  2EE8               	decfsz	wreg,f,c
 41824  006050  D7F9               	goto	u10125
 41825  006052  C051  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 41826  006056  C052  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 41827                           
 41828                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 41829  00605A  0EFF               	movlw	255
 41830  00605C  244D               	addwf	fat_resize_file@new_file_size,w,c
 41831  00605E  6E51               	movwf	??_fat_resize_file& (0+255),c
 41832  006060  0E01               	movlw	1
 41833  006062  204E               	addwfc	fat_resize_file@new_file_size+1,w,c
 41834  006064  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 41835  006066  0E00               	movlw	0
 41836  006068  204F               	addwfc	fat_resize_file@new_file_size+2,w,c
 41837  00606A  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 41838  00606C  0E00               	movlw	0
 41839  00606E  2050               	addwfc	fat_resize_file@new_file_size+3,w,c
 41840  006070  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 41841  006072  0E0A               	movlw	10
 41842  006074  D005               	goto	u10130
 41843  006076                     u10135:
 41844  006076  90D8               	bcf	status,0,c
 41845  006078  3254               	rrcf	??_fat_resize_file+3,f,c
 41846  00607A  3253               	rrcf	??_fat_resize_file+2,f,c
 41847  00607C  3252               	rrcf	??_fat_resize_file+1,f,c
 41848  00607E  3251               	rrcf	??_fat_resize_file,f,c
 41849  006080                     u10130:
 41850  006080  2EE8               	decfsz	wreg,f,c
 41851  006082  D7F9               	goto	u10135
 41852  006084  C051  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 41853  006088  C052  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 41854                           
 41855                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 41856  00608C  0100               	movlb	0	; () banked
 41857  00608E  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 41858  006090  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 41859  006092  E104               	bnz	u10140
 41860  006094  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 41861  006096  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 41862  006098  B4D8               	btfsc	status,2,c
 41863  00609A  D01A               	goto	l2139
 41864  00609C                     u10140:
 41865                           
 41866                           ; BSR set to: 0
 41867                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 41868  00609C  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 41869  0060A0  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 41870  0060A4  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 41871  0060A8  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 41872  0060AC  ECC6  F00A         	call	__make_cluster_chain	;wreg free
 41873  0060B0  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 41874  0060B4  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 41875                           
 41876                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 41877  0060B8  0100               	movlb	0	; () banked
 41878  0060BA  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 41879  0060BC  E105               	bnz	l2140
 41880  0060BE  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 41881  0060C0  A4D8               	btfss	status,2,c
 41882  0060C2  D002               	goto	l2140
 41883                           
 41884                           ; BSR set to: 0
 41885                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 41886  0060C4  0EFD               	movlw	253
 41887                           
 41888                           ; BSR set to: 0
 41889  0060C6  0012               	return	
 41890  0060C8                     l2140:
 41891                           
 41892                           ; BSR set to: 0
 41893                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 41894  0060C8  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 41895  0060CC  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 41896  0060D0                     l2139:
 41897                           
 41898                           ; BSR set to: 0
 41899                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 41900  0060D0  C04D  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 41901  0060D4  C04E  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 41902  0060D8  C04F  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 41903  0060DC  C050  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 41904                           
 41905                           ; BSR set to: 0
 41906                           ;fat16.c: 956: _write_root(file_number, &root);
 41907  0060E0  0E67               	movlw	low fat_resize_file@root
 41908  0060E2  6E29               	movwf	__write_root@data,c
 41909  0060E4  0E00               	movlw	high fat_resize_file@root
 41910  0060E6  6E2A               	movwf	__write_root@data+1,c
 41911  0060E8  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 41912  0060EA  ECE9  F04B         	call	__write_root
 41913                           
 41914                           ;fat16.c: 959: return 0x00;
 41915  0060EE  0E00               	movlw	0
 41916  0060F0  0012               	return	
 41917  0060F2                     __end_of_fat_resize_file:
 41918                           	opt stack 0
 41919                           tosu	equ	0xFFF
 41920                           tosh	equ	0xFFE
 41921                           tosl	equ	0xFFD
 41922                           pclath	equ	0xFFA
 41923                           tblptru	equ	0xFF8
 41924                           tblptrh	equ	0xFF7
 41925                           tblptrl	equ	0xFF6
 41926                           tablat	equ	0xFF5
 41927                           prodh	equ	0xFF4
 41928                           prodl	equ	0xFF3
 41929                           intcon	equ	0xFF2
 41930                           intcon2	equ	0xFF1
 41931                           intcon3	equ	0xFF0
 41932                           indf0	equ	0xFEF
 41933                           postinc0	equ	0xFEE
 41934                           fsr0h	equ	0xFEA
 41935                           fsr0l	equ	0xFE9
 41936                           wreg	equ	0xFE8
 41937                           indf1	equ	0xFE7
 41938                           postdec1	equ	0xFE5
 41939                           plusw1	equ	0xFE3
 41940                           fsr1h	equ	0xFE2
 41941                           fsr1l	equ	0xFE1
 41942                           indf2	equ	0xFDF
 41943                           postinc2	equ	0xFDE
 41944                           postdec2	equ	0xFDD
 41945                           plusw2	equ	0xFDB
 41946                           fsr2h	equ	0xFDA
 41947                           fsr2l	equ	0xFD9
 41948                           status	equ	0xFD8
 41949                           
 41950 ;; *************** function __write_root *****************
 41951 ;; Defined at:
 41952 ;;		line 473 in file "fat16.c"
 41953 ;; Parameters:    Size  Location     Type
 41954 ;;  file_number     1    wreg     unsigned char 
 41955 ;;  data            2   40[COMRAM] PTR struct .
 41956 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 41957 ;; Auto vars:     Size  Location     Type
 41958 ;;  file_number     1   46[COMRAM] unsigned char 
 41959 ;;  offset          2   44[COMRAM] unsigned int 
 41960 ;;  sector          2   42[COMRAM] unsigned int 
 41961 ;; Return value:  Size  Location     Type
 41962 ;;                  1    wreg      void 
 41963 ;; Registers used:
 41964 ;;		wreg, status,2, status,0, cstack
 41965 ;; Tracked objects:
 41966 ;;		On entry : 0/0
 41967 ;;		On exit  : 0/0
 41968 ;;		Unchanged: 0/0
 41969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41971 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41974 ;;Total ram usage:        7 bytes
 41975 ;; Hardware stack levels used:    1
 41976 ;; Hardware stack levels required when called:    5
 41977 ;; This function calls:
 41978 ;;		__offset_from_file_number
 41979 ;;		__sector_from_file_number
 41980 ;;		_flash_partial_write
 41981 ;; This function is called by:
 41982 ;;		_fat_create_file
 41983 ;;		_fat_rename_file
 41984 ;;		_fat_resize_file
 41985 ;; This function uses a non-reentrant model
 41986 ;;
 41987                           
 41988                           	psect	text206
 41989  0097D2                     __ptext206:
 41990                           	opt stack 0
 41991  0097D2                     __write_root:
 41992                           	opt stack 21
 41993                           
 41994                           ;incstack = 0
 41995                           ;__write_root@file_number stored from wreg
 41996  0097D2  6E2F               	movwf	__write_root@file_number,c
 41997                           
 41998                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 41999  0097D4  502F               	movf	__write_root@file_number,w,c
 42000  0097D6  ECBB  F04E         	call	__sector_from_file_number
 42001  0097DA  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 42002  0097DE  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 42003                           
 42004                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 42005  0097E2  502F               	movf	__write_root@file_number,w,c
 42006  0097E4  EC47  F04F         	call	__offset_from_file_number
 42007  0097E8  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 42008  0097EC  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 42009                           
 42010                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 42011  0097F0  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 42012  0097F4  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 42013  0097F8  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 42014  0097FC  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 42015  009800  0E00               	movlw	0
 42016  009802  6E25               	movwf	flash_partial_write@length+1,c
 42017  009804  0E20               	movlw	32
 42018  009806  6E24               	movwf	flash_partial_write@length,c
 42019  009808  C029  F026         	movff	__write_root@data,flash_partial_write@data
 42020  00980C  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 42021  009810  EC51  F045         	call	_flash_partial_write	;wreg free
 42022  009814  0012               	return		;funcret
 42023  009816                     __end_of__write_root:
 42024                           	opt stack 0
 42025                           tosu	equ	0xFFF
 42026                           tosh	equ	0xFFE
 42027                           tosl	equ	0xFFD
 42028                           pclath	equ	0xFFA
 42029                           tblptru	equ	0xFF8
 42030                           tblptrh	equ	0xFF7
 42031                           tblptrl	equ	0xFF6
 42032                           tablat	equ	0xFF5
 42033                           prodh	equ	0xFF4
 42034                           prodl	equ	0xFF3
 42035                           intcon	equ	0xFF2
 42036                           intcon2	equ	0xFF1
 42037                           intcon3	equ	0xFF0
 42038                           indf0	equ	0xFEF
 42039                           postinc0	equ	0xFEE
 42040                           fsr0h	equ	0xFEA
 42041                           fsr0l	equ	0xFE9
 42042                           wreg	equ	0xFE8
 42043                           indf1	equ	0xFE7
 42044                           postdec1	equ	0xFE5
 42045                           plusw1	equ	0xFE3
 42046                           fsr1h	equ	0xFE2
 42047                           fsr1l	equ	0xFE1
 42048                           indf2	equ	0xFDF
 42049                           postinc2	equ	0xFDE
 42050                           postdec2	equ	0xFDD
 42051                           plusw2	equ	0xFDB
 42052                           fsr2h	equ	0xFDA
 42053                           fsr2l	equ	0xFD9
 42054                           status	equ	0xFD8
 42055                           
 42056 ;; *************** function __make_cluster_chain *****************
 42057 ;; Defined at:
 42058 ;;		line 213 in file "fat16.c"
 42059 ;; Parameters:    Size  Location     Type
 42060 ;;  first_cluste    2   53[COMRAM] unsigned int 
 42061 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 42062 ;; Auto vars:     Size  Location     Type
 42063 ;;  next_cluster    2   74[COMRAM] unsigned int 
 42064 ;;  offset          2   72[COMRAM] unsigned int 
 42065 ;;  sector_in_bu    2   70[COMRAM] unsigned int 
 42066 ;;  sector          2   68[COMRAM] unsigned int 
 42067 ;;  remaining_cl    2   66[COMRAM] unsigned int 
 42068 ;;  different_se    2   63[COMRAM] unsigned int 
 42069 ;;  minimum_sect    2   61[COMRAM] unsigned int 
 42070 ;;  next_offset     2   59[COMRAM] unsigned int 
 42071 ;;  data_changed    1   65[COMRAM] unsigned char 
 42072 ;; Return value:  Size  Location     Type
 42073 ;;                  2   53[COMRAM] unsigned int 
 42074 ;; Registers used:
 42075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42076 ;; Tracked objects:
 42077 ;;		On entry : 0/0
 42078 ;;		On exit  : 0/0
 42079 ;;		Unchanged: 0/0
 42080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42082 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42084 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42085 ;;Total ram usage:       23 bytes
 42086 ;; Hardware stack levels used:    1
 42087 ;; Hardware stack levels required when called:    6
 42088 ;; This function calls:
 42089 ;;		__fat_offset_from_cluster
 42090 ;;		__fat_sector_from_cluster
 42091 ;;		__get_available_cluster
 42092 ;;		__get_available_offset_from_buffer
 42093 ;;		__read_value_from_offset
 42094 ;;		__write_value_to_offset
 42095 ;;		_flash_sector_read
 42096 ;;		_flash_sector_write
 42097 ;; This function is called by:
 42098 ;;		_fat_create_file
 42099 ;;		_fat_delete_file
 42100 ;;		_fat_resize_file
 42101 ;; This function uses a non-reentrant model
 42102 ;;
 42103                           
 42104                           	psect	text207
 42105  00158C                     __ptext207:
 42106                           	opt stack 0
 42107  00158C                     __make_cluster_chain:
 42108                           	opt stack 20
 42109                           
 42110                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 42111                           
 42112                           ;incstack = 0
 42113  00158C  0E00               	movlw	0
 42114  00158E  6E48               	movwf	__make_cluster_chain@sector_in_buffer+1,c
 42115  001590  0E00               	movlw	0
 42116  001592  6E47               	movwf	__make_cluster_chain@sector_in_buffer,c
 42117                           
 42118                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 42119  001594  C038  F043         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 42120  001598  C039  F044         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 42121                           
 42122                           ;fat16.c: 228: minimum_sector = 2;
 42123  00159C  0E00               	movlw	0
 42124  00159E  6E3F               	movwf	__make_cluster_chain@minimum_sector+1,c
 42125  0015A0  0E02               	movlw	2
 42126  0015A2  6E3E               	movwf	__make_cluster_chain@minimum_sector,c
 42127                           
 42128                           ;fat16.c: 229: data_changed = 0;
 42129  0015A4  0E00               	movlw	0
 42130  0015A6  6E42               	movwf	__make_cluster_chain@data_changed,c
 42131                           
 42132                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 42133  0015A8  5036               	movf	__make_cluster_chain@first_cluster,w,c
 42134  0015AA  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 42135  0015AC  A4D8               	btfss	status,2,c
 42136  0015AE  D023               	goto	l2010
 42137  0015B0  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 42138  0015B2  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 42139  0015B4  B4D8               	btfsc	status,2,c
 42140  0015B6  D01F               	goto	l2010
 42141                           
 42142                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 42143  0015B8  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 42144  0015BC  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 42145  0015C0  0E00               	movlw	0
 42146  0015C2  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 42147  0015C4  0E00               	movlw	0
 42148  0015C6  6E2E               	movwf	__get_available_cluster@skip_sector,c
 42149  0015C8  EC31  F038         	call	__get_available_cluster	;wreg free
 42150  0015CC  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 42151  0015D0  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 42152                           
 42153                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 42154  0015D4  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 42155  0015D8  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 42156  0015DC  EC74  F050         	call	__fat_sector_from_cluster	;wreg free
 42157  0015E0  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 42158  0015E4  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 42159                           
 42160                           ;fat16.c: 237: if(first_cluster == 0)
 42161  0015E8  5036               	movf	__make_cluster_chain@first_cluster,w,c
 42162  0015EA  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 42163  0015EC  A4D8               	btfss	status,2,c
 42164  0015EE  D003               	goto	l2010
 42165                           
 42166                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 42167  0015F0  6836               	setf	?__make_cluster_chain,c
 42168  0015F2  6837               	setf	?__make_cluster_chain+1,c
 42169  0015F4  0012               	return	
 42170  0015F6                     l2010:
 42171                           
 42172                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 42173  0015F6  C036  F04B         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 42174  0015FA  C037  F04C         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 42175                           
 42176                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 42177  0015FE  D0FA               	goto	l2027
 42178  001600                     
 42179                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 42180  001600  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 42181  001604  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 42182  001608  EC74  F050         	call	__fat_sector_from_cluster	;wreg free
 42183  00160C  C001  F045         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 42184  001610  C002  F046         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 42185                           
 42186                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 42187  001614  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 42188  001618  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 42189  00161C  EC80  F050         	call	__fat_offset_from_cluster	;wreg free
 42190  001620  C001  F049         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 42191  001624  C002  F04A         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 42192                           
 42193                           ;fat16.c: 263: if(sector != sector_in_buffer)
 42194  001628  5047               	movf	__make_cluster_chain@sector_in_buffer,w,c
 42195  00162A  1845               	xorwf	__make_cluster_chain@sector,w,c
 42196  00162C  E104               	bnz	u8880
 42197  00162E  5048               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 42198  001630  1846               	xorwf	__make_cluster_chain@sector+1,w,c
 42199  001632  B4D8               	btfsc	status,2,c
 42200  001634  D035               	goto	l2014
 42201  001636                     u8880:
 42202                           
 42203                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 42204  001636  5042               	movf	__make_cluster_chain@data_changed,w,c
 42205  001638  B4D8               	btfsc	status,2,c
 42206  00163A  D00A               	goto	l2015
 42207                           
 42208                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 42209  00163C  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 42210  001640  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 42211  001644  0EC0               	movlw	low _buffer
 42212  001646  6E22               	movwf	flash_sector_write@data,c
 42213  001648  0E03               	movlw	high _buffer
 42214  00164A  6E23               	movwf	flash_sector_write@data+1,c
 42215  00164C  EC9E  F049         	call	_flash_sector_write	;wreg free
 42216  001650                     l2015:
 42217                           
 42218                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 42219  001650  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 42220  001654  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 42221  001658  C045  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 42222  00165C  C046  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 42223  001660  EC31  F038         	call	__get_available_cluster	;wreg free
 42224  001664  C02C  F040         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 42225  001668  C02D  F041         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 42226                           
 42227                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 42228  00166C  C040  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 42229  001670  C041  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 42230  001674  EC74  F050         	call	__fat_sector_from_cluster	;wreg free
 42231  001678  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 42232  00167C  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 42233                           
 42234                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 42235  001680  C045  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 42236  001684  C046  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 42237  001688  0EC0               	movlw	low _buffer
 42238  00168A  6E2A               	movwf	flash_sector_read@data,c
 42239  00168C  0E03               	movlw	high _buffer
 42240  00168E  6E2B               	movwf	flash_sector_read@data+1,c
 42241  001690  ECD3  F04D         	call	_flash_sector_read	;wreg free
 42242                           
 42243                           ;fat16.c: 279: sector_in_buffer = sector;
 42244  001694  C045  F047         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 42245  001698  C046  F048         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 42246                           
 42247                           ;fat16.c: 280: data_changed = 0;
 42248  00169C  0E00               	movlw	0
 42249  00169E  6E42               	movwf	__make_cluster_chain@data_changed,c
 42250  0016A0                     l2014:
 42251                           
 42252                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 42253  0016A0  5044               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 42254  0016A2  E104               	bnz	u8900
 42255  0016A4  0E02               	movlw	2
 42256  0016A6  5C43               	subwf	__make_cluster_chain@remaining_clusters,w,c
 42257  0016A8  A0D8               	btfss	status,0,c
 42258  0016AA  D05C               	goto	l2016
 42259  0016AC                     u8900:
 42260                           
 42261                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 42262  0016AC  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 42263  0016B0  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 42264  0016B4  0EC0               	movlw	low _buffer
 42265  0016B6  6E03               	movwf	__read_value_from_offset@buffer,c
 42266  0016B8  0E03               	movlw	high _buffer
 42267  0016BA  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42268  0016BC  ECA4  F04B         	call	__read_value_from_offset	;wreg free
 42269  0016C0  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 42270  0016C4  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 42271                           
 42272                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 42273  0016C8  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 42274  0016CA  E104               	bnz	u8910
 42275  0016CC  0E02               	movlw	2
 42276  0016CE  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42277  0016D0  A0D8               	btfss	status,0,c
 42278  0016D2  D006               	goto	u8920
 42279  0016D4                     u8910:
 42280  0016D4  0EDA               	movlw	218
 42281  0016D6  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42282  0016D8  0E1F               	movlw	31
 42283  0016DA  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 42284  0016DC  A0D8               	btfss	status,0,c
 42285  0016DE  D068               	goto	l2026
 42286  0016E0                     u8920:
 42287                           
 42288                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 42289  0016E0  0E02               	movlw	2
 42290  0016E2  2449               	addwf	__make_cluster_chain@offset,w,c
 42291  0016E4  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 42292  0016E6  0E00               	movlw	0
 42293  0016E8  204A               	addwfc	__make_cluster_chain@offset+1,w,c
 42294  0016EA  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 42295  0016EC  0EC0               	movlw	low _buffer
 42296  0016EE  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 42297  0016F0  0E03               	movlw	high _buffer
 42298  0016F2  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 42299  0016F4  EC15  F048         	call	__get_available_offset_from_buffer	;wreg free
 42300  0016F8  C001  F03C         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 42301  0016FC  C002  F03D         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 42302                           
 42303                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 42304  001700  283C               	incf	__make_cluster_chain@next_offset,w,c
 42305  001702  E103               	bnz	u8930
 42306  001704  283D               	incf	__make_cluster_chain@next_offset+1,w,c
 42307  001706  B4D8               	btfsc	status,2,c
 42308  001708  D013               	goto	l2020
 42309  00170A                     u8930:
 42310                           
 42311                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 42312  00170A  0EFE               	movlw	254
 42313  00170C  2447               	addwf	__make_cluster_chain@sector_in_buffer,w,c
 42314  00170E  6E4B               	movwf	__make_cluster_chain@next_cluster,c
 42315  001710  0EFF               	movlw	255
 42316  001712  2048               	addwfc	__make_cluster_chain@sector_in_buffer+1,w,c
 42317  001714  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 42318                           
 42319                           ;fat16.c: 299: next_cluster <<= 8;
 42320  001716  504B               	movf	__make_cluster_chain@next_cluster,w,c
 42321  001718  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 42322  00171A  6A4B               	clrf	__make_cluster_chain@next_cluster,c
 42323                           
 42324                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 42325  00171C  90D8               	bcf	status,0,c
 42326  00171E  303D               	rrcf	__make_cluster_chain@next_offset+1,w,c
 42327  001720  6E3B               	movwf	(??__make_cluster_chain+1)& (0+255),c
 42328  001722  303C               	rrcf	__make_cluster_chain@next_offset,w,c
 42329  001724  6E3A               	movwf	??__make_cluster_chain& (0+255),c
 42330  001726  503A               	movf	??__make_cluster_chain,w,c
 42331  001728  124B               	iorwf	__make_cluster_chain@next_cluster,f,c
 42332  00172A  503B               	movf	??__make_cluster_chain+1,w,c
 42333  00172C  124C               	iorwf	__make_cluster_chain@next_cluster+1,f,c
 42334                           
 42335                           ;fat16.c: 301: }
 42336  00172E  D00B               	goto	l2023
 42337  001730                     l2020:
 42338                           
 42339                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 42340  001730  5040               	movf	__make_cluster_chain@different_sector_cluster,w,c
 42341  001732  1041               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 42342  001734  A4D8               	btfss	status,2,c
 42343  001736  D003               	goto	l2022
 42344                           
 42345                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 42346  001738  6836               	setf	?__make_cluster_chain,c
 42347  00173A  6837               	setf	?__make_cluster_chain+1,c
 42348  00173C  0012               	return	
 42349  00173E                     l2022:
 42350                           
 42351                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 42352  00173E  C040  F04B         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 42353  001742  C041  F04C         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 42354  001746                     l2023:
 42355                           
 42356                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 42357  001746  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 42358  00174A  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 42359  00174E  0EC0               	movlw	low _buffer
 42360  001750  6E03               	movwf	__write_value_to_offset@buffer,c
 42361  001752  0E03               	movlw	high _buffer
 42362  001754  6E04               	movwf	__write_value_to_offset@buffer+1,c
 42363  001756  C04B  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 42364  00175A  C04C  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 42365  00175E  EC6E  F04D         	call	__write_value_to_offset	;wreg free
 42366  001762  D024               	goto	L57
 42367  001764                     l2016:
 42368                           
 42369                           ;fat16.c: 326: else if(remaining_clusters == 1)
 42370  001764  0443               	decf	__make_cluster_chain@remaining_clusters,w,c
 42371  001766  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 42372  001768  A4D8               	btfss	status,2,c
 42373  00176A  D026               	goto	l2025
 42374                           
 42375                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 42376  00176C  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 42377  001770  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 42378  001774  0EC0               	movlw	low _buffer
 42379  001776  6E03               	movwf	__read_value_from_offset@buffer,c
 42380  001778  0E03               	movlw	high _buffer
 42381  00177A  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42382  00177C  ECA4  F04B         	call	__read_value_from_offset	;wreg free
 42383  001780  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 42384  001784  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 42385                           
 42386                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 42387  001788  284B               	incf	__make_cluster_chain@next_cluster,w,c
 42388  00178A  E103               	bnz	u8960
 42389  00178C  284C               	incf	__make_cluster_chain@next_cluster+1,w,c
 42390  00178E  B4D8               	btfsc	status,2,c
 42391  001790  D00F               	goto	l2026
 42392  001792                     u8960:
 42393                           
 42394                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 42395  001792  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 42396  001796  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 42397  00179A  0EC0               	movlw	low _buffer
 42398  00179C  6E03               	movwf	__write_value_to_offset@buffer,c
 42399  00179E  0E03               	movlw	high _buffer
 42400  0017A0  6E04               	movwf	__write_value_to_offset@buffer+1,c
 42401  0017A2  0EFF               	movlw	255
 42402  0017A4  6E06               	movwf	__write_value_to_offset@value+1,c
 42403  0017A6  6805               	setf	__write_value_to_offset@value,c
 42404  0017A8  EC6E  F04D         	call	__write_value_to_offset	;wreg free
 42405  0017AC                     L57:
 42406                           
 42407                           ;fat16.c: 336: data_changed = 1;
 42408  0017AC  0E01               	movlw	1
 42409  0017AE  6E42               	movwf	__make_cluster_chain@data_changed,c
 42410  0017B0                     l2026:
 42411                           
 42412                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 42413  0017B0  0643               	decf	__make_cluster_chain@remaining_clusters,f,c
 42414  0017B2  A0D8               	btfss	status,0,c
 42415  0017B4  0644               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 42416                           
 42417                           ;fat16.c: 341: }
 42418  0017B6  D01E               	goto	l2027
 42419  0017B8                     l2025:
 42420                           
 42421                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 42422  0017B8  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 42423  0017BC  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 42424  0017C0  0EC0               	movlw	low _buffer
 42425  0017C2  6E03               	movwf	__read_value_from_offset@buffer,c
 42426  0017C4  0E03               	movlw	high _buffer
 42427  0017C6  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42428  0017C8  ECA4  F04B         	call	__read_value_from_offset	;wreg free
 42429  0017CC  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 42430  0017D0  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 42431                           
 42432                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 42433  0017D4  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 42434  0017D8  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 42435  0017DC  0EC0               	movlw	low _buffer
 42436  0017DE  6E03               	movwf	__write_value_to_offset@buffer,c
 42437  0017E0  0E03               	movlw	high _buffer
 42438  0017E2  6E04               	movwf	__write_value_to_offset@buffer+1,c
 42439  0017E4  0E00               	movlw	0
 42440  0017E6  6E06               	movwf	__write_value_to_offset@value+1,c
 42441  0017E8  0E00               	movlw	0
 42442  0017EA  6E05               	movwf	__write_value_to_offset@value,c
 42443  0017EC  EC6E  F04D         	call	__write_value_to_offset	;wreg free
 42444                           
 42445                           ;fat16.c: 352: data_changed = 1;
 42446  0017F0  0E01               	movlw	1
 42447  0017F2  6E42               	movwf	__make_cluster_chain@data_changed,c
 42448  0017F4                     l2027:
 42449  0017F4  5043               	movf	__make_cluster_chain@remaining_clusters,w,c
 42450  0017F6  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 42451  0017F8  A4D8               	btfss	status,2,c
 42452  0017FA  D702               	goto	l2013
 42453  0017FC  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 42454  0017FE  E104               	bnz	u8980
 42455  001800  0E02               	movlw	2
 42456  001802  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42457  001804  A0D8               	btfss	status,0,c
 42458  001806  D006               	goto	u8990
 42459  001808                     u8980:
 42460  001808  0EDA               	movlw	218
 42461  00180A  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 42462  00180C  0E1F               	movlw	31
 42463  00180E  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 42464  001810  A0D8               	btfss	status,0,c
 42465  001812  D6F6               	goto	l2013
 42466  001814                     u8990:
 42467                           
 42468                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 42469  001814  5042               	movf	__make_cluster_chain@data_changed,w,c
 42470  001816  B4D8               	btfsc	status,2,c
 42471  001818  D00A               	goto	l2031
 42472                           
 42473                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 42474  00181A  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 42475  00181E  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 42476  001822  0EC0               	movlw	low _buffer
 42477  001824  6E22               	movwf	flash_sector_write@data,c
 42478  001826  0E03               	movlw	high _buffer
 42479  001828  6E23               	movwf	flash_sector_write@data+1,c
 42480  00182A  EC9E  F049         	call	_flash_sector_write	;wreg free
 42481  00182E                     l2031:
 42482                           
 42483                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 42484  00182E  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 42485  001830  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 42486  001832  B4D8               	btfsc	status,2,c
 42487  001834  D005               	goto	l2032
 42488                           
 42489                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 42490  001836  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 42491  00183A  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 42492                           
 42493                           ;fat16.c: 367: }
 42494  00183E  0012               	return	
 42495  001840                     l2032:
 42496                           
 42497                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 42498  001840  0E00               	movlw	0
 42499  001842  6E37               	movwf	?__make_cluster_chain+1,c
 42500  001844  0E00               	movlw	0
 42501  001846  6E36               	movwf	?__make_cluster_chain,c
 42502  001848  0012               	return	
 42503  00184A                     __end_of__make_cluster_chain:
 42504                           	opt stack 0
 42505                           tosu	equ	0xFFF
 42506                           tosh	equ	0xFFE
 42507                           tosl	equ	0xFFD
 42508                           pclath	equ	0xFFA
 42509                           tblptru	equ	0xFF8
 42510                           tblptrh	equ	0xFF7
 42511                           tblptrl	equ	0xFF6
 42512                           tablat	equ	0xFF5
 42513                           prodh	equ	0xFF4
 42514                           prodl	equ	0xFF3
 42515                           intcon	equ	0xFF2
 42516                           intcon2	equ	0xFF1
 42517                           intcon3	equ	0xFF0
 42518                           indf0	equ	0xFEF
 42519                           postinc0	equ	0xFEE
 42520                           fsr0h	equ	0xFEA
 42521                           fsr0l	equ	0xFE9
 42522                           wreg	equ	0xFE8
 42523                           indf1	equ	0xFE7
 42524                           postdec1	equ	0xFE5
 42525                           plusw1	equ	0xFE3
 42526                           fsr1h	equ	0xFE2
 42527                           fsr1l	equ	0xFE1
 42528                           indf2	equ	0xFDF
 42529                           postinc2	equ	0xFDE
 42530                           postdec2	equ	0xFDD
 42531                           plusw2	equ	0xFDB
 42532                           fsr2h	equ	0xFDA
 42533                           fsr2l	equ	0xFD9
 42534                           status	equ	0xFD8
 42535                           
 42536 ;; *************** function _flash_sector_write *****************
 42537 ;; Defined at:
 42538 ;;		line 457 in file "flash.c"
 42539 ;; Parameters:    Size  Location     Type
 42540 ;;  page            2   31[COMRAM] unsigned int 
 42541 ;;  data            2   33[COMRAM] PTR unsigned char 
 42542 ;;		 -> buffer(512), msd_buffer(512), 
 42543 ;; Auto vars:     Size  Location     Type
 42544 ;;  match           1   35[COMRAM] enum E6910
 42545 ;; Return value:  Size  Location     Type
 42546 ;;                  1    wreg      void 
 42547 ;; Registers used:
 42548 ;;		wreg, status,2, status,0, cstack
 42549 ;; Tracked objects:
 42550 ;;		On entry : 0/0
 42551 ;;		On exit  : 0/0
 42552 ;;		Unchanged: 0/0
 42553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42557 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42558 ;;Total ram usage:        5 bytes
 42559 ;; Hardware stack levels used:    1
 42560 ;; Hardware stack levels required when called:    4
 42561 ;; This function calls:
 42562 ;;		__flash_compare_page_to_buffer
 42563 ;;		__flash_write_page_from_buffer
 42564 ;;		__flash_write_to_buffer
 42565 ;;		_spi_set_configuration
 42566 ;; This function is called by:
 42567 ;;		_ExternalFlash_SectorWrite
 42568 ;;		__make_cluster_chain
 42569 ;;		_fat_format
 42570 ;; This function uses a non-reentrant model
 42571 ;;
 42572                           
 42573                           	psect	text208
 42574  00933C                     __ptext208:
 42575                           	opt stack 0
 42576  00933C                     _flash_sector_write:
 42577                           	opt stack 23
 42578                           
 42579                           ;flash.c: 459: flashMatchResult_t match;;flash.c: 462: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 42580                           
 42581                           ;incstack = 0
 42582  00933C  0E00               	movlw	0
 42583  00933E  ECEF  F02A         	call	_spi_set_configuration
 42584                           
 42585                           ;flash.c: 465: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 42586  009342  0E00               	movlw	0
 42587  009344  6E15               	movwf	__flash_write_to_buffer@start+1,c
 42588  009346  0E00               	movlw	0
 42589  009348  6E14               	movwf	__flash_write_to_buffer@start,c
 42590  00934A  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 42591  00934E  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 42592  009352  0E02               	movlw	2
 42593  009354  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 42594  009356  0E00               	movlw	0
 42595  009358  6E18               	movwf	__flash_write_to_buffer@data_length,c
 42596  00935A  0E00               	movlw	0
 42597  00935C  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 42598  00935E  ECEC  F04A         	call	__flash_write_to_buffer	;wreg free
 42599                           
 42600                           ;flash.c: 468: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 42601  009362  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 42602  009366  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 42603  00936A  0E00               	movlw	0
 42604  00936C  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 42605  00936E  EC2F  F044         	call	__flash_compare_page_to_buffer	;wreg free
 42606  009372  6E24               	movwf	flash_sector_write@match,c
 42607                           
 42608                           ;flash.c: 471: if(match==DATA_DOES_NOT_MATCH)
 42609  009374  0424               	decf	flash_sector_write@match,w,c
 42610  009376  A4D8               	btfss	status,2,c
 42611  009378  D008               	goto	l1866
 42612                           
 42613                           ;flash.c: 472: {;flash.c: 473: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 42614  00937A  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 42615  00937E  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 42616  009382  0E00               	movlw	0
 42617  009384  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 42618  009386  EC6E  F048         	call	__flash_write_page_from_buffer	;wreg free
 42619  00938A                     l1866:
 42620                           
 42621                           ;flash.c: 474: };flash.c: 477: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42622  00938A  0E01               	movlw	1
 42623  00938C  ECEF  F02A         	call	_spi_set_configuration
 42624  009390  0012               	return		;funcret
 42625  009392                     __end_of_flash_sector_write:
 42626                           	opt stack 0
 42627                           tosu	equ	0xFFF
 42628                           tosh	equ	0xFFE
 42629                           tosl	equ	0xFFD
 42630                           pclath	equ	0xFFA
 42631                           tblptru	equ	0xFF8
 42632                           tblptrh	equ	0xFF7
 42633                           tblptrl	equ	0xFF6
 42634                           tablat	equ	0xFF5
 42635                           prodh	equ	0xFF4
 42636                           prodl	equ	0xFF3
 42637                           intcon	equ	0xFF2
 42638                           intcon2	equ	0xFF1
 42639                           intcon3	equ	0xFF0
 42640                           indf0	equ	0xFEF
 42641                           postinc0	equ	0xFEE
 42642                           fsr0h	equ	0xFEA
 42643                           fsr0l	equ	0xFE9
 42644                           wreg	equ	0xFE8
 42645                           indf1	equ	0xFE7
 42646                           postdec1	equ	0xFE5
 42647                           plusw1	equ	0xFE3
 42648                           fsr1h	equ	0xFE2
 42649                           fsr1l	equ	0xFE1
 42650                           indf2	equ	0xFDF
 42651                           postinc2	equ	0xFDE
 42652                           postdec2	equ	0xFDD
 42653                           plusw2	equ	0xFDB
 42654                           fsr2h	equ	0xFDA
 42655                           fsr2l	equ	0xFD9
 42656                           status	equ	0xFD8
 42657                           
 42658 ;; *************** function __write_value_to_offset *****************
 42659 ;; Defined at:
 42660 ;;		line 123 in file "fat16.c"
 42661 ;; Parameters:    Size  Location     Type
 42662 ;;  offset          2    0[COMRAM] unsigned int 
 42663 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42664 ;;		 -> buffer(512), 
 42665 ;;  value           2    4[COMRAM] unsigned int 
 42666 ;; Auto vars:     Size  Location     Type
 42667 ;;		None
 42668 ;; Return value:  Size  Location     Type
 42669 ;;                  1    wreg      void 
 42670 ;; Registers used:
 42671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42672 ;; Tracked objects:
 42673 ;;		On entry : 0/0
 42674 ;;		On exit  : 0/0
 42675 ;;		Unchanged: 0/0
 42676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42677 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42680 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42681 ;;Total ram usage:        8 bytes
 42682 ;; Hardware stack levels used:    1
 42683 ;; This function calls:
 42684 ;;		Nothing
 42685 ;; This function is called by:
 42686 ;;		__make_cluster_chain
 42687 ;; This function uses a non-reentrant model
 42688 ;;
 42689                           
 42690                           	psect	text209
 42691  009ADC                     __ptext209:
 42692                           	opt stack 0
 42693  009ADC                     __write_value_to_offset:
 42694                           	opt stack 25
 42695                           
 42696                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 42697                           
 42698                           ;incstack = 0
 42699  009ADC  5001               	movf	__write_value_to_offset@offset,w,c
 42700  009ADE  2403               	addwf	__write_value_to_offset@buffer,w,c
 42701  009AE0  6ED9               	movwf	fsr2l,c
 42702  009AE2  5002               	movf	__write_value_to_offset@offset+1,w,c
 42703  009AE4  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 42704  009AE6  6EDA               	movwf	fsr2h,c
 42705  009AE8  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 42706                           
 42707                           ;fat16.c: 126: value >>= 8;
 42708  009AEC  5006               	movf	__write_value_to_offset@value+1,w,c
 42709  009AEE  6E05               	movwf	__write_value_to_offset@value,c
 42710  009AF0  6A06               	clrf	__write_value_to_offset@value+1,c
 42711                           
 42712                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 42713  009AF2  0E01               	movlw	1
 42714  009AF4  2401               	addwf	__write_value_to_offset@offset,w,c
 42715  009AF6  6E07               	movwf	??__write_value_to_offset& (0+255),c
 42716  009AF8  0E00               	movlw	0
 42717  009AFA  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 42718  009AFC  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 42719  009AFE  5007               	movf	??__write_value_to_offset,w,c
 42720  009B00  2403               	addwf	__write_value_to_offset@buffer,w,c
 42721  009B02  6ED9               	movwf	fsr2l,c
 42722  009B04  5008               	movf	??__write_value_to_offset+1,w,c
 42723  009B06  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 42724  009B08  6EDA               	movwf	fsr2h,c
 42725  009B0A  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 42726  009B0E  0012               	return		;funcret
 42727  009B10                     __end_of__write_value_to_offset:
 42728                           	opt stack 0
 42729                           tosu	equ	0xFFF
 42730                           tosh	equ	0xFFE
 42731                           tosl	equ	0xFFD
 42732                           pclath	equ	0xFFA
 42733                           tblptru	equ	0xFF8
 42734                           tblptrh	equ	0xFF7
 42735                           tblptrl	equ	0xFF6
 42736                           tablat	equ	0xFF5
 42737                           prodh	equ	0xFF4
 42738                           prodl	equ	0xFF3
 42739                           intcon	equ	0xFF2
 42740                           intcon2	equ	0xFF1
 42741                           intcon3	equ	0xFF0
 42742                           indf0	equ	0xFEF
 42743                           postinc0	equ	0xFEE
 42744                           fsr0h	equ	0xFEA
 42745                           fsr0l	equ	0xFE9
 42746                           wreg	equ	0xFE8
 42747                           indf1	equ	0xFE7
 42748                           postdec1	equ	0xFE5
 42749                           plusw1	equ	0xFE3
 42750                           fsr1h	equ	0xFE2
 42751                           fsr1l	equ	0xFE1
 42752                           indf2	equ	0xFDF
 42753                           postinc2	equ	0xFDE
 42754                           postdec2	equ	0xFDD
 42755                           plusw2	equ	0xFDB
 42756                           fsr2h	equ	0xFDA
 42757                           fsr2l	equ	0xFD9
 42758                           status	equ	0xFD8
 42759                           
 42760 ;; *************** function __get_available_cluster *****************
 42761 ;; Defined at:
 42762 ;;		line 130 in file "fat16.c"
 42763 ;; Parameters:    Size  Location     Type
 42764 ;;  first_sector    2   43[COMRAM] unsigned int 
 42765 ;;  skip_sector     2   45[COMRAM] unsigned int 
 42766 ;; Auto vars:     Size  Location     Type
 42767 ;;  sector          2   51[COMRAM] unsigned int 
 42768 ;;  offset          2   49[COMRAM] unsigned int 
 42769 ;;  cluster         2   47[COMRAM] unsigned int 
 42770 ;; Return value:  Size  Location     Type
 42771 ;;                  2   43[COMRAM] unsigned int 
 42772 ;; Registers used:
 42773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42774 ;; Tracked objects:
 42775 ;;		On entry : 0/0
 42776 ;;		On exit  : 0/0
 42777 ;;		Unchanged: 0/0
 42778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42780 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42782 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42783 ;;Total ram usage:       10 bytes
 42784 ;; Hardware stack levels used:    1
 42785 ;; Hardware stack levels required when called:    5
 42786 ;; This function calls:
 42787 ;;		__cluster_from_sector_and_offset
 42788 ;;		__get_available_offset_from_buffer
 42789 ;;		_flash_sector_read
 42790 ;; This function is called by:
 42791 ;;		__make_cluster_chain
 42792 ;; This function uses a non-reentrant model
 42793 ;;
 42794                           
 42795                           	psect	text210
 42796  007062                     __ptext210:
 42797                           	opt stack 0
 42798  007062                     __get_available_cluster:
 42799                           	opt stack 20
 42800                           
 42801                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 42802                           
 42803                           ;incstack = 0
 42804  007062  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 42805  007066  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 42806  00706A                     l11402:
 42807  00706A  5035               	movf	__get_available_cluster@sector+1,w,c
 42808  00706C  E157               	bnz	l11434
 42809  00706E  0E22               	movlw	34
 42810  007070  5C34               	subwf	__get_available_cluster@sector,w,c
 42811  007072  B0D8               	btfsc	status,0,c
 42812  007074  D053               	goto	u8230
 42813                           
 42814                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 42815  007076  502E               	movf	__get_available_cluster@skip_sector,w,c
 42816  007078  1834               	xorwf	__get_available_cluster@sector,w,c
 42817  00707A  E104               	bnz	l11410
 42818  00707C  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 42819  00707E  1835               	xorwf	__get_available_cluster@sector+1,w,c
 42820  007080  B4D8               	btfsc	status,2,c
 42821  007082  D049               	goto	l1998
 42822  007084                     l11410:
 42823                           
 42824                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 42825  007084  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 42826  007088  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 42827  00708C  0EC0               	movlw	low _buffer
 42828  00708E  6E2A               	movwf	flash_sector_read@data,c
 42829  007090  0E03               	movlw	high _buffer
 42830  007092  6E2B               	movwf	flash_sector_read@data+1,c
 42831  007094  ECD3  F04D         	call	_flash_sector_read	;wreg free
 42832                           
 42833                           ;fat16.c: 149: if(sector == 2)
 42834  007098  0E02               	movlw	2
 42835  00709A  1834               	xorwf	__get_available_cluster@sector,w,c
 42836  00709C  1035               	iorwf	__get_available_cluster@sector+1,w,c
 42837  00709E  A4D8               	btfss	status,2,c
 42838  0070A0  D00B               	goto	l1993
 42839                           
 42840                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 42841  0070A2  0E00               	movlw	0
 42842  0070A4  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 42843  0070A6  0E04               	movlw	4
 42844  0070A8  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 42845  0070AA  0EC0               	movlw	low _buffer
 42846  0070AC  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 42847  0070AE  0E03               	movlw	high _buffer
 42848  0070B0  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 42849  0070B2  EC15  F048         	call	__get_available_offset_from_buffer	;wreg free
 42850  0070B6  D00A               	goto	L53
 42851  0070B8                     l1993:
 42852                           
 42853                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 42854  0070B8  0E00               	movlw	0
 42855  0070BA  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 42856  0070BC  0E00               	movlw	0
 42857  0070BE  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 42858  0070C0  0EC0               	movlw	low _buffer
 42859  0070C2  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 42860  0070C4  0E03               	movlw	high _buffer
 42861  0070C6  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 42862  0070C8  EC15  F048         	call	__get_available_offset_from_buffer	;wreg free
 42863  0070CC                     L53:
 42864  0070CC  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 42865  0070D0  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 42866                           
 42867                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 42868  0070D4  2832               	incf	__get_available_cluster@offset,w,c
 42869  0070D6  E103               	bnz	u8210
 42870  0070D8  2833               	incf	__get_available_cluster@offset+1,w,c
 42871  0070DA  B4D8               	btfsc	status,2,c
 42872  0070DC  D01C               	goto	l1998
 42873  0070DE                     u8210:
 42874                           
 42875                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 42876  0070DE  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 42877  0070E2  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 42878  0070E6  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 42879  0070EA  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 42880  0070EE  EC34  F04F         	call	__cluster_from_sector_and_offset	;wreg free
 42881  0070F2  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 42882  0070F6  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 42883                           
 42884                           ;fat16.c: 165: if(cluster > 8191)
 42885  0070FA  0E20               	movlw	32
 42886  0070FC  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 42887  0070FE  A0D8               	btfss	status,0,c
 42888  007100  D005               	goto	l1996
 42889                           
 42890                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 42891  007102  0E00               	movlw	0
 42892  007104  6E2D               	movwf	?__get_available_cluster+1,c
 42893  007106  0E00               	movlw	0
 42894  007108  6E2C               	movwf	?__get_available_cluster,c
 42895  00710A  0012               	return	
 42896  00710C                     l1996:
 42897                           
 42898                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 42899  00710C  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 42900  007110  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 42901  007114  0012               	return	
 42902  007116                     l1998:
 42903  007116  4A34               	infsnz	__get_available_cluster@sector,f,c
 42904  007118  2A35               	incf	__get_available_cluster@sector+1,f,c
 42905  00711A  D7A7               	goto	l11402
 42906  00711C                     u8230:
 42907  00711C                     l11434:
 42908                           
 42909                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 42910  00711C  0E00               	movlw	0
 42911  00711E  6E2D               	movwf	?__get_available_cluster+1,c
 42912  007120  0E00               	movlw	0
 42913  007122  6E2C               	movwf	?__get_available_cluster,c
 42914  007124  0012               	return	
 42915  007126                     __end_of__get_available_cluster:
 42916                           	opt stack 0
 42917                           tosu	equ	0xFFF
 42918                           tosh	equ	0xFFE
 42919                           tosl	equ	0xFFD
 42920                           pclath	equ	0xFFA
 42921                           tblptru	equ	0xFF8
 42922                           tblptrh	equ	0xFF7
 42923                           tblptrl	equ	0xFF6
 42924                           tablat	equ	0xFF5
 42925                           prodh	equ	0xFF4
 42926                           prodl	equ	0xFF3
 42927                           intcon	equ	0xFF2
 42928                           intcon2	equ	0xFF1
 42929                           intcon3	equ	0xFF0
 42930                           indf0	equ	0xFEF
 42931                           postinc0	equ	0xFEE
 42932                           fsr0h	equ	0xFEA
 42933                           fsr0l	equ	0xFE9
 42934                           wreg	equ	0xFE8
 42935                           indf1	equ	0xFE7
 42936                           postdec1	equ	0xFE5
 42937                           plusw1	equ	0xFE3
 42938                           fsr1h	equ	0xFE2
 42939                           fsr1l	equ	0xFE1
 42940                           indf2	equ	0xFDF
 42941                           postinc2	equ	0xFDE
 42942                           postdec2	equ	0xFDD
 42943                           plusw2	equ	0xFDB
 42944                           fsr2h	equ	0xFDA
 42945                           fsr2l	equ	0xFD9
 42946                           status	equ	0xFD8
 42947                           
 42948 ;; *************** function __get_available_offset_from_buffer *****************
 42949 ;; Defined at:
 42950 ;;		line 98 in file "fat16.c"
 42951 ;; Parameters:    Size  Location     Type
 42952 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 42953 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42954 ;;		 -> buffer(512), 
 42955 ;; Auto vars:     Size  Location     Type
 42956 ;;  offset          2    6[COMRAM] unsigned int 
 42957 ;; Return value:  Size  Location     Type
 42958 ;;                  2    0[COMRAM] unsigned int 
 42959 ;; Registers used:
 42960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42961 ;; Tracked objects:
 42962 ;;		On entry : 0/0
 42963 ;;		On exit  : 0/0
 42964 ;;		Unchanged: 0/0
 42965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42969 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42970 ;;Total ram usage:        8 bytes
 42971 ;; Hardware stack levels used:    1
 42972 ;; This function calls:
 42973 ;;		Nothing
 42974 ;; This function is called by:
 42975 ;;		__get_available_cluster
 42976 ;;		__make_cluster_chain
 42977 ;; This function uses a non-reentrant model
 42978 ;;
 42979                           
 42980                           	psect	text211
 42981  00902A                     __ptext211:
 42982                           	opt stack 0
 42983  00902A                     __get_available_offset_from_buffer:
 42984                           	opt stack 25
 42985                           
 42986                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 42987                           
 42988                           ;incstack = 0
 42989  00902A  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 42990  00902E  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 42991  009032  D021               	goto	L54
 42992  009034                     
 42993                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 42994  009034  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 42995  009036  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 42996  009038  6ED9               	movwf	fsr2l,c
 42997  00903A  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 42998  00903C  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 42999  00903E  6EDA               	movwf	fsr2h,c
 43000  009040  50DF               	movf	indf2,w,c
 43001  009042  A4D8               	btfss	status,2,c
 43002  009044  D014               	goto	l1979
 43003  009046  0E01               	movlw	1
 43004  009048  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 43005  00904A  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 43006  00904C  0E00               	movlw	0
 43007  00904E  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 43008  009050  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 43009  009052  5005               	movf	??__get_available_offset_from_buffer,w,c
 43010  009054  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 43011  009056  6ED9               	movwf	fsr2l,c
 43012  009058  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 43013  00905A  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 43014  00905C  6EDA               	movwf	fsr2h,c
 43015  00905E  50DF               	movf	indf2,w,c
 43016  009060  A4D8               	btfss	status,2,c
 43017  009062  D005               	goto	l1979
 43018                           
 43019                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 43020  009064  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 43021  009068  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 43022  00906C  0012               	return	
 43023  00906E                     l1979:
 43024  00906E  0E02               	movlw	2
 43025  009070  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 43026  009072  0E00               	movlw	0
 43027  009074  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 43028  009076                     L54:
 43029  009076  0E02               	movlw	2
 43030  009078  5C08               	subwf	__get_available_offset_from_buffer@offset+1,w,c
 43031  00907A  A0D8               	btfss	status,0,c
 43032  00907C  D7DB               	goto	l1977
 43033                           
 43034                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 43035  00907E  6801               	setf	?__get_available_offset_from_buffer,c
 43036  009080  6802               	setf	?__get_available_offset_from_buffer+1,c
 43037  009082  0012               	return		;funcret
 43038  009084                     __end_of__get_available_offset_from_buffer:
 43039                           	opt stack 0
 43040                           tosu	equ	0xFFF
 43041                           tosh	equ	0xFFE
 43042                           tosl	equ	0xFFD
 43043                           pclath	equ	0xFFA
 43044                           tblptru	equ	0xFF8
 43045                           tblptrh	equ	0xFF7
 43046                           tblptrl	equ	0xFF6
 43047                           tablat	equ	0xFF5
 43048                           prodh	equ	0xFF4
 43049                           prodl	equ	0xFF3
 43050                           intcon	equ	0xFF2
 43051                           intcon2	equ	0xFF1
 43052                           intcon3	equ	0xFF0
 43053                           indf0	equ	0xFEF
 43054                           postinc0	equ	0xFEE
 43055                           fsr0h	equ	0xFEA
 43056                           fsr0l	equ	0xFE9
 43057                           wreg	equ	0xFE8
 43058                           indf1	equ	0xFE7
 43059                           postdec1	equ	0xFE5
 43060                           plusw1	equ	0xFE3
 43061                           fsr1h	equ	0xFE2
 43062                           fsr1l	equ	0xFE1
 43063                           indf2	equ	0xFDF
 43064                           postinc2	equ	0xFDE
 43065                           postdec2	equ	0xFDD
 43066                           plusw2	equ	0xFDB
 43067                           fsr2h	equ	0xFDA
 43068                           fsr2l	equ	0xFD9
 43069                           status	equ	0xFD8
 43070                           
 43071 ;; *************** function __cluster_from_sector_and_offset *****************
 43072 ;; Defined at:
 43073 ;;		line 89 in file "fat16.c"
 43074 ;; Parameters:    Size  Location     Type
 43075 ;;  sector          2    0[COMRAM] unsigned int 
 43076 ;;  offset          2    2[COMRAM] unsigned int 
 43077 ;; Auto vars:     Size  Location     Type
 43078 ;;		None
 43079 ;; Return value:  Size  Location     Type
 43080 ;;                  2    0[COMRAM] unsigned int 
 43081 ;; Registers used:
 43082 ;;		wreg, status,2, status,0
 43083 ;; Tracked objects:
 43084 ;;		On entry : 0/0
 43085 ;;		On exit  : 0/0
 43086 ;;		Unchanged: 0/0
 43087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43092 ;;Total ram usage:        4 bytes
 43093 ;; Hardware stack levels used:    1
 43094 ;; This function calls:
 43095 ;;		Nothing
 43096 ;; This function is called by:
 43097 ;;		__get_available_cluster
 43098 ;; This function uses a non-reentrant model
 43099 ;;
 43100                           
 43101                           	psect	text212
 43102  009E68                     __ptext212:
 43103                           	opt stack 0
 43104  009E68                     __cluster_from_sector_and_offset:
 43105                           	opt stack 24
 43106                           
 43107                           ;fat16.c: 91: offset >>= 1;
 43108                           
 43109                           ;incstack = 0
 43110  009E68  90D8               	bcf	status,0,c
 43111  009E6A  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 43112  009E6C  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 43113                           
 43114                           ;fat16.c: 92: sector -= 2;
 43115  009E6E  0E02               	movlw	2
 43116  009E70  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 43117  009E72  0E00               	movlw	0
 43118  009E74  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 43119                           
 43120                           ;fat16.c: 93: sector <<= 8;
 43121  009E76  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 43122  009E78  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 43123  009E7A  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 43124                           
 43125                           ;fat16.c: 94: sector |= offset;
 43126  009E7C  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 43127  009E7E  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 43128  009E80  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 43129  009E82  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 43130                           
 43131                           ;fat16.c: 95: return sector;
 43132  009E84  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 43133  009E88  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 43134  009E8C  0012               	return	
 43135  009E8E                     __end_of__cluster_from_sector_and_offset:
 43136                           	opt stack 0
 43137                           tosu	equ	0xFFF
 43138                           tosh	equ	0xFFE
 43139                           tosl	equ	0xFFD
 43140                           pclath	equ	0xFFA
 43141                           tblptru	equ	0xFF8
 43142                           tblptrh	equ	0xFF7
 43143                           tblptrl	equ	0xFF6
 43144                           tablat	equ	0xFF5
 43145                           prodh	equ	0xFF4
 43146                           prodl	equ	0xFF3
 43147                           intcon	equ	0xFF2
 43148                           intcon2	equ	0xFF1
 43149                           intcon3	equ	0xFF0
 43150                           indf0	equ	0xFEF
 43151                           postinc0	equ	0xFEE
 43152                           fsr0h	equ	0xFEA
 43153                           fsr0l	equ	0xFE9
 43154                           wreg	equ	0xFE8
 43155                           indf1	equ	0xFE7
 43156                           postdec1	equ	0xFE5
 43157                           plusw1	equ	0xFE3
 43158                           fsr1h	equ	0xFE2
 43159                           fsr1l	equ	0xFE1
 43160                           indf2	equ	0xFDF
 43161                           postinc2	equ	0xFDE
 43162                           postdec2	equ	0xFDD
 43163                           plusw2	equ	0xFDB
 43164                           fsr2h	equ	0xFDA
 43165                           fsr2l	equ	0xFD9
 43166                           status	equ	0xFD8
 43167                           
 43168 ;; *************** function _fat_modify_file *****************
 43169 ;; Defined at:
 43170 ;;		line 962 in file "fat16.c"
 43171 ;; Parameters:    Size  Location     Type
 43172 ;;  file_number     1    wreg     unsigned char 
 43173 ;;  start_byte      4   65[COMRAM] unsigned long 
 43174 ;;  length          2   69[COMRAM] unsigned int 
 43175 ;;  data            2   71[COMRAM] PTR unsigned char 
 43176 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 43177 ;; Auto vars:     Size  Location     Type
 43178 ;;  file_number     1    2[BANK0 ] unsigned char 
 43179 ;;  root           32   14[BANK0 ] struct .
 43180 ;;  position        4   10[BANK0 ] unsigned long 
 43181 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 43182 ;;  offset          2    6[BANK0 ] unsigned int 
 43183 ;;  cluster         2    3[BANK0 ] unsigned int 
 43184 ;;  sector          2    0[BANK0 ] unsigned int 
 43185 ;;  return_code     1    5[BANK0 ] unsigned char 
 43186 ;; Return value:  Size  Location     Type
 43187 ;;                  1    wreg      unsigned char 
 43188 ;; Registers used:
 43189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43190 ;; Tracked objects:
 43191 ;;		On entry : 0/0
 43192 ;;		On exit  : 0/0
 43193 ;;		Unchanged: 0/0
 43194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43196 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43197 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43198 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43199 ;;Total ram usage:       66 bytes
 43200 ;; Hardware stack levels used:    1
 43201 ;; Hardware stack levels required when called:    7
 43202 ;; This function calls:
 43203 ;;		__data_sector_from_cluster
 43204 ;;		__find_nth_cluster
 43205 ;;		__read_fat
 43206 ;;		_fat_get_file_information
 43207 ;;		_flash_partial_write
 43208 ;; This function is called by:
 43209 ;;		_fat_append_to_file
 43210 ;;		__parse_file_modify
 43211 ;; This function uses a non-reentrant model
 43212 ;;
 43213                           
 43214                           	psect	text213
 43215  002758                     __ptext213:
 43216                           	opt stack 0
 43217  002758                     _fat_modify_file:
 43218                           	opt stack 20
 43219                           
 43220                           ;incstack = 0
 43221                           ;fat_modify_file@file_number stored from wreg
 43222  002758  0100               	movlb	0	; () banked
 43223  00275A  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 43224                           
 43225                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 43226  00275C  0E6E               	movlw	low fat_modify_file@root
 43227  00275E  6E30               	movwf	fat_get_file_information@data,c
 43228  002760  0E00               	movlw	high fat_modify_file@root
 43229  002762  6E31               	movwf	fat_get_file_information@data+1,c
 43230  002764  0100               	movlb	0	; () banked
 43231  002766  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 43232  002768  ECE0  F044         	call	_fat_get_file_information
 43233  00276C  0100               	movlb	0	; () banked
 43234  00276E  6F65               	movwf	fat_modify_file@return_code& (0+255),b
 43235                           
 43236                           ; BSR set to: 0
 43237                           ;fat16.c: 974: if(return_code!=0x00)
 43238  002770  5165               	movf	fat_modify_file@return_code& (0+255),w,b
 43239  002772  B4D8               	btfsc	status,2,c
 43240  002774  D002               	goto	l2143
 43241                           
 43242                           ; BSR set to: 0
 43243                           ;fat16.c: 975: {;fat16.c: 977: return return_code;
 43244  002776  5165               	movf	fat_modify_file@return_code& (0+255),w,b
 43245                           
 43246                           ; BSR set to: 0
 43247  002778  0012               	return	
 43248  00277A                     l2143:
 43249                           
 43250                           ; BSR set to: 0
 43251                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 43252                           
 43253                           ; BSR set to: 0
 43254  00277A  5042               	movf	fat_modify_file@start_byte,w,c
 43255  00277C  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 43256  00277E  5043               	movf	fat_modify_file@start_byte+1,w,c
 43257  002780  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 43258  002782  5044               	movf	fat_modify_file@start_byte+2,w,c
 43259  002784  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 43260  002786  5045               	movf	fat_modify_file@start_byte+3,w,c
 43261  002788  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 43262  00278A  B0D8               	btfsc	status,0,c
 43263  00278C  D002               	goto	l2145
 43264                           
 43265                           ; BSR set to: 0
 43266                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;
 43267  00278E  0EF0               	movlw	240
 43268                           
 43269                           ; BSR set to: 0
 43270  002790  0012               	return	
 43271  002792                     l2145:
 43272                           
 43273                           ; BSR set to: 0
 43274                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 43275                           
 43276                           ; BSR set to: 0
 43277  002792  5046               	movf	fat_modify_file@length,w,c
 43278  002794  2442               	addwf	fat_modify_file@start_byte,w,c
 43279  002796  6E4A               	movwf	??_fat_modify_file& (0+255),c
 43280  002798  5047               	movf	fat_modify_file@length+1,w,c
 43281  00279A  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 43282  00279C  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 43283  00279E  0E00               	movlw	0
 43284  0027A0  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 43285  0027A2  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 43286  0027A4  0E00               	movlw	0
 43287  0027A6  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 43288  0027A8  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 43289  0027AA  504A               	movf	??_fat_modify_file,w,c
 43290  0027AC  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 43291  0027AE  504B               	movf	??_fat_modify_file+1,w,c
 43292  0027B0  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 43293  0027B2  504C               	movf	??_fat_modify_file+2,w,c
 43294  0027B4  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 43295  0027B6  504D               	movf	??_fat_modify_file+3,w,c
 43296  0027B8  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 43297  0027BA  B0D8               	btfsc	status,0,c
 43298  0027BC  D00E               	goto	l2146
 43299                           
 43300                           ; BSR set to: 0
 43301                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 43302  0027BE  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 43303  0027C2  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 43304  0027C6  1E4A               	comf	??_fat_modify_file,f,c
 43305  0027C8  1E4B               	comf	??_fat_modify_file+1,f,c
 43306  0027CA  4A4A               	infsnz	??_fat_modify_file,f,c
 43307  0027CC  2A4B               	incf	??_fat_modify_file+1,f,c
 43308  0027CE  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 43309  0027D0  244A               	addwf	??_fat_modify_file,w,c
 43310  0027D2  6E46               	movwf	fat_modify_file@length,c
 43311  0027D4  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 43312  0027D6  204B               	addwfc	??_fat_modify_file+1,w,c
 43313  0027D8  6E47               	movwf	fat_modify_file@length+1,c
 43314  0027DA                     l2146:
 43315                           
 43316                           ; BSR set to: 0
 43317                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 43318                           
 43319                           ; BSR set to: 0
 43320  0027DA  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 43321  0027DE  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 43322  0027E2  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 43323  0027E6  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 43324  0027EA  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 43325  0027EE  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 43326  0027F2  0E0A               	movlw	10
 43327  0027F4  D005               	goto	u10190
 43328  0027F6                     u10195:
 43329  0027F6  90D8               	bcf	status,0,c
 43330  0027F8  324D               	rrcf	??_fat_modify_file+3,f,c
 43331  0027FA  324C               	rrcf	??_fat_modify_file+2,f,c
 43332  0027FC  324B               	rrcf	??_fat_modify_file+1,f,c
 43333  0027FE  324A               	rrcf	??_fat_modify_file,f,c
 43334  002800                     u10190:
 43335  002800  2EE8               	decfsz	wreg,f,c
 43336  002802  D7F9               	goto	u10195
 43337  002804  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 43338  002808  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 43339  00280C  ECE2  F040         	call	__find_nth_cluster	;wreg free
 43340  002810  C038  F063         	movff	?__find_nth_cluster,fat_modify_file@cluster
 43341  002814  C039  F064         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 43342                           
 43343                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 43344  002818  0E00               	movlw	0
 43345  00281A  1442               	andwf	fat_modify_file@start_byte,w,c
 43346  00281C  0100               	movlb	0	; () banked
 43347  00281E  6F6A               	movwf	fat_modify_file@position& (0+255),b
 43348  002820  0EFE               	movlw	254
 43349  002822  1443               	andwf	fat_modify_file@start_byte+1,w,c
 43350  002824  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 43351  002826  0EFF               	movlw	255
 43352  002828  1444               	andwf	fat_modify_file@start_byte+2,w,c
 43353  00282A  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 43354  00282C  0EFF               	movlw	255
 43355  00282E  1445               	andwf	fat_modify_file@start_byte+3,w,c
 43356  002830  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 43357                           
 43358                           ; BSR set to: 0
 43359                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 43360  002832  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 43361  002836  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 43362  00283A  1E4A               	comf	??_fat_modify_file,f,c
 43363  00283C  1E4B               	comf	??_fat_modify_file+1,f,c
 43364  00283E  4A4A               	infsnz	??_fat_modify_file,f,c
 43365  002840  2A4B               	incf	??_fat_modify_file+1,f,c
 43366  002842  5042               	movf	fat_modify_file@start_byte,w,c
 43367  002844  244A               	addwf	??_fat_modify_file,w,c
 43368  002846  6F66               	movwf	fat_modify_file@offset& (0+255),b
 43369  002848  5043               	movf	fat_modify_file@start_byte+1,w,c
 43370  00284A  204B               	addwfc	??_fat_modify_file+1,w,c
 43371  00284C  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 43372                           
 43373                           ; BSR set to: 0
 43374                           ;fat16.c: 1003: position = 0;
 43375  00284E  0E00               	movlw	0
 43376  002850  6F6A               	movwf	fat_modify_file@position& (0+255),b
 43377  002852  0E00               	movlw	0
 43378  002854  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 43379  002856  0E00               	movlw	0
 43380  002858  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 43381  00285A  0E00               	movlw	0
 43382  00285C  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 43383                           
 43384                           ;fat16.c: 1004: while(position < length)
 43385  00285E  D089               	goto	l2147
 43386  002860                     
 43387                           ; BSR set to: 0
 43388                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 43389                           
 43390                           ; BSR set to: 0
 43391  002860  0E02               	movlw	2
 43392  002862  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 43393  002864  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 43394  002866  A4D8               	btfss	status,2,c
 43395  002868  D00F               	goto	l2149
 43396                           
 43397                           ; BSR set to: 0
 43398                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 43399  00286A  C063  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 43400  00286E  C064  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 43401  002872  ECC9  F049         	call	__read_fat	;wreg free
 43402  002876  C030  F063         	movff	?__read_fat,fat_modify_file@cluster
 43403  00287A  C031  F064         	movff	?__read_fat+1,fat_modify_file@cluster+1
 43404                           
 43405                           ;fat16.c: 1012: offset = 0;
 43406  00287E  0E00               	movlw	0
 43407  002880  0100               	movlb	0	; () banked
 43408  002882  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 43409  002884  0E00               	movlw	0
 43410  002886  6F66               	movwf	fat_modify_file@offset& (0+255),b
 43411  002888                     l2149:
 43412                           
 43413                           ; BSR set to: 0
 43414                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 43415                           
 43416                           ; BSR set to: 0
 43417  002888  C063  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 43418  00288C  C064  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 43419  002890  ECFA  F050         	call	__data_sector_from_cluster	;wreg free
 43420  002894  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 43421  002898  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 43422                           
 43423                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 43424  00289C  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 43425  0028A0  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 43426  0028A4  1E4A               	comf	??_fat_modify_file,f,c
 43427  0028A6  1E4B               	comf	??_fat_modify_file+1,f,c
 43428  0028A8  4A4A               	infsnz	??_fat_modify_file,f,c
 43429  0028AA  2A4B               	incf	??_fat_modify_file+1,f,c
 43430  0028AC  0E00               	movlw	0
 43431  0028AE  244A               	addwf	??_fat_modify_file,w,c
 43432  0028B0  0100               	movlb	0	; () banked
 43433  0028B2  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 43434  0028B4  0E02               	movlw	2
 43435  0028B6  204B               	addwfc	??_fat_modify_file+1,w,c
 43436  0028B8  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 43437                           
 43438                           ; BSR set to: 0
 43439                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 43440  0028BA  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 43441  0028BC  6E4A               	movwf	??_fat_modify_file& (0+255),c
 43442  0028BE  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 43443  0028C0  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 43444  0028C2  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 43445  0028C4  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 43446  0028C6  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 43447  0028CA  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 43448  0028CE  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 43449  0028D2  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 43450  0028D6  1E4E               	comf	??_fat_modify_file+4,f,c
 43451  0028D8  1E4F               	comf	??_fat_modify_file+5,f,c
 43452  0028DA  1E50               	comf	??_fat_modify_file+6,f,c
 43453  0028DC  1E51               	comf	??_fat_modify_file+7,f,c
 43454  0028DE  2A4E               	incf	??_fat_modify_file+4,f,c
 43455  0028E0  0E00               	movlw	0
 43456  0028E2  224F               	addwfc	??_fat_modify_file+5,f,c
 43457  0028E4  2250               	addwfc	??_fat_modify_file+6,f,c
 43458  0028E6  2251               	addwfc	??_fat_modify_file+7,f,c
 43459  0028E8  5046               	movf	fat_modify_file@length,w,c
 43460  0028EA  244E               	addwf	??_fat_modify_file+4,w,c
 43461  0028EC  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 43462  0028EE  5047               	movf	fat_modify_file@length+1,w,c
 43463  0028F0  204F               	addwfc	??_fat_modify_file+5,w,c
 43464  0028F2  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 43465  0028F4  0E00               	movlw	0
 43466  0028F6  2050               	addwfc	??_fat_modify_file+6,w,c
 43467  0028F8  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 43468  0028FA  0E00               	movlw	0
 43469  0028FC  2051               	addwfc	??_fat_modify_file+7,w,c
 43470  0028FE  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 43471  002900  504A               	movf	??_fat_modify_file,w,c
 43472  002902  5C52               	subwf	??_fat_modify_file+8,w,c
 43473  002904  504B               	movf	??_fat_modify_file+1,w,c
 43474  002906  5853               	subwfb	??_fat_modify_file+9,w,c
 43475  002908  504C               	movf	??_fat_modify_file+2,w,c
 43476  00290A  5854               	subwfb	??_fat_modify_file+10,w,c
 43477  00290C  504D               	movf	??_fat_modify_file+3,w,c
 43478  00290E  5855               	subwfb	??_fat_modify_file+11,w,c
 43479  002910  B0D8               	btfsc	status,0,c
 43480  002912  D00E               	goto	l2150
 43481                           
 43482                           ; BSR set to: 0
 43483                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 43484  002914  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 43485  002918  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 43486  00291C  1E4A               	comf	??_fat_modify_file,f,c
 43487  00291E  1E4B               	comf	??_fat_modify_file+1,f,c
 43488  002920  4A4A               	infsnz	??_fat_modify_file,f,c
 43489  002922  2A4B               	incf	??_fat_modify_file+1,f,c
 43490  002924  5046               	movf	fat_modify_file@length,w,c
 43491  002926  244A               	addwf	??_fat_modify_file,w,c
 43492  002928  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 43493  00292A  5047               	movf	fat_modify_file@length+1,w,c
 43494  00292C  204B               	addwfc	??_fat_modify_file+1,w,c
 43495  00292E  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 43496  002930                     l2150:
 43497                           
 43498                           ; BSR set to: 0
 43499                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 43500                           
 43501                           ; BSR set to: 0
 43502  002930  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 43503  002934  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 43504  002938  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 43505  00293C  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 43506  002940  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 43507  002944  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 43508  002948  516A               	movf	fat_modify_file@position& (0+255),w,b
 43509  00294A  2448               	addwf	fat_modify_file@data,w,c
 43510  00294C  6E26               	movwf	flash_partial_write@data,c
 43511  00294E  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 43512  002950  2049               	addwfc	fat_modify_file@data+1,w,c
 43513  002952  6E27               	movwf	flash_partial_write@data+1,c
 43514  002954  EC51  F045         	call	_flash_partial_write	;wreg free
 43515                           
 43516                           ;fat16.c: 1029: position += number_of_bytes;
 43517  002958  0100               	movlb	0	; () banked
 43518  00295A  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 43519  00295C  276A               	addwf	fat_modify_file@position& (0+255),f,b
 43520  00295E  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 43521  002960  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 43522  002962  0E00               	movlw	0
 43523  002964  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 43524  002966  0E00               	movlw	0
 43525  002968  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 43526                           
 43527                           ; BSR set to: 0
 43528                           ;fat16.c: 1030: offset += number_of_bytes;
 43529  00296A  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 43530  00296C  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 43531  00296E  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 43532  002970  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 43533  002972                     l2147:
 43534                           
 43535                           ; BSR set to: 0
 43536                           
 43537                           ; BSR set to: 0
 43538  002972  5046               	movf	fat_modify_file@length,w,c
 43539  002974  6E4A               	movwf	??_fat_modify_file& (0+255),c
 43540  002976  5047               	movf	fat_modify_file@length+1,w,c
 43541  002978  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 43542  00297A  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 43543  00297C  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 43544  00297E  504A               	movf	??_fat_modify_file,w,c
 43545  002980  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 43546  002982  504B               	movf	??_fat_modify_file+1,w,c
 43547  002984  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 43548  002986  504C               	movf	??_fat_modify_file+2,w,c
 43549  002988  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 43550  00298A  504D               	movf	??_fat_modify_file+3,w,c
 43551  00298C  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 43552  00298E  A0D8               	btfss	status,0,c
 43553  002990  D767               	goto	l2148
 43554                           
 43555                           ; BSR set to: 0
 43556                           ;fat16.c: 1031: };fat16.c: 1033: return 0x00;
 43557                           
 43558                           ; BSR set to: 0
 43559  002992  0E00               	movlw	0
 43560  002994  0012               	return	
 43561  002996                     __end_of_fat_modify_file:
 43562                           	opt stack 0
 43563                           tosu	equ	0xFFF
 43564                           tosh	equ	0xFFE
 43565                           tosl	equ	0xFFD
 43566                           pclath	equ	0xFFA
 43567                           tblptru	equ	0xFF8
 43568                           tblptrh	equ	0xFF7
 43569                           tblptrl	equ	0xFF6
 43570                           tablat	equ	0xFF5
 43571                           prodh	equ	0xFF4
 43572                           prodl	equ	0xFF3
 43573                           intcon	equ	0xFF2
 43574                           intcon2	equ	0xFF1
 43575                           intcon3	equ	0xFF0
 43576                           indf0	equ	0xFEF
 43577                           postinc0	equ	0xFEE
 43578                           fsr0h	equ	0xFEA
 43579                           fsr0l	equ	0xFE9
 43580                           wreg	equ	0xFE8
 43581                           indf1	equ	0xFE7
 43582                           postdec1	equ	0xFE5
 43583                           plusw1	equ	0xFE3
 43584                           fsr1h	equ	0xFE2
 43585                           fsr1l	equ	0xFE1
 43586                           indf2	equ	0xFDF
 43587                           postinc2	equ	0xFDE
 43588                           postdec2	equ	0xFDD
 43589                           plusw2	equ	0xFDB
 43590                           fsr2h	equ	0xFDA
 43591                           fsr2l	equ	0xFD9
 43592                           status	equ	0xFD8
 43593                           
 43594 ;; *************** function _flash_partial_write *****************
 43595 ;; Defined at:
 43596 ;;		line 495 in file "flash.c"
 43597 ;; Parameters:    Size  Location     Type
 43598 ;;  page            2   31[COMRAM] unsigned int 
 43599 ;;  start           2   33[COMRAM] unsigned int 
 43600 ;;  length          2   35[COMRAM] unsigned int 
 43601 ;;  data            2   37[COMRAM] PTR unsigned char 
 43602 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 43603 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 43604 ;; Auto vars:     Size  Location     Type
 43605 ;;  match           1   39[COMRAM] enum E6910
 43606 ;; Return value:  Size  Location     Type
 43607 ;;                  1    wreg      void 
 43608 ;; Registers used:
 43609 ;;		wreg, status,2, status,0, cstack
 43610 ;; Tracked objects:
 43611 ;;		On entry : 0/0
 43612 ;;		On exit  : 0/0
 43613 ;;		Unchanged: 0/0
 43614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43615 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43618 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43619 ;;Total ram usage:        9 bytes
 43620 ;; Hardware stack levels used:    1
 43621 ;; Hardware stack levels required when called:    4
 43622 ;; This function calls:
 43623 ;;		__flash_compare_page_to_buffer
 43624 ;;		__flash_copy_page_to_buffer
 43625 ;;		__flash_is_busy
 43626 ;;		__flash_write_page_from_buffer
 43627 ;;		__flash_write_to_buffer
 43628 ;;		_spi_set_configuration
 43629 ;; This function is called by:
 43630 ;;		__write_root
 43631 ;;		__delete_root
 43632 ;;		_fat_modify_file
 43633 ;; This function uses a non-reentrant model
 43634 ;;
 43635                           
 43636                           	psect	text214
 43637  008AA2                     __ptext214:
 43638                           	opt stack 0
 43639  008AA2                     _flash_partial_write:
 43640                           	opt stack 21
 43641                           
 43642                           ;flash.c: 497: flashMatchResult_t match;;flash.c: 500: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 43643                           
 43644                           ; BSR set to: 0
 43645                           ;incstack = 0
 43646  008AA2  0E00               	movlw	0
 43647  008AA4  ECEF  F02A         	call	_spi_set_configuration
 43648  008AA8  ECD7  F04F         	call	__flash_is_busy	;wreg free
 43649  008AAC  0900               	iorlw	0
 43650  008AAE  A4D8               	btfss	status,2,c
 43651  008AB0  D7FB               	goto	l1874
 43652                           
 43653                           ;flash.c: 506: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 43654  008AB2  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 43655  008AB6  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 43656  008ABA  0E00               	movlw	0
 43657  008ABC  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 43658  008ABE  EC9A  F048         	call	__flash_copy_page_to_buffer	;wreg free
 43659                           
 43660                           ;flash.c: 509: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 43661  008AC2  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 43662  008AC6  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 43663  008ACA  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 43664  008ACE  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 43665  008AD2  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 43666  008AD6  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 43667  008ADA  0E00               	movlw	0
 43668  008ADC  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 43669  008ADE  ECEC  F04A         	call	__flash_write_to_buffer	;wreg free
 43670                           
 43671                           ;flash.c: 512: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 43672  008AE2  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 43673  008AE6  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 43674  008AEA  0E00               	movlw	0
 43675  008AEC  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 43676  008AEE  EC2F  F044         	call	__flash_compare_page_to_buffer	;wreg free
 43677  008AF2  6E28               	movwf	flash_partial_write@match,c
 43678                           
 43679                           ;flash.c: 515: if(match==DATA_DOES_NOT_MATCH)
 43680  008AF4  0428               	decf	flash_partial_write@match,w,c
 43681  008AF6  A4D8               	btfss	status,2,c
 43682  008AF8  D008               	goto	l1876
 43683                           
 43684                           ;flash.c: 516: {;flash.c: 517: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 43685  008AFA  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 43686  008AFE  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 43687  008B02  0E00               	movlw	0
 43688  008B04  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 43689  008B06  EC6E  F048         	call	__flash_write_page_from_buffer	;wreg free
 43690  008B0A                     l1876:
 43691                           
 43692                           ;flash.c: 518: };flash.c: 521: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 43693  008B0A  0E01               	movlw	1
 43694  008B0C  ECEF  F02A         	call	_spi_set_configuration
 43695  008B10  0012               	return		;funcret
 43696  008B12                     __end_of_flash_partial_write:
 43697                           	opt stack 0
 43698                           tosu	equ	0xFFF
 43699                           tosh	equ	0xFFE
 43700                           tosl	equ	0xFFD
 43701                           pclath	equ	0xFFA
 43702                           tblptru	equ	0xFF8
 43703                           tblptrh	equ	0xFF7
 43704                           tblptrl	equ	0xFF6
 43705                           tablat	equ	0xFF5
 43706                           prodh	equ	0xFF4
 43707                           prodl	equ	0xFF3
 43708                           intcon	equ	0xFF2
 43709                           intcon2	equ	0xFF1
 43710                           intcon3	equ	0xFF0
 43711                           indf0	equ	0xFEF
 43712                           postinc0	equ	0xFEE
 43713                           fsr0h	equ	0xFEA
 43714                           fsr0l	equ	0xFE9
 43715                           wreg	equ	0xFE8
 43716                           indf1	equ	0xFE7
 43717                           postdec1	equ	0xFE5
 43718                           plusw1	equ	0xFE3
 43719                           fsr1h	equ	0xFE2
 43720                           fsr1l	equ	0xFE1
 43721                           indf2	equ	0xFDF
 43722                           postinc2	equ	0xFDE
 43723                           postdec2	equ	0xFDD
 43724                           plusw2	equ	0xFDB
 43725                           fsr2h	equ	0xFDA
 43726                           fsr2l	equ	0xFD9
 43727                           status	equ	0xFD8
 43728                           
 43729 ;; *************** function __flash_write_to_buffer *****************
 43730 ;; Defined at:
 43731 ;;		line 236 in file "flash.c"
 43732 ;; Parameters:    Size  Location     Type
 43733 ;;  start           2   19[COMRAM] unsigned int 
 43734 ;;  data            2   21[COMRAM] PTR unsigned char 
 43735 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 43736 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 43737 ;;  data_length     2   23[COMRAM] unsigned int 
 43738 ;;  buffer          1   25[COMRAM] enum E6906
 43739 ;; Auto vars:     Size  Location     Type
 43740 ;;  command         4   26[COMRAM] unsigned char [4]
 43741 ;; Return value:  Size  Location     Type
 43742 ;;                  1    wreg      void 
 43743 ;; Registers used:
 43744 ;;		wreg, status,2, status,0, cstack
 43745 ;; Tracked objects:
 43746 ;;		On entry : 0/0
 43747 ;;		On exit  : 0/0
 43748 ;;		Unchanged: 0/0
 43749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43750 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43751 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43753 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43754 ;;Total ram usage:       11 bytes
 43755 ;; Hardware stack levels used:    1
 43756 ;; Hardware stack levels required when called:    3
 43757 ;; This function calls:
 43758 ;;		__flash_is_busy
 43759 ;;		_spi_tx_tx
 43760 ;; This function is called by:
 43761 ;;		_flash_sector_write
 43762 ;;		_flash_partial_write
 43763 ;;		_flash_write_to_buffer
 43764 ;; This function uses a non-reentrant model
 43765 ;;
 43766                           
 43767                           	psect	text215
 43768  0095D8                     __ptext215:
 43769                           	opt stack 0
 43770  0095D8                     __flash_write_to_buffer:
 43771                           	opt stack 23
 43772                           
 43773                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 43774                           
 43775                           ;incstack = 0
 43776  0095D8  ECD7  F04F         	call	__flash_is_busy	;wreg free
 43777  0095DC  0900               	iorlw	0
 43778  0095DE  A4D8               	btfss	status,2,c
 43779  0095E0  D7FB               	goto	__flash_write_to_buffer
 43780                           
 43781                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 43782  0095E2  501A               	movf	__flash_write_to_buffer@buffer,w,c
 43783  0095E4  A4D8               	btfss	status,2,c
 43784  0095E6  D002               	goto	l1807
 43785                           
 43786                           ;flash.c: 245: command[0] = 0x84;
 43787  0095E8  0E84               	movlw	132
 43788  0095EA  6E1B               	movwf	__flash_write_to_buffer@command,c
 43789  0095EC                     l1807:
 43790                           
 43791                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 43792  0095EC  041A               	decf	__flash_write_to_buffer@buffer,w,c
 43793  0095EE  A4D8               	btfss	status,2,c
 43794  0095F0  D002               	goto	l1808
 43795                           
 43796                           ;flash.c: 247: command[0] = 0x87;
 43797  0095F2  0E87               	movlw	135
 43798  0095F4  6E1B               	movwf	__flash_write_to_buffer@command,c
 43799  0095F6                     l1808:
 43800                           
 43801                           ;flash.c: 249: command[1] = 0x00;
 43802  0095F6  0E00               	movlw	0
 43803  0095F8  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 43804                           
 43805                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 43806  0095FA  5015               	movf	__flash_write_to_buffer@start+1,w,c
 43807  0095FC  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 43808                           
 43809                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 43810  0095FE  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 43811                           
 43812                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 43813  009602  0E1B               	movlw	low __flash_write_to_buffer@command
 43814  009604  6E01               	movwf	spi_tx_tx@command,c
 43815  009606  0E00               	movlw	high __flash_write_to_buffer@command
 43816  009608  6E02               	movwf	spi_tx_tx@command+1,c
 43817  00960A  0E00               	movlw	0
 43818  00960C  6E04               	movwf	spi_tx_tx@command_length+1,c
 43819  00960E  0E04               	movlw	4
 43820  009610  6E03               	movwf	spi_tx_tx@command_length,c
 43821  009612  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 43822  009616  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 43823  00961A  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 43824  00961E  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 43825  009622  ECEA  F042         	call	_spi_tx_tx	;wreg free
 43826  009626  0012               	return		;funcret
 43827  009628                     __end_of__flash_write_to_buffer:
 43828                           	opt stack 0
 43829                           tosu	equ	0xFFF
 43830                           tosh	equ	0xFFE
 43831                           tosl	equ	0xFFD
 43832                           pclath	equ	0xFFA
 43833                           tblptru	equ	0xFF8
 43834                           tblptrh	equ	0xFF7
 43835                           tblptrl	equ	0xFF6
 43836                           tablat	equ	0xFF5
 43837                           prodh	equ	0xFF4
 43838                           prodl	equ	0xFF3
 43839                           intcon	equ	0xFF2
 43840                           intcon2	equ	0xFF1
 43841                           intcon3	equ	0xFF0
 43842                           indf0	equ	0xFEF
 43843                           postinc0	equ	0xFEE
 43844                           fsr0h	equ	0xFEA
 43845                           fsr0l	equ	0xFE9
 43846                           wreg	equ	0xFE8
 43847                           indf1	equ	0xFE7
 43848                           postdec1	equ	0xFE5
 43849                           plusw1	equ	0xFE3
 43850                           fsr1h	equ	0xFE2
 43851                           fsr1l	equ	0xFE1
 43852                           indf2	equ	0xFDF
 43853                           postinc2	equ	0xFDE
 43854                           postdec2	equ	0xFDD
 43855                           plusw2	equ	0xFDB
 43856                           fsr2h	equ	0xFDA
 43857                           fsr2l	equ	0xFD9
 43858                           status	equ	0xFD8
 43859                           
 43860 ;; *************** function _spi_tx_tx *****************
 43861 ;; Defined at:
 43862 ;;		line 387 in file "spi.c"
 43863 ;; Parameters:    Size  Location     Type
 43864 ;;  command         2    0[COMRAM] PTR unsigned char 
 43865 ;;		 -> _flash_write_to_buffer@command(4), 
 43866 ;;  command_leng    2    2[COMRAM] unsigned int 
 43867 ;;  data            2    4[COMRAM] PTR unsigned char 
 43868 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 43869 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 43870 ;;  data_length     2    6[COMRAM] unsigned int 
 43871 ;; Auto vars:     Size  Location     Type
 43872 ;;		None
 43873 ;; Return value:  Size  Location     Type
 43874 ;;                  1    wreg      void 
 43875 ;; Registers used:
 43876 ;;		wreg, status,2, status,0
 43877 ;; Tracked objects:
 43878 ;;		On entry : 0/0
 43879 ;;		On exit  : 0/0
 43880 ;;		Unchanged: 0/0
 43881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43885 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43886 ;;Total ram usage:       12 bytes
 43887 ;; Hardware stack levels used:    1
 43888 ;; This function calls:
 43889 ;;		Nothing
 43890 ;; This function is called by:
 43891 ;;		__flash_write_to_buffer
 43892 ;; This function uses a non-reentrant model
 43893 ;;
 43894                           
 43895                           	psect	text216
 43896  0085D4                     __ptext216:
 43897                           	opt stack 0
 43898  0085D4                     _spi_tx_tx:
 43899                           	opt stack 25
 43900                           
 43901                           ;spi.c: 390: DMACON1bits.SSCON1 = 0;
 43902                           
 43903                           ;incstack = 0
 43904  0085D4  9E88               	bcf	3976,7,c	;volatile
 43905                           
 43906                           ;spi.c: 391: DMACON1bits.SSCON0 = 0;
 43907  0085D6  9C88               	bcf	3976,6,c	;volatile
 43908                           
 43909                           ;spi.c: 393: DMACON1bits.TXINC = 1;
 43910  0085D8  8A88               	bsf	3976,5,c	;volatile
 43911                           
 43912                           ;spi.c: 395: DMACON1bits.RXINC = 0;
 43913  0085DA  9888               	bcf	3976,4,c	;volatile
 43914                           
 43915                           ;spi.c: 397: DMACON1bits.DUPLEX1 = 0;
 43916  0085DC  9688               	bcf	3976,3,c	;volatile
 43917                           
 43918                           ;spi.c: 398: DMACON1bits.DUPLEX0 = 1;
 43919  0085DE  8488               	bsf	3976,2,c	;volatile
 43920                           
 43921                           ;spi.c: 400: DMACON1bits.DLYINTEN = 0;
 43922  0085E0  9288               	bcf	3976,1,c	;volatile
 43923                           
 43924                           ;spi.c: 402: DMACON2bits.DLYCYC = 0b0000;
 43925  0085E2  9886               	bcf	3974,4,c	;volatile
 43926  0085E4  9A86               	bcf	3974,5,c	;volatile
 43927  0085E6  9C86               	bcf	3974,6,c	;volatile
 43928  0085E8  9E86               	bcf	3974,7,c	;volatile
 43929                           
 43930                           ;spi.c: 404: DMACON2bits.INTLVL = 0b0000;
 43931  0085EA  9086               	bcf	3974,0,c	;volatile
 43932  0085EC  9286               	bcf	3974,1,c	;volatile
 43933  0085EE  9486               	bcf	3974,2,c	;volatile
 43934  0085F0  9686               	bcf	3974,3,c	;volatile
 43935                           
 43936                           ;spi.c: 407: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 43937  0085F2  5002               	movf	spi_tx_tx@command+1,w,c
 43938  0085F4  6E6A               	movwf	3946,c	;volatile
 43939                           
 43940                           ;spi.c: 408: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 43941  0085F6  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 43942                           
 43943                           ;spi.c: 411: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 43944  0085FA  0EFF               	movlw	255
 43945  0085FC  6E09               	movwf	??_spi_tx_tx& (0+255),c
 43946  0085FE  0EFF               	movlw	255
 43947  008600  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 43948  008602  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 43949  008606  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 43950  00860A  5009               	movf	??_spi_tx_tx,w,c
 43951  00860C  260B               	addwf	??_spi_tx_tx+2,f,c
 43952  00860E  500A               	movf	??_spi_tx_tx+1,w,c
 43953  008610  220C               	addwfc	??_spi_tx_tx+3,f,c
 43954  008612  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 43955  008616  6A0C               	clrf	??_spi_tx_tx+3,c
 43956  008618  500B               	movf	??_spi_tx_tx+2,w,c
 43957  00861A  6E66               	movwf	3942,c	;volatile
 43958                           
 43959                           ;spi.c: 412: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 43960  00861C  0403               	decf	spi_tx_tx@command_length,w,c
 43961  00861E  6E67               	movwf	3943,c	;volatile
 43962                           
 43963                           ;spi.c: 415: LATDbits.LD7 = 0;
 43964  008620  9E8C               	bcf	3980,7,c	;volatile
 43965                           
 43966                           ;spi.c: 418: DMACON1bits.DMAEN = 1;
 43967  008622  8088               	bsf	3976,0,c	;volatile
 43968  008624  B088               	btfsc	3976,0,c	;volatile
 43969  008626  D7FE               	goto	l3103
 43970                           
 43971                           ;spi.c: 422: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43972  008628  5006               	movf	spi_tx_tx@data+1,w,c
 43973  00862A  6E6A               	movwf	3946,c	;volatile
 43974                           
 43975                           ;spi.c: 423: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43976  00862C  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 43977                           
 43978                           ;spi.c: 426: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 43979  008630  0EFF               	movlw	255
 43980  008632  6E09               	movwf	??_spi_tx_tx& (0+255),c
 43981  008634  0EFF               	movlw	255
 43982  008636  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 43983  008638  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 43984  00863C  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 43985  008640  5009               	movf	??_spi_tx_tx,w,c
 43986  008642  260B               	addwf	??_spi_tx_tx+2,f,c
 43987  008644  500A               	movf	??_spi_tx_tx+1,w,c
 43988  008646  220C               	addwfc	??_spi_tx_tx+3,f,c
 43989  008648  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 43990  00864C  6A0C               	clrf	??_spi_tx_tx+3,c
 43991  00864E  500B               	movf	??_spi_tx_tx+2,w,c
 43992  008650  6E66               	movwf	3942,c	;volatile
 43993                           
 43994                           ;spi.c: 427: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 43995  008652  0407               	decf	spi_tx_tx@data_length,w,c
 43996  008654  6E67               	movwf	3943,c	;volatile
 43997                           
 43998                           ;spi.c: 430: DMACON1bits.DMAEN = 1;
 43999  008656  8088               	bsf	3976,0,c	;volatile
 44000  008658  B088               	btfsc	3976,0,c	;volatile
 44001  00865A  D7FE               	goto	l3106
 44002                           
 44003                           ;spi.c: 434: LATDbits.LD7 = 1;
 44004  00865C  8E8C               	bsf	3980,7,c	;volatile
 44005  00865E  0012               	return		;funcret
 44006  008660                     __end_of_spi_tx_tx:
 44007                           	opt stack 0
 44008                           tosu	equ	0xFFF
 44009                           tosh	equ	0xFFE
 44010                           tosl	equ	0xFFD
 44011                           pclath	equ	0xFFA
 44012                           tblptru	equ	0xFF8
 44013                           tblptrh	equ	0xFF7
 44014                           tblptrl	equ	0xFF6
 44015                           tablat	equ	0xFF5
 44016                           prodh	equ	0xFF4
 44017                           prodl	equ	0xFF3
 44018                           intcon	equ	0xFF2
 44019                           intcon2	equ	0xFF1
 44020                           intcon3	equ	0xFF0
 44021                           indf0	equ	0xFEF
 44022                           postinc0	equ	0xFEE
 44023                           fsr0h	equ	0xFEA
 44024                           fsr0l	equ	0xFE9
 44025                           wreg	equ	0xFE8
 44026                           indf1	equ	0xFE7
 44027                           postdec1	equ	0xFE5
 44028                           plusw1	equ	0xFE3
 44029                           fsr1h	equ	0xFE2
 44030                           fsr1l	equ	0xFE1
 44031                           indf2	equ	0xFDF
 44032                           postinc2	equ	0xFDE
 44033                           postdec2	equ	0xFDD
 44034                           plusw2	equ	0xFDB
 44035                           fsr2h	equ	0xFDA
 44036                           fsr2l	equ	0xFD9
 44037                           status	equ	0xFD8
 44038                           
 44039 ;; *************** function __flash_write_page_from_buffer *****************
 44040 ;; Defined at:
 44041 ;;		line 258 in file "flash.c"
 44042 ;; Parameters:    Size  Location     Type
 44043 ;;  page            2   19[COMRAM] unsigned int 
 44044 ;;  buffer          1   21[COMRAM] enum E6906
 44045 ;; Auto vars:     Size  Location     Type
 44046 ;;  command         4   25[COMRAM] unsigned char [4]
 44047 ;; Return value:  Size  Location     Type
 44048 ;;                  1    wreg      void 
 44049 ;; Registers used:
 44050 ;;		wreg, status,2, status,0, cstack
 44051 ;; Tracked objects:
 44052 ;;		On entry : 0/0
 44053 ;;		On exit  : 0/0
 44054 ;;		Unchanged: 0/0
 44055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44056 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44059 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44060 ;;Total ram usage:       10 bytes
 44061 ;; Hardware stack levels used:    1
 44062 ;; Hardware stack levels required when called:    3
 44063 ;; This function calls:
 44064 ;;		__flash_is_busy
 44065 ;;		_spi_tx
 44066 ;; This function is called by:
 44067 ;;		_flash_sector_write
 44068 ;;		_flash_partial_write
 44069 ;;		_flash_write_page_from_buffer
 44070 ;; This function uses a non-reentrant model
 44071 ;;
 44072                           
 44073                           	psect	text217
 44074  0090DC                     __ptext217:
 44075                           	opt stack 0
 44076  0090DC                     __flash_write_page_from_buffer:
 44077                           	opt stack 23
 44078                           
 44079                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 44080                           
 44081                           ;incstack = 0
 44082  0090DC  ECD7  F04F         	call	__flash_is_busy	;wreg free
 44083  0090E0  0900               	iorlw	0
 44084  0090E2  A4D8               	btfss	status,2,c
 44085  0090E4  D7FB               	goto	__flash_write_page_from_buffer
 44086                           
 44087                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 44088  0090E6  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 44089  0090E8  A4D8               	btfss	status,2,c
 44090  0090EA  D002               	goto	l1815
 44091                           
 44092                           ;flash.c: 267: command[0] = 0x83;
 44093  0090EC  0E83               	movlw	131
 44094  0090EE  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 44095  0090F0                     l1815:
 44096                           
 44097                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 44098  0090F0  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 44099  0090F2  A4D8               	btfss	status,2,c
 44100  0090F4  D002               	goto	l1816
 44101                           
 44102                           ;flash.c: 269: command[0] = 0x86;
 44103  0090F6  0E86               	movlw	134
 44104  0090F8  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 44105  0090FA                     l1816:
 44106                           
 44107                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 44108  0090FA  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 44109  0090FE  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 44110  009102  0E07               	movlw	7
 44111  009104  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 44112  009106                     u7905:
 44113  009106  90D8               	bcf	status,0,c
 44114  009108  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 44115  00910A  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 44116  00910C  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 44117  00910E  D7FB               	goto	u7905
 44118  009110  5017               	movf	??__flash_write_page_from_buffer,w,c
 44119  009112  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 44120                           
 44121                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 44122  009114  5014               	movf	__flash_write_page_from_buffer@page,w,c
 44123  009116  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 44124  009118  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 44125                           
 44126                           ;flash.c: 273: command[3] = 0x00;
 44127  00911A  0E00               	movlw	0
 44128  00911C  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 44129                           
 44130                           ;flash.c: 276: spi_tx(command, 4);
 44131  00911E  0E1A               	movlw	low __flash_write_page_from_buffer@command
 44132  009120  6E01               	movwf	spi_tx@data,c
 44133  009122  0E00               	movlw	high __flash_write_page_from_buffer@command
 44134  009124  6E02               	movwf	spi_tx@data+1,c
 44135  009126  0E00               	movlw	0
 44136  009128  6E04               	movwf	spi_tx@length+1,c
 44137  00912A  0E04               	movlw	4
 44138  00912C  6E03               	movwf	spi_tx@length,c
 44139  00912E  ECC6  F048         	call	_spi_tx	;wreg free
 44140  009132  0012               	return		;funcret
 44141  009134                     __end_of__flash_write_page_from_buffer:
 44142                           	opt stack 0
 44143                           tosu	equ	0xFFF
 44144                           tosh	equ	0xFFE
 44145                           tosl	equ	0xFFD
 44146                           pclath	equ	0xFFA
 44147                           tblptru	equ	0xFF8
 44148                           tblptrh	equ	0xFF7
 44149                           tblptrl	equ	0xFF6
 44150                           tablat	equ	0xFF5
 44151                           prodh	equ	0xFF4
 44152                           prodl	equ	0xFF3
 44153                           intcon	equ	0xFF2
 44154                           intcon2	equ	0xFF1
 44155                           intcon3	equ	0xFF0
 44156                           indf0	equ	0xFEF
 44157                           postinc0	equ	0xFEE
 44158                           fsr0h	equ	0xFEA
 44159                           fsr0l	equ	0xFE9
 44160                           wreg	equ	0xFE8
 44161                           indf1	equ	0xFE7
 44162                           postdec1	equ	0xFE5
 44163                           plusw1	equ	0xFE3
 44164                           fsr1h	equ	0xFE2
 44165                           fsr1l	equ	0xFE1
 44166                           indf2	equ	0xFDF
 44167                           postinc2	equ	0xFDE
 44168                           postdec2	equ	0xFDD
 44169                           plusw2	equ	0xFDB
 44170                           fsr2h	equ	0xFDA
 44171                           fsr2l	equ	0xFD9
 44172                           status	equ	0xFD8
 44173                           
 44174 ;; *************** function __flash_copy_page_to_buffer *****************
 44175 ;; Defined at:
 44176 ;;		line 154 in file "flash.c"
 44177 ;; Parameters:    Size  Location     Type
 44178 ;;  page            2   19[COMRAM] unsigned int 
 44179 ;;  buffer          1   21[COMRAM] enum E6906
 44180 ;; Auto vars:     Size  Location     Type
 44181 ;;  command         4   25[COMRAM] unsigned char [4]
 44182 ;; Return value:  Size  Location     Type
 44183 ;;                  1    wreg      void 
 44184 ;; Registers used:
 44185 ;;		wreg, status,2, status,0, cstack
 44186 ;; Tracked objects:
 44187 ;;		On entry : 0/0
 44188 ;;		On exit  : 0/0
 44189 ;;		Unchanged: 0/0
 44190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44193 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44194 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44195 ;;Total ram usage:       10 bytes
 44196 ;; Hardware stack levels used:    1
 44197 ;; Hardware stack levels required when called:    3
 44198 ;; This function calls:
 44199 ;;		__flash_is_busy
 44200 ;;		_spi_tx
 44201 ;; This function is called by:
 44202 ;;		_flash_partial_write
 44203 ;;		_flash_copy_page_to_buffer
 44204 ;; This function uses a non-reentrant model
 44205 ;;
 44206                           
 44207                           	psect	text218
 44208  009134                     __ptext218:
 44209                           	opt stack 0
 44210  009134                     __flash_copy_page_to_buffer:
 44211                           	opt stack 22
 44212                           
 44213                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 44214                           
 44215                           ;incstack = 0
 44216  009134  ECD7  F04F         	call	__flash_is_busy	;wreg free
 44217  009138  0900               	iorlw	0
 44218  00913A  A4D8               	btfss	status,2,c
 44219  00913C  D7FB               	goto	__flash_copy_page_to_buffer
 44220                           
 44221                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 44222  00913E  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 44223  009140  A4D8               	btfss	status,2,c
 44224  009142  D002               	goto	l1780
 44225                           
 44226                           ;flash.c: 163: command[0] = 0x53;
 44227  009144  0E53               	movlw	83
 44228  009146  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 44229  009148                     l1780:
 44230                           
 44231                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 44232  009148  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 44233  00914A  A4D8               	btfss	status,2,c
 44234  00914C  D002               	goto	l1781
 44235                           
 44236                           ;flash.c: 165: command[0] = 0x55;
 44237  00914E  0E55               	movlw	85
 44238  009150  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 44239  009152                     l1781:
 44240                           
 44241                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 44242  009152  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 44243  009156  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 44244  00915A  0E07               	movlw	7
 44245  00915C  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 44246  00915E                     u7775:
 44247  00915E  90D8               	bcf	status,0,c
 44248  009160  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 44249  009162  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 44250  009164  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 44251  009166  D7FB               	goto	u7775
 44252  009168  5017               	movf	??__flash_copy_page_to_buffer,w,c
 44253  00916A  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 44254                           
 44255                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 44256  00916C  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 44257  00916E  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 44258  009170  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 44259                           
 44260                           ;flash.c: 169: command[3] = 0x00;
 44261  009172  0E00               	movlw	0
 44262  009174  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 44263                           
 44264                           ;flash.c: 172: spi_tx(command, 4);
 44265  009176  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 44266  009178  6E01               	movwf	spi_tx@data,c
 44267  00917A  0E00               	movlw	high __flash_copy_page_to_buffer@command
 44268  00917C  6E02               	movwf	spi_tx@data+1,c
 44269  00917E  0E00               	movlw	0
 44270  009180  6E04               	movwf	spi_tx@length+1,c
 44271  009182  0E04               	movlw	4
 44272  009184  6E03               	movwf	spi_tx@length,c
 44273  009186  ECC6  F048         	call	_spi_tx	;wreg free
 44274  00918A  0012               	return		;funcret
 44275  00918C                     __end_of__flash_copy_page_to_buffer:
 44276                           	opt stack 0
 44277                           tosu	equ	0xFFF
 44278                           tosh	equ	0xFFE
 44279                           tosl	equ	0xFFD
 44280                           pclath	equ	0xFFA
 44281                           tblptru	equ	0xFF8
 44282                           tblptrh	equ	0xFF7
 44283                           tblptrl	equ	0xFF6
 44284                           tablat	equ	0xFF5
 44285                           prodh	equ	0xFF4
 44286                           prodl	equ	0xFF3
 44287                           intcon	equ	0xFF2
 44288                           intcon2	equ	0xFF1
 44289                           intcon3	equ	0xFF0
 44290                           indf0	equ	0xFEF
 44291                           postinc0	equ	0xFEE
 44292                           fsr0h	equ	0xFEA
 44293                           fsr0l	equ	0xFE9
 44294                           wreg	equ	0xFE8
 44295                           indf1	equ	0xFE7
 44296                           postdec1	equ	0xFE5
 44297                           plusw1	equ	0xFE3
 44298                           fsr1h	equ	0xFE2
 44299                           fsr1l	equ	0xFE1
 44300                           indf2	equ	0xFDF
 44301                           postinc2	equ	0xFDE
 44302                           postdec2	equ	0xFDD
 44303                           plusw2	equ	0xFDB
 44304                           fsr2h	equ	0xFDA
 44305                           fsr2l	equ	0xFD9
 44306                           status	equ	0xFD8
 44307                           
 44308 ;; *************** function __flash_compare_page_to_buffer *****************
 44309 ;; Defined at:
 44310 ;;		line 176 in file "flash.c"
 44311 ;; Parameters:    Size  Location     Type
 44312 ;;  page            2   19[COMRAM] unsigned int 
 44313 ;;  buffer          1   21[COMRAM] enum E6906
 44314 ;; Auto vars:     Size  Location     Type
 44315 ;;  command         4   27[COMRAM] unsigned char [4]
 44316 ;;  status          2   25[COMRAM] unsigned int 
 44317 ;; Return value:  Size  Location     Type
 44318 ;;                  1    wreg      enum E6910
 44319 ;; Registers used:
 44320 ;;		wreg, status,2, status,0, cstack
 44321 ;; Tracked objects:
 44322 ;;		On entry : 0/0
 44323 ;;		On exit  : 0/0
 44324 ;;		Unchanged: 0/0
 44325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44326 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44327 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44328 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44329 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44330 ;;Total ram usage:       12 bytes
 44331 ;; Hardware stack levels used:    1
 44332 ;; Hardware stack levels required when called:    3
 44333 ;; This function calls:
 44334 ;;		__flash_get_status
 44335 ;;		__flash_is_busy
 44336 ;;		_spi_tx
 44337 ;; This function is called by:
 44338 ;;		_flash_sector_write
 44339 ;;		_flash_partial_write
 44340 ;; This function uses a non-reentrant model
 44341 ;;
 44342                           
 44343                           	psect	text219
 44344  00885E                     __ptext219:
 44345                           	opt stack 0
 44346  00885E                     __flash_compare_page_to_buffer:
 44347                           	opt stack 23
 44348                           
 44349                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 44350                           
 44351                           ;incstack = 0
 44352  00885E  ECD7  F04F         	call	__flash_is_busy	;wreg free
 44353  008862  0900               	iorlw	0
 44354  008864  A4D8               	btfss	status,2,c
 44355  008866  D7FB               	goto	__flash_compare_page_to_buffer
 44356                           
 44357                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 44358  008868  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 44359  00886A  A4D8               	btfss	status,2,c
 44360  00886C  D002               	goto	l1788
 44361                           
 44362                           ;flash.c: 186: command[0] = 0x60;
 44363  00886E  0E60               	movlw	96
 44364  008870  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 44365  008872                     l1788:
 44366                           
 44367                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 44368  008872  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 44369  008874  A4D8               	btfss	status,2,c
 44370  008876  D002               	goto	l1789
 44371                           
 44372                           ;flash.c: 188: command[0] = 0x60;
 44373  008878  0E60               	movlw	96
 44374  00887A  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 44375  00887C                     l1789:
 44376                           
 44377                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 44378  00887C  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 44379  008880  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 44380  008884  0E07               	movlw	7
 44381  008886  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 44382  008888                     u7815:
 44383  008888  90D8               	bcf	status,0,c
 44384  00888A  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 44385  00888C  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 44386  00888E  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 44387  008890  D7FB               	goto	u7815
 44388  008892  5017               	movf	??__flash_compare_page_to_buffer,w,c
 44389  008894  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 44390                           
 44391                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 44392  008896  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 44393  008898  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 44394  00889A  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 44395                           
 44396                           ;flash.c: 192: command[3] = 0x00;
 44397  00889C  0E00               	movlw	0
 44398  00889E  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 44399                           
 44400                           ;flash.c: 195: spi_tx(command, 4);
 44401  0088A0  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 44402  0088A2  6E01               	movwf	spi_tx@data,c
 44403  0088A4  0E00               	movlw	high __flash_compare_page_to_buffer@command
 44404  0088A6  6E02               	movwf	spi_tx@data+1,c
 44405  0088A8  0E00               	movlw	0
 44406  0088AA  6E04               	movwf	spi_tx@length+1,c
 44407  0088AC  0E04               	movlw	4
 44408  0088AE  6E03               	movwf	spi_tx@length,c
 44409  0088B0  ECC6  F048         	call	_spi_tx	;wreg free
 44410  0088B4  ECD7  F04F         	call	__flash_is_busy	;wreg free
 44411  0088B8  0900               	iorlw	0
 44412  0088BA  A4D8               	btfss	status,2,c
 44413  0088BC  D7FB               	goto	l1791
 44414                           
 44415                           ;flash.c: 201: status = _flash_get_status();
 44416  0088BE  EC05  F04E         	call	__flash_get_status	;wreg free
 44417  0088C2  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 44418  0088C6  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 44419                           
 44420                           ;flash.c: 204: if(status & 0b0000000001000000)
 44421  0088CA  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 44422  0088CC  D002               	goto	l1793
 44423                           
 44424                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 44425  0088CE  0E01               	movlw	1
 44426                           
 44427                           ;flash.c: 208: }
 44428  0088D0  0012               	return	
 44429  0088D2                     l1793:
 44430                           
 44431                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 44432  0088D2  0E00               	movlw	0
 44433  0088D4  0012               	return	
 44434  0088D6                     __end_of__flash_compare_page_to_buffer:
 44435                           	opt stack 0
 44436                           tosu	equ	0xFFF
 44437                           tosh	equ	0xFFE
 44438                           tosl	equ	0xFFD
 44439                           pclath	equ	0xFFA
 44440                           tblptru	equ	0xFF8
 44441                           tblptrh	equ	0xFF7
 44442                           tblptrl	equ	0xFF6
 44443                           tablat	equ	0xFF5
 44444                           prodh	equ	0xFF4
 44445                           prodl	equ	0xFF3
 44446                           intcon	equ	0xFF2
 44447                           intcon2	equ	0xFF1
 44448                           intcon3	equ	0xFF0
 44449                           indf0	equ	0xFEF
 44450                           postinc0	equ	0xFEE
 44451                           fsr0h	equ	0xFEA
 44452                           fsr0l	equ	0xFE9
 44453                           wreg	equ	0xFE8
 44454                           indf1	equ	0xFE7
 44455                           postdec1	equ	0xFE5
 44456                           plusw1	equ	0xFE3
 44457                           fsr1h	equ	0xFE2
 44458                           fsr1l	equ	0xFE1
 44459                           indf2	equ	0xFDF
 44460                           postinc2	equ	0xFDE
 44461                           postdec2	equ	0xFDD
 44462                           plusw2	equ	0xFDB
 44463                           fsr2h	equ	0xFDA
 44464                           fsr2l	equ	0xFD9
 44465                           status	equ	0xFD8
 44466                           
 44467 ;; *************** function _fat_get_file_information *****************
 44468 ;; Defined at:
 44469 ;;		line 1391 in file "fat16.c"
 44470 ;; Parameters:    Size  Location     Type
 44471 ;;  file_number     1    wreg     unsigned char 
 44472 ;;  data            2   47[COMRAM] PTR struct .
 44473 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 44474 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), RAM(3759), 
 44475 ;; Auto vars:     Size  Location     Type
 44476 ;;  file_number     1   54[COMRAM] unsigned char 
 44477 ;;  offset          2   52[COMRAM] unsigned int 
 44478 ;;  root_sector     2   50[COMRAM] unsigned int 
 44479 ;; Return value:  Size  Location     Type
 44480 ;;                  1    wreg      unsigned char 
 44481 ;; Registers used:
 44482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44483 ;; Tracked objects:
 44484 ;;		On entry : 0/0
 44485 ;;		On exit  : 0/0
 44486 ;;		Unchanged: 0/0
 44487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44489 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44492 ;;Total ram usage:        8 bytes
 44493 ;; Hardware stack levels used:    1
 44494 ;; Hardware stack levels required when called:    5
 44495 ;; This function calls:
 44496 ;;		__offset_from_file_number
 44497 ;;		__sector_from_file_number
 44498 ;;		_flash_partial_read
 44499 ;; This function is called by:
 44500 ;;		_fat_rename_file
 44501 ;;		_fat_read_from_file
 44502 ;;		_fat_resize_file
 44503 ;;		_fat_modify_file
 44504 ;;		__bootloader_verify_file
 44505 ;;		__bootloader_program
 44506 ;;		__fill_buffer_get_file_details
 44507 ;; This function uses a non-reentrant model
 44508 ;;
 44509                           
 44510                           	psect	text220
 44511  0089C0                     __ptext220:
 44512                           	opt stack 0
 44513  0089C0                     _fat_get_file_information:
 44514                           	opt stack 23
 44515                           
 44516                           ;incstack = 0
 44517                           ;fat_get_file_information@file_number stored from wreg
 44518  0089C0  6E37               	movwf	fat_get_file_information@file_number,c
 44519                           
 44520                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 44521  0089C2  0E3F               	movlw	63
 44522  0089C4  6437               	cpfsgt	fat_get_file_information@file_number,c
 44523  0089C6  D002               	goto	l2314
 44524                           
 44525                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 44526  0089C8  0E01               	movlw	1
 44527  0089CA  0012               	return	
 44528  0089CC                     l2314:
 44529                           
 44530                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 44531  0089CC  5037               	movf	fat_get_file_information@file_number,w,c
 44532  0089CE  ECBB  F04E         	call	__sector_from_file_number
 44533  0089D2  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 44534  0089D6  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 44535                           
 44536                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 44537  0089DA  5037               	movf	fat_get_file_information@file_number,w,c
 44538  0089DC  EC47  F04F         	call	__offset_from_file_number
 44539  0089E0  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 44540  0089E4  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 44541                           
 44542                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 44543  0089E8  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 44544  0089EC  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 44545  0089F0  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 44546  0089F4  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 44547  0089F8  0E00               	movlw	0
 44548  0089FA  6E2D               	movwf	flash_partial_read@length+1,c
 44549  0089FC  0E20               	movlw	32
 44550  0089FE  6E2C               	movwf	flash_partial_read@length,c
 44551  008A00  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 44552  008A04  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 44553  008A08  ECEC  F04D         	call	_flash_partial_read	;wreg free
 44554                           
 44555                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 44556  008A0C  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 44557  008A10  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 44558  008A14  50DF               	movf	indf2,w,c
 44559  008A16  B4D8               	btfsc	status,2,c
 44560  008A18  D008               	goto	u9160
 44561  008A1A  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 44562  008A1E  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 44563  008A22  0EE5               	movlw	229
 44564  008A24  18DE               	xorwf	postinc2,w,c
 44565  008A26  A4D8               	btfss	status,2,c
 44566  008A28  D002               	goto	l2316
 44567  008A2A                     u9160:
 44568                           
 44569                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 44570  008A2A  0E02               	movlw	2
 44571  008A2C  0012               	return	
 44572  008A2E                     l2316:
 44573                           
 44574                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 44575  008A2E  0E00               	movlw	0
 44576  008A30  0012               	return	
 44577  008A32                     __end_of_fat_get_file_information:
 44578                           	opt stack 0
 44579                           tosu	equ	0xFFF
 44580                           tosh	equ	0xFFE
 44581                           tosl	equ	0xFFD
 44582                           pclath	equ	0xFFA
 44583                           tblptru	equ	0xFF8
 44584                           tblptrh	equ	0xFF7
 44585                           tblptrl	equ	0xFF6
 44586                           tablat	equ	0xFF5
 44587                           prodh	equ	0xFF4
 44588                           prodl	equ	0xFF3
 44589                           intcon	equ	0xFF2
 44590                           intcon2	equ	0xFF1
 44591                           intcon3	equ	0xFF0
 44592                           indf0	equ	0xFEF
 44593                           postinc0	equ	0xFEE
 44594                           fsr0h	equ	0xFEA
 44595                           fsr0l	equ	0xFE9
 44596                           wreg	equ	0xFE8
 44597                           indf1	equ	0xFE7
 44598                           postdec1	equ	0xFE5
 44599                           plusw1	equ	0xFE3
 44600                           fsr1h	equ	0xFE2
 44601                           fsr1l	equ	0xFE1
 44602                           indf2	equ	0xFDF
 44603                           postinc2	equ	0xFDE
 44604                           postdec2	equ	0xFDD
 44605                           plusw2	equ	0xFDB
 44606                           fsr2h	equ	0xFDA
 44607                           fsr2l	equ	0xFD9
 44608                           status	equ	0xFD8
 44609                           
 44610 ;; *************** function __find_nth_cluster *****************
 44611 ;; Defined at:
 44612 ;;		line 182 in file "fat16.c"
 44613 ;; Parameters:    Size  Location     Type
 44614 ;;  cluster         2   55[COMRAM] unsigned int 
 44615 ;;  n               2   57[COMRAM] unsigned int 
 44616 ;; Auto vars:     Size  Location     Type
 44617 ;;  sector          2   63[COMRAM] unsigned int 
 44618 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 44619 ;;  offset          2   59[COMRAM] unsigned int 
 44620 ;; Return value:  Size  Location     Type
 44621 ;;                  2   55[COMRAM] unsigned int 
 44622 ;; Registers used:
 44623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44624 ;; Tracked objects:
 44625 ;;		On entry : 0/0
 44626 ;;		On exit  : 0/0
 44627 ;;		Unchanged: 0/0
 44628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44630 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44632 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44633 ;;Total ram usage:       10 bytes
 44634 ;; Hardware stack levels used:    1
 44635 ;; Hardware stack levels required when called:    6
 44636 ;; This function calls:
 44637 ;;		__fat_offset_from_cluster
 44638 ;;		__fat_sector_from_cluster
 44639 ;;		__read_fat
 44640 ;;		__read_value_from_offset
 44641 ;;		_flash_sector_read
 44642 ;; This function is called by:
 44643 ;;		_fat_read_from_file_fast
 44644 ;;		_fat_modify_file
 44645 ;;		_fat_copy_sector_to_buffer
 44646 ;; This function uses a non-reentrant model
 44647 ;;
 44648                           
 44649                           	psect	text221
 44650  0081C4                     __ptext221:
 44651                           	opt stack 0
 44652  0081C4                     __find_nth_cluster:
 44653                           	opt stack 21
 44654                           
 44655                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 44656                           
 44657                           ;incstack = 0
 44658  0081C4  0E00               	movlw	0
 44659  0081C6  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 44660  0081C8  0E00               	movlw	0
 44661  0081CA  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 44662                           
 44663                           ;fat16.c: 189: if(n==1)
 44664  0081CC  043A               	decf	__find_nth_cluster@n,w,c
 44665  0081CE  103B               	iorwf	__find_nth_cluster@n+1,w,c
 44666  0081D0  A4D8               	btfss	status,2,c
 44667  0081D2  D03E               	goto	l2003
 44668                           
 44669                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 44670  0081D4  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 44671  0081D8  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 44672  0081DC  ECC9  F049         	call	__read_fat	;wreg free
 44673  0081E0  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 44674  0081E4  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 44675  0081E8  0012               	return	
 44676  0081EA                     
 44677                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 44678  0081EA  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 44679  0081EE  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 44680  0081F2  EC74  F050         	call	__fat_sector_from_cluster	;wreg free
 44681  0081F6  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 44682  0081FA  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 44683                           
 44684                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 44685  0081FE  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 44686  008202  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 44687  008206  EC80  F050         	call	__fat_offset_from_cluster	;wreg free
 44688  00820A  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 44689  00820E  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 44690                           
 44691                           ;fat16.c: 201: if(sector != sector_in_buffer)
 44692  008212  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 44693  008214  1840               	xorwf	__find_nth_cluster@sector,w,c
 44694  008216  E104               	bnz	u8830
 44695  008218  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 44696  00821A  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 44697  00821C  B4D8               	btfsc	status,2,c
 44698  00821E  D00A               	goto	l2005
 44699  008220                     u8830:
 44700                           
 44701                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 44702  008220  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 44703  008224  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 44704  008228  0EC0               	movlw	low _buffer
 44705  00822A  6E2A               	movwf	flash_sector_read@data,c
 44706  00822C  0E03               	movlw	high _buffer
 44707  00822E  6E2B               	movwf	flash_sector_read@data+1,c
 44708  008230  ECD3  F04D         	call	_flash_sector_read	;wreg free
 44709  008234                     l2005:
 44710                           
 44711                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 44712  008234  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 44713  008238  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 44714  00823C  0EC0               	movlw	low _buffer
 44715  00823E  6E03               	movwf	__read_value_from_offset@buffer,c
 44716  008240  0E03               	movlw	high _buffer
 44717  008242  6E04               	movwf	__read_value_from_offset@buffer+1,c
 44718  008244  ECA4  F04B         	call	__read_value_from_offset	;wreg free
 44719  008248  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 44720  00824C  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 44721  008250                     l2003:
 44722  008250  503A               	movf	__find_nth_cluster@n,w,c
 44723  008252  103B               	iorwf	__find_nth_cluster@n+1,w,c
 44724  008254  A4D8               	btfss	status,2,c
 44725  008256  D7C9               	goto	l2004
 44726                           
 44727                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 44728  008258  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 44729  00825C  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 44730  008260  0012               	return		;funcret
 44731  008262                     __end_of__find_nth_cluster:
 44732                           	opt stack 0
 44733                           tosu	equ	0xFFF
 44734                           tosh	equ	0xFFE
 44735                           tosl	equ	0xFFD
 44736                           pclath	equ	0xFFA
 44737                           tblptru	equ	0xFF8
 44738                           tblptrh	equ	0xFF7
 44739                           tblptrl	equ	0xFF6
 44740                           tablat	equ	0xFF5
 44741                           prodh	equ	0xFF4
 44742                           prodl	equ	0xFF3
 44743                           intcon	equ	0xFF2
 44744                           intcon2	equ	0xFF1
 44745                           intcon3	equ	0xFF0
 44746                           indf0	equ	0xFEF
 44747                           postinc0	equ	0xFEE
 44748                           fsr0h	equ	0xFEA
 44749                           fsr0l	equ	0xFE9
 44750                           wreg	equ	0xFE8
 44751                           indf1	equ	0xFE7
 44752                           postdec1	equ	0xFE5
 44753                           plusw1	equ	0xFE3
 44754                           fsr1h	equ	0xFE2
 44755                           fsr1l	equ	0xFE1
 44756                           indf2	equ	0xFDF
 44757                           postinc2	equ	0xFDE
 44758                           postdec2	equ	0xFDD
 44759                           plusw2	equ	0xFDB
 44760                           fsr2h	equ	0xFDA
 44761                           fsr2l	equ	0xFD9
 44762                           status	equ	0xFD8
 44763                           
 44764 ;; *************** function _flash_sector_read *****************
 44765 ;; Defined at:
 44766 ;;		line 443 in file "flash.c"
 44767 ;; Parameters:    Size  Location     Type
 44768 ;;  page            2   39[COMRAM] unsigned int 
 44769 ;;  data            2   41[COMRAM] PTR unsigned char 
 44770 ;;		 -> buffer(512), msd_buffer(512), 
 44771 ;; Auto vars:     Size  Location     Type
 44772 ;;		None
 44773 ;; Return value:  Size  Location     Type
 44774 ;;                  1    wreg      void 
 44775 ;; Registers used:
 44776 ;;		wreg, status,2, status,0, cstack
 44777 ;; Tracked objects:
 44778 ;;		On entry : 0/0
 44779 ;;		On exit  : 0/0
 44780 ;;		Unchanged: 0/0
 44781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44786 ;;Total ram usage:        4 bytes
 44787 ;; Hardware stack levels used:    1
 44788 ;; Hardware stack levels required when called:    4
 44789 ;; This function calls:
 44790 ;;		__flash_partial_read
 44791 ;;		_spi_set_configuration
 44792 ;; This function is called by:
 44793 ;;		_ExternalFlash_SectorRead
 44794 ;;		__get_available_cluster
 44795 ;;		__find_nth_cluster
 44796 ;;		__make_cluster_chain
 44797 ;;		_fat_find_file
 44798 ;;		_fat_get_format_status
 44799 ;; This function uses a non-reentrant model
 44800 ;;
 44801                           
 44802                           	psect	text222
 44803  009BA6                     __ptext222:
 44804                           	opt stack 0
 44805  009BA6                     _flash_sector_read:
 44806                           	opt stack 23
 44807                           
 44808                           ;flash.c: 446: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 44809                           
 44810                           ;incstack = 0
 44811  009BA6  0E00               	movlw	0
 44812  009BA8  ECEF  F02A         	call	_spi_set_configuration
 44813                           
 44814                           ;flash.c: 449: _flash_partial_read(page, 0, 512, data);
 44815  009BAC  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 44816  009BB0  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 44817  009BB4  0E00               	movlw	0
 44818  009BB6  6E17               	movwf	__flash_partial_read@start+1,c
 44819  009BB8  0E00               	movlw	0
 44820  009BBA  6E16               	movwf	__flash_partial_read@start,c
 44821  009BBC  0E02               	movlw	2
 44822  009BBE  6E19               	movwf	__flash_partial_read@length+1,c
 44823  009BC0  0E00               	movlw	0
 44824  009BC2  6E18               	movwf	__flash_partial_read@length,c
 44825  009BC4  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 44826  009BC8  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 44827  009BCC  EC6B  F044         	call	__flash_partial_read	;wreg free
 44828                           
 44829                           ;flash.c: 452: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 44830  009BD0  0E01               	movlw	1
 44831  009BD2  ECEF  F02A         	call	_spi_set_configuration
 44832  009BD6  0012               	return		;funcret
 44833  009BD8                     __end_of_flash_sector_read:
 44834                           	opt stack 0
 44835                           tosu	equ	0xFFF
 44836                           tosh	equ	0xFFE
 44837                           tosl	equ	0xFFD
 44838                           pclath	equ	0xFFA
 44839                           tblptru	equ	0xFF8
 44840                           tblptrh	equ	0xFF7
 44841                           tblptrl	equ	0xFF6
 44842                           tablat	equ	0xFF5
 44843                           prodh	equ	0xFF4
 44844                           prodl	equ	0xFF3
 44845                           intcon	equ	0xFF2
 44846                           intcon2	equ	0xFF1
 44847                           intcon3	equ	0xFF0
 44848                           indf0	equ	0xFEF
 44849                           postinc0	equ	0xFEE
 44850                           fsr0h	equ	0xFEA
 44851                           fsr0l	equ	0xFE9
 44852                           wreg	equ	0xFE8
 44853                           indf1	equ	0xFE7
 44854                           postdec1	equ	0xFE5
 44855                           plusw1	equ	0xFE3
 44856                           fsr1h	equ	0xFE2
 44857                           fsr1l	equ	0xFE1
 44858                           indf2	equ	0xFDF
 44859                           postinc2	equ	0xFDE
 44860                           postdec2	equ	0xFDD
 44861                           plusw2	equ	0xFDB
 44862                           fsr2h	equ	0xFDA
 44863                           fsr2l	equ	0xFD9
 44864                           status	equ	0xFD8
 44865                           
 44866 ;; *************** function __read_value_from_offset *****************
 44867 ;; Defined at:
 44868 ;;		line 114 in file "fat16.c"
 44869 ;; Parameters:    Size  Location     Type
 44870 ;;  offset          2    0[COMRAM] unsigned int 
 44871 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 44872 ;;		 -> buffer(512), 
 44873 ;; Auto vars:     Size  Location     Type
 44874 ;;  value           2    7[COMRAM] unsigned int 
 44875 ;; Return value:  Size  Location     Type
 44876 ;;                  2    0[COMRAM] unsigned int 
 44877 ;; Registers used:
 44878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44879 ;; Tracked objects:
 44880 ;;		On entry : 0/0
 44881 ;;		On exit  : 0/0
 44882 ;;		Unchanged: 0/0
 44883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44886 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44887 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44888 ;;Total ram usage:        9 bytes
 44889 ;; Hardware stack levels used:    1
 44890 ;; This function calls:
 44891 ;;		Nothing
 44892 ;; This function is called by:
 44893 ;;		__find_nth_cluster
 44894 ;;		__make_cluster_chain
 44895 ;; This function uses a non-reentrant model
 44896 ;;
 44897                           
 44898                           	psect	text223
 44899  009748                     __ptext223:
 44900                           	opt stack 0
 44901  009748                     __read_value_from_offset:
 44902                           	opt stack 26
 44903                           
 44904                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 44905                           
 44906                           ;incstack = 0
 44907  009748  0E01               	movlw	1
 44908  00974A  2401               	addwf	__read_value_from_offset@offset,w,c
 44909  00974C  6E05               	movwf	??__read_value_from_offset& (0+255),c
 44910  00974E  0E00               	movlw	0
 44911  009750  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 44912  009752  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 44913  009754  5005               	movf	??__read_value_from_offset,w,c
 44914  009756  2403               	addwf	__read_value_from_offset@buffer,w,c
 44915  009758  6ED9               	movwf	fsr2l,c
 44916  00975A  5006               	movf	??__read_value_from_offset+1,w,c
 44917  00975C  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 44918  00975E  6EDA               	movwf	fsr2h,c
 44919  009760  50DF               	movf	indf2,w,c
 44920  009762  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 44921  009764  5007               	movf	??__read_value_from_offset+2,w,c
 44922  009766  6E08               	movwf	__read_value_from_offset@value,c
 44923  009768  6A09               	clrf	__read_value_from_offset@value+1,c
 44924                           
 44925                           ;fat16.c: 118: value <<= 8;
 44926  00976A  5008               	movf	__read_value_from_offset@value,w,c
 44927  00976C  6E09               	movwf	__read_value_from_offset@value+1,c
 44928  00976E  6A08               	clrf	__read_value_from_offset@value,c
 44929                           
 44930                           ;fat16.c: 119: value |= buffer[offset];
 44931  009770  5001               	movf	__read_value_from_offset@offset,w,c
 44932  009772  2403               	addwf	__read_value_from_offset@buffer,w,c
 44933  009774  6ED9               	movwf	fsr2l,c
 44934  009776  5002               	movf	__read_value_from_offset@offset+1,w,c
 44935  009778  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 44936  00977A  6EDA               	movwf	fsr2h,c
 44937  00977C  50DF               	movf	indf2,w,c
 44938  00977E  6E05               	movwf	??__read_value_from_offset& (0+255),c
 44939  009780  5005               	movf	??__read_value_from_offset,w,c
 44940  009782  1208               	iorwf	__read_value_from_offset@value,f,c
 44941                           
 44942                           ;fat16.c: 120: return value;
 44943  009784  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 44944  009788  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 44945  00978C  0012               	return	
 44946  00978E                     __end_of__read_value_from_offset:
 44947                           	opt stack 0
 44948                           tosu	equ	0xFFF
 44949                           tosh	equ	0xFFE
 44950                           tosl	equ	0xFFD
 44951                           pclath	equ	0xFFA
 44952                           tblptru	equ	0xFF8
 44953                           tblptrh	equ	0xFF7
 44954                           tblptrl	equ	0xFF6
 44955                           tablat	equ	0xFF5
 44956                           prodh	equ	0xFF4
 44957                           prodl	equ	0xFF3
 44958                           intcon	equ	0xFF2
 44959                           intcon2	equ	0xFF1
 44960                           intcon3	equ	0xFF0
 44961                           indf0	equ	0xFEF
 44962                           postinc0	equ	0xFEE
 44963                           fsr0h	equ	0xFEA
 44964                           fsr0l	equ	0xFE9
 44965                           wreg	equ	0xFE8
 44966                           indf1	equ	0xFE7
 44967                           postdec1	equ	0xFE5
 44968                           plusw1	equ	0xFE3
 44969                           fsr1h	equ	0xFE2
 44970                           fsr1l	equ	0xFE1
 44971                           indf2	equ	0xFDF
 44972                           postinc2	equ	0xFDE
 44973                           postdec2	equ	0xFDD
 44974                           plusw2	equ	0xFDB
 44975                           fsr2h	equ	0xFDA
 44976                           fsr2l	equ	0xFD9
 44977                           status	equ	0xFD8
 44978                           
 44979 ;; *************** function __read_fat *****************
 44980 ;; Defined at:
 44981 ;;		line 456 in file "fat16.c"
 44982 ;; Parameters:    Size  Location     Type
 44983 ;;  cluster         2   47[COMRAM] unsigned int 
 44984 ;; Auto vars:     Size  Location     Type
 44985 ;;  value           2   53[COMRAM] unsigned int 
 44986 ;;  offset          2   51[COMRAM] unsigned int 
 44987 ;;  sector          2   49[COMRAM] unsigned int 
 44988 ;; Return value:  Size  Location     Type
 44989 ;;                  2   47[COMRAM] unsigned int 
 44990 ;; Registers used:
 44991 ;;		wreg, status,2, status,0, cstack
 44992 ;; Tracked objects:
 44993 ;;		On entry : 0/0
 44994 ;;		On exit  : 0/0
 44995 ;;		Unchanged: 0/0
 44996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44998 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45000 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45001 ;;Total ram usage:        8 bytes
 45002 ;; Hardware stack levels used:    1
 45003 ;; Hardware stack levels required when called:    5
 45004 ;; This function calls:
 45005 ;;		__fat_offset_from_cluster
 45006 ;;		__fat_sector_from_cluster
 45007 ;;		_flash_partial_read
 45008 ;; This function is called by:
 45009 ;;		__find_nth_cluster
 45010 ;;		_fat_read_from_file_fast
 45011 ;;		_fat_modify_file
 45012 ;; This function uses a non-reentrant model
 45013 ;;
 45014                           
 45015                           	psect	text224
 45016  009392                     __ptext224:
 45017                           	opt stack 0
 45018  009392                     __read_fat:
 45019                           	opt stack 22
 45020                           
 45021                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 45022                           
 45023                           ;incstack = 0
 45024  009392  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 45025  009396  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 45026  00939A  EC74  F050         	call	__fat_sector_from_cluster	;wreg free
 45027  00939E  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 45028  0093A2  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 45029                           
 45030                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 45031  0093A6  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 45032  0093AA  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 45033  0093AE  EC80  F050         	call	__fat_offset_from_cluster	;wreg free
 45034  0093B2  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 45035  0093B6  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 45036                           
 45037                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 45038  0093BA  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 45039  0093BE  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 45040  0093C2  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 45041  0093C6  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 45042  0093CA  0E00               	movlw	0
 45043  0093CC  6E2D               	movwf	flash_partial_read@length+1,c
 45044  0093CE  0E02               	movlw	2
 45045  0093D0  6E2C               	movwf	flash_partial_read@length,c
 45046  0093D2  0E36               	movlw	low __read_fat@value
 45047  0093D4  6E2E               	movwf	flash_partial_read@data,c
 45048  0093D6  0E00               	movlw	high __read_fat@value
 45049  0093D8  6E2F               	movwf	flash_partial_read@data+1,c
 45050  0093DA  ECEC  F04D         	call	_flash_partial_read	;wreg free
 45051                           
 45052                           ;fat16.c: 470: return value;
 45053  0093DE  C036  F030         	movff	__read_fat@value,?__read_fat
 45054  0093E2  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 45055  0093E6  0012               	return	
 45056  0093E8                     __end_of__read_fat:
 45057                           	opt stack 0
 45058                           tosu	equ	0xFFF
 45059                           tosh	equ	0xFFE
 45060                           tosl	equ	0xFFD
 45061                           pclath	equ	0xFFA
 45062                           tblptru	equ	0xFF8
 45063                           tblptrh	equ	0xFF7
 45064                           tblptrl	equ	0xFF6
 45065                           tablat	equ	0xFF5
 45066                           prodh	equ	0xFF4
 45067                           prodl	equ	0xFF3
 45068                           intcon	equ	0xFF2
 45069                           intcon2	equ	0xFF1
 45070                           intcon3	equ	0xFF0
 45071                           indf0	equ	0xFEF
 45072                           postinc0	equ	0xFEE
 45073                           fsr0h	equ	0xFEA
 45074                           fsr0l	equ	0xFE9
 45075                           wreg	equ	0xFE8
 45076                           indf1	equ	0xFE7
 45077                           postdec1	equ	0xFE5
 45078                           plusw1	equ	0xFE3
 45079                           fsr1h	equ	0xFE2
 45080                           fsr1l	equ	0xFE1
 45081                           indf2	equ	0xFDF
 45082                           postinc2	equ	0xFDE
 45083                           postdec2	equ	0xFDD
 45084                           plusw2	equ	0xFDB
 45085                           fsr2h	equ	0xFDA
 45086                           fsr2l	equ	0xFD9
 45087                           status	equ	0xFD8
 45088                           
 45089 ;; *************** function __fat_sector_from_cluster *****************
 45090 ;; Defined at:
 45091 ;;		line 75 in file "fat16.c"
 45092 ;; Parameters:    Size  Location     Type
 45093 ;;  cluster         2    0[COMRAM] unsigned int 
 45094 ;; Auto vars:     Size  Location     Type
 45095 ;;		None
 45096 ;; Return value:  Size  Location     Type
 45097 ;;                  2    0[COMRAM] unsigned int 
 45098 ;; Registers used:
 45099 ;;		wreg, status,2, status,0
 45100 ;; Tracked objects:
 45101 ;;		On entry : 0/0
 45102 ;;		On exit  : 0/0
 45103 ;;		Unchanged: 0/0
 45104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45109 ;;Total ram usage:        2 bytes
 45110 ;; Hardware stack levels used:    1
 45111 ;; This function calls:
 45112 ;;		Nothing
 45113 ;; This function is called by:
 45114 ;;		__find_nth_cluster
 45115 ;;		__make_cluster_chain
 45116 ;;		__read_fat
 45117 ;; This function uses a non-reentrant model
 45118 ;;
 45119                           
 45120                           	psect	text225
 45121  00A0E8                     __ptext225:
 45122                           	opt stack 0
 45123  00A0E8                     __fat_sector_from_cluster:
 45124                           	opt stack 26
 45125                           
 45126                           ;fat16.c: 77: cluster >>= 8;
 45127                           
 45128                           ;incstack = 0
 45129  00A0E8  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 45130  00A0EA  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 45131  00A0EC  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 45132                           
 45133                           ;fat16.c: 78: cluster += 2;
 45134  00A0EE  0E02               	movlw	2
 45135  00A0F0  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 45136  00A0F2  0E00               	movlw	0
 45137  00A0F4  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 45138                           
 45139                           ;fat16.c: 79: return cluster;
 45140  00A0F6  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 45141  00A0FA  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 45142  00A0FE  0012               	return	
 45143  00A100                     __end_of__fat_sector_from_cluster:
 45144                           	opt stack 0
 45145                           tosu	equ	0xFFF
 45146                           tosh	equ	0xFFE
 45147                           tosl	equ	0xFFD
 45148                           pclath	equ	0xFFA
 45149                           tblptru	equ	0xFF8
 45150                           tblptrh	equ	0xFF7
 45151                           tblptrl	equ	0xFF6
 45152                           tablat	equ	0xFF5
 45153                           prodh	equ	0xFF4
 45154                           prodl	equ	0xFF3
 45155                           intcon	equ	0xFF2
 45156                           intcon2	equ	0xFF1
 45157                           intcon3	equ	0xFF0
 45158                           indf0	equ	0xFEF
 45159                           postinc0	equ	0xFEE
 45160                           fsr0h	equ	0xFEA
 45161                           fsr0l	equ	0xFE9
 45162                           wreg	equ	0xFE8
 45163                           indf1	equ	0xFE7
 45164                           postdec1	equ	0xFE5
 45165                           plusw1	equ	0xFE3
 45166                           fsr1h	equ	0xFE2
 45167                           fsr1l	equ	0xFE1
 45168                           indf2	equ	0xFDF
 45169                           postinc2	equ	0xFDE
 45170                           postdec2	equ	0xFDD
 45171                           plusw2	equ	0xFDB
 45172                           fsr2h	equ	0xFDA
 45173                           fsr2l	equ	0xFD9
 45174                           status	equ	0xFD8
 45175                           
 45176 ;; *************** function __fat_offset_from_cluster *****************
 45177 ;; Defined at:
 45178 ;;		line 82 in file "fat16.c"
 45179 ;; Parameters:    Size  Location     Type
 45180 ;;  cluster         2    0[COMRAM] unsigned int 
 45181 ;; Auto vars:     Size  Location     Type
 45182 ;;		None
 45183 ;; Return value:  Size  Location     Type
 45184 ;;                  2    0[COMRAM] unsigned int 
 45185 ;; Registers used:
 45186 ;;		wreg, status,2, status,0
 45187 ;; Tracked objects:
 45188 ;;		On entry : 0/0
 45189 ;;		On exit  : 0/0
 45190 ;;		Unchanged: 0/0
 45191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45196 ;;Total ram usage:        2 bytes
 45197 ;; Hardware stack levels used:    1
 45198 ;; This function calls:
 45199 ;;		Nothing
 45200 ;; This function is called by:
 45201 ;;		__find_nth_cluster
 45202 ;;		__make_cluster_chain
 45203 ;;		__read_fat
 45204 ;; This function uses a non-reentrant model
 45205 ;;
 45206                           
 45207                           	psect	text226
 45208  00A100                     __ptext226:
 45209                           	opt stack 0
 45210  00A100                     __fat_offset_from_cluster:
 45211                           	opt stack 26
 45212                           
 45213                           ;fat16.c: 84: cluster &= 0xFF;
 45214                           
 45215                           ;incstack = 0
 45216  00A100  0EFF               	movlw	255
 45217  00A102  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 45218  00A104  0E00               	movlw	0
 45219  00A106  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 45220                           
 45221                           ;fat16.c: 85: cluster <<= 1;
 45222  00A108  90D8               	bcf	status,0,c
 45223  00A10A  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 45224  00A10C  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 45225                           
 45226                           ;fat16.c: 86: return cluster;
 45227  00A10E  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 45228  00A112  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 45229  00A116  0012               	return	
 45230  00A118                     __end_of__fat_offset_from_cluster:
 45231                           	opt stack 0
 45232                           tosu	equ	0xFFF
 45233                           tosh	equ	0xFFE
 45234                           tosl	equ	0xFFD
 45235                           pclath	equ	0xFFA
 45236                           tblptru	equ	0xFF8
 45237                           tblptrh	equ	0xFF7
 45238                           tblptrl	equ	0xFF6
 45239                           tablat	equ	0xFF5
 45240                           prodh	equ	0xFF4
 45241                           prodl	equ	0xFF3
 45242                           intcon	equ	0xFF2
 45243                           intcon2	equ	0xFF1
 45244                           intcon3	equ	0xFF0
 45245                           indf0	equ	0xFEF
 45246                           postinc0	equ	0xFEE
 45247                           fsr0h	equ	0xFEA
 45248                           fsr0l	equ	0xFE9
 45249                           wreg	equ	0xFE8
 45250                           indf1	equ	0xFE7
 45251                           postdec1	equ	0xFE5
 45252                           plusw1	equ	0xFE3
 45253                           fsr1h	equ	0xFE2
 45254                           fsr1l	equ	0xFE1
 45255                           indf2	equ	0xFDF
 45256                           postinc2	equ	0xFDE
 45257                           postdec2	equ	0xFDD
 45258                           plusw2	equ	0xFDB
 45259                           fsr2h	equ	0xFDA
 45260                           fsr2l	equ	0xFD9
 45261                           status	equ	0xFD8
 45262                           
 45263 ;; *************** function __data_sector_from_cluster *****************
 45264 ;; Defined at:
 45265 ;;		line 70 in file "fat16.c"
 45266 ;; Parameters:    Size  Location     Type
 45267 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 45268 ;; Auto vars:     Size  Location     Type
 45269 ;;		None
 45270 ;; Return value:  Size  Location     Type
 45271 ;;                  2    0[COMRAM] unsigned int 
 45272 ;; Registers used:
 45273 ;;		wreg, status,2, status,0
 45274 ;; Tracked objects:
 45275 ;;		On entry : 0/0
 45276 ;;		On exit  : 0/0
 45277 ;;		Unchanged: 0/0
 45278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45283 ;;Total ram usage:        2 bytes
 45284 ;; Hardware stack levels used:    1
 45285 ;; This function calls:
 45286 ;;		Nothing
 45287 ;; This function is called by:
 45288 ;;		_fat_read_from_file_fast
 45289 ;;		_fat_modify_file
 45290 ;;		_fat_copy_sector_to_buffer
 45291 ;; This function uses a non-reentrant model
 45292 ;;
 45293                           
 45294                           	psect	text227
 45295  00A1F4                     __ptext227:
 45296                           	opt stack 0
 45297  00A1F4                     __data_sector_from_cluster:
 45298                           	opt stack 27
 45299                           
 45300                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 45301                           
 45302                           ;incstack = 0
 45303  00A1F4  0E24               	movlw	36
 45304  00A1F6  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 45305  00A1F8  6E01               	movwf	?__data_sector_from_cluster,c
 45306  00A1FA  0E00               	movlw	0
 45307  00A1FC  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 45308  00A1FE  6E02               	movwf	?__data_sector_from_cluster+1,c
 45309  00A200  0012               	return	
 45310  00A202                     __end_of__data_sector_from_cluster:
 45311                           	opt stack 0
 45312                           tosu	equ	0xFFF
 45313                           tosh	equ	0xFFE
 45314                           tosl	equ	0xFFD
 45315                           pclath	equ	0xFFA
 45316                           tblptru	equ	0xFF8
 45317                           tblptrh	equ	0xFF7
 45318                           tblptrl	equ	0xFF6
 45319                           tablat	equ	0xFF5
 45320                           prodh	equ	0xFF4
 45321                           prodl	equ	0xFF3
 45322                           intcon	equ	0xFF2
 45323                           intcon2	equ	0xFF1
 45324                           intcon3	equ	0xFF0
 45325                           indf0	equ	0xFEF
 45326                           postinc0	equ	0xFEE
 45327                           fsr0h	equ	0xFEA
 45328                           fsr0l	equ	0xFE9
 45329                           wreg	equ	0xFE8
 45330                           indf1	equ	0xFE7
 45331                           postdec1	equ	0xFE5
 45332                           plusw1	equ	0xFE3
 45333                           fsr1h	equ	0xFE2
 45334                           fsr1l	equ	0xFE1
 45335                           indf2	equ	0xFDF
 45336                           postinc2	equ	0xFDE
 45337                           postdec2	equ	0xFDD
 45338                           plusw2	equ	0xFDB
 45339                           fsr2h	equ	0xFDA
 45340                           fsr2l	equ	0xFD9
 45341                           status	equ	0xFD8
 45342                           
 45343 ;; *************** function __parse_buffer_to_sector *****************
 45344 ;; Defined at:
 45345 ;;		line 904 in file "api.c"
 45346 ;; Parameters:    Size  Location     Type
 45347 ;;  data            2   81[COMRAM] PTR unsigned char 
 45348 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 45349 ;;  out_buffer      2   83[COMRAM] PTR unsigned char 
 45350 ;;		 -> _spi_external_tx_buffer(64), ToSendDataBuffer(64), 
 45351 ;;  out_idx_ptr     2   85[COMRAM] PTR unsigned char 
 45352 ;;		 -> api_parse@out_idx(1), 
 45353 ;; Auto vars:     Size  Location     Type
 45354 ;;  sector          2   90[COMRAM] unsigned int 
 45355 ;;  file_number     1   89[COMRAM] unsigned char 
 45356 ;;  return_value    1   88[COMRAM] unsigned char 
 45357 ;; Return value:  Size  Location     Type
 45358 ;;                  1    wreg      unsigned char 
 45359 ;; Registers used:
 45360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45361 ;; Tracked objects:
 45362 ;;		On entry : 0/0
 45363 ;;		On exit  : 0/0
 45364 ;;		Unchanged: 0/0
 45365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45366 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45369 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45370 ;;Total ram usage:       11 bytes
 45371 ;; Hardware stack levels used:    1
 45372 ;; Hardware stack levels required when called:    8
 45373 ;; This function calls:
 45374 ;;		_fat_write_sector_from_buffer
 45375 ;; This function is called by:
 45376 ;;		__parse_command_long
 45377 ;; This function uses a non-reentrant model
 45378 ;;
 45379                           
 45380                           	psect	text228
 45381  0046DE                     __ptext228:
 45382                           	opt stack 0
 45383  0046DE                     __parse_buffer_to_sector:
 45384                           	opt stack 20
 45385                           
 45386                           ;api.c: 907: uint8_t file_number;;api.c: 908: uint16_t sector;;api.c: 909: uint8_t retur
      +                          n_value;;api.c: 911: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (data[4]!=0x6A) || (data[
      +                          5]!=0x6D))
 45387                           
 45388                           ;incstack = 0
 45389  0046DE  C052  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 45390  0046E2  C053  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 45391  0046E6  0E58               	movlw	88
 45392  0046E8  18DE               	xorwf	postinc2,w,c
 45393  0046EA  A4D8               	btfss	status,2,c
 45394  0046EC  D014               	goto	u12090
 45395  0046EE  EE20 F004          	lfsr	2,4
 45396  0046F2  5052               	movf	__parse_buffer_to_sector@data,w,c
 45397  0046F4  26D9               	addwf	fsr2l,f,c
 45398  0046F6  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45399  0046F8  22DA               	addwfc	fsr2h,f,c
 45400  0046FA  0E6A               	movlw	106
 45401  0046FC  18DE               	xorwf	postinc2,w,c
 45402  0046FE  A4D8               	btfss	status,2,c
 45403  004700  D00A               	goto	u12090
 45404  004702  EE20 F005          	lfsr	2,5
 45405  004706  5052               	movf	__parse_buffer_to_sector@data,w,c
 45406  004708  26D9               	addwf	fsr2l,f,c
 45407  00470A  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45408  00470C  22DA               	addwfc	fsr2h,f,c
 45409  00470E  0E6D               	movlw	109
 45410  004710  18DE               	xorwf	postinc2,w,c
 45411  004712  B4D8               	btfsc	status,2,c
 45412  004714  D002               	goto	l2923
 45413  004716                     u12090:
 45414                           
 45415                           ;api.c: 912: {;api.c: 913: return 6;
 45416  004716  0E06               	movlw	6
 45417  004718  0012               	return	
 45418  00471A                     l2923:
 45419                           
 45420                           ;api.c: 914: };api.c: 917: file_number = data[1];
 45421  00471A  EE20 F001          	lfsr	2,1
 45422  00471E  5052               	movf	__parse_buffer_to_sector@data,w,c
 45423  004720  26D9               	addwf	fsr2l,f,c
 45424  004722  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45425  004724  22DA               	addwfc	fsr2h,f,c
 45426  004726  50DF               	movf	indf2,w,c
 45427  004728  6E5A               	movwf	__parse_buffer_to_sector@file_number,c
 45428                           
 45429                           ;api.c: 920: sector = data[2];
 45430  00472A  EE20 F002          	lfsr	2,2
 45431  00472E  5052               	movf	__parse_buffer_to_sector@data,w,c
 45432  004730  26D9               	addwf	fsr2l,f,c
 45433  004732  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45434  004734  22DA               	addwfc	fsr2h,f,c
 45435  004736  50DF               	movf	indf2,w,c
 45436  004738  6E58               	movwf	??__parse_buffer_to_sector& (0+255),c
 45437  00473A  5058               	movf	??__parse_buffer_to_sector,w,c
 45438  00473C  6E5B               	movwf	__parse_buffer_to_sector@sector,c
 45439  00473E  6A5C               	clrf	__parse_buffer_to_sector@sector+1,c
 45440                           
 45441                           ;api.c: 921: sector <<= 8;
 45442  004740  505B               	movf	__parse_buffer_to_sector@sector,w,c
 45443  004742  6E5C               	movwf	__parse_buffer_to_sector@sector+1,c
 45444  004744  6A5B               	clrf	__parse_buffer_to_sector@sector,c
 45445                           
 45446                           ;api.c: 922: sector |= data[3];
 45447  004746  EE20 F003          	lfsr	2,3
 45448  00474A  5052               	movf	__parse_buffer_to_sector@data,w,c
 45449  00474C  26D9               	addwf	fsr2l,f,c
 45450  00474E  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 45451  004750  22DA               	addwfc	fsr2h,f,c
 45452  004752  50DF               	movf	indf2,w,c
 45453  004754  6E58               	movwf	??__parse_buffer_to_sector& (0+255),c
 45454  004756  5058               	movf	??__parse_buffer_to_sector,w,c
 45455  004758  125B               	iorwf	__parse_buffer_to_sector@sector,f,c
 45456                           
 45457                           ;api.c: 925: return_value = fat_write_sector_from_buffer(file_number, sector);
 45458  00475A  C05B  F043         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 45459  00475E  C05C  F044         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 45460  004762  505A               	movf	__parse_buffer_to_sector@file_number,w,c
 45461  004764  ECB4  F043         	call	_fat_write_sector_from_buffer
 45462  004768  6E59               	movwf	__parse_buffer_to_sector@return_value,c
 45463                           
 45464                           ;api.c: 928: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<60))
 45465  00476A  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45466  00476E  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45467  004772  50DF               	movf	indf2,w,c
 45468  004774  B4D8               	btfsc	status,2,c
 45469  004776  D061               	goto	l2927
 45470  004778  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45471  00477C  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45472  004780  0E3C               	movlw	60
 45473  004782  60DF               	cpfslt	indf2,c
 45474  004784  D05A               	goto	l2927
 45475                           
 45476                           ;api.c: 929: {;api.c: 930: out_buffer[(*out_idx_ptr)++] = COMMAND_BUFFER_TO_SECTOR;
 45477  004786  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45478  00478A  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45479  00478E  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45480  004792  0E01               	movlw	1
 45481  004794  26DF               	addwf	indf2,f,c
 45482  004796  5058               	movf	??__parse_buffer_to_sector,w,c
 45483  004798  0D01               	mullw	1
 45484  00479A  50F3               	movf	prodl,w,c
 45485  00479C  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45486  00479E  6ED9               	movwf	fsr2l,c
 45487  0047A0  50F4               	movf	prodh,w,c
 45488  0047A2  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45489  0047A4  6EDA               	movwf	fsr2h,c
 45490  0047A6  0E58               	movlw	88
 45491  0047A8  6EDF               	movwf	indf2,c
 45492                           
 45493                           ;api.c: 931: out_buffer[(*out_idx_ptr)++] = file_number;
 45494  0047AA  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45495  0047AE  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45496  0047B2  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45497  0047B6  0E01               	movlw	1
 45498  0047B8  26DF               	addwf	indf2,f,c
 45499  0047BA  5058               	movf	??__parse_buffer_to_sector,w,c
 45500  0047BC  0D01               	mullw	1
 45501  0047BE  50F3               	movf	prodl,w,c
 45502  0047C0  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45503  0047C2  6ED9               	movwf	fsr2l,c
 45504  0047C4  50F4               	movf	prodh,w,c
 45505  0047C6  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45506  0047C8  6EDA               	movwf	fsr2h,c
 45507  0047CA  C05A  FFDF         	movff	__parse_buffer_to_sector@file_number,indf2
 45508                           
 45509                           ;api.c: 932: out_buffer[(*out_idx_ptr)++] = ((unsigned char)(((sector)>>8)&0xFF));
 45510  0047CE  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45511  0047D2  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45512  0047D6  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45513  0047DA  0E01               	movlw	1
 45514  0047DC  26DF               	addwf	indf2,f,c
 45515  0047DE  5058               	movf	??__parse_buffer_to_sector,w,c
 45516  0047E0  0D01               	mullw	1
 45517  0047E2  50F3               	movf	prodl,w,c
 45518  0047E4  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45519  0047E6  6ED9               	movwf	fsr2l,c
 45520  0047E8  50F4               	movf	prodh,w,c
 45521  0047EA  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45522  0047EC  6EDA               	movwf	fsr2h,c
 45523  0047EE  505C               	movf	__parse_buffer_to_sector@sector+1,w,c
 45524  0047F0  6EDF               	movwf	indf2,c
 45525                           
 45526                           ;api.c: 933: out_buffer[(*out_idx_ptr)++] = ((unsigned char)((sector)&0xFF));
 45527  0047F2  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45528  0047F6  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45529  0047FA  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45530  0047FE  0E01               	movlw	1
 45531  004800  26DF               	addwf	indf2,f,c
 45532  004802  5058               	movf	??__parse_buffer_to_sector,w,c
 45533  004804  0D01               	mullw	1
 45534  004806  50F3               	movf	prodl,w,c
 45535  004808  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45536  00480A  6ED9               	movwf	fsr2l,c
 45537  00480C  50F4               	movf	prodh,w,c
 45538  00480E  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45539  004810  6EDA               	movwf	fsr2h,c
 45540  004812  C05B  FFDF         	movff	__parse_buffer_to_sector@sector,indf2
 45541                           
 45542                           ;api.c: 934: out_buffer[(*out_idx_ptr)++] = return_value;
 45543  004816  C056  FFD9         	movff	__parse_buffer_to_sector@out_idx_ptr,fsr2l
 45544  00481A  C057  FFDA         	movff	__parse_buffer_to_sector@out_idx_ptr+1,fsr2h
 45545  00481E  CFDF F058          	movff	indf2,??__parse_buffer_to_sector
 45546  004822  0E01               	movlw	1
 45547  004824  26DF               	addwf	indf2,f,c
 45548  004826  5058               	movf	??__parse_buffer_to_sector,w,c
 45549  004828  0D01               	mullw	1
 45550  00482A  50F3               	movf	prodl,w,c
 45551  00482C  2454               	addwf	__parse_buffer_to_sector@out_buffer,w,c
 45552  00482E  6ED9               	movwf	fsr2l,c
 45553  004830  50F4               	movf	prodh,w,c
 45554  004832  2055               	addwfc	__parse_buffer_to_sector@out_buffer+1,w,c
 45555  004834  6EDA               	movwf	fsr2h,c
 45556  004836  C059  FFDF         	movff	__parse_buffer_to_sector@return_value,indf2
 45557  00483A                     l2927:
 45558                           
 45559                           ;api.c: 935: };api.c: 937: return 6;
 45560  00483A  0E06               	movlw	6
 45561  00483C  0012               	return	
 45562  00483E                     __end_of__parse_buffer_to_sector:
 45563                           	opt stack 0
 45564                           tosu	equ	0xFFF
 45565                           tosh	equ	0xFFE
 45566                           tosl	equ	0xFFD
 45567                           pclath	equ	0xFFA
 45568                           tblptru	equ	0xFF8
 45569                           tblptrh	equ	0xFF7
 45570                           tblptrl	equ	0xFF6
 45571                           tablat	equ	0xFF5
 45572                           prodh	equ	0xFF4
 45573                           prodl	equ	0xFF3
 45574                           intcon	equ	0xFF2
 45575                           intcon2	equ	0xFF1
 45576                           intcon3	equ	0xFF0
 45577                           indf0	equ	0xFEF
 45578                           postinc0	equ	0xFEE
 45579                           fsr0h	equ	0xFEA
 45580                           fsr0l	equ	0xFE9
 45581                           wreg	equ	0xFE8
 45582                           indf1	equ	0xFE7
 45583                           postdec1	equ	0xFE5
 45584                           plusw1	equ	0xFE3
 45585                           fsr1h	equ	0xFE2
 45586                           fsr1l	equ	0xFE1
 45587                           indf2	equ	0xFDF
 45588                           postinc2	equ	0xFDE
 45589                           postdec2	equ	0xFDD
 45590                           plusw2	equ	0xFDB
 45591                           fsr2h	equ	0xFDA
 45592                           fsr2l	equ	0xFD9
 45593                           status	equ	0xFD8
 45594                           
 45595 ;; *************** function _fat_write_sector_from_buffer *****************
 45596 ;; Defined at:
 45597 ;;		line 1459 in file "fat16.c"
 45598 ;; Parameters:    Size  Location     Type
 45599 ;;  file_number     1    wreg     unsigned char 
 45600 ;;  sector          2   66[COMRAM] unsigned int 
 45601 ;; Auto vars:     Size  Location     Type
 45602 ;;  file_number     1   80[COMRAM] unsigned char 
 45603 ;;  file_size       4   74[COMRAM] unsigned long 
 45604 ;;  number_of_cl    2   78[COMRAM] unsigned int 
 45605 ;;  cluster         2   72[COMRAM] unsigned int 
 45606 ;;  physical_sec    2    0        unsigned int 
 45607 ;; Return value:  Size  Location     Type
 45608 ;;                  1    wreg      unsigned char 
 45609 ;; Registers used:
 45610 ;;		wreg, status,2, status,0, cstack
 45611 ;; Tracked objects:
 45612 ;;		On entry : 0/0
 45613 ;;		On exit  : 0/0
 45614 ;;		Unchanged: 0/0
 45615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45617 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45619 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45620 ;;Total ram usage:       15 bytes
 45621 ;; Hardware stack levels used:    1
 45622 ;; Hardware stack levels required when called:    7
 45623 ;; This function calls:
 45624 ;;		__get_first_cluster
 45625 ;;		__root_is_available
 45626 ;;		_fat_get_file_size
 45627 ;; This function is called by:
 45628 ;;		_fat_copy_file
 45629 ;;		__parse_buffer_to_sector
 45630 ;; This function uses a non-reentrant model
 45631 ;;
 45632                           
 45633                           	psect	text229
 45634  008768                     __ptext229:
 45635                           	opt stack 0
 45636  008768                     _fat_write_sector_from_buffer:
 45637                           	opt stack 19
 45638                           
 45639                           ;incstack = 0
 45640                           ;fat_write_sector_from_buffer@file_number stored from wreg
 45641  008768  6E51               	movwf	fat_write_sector_from_buffer@file_number,c
 45642                           
 45643                           ;fat16.c: 1461: uint32_t file_size;;fat16.c: 1462: uint16_t number_of_clusters;;fat16.c:
      +                           1463: uint16_t cluster;;fat16.c: 1464: uint16_t physical_sector;;fat16.c: 1467: if(_roo
      +                          t_is_available(file_number))
 45644  00876A  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 45645  00876C  EC27  F047         	call	__root_is_available
 45646  008770  0900               	iorlw	0
 45647  008772  B4D8               	btfsc	status,2,c
 45648  008774  D002               	goto	l2326
 45649                           
 45650                           ;fat16.c: 1468: {;fat16.c: 1470: return 0xFF;
 45651  008776  0EFF               	movlw	255
 45652  008778  0012               	return	
 45653  00877A                     l2326:
 45654                           
 45655                           ;fat16.c: 1471: };fat16.c: 1474: file_size = fat_get_file_size(file_number);
 45656  00877A  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 45657  00877C  EC89  F045         	call	_fat_get_file_size
 45658  008780  C036  F04B         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 45659  008784  C037  F04C         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 45660  008788  C038  F04D         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 45661  00878C  C039  F04E         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 45662                           
 45663                           ;fat16.c: 1477: number_of_clusters = (file_size + 512 - 1) >> 9;
 45664  008790  0EFF               	movlw	255
 45665  008792  244B               	addwf	fat_write_sector_from_buffer@file_size,w,c
 45666  008794  6E45               	movwf	??_fat_write_sector_from_buffer& (0+255),c
 45667  008796  0E01               	movlw	1
 45668  008798  204C               	addwfc	fat_write_sector_from_buffer@file_size+1,w,c
 45669  00879A  6E46               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),c
 45670  00879C  0E00               	movlw	0
 45671  00879E  204D               	addwfc	fat_write_sector_from_buffer@file_size+2,w,c
 45672  0087A0  6E47               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),c
 45673  0087A2  0E00               	movlw	0
 45674  0087A4  204E               	addwfc	fat_write_sector_from_buffer@file_size+3,w,c
 45675  0087A6  6E48               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),c
 45676  0087A8  0E0A               	movlw	10
 45677  0087AA  D005               	goto	u10270
 45678  0087AC                     u10275:
 45679  0087AC  90D8               	bcf	status,0,c
 45680  0087AE  3248               	rrcf	??_fat_write_sector_from_buffer+3,f,c
 45681  0087B0  3247               	rrcf	??_fat_write_sector_from_buffer+2,f,c
 45682  0087B2  3246               	rrcf	??_fat_write_sector_from_buffer+1,f,c
 45683  0087B4  3245               	rrcf	??_fat_write_sector_from_buffer,f,c
 45684  0087B6                     u10270:
 45685  0087B6  2EE8               	decfsz	wreg,f,c
 45686  0087B8  D7F9               	goto	u10275
 45687  0087BA  C045  F04F         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 45688  0087BE  C046  F050         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 45689                           
 45690                           ;fat16.c: 1478: if(sector >= number_of_clusters)
 45691  0087C2  504F               	movf	fat_write_sector_from_buffer@number_of_clusters,w,c
 45692  0087C4  5C43               	subwf	fat_write_sector_from_buffer@sector,w,c
 45693  0087C6  5050               	movf	fat_write_sector_from_buffer@number_of_clusters+1,w,c
 45694  0087C8  5844               	subwfb	fat_write_sector_from_buffer@sector+1,w,c
 45695  0087CA  A0D8               	btfss	status,0,c
 45696  0087CC  D002               	goto	l2328
 45697                           
 45698                           ;fat16.c: 1479: {;fat16.c: 1481: return 0xFE;
 45699  0087CE  0EFE               	movlw	254
 45700  0087D0  0012               	return	
 45701  0087D2                     l2328:
 45702                           
 45703                           ;fat16.c: 1482: };fat16.c: 1485: cluster = _get_first_cluster(file_number);
 45704  0087D2  5051               	movf	fat_write_sector_from_buffer@file_number,w,c
 45705  0087D4  EC49  F04A         	call	__get_first_cluster
 45706  0087D8  C030  F049         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 45707  0087DC  C031  F04A         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 45708                           
 45709                           ;fat16.c: 1495: return 0x00;
 45710  0087E0  0E00               	movlw	0
 45711  0087E2  0012               	return	
 45712  0087E4                     __end_of_fat_write_sector_from_buffer:
 45713                           	opt stack 0
 45714                           tosu	equ	0xFFF
 45715                           tosh	equ	0xFFE
 45716                           tosl	equ	0xFFD
 45717                           pclath	equ	0xFFA
 45718                           tblptru	equ	0xFF8
 45719                           tblptrh	equ	0xFF7
 45720                           tblptrl	equ	0xFF6
 45721                           tablat	equ	0xFF5
 45722                           prodh	equ	0xFF4
 45723                           prodl	equ	0xFF3
 45724                           intcon	equ	0xFF2
 45725                           intcon2	equ	0xFF1
 45726                           intcon3	equ	0xFF0
 45727                           indf0	equ	0xFEF
 45728                           postinc0	equ	0xFEE
 45729                           fsr0h	equ	0xFEA
 45730                           fsr0l	equ	0xFE9
 45731                           wreg	equ	0xFE8
 45732                           indf1	equ	0xFE7
 45733                           postdec1	equ	0xFE5
 45734                           plusw1	equ	0xFE3
 45735                           fsr1h	equ	0xFE2
 45736                           fsr1l	equ	0xFE1
 45737                           indf2	equ	0xFDF
 45738                           postinc2	equ	0xFDE
 45739                           postdec2	equ	0xFDD
 45740                           plusw2	equ	0xFDB
 45741                           fsr2h	equ	0xFDA
 45742                           fsr2l	equ	0xFD9
 45743                           status	equ	0xFD8
 45744                           
 45745 ;; *************** function _fat_get_file_size *****************
 45746 ;; Defined at:
 45747 ;;		line 562 in file "fat16.c"
 45748 ;; Parameters:    Size  Location     Type
 45749 ;;  file_number     1    wreg     unsigned char 
 45750 ;; Auto vars:     Size  Location     Type
 45751 ;;  file_number     1   65[COMRAM] unsigned char 
 45752 ;;  file_size       4   61[COMRAM] unsigned long 
 45753 ;;  offset          2   59[COMRAM] unsigned int 
 45754 ;;  sector          2   57[COMRAM] unsigned int 
 45755 ;; Return value:  Size  Location     Type
 45756 ;;                  4   53[COMRAM] unsigned long 
 45757 ;; Registers used:
 45758 ;;		wreg, status,2, status,0, cstack
 45759 ;; Tracked objects:
 45760 ;;		On entry : 0/0
 45761 ;;		On exit  : 0/0
 45762 ;;		Unchanged: 0/0
 45763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45765 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45767 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45768 ;;Total ram usage:       13 bytes
 45769 ;; Hardware stack levels used:    1
 45770 ;; Hardware stack levels required when called:    6
 45771 ;; This function calls:
 45772 ;;		__offset_from_file_number
 45773 ;;		__root_is_available
 45774 ;;		__sector_from_file_number
 45775 ;;		_flash_partial_read
 45776 ;; This function is called by:
 45777 ;;		_fat_append_to_file
 45778 ;;		_fat_copy_file
 45779 ;;		_fat_copy_sector_to_buffer
 45780 ;;		_fat_write_sector_from_buffer
 45781 ;;		__bootloader_find_file
 45782 ;;		__bootloader_verify_file
 45783 ;;		__fill_buffer_read_file
 45784 ;; This function uses a non-reentrant model
 45785 ;;
 45786                           
 45787                           	psect	text230
 45788  008B12                     __ptext230:
 45789                           	opt stack 0
 45790  008B12                     _fat_get_file_size:
 45791                           	opt stack 22
 45792                           
 45793                           ;incstack = 0
 45794                           ;fat_get_file_size@file_number stored from wreg
 45795  008B12  6E42               	movwf	fat_get_file_size@file_number,c
 45796                           
 45797                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 45798  008B14  5042               	movf	fat_get_file_size@file_number,w,c
 45799  008B16  EC27  F047         	call	__root_is_available
 45800  008B1A  0900               	iorlw	0
 45801  008B1C  B4D8               	btfsc	status,2,c
 45802  008B1E  D005               	goto	l2081
 45803                           
 45804                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 45805  008B20  6836               	setf	?_fat_get_file_size,c
 45806  008B22  6837               	setf	?_fat_get_file_size+1,c
 45807  008B24  6838               	setf	?_fat_get_file_size+2,c
 45808  008B26  6839               	setf	?_fat_get_file_size+3,c
 45809  008B28  0012               	return	
 45810  008B2A                     l2081:
 45811                           
 45812                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 45813  008B2A  5042               	movf	fat_get_file_size@file_number,w,c
 45814  008B2C  ECBB  F04E         	call	__sector_from_file_number
 45815  008B30  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 45816  008B34  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 45817                           
 45818                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 45819  008B38  5042               	movf	fat_get_file_size@file_number,w,c
 45820  008B3A  EC47  F04F         	call	__offset_from_file_number
 45821  008B3E  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 45822  008B42  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 45823                           
 45824                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 45825  008B46  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 45826  008B4A  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 45827  008B4E  0E1C               	movlw	28
 45828  008B50  243C               	addwf	fat_get_file_size@offset,w,c
 45829  008B52  6E2A               	movwf	flash_partial_read@start,c
 45830  008B54  0E00               	movlw	0
 45831  008B56  203D               	addwfc	fat_get_file_size@offset+1,w,c
 45832  008B58  6E2B               	movwf	flash_partial_read@start+1,c
 45833  008B5A  0E00               	movlw	0
 45834  008B5C  6E2D               	movwf	flash_partial_read@length+1,c
 45835  008B5E  0E04               	movlw	4
 45836  008B60  6E2C               	movwf	flash_partial_read@length,c
 45837  008B62  0E3E               	movlw	low fat_get_file_size@file_size
 45838  008B64  6E2E               	movwf	flash_partial_read@data,c
 45839  008B66  0E00               	movlw	high fat_get_file_size@file_size
 45840  008B68  6E2F               	movwf	flash_partial_read@data+1,c
 45841  008B6A  ECEC  F04D         	call	_flash_partial_read	;wreg free
 45842                           
 45843                           ;fat16.c: 583: return file_size;
 45844  008B6E  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 45845  008B72  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 45846  008B76  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 45847  008B7A  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 45848  008B7E  0012               	return	
 45849  008B80                     __end_of_fat_get_file_size:
 45850                           	opt stack 0
 45851                           tosu	equ	0xFFF
 45852                           tosh	equ	0xFFE
 45853                           tosl	equ	0xFFD
 45854                           pclath	equ	0xFFA
 45855                           tblptru	equ	0xFF8
 45856                           tblptrh	equ	0xFF7
 45857                           tblptrl	equ	0xFF6
 45858                           tablat	equ	0xFF5
 45859                           prodh	equ	0xFF4
 45860                           prodl	equ	0xFF3
 45861                           intcon	equ	0xFF2
 45862                           intcon2	equ	0xFF1
 45863                           intcon3	equ	0xFF0
 45864                           indf0	equ	0xFEF
 45865                           postinc0	equ	0xFEE
 45866                           fsr0h	equ	0xFEA
 45867                           fsr0l	equ	0xFE9
 45868                           wreg	equ	0xFE8
 45869                           indf1	equ	0xFE7
 45870                           postdec1	equ	0xFE5
 45871                           plusw1	equ	0xFE3
 45872                           fsr1h	equ	0xFE2
 45873                           fsr1l	equ	0xFE1
 45874                           indf2	equ	0xFDF
 45875                           postinc2	equ	0xFDE
 45876                           postdec2	equ	0xFDD
 45877                           plusw2	equ	0xFDB
 45878                           fsr2h	equ	0xFDA
 45879                           fsr2l	equ	0xFD9
 45880                           status	equ	0xFD8
 45881                           
 45882 ;; *************** function __root_is_available *****************
 45883 ;; Defined at:
 45884 ;;		line 408 in file "fat16.c"
 45885 ;; Parameters:    Size  Location     Type
 45886 ;;  file_number     1    wreg     unsigned char 
 45887 ;; Auto vars:     Size  Location     Type
 45888 ;;  file_number     1   51[COMRAM] unsigned char 
 45889 ;;  offset          2   49[COMRAM] unsigned int 
 45890 ;;  root_sector     2   47[COMRAM] unsigned int 
 45891 ;;  first_byte      1   52[COMRAM] unsigned char 
 45892 ;; Return value:  Size  Location     Type
 45893 ;;                  1    wreg      unsigned char 
 45894 ;; Registers used:
 45895 ;;		wreg, status,2, status,0, cstack
 45896 ;; Tracked objects:
 45897 ;;		On entry : 0/0
 45898 ;;		On exit  : 0/0
 45899 ;;		Unchanged: 0/0
 45900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45902 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45904 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45905 ;;Total ram usage:        6 bytes
 45906 ;; Hardware stack levels used:    1
 45907 ;; Hardware stack levels required when called:    5
 45908 ;; This function calls:
 45909 ;;		__offset_from_file_number
 45910 ;;		__sector_from_file_number
 45911 ;;		_flash_partial_read
 45912 ;; This function is called by:
 45913 ;;		__get_available_root_entry
 45914 ;;		_fat_get_file_size
 45915 ;;		_fat_delete_file
 45916 ;;		_fat_append_to_file
 45917 ;;		_fat_copy_file
 45918 ;;		_fat_resize_file
 45919 ;;		_fat_copy_sector_to_buffer
 45920 ;;		_fat_write_sector_from_buffer
 45921 ;; This function uses a non-reentrant model
 45922 ;;
 45923                           
 45924                           	psect	text231
 45925  008E4E                     __ptext231:
 45926                           	opt stack 0
 45927  008E4E                     __root_is_available:
 45928                           	opt stack 22
 45929                           
 45930                           ;incstack = 0
 45931                           ;__root_is_available@file_number stored from wreg
 45932  008E4E  6E34               	movwf	__root_is_available@file_number,c
 45933                           
 45934                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 45935  008E50  0E3F               	movlw	63
 45936  008E52  6434               	cpfsgt	__root_is_available@file_number,c
 45937  008E54  D002               	goto	l2042
 45938                           
 45939                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 45940  008E56  0E00               	movlw	0
 45941  008E58  0012               	return	
 45942  008E5A                     l2042:
 45943                           
 45944                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 45945  008E5A  5034               	movf	__root_is_available@file_number,w,c
 45946  008E5C  ECBB  F04E         	call	__sector_from_file_number
 45947  008E60  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 45948  008E64  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 45949                           
 45950                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 45951  008E68  5034               	movf	__root_is_available@file_number,w,c
 45952  008E6A  EC47  F04F         	call	__offset_from_file_number
 45953  008E6E  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 45954  008E72  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 45955                           
 45956                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 45957  008E76  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 45958  008E7A  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 45959  008E7E  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 45960  008E82  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 45961  008E86  0E00               	movlw	0
 45962  008E88  6E2D               	movwf	flash_partial_read@length+1,c
 45963  008E8A  0E01               	movlw	1
 45964  008E8C  6E2C               	movwf	flash_partial_read@length,c
 45965  008E8E  0E35               	movlw	low __root_is_available@first_byte
 45966  008E90  6E2E               	movwf	flash_partial_read@data,c
 45967  008E92  0E00               	movlw	high __root_is_available@first_byte
 45968  008E94  6E2F               	movwf	flash_partial_read@data+1,c
 45969  008E96  ECEC  F04D         	call	_flash_partial_read	;wreg free
 45970                           
 45971                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 45972  008E9A  5035               	movf	__root_is_available@first_byte,w,c
 45973  008E9C  B4D8               	btfsc	status,2,c
 45974  008E9E  D004               	goto	u8260
 45975  008EA0  0EE5               	movlw	229
 45976  008EA2  1835               	xorwf	__root_is_available@first_byte,w,c
 45977  008EA4  A4D8               	btfss	status,2,c
 45978  008EA6  D002               	goto	l2044
 45979  008EA8                     u8260:
 45980                           
 45981                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 45982  008EA8  0E01               	movlw	1
 45983                           
 45984                           ;fat16.c: 434: }
 45985  008EAA  0012               	return	
 45986  008EAC                     l2044:
 45987                           
 45988                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 45989  008EAC  0E00               	movlw	0
 45990  008EAE  0012               	return	
 45991  008EB0                     __end_of__root_is_available:
 45992                           	opt stack 0
 45993                           tosu	equ	0xFFF
 45994                           tosh	equ	0xFFE
 45995                           tosl	equ	0xFFD
 45996                           pclath	equ	0xFFA
 45997                           tblptru	equ	0xFF8
 45998                           tblptrh	equ	0xFF7
 45999                           tblptrl	equ	0xFF6
 46000                           tablat	equ	0xFF5
 46001                           prodh	equ	0xFF4
 46002                           prodl	equ	0xFF3
 46003                           intcon	equ	0xFF2
 46004                           intcon2	equ	0xFF1
 46005                           intcon3	equ	0xFF0
 46006                           indf0	equ	0xFEF
 46007                           postinc0	equ	0xFEE
 46008                           fsr0h	equ	0xFEA
 46009                           fsr0l	equ	0xFE9
 46010                           wreg	equ	0xFE8
 46011                           indf1	equ	0xFE7
 46012                           postdec1	equ	0xFE5
 46013                           plusw1	equ	0xFE3
 46014                           fsr1h	equ	0xFE2
 46015                           fsr1l	equ	0xFE1
 46016                           indf2	equ	0xFDF
 46017                           postinc2	equ	0xFDE
 46018                           postdec2	equ	0xFDD
 46019                           plusw2	equ	0xFDB
 46020                           fsr2h	equ	0xFDA
 46021                           fsr2l	equ	0xFD9
 46022                           status	equ	0xFD8
 46023                           
 46024 ;; *************** function __get_first_cluster *****************
 46025 ;; Defined at:
 46026 ;;		line 501 in file "fat16.c"
 46027 ;; Parameters:    Size  Location     Type
 46028 ;;  file_number     1    wreg     unsigned char 
 46029 ;; Auto vars:     Size  Location     Type
 46030 ;;  file_number     1   55[COMRAM] unsigned char 
 46031 ;;  first_cluste    2   53[COMRAM] unsigned int 
 46032 ;;  offset          2   51[COMRAM] unsigned int 
 46033 ;;  sector          2   49[COMRAM] unsigned int 
 46034 ;; Return value:  Size  Location     Type
 46035 ;;                  2   47[COMRAM] unsigned int 
 46036 ;; Registers used:
 46037 ;;		wreg, status,2, status,0, cstack
 46038 ;; Tracked objects:
 46039 ;;		On entry : 0/0
 46040 ;;		On exit  : 0/0
 46041 ;;		Unchanged: 0/0
 46042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46044 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46046 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46047 ;;Total ram usage:        9 bytes
 46048 ;; Hardware stack levels used:    1
 46049 ;; Hardware stack levels required when called:    5
 46050 ;; This function calls:
 46051 ;;		__offset_from_file_number
 46052 ;;		__sector_from_file_number
 46053 ;;		_flash_partial_read
 46054 ;; This function is called by:
 46055 ;;		_fat_delete_file
 46056 ;;		_fat_copy_sector_to_buffer
 46057 ;;		_fat_write_sector_from_buffer
 46058 ;; This function uses a non-reentrant model
 46059 ;;
 46060                           
 46061                           	psect	text232
 46062  009492                     __ptext232:
 46063                           	opt stack 0
 46064  009492                     __get_first_cluster:
 46065                           	opt stack 21
 46066                           
 46067                           ;incstack = 0
 46068                           ;__get_first_cluster@file_number stored from wreg
 46069  009492  6E38               	movwf	__get_first_cluster@file_number,c
 46070                           
 46071                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 46072  009494  5038               	movf	__get_first_cluster@file_number,w,c
 46073  009496  ECBB  F04E         	call	__sector_from_file_number
 46074  00949A  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 46075  00949E  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 46076                           
 46077                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 46078  0094A2  5038               	movf	__get_first_cluster@file_number,w,c
 46079  0094A4  EC47  F04F         	call	__offset_from_file_number
 46080  0094A8  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 46081  0094AC  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 46082                           
 46083                           ;fat16.c: 510: offset += 26;
 46084  0094B0  0E1A               	movlw	26
 46085  0094B2  2634               	addwf	__get_first_cluster@offset,f,c
 46086  0094B4  0E00               	movlw	0
 46087  0094B6  2235               	addwfc	__get_first_cluster@offset+1,f,c
 46088                           
 46089                           ;fat16.c: 513: flash_partial_read(sector, offset, 2, &first_cluster);
 46090  0094B8  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 46091  0094BC  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 46092  0094C0  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 46093  0094C4  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 46094  0094C8  0E00               	movlw	0
 46095  0094CA  6E2D               	movwf	flash_partial_read@length+1,c
 46096  0094CC  0E02               	movlw	2
 46097  0094CE  6E2C               	movwf	flash_partial_read@length,c
 46098  0094D0  0E36               	movlw	low __get_first_cluster@first_cluster
 46099  0094D2  6E2E               	movwf	flash_partial_read@data,c
 46100  0094D4  0E00               	movlw	high __get_first_cluster@first_cluster
 46101  0094D6  6E2F               	movwf	flash_partial_read@data+1,c
 46102  0094D8  ECEC  F04D         	call	_flash_partial_read	;wreg free
 46103                           
 46104                           ;fat16.c: 514: return first_cluster;
 46105  0094DC  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 46106  0094E0  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 46107  0094E4  0012               	return	
 46108  0094E6                     __end_of__get_first_cluster:
 46109                           	opt stack 0
 46110                           tosu	equ	0xFFF
 46111                           tosh	equ	0xFFE
 46112                           tosl	equ	0xFFD
 46113                           pclath	equ	0xFFA
 46114                           tblptru	equ	0xFF8
 46115                           tblptrh	equ	0xFF7
 46116                           tblptrl	equ	0xFF6
 46117                           tablat	equ	0xFF5
 46118                           prodh	equ	0xFF4
 46119                           prodl	equ	0xFF3
 46120                           intcon	equ	0xFF2
 46121                           intcon2	equ	0xFF1
 46122                           intcon3	equ	0xFF0
 46123                           indf0	equ	0xFEF
 46124                           postinc0	equ	0xFEE
 46125                           fsr0h	equ	0xFEA
 46126                           fsr0l	equ	0xFE9
 46127                           wreg	equ	0xFE8
 46128                           indf1	equ	0xFE7
 46129                           postdec1	equ	0xFE5
 46130                           plusw1	equ	0xFE3
 46131                           fsr1h	equ	0xFE2
 46132                           fsr1l	equ	0xFE1
 46133                           indf2	equ	0xFDF
 46134                           postinc2	equ	0xFDE
 46135                           postdec2	equ	0xFDD
 46136                           plusw2	equ	0xFDB
 46137                           fsr2h	equ	0xFDA
 46138                           fsr2l	equ	0xFD9
 46139                           status	equ	0xFD8
 46140                           
 46141 ;; *************** function _flash_partial_read *****************
 46142 ;; Defined at:
 46143 ;;		line 481 in file "flash.c"
 46144 ;; Parameters:    Size  Location     Type
 46145 ;;  page            2   39[COMRAM] unsigned int 
 46146 ;;  start           2   41[COMRAM] unsigned int 
 46147 ;;  length          2   43[COMRAM] unsigned int 
 46148 ;;  data            2   45[COMRAM] PTR unsigned char 
 46149 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 46150 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 46151 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 46152 ;;		 -> RAM(3759), 
 46153 ;; Auto vars:     Size  Location     Type
 46154 ;;		None
 46155 ;; Return value:  Size  Location     Type
 46156 ;;                  1    wreg      void 
 46157 ;; Registers used:
 46158 ;;		wreg, status,2, status,0, cstack
 46159 ;; Tracked objects:
 46160 ;;		On entry : 0/0
 46161 ;;		On exit  : 0/0
 46162 ;;		Unchanged: 0/0
 46163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46167 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46168 ;;Total ram usage:        8 bytes
 46169 ;; Hardware stack levels used:    1
 46170 ;; Hardware stack levels required when called:    4
 46171 ;; This function calls:
 46172 ;;		__flash_partial_read
 46173 ;;		_spi_set_configuration
 46174 ;; This function is called by:
 46175 ;;		__root_is_available
 46176 ;;		__read_fat
 46177 ;;		__get_first_cluster
 46178 ;;		_fat_get_file_size
 46179 ;;		_fat_read_from_file_fast
 46180 ;;		_fat_get_file_information
 46181 ;; This function uses a non-reentrant model
 46182 ;;
 46183                           
 46184                           	psect	text233
 46185  009BD8                     __ptext233:
 46186                           	opt stack 0
 46187  009BD8                     _flash_partial_read:
 46188                           	opt stack 23
 46189                           
 46190                           ;flash.c: 484: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 46191                           
 46192                           ;incstack = 0
 46193  009BD8  0E00               	movlw	0
 46194  009BDA  ECEF  F02A         	call	_spi_set_configuration
 46195                           
 46196                           ;flash.c: 487: _flash_partial_read(page, start, length, data);
 46197  009BDE  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 46198  009BE2  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 46199  009BE6  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 46200  009BEA  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 46201  009BEE  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 46202  009BF2  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 46203  009BF6  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 46204  009BFA  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 46205  009BFE  EC6B  F044         	call	__flash_partial_read	;wreg free
 46206                           
 46207                           ;flash.c: 490: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 46208  009C02  0E01               	movlw	1
 46209  009C04  ECEF  F02A         	call	_spi_set_configuration
 46210  009C08  0012               	return		;funcret
 46211  009C0A                     __end_of_flash_partial_read:
 46212                           	opt stack 0
 46213                           tosu	equ	0xFFF
 46214                           tosh	equ	0xFFE
 46215                           tosl	equ	0xFFD
 46216                           pclath	equ	0xFFA
 46217                           tblptru	equ	0xFF8
 46218                           tblptrh	equ	0xFF7
 46219                           tblptrl	equ	0xFF6
 46220                           tablat	equ	0xFF5
 46221                           prodh	equ	0xFF4
 46222                           prodl	equ	0xFF3
 46223                           intcon	equ	0xFF2
 46224                           intcon2	equ	0xFF1
 46225                           intcon3	equ	0xFF0
 46226                           indf0	equ	0xFEF
 46227                           postinc0	equ	0xFEE
 46228                           fsr0h	equ	0xFEA
 46229                           fsr0l	equ	0xFE9
 46230                           wreg	equ	0xFE8
 46231                           indf1	equ	0xFE7
 46232                           postdec1	equ	0xFE5
 46233                           plusw1	equ	0xFE3
 46234                           fsr1h	equ	0xFE2
 46235                           fsr1l	equ	0xFE1
 46236                           indf2	equ	0xFDF
 46237                           postinc2	equ	0xFDE
 46238                           postdec2	equ	0xFDD
 46239                           plusw2	equ	0xFDB
 46240                           fsr2h	equ	0xFDA
 46241                           fsr2l	equ	0xFD9
 46242                           status	equ	0xFD8
 46243                           
 46244 ;; *************** function _spi_set_configuration *****************
 46245 ;; Defined at:
 46246 ;;		line 140 in file "spi.c"
 46247 ;; Parameters:    Size  Location     Type
 46248 ;;  configuratio    1    wreg     enum E6751
 46249 ;; Auto vars:     Size  Location     Type
 46250 ;;  configuratio    1    0[COMRAM] enum E6751
 46251 ;;  cntr            1    0        unsigned char 
 46252 ;; Return value:  Size  Location     Type
 46253 ;;                  1    wreg      void 
 46254 ;; Registers used:
 46255 ;;		wreg, status,2, status,0
 46256 ;; Tracked objects:
 46257 ;;		On entry : 0/0
 46258 ;;		On exit  : 0/0
 46259 ;;		Unchanged: 0/0
 46260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46265 ;;Total ram usage:        1 bytes
 46266 ;; Hardware stack levels used:    1
 46267 ;; This function calls:
 46268 ;;		Nothing
 46269 ;; This function is called by:
 46270 ;;		_flash_init
 46271 ;;		_flash_is_busy
 46272 ;;		_flash_sector_read
 46273 ;;		_flash_sector_write
 46274 ;;		_flash_partial_read
 46275 ;;		_flash_partial_write
 46276 ;;		_flash_copy_page_to_buffer
 46277 ;;		_flash_read_from_buffer
 46278 ;;		_flash_write_to_buffer
 46279 ;;		_flash_set_power_state
 46280 ;;		_flash_write_page_from_buffer
 46281 ;; This function uses a non-reentrant model
 46282 ;;
 46283                           
 46284                           	psect	text234
 46285  0055DE                     __ptext234:
 46286                           	opt stack 0
 46287  0055DE                     _spi_set_configuration:
 46288                           	opt stack 28
 46289                           
 46290                           ;incstack = 0
 46291                           ;spi_set_configuration@configuration stored from wreg
 46292  0055DE  6E01               	movwf	spi_set_configuration@configuration,c
 46293                           
 46294                           ;spi.c: 142: uint8_t cntr;;spi.c: 145: switch(configuration)
 46295  0055E0  D07B               	goto	l3083
 46296  0055E2                     l3084:
 46297                           
 46298                           ;spi.c: 153: LATDbits.LD2 = 1;
 46299  0055E2  848C               	bsf	3980,2,c	;volatile
 46300                           
 46301                           ;spi.c: 154: TRISDbits.TRISD2 = 0;
 46302  0055E4  9495               	bcf	3989,2,c	;volatile
 46303                           
 46304                           ;spi.c: 155: TRISDbits.TRISD2 = 1;
 46305  0055E6  8495               	bsf	3989,2,c	;volatile
 46306  0055E8  A483               	btfss	3971,2,c	;volatile
 46307  0055EA  D7FE               	goto	l3086
 46308                           
 46309                           ;spi.c: 160: DMACON1bits.DMAEN = 0;
 46310  0055EC  9088               	bcf	3976,0,c	;volatile
 46311                           
 46312                           ;spi.c: 161: SSP2CON1bits.SSPEN = 0;
 46313  0055EE  9A72               	bcf	3954,5,c	;volatile
 46314                           
 46315                           ;spi.c: 164: TRISDbits.TRISD6 = 1;
 46316  0055F0  8C95               	bsf	3989,6,c	;volatile
 46317                           
 46318                           ;spi.c: 165: TRISDbits.TRISD4 = 0;
 46319  0055F2  9895               	bcf	3989,4,c	;volatile
 46320                           
 46321                           ;spi.c: 166: LATDbits.LD4 = 0;
 46322  0055F4  988C               	bcf	3980,4,c	;volatile
 46323                           
 46324                           ;spi.c: 167: TRISDbits.TRISD5 = 0;
 46325  0055F6  9A95               	bcf	3989,5,c	;volatile
 46326                           
 46327                           ;spi.c: 168: LATDbits.LD5 = 0;
 46328  0055F8  9A8C               	bcf	3980,5,c	;volatile
 46329                           
 46330                           ;spi.c: 169: TRISDbits.TRISD7 = 0;
 46331  0055FA  9E95               	bcf	3989,7,c	;volatile
 46332                           
 46333                           ;spi.c: 170: LATDbits.LD7 = 1;
 46334  0055FC  8E8C               	bsf	3980,7,c	;volatile
 46335                           
 46336                           ;spi.c: 173: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46337  0055FE  0E55               	movlw	85
 46338  005600  6EA7               	movwf	4007,c	;volsfr
 46339  005602  0EAA               	movlw	170
 46340  005604  6EA7               	movwf	4007,c	;volsfr
 46341  005606  010E               	movlb	14	; () banked
 46342  005608  91BF               	bcf	191,0,b	;volatile
 46343                           
 46344                           ;spi.c: 175: RPOR23 = 0b00000;
 46345  00560A  0E00               	movlw	0
 46346  00560C  6FD7               	movwf	215,b	;volatile
 46347                           
 46348                           ;spi.c: 176: RPINR21 = 0b11111;
 46349  00560E  0E1F               	movlw	31
 46350  005610  6FFC               	movwf	252,b	;volatile
 46351                           
 46352                           ;spi.c: 177: RPINR23 = 0b11111;
 46353  005612  0E1F               	movlw	31
 46354  005614  6FFE               	movwf	254,b	;volatile
 46355                           
 46356                           ;spi.c: 179: RPINR21 = 23;
 46357  005616  0E17               	movlw	23
 46358  005618  6FFC               	movwf	252,b	;volatile
 46359                           
 46360                           ;spi.c: 180: RPOR21 = 10;
 46361  00561A  0E0A               	movlw	10
 46362  00561C  6FD5               	movwf	213,b	;volatile
 46363                           
 46364                           ;spi.c: 182: RPOR22 = 11;
 46365  00561E  0E0B               	movlw	11
 46366  005620  6FD6               	movwf	214,b	;volatile
 46367                           
 46368                           ;spi.c: 183: RPINR22 = 22;
 46369  005622  0E16               	movlw	22
 46370  005624  6FFD               	movwf	253,b	;volatile
 46371                           
 46372                           ;spi.c: 184: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46373  005626  0E55               	movlw	85
 46374  005628  6EA7               	movwf	4007,c	;volsfr
 46375  00562A  0EAA               	movlw	170
 46376  00562C  6EA7               	movwf	4007,c	;volsfr
 46377                           
 46378                           ; BSR set to: 14
 46379  00562E  81BF               	bsf	191,0,b	;volatile
 46380                           
 46381                           ; BSR set to: 14
 46382                           ;spi.c: 187: SSP2STATbits.SMP = 1;
 46383  005630  8E73               	bsf	3955,7,c	;volatile
 46384                           
 46385                           ; BSR set to: 14
 46386                           ;spi.c: 188: SSP2STATbits.CKE = 1;
 46387  005632  8C73               	bsf	3955,6,c	;volatile
 46388                           
 46389                           ; BSR set to: 14
 46390                           ;spi.c: 189: SSP2CON1bits.WCOL = 0;
 46391  005634  9E72               	bcf	3954,7,c	;volatile
 46392                           
 46393                           ; BSR set to: 14
 46394                           ;spi.c: 190: SSP2CON1bits.SSPOV = 0;
 46395  005636  9C72               	bcf	3954,6,c	;volatile
 46396                           
 46397                           ; BSR set to: 14
 46398                           ;spi.c: 191: SSP2CON1bits.CKP = 0;
 46399  005638  9872               	bcf	3954,4,c	;volatile
 46400                           
 46401                           ; BSR set to: 14
 46402                           ;spi.c: 192: SSP2CON1bits.SSPM =0b0000;
 46403  00563A  9072               	bcf	3954,0,c	;volatile
 46404  00563C  9272               	bcf	3954,1,c	;volatile
 46405  00563E  9472               	bcf	3954,2,c	;volatile
 46406  005640  9672               	bcf	3954,3,c	;volatile
 46407                           
 46408                           ; BSR set to: 14
 46409                           ;spi.c: 193: SSP2CON1bits.SSPEN = 1;
 46410  005642  8A72               	bsf	3954,5,c	;volatile
 46411                           
 46412                           ;spi.c: 196: active_configuration = SPI_CONFIGURATION_INTERNAL;
 46413  005644  0E00               	movlw	0
 46414  005646  0101               	movlb	1	; () banked
 46415  005648  6F8C               	movwf	_active_configuration& (0+255),b
 46416                           
 46417                           ;spi.c: 197: break;
 46418  00564A  0012               	return	
 46419  00564C                     l3089:
 46420                           
 46421                           ;spi.c: 201: DMACON1bits.DMAEN = 0;
 46422  00564C  9088               	bcf	3976,0,c	;volatile
 46423                           
 46424                           ;spi.c: 202: SSP2CON1bits.SSPEN = 0;
 46425  00564E  9A72               	bcf	3954,5,c	;volatile
 46426                           
 46427                           ;spi.c: 205: ODCON3bits.SPI2OD = 0;
 46428  005650  010F               	movlb	15	; () banked
 46429  005652  9340               	bcf	64,1,b	;volatile
 46430                           
 46431                           ; BSR set to: 15
 46432                           ;spi.c: 208: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46433  005654  0E55               	movlw	85
 46434  005656  6EA7               	movwf	4007,c	;volsfr
 46435  005658  0EAA               	movlw	170
 46436  00565A  6EA7               	movwf	4007,c	;volsfr
 46437                           
 46438                           ; BSR set to: 15
 46439  00565C  010E               	movlb	14	; () banked
 46440  00565E  91BF               	bcf	191,0,b	;volatile
 46441                           
 46442                           ;spi.c: 209: RPOR23 = 10;
 46443  005660  0E0A               	movlw	10
 46444  005662  6FD7               	movwf	215,b	;volatile
 46445                           
 46446                           ;spi.c: 210: RPINR21 = 21;
 46447  005664  0E15               	movlw	21
 46448  005666  6FFC               	movwf	252,b	;volatile
 46449                           
 46450                           ;spi.c: 211: RPINR22 = 22;
 46451  005668  0E16               	movlw	22
 46452  00566A  6FFD               	movwf	253,b	;volatile
 46453                           
 46454                           ;spi.c: 212: RPINR23 = 19;
 46455  00566C  0E13               	movlw	19
 46456  00566E  6FFE               	movwf	254,b	;volatile
 46457                           
 46458                           ;spi.c: 213: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46459  005670  0E55               	movlw	85
 46460  005672  6EA7               	movwf	4007,c	;volsfr
 46461  005674  0EAA               	movlw	170
 46462  005676  6EA7               	movwf	4007,c	;volsfr
 46463                           
 46464                           ; BSR set to: 14
 46465  005678  81BF               	bsf	191,0,b	;volatile
 46466                           
 46467                           ; BSR set to: 14
 46468                           ;spi.c: 215: SSP2CON1bits.SSPEN = 0;
 46469  00567A  9A72               	bcf	3954,5,c	;volatile
 46470                           
 46471                           ; BSR set to: 14
 46472                           ;spi.c: 223: TRISDbits.TRISD5 = 1;
 46473  00567C  8A95               	bsf	3989,5,c	;volatile
 46474                           
 46475                           ; BSR set to: 14
 46476                           ;spi.c: 224: TRISDbits.TRISD4 = 1;
 46477  00567E  8895               	bsf	3989,4,c	;volatile
 46478                           
 46479                           ; BSR set to: 14
 46480                           ;spi.c: 227: TRISDbits.TRISD6 = 0;
 46481  005680  9C95               	bcf	3989,6,c	;volatile
 46482                           
 46483                           ; BSR set to: 14
 46484                           ;spi.c: 228: LATDbits.LD6 = 1;
 46485  005682  8C8C               	bsf	3980,6,c	;volatile
 46486                           
 46487                           ; BSR set to: 14
 46488                           ;spi.c: 231: TRISDbits.TRISD2 = 1;
 46489  005684  8495               	bsf	3989,2,c	;volatile
 46490                           
 46491                           ; BSR set to: 14
 46492                           ;spi.c: 237: SSP2STATbits.SMP = 0;
 46493  005686  9E73               	bcf	3955,7,c	;volatile
 46494                           
 46495                           ; BSR set to: 14
 46496                           ;spi.c: 238: SSP2STATbits.CKE = 1;
 46497  005688  8C73               	bsf	3955,6,c	;volatile
 46498                           
 46499                           ; BSR set to: 14
 46500                           ;spi.c: 239: SSP2CON1bits.WCOL = 0;
 46501  00568A  9E72               	bcf	3954,7,c	;volatile
 46502                           
 46503                           ; BSR set to: 14
 46504                           ;spi.c: 240: SSP2CON1bits.SSPOV = 0;
 46505  00568C  9C72               	bcf	3954,6,c	;volatile
 46506                           
 46507                           ; BSR set to: 14
 46508                           ;spi.c: 241: SSP2CON1bits.CKP = 0;
 46509  00568E  9872               	bcf	3954,4,c	;volatile
 46510                           
 46511                           ; BSR set to: 14
 46512                           ;spi.c: 242: SSP2CON1bits.SSPM =0b0100;
 46513  005690  5072               	movf	3954,w,c	;volatile
 46514  005692  0BF0               	andlw	-16
 46515  005694  0904               	iorlw	4
 46516  005696  6E72               	movwf	3954,c	;volatile
 46517                           
 46518                           ; BSR set to: 14
 46519                           ;spi.c: 243: PIR3bits.SSP2IF = 0;
 46520  005698  9EA4               	bcf	4004,7,c	;volatile
 46521                           
 46522                           ; BSR set to: 14
 46523                           ;spi.c: 244: SSP2CON1bits.SSPEN = 1;
 46524  00569A  8A72               	bsf	3954,5,c	;volatile
 46525                           
 46526                           ; BSR set to: 14
 46527                           ;spi.c: 247: DMACON1bits.TXINC = 1;
 46528  00569C  8A88               	bsf	3976,5,c	;volatile
 46529                           
 46530                           ; BSR set to: 14
 46531                           ;spi.c: 248: DMACON1bits.RXINC = 1;
 46532  00569E  8888               	bsf	3976,4,c	;volatile
 46533                           
 46534                           ; BSR set to: 14
 46535                           ;spi.c: 249: DMACON1bits.DUPLEX1 = 1;
 46536  0056A0  8688               	bsf	3976,3,c	;volatile
 46537                           
 46538                           ; BSR set to: 14
 46539                           ;spi.c: 250: DMACON1bits.DUPLEX0 = 0;
 46540  0056A2  9488               	bcf	3976,2,c	;volatile
 46541                           
 46542                           ; BSR set to: 14
 46543                           ;spi.c: 251: DMACON1bits.DLYINTEN = 0;
 46544  0056A4  9288               	bcf	3976,1,c	;volatile
 46545                           
 46546                           ; BSR set to: 14
 46547                           ;spi.c: 253: DMACON2bits.DLYCYC = 0b0000;
 46548  0056A6  9886               	bcf	3974,4,c	;volatile
 46549  0056A8  9A86               	bcf	3974,5,c	;volatile
 46550  0056AA  9C86               	bcf	3974,6,c	;volatile
 46551  0056AC  9E86               	bcf	3974,7,c	;volatile
 46552                           
 46553                           ; BSR set to: 14
 46554                           ;spi.c: 254: DMACON2bits.INTLVL = 0b0000;
 46555  0056AE  9086               	bcf	3974,0,c	;volatile
 46556  0056B0  9286               	bcf	3974,1,c	;volatile
 46557  0056B2  9486               	bcf	3974,2,c	;volatile
 46558  0056B4  9686               	bcf	3974,3,c	;volatile
 46559                           
 46560                           ; BSR set to: 14
 46561                           ;spi.c: 257: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 46562  0056B6  0E00               	movlw	0
 46563  0056B8  6E66               	movwf	3942,c	;volatile
 46564                           
 46565                           ; BSR set to: 14
 46566                           ;spi.c: 258: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 46567  0056BA  0E3F               	movlw	63
 46568  0056BC  6E67               	movwf	3943,c	;volatile
 46569                           
 46570                           ; BSR set to: 14
 46571                           ;spi.c: 261: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 46572  0056BE  0E03               	movlw	high __spi_external_tx_buffer
 46573  0056C0  6E6A               	movwf	3946,c	;volatile
 46574                           
 46575                           ; BSR set to: 14
 46576                           ;spi.c: 262: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 46577  0056C2  0E40               	movlw	low (low __spi_external_tx_buffer)
 46578  0056C4  6E6B               	movwf	3947,c	;volatile
 46579                           
 46580                           ; BSR set to: 14
 46581                           ;spi.c: 265: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 46582  0056C6  0E03               	movlw	high __spi_external_rx_buffer
 46583  0056C8  6E68               	movwf	3944,c	;volatile
 46584                           
 46585                           ; BSR set to: 14
 46586                           ;spi.c: 266: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 46587  0056CA  0E00               	movlw	low (low __spi_external_rx_buffer)
 46588  0056CC  6E69               	movwf	3945,c	;volatile
 46589                           
 46590                           ; BSR set to: 14
 46591                           ;spi.c: 268: DMACON1bits.DMAEN = 1;
 46592  0056CE  8088               	bsf	3976,0,c	;volatile
 46593                           
 46594                           ; BSR set to: 14
 46595                           ;spi.c: 336: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 46596  0056D0  0E01               	movlw	1
 46597  0056D2  0101               	movlb	1	; () banked
 46598  0056D4  6F8C               	movwf	_active_configuration& (0+255),b
 46599                           
 46600                           ; BSR set to: 1
 46601                           ;spi.c: 338: }
 46602                           
 46603                           ;spi.c: 337: break;
 46604  0056D6  0012               	return	
 46605  0056D8                     l3083:
 46606                           
 46607                           ; BSR set to: 1
 46608  0056D8  5001               	movf	spi_set_configuration@configuration,w,c
 46609                           
 46610                           ; Switch size 1, requested type "space"
 46611                           ; Number of cases is 2, Range of values is 0 to 1
 46612                           ; switch strategies available:
 46613                           ; Name         Instructions Cycles
 46614                           ; simple_byte            7     4 (average)
 46615                           ;	Chosen strategy is simple_byte
 46616  0056DA  0A00               	xorlw	0	; case 0
 46617  0056DC  B4D8               	btfsc	status,2,c
 46618  0056DE  D781               	goto	l3084
 46619  0056E0  0A01               	xorlw	1	; case 1
 46620  0056E2  A4D8               	btfss	status,2,c
 46621  0056E4  0012               	return	
 46622  0056E6  D7B2               	goto	l3089
 46623  0056E8                     __end_of_spi_set_configuration:
 46624                           	opt stack 0
 46625                           tosu	equ	0xFFF
 46626                           tosh	equ	0xFFE
 46627                           tosl	equ	0xFFD
 46628                           pclath	equ	0xFFA
 46629                           tblptru	equ	0xFF8
 46630                           tblptrh	equ	0xFF7
 46631                           tblptrl	equ	0xFF6
 46632                           tablat	equ	0xFF5
 46633                           prodh	equ	0xFF4
 46634                           prodl	equ	0xFF3
 46635                           intcon	equ	0xFF2
 46636                           intcon2	equ	0xFF1
 46637                           intcon3	equ	0xFF0
 46638                           indf0	equ	0xFEF
 46639                           postinc0	equ	0xFEE
 46640                           fsr0h	equ	0xFEA
 46641                           fsr0l	equ	0xFE9
 46642                           wreg	equ	0xFE8
 46643                           indf1	equ	0xFE7
 46644                           postdec1	equ	0xFE5
 46645                           plusw1	equ	0xFE3
 46646                           fsr1h	equ	0xFE2
 46647                           fsr1l	equ	0xFE1
 46648                           indf2	equ	0xFDF
 46649                           postinc2	equ	0xFDE
 46650                           postdec2	equ	0xFDD
 46651                           plusw2	equ	0xFDB
 46652                           fsr2h	equ	0xFDA
 46653                           fsr2l	equ	0xFD9
 46654                           status	equ	0xFD8
 46655                           
 46656 ;; *************** function __flash_partial_read *****************
 46657 ;; Defined at:
 46658 ;;		line 309 in file "flash.c"
 46659 ;; Parameters:    Size  Location     Type
 46660 ;;  page            2   19[COMRAM] unsigned int 
 46661 ;;  start           2   21[COMRAM] unsigned int 
 46662 ;;  length          2   23[COMRAM] unsigned int 
 46663 ;;  data            2   25[COMRAM] PTR unsigned char 
 46664 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 46665 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 46666 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 46667 ;;		 -> buffer(512), msd_buffer(512), RAM(3759), 
 46668 ;; Auto vars:     Size  Location     Type
 46669 ;;  command         4   31[COMRAM] unsigned char [4]
 46670 ;;  address         4   35[COMRAM] unsigned long 
 46671 ;; Return value:  Size  Location     Type
 46672 ;;                  1    wreg      void 
 46673 ;; Registers used:
 46674 ;;		wreg, status,2, status,0, cstack
 46675 ;; Tracked objects:
 46676 ;;		On entry : 0/0
 46677 ;;		On exit  : 0/0
 46678 ;;		Unchanged: 0/0
 46679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46680 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46681 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46683 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46684 ;;Total ram usage:       20 bytes
 46685 ;; Hardware stack levels used:    1
 46686 ;; Hardware stack levels required when called:    3
 46687 ;; This function calls:
 46688 ;;		__flash_is_busy
 46689 ;;		_spi_tx_rx
 46690 ;; This function is called by:
 46691 ;;		_flash_sector_read
 46692 ;;		_flash_partial_read
 46693 ;; This function uses a non-reentrant model
 46694 ;;
 46695                           
 46696                           	psect	text235
 46697  0088D6                     __ptext235:
 46698                           	opt stack 0
 46699  0088D6                     __flash_partial_read:
 46700                           	opt stack 23
 46701                           
 46702                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 46703                           
 46704                           ;incstack = 0
 46705  0088D6  ECD7  F04F         	call	__flash_is_busy	;wreg free
 46706  0088DA  0900               	iorlw	0
 46707  0088DC  A4D8               	btfss	status,2,c
 46708  0088DE  D7FB               	goto	__flash_partial_read
 46709                           
 46710                           ;flash.c: 318: address = page;
 46711  0088E0  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 46712  0088E4  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 46713  0088E8  6A26               	clrf	__flash_partial_read@address+2,c
 46714  0088EA  6A27               	clrf	__flash_partial_read@address+3,c
 46715                           
 46716                           ;flash.c: 319: address <<= 9;
 46717  0088EC  0E09               	movlw	9
 46718  0088EE                     u7545:
 46719  0088EE  90D8               	bcf	status,0,c
 46720  0088F0  3624               	rlcf	__flash_partial_read@address,f,c
 46721  0088F2  3625               	rlcf	__flash_partial_read@address+1,f,c
 46722  0088F4  3626               	rlcf	__flash_partial_read@address+2,f,c
 46723  0088F6  3627               	rlcf	__flash_partial_read@address+3,f,c
 46724  0088F8  2EE8               	decfsz	wreg,f,c
 46725  0088FA  D7F9               	goto	u7545
 46726                           
 46727                           ;flash.c: 320: address |= start;
 46728  0088FC  5016               	movf	__flash_partial_read@start,w,c
 46729  0088FE  6E1C               	movwf	??__flash_partial_read& (0+255),c
 46730  008900  5017               	movf	__flash_partial_read@start+1,w,c
 46731  008902  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 46732  008904  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 46733  008906  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 46734  008908  501C               	movf	??__flash_partial_read,w,c
 46735  00890A  1224               	iorwf	__flash_partial_read@address,f,c
 46736  00890C  501D               	movf	??__flash_partial_read+1,w,c
 46737  00890E  1225               	iorwf	__flash_partial_read@address+1,f,c
 46738  008910  501E               	movf	??__flash_partial_read+2,w,c
 46739  008912  1226               	iorwf	__flash_partial_read@address+2,f,c
 46740  008914  501F               	movf	??__flash_partial_read+3,w,c
 46741  008916  1227               	iorwf	__flash_partial_read@address+3,f,c
 46742                           
 46743                           ;flash.c: 323: command[0] = 0x03;
 46744  008918  0E03               	movlw	3
 46745  00891A  6E20               	movwf	__flash_partial_read@command,c
 46746                           
 46747                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 46748  00891C  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 46749                           
 46750                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 46751  008920  5025               	movf	__flash_partial_read@address+1,w,c
 46752  008922  6E22               	movwf	__flash_partial_read@command+2,c
 46753                           
 46754                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 46755  008924  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 46756                           
 46757                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 46758  008928  0E20               	movlw	low __flash_partial_read@command
 46759  00892A  6E01               	movwf	spi_tx_rx@command,c
 46760  00892C  0E00               	movlw	high __flash_partial_read@command
 46761  00892E  6E02               	movwf	spi_tx_rx@command+1,c
 46762  008930  0E00               	movlw	0
 46763  008932  6E04               	movwf	spi_tx_rx@command_length+1,c
 46764  008934  0E04               	movlw	4
 46765  008936  6E03               	movwf	spi_tx_rx@command_length,c
 46766  008938  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 46767  00893C  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 46768  008940  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 46769  008944  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 46770  008948  ECC9  F041         	call	_spi_tx_rx	;wreg free
 46771  00894C  0012               	return		;funcret
 46772  00894E                     __end_of__flash_partial_read:
 46773                           	opt stack 0
 46774                           tosu	equ	0xFFF
 46775                           tosh	equ	0xFFE
 46776                           tosl	equ	0xFFD
 46777                           pclath	equ	0xFFA
 46778                           tblptru	equ	0xFF8
 46779                           tblptrh	equ	0xFF7
 46780                           tblptrl	equ	0xFF6
 46781                           tablat	equ	0xFF5
 46782                           prodh	equ	0xFF4
 46783                           prodl	equ	0xFF3
 46784                           intcon	equ	0xFF2
 46785                           intcon2	equ	0xFF1
 46786                           intcon3	equ	0xFF0
 46787                           indf0	equ	0xFEF
 46788                           postinc0	equ	0xFEE
 46789                           fsr0h	equ	0xFEA
 46790                           fsr0l	equ	0xFE9
 46791                           wreg	equ	0xFE8
 46792                           indf1	equ	0xFE7
 46793                           postdec1	equ	0xFE5
 46794                           plusw1	equ	0xFE3
 46795                           fsr1h	equ	0xFE2
 46796                           fsr1l	equ	0xFE1
 46797                           indf2	equ	0xFDF
 46798                           postinc2	equ	0xFDE
 46799                           postdec2	equ	0xFDD
 46800                           plusw2	equ	0xFDB
 46801                           fsr2h	equ	0xFDA
 46802                           fsr2l	equ	0xFD9
 46803                           status	equ	0xFD8
 46804                           
 46805 ;; *************** function __flash_is_busy *****************
 46806 ;; Defined at:
 46807 ;;		line 281 in file "flash.c"
 46808 ;; Parameters:    Size  Location     Type
 46809 ;;		None
 46810 ;; Auto vars:     Size  Location     Type
 46811 ;;  status          2   17[COMRAM] unsigned int 
 46812 ;; Return value:  Size  Location     Type
 46813 ;;                  1    wreg      unsigned char 
 46814 ;; Registers used:
 46815 ;;		wreg, status,2, status,0, cstack
 46816 ;; Tracked objects:
 46817 ;;		On entry : 0/0
 46818 ;;		On exit  : 0/0
 46819 ;;		Unchanged: 0/0
 46820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46825 ;;Total ram usage:        2 bytes
 46826 ;; Hardware stack levels used:    1
 46827 ;; Hardware stack levels required when called:    2
 46828 ;; This function calls:
 46829 ;;		__flash_get_status
 46830 ;;		__flash_wakeup
 46831 ;; This function is called by:
 46832 ;;		__flash_set_page_size
 46833 ;;		__flash_copy_page_to_buffer
 46834 ;;		__flash_compare_page_to_buffer
 46835 ;;		__flash_write_to_buffer
 46836 ;;		__flash_write_page_from_buffer
 46837 ;;		__flash_partial_read
 46838 ;;		__flash_buffer_read
 46839 ;;		_flash_is_busy
 46840 ;;		_flash_partial_write
 46841 ;;		__flash_erase_page
 46842 ;;		_flash_set_power_state
 46843 ;; This function uses a non-reentrant model
 46844 ;;
 46845                           
 46846                           	psect	text236
 46847  009FAE                     __ptext236:
 46848                           	opt stack 0
 46849  009FAE                     __flash_is_busy:
 46850                           	opt stack 25
 46851                           
 46852                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 46853                           
 46854                           ;incstack = 0
 46855  009FAE  0100               	movlb	0	; () banked
 46856  009FB0  51E3               	movf	_power_state& (0+255),w,b
 46857  009FB2  A4D8               	btfss	status,2,c
 46858                           
 46859                           ; BSR set to: 0
 46860                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 46861  009FB4  ECF4  F049         	call	__flash_wakeup	;wreg free
 46862                           
 46863                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 46864  009FB8  EC05  F04E         	call	__flash_get_status	;wreg free
 46865  009FBC  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 46866  009FC0  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 46867                           
 46868                           ;flash.c: 295: if(status & 0b0000000010000000)
 46869  009FC4  AE12               	btfss	__flash_is_busy@status,7,c
 46870  009FC6  D002               	goto	l1821
 46871                           
 46872                           ;flash.c: 296: {;flash.c: 298: return 0;
 46873  009FC8  0E00               	movlw	0
 46874                           
 46875                           ;flash.c: 299: }
 46876  009FCA  0012               	return	
 46877  009FCC                     l1821:
 46878                           
 46879                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 46880  009FCC  0E01               	movlw	1
 46881  009FCE  0012               	return	
 46882  009FD0                     __end_of__flash_is_busy:
 46883                           	opt stack 0
 46884                           tosu	equ	0xFFF
 46885                           tosh	equ	0xFFE
 46886                           tosl	equ	0xFFD
 46887                           pclath	equ	0xFFA
 46888                           tblptru	equ	0xFF8
 46889                           tblptrh	equ	0xFF7
 46890                           tblptrl	equ	0xFF6
 46891                           tablat	equ	0xFF5
 46892                           prodh	equ	0xFF4
 46893                           prodl	equ	0xFF3
 46894                           intcon	equ	0xFF2
 46895                           intcon2	equ	0xFF1
 46896                           intcon3	equ	0xFF0
 46897                           indf0	equ	0xFEF
 46898                           postinc0	equ	0xFEE
 46899                           fsr0h	equ	0xFEA
 46900                           fsr0l	equ	0xFE9
 46901                           wreg	equ	0xFE8
 46902                           indf1	equ	0xFE7
 46903                           postdec1	equ	0xFE5
 46904                           plusw1	equ	0xFE3
 46905                           fsr1h	equ	0xFE2
 46906                           fsr1l	equ	0xFE1
 46907                           indf2	equ	0xFDF
 46908                           postinc2	equ	0xFDE
 46909                           postdec2	equ	0xFDD
 46910                           plusw2	equ	0xFDB
 46911                           fsr2h	equ	0xFDA
 46912                           fsr2l	equ	0xFD9
 46913                           status	equ	0xFD8
 46914                           
 46915 ;; *************** function __flash_wakeup *****************
 46916 ;; Defined at:
 46917 ;;		line 128 in file "flash.c"
 46918 ;; Parameters:    Size  Location     Type
 46919 ;;		None
 46920 ;; Auto vars:     Size  Location     Type
 46921 ;;  command         1    8[COMRAM] unsigned char 
 46922 ;; Return value:  Size  Location     Type
 46923 ;;                  1    wreg      void 
 46924 ;; Registers used:
 46925 ;;		wreg, status,2, status,0, cstack
 46926 ;; Tracked objects:
 46927 ;;		On entry : 0/0
 46928 ;;		On exit  : 0/0
 46929 ;;		Unchanged: 0/0
 46930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46935 ;;Total ram usage:        1 bytes
 46936 ;; Hardware stack levels used:    1
 46937 ;; Hardware stack levels required when called:    1
 46938 ;; This function calls:
 46939 ;;		_spi_tx
 46940 ;; This function is called by:
 46941 ;;		__flash_is_busy
 46942 ;;		_flash_set_power_state
 46943 ;; This function uses a non-reentrant model
 46944 ;;
 46945                           
 46946                           	psect	text237
 46947  0093E8                     __ptext237:
 46948                           	opt stack 0
 46949  0093E8                     __flash_wakeup:
 46950                           	opt stack 25
 46951                           
 46952                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 46953                           
 46954                           ;incstack = 0
 46955  0093E8  D021               	goto	l1770
 46956  0093EA                     
 46957                           ;flash.c: 135: command = 0xAB;
 46958  0093EA  0EAB               	movlw	171
 46959  0093EC  6E09               	movwf	__flash_wakeup@command,c
 46960                           
 46961                           ;flash.c: 136: spi_tx(&command, 1);
 46962  0093EE  0E09               	movlw	low __flash_wakeup@command
 46963  0093F0  6E01               	movwf	spi_tx@data,c
 46964  0093F2  0E00               	movlw	high __flash_wakeup@command
 46965  0093F4  6E02               	movwf	spi_tx@data+1,c
 46966  0093F6  0E00               	movlw	0
 46967  0093F8  6E04               	movwf	spi_tx@length+1,c
 46968  0093FA  0E01               	movlw	1
 46969  0093FC  6E03               	movwf	spi_tx@length,c
 46970  0093FE  ECC6  F048         	call	_spi_tx	;wreg free
 46971                           
 46972                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 46973  009402  0E17               	movlw	23
 46974  009404                     u14797:
 46975  009404  2EE8               	decfsz	wreg,f,c
 46976  009406  D7FE               	bra	u14797
 46977  009408  F000               	nop	
 46978                           
 46979                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 46980  00940A  0E00               	movlw	0
 46981  00940C  0100               	movlb	0	; () banked
 46982  00940E  6FE3               	movwf	_power_state& (0+255),b
 46983                           
 46984                           ;flash.c: 139: break;
 46985  009410  0012               	return	
 46986  009412                     l1773:
 46987                           
 46988                           ; BSR set to: 0
 46989                           ;flash.c: 144: LATDbits.LD7 = 0;
 46990  009412  9E8C               	bcf	3980,7,c	;volatile
 46991                           
 46992                           ; BSR set to: 0
 46993                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 46994  009414  0E0D               	movlw	13
 46995  009416                     u14807:
 46996  009416  2EE8               	decfsz	wreg,f,c
 46997  009418  D7FE               	bra	u14807
 46998  00941A  F000               	nop	
 46999                           
 47000                           ;flash.c: 146: LATDbits.LD7 = 1;
 47001  00941C  8E8C               	bsf	3980,7,c	;volatile
 47002                           
 47003                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 47004  00941E  0E50               	movlw	80
 47005  009420                     u14817:
 47006  009420  2EE8               	decfsz	wreg,f,c
 47007  009422  D7FE               	bra	u14817
 47008                           
 47009                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 47010  009424  0E00               	movlw	0
 47011  009426  0100               	movlb	0	; () banked
 47012  009428  6FE3               	movwf	_power_state& (0+255),b
 47013                           
 47014                           ; BSR set to: 0
 47015                           ;flash.c: 150: }
 47016                           
 47017                           ;flash.c: 149: break;
 47018  00942A  0012               	return	
 47019  00942C                     l1770:
 47020                           
 47021                           ; BSR set to: 0
 47022  00942C  0100               	movlb	0	; () banked
 47023  00942E  51E3               	movf	_power_state& (0+255),w,b
 47024                           
 47025                           ; Switch size 1, requested type "space"
 47026                           ; Number of cases is 2, Range of values is 1 to 2
 47027                           ; switch strategies available:
 47028                           ; Name         Instructions Cycles
 47029                           ; simple_byte            7     4 (average)
 47030                           ;	Chosen strategy is simple_byte
 47031  009430  0A01               	xorlw	1	; case 1
 47032  009432  B4D8               	btfsc	status,2,c
 47033  009434  D7DA               	goto	l1771
 47034  009436  0A03               	xorlw	3	; case 2
 47035  009438  A4D8               	btfss	status,2,c
 47036  00943A  0012               	return	
 47037  00943C  D7EA               	goto	l1773
 47038  00943E                     __end_of__flash_wakeup:
 47039                           	opt stack 0
 47040                           tosu	equ	0xFFF
 47041                           tosh	equ	0xFFE
 47042                           tosl	equ	0xFFD
 47043                           pclath	equ	0xFFA
 47044                           tblptru	equ	0xFF8
 47045                           tblptrh	equ	0xFF7
 47046                           tblptrl	equ	0xFF6
 47047                           tablat	equ	0xFF5
 47048                           prodh	equ	0xFF4
 47049                           prodl	equ	0xFF3
 47050                           intcon	equ	0xFF2
 47051                           intcon2	equ	0xFF1
 47052                           intcon3	equ	0xFF0
 47053                           indf0	equ	0xFEF
 47054                           postinc0	equ	0xFEE
 47055                           fsr0h	equ	0xFEA
 47056                           fsr0l	equ	0xFE9
 47057                           wreg	equ	0xFE8
 47058                           indf1	equ	0xFE7
 47059                           postdec1	equ	0xFE5
 47060                           plusw1	equ	0xFE3
 47061                           fsr1h	equ	0xFE2
 47062                           fsr1l	equ	0xFE1
 47063                           indf2	equ	0xFDF
 47064                           postinc2	equ	0xFDE
 47065                           postdec2	equ	0xFDD
 47066                           plusw2	equ	0xFDB
 47067                           fsr2h	equ	0xFDA
 47068                           fsr2l	equ	0xFD9
 47069                           status	equ	0xFD8
 47070                           
 47071 ;; *************** function _spi_tx *****************
 47072 ;; Defined at:
 47073 ;;		line 349 in file "spi.c"
 47074 ;; Parameters:    Size  Location     Type
 47075 ;;  data            2    0[COMRAM] PTR unsigned char 
 47076 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 47077 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 47078 ;;  length          2    2[COMRAM] unsigned int 
 47079 ;; Auto vars:     Size  Location     Type
 47080 ;;		None
 47081 ;; Return value:  Size  Location     Type
 47082 ;;                  1    wreg      void 
 47083 ;; Registers used:
 47084 ;;		wreg, status,2, status,0
 47085 ;; Tracked objects:
 47086 ;;		On entry : 0/0
 47087 ;;		On exit  : 0/0
 47088 ;;		Unchanged: 0/0
 47089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47092 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47093 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47094 ;;Total ram usage:        8 bytes
 47095 ;; Hardware stack levels used:    1
 47096 ;; This function calls:
 47097 ;;		Nothing
 47098 ;; This function is called by:
 47099 ;;		__flash_set_page_size
 47100 ;;		__flash_wakeup
 47101 ;;		__flash_copy_page_to_buffer
 47102 ;;		__flash_compare_page_to_buffer
 47103 ;;		__flash_write_page_from_buffer
 47104 ;;		__flash_erase_page
 47105 ;;		_flash_set_power_state
 47106 ;; This function uses a non-reentrant model
 47107 ;;
 47108                           
 47109                           	psect	text238
 47110  00918C                     __ptext238:
 47111                           	opt stack 0
 47112  00918C                     _spi_tx:
 47113                           	opt stack 27
 47114                           
 47115                           ;spi.c: 352: DMACON1bits.SSCON1 = 0;
 47116                           
 47117                           ; BSR set to: 0
 47118                           ;incstack = 0
 47119  00918C  9E88               	bcf	3976,7,c	;volatile
 47120                           
 47121                           ;spi.c: 353: DMACON1bits.SSCON0 = 0;
 47122  00918E  9C88               	bcf	3976,6,c	;volatile
 47123                           
 47124                           ;spi.c: 355: DMACON1bits.TXINC = 1;
 47125  009190  8A88               	bsf	3976,5,c	;volatile
 47126                           
 47127                           ;spi.c: 357: DMACON1bits.RXINC = 0;
 47128  009192  9888               	bcf	3976,4,c	;volatile
 47129                           
 47130                           ;spi.c: 359: DMACON1bits.DUPLEX1 = 0;
 47131  009194  9688               	bcf	3976,3,c	;volatile
 47132                           
 47133                           ;spi.c: 360: DMACON1bits.DUPLEX0 = 1;
 47134  009196  8488               	bsf	3976,2,c	;volatile
 47135                           
 47136                           ;spi.c: 362: DMACON1bits.DLYINTEN = 0;
 47137  009198  9288               	bcf	3976,1,c	;volatile
 47138                           
 47139                           ;spi.c: 364: DMACON2bits.DLYCYC = 0b0000;
 47140  00919A  9886               	bcf	3974,4,c	;volatile
 47141  00919C  9A86               	bcf	3974,5,c	;volatile
 47142  00919E  9C86               	bcf	3974,6,c	;volatile
 47143  0091A0  9E86               	bcf	3974,7,c	;volatile
 47144                           
 47145                           ;spi.c: 366: DMACON2bits.INTLVL = 0b0000;
 47146  0091A2  9086               	bcf	3974,0,c	;volatile
 47147  0091A4  9286               	bcf	3974,1,c	;volatile
 47148  0091A6  9486               	bcf	3974,2,c	;volatile
 47149  0091A8  9686               	bcf	3974,3,c	;volatile
 47150                           
 47151                           ;spi.c: 369: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 47152  0091AA  5002               	movf	spi_tx@data+1,w,c
 47153  0091AC  6E6A               	movwf	3946,c	;volatile
 47154                           
 47155                           ;spi.c: 370: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 47156  0091AE  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 47157                           
 47158                           ;spi.c: 373: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 47159  0091B2  0EFF               	movlw	255
 47160  0091B4  6E05               	movwf	??_spi_tx& (0+255),c
 47161  0091B6  0EFF               	movlw	255
 47162  0091B8  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 47163  0091BA  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 47164  0091BE  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 47165  0091C2  5005               	movf	??_spi_tx,w,c
 47166  0091C4  2607               	addwf	??_spi_tx+2,f,c
 47167  0091C6  5006               	movf	??_spi_tx+1,w,c
 47168  0091C8  2208               	addwfc	??_spi_tx+3,f,c
 47169  0091CA  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 47170  0091CE  6A08               	clrf	??_spi_tx+3,c
 47171  0091D0  5007               	movf	??_spi_tx+2,w,c
 47172  0091D2  6E66               	movwf	3942,c	;volatile
 47173                           
 47174                           ;spi.c: 374: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 47175  0091D4  0403               	decf	spi_tx@length,w,c
 47176  0091D6  6E67               	movwf	3943,c	;volatile
 47177                           
 47178                           ;spi.c: 377: LATDbits.LD7 = 0;
 47179  0091D8  9E8C               	bcf	3980,7,c	;volatile
 47180                           
 47181                           ;spi.c: 378: DMACON1bits.DMAEN = 1;
 47182  0091DA  8088               	bsf	3976,0,c	;volatile
 47183  0091DC  B088               	btfsc	3976,0,c	;volatile
 47184  0091DE  D7FE               	goto	l3097
 47185                           
 47186                           ;spi.c: 380: LATDbits.LD7 = 1;
 47187  0091E0  8E8C               	bsf	3980,7,c	;volatile
 47188  0091E2  0012               	return		;funcret
 47189  0091E4                     __end_of_spi_tx:
 47190                           	opt stack 0
 47191                           tosu	equ	0xFFF
 47192                           tosh	equ	0xFFE
 47193                           tosl	equ	0xFFD
 47194                           pclath	equ	0xFFA
 47195                           tblptru	equ	0xFF8
 47196                           tblptrh	equ	0xFF7
 47197                           tblptrl	equ	0xFF6
 47198                           tablat	equ	0xFF5
 47199                           prodh	equ	0xFF4
 47200                           prodl	equ	0xFF3
 47201                           intcon	equ	0xFF2
 47202                           intcon2	equ	0xFF1
 47203                           intcon3	equ	0xFF0
 47204                           indf0	equ	0xFEF
 47205                           postinc0	equ	0xFEE
 47206                           fsr0h	equ	0xFEA
 47207                           fsr0l	equ	0xFE9
 47208                           wreg	equ	0xFE8
 47209                           indf1	equ	0xFE7
 47210                           postdec1	equ	0xFE5
 47211                           plusw1	equ	0xFE3
 47212                           fsr1h	equ	0xFE2
 47213                           fsr1l	equ	0xFE1
 47214                           indf2	equ	0xFDF
 47215                           postinc2	equ	0xFDE
 47216                           postdec2	equ	0xFDD
 47217                           plusw2	equ	0xFDB
 47218                           fsr2h	equ	0xFDA
 47219                           fsr2l	equ	0xFD9
 47220                           status	equ	0xFD8
 47221                           
 47222 ;; *************** function __flash_get_status *****************
 47223 ;; Defined at:
 47224 ;;		line 117 in file "flash.c"
 47225 ;; Parameters:    Size  Location     Type
 47226 ;;		None
 47227 ;; Auto vars:     Size  Location     Type
 47228 ;;  status          2   15[COMRAM] unsigned int 
 47229 ;;  command         1   14[COMRAM] unsigned char 
 47230 ;; Return value:  Size  Location     Type
 47231 ;;                  2   12[COMRAM] unsigned int 
 47232 ;; Registers used:
 47233 ;;		wreg, status,2, status,0, cstack
 47234 ;; Tracked objects:
 47235 ;;		On entry : 0/0
 47236 ;;		On exit  : 0/0
 47237 ;;		Unchanged: 0/0
 47238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47240 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47243 ;;Total ram usage:        5 bytes
 47244 ;; Hardware stack levels used:    1
 47245 ;; Hardware stack levels required when called:    1
 47246 ;; This function calls:
 47247 ;;		_spi_tx_rx
 47248 ;; This function is called by:
 47249 ;;		__flash_compare_page_to_buffer
 47250 ;;		__flash_is_busy
 47251 ;; This function uses a non-reentrant model
 47252 ;;
 47253                           
 47254                           	psect	text239
 47255  009C0A                     __ptext239:
 47256                           	opt stack 0
 47257  009C0A                     __flash_get_status:
 47258                           	opt stack 25
 47259                           
 47260                           ;flash.c: 121: uint8_t command = 0xD7;
 47261                           
 47262                           ;incstack = 0
 47263  009C0A  0ED7               	movlw	215
 47264  009C0C  6E0F               	movwf	__flash_get_status@command,c
 47265                           
 47266                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 47267  009C0E  0E0F               	movlw	low __flash_get_status@command
 47268  009C10  6E01               	movwf	spi_tx_rx@command,c
 47269  009C12  0E00               	movlw	high __flash_get_status@command
 47270  009C14  6E02               	movwf	spi_tx_rx@command+1,c
 47271  009C16  0E00               	movlw	0
 47272  009C18  6E04               	movwf	spi_tx_rx@command_length+1,c
 47273  009C1A  0E01               	movlw	1
 47274  009C1C  6E03               	movwf	spi_tx_rx@command_length,c
 47275  009C1E  0E10               	movlw	low __flash_get_status@status
 47276  009C20  6E05               	movwf	spi_tx_rx@data,c
 47277  009C22  0E00               	movlw	high __flash_get_status@status
 47278  009C24  6E06               	movwf	spi_tx_rx@data+1,c
 47279  009C26  0E00               	movlw	0
 47280  009C28  6E08               	movwf	spi_tx_rx@data_length+1,c
 47281  009C2A  0E02               	movlw	2
 47282  009C2C  6E07               	movwf	spi_tx_rx@data_length,c
 47283  009C2E  ECC9  F041         	call	_spi_tx_rx	;wreg free
 47284                           
 47285                           ;flash.c: 124: return status;
 47286  009C32  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 47287  009C36  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 47288  009C3A  0012               	return	
 47289  009C3C                     __end_of__flash_get_status:
 47290                           	opt stack 0
 47291                           tosu	equ	0xFFF
 47292                           tosh	equ	0xFFE
 47293                           tosl	equ	0xFFD
 47294                           pclath	equ	0xFFA
 47295                           tblptru	equ	0xFF8
 47296                           tblptrh	equ	0xFF7
 47297                           tblptrl	equ	0xFF6
 47298                           tablat	equ	0xFF5
 47299                           prodh	equ	0xFF4
 47300                           prodl	equ	0xFF3
 47301                           intcon	equ	0xFF2
 47302                           intcon2	equ	0xFF1
 47303                           intcon3	equ	0xFF0
 47304                           indf0	equ	0xFEF
 47305                           postinc0	equ	0xFEE
 47306                           fsr0h	equ	0xFEA
 47307                           fsr0l	equ	0xFE9
 47308                           wreg	equ	0xFE8
 47309                           indf1	equ	0xFE7
 47310                           postdec1	equ	0xFE5
 47311                           plusw1	equ	0xFE3
 47312                           fsr1h	equ	0xFE2
 47313                           fsr1l	equ	0xFE1
 47314                           indf2	equ	0xFDF
 47315                           postinc2	equ	0xFDE
 47316                           postdec2	equ	0xFDD
 47317                           plusw2	equ	0xFDB
 47318                           fsr2h	equ	0xFDA
 47319                           fsr2l	equ	0xFD9
 47320                           status	equ	0xFD8
 47321                           
 47322 ;; *************** function _spi_tx_rx *****************
 47323 ;; Defined at:
 47324 ;;		line 440 in file "spi.c"
 47325 ;; Parameters:    Size  Location     Type
 47326 ;;  command         2    0[COMRAM] PTR unsigned char 
 47327 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 47328 ;;  command_leng    2    2[COMRAM] unsigned int 
 47329 ;;  data            2    4[COMRAM] PTR unsigned char 
 47330 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 47331 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 47332 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 47333 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 47334 ;;  data_length     2    6[COMRAM] unsigned int 
 47335 ;; Auto vars:     Size  Location     Type
 47336 ;;		None
 47337 ;; Return value:  Size  Location     Type
 47338 ;;                  1    wreg      void 
 47339 ;; Registers used:
 47340 ;;		wreg, status,2, status,0
 47341 ;; Tracked objects:
 47342 ;;		On entry : 0/0
 47343 ;;		On exit  : 0/0
 47344 ;;		Unchanged: 0/0
 47345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47346 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47349 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47350 ;;Total ram usage:       12 bytes
 47351 ;; Hardware stack levels used:    1
 47352 ;; This function calls:
 47353 ;;		Nothing
 47354 ;; This function is called by:
 47355 ;;		__flash_get_status
 47356 ;;		__flash_partial_read
 47357 ;;		__flash_buffer_read
 47358 ;; This function uses a non-reentrant model
 47359 ;;
 47360                           
 47361                           	psect	text240
 47362  008392                     __ptext240:
 47363                           	opt stack 0
 47364  008392                     _spi_tx_rx:
 47365                           	opt stack 25
 47366                           
 47367                           ;spi.c: 443: DMACON1bits.SSCON1 = 0;
 47368                           
 47369                           ;incstack = 0
 47370  008392  9E88               	bcf	3976,7,c	;volatile
 47371                           
 47372                           ;spi.c: 444: DMACON1bits.SSCON0 = 0;
 47373  008394  9C88               	bcf	3976,6,c	;volatile
 47374                           
 47375                           ;spi.c: 446: DMACON1bits.TXINC = 1;
 47376  008396  8A88               	bsf	3976,5,c	;volatile
 47377                           
 47378                           ;spi.c: 448: DMACON1bits.RXINC = 0;
 47379  008398  9888               	bcf	3976,4,c	;volatile
 47380                           
 47381                           ;spi.c: 450: DMACON1bits.DUPLEX1 = 0;
 47382  00839A  9688               	bcf	3976,3,c	;volatile
 47383                           
 47384                           ;spi.c: 451: DMACON1bits.DUPLEX0 = 1;
 47385  00839C  8488               	bsf	3976,2,c	;volatile
 47386                           
 47387                           ;spi.c: 453: DMACON1bits.DLYINTEN = 0;
 47388  00839E  9288               	bcf	3976,1,c	;volatile
 47389                           
 47390                           ;spi.c: 455: DMACON2bits.DLYCYC = 0b0000;
 47391  0083A0  9886               	bcf	3974,4,c	;volatile
 47392  0083A2  9A86               	bcf	3974,5,c	;volatile
 47393  0083A4  9C86               	bcf	3974,6,c	;volatile
 47394  0083A6  9E86               	bcf	3974,7,c	;volatile
 47395                           
 47396                           ;spi.c: 457: DMACON2bits.INTLVL = 0b0000;
 47397  0083A8  9086               	bcf	3974,0,c	;volatile
 47398  0083AA  9286               	bcf	3974,1,c	;volatile
 47399  0083AC  9486               	bcf	3974,2,c	;volatile
 47400  0083AE  9686               	bcf	3974,3,c	;volatile
 47401                           
 47402                           ;spi.c: 460: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 47403  0083B0  5002               	movf	spi_tx_rx@command+1,w,c
 47404  0083B2  6E6A               	movwf	3946,c	;volatile
 47405                           
 47406                           ;spi.c: 461: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 47407  0083B4  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 47408                           
 47409                           ;spi.c: 464: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 47410  0083B8  0EFF               	movlw	255
 47411  0083BA  6E09               	movwf	??_spi_tx_rx& (0+255),c
 47412  0083BC  0EFF               	movlw	255
 47413  0083BE  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 47414  0083C0  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 47415  0083C4  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 47416  0083C8  5009               	movf	??_spi_tx_rx,w,c
 47417  0083CA  260B               	addwf	??_spi_tx_rx+2,f,c
 47418  0083CC  500A               	movf	??_spi_tx_rx+1,w,c
 47419  0083CE  220C               	addwfc	??_spi_tx_rx+3,f,c
 47420  0083D0  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 47421  0083D4  6A0C               	clrf	??_spi_tx_rx+3,c
 47422  0083D6  500B               	movf	??_spi_tx_rx+2,w,c
 47423  0083D8  6E66               	movwf	3942,c	;volatile
 47424                           
 47425                           ;spi.c: 465: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 47426  0083DA  0403               	decf	spi_tx_rx@command_length,w,c
 47427  0083DC  6E67               	movwf	3943,c	;volatile
 47428                           
 47429                           ;spi.c: 468: LATDbits.LD7 = 0;
 47430  0083DE  9E8C               	bcf	3980,7,c	;volatile
 47431                           
 47432                           ;spi.c: 471: DMACON1bits.DMAEN = 1;
 47433  0083E0  8088               	bsf	3976,0,c	;volatile
 47434  0083E2  B088               	btfsc	3976,0,c	;volatile
 47435  0083E4  D7FE               	goto	l3112
 47436                           
 47437                           ;spi.c: 475: DMACON1bits.TXINC = 0;
 47438  0083E6  9A88               	bcf	3976,5,c	;volatile
 47439                           
 47440                           ;spi.c: 477: DMACON1bits.RXINC = 1;
 47441  0083E8  8888               	bsf	3976,4,c	;volatile
 47442                           
 47443                           ;spi.c: 479: DMACON1bits.DUPLEX1 = 0;
 47444  0083EA  9688               	bcf	3976,3,c	;volatile
 47445                           
 47446                           ;spi.c: 480: DMACON1bits.DUPLEX0 = 0;
 47447  0083EC  9488               	bcf	3976,2,c	;volatile
 47448                           
 47449                           ;spi.c: 483: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 47450  0083EE  5006               	movf	spi_tx_rx@data+1,w,c
 47451  0083F0  6E68               	movwf	3944,c	;volatile
 47452                           
 47453                           ;spi.c: 484: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 47454  0083F2  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 47455                           
 47456                           ;spi.c: 487: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 47457  0083F6  0EFF               	movlw	255
 47458  0083F8  6E09               	movwf	??_spi_tx_rx& (0+255),c
 47459  0083FA  0EFF               	movlw	255
 47460  0083FC  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 47461  0083FE  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 47462  008402  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 47463  008406  5009               	movf	??_spi_tx_rx,w,c
 47464  008408  260B               	addwf	??_spi_tx_rx+2,f,c
 47465  00840A  500A               	movf	??_spi_tx_rx+1,w,c
 47466  00840C  220C               	addwfc	??_spi_tx_rx+3,f,c
 47467  00840E  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 47468  008412  6A0C               	clrf	??_spi_tx_rx+3,c
 47469  008414  500B               	movf	??_spi_tx_rx+2,w,c
 47470  008416  6E66               	movwf	3942,c	;volatile
 47471                           
 47472                           ;spi.c: 488: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 47473  008418  0407               	decf	spi_tx_rx@data_length,w,c
 47474  00841A  6E67               	movwf	3943,c	;volatile
 47475                           
 47476                           ;spi.c: 491: DMACON1bits.DMAEN = 1;
 47477  00841C  8088               	bsf	3976,0,c	;volatile
 47478  00841E  B088               	btfsc	3976,0,c	;volatile
 47479  008420  D7FE               	goto	l3115
 47480                           
 47481                           ;spi.c: 495: LATDbits.LD7 = 1;
 47482  008422  8E8C               	bsf	3980,7,c	;volatile
 47483  008424  0012               	return		;funcret
 47484  008426                     __end_of_spi_tx_rx:
 47485                           	opt stack 0
 47486                           tosu	equ	0xFFF
 47487                           tosh	equ	0xFFE
 47488                           tosl	equ	0xFFD
 47489                           pclath	equ	0xFFA
 47490                           tblptru	equ	0xFF8
 47491                           tblptrh	equ	0xFF7
 47492                           tblptrl	equ	0xFF6
 47493                           tablat	equ	0xFF5
 47494                           prodh	equ	0xFF4
 47495                           prodl	equ	0xFF3
 47496                           intcon	equ	0xFF2
 47497                           intcon2	equ	0xFF1
 47498                           intcon3	equ	0xFF0
 47499                           indf0	equ	0xFEF
 47500                           postinc0	equ	0xFEE
 47501                           fsr0h	equ	0xFEA
 47502                           fsr0l	equ	0xFE9
 47503                           wreg	equ	0xFE8
 47504                           indf1	equ	0xFE7
 47505                           postdec1	equ	0xFE5
 47506                           plusw1	equ	0xFE3
 47507                           fsr1h	equ	0xFE2
 47508                           fsr1l	equ	0xFE1
 47509                           indf2	equ	0xFDF
 47510                           postinc2	equ	0xFDE
 47511                           postdec2	equ	0xFDD
 47512                           plusw2	equ	0xFDB
 47513                           fsr2h	equ	0xFDA
 47514                           fsr2l	equ	0xFD9
 47515                           status	equ	0xFD8
 47516                           
 47517 ;; *************** function __sector_from_file_number *****************
 47518 ;; Defined at:
 47519 ;;		line 52 in file "fat16.c"
 47520 ;; Parameters:    Size  Location     Type
 47521 ;;  file_number     1    wreg     unsigned char 
 47522 ;; Auto vars:     Size  Location     Type
 47523 ;;  file_number     1    2[COMRAM] unsigned char 
 47524 ;;  sector          2    3[COMRAM] unsigned int 
 47525 ;; Return value:  Size  Location     Type
 47526 ;;                  2    0[COMRAM] unsigned int 
 47527 ;; Registers used:
 47528 ;;		wreg, status,2, status,0
 47529 ;; Tracked objects:
 47530 ;;		On entry : 0/0
 47531 ;;		On exit  : 0/0
 47532 ;;		Unchanged: 0/0
 47533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47535 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47537 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47538 ;;Total ram usage:        5 bytes
 47539 ;; Hardware stack levels used:    1
 47540 ;; This function calls:
 47541 ;;		Nothing
 47542 ;; This function is called by:
 47543 ;;		__root_is_available
 47544 ;;		__write_root
 47545 ;;		__delete_root
 47546 ;;		__get_first_cluster
 47547 ;;		_fat_get_file_size
 47548 ;;		_fat_get_file_information
 47549 ;; This function uses a non-reentrant model
 47550 ;;
 47551                           
 47552                           	psect	text241
 47553  009D76                     __ptext241:
 47554                           	opt stack 0
 47555  009D76                     __sector_from_file_number:
 47556                           	opt stack 27
 47557                           
 47558                           ;incstack = 0
 47559                           ;__sector_from_file_number@file_number stored from wreg
 47560  009D76  6E03               	movwf	__sector_from_file_number@file_number,c
 47561                           
 47562                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 47563  009D78  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 47564  009D7C  6A05               	clrf	__sector_from_file_number@sector+1,c
 47565                           
 47566                           ;fat16.c: 56: sector >>= 4;
 47567  009D7E  3A04               	swapf	__sector_from_file_number@sector,f,c
 47568  009D80  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 47569  009D82  0E0F               	movlw	15
 47570  009D84  1604               	andwf	__sector_from_file_number@sector,f,c
 47571  009D86  5005               	movf	__sector_from_file_number@sector+1,w,c
 47572  009D88  0BF0               	andlw	240
 47573  009D8A  1204               	iorwf	__sector_from_file_number@sector,f,c
 47574  009D8C  0E0F               	movlw	15
 47575  009D8E  1605               	andwf	__sector_from_file_number@sector+1,f,c
 47576                           
 47577                           ;fat16.c: 57: sector += 34;
 47578  009D90  0E22               	movlw	34
 47579  009D92  2604               	addwf	__sector_from_file_number@sector,f,c
 47580  009D94  0E00               	movlw	0
 47581  009D96  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 47582                           
 47583                           ;fat16.c: 58: return sector;
 47584  009D98  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 47585  009D9C  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 47586  009DA0  0012               	return	
 47587  009DA2                     __end_of__sector_from_file_number:
 47588                           	opt stack 0
 47589                           tosu	equ	0xFFF
 47590                           tosh	equ	0xFFE
 47591                           tosl	equ	0xFFD
 47592                           pclath	equ	0xFFA
 47593                           tblptru	equ	0xFF8
 47594                           tblptrh	equ	0xFF7
 47595                           tblptrl	equ	0xFF6
 47596                           tablat	equ	0xFF5
 47597                           prodh	equ	0xFF4
 47598                           prodl	equ	0xFF3
 47599                           intcon	equ	0xFF2
 47600                           intcon2	equ	0xFF1
 47601                           intcon3	equ	0xFF0
 47602                           indf0	equ	0xFEF
 47603                           postinc0	equ	0xFEE
 47604                           fsr0h	equ	0xFEA
 47605                           fsr0l	equ	0xFE9
 47606                           wreg	equ	0xFE8
 47607                           indf1	equ	0xFE7
 47608                           postdec1	equ	0xFE5
 47609                           plusw1	equ	0xFE3
 47610                           fsr1h	equ	0xFE2
 47611                           fsr1l	equ	0xFE1
 47612                           indf2	equ	0xFDF
 47613                           postinc2	equ	0xFDE
 47614                           postdec2	equ	0xFDD
 47615                           plusw2	equ	0xFDB
 47616                           fsr2h	equ	0xFDA
 47617                           fsr2l	equ	0xFD9
 47618                           status	equ	0xFD8
 47619                           
 47620 ;; *************** function __offset_from_file_number *****************
 47621 ;; Defined at:
 47622 ;;		line 61 in file "fat16.c"
 47623 ;; Parameters:    Size  Location     Type
 47624 ;;  file_number     1    wreg     unsigned char 
 47625 ;; Auto vars:     Size  Location     Type
 47626 ;;  file_number     1    2[COMRAM] unsigned char 
 47627 ;;  offset          2    3[COMRAM] unsigned int 
 47628 ;; Return value:  Size  Location     Type
 47629 ;;                  2    0[COMRAM] unsigned int 
 47630 ;; Registers used:
 47631 ;;		wreg, status,2, status,0
 47632 ;; Tracked objects:
 47633 ;;		On entry : 0/0
 47634 ;;		On exit  : 0/0
 47635 ;;		Unchanged: 0/0
 47636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47638 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47640 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47641 ;;Total ram usage:        5 bytes
 47642 ;; Hardware stack levels used:    1
 47643 ;; This function calls:
 47644 ;;		Nothing
 47645 ;; This function is called by:
 47646 ;;		__root_is_available
 47647 ;;		__write_root
 47648 ;;		__delete_root
 47649 ;;		__get_first_cluster
 47650 ;;		_fat_get_file_size
 47651 ;;		_fat_get_file_information
 47652 ;; This function uses a non-reentrant model
 47653 ;;
 47654                           
 47655                           	psect	text242
 47656  009E8E                     __ptext242:
 47657                           	opt stack 0
 47658  009E8E                     __offset_from_file_number:
 47659                           	opt stack 26
 47660                           
 47661                           ;incstack = 0
 47662                           ;__offset_from_file_number@file_number stored from wreg
 47663  009E8E  6E03               	movwf	__offset_from_file_number@file_number,c
 47664                           
 47665                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 47666  009E90  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 47667  009E94  6A05               	clrf	__offset_from_file_number@offset+1,c
 47668                           
 47669                           ;fat16.c: 65: offset &= 0b1111;
 47670  009E96  0E0F               	movlw	15
 47671  009E98  1604               	andwf	__offset_from_file_number@offset,f,c
 47672  009E9A  0E00               	movlw	0
 47673  009E9C  1605               	andwf	__offset_from_file_number@offset+1,f,c
 47674                           
 47675                           ;fat16.c: 66: offset <<= 5;
 47676  009E9E  0E05               	movlw	5
 47677  009EA0                     u7915:
 47678  009EA0  90D8               	bcf	status,0,c
 47679  009EA2  3604               	rlcf	__offset_from_file_number@offset,f,c
 47680  009EA4  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 47681  009EA6  2EE8               	decfsz	wreg,f,c
 47682  009EA8  D7FB               	goto	u7915
 47683                           
 47684                           ;fat16.c: 67: return offset;
 47685  009EAA  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 47686  009EAE  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 47687  009EB2  0012               	return	
 47688  009EB4                     __end_of__offset_from_file_number:
 47689                           	opt stack 0
 47690                           tosu	equ	0xFFF
 47691                           tosh	equ	0xFFE
 47692                           tosl	equ	0xFFD
 47693                           pclath	equ	0xFFA
 47694                           tblptru	equ	0xFF8
 47695                           tblptrh	equ	0xFF7
 47696                           tblptrl	equ	0xFF6
 47697                           tablat	equ	0xFF5
 47698                           prodh	equ	0xFF4
 47699                           prodl	equ	0xFF3
 47700                           intcon	equ	0xFF2
 47701                           intcon2	equ	0xFF1
 47702                           intcon3	equ	0xFF0
 47703                           indf0	equ	0xFEF
 47704                           postinc0	equ	0xFEE
 47705                           fsr0h	equ	0xFEA
 47706                           fsr0l	equ	0xFE9
 47707                           wreg	equ	0xFE8
 47708                           indf1	equ	0xFE7
 47709                           postdec1	equ	0xFE5
 47710                           plusw1	equ	0xFE3
 47711                           fsr1h	equ	0xFE2
 47712                           fsr1l	equ	0xFE1
 47713                           indf2	equ	0xFDF
 47714                           postinc2	equ	0xFDE
 47715                           postdec2	equ	0xFDD
 47716                           plusw2	equ	0xFDB
 47717                           fsr2h	equ	0xFDA
 47718                           fsr2l	equ	0xFD9
 47719                           status	equ	0xFD8
 47720                           
 47721 ;; *************** function _USBTransferOnePacket *****************
 47722 ;; Defined at:
 47723 ;;		line 995 in file "usb_device.c"
 47724 ;; Parameters:    Size  Location     Type
 47725 ;;  ep              1    wreg     unsigned char 
 47726 ;;  dir             1    0[COMRAM] unsigned char 
 47727 ;;  data            2    1[COMRAM] PTR unsigned char 
 47728 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 47729 ;;		 -> msd_cbw(31), NULL(0), 
 47730 ;;  len             1    3[COMRAM] unsigned char 
 47731 ;; Auto vars:     Size  Location     Type
 47732 ;;  ep              1    8[COMRAM] unsigned char 
 47733 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 47734 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 47735 ;; Return value:  Size  Location     Type
 47736 ;;                  2    0[COMRAM] PTR void 
 47737 ;; Registers used:
 47738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47739 ;; Tracked objects:
 47740 ;;		On entry : 0/0
 47741 ;;		On exit  : 0/0
 47742 ;;		Unchanged: 0/0
 47743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47745 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47747 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47748 ;;Total ram usage:       11 bytes
 47749 ;; Hardware stack levels used:    1
 47750 ;; This function calls:
 47751 ;;		Nothing
 47752 ;; This function is called by:
 47753 ;;		_USBMSDInit
 47754 ;;		_USBCheckMSDRequest
 47755 ;;		_MSDTasks
 47756 ;;		_MSDProcessCommandMediaPresent
 47757 ;;		_MSDReadHandler
 47758 ;;		_MSDWriteHandler
 47759 ;;		_MSDTransferTerminated
 47760 ;;		_APP_DeviceCustomHIDInitialize
 47761 ;;		_APP_DeviceCustomHIDTasks
 47762 ;; This function uses a non-reentrant model
 47763 ;;
 47764                           
 47765                           	psect	text243
 47766  0059F8                     __ptext243:
 47767                           	opt stack 0
 47768  0059F8                     _USBTransferOnePacket:
 47769                           	opt stack 27
 47770                           
 47771                           ;incstack = 0
 47772                           ;USBTransferOnePacket@ep stored from wreg
 47773  0059F8  6E09               	movwf	USBTransferOnePacket@ep,c
 47774                           
 47775                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 47776  0059FA  5001               	movf	USBTransferOnePacket@dir,w,c
 47777  0059FC  B4D8               	btfsc	status,2,c
 47778  0059FE  D007               	goto	l183
 47779                           
 47780                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 47781  005A00  5009               	movf	USBTransferOnePacket@ep,w,c
 47782  005A02  0D02               	mullw	2
 47783  005A04  0ECB               	movlw	low _pBDTEntryIn
 47784  005A06  24F3               	addwf	prodl,w,c
 47785  005A08  6ED9               	movwf	fsr2l,c
 47786  005A0A  0E00               	movlw	high _pBDTEntryIn
 47787  005A0C  D006               	goto	L55
 47788  005A0E                     l183:
 47789                           
 47790                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 47791  005A0E  5009               	movf	USBTransferOnePacket@ep,w,c
 47792  005A10  0D02               	mullw	2
 47793  005A12  0E46               	movlw	low _pBDTEntryOut
 47794  005A14  24F3               	addwf	prodl,w,c
 47795  005A16  6ED9               	movwf	fsr2l,c
 47796  005A18  0E01               	movlw	high _pBDTEntryOut
 47797  005A1A                     L55:
 47798  005A1A  20F4               	addwfc	prodh,w,c
 47799  005A1C  6EDA               	movwf	fsr2h,c
 47800  005A1E  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 47801  005A22  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 47802                           
 47803                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 47804  005A26  500A               	movf	USBTransferOnePacket@handle,w,c
 47805  005A28  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 47806  005A2A  A4D8               	btfss	status,2,c
 47807  005A2C  D005               	goto	l185
 47808                           
 47809                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 47810  005A2E  0E00               	movlw	0
 47811  005A30  6E01               	movwf	?_USBTransferOnePacket,c
 47812  005A32  0E00               	movlw	0
 47813  005A34  6E02               	movwf	?_USBTransferOnePacket+1,c
 47814  005A36  0012               	return	
 47815  005A38                     l185:
 47816                           
 47817                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 47818  005A38  EE20 F002          	lfsr	2,2
 47819  005A3C  500A               	movf	USBTransferOnePacket@handle,w,c
 47820  005A3E  26D9               	addwf	fsr2l,f,c
 47821  005A40  500B               	movf	USBTransferOnePacket@handle+1,w,c
 47822  005A42  22DA               	addwfc	fsr2h,f,c
 47823  005A44  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 47824  005A48  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 47825                           
 47826                           ;usb_device.c: 1030: handle->CNT = len;
 47827  005A4C  EE20 F001          	lfsr	2,1
 47828  005A50  500A               	movf	USBTransferOnePacket@handle,w,c
 47829  005A52  26D9               	addwf	fsr2l,f,c
 47830  005A54  500B               	movf	USBTransferOnePacket@handle+1,w,c
 47831  005A56  22DA               	addwfc	fsr2h,f,c
 47832  005A58  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 47833                           
 47834                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 47835  005A5C  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 47836  005A60  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 47837  005A64  0E40               	movlw	64
 47838  005A66  16DF               	andwf	indf2,f,c
 47839                           
 47840                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 47841  005A68  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 47842  005A6C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 47843  005A70  0E00               	movlw	0
 47844  005A72  86DB               	bsf	plusw2,3,c
 47845                           
 47846                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 47847  005A74  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 47848  005A78  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 47849  005A7C  0E00               	movlw	0
 47850  005A7E  8EDB               	bsf	plusw2,7,c
 47851                           
 47852                           ;usb_device.c: 1036: if(dir != 0)
 47853  005A80  5001               	movf	USBTransferOnePacket@dir,w,c
 47854  005A82  B4D8               	btfsc	status,2,c
 47855  005A84  D018               	goto	l187
 47856                           
 47857                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 47858  005A86  5009               	movf	USBTransferOnePacket@ep,w,c
 47859  005A88  0D02               	mullw	2
 47860  005A8A  0ECB               	movlw	low _pBDTEntryIn
 47861  005A8C  24F3               	addwf	prodl,w,c
 47862  005A8E  6ED9               	movwf	fsr2l,c
 47863  005A90  0E00               	movlw	high _pBDTEntryIn
 47864  005A92  20F4               	addwfc	prodh,w,c
 47865  005A94  6EDA               	movwf	fsr2h,c
 47866  005A96  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 47867  005A9A  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 47868  005A9E  0E04               	movlw	4
 47869  005AA0  1805               	xorwf	??_USBTransferOnePacket,w,c
 47870  005AA2  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 47871  005AA4  5006               	movf	??_USBTransferOnePacket+1,w,c
 47872  005AA6  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 47873  005AA8  5009               	movf	USBTransferOnePacket@ep,w,c
 47874  005AAA  0D02               	mullw	2
 47875  005AAC  0ECB               	movlw	low _pBDTEntryIn
 47876  005AAE  24F3               	addwf	prodl,w,c
 47877  005AB0  6ED9               	movwf	fsr2l,c
 47878  005AB2  0E00               	movlw	high _pBDTEntryIn
 47879  005AB4  D017               	goto	L56
 47880  005AB6                     l187:
 47881                           
 47882                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 47883  005AB6  5009               	movf	USBTransferOnePacket@ep,w,c
 47884  005AB8  0D02               	mullw	2
 47885  005ABA  0E46               	movlw	low _pBDTEntryOut
 47886  005ABC  24F3               	addwf	prodl,w,c
 47887  005ABE  6ED9               	movwf	fsr2l,c
 47888  005AC0  0E01               	movlw	high _pBDTEntryOut
 47889  005AC2  20F4               	addwfc	prodh,w,c
 47890  005AC4  6EDA               	movwf	fsr2h,c
 47891  005AC6  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 47892  005ACA  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 47893  005ACE  0E04               	movlw	4
 47894  005AD0  1805               	xorwf	??_USBTransferOnePacket,w,c
 47895  005AD2  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 47896  005AD4  5006               	movf	??_USBTransferOnePacket+1,w,c
 47897  005AD6  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 47898  005AD8  5009               	movf	USBTransferOnePacket@ep,w,c
 47899  005ADA  0D02               	mullw	2
 47900  005ADC  0E46               	movlw	low _pBDTEntryOut
 47901  005ADE  24F3               	addwf	prodl,w,c
 47902  005AE0  6ED9               	movwf	fsr2l,c
 47903  005AE2  0E01               	movlw	high _pBDTEntryOut
 47904  005AE4                     L56:
 47905  005AE4  20F4               	addwfc	prodh,w,c
 47906  005AE6  6EDA               	movwf	fsr2h,c
 47907  005AE8  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 47908  005AEC  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 47909                           
 47910                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 47911  005AF0  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 47912  005AF4  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 47913  005AF8  0012               	return	
 47914  005AFA                     __end_of_USBTransferOnePacket:
 47915                           	opt stack 0
 47916                           tosu	equ	0xFFF
 47917                           tosh	equ	0xFFE
 47918                           tosl	equ	0xFFD
 47919                           pclath	equ	0xFFA
 47920                           tblptru	equ	0xFF8
 47921                           tblptrh	equ	0xFF7
 47922                           tblptrl	equ	0xFF6
 47923                           tablat	equ	0xFF5
 47924                           prodh	equ	0xFF4
 47925                           prodl	equ	0xFF3
 47926                           intcon	equ	0xFF2
 47927                           intcon2	equ	0xFF1
 47928                           intcon3	equ	0xFF0
 47929                           indf0	equ	0xFEF
 47930                           postinc0	equ	0xFEE
 47931                           fsr0h	equ	0xFEA
 47932                           fsr0l	equ	0xFE9
 47933                           wreg	equ	0xFE8
 47934                           indf1	equ	0xFE7
 47935                           postdec1	equ	0xFE5
 47936                           plusw1	equ	0xFE3
 47937                           fsr1h	equ	0xFE2
 47938                           fsr1l	equ	0xFE1
 47939                           indf2	equ	0xFDF
 47940                           postinc2	equ	0xFDE
 47941                           postdec2	equ	0xFDD
 47942                           plusw2	equ	0xFDB
 47943                           fsr2h	equ	0xFDA
 47944                           fsr2l	equ	0xFD9
 47945                           status	equ	0xFD8
 47946                           tosu	equ	0xFFF
 47947                           tosh	equ	0xFFE
 47948                           tosl	equ	0xFFD
 47949                           pclath	equ	0xFFA
 47950                           tblptru	equ	0xFF8
 47951                           tblptrh	equ	0xFF7
 47952                           tblptrl	equ	0xFF6
 47953                           tablat	equ	0xFF5
 47954                           prodh	equ	0xFF4
 47955                           prodl	equ	0xFF3
 47956                           intcon	equ	0xFF2
 47957                           intcon2	equ	0xFF1
 47958                           intcon3	equ	0xFF0
 47959                           indf0	equ	0xFEF
 47960                           postinc0	equ	0xFEE
 47961                           fsr0h	equ	0xFEA
 47962                           fsr0l	equ	0xFE9
 47963                           wreg	equ	0xFE8
 47964                           indf1	equ	0xFE7
 47965                           postdec1	equ	0xFE5
 47966                           plusw1	equ	0xFE3
 47967                           fsr1h	equ	0xFE2
 47968                           fsr1l	equ	0xFE1
 47969                           indf2	equ	0xFDF
 47970                           postinc2	equ	0xFDE
 47971                           postdec2	equ	0xFDD
 47972                           plusw2	equ	0xFDB
 47973                           fsr2h	equ	0xFDA
 47974                           fsr2l	equ	0xFD9
 47975                           status	equ	0xFD8
 47976                           
 47977                           	psect	text244
 47978  000000                     __ptext244:
 47979                           	opt stack 0
 47980                           tosu	equ	0xFFF
 47981                           tosh	equ	0xFFE
 47982                           tosl	equ	0xFFD
 47983                           pclath	equ	0xFFA
 47984                           tblptru	equ	0xFF8
 47985                           tblptrh	equ	0xFF7
 47986                           tblptrl	equ	0xFF6
 47987                           tablat	equ	0xFF5
 47988                           prodh	equ	0xFF4
 47989                           prodl	equ	0xFF3
 47990                           intcon	equ	0xFF2
 47991                           intcon2	equ	0xFF1
 47992                           intcon3	equ	0xFF0
 47993                           indf0	equ	0xFEF
 47994                           postinc0	equ	0xFEE
 47995                           fsr0h	equ	0xFEA
 47996                           fsr0l	equ	0xFE9
 47997                           wreg	equ	0xFE8
 47998                           indf1	equ	0xFE7
 47999                           postdec1	equ	0xFE5
 48000                           plusw1	equ	0xFE3
 48001                           fsr1h	equ	0xFE2
 48002                           fsr1l	equ	0xFE1
 48003                           indf2	equ	0xFDF
 48004                           postinc2	equ	0xFDE
 48005                           postdec2	equ	0xFDD
 48006                           plusw2	equ	0xFDB
 48007                           fsr2h	equ	0xFDA
 48008                           fsr2l	equ	0xFD9
 48009                           status	equ	0xFD8
 48010                           
 48011                           	psect	rparam
 48012  0000                     tosu	equ	0xFFF
 48013                           tosh	equ	0xFFE
 48014                           tosl	equ	0xFFD
 48015                           pclath	equ	0xFFA
 48016                           tblptru	equ	0xFF8
 48017                           tblptrh	equ	0xFF7
 48018                           tblptrl	equ	0xFF6
 48019                           tablat	equ	0xFF5
 48020                           prodh	equ	0xFF4
 48021                           prodl	equ	0xFF3
 48022                           intcon	equ	0xFF2
 48023                           intcon2	equ	0xFF1
 48024                           intcon3	equ	0xFF0
 48025                           indf0	equ	0xFEF
 48026                           postinc0	equ	0xFEE
 48027                           fsr0h	equ	0xFEA
 48028                           fsr0l	equ	0xFE9
 48029                           wreg	equ	0xFE8
 48030                           indf1	equ	0xFE7
 48031                           postdec1	equ	0xFE5
 48032                           plusw1	equ	0xFE3
 48033                           fsr1h	equ	0xFE2
 48034                           fsr1l	equ	0xFE1
 48035                           indf2	equ	0xFDF
 48036                           postinc2	equ	0xFDE
 48037                           postdec2	equ	0xFDD
 48038                           plusw2	equ	0xFDB
 48039                           fsr2h	equ	0xFDA
 48040                           fsr2l	equ	0xFD9
 48041                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    866
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     160
    BANK1           256      0     216
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 49151
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[49151]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 49151
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[49151]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_settings_i2c_masterModeSlaveAddress@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_masterModeSlaveAddress@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_i2c_slaveModeSlaveAddress@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_slaveModeSlaveAddress@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_i2c_frequency@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_frequency@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_frequency@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_i2c_mode@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_i2c_mode@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_i2c_mode@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_spi_polarity@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_spi_polarity@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_spi_polarity@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_spi_frequency@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_spi_frequency@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_spi_frequency@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_settings_spi_mode@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_settings_spi_mode@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_settings_spi_mode@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_copy@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_copy@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_copy@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_write_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_write_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_buffer_to_sector@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_buffer_to_sector@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_sector_to_buffer@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_sector_to_buffer@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_modify@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_append@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_rename@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_create@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_delete@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_file_resize@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_copy_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_copy_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_buffer_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), 
		 -> i2c_display_send_init_sequence@init_sequence(COMRAM[9]), _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    _flash_read_from_buffer->__flash_buffer_read
    __flash_buffer_read->__flash_is_busy
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_append
    __parse_command_long->__parse_file_copy
    __parse_command_long->__parse_file_create
    __parse_command_long->__parse_file_rename
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_command_long->__parse_file_append
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_copy->_fat_copy_file
    _fat_copy_file->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2509763
                                             91 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   90980
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2160
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2184
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2184
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2206
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   82246
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32179
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6660
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25519
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6791
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138965
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62492
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53912
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22495
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    6528
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    3009
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106716
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106716
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101552
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51527
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49769
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24985
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17397
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13888
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6492
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  956953
                                             87 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   90554
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   59834
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   44218
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35519
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_buffer                            10     6      4    5742
                                             42 COMRAM    10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_buffer                                 6     0      6    5207
                                             36 COMRAM     6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _flash_read_from_buffer                               6     0      6    4874
                                             30 COMRAM     6     0      6
                 __flash_buffer_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_buffer_read                                  11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    3133
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2736
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    8417
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    8127
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                           11     6      5  863086
                                             68 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   82268
                                             41 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   78681
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3544
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2676
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    2206
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   75137
                                             38 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    7217
                                             28 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0    7378
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    7353
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             34 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   22496
                                             34 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             28 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    7285
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    7287
                                             28 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    4     0      4    6991
                                             24 COMRAM     4     0      4
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3519
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2092
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  7     1      6  779655
                                             61 BANK0      7     1      6
            __parse_buffer_to_sector
                 __parse_file_append
                   __parse_file_copy
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
      __parse_settings_i2c_frequency
__parse_settings_i2c_masterModeSlave
           __parse_settings_i2c_mode
__parse_settings_i2c_slaveModeSlaveA
      __parse_settings_spi_frequency
           __parse_settings_spi_mode
       __parse_settings_spi_polarity
                __parse_write_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_write_buffer                                 11     5      6    5984
                                             42 COMRAM    11     5      6
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_to_buffer                                  6     0      6    5207
                                             36 COMRAM     6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_to_buffer                                6     0      6    4874
                                             30 COMRAM     6     0      6
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_settings_spi_polarity                         7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_spi_mode                             7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_spi_frequency                        7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_slaveModeSlaveAddress            7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_mode                             7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_masterModeSlaveAddress           7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_settings_i2c_frequency                        7     1      6     509
                                              0 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) __parse_sector_to_buffer                             11     5      6   52653
                                             83 COMRAM    11     5      6
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  8     2      6   19216
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18728
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                  13     7      6   76909
                                             84 COMRAM     7     1      6
                                             39 BANK0      6     6      0
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   9     3      6   33403
                                             94 COMRAM     1     1      0
                                              0 BANK0      8     2      6
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   32760
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                  15     9      6   59659
                                             85 COMRAM     7     1      6
                                             46 BANK0      8     8      0
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   9     3      6   75144
                                             79 COMRAM     9     3      6
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   74545
                                             76 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   23869
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                  12     6      6   79229
                                             88 COMRAM     7     1      6
                                             37 BANK0      5     5      0
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_copy                                     9     3      6  183758
                                             92 COMRAM     3     3      0
                                             52 BANK0      6     0      6
                      _fat_copy_file
 ---------------------------------------------------------------------------------
 (4) _fat_copy_file                                       19    15      4  183115
                                             88 COMRAM     4     0      4
                                             37 BANK0     15    15      0
                 __root_is_available
          _fat_copy_sector_to_buffer
                    _fat_create_file
                  _fat_get_file_size
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   78580
                                             76 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7683
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    7507
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (4) _fat_copy_sector_to_buffer                           17    15      2   51853
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_copy_page_to_buffer                            2     0      2    4698
                                             29 COMRAM     2     0      2
         __flash_copy_page_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                  11     5      6  157903
                                             89 COMRAM     6     0      6
                                             56 BANK0      5     5      0
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  157083
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   75929
                                             76 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   24135
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 23    19      4   35774
                                             53 COMRAM    23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17052
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7774
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   58458
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   23662
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    8040
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16860
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6211
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8306
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_buffer_to_sector                             11     5      6   30716
                                             81 COMRAM    11     5      6
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (5) _fat_write_sector_from_buffer                        17    15      2   29916
                                             66 COMRAM    15    13      2
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14812
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7417
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    7374
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7145
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_copy
           _fat_copy_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_copy_sector_to_buffer
               __data_sector_from_cluster
               __find_nth_cluster
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_copy_page_to_buffer
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 _spi_set_configuration
             _fat_create_file
               __get_available_root_entry
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
               __get_date
               __get_time
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_find_file
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _strncmp
               _memcpy
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_write_sector_from_buffer
               __get_first_cluster
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_size
                 __offset_from_file_number
                 __root_is_available
                   __offset_from_file_number
                   __sector_from_file_number
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_settings_i2c_frequency
         __parse_settings_i2c_masterModeSlaveAddress
         __parse_settings_i2c_mode
         __parse_settings_i2c_slaveModeSlaveAddress
         __parse_settings_spi_frequency
         __parse_settings_spi_mode
         __parse_settings_spi_polarity
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
             __flash_buffer_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_buffer_to_sector
         _fat_write_sector_from_buffer
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_copy
         _fat_copy_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_write_sector_from_buffer
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_sector_to_buffer
         _fat_copy_sector_to_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_copy_page_to_buffer
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_settings_i2c_frequency
       __parse_settings_i2c_masterModeSlaveAddress
       __parse_settings_i2c_mode
       __parse_settings_i2c_slaveModeSlaveAddress
       __parse_settings_spi_frequency
       __parse_settings_spi_mode
       __parse_settings_spi_polarity
       __parse_write_buffer
         _fat_write_to_buffer
           _flash_write_to_buffer
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_buffer
       _fat_read_from_buffer
         _flash_read_from_buffer
           __flash_buffer_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      31        0.0%
DATA                 0      0     959       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Oct 05 21:50:02 2018

                            __end_of_fat_read_from_file 63C8  
                             ??_internalFlash_getBuffer 0003  
                   __parse_buffer_to_sector@out_idx_ptr 0056  
                       __size_of__write_value_to_offset 0034  
                                            _USB_SD_Ptr BE79  
                              fat_create_file@extension 004F  
                __end_of_i2c_display_send_init_sequence 9CF2  
               __size_of_i2c_display_send_init_sequence 002C  
                        _i2c_display_send_init_sequence 9CC6  
                          __end_of_fat_read_from_buffer A00E  
                                   __system_timer0_init 9FD0  
                            flash_read_from_buffer@data 0023  
                        __parse_file_delete@out_idx_ptr 0054  
                       __parse_file_resize@return_value 0087  
                                                    _os 0131  
                                         _USBDeviceInit 4D8C  
                                    _USBCheckHIDRequest 658C  
                           ??__data_sector_from_cluster 0003  
                  __bootloader_verify_file@return_value 0097  
                                      ??__flash_is_busy 0012  
__parse_settings_i2c_masterModeSlaveAddress@out_idx_ptr 0005  
                            ??__sector_from_file_number 0003  
                                          __CFG_CP0$OFF 000000  
                        __root_is_available@root_sector 0030  
                             ??_internalFlash_erasePage 000B  
                      __size_of__parse_sector_to_buffer 016C  
                              ?_i2c_display_write_fixed 0006  
                               fat_modify_file@position 006A  
                                       _fat_resize_file 5FF4  
                  USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                  USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                   l202 6FE6  
                                                   l210 8054  
                                                   l220 5C22  
                                                   l141 4DFA  
                                                   l214 8360  
                                                   l310 7B50  
                                                   l150 3CE6  
                                                   l143 4E36  
                                                   l303 9A32  
                                                   l151 3CDC  
                                                   l320 8F20  
                                                   l208 803A  
                                                   l224 5CA4  
                                                   l304 9A30  
                                                   l152 3CDA  
                                                   l241 6C76  
                                                   l233 6BCA  
                                                   l161 3D62  
                                                   l242 6C3E  
                                                   l330 6E06  
                                                   l322 8F6A  
                                                   l235 6BD4  
                                                   l331 6DCC  
                                                   l251 547C  
                                                   l411 65DA  
                                                   l219 5C7A  
                                                   l139 4DD2  
                                                   l171 3DF2  
                                                   l163 3D78  
                                                   l155 3D02  
                                                   l252 5462  
                                                   l412 65A8  
                                                   l260 64F4  
                                                   l164 3D84  
                                                   l156 3D12  
                                                   l237 6C36  
                                                   l333 6DEC  
                                                   l309 7B56  
                                                   l173 3E16  
                                                   l165 3DAC  
                                                   l157 3D1A  
                                                   l238 6BFE  
                                                   l422 65FC  
                                                   l414 65EC  
                           __end_of_USBStdGetDscHandler 5162  
                                                   l262 6568  
                                                   l350 6408  
                                                   l166 3DB8  
                                                   l158 3D30  
                                                   l183 5A0E  
                                                   l191 5748  
                                                   l423 6614  
                                                   l415 65C6  
                                                   l271 504E  
                                                   l343 6466  
                                                   l175 3E32  
                                                   l159 3D3C  
                                                   l328 6D84  
                                                   l248 5406  
                                                   l424 6620  
                                                   l360 1DC8  
                                                   l272 50DC  
                                                   l352 640E  
                                                   l344 63D8  
                                                   l168 3DCA  
                                                   l185 5A38  
                                                   l329 6D8A  
                                                   l249 53E4  
                                                   l521 59E8  
                                                   l425 6638  
                                                   l361 1DCE  
                                                   l281 7BE6  
                                                   l353 642C  
                                                   l610 8DC0  
                                                   l178 9968  
                                                   l418 6644  
                                                   l530 6EEE  
                                                   l274 50E4  
                                                   l282 7B74  
                                                   l354 6448  
                                                   l346 63E2  
                                                   l187 5AB6  
                                                   l603 8DC8  
                                                   l179 9976  
                                                   l371 1EEE  
                                                   l363 1E3A  
                                                   l275 513A  
                                                   l347 63E8  
                                                   l620 04BE  
                                                   l604 8D8C  
                                                   l372 1F0A  
                                                   l268 514A  
                                                   l348 63EE  
                                                   l621 04C8  
                                                   l381 2002  
                                                   l365 1E82  
                                                   l277 5142  
                                                   l269 503A  
                                                   l285 7BFC  
                                                   l349 6402  
                                                   l710 667E  
                                                   l702 1A90  
                                                   l614 0810  
                                                   l630 066E  
                                                   l606 8DA8  
                                                   l518 59F0  
                                                   l534 6F56  
                                                   l374 1F70  
                                                   l286 7B86  
                                                   l703 1AA8  
                                                   l623 0520  
                                                   l615 049E  
                                                   l519 5964  
                                                   l375 1F7C  
                                                   l367 1EA4  
                                                   l287 7B8C  
                                                   l295 97CE  
                                                   l712 6694  
                                                   l704 1AC2  
                                                   l640 0738  
                                                   l624 05DA  
                                                   l608 8DB4  
                                                   l800 8694  
                                                   l376 1FF6  
                                                   l288 7BAA  
                                                   l296 97CC  
                                                   l721 6720  
                                                   l633 06A2  
                                                   l625 05E4  
                                                   l609 8DBA  
                                                   l561 264E  
                                                   l529 6F8C  
                                                   l369 1F24  
                                                   l722 670A  
                                                   l650 07B8  
                                                   l634 06D0  
                                                   l626 0604  
                                                   l618 04AE  
                                                   l554 273A  
                                                   l562 2638  
                                                   l546 6F5E  
                                                   l810 8686  
                                                   l715 66C4  
                                                   l651 07CC  
                                                   l571 266A  
                                                   l563 260C  
                                                   l555 2510  
                                                   l379 1FB0  
                                                   l644 0770  
                                                   l636 0704  
                                                   l628 0634  
                                                   l564 2614  
                                                   l804 8662  
                                                   l900 3F2E  
                                                   l661 82B6  
                                                   l741 581C  
                                                   l733 6732  
                                                   l645 0784  
                                                   l573 267C  
                                                   l805 866A  
                                                   l901 3F36  
                                                   l750 5850  
                                                   l718 66D0  
                                                   l670 360A  
                                                   l654 0808  
                                                   l646 07A2  
                                                   l638 0720  
                                                   l566 262C  
                                                   l806 8672  
                                                   l902 3F3E  
                                                   l751 585C  
                                                   l719 66EA  
                                                   l671 3614  
                                                   l575 269E  
                                                   l559 2530  
                                                   l903 3F46  
                                                   l752 586E  
                                                   l680 3742  
                                                   l672 3628  
                                                   l648 07CE  
                                                   l592 553C  
                                                   l576 26A6  
                                                   l808 867C  
                                                   l912 8F96  
                                                   l904 3F4E  
                                                   l753 587A  
                                                   l737 6742  
                                                   l665 3758  
                                                   l649 07A8  
                                                   l577 26CA  
                                                   l905 3F58  
                                                   l754 588C  
                                                   l674 3672  
                                                   l666 35AA  
                                                   l690 18F2  
                                                   l586 271C  
                                                   l659 82A0  
                                                   l747 58CE  
                                                   l755 58C2  
                                                   l675 369A  
                                                   l691 18FE  
                                                   l931 945E  
                                                   l915 8FBC  
                                                   l748 5848  
                                                   l668 377C  
                                                   l676 36CA  
                                                   l684 1AD8  
                                                   l692 191E  
                                                   l596 55D4  
                                                   l764 9202  
                                                   l924 947C  
                                                   l916 8FCA  
                                                   _BDT 000D00  
                                                   l677 36DC  
                                                   l669 35FE  
                                                   l693 1968  
                                                   l685 184C  
                                                   l597 55CE  
                                                   l589 2724  
                                                   l933 946A  
                                                   l925 9442  
                                                   l678 36E2  
                                                   l694 1942  
                                                   l679 36F6  
                                                   l687 1AFC  
                                                   l695 19AE  
                                                   l599 55D8  
                                                   l767 9238  
                                                   l927 944C  
                                                   l696 19A6  
                                                   l688 18EC  
                                                   l970 79D2  
                                                   l698 19C2  
                                                   l699 1A2A  
                                                   l891 3E72  
                                                   l964 7964  
                                                   l892 3E80  
                                                   l894 3F10  
                                                   l896 3F68  
                                                   l897 3F1E  
                                                   l898 3FAE  
                                                   l899 3F26  
                                                   _LBA 0160  
                                                   _LUN 01B3  
                                                   _UIE 000F36  
                                                   _UIR 000F62  
                                  _i2c_digipot_reset_on 9F6A  
                                     main@tx_start_addr 00BD  
                              __size_of__display_failed 02F2  
                                           _start_line1 BDE8  
                                           _start_line2 BE60  
                                           _start_line3 BEA6  
                                           _start_line4 BE16  
                                    api_prepare@command 00B6  
                                            _USBSuspend 9B10  
                         ?_fat_write_sector_from_buffer 0043  
                           flash_read_from_buffer@start 001F  
                                    _internalFlash_read 9A3E  
                                __end_of_display_update 8C56  
                                  USBStdSetCfgHandler@i 0018  
                                  ?__parse_format_drive 0027  
                                                   prod 000FF3  
                                                   tosl 000FFD  
                                                   wreg 000FE8  
                                        _USBDeviceTasks 3CBA  
                                   ?_USBCheckHIDRequest 0001  
                                          __CFG_IESO$ON 000000  
                              __size_of__display_search 0152  
                                        _USBDeviceState 00F8  
                                          ?__write_root 0029  
                        __parse_file_resize@out_idx_ptr 0059  
                              __size_of__display_verify 0128  
                                 _spi_set_configuration 55DE  
                                 ??_USBCtrlTrfRxService 0001  
                                         _hex_file_size 00D1  
                              USBEnableEndpoint@options 0009  
                     internalFlash_addressFromPage@page 0001  
                                     __find_nth_cluster 81C4  
                                     ??_MSDErrorHandler 0009  
                                  ?__system_timer0_init 0001  
                     __size_of__fill_buffer_read_buffer 00F6  
                          __parse_file_resize@file_size 0089  
                                   api_prepare@inBuffer 00B2  
                     __size_of__offset_from_file_number 0026  
                           __flash_write_to_buffer@data 0016  
                                                  l1006 A178  
                                                  l1200 968E  
                                                  l1113 A0CE  
                                                  l2010 15F6  
                                                  l2003 8250  
                                                  l2004 81EA  
                                                  l2020 1730  
                                                  l2005 8234  
                                                  l2013 1600  
                                                  l1205 8584  
                                                  l1301 5B56  
                                                  l2022 173E  
                                                  l2014 16A0  
                                                  l2102 8142  
                                                  l1150 A2A4  
                                                  l2110 62FC  
                                                  l1206 8568  
                                                  l2031 182E  
                                                  l2023 1746  
                                                  l2015 1650  
                                                  l1303 5B6E  
                                                  l2032 1840  
                                                  l2016 1764  
                                                  l2104 814E  
                                                  l2200 2354  
                                                  l2120 2ABA  
                                                  l2112 6314  
                                                  l1080 9A9C  
                                                  l2025 17B8  
                                                  l2201 2358  
                                                  l2121 2B62  
                                                  l2113 637A  
                                                  l1305 5B7E  
                                                  l2042 8E5A  
                                                  l2026 17B0  
                                                  l2050 9F52  
                                                  l2130 628E  
                                                  l2106 8182  
                                                  l2210 237C  
                                                  l2202 235C  
                                                  l1330 5DC0  
                                                  l1322 5D10  
                                                  l2027 17F4  
                                                  l2131 62AA  
                                                  l2211 2380  
                                                  l2203 2360  
                                                  l1171 A244  
                                                  l1307 5BA4  
                                                  l1323 5D24  
                                                  l2044 8EAC  
                                                  l2140 60C8  
                                                  l2052 9F62  
                                                  l2132 62C6  
                                                  l2220 23A0  
                                                  l2212 2384  
                                                  l2204 2364  
                                                  l1228 9282  
                                                  l2116 29DA  
                                                  l1324 5D3A  
                                                  l2125 61F8  
                                                  l2221 23A4  
                                                  l2213 2388  
                                                  l2205 2368  
                                                  l1165 A29C  
                                                  l1229 9266  
                                                  l2150 2930  
                                                  l2222 23A8  
                                                  l2214 238C  
                                                  l2206 236C  
                                                  l1086 9F18  
                                                  l2118 2BA4  
                                                  l1318 5DCE  
                                                  l1326 5D62  
                                                  l3103 8624  
                                                  l2143 277A  
                                                  l2127 6208  
                                                  l2223 23AC  
                                                  l2215 2390  
                                                  l2207 2370  
                                                  l1191 9D5C  
                                                  l1087 9F06  
                                                  l2119 2A92  
                                                  l1159 A238  
                                                  l1079 9A92  
                                                  l1327 5D8A  
                                                  l1319 5CFC  
                             ?__fill_buffer_read_buffer 002B  
                                                  l3112 83E2  
                                                  l2136 6004  
                                                  l2072 6964  
                                                  l2128 6252  
                                                  l2232 9304  
                                                  l2240 9300  
                                                  l2224 23B0  
                                                  l2216 2394  
                                                  l2208 2374  
                                                  l2160 6C90  
                                                  l1192 9D4E  
                                                  l1600 33FE  
                                                  l2081 8B2A  
                                                  l2145 2792  
                                                  l2321 7800  
                                                  l2129 62CA  
                                                  l2233 92E8  
                                                  l2225 23B4  
                                                  l2209 2378  
                                                  l2161 6C94  
                                                  l1193 9D70  
                                                  l1521 0E32  
                                                  l1601 33D0  
                                                  l1177 A230  
                                                  l1329 5DA4  
                                                  l2314 89CC  
                                                  l3106 8658  
                                                  l2146 27DA  
                                                  l2138 6014  
                                                  l2226 23B8  
                                                  l2218 2398  
                                                  l2154 6CCC  
                                                  l2170 6CB8  
                                                  l2162 6C98  
                                                  l1194 9D52  
                                                  l1610 34FA  
                                                  l1290 5AFC  
                                                  l3115 841E  
                                                  l2147 2972  
                                                  l2139 60D0  
                                                  l2323 7858  
                                                  l2091 96C4  
                                                  l2235 92EC  
                                                  l2227 23BC  
                                                  l2219 239C  
                                                  l2171 6CBC  
                                                  l2163 6C9C  
                                                  l2155 6C80  
                                                  l2251 3C2A  
                                                  l1195 9D56  
                                                  l1523 0EDE  
                                                  l1515 0C30  
                                                  l1603 3452  
                                                  l2316 8A2E  
                                                  l2148 2860  
                                                  l2236 92F0  
                                                  l2228 23C0  
                                                  l2172 6CC0  
                                                  l2164 6CA0  
                                                  l2260 3BF6  
                                                  l2252 3BD6  
                                                  l1700 420A  
                                                  l1612 3586  
                                                  l1604 3424  
                                                  l2500 0A3E  
                                                  l2149 2888  
                                                  l2069 69EE  
                                                  l2085 4EF8  
                                                  l2093 96D4  
                                                  l2237 92F4  
                                                  l2181 22A6  
                                                  l2173 6CC4  
                                                  l2165 6CA4  
                                                  l2157 6C84  
                                                  l2261 3BFA  
                                                  l2253 3BDA  
                                                  l2245 3B54  
                                                  l1701 41DC  
                                                  l1517 0CDA  
                                                  l1613 3558  
                                                  l1621 5314  
                                                  l2341 9D1A  
                                                  l1293 5B0E  
                                                  l2326 877A  
                                                  l2078 69D8  
                                                  l2238 92F8  
                                                  l2190 2320  
                                                  l2182 22AA  
                                                  l2174 6CC8  
                                                  l2166 6CA8  
                                                  l2158 6C88  
                                                  l2270 3C1E  
                                                  l2262 3BFE  
                                                  l2254 3BDE  
                                                  l1630 3FEA  
                                                  l1606 34A6  
                                                  l1710 9296  
                                                  l1622 52E6  
                                                  l1550 69FA  
                                                  l2502 0AE8  
                                                  l2087 4F0A  
                                                  l2239 92FC  
                                                  l2191 2330  
                                                  l2183 22AE  
                                                  l2167 6CAC  
                                                  l2159 6C8C  
                                                  l2271 3C22  
                                                  l2263 3C02  
                                                  l2255 3BE2  
                                                  l2247 3B62  
                                                  l1199 96AA  
                                                  l1631 3FBC  
                                                  l1471 9634  
                                                  l1703 427E  
                                                  l1519 0D86  
                                                  l1607 3478  
                                                  l2503 0BAC  
                                                  l1295 5B1E  
                                                  l2328 87D2  
                                                  l2096 7F58  
                                                  l2088 4F68  
                                                  l2192 2334  
                                                  l2184 22C0  
                                                  l2168 6CB0  
                                                  l2272 3C26  
                                                  l2264 3C06  
                                                  l2256 3BE6  
                                                  l1640 40DE  
                                                  l1704 4250  
                                                  l3152 8748  
                                                  l1624 5368  
                                                  l1560 6A30  
                                                  l1552 6A00  
                                                  l2352 003E  
                                                  l2504 0AF2  
                                                  l2440 8C8C  
                                                  l2193 2338  
                                                  l2185 22D0  
                                                  l2169 6CB4  
                                                  l2273 3CB6  
                                                  l2265 3C0A  
                                                  l2257 3BEA  
                                                  l2249 3B9A  
                                                  l1481 7A68  
                                                  l1633 403E  
                                                  l1473 9640  
                                                  l3153 8756  
                                                  l1609 3532  
                                                  l1721 4BC4  
                                                  l1625 533A  
                                                  l1561 6A9A  
                                                  l1553 6A06  
                                                  l2601 9DDA  
                                                  l2337 9D02  
                                                  l2361 039C  
                                                  l2505 0B6A  
                                                  l2441 8C62  
                                                  l1289 5BBE  
                                                  l1297 5B36  
                                                  l2098 7F68  
                                                  l2178 23C4  
                                                  l2194 233C  
                                                  l2186 22E0  
                                                  l2266 3C0E  
                                                  l2258 3BEE  
                                                  l1634 4010  
                                                  l1570 37B6  
                                                  l1722 4B96  
                                                  l1618 52C0  
                                                  l1562 6A86  
                                                  l1554 6A0C  
                                                  l2610 9A72  
                                                  l2362 03C0  
                                                  l2354 00B4  
                                                  l2506 0BA6  
                                                  l2282 7D06  
                                                  l3083 56D8  
                                                  l2099 7FC0  
                                                  l2195 2340  
                                                  l2187 22F0  
                                                  l2179 22A2  
                                                  l2267 3C12  
                                                  l2259 3BF2  
                                                  l1483 7A88  
                                                  l1651 14F4  
                                                  l1571 3788  
                                                  l1715 4B1C  
                                                  l1619 5292  
                                                  l1563 6A8C  
                                                  l1555 6A12  
                                                  l2339 9D0C  
                                                  l2355 0202  
                                                  l1299 5B46  
                                                  l3084 55E2  
                                                  l2276 9E18  
                                                  l2196 2344  
                                                  l2188 2300  
                                                  l2268 3C16  
                                                  l1636 40B8  
                                                  l3148 8714  
                                                  l1580 390A  
                                                  l1724 4C18  
                                                  l1716 4AEE  
                                                  l1564 6A92  
                                                  l1556 6A18  
                                                  l2460 6B88  
                                                  l2364 0426  
                                                  l2356 0188  
                                                  l2508 0BC2  
                                                  l2444 8C6E  
                                                  l3076 9944  
                            USBConfigureEndpoint@handle 0007  
                                                  l1821 9FCC  
                                                  l2197 2348  
                                                  l2189 2310  
                                                  l2269 3C1A  
                                                  l1485 7AA8  
                                                  l1637 4080  
                                                  l3149 8708  
                                                  l1653 1376  
                                                  l1645 12CE  
                                                  l1709 92C4  
                                                  l1573 380A  
                                                  l1725 4BEA  
                                                  l1565 6AC4  
                                                  l1549 6A36  
                                                  l1557 6A1E  
                                                  l2461 6B92  
                                                  l3077 9920  
                                                  l3086 55E8  
                                                  l2198 234C  
                                                  l1478 7A48  
                                                  l1670 14B6  
                                                  l1662 1416  
                                                  l1654 1348  
                                                  l1646 12A0  
                                                  l1574 37DC  
                                                  l1718 4B70  
                                                  l1558 6A24  
                                                  l2366 0458  
                                                  l2358 033E  
                                                  l2446 8C7A  
                                                  l2286 7D56  
                                                  l3078 9952  
                                                  l1815 90F0  
                                                  l1807 95EC  
                                                  l2199 2350  
                                                  l1639 410C  
                                                  l1671 1488  
                                                  l1663 13E8  
                                                  l1591 4D16  
                                                  l1719 4B42  
                                                  l1559 6A2A  
                                                  l2455 6B9E  
                                                  l2359 0310  
                                                  l3079 9932  
                                                  l1816 90FA  
                                                  l1808 95F6  
                                                  l3600 9504  
                                                  l1656 1516  
                                                  l1648 1322  
                                                  l1680 3960  
                                                  l1592 4CE8  
                                                  l1576 38E4  
                                                  l2456 6ADA  
                                                  l2368 048A  
                                                  l2480 11D4  
                                                  l2472 0FB4  
                                                  l3097 91DC  
                                                  l3089 564C  
                                                  l3601 94FC  
                                                  l1673 154A  
                                                  l1649 12F4  
                                                  l1585 4C6E  
                                                  l1577 38B6  
                                                  l2457 6B30  
                                                  l2481 1202  
                                                  l2473 0FD8  
                                                  l2449 8C80  
                                                  l1770 942C  
                                                  l3610 98B0  
                                                  l3530 8CD0  
                                                  l1674 151C  
                                                  l1666 1466  
                                                  l1658 13C6  
                                                  l1682 39E2  
                                                  l1594 4D6A  
                                                  l1586 4C40  
                                                  l2482 125C  
                                                  l1762 881C  
                                                  l1771 93EA  
                                                  l3611 98A8  
                                                  l1667 1438  
                                                  l1659 1398  
                                                  l1683 39B4  
                                                  l1595 4D3C  
                                                  l1579 3938  
                                                  l1835 959C  
                                                  l1915 9B8E  
                                                  l2467 7E88  
                                                  l2459 6B86  
                                                  l2491 092A  
                                                  l2475 1060  
                                                  l1763 8848  
                                                  l1780 9148  
                                                  l3604 9524  
                                                  l1588 4CC2  
                                                  l1836 95A6  
                                                  l2492 0992  
                                                  l2484 1282  
                                                  l2476 10C8  
                                                  l1773 9412  
                                                  l1781 9152  
                                                  l3605 952E  
                                                  l3533 8D04  
                                                  l1685 3A36  
                                                  l1589 4C94  
                                                  l2805 3392  
                                                  l2493 09EE  
                                                  l2477 1142  
                                                  l2902 2064  
                                                  l3614 98C8  
                                                  l1694 4162  
                                                  l3534 8D12  
                                                  l1686 3A08  
                                                  l2806 33C0  
                                                  l1791 88B4  
                                                  l3615 98D2  
                                                  l1695 4134  
                                                  l1679 398E  
                                                  l2831 6EA6  
                                                  l2807 3398  
                                                  l2823 2D74  
                                                  l1919 9B5C  
                                                  l2479 11A2  
                                                  l2920 4576  
                                                  l1688 3AE2  
                                                  l2840 6EA0  
                                                  l2832 6E18  
                                                  l2496 0BF4  
                                                  l1793 88D2  
                                                  l2913 7CB8  
                                                  l1697 41B6  
                                                  l3529 8CDC  
                                                  l1689 3AB4  
                                                  l2761 43E0  
                                                  l2753 432E  
                                                  l2497 0A02  
                                                  l2489 08A0  
                                                  l1874 8AA8  
                                                  l1866 938A  
                                                  l2906 229A  
                                                  l2930 49D0  
                                                  l2850 1B82  
                                                  l1698 4188  
                                                  l2834 6E34  
                                                  l2818 7F0C  
                                                  l2770 43C0  
                                                  l2754 42B6  
                                                  l3802 9D38  
                                                  l2594 77EC  
                                                  l2923 471A  
                                                  l2851 1BA0  
                                                  l2835 6E50  
                                                  l2827 61B6  
                                                  l3803 9D28  
                                                  l2595 77AA  
                                                  l1788 8872  
                                                  l1876 8B0A  
                                                  l2916 444A  
                      __end_of__parse_settings_spi_mode 72AA  
                                                  l2844 1D2A  
                                                  l2860 1CAE  
                                                  l2852 1BBE  
                                                  l2836 6E6C  
                                                  l2764 434A  
                                                  l2756 42CC  
                                                  l2588 8BEA  
                                                  l1789 887C  
                                                  l2941 5FF0  
                                                  l2909 7C4E  
                                                  l2861 1CCC  
                                                  l2853 1BDC  
                                                  l2845 1B0A  
                                                  l2837 6E88  
                                                  l2781 524C  
                                                  l2765 4358  
                                                  l2757 42E2  
                                                  l2597 77B6  
                                                  l3814 771C  
                                                  l2934 4AE2  
                                                  l2846 1DA0  
                                                  l2862 1CEA  
                                                  l2854 1BFA  
                                                  l2838 6E94  
                                                  l2782 51EE  
                                                  l2774 5180  
                                                  l2766 436A  
                                                  l2758 42F8  
                                                  l2927 483A  
                                                  l3815 7676  
                                                  l2871 2FD8  
                                                  l2951 72E6  
                                                  l2863 1D08  
                                                  l2855 1C18  
                                                  l2847 1B28  
                                                  l2839 6E9A  
                                                  l2783 5282  
                                                  l2767 437C  
                                                  l2759 430E  
                                                  l3816 7714  
                                                  l2944 7224  
                                                  l2856 1C36  
                                                  l2848 1B46  
                                                  l2784 5206  
                                                  l2768 438A  
                                                  l1977 9034  
                                                  l1993 70B8  
                                                  l2937 5F34  
                                                  l2881 487A  
                                                  l2857 1C54  
                                                  l2849 1B64  
                                                  l2785 5222  
                                                  l2777 51CE  
                                                  l2793 78B8  
                                                  l2769 4398  
                                                  l2874 686E  
                                                  l2962 71E4  
                                                  l2858 1C72  
                                                  l1979 906E  
                                                  l2867 2E14  
                                                  l2955 7368  
                                                  l2859 1C90  
                                                  l2779 51D4  
                                                  l2795 78F2  
                                                  l1996 710C  
                                                  l2892 5EF2  
                                                  l2972 75EE  
                                                  l2948 72A6  
                                                  l2885 4990  
                                                  l2965 746A  
                                                  l2797 7930  
                             ?__offset_from_file_number 0001  
                                                  l1998 7116  
                                                  l2878 690E  
                                                  l2990 75AE  
                                                  l2958 7162  
                                                  l3790 7DA2  
                                                  l2798 78FC  
                                                  l2895 45B6  
                                                  l2983 742A  
                                                  l3791 7DE0  
                                                  l2799 7908  
                                                  l2888 5E36  
                                                  l2976 7670  
                                                  l3784 987C  
                                                  l2969 74EC  
                                                  l2986 752C  
                                                  l2899 46CC  
                                                  l2979 73A8  
                                                  l3796 8D78  
                                                  l3788 7D68  
                                                  l3797 8D3A  
                                                  STR_1 BFF1  
                                                  STR_2 BFF1  
                                                  STR_3 BFF1  
                                                  STR_4 BFF1  
                                                  STR_5 BFF1  
                                                  STR_6 BFF1  
                                                  STR_7 BFF1  
                                 __end_of_checked_line1 BDB8  
                                                  STR_8 BFF1  
                                 __end_of_checked_line2 BC82  
                                                  STR_9 BFDC  
                                 __end_of_checked_line3 BE79  
                                 __end_of_checked_line4 BD17  
                                        _bootloader_run 8C56  
                                   ?_internalFlash_read 000E  
                                         _i2c_frequency 018F  
                                                  u8024 59DA  
                                                  u8008 59A8  
                                                  u8025 59D4  
                                                  u8009 59BC  
                                                  u8210 70DE  
                                                  u8130 7A74  
                                                  u8050 5808  
                                                  u8300 7704  
                                                  u8140 7A94  
                                                  u8230 711C  
                                                  u9110 69E4  
                                 ??_USBCtrlTrfTxService 0001  
                                                  u9040 9F66  
                                                  u9120 69EE  
                                                  u8330 8718  
                                                  u8307 76FA  
                                                  u8260 8EA8  
                                                  u7460 9508  
                                                  u9220 6C26  
                                                  u8500 6F38  
                                                  u8270 7696  
                                                  _UCFG 000F39  
                                                  u9160 8A2A  
                                                  u7640 908E  
                                                  u8360 8CE0  
                                                  u9240 6C66  
                                                  u7545 88EE  
                                                  u8290 76CE  
                                                  u7650 909A  
                                                  u7490 98B4  
                                                  u9227 6C1C  
                                                  u8380 8D5A  
                                                  u7660 90A6  
                                                  u8700 673E  
                                                  u9500 1A64  
                                                  _UEP0 000F26  
                                                  u8277 768C  
                                                  _UEP1 000F27  
                                                  u7670 90B2  
                                                  u8630 6706  
                                                  u9318 364C  
                                                  u9510 1A66  
                                      ?_fat_create_file 004D  
                                                  u7815 8888  
                                                  u8295 76C8  
                                                  u9319 3660  
                                                  u9247 6C5C  
                                                  u7680 90BE  
                                                  u7648 9090  
                                                  u9600 966C  
                                                  u8800 9B8A  
                                                  u7905 9106  
                                                  u8297 76BE  
                                                  u9265 35D0  
                                                  u7690 90C8  
                                                  u7658 909C  
                                                  u8810 9B58  
                                                  u7915 9EA0  
                                                  u8387 8D50  
                                                  _UEIE 000F37  
                                                  u8900 16AC  
                                                  u7668 90A8  
                                                  u8660 671C  
                                                  u8830 8220  
                                                  u8910 16D4  
                                                  u7678 90B4  
                                                  u7775 915E  
                                                  u9375 1872  
                                                  u8920 16E0  
                                                  u7696 90CA  
                                                  u7688 90C0  
                                                  u8680 672E  
                                                  u9528 1A6C  
                                                  u9529 1A7E  
                                                  u8930 170A  
                                                  u8770 0CEE  
                                                  u9458 1974  
                                                  u9459 1988  
                                                  u8780 0D9A  
                                                  u8790 0E46  
                                                  u9398 18A6  
                                                  u9399 18BA  
                                                  u8960 1792  
                                                  u8880 1636  
                                                  _UEIR 000F63  
                                                  _UCON 000F65  
                                                  u8980 1808  
                                                  u7988 5984  
                                                  u7989 5996  
                                                  u8990 1814  
                                 _i2c_digipot_reset_off 9F8C  
                                    ?__find_nth_cluster 0038  
                               ??_fat_get_format_status 002C  
                          flash_read_from_buffer@length 0021  
                                 __size_of__delete_root 0048  
                                  api_parse@out_idx_ptr 00AB  
                                        _ResetSenseData 8DEC  
                __end_of__fill_buffer_get_configuration 8126  
               __size_of__fill_buffer_get_configuration 009E  
                        __fill_buffer_get_configuration 8088  
                       __size_of_flash_read_from_buffer 002E  
                USBStdFeatureReqHandler@current_ep_data 001B  
                                                  _pDst 018A  
                               fat_write_to_buffer@data 0029  
                                                  _main 3E3A  
                                                  _itoa 9858  
                            __end_of_fat_append_to_file 7FEA  
                       __parse_file_modify@return_value 008E  
                        __parse_file_create@out_idx_ptr 005D  
                           __size_of_APP_DeviceMSDTasks 0014  
                                                  fsr0h 000FEA  
                                                  fsr1h 000FE2  
                               __end_of_display_prepare 6AD0  
                                                  indf0 000FEF  
                                                  fsr2h 000FDA  
                                                  fsr0l 000FE9  
                                                  indf1 000FE7  
                                                  indf2 000FDF  
                                                  fsr1l 000FE1  
                                                  fsr2l 000FD9  
                                                  _utoa 7D60  
                                __CFG_DSWDTOSC$T1OSCREF 000000  
                            ??_ExternalFlash_SectorRead 0034  
                           __fill_buffer_find_file@cntr 003F  
                               __bootloader_verify_file 0F76  
                             _ExternalFlash_MediaDetect A2DA  
                                                  prodh 000FF4  
                                                  prodl 000FF3  
      __get_available_offset_from_buffer@minimum_offset 0001  
                        fat_modify_file@number_of_bytes 0068  
                                                  start 001C  
                       __end_of_APP_DeviceMSDInitialize A1E6  
                                 _display_get_character 9DA2  
                                  ??_USBCheckHIDRequest 0001  
                                      ?_MSDWriteHandler 0001  
                                  __end_of_failed_line1 BDA8  
                                  __end_of_failed_line2 BCF4  
                                  __end_of_failed_line4 BE71  
                               __end_of_fat_modify_file 2996  
                                   ??__find_nth_cluster 003C  
                        ??_MSDProcessCommandMediaAbsent 0048  
                            __end_of_USBCheckStdRequest 64AA  
                                ??_USBCtrlTrfOutHandler 0003  
                                   __bootloader_program 085A  
                          ??__flash_copy_page_to_buffer 0017  
                      __fill_buffer_find_file@outBuffer 0039  
                        ?__flash_write_page_from_buffer 0014  
                                          ___param_bank 000000  
                             ??_USBStdFeatureReqHandler 0018  
                                          _USBOutHandle 0182  
                      __end_of__fat_sector_from_cluster A100  
                  internalFlash_addressFromPage@address 0005  
                                __get_available_cluster 7062  
                                 parseHexFileEntry@data 000C  
                              __end_of__display_checked 412E  
                         __write_value_to_offset@buffer 0003  
                                        _hex_file_entry 0193  
                                _bootloader_get_entries A268  
                       __size_of__flash_write_to_buffer 0050  
                              ??_USBStdGetStatusHandler 0001  
                         __write_value_to_offset@offset 0001  
                                  ??_internalFlash_read 0016  
                                        ?_USBDeviceInit 0001  
                                     __flash_get_status 9C0A  
      __fill_buffer_get_bootloader_details@buffer_large 000C  
                  __make_cluster_chain@sector_in_buffer 0047  
                      __fat_offset_from_cluster@cluster 0001  
                              _system_ui_inactive_count 017E  
      __fill_buffer_get_bootloader_details@buffer_small 0010  
                                         __CFG_PLLDIV$2 000000  
    __end_of__parse_settings_i2c_masterModeSlaveAddress 75B2  
   __size_of__parse_settings_i2c_masterModeSlaveAddress 00C2  
          ??__parse_settings_i2c_masterModeSlaveAddress 0007  
           ?__parse_settings_i2c_masterModeSlaveAddress 0001  
            __parse_settings_i2c_masterModeSlaveAddress 74F0  
                         i2c_display_write_fixed@length 0008  
                            __end_of__get_first_cluster 94E6  
                                                 l12008 9F4A  
                                                 l11410 7084  
                                                 l11402 706A  
                                                 l12118 9D28  
                                                 l12048 6946  
                              __end_of__parse_file_copy 5FF4  
                                                 l11434 711C  
                                                 l12082 69EE  
                                                 l11524 8D3A  
                                ?_i2c_digipot_backlight 0001  
                                                 l12414 9638  
                                                 l12166 6BD4  
                                                 l14200 3194  
                                                 l14112 3028  
                                                 l12408 962C  
                                                 l12264 3752  
                                                 l11552 65C0  
                                                 l14202 319C  
                                                 l11468 7676  
                                                 l14140 30B0  
                               ?__fill_buffer_find_file 0037  
                                                 l14126 306C  
                                                 l11670 66D0  
                                                 l11742 946A  
                                                 l14152 30D6  
                                                 l13362 3B9A  
                                                 l13354 3B62  
                                                 l14162 30FC  
                                                 l11738 944C  
                                                 l13348 3B54  
                                                 l14164 3104  
                                                 l11772 0C30  
                                                 l15212 7D28  
                                                 l13470 9E18  
                                                 l13454 3C2A  
                                                 l14190 316E  
                                                 l14178 3148  
                                                 l14098 2FE4  
                                                 l13538 64EC  
                                                 l12844 4F68  
                                                 l15318 6B30  
                                                 l15166 87E6  
                                                 l16066 521C  
                                                 l15434 7F04  
                                                 l13770 05FC  
                                                 l15194 7CD8  
                                                 l15390 77AE  
                                                 l15384 77A2  
                                          spi_tx@length 0003  
                                                 l15562 7900  
                                                 l16258 0FD0  
                                                 l13972 8146  
                                                 l15900 2528  
                                                 l16516 3DC2  
                                                 l16390 0B6A  
                                                 l13984 817A  
                                                 l17280 23DC  
                                                 l17282 24F4  
                                                 l17266 86AC  
                                                 l15762 4DCA  
                                                 l17268 86E0  
                                                 l15950 264E  
                                                 l15790 4E2E  
                                    ?__flash_get_status 000D  
                               __end_of_fat_rename_file 81C4  
                                                 ?_main 0001  
                                                 ?_itoa 0011  
                                                 STR_10 BFE8  
                                                 STR_11 BFFA  
                                                 STR_12 BFCF  
                                 ?_i2c_digipot_reset_on 0001  
                                      ??__display_clear 0001  
                     __size_of_USBCtrlEPServiceComplete 0100  
                                       __end_of___lldiv 8768  
                                                 ?_utoa 0008  
                                                 u10120 604E  
                      MSDCheckForErrorCases@DeviceBytes 000B  
                                                 u10130 6080  
                                                 u10140 609C  
                                                 u10125 6044  
                                                 u11030 8176  
                                                 u10135 6076  
                                                 u10240 783C  
                                                 u10080 4F30  
                                                 u11200 300C  
                                                 u10321 3B6C  
                                                 u11050 81B2  
                                                 u11300 312C  
                                                 u11220 3050  
                                                 u11060 29B4  
                                                 u10500 512E  
                                                 u10245 7832  
                                                 u10085 4F26  
                                                 u10270 87B6  
                                                 u10190 2800  
                                                 u11150 6278  
                                                 u10430 6520  
                                                 u11320 3166  
                                                 u11240 3094  
                                                 u12040 4446  
                                                 u11065 29AA  
                                                 u13010 8BB6  
                                                 u10275 87AC  
                                                 u10195 27F6  
                                                 u11155 626E  
                                                 u10507 5124  
                                                 u11340 3194  
                                                 u11260 30CE  
                                                 u12140 49CC  
                                                 u11085 2A4C  
                                                 u13005 A06A  
                                                 u13110 2D64  
                                                 u10470 50A6  
                                                 u13030 776C  
                                                 u11360 31C4  
                                                 u11280 30FC  
                                                 u12240 7220  
                                                 u13120 61AE  
                                                 u10720 1F96  
                                                 u10480 50D6  
                                       __end_of___llmod 8D24  
                                                 u12090 4716  
                                                 u13210 4DEE  
                                __end_of_USBDeviceTasks 3E3A  
                                                 u12340 715E  
                                                 u10900 075E  
                                                 u10820 062C  
                                                 u10477 509C  
                                                 u12190 5F30  
                                                 u13070 77D0  
                                                 u11535 98E8  
                                                 u10487 50CC  
                                                 u12440 75EA  
                                                 u13160 792E  
                                                 u13240 4E92  
                                                 u11625 8A40  
                                                 u12290 72E2  
                                                 u10930 07D6  
                                                 u11740 686A  
                                                 u12540 7528  
                                                 u14300 7992  
                                                 u11645 9C4A  
                                                 u12390 7466  
                                                 u10838 064C  
                                                 u10839 0660  
                                                 u11840 5E32  
                                                 u13360 2524  
                                                 u12800 7D0C  
                                                 u11690 2E10  
                                                 u12490 73A4  
                                                 u10890 074C  
                                                 u11940 2060  
                                                 u10788 052C  
                                                 u13380 2558  
                                                 u10789 0540  
                                                 u11790 4876  
                                                 u10798 055C  
                                                 u12734 55A4  
                                                 u12718 5574  
                                                 u12670 550A  
                                                 u13550 26FE  
                                                 u14190 3E36  
                                                 u12830 7D5C  
                                                 u14430 5DBA  
                                                 u10799 0570  
                                                 u12735 559E  
                                                 u12719 5586  
                                                 u14280 797E  
                                                 u13625 9544  
                                                 u13641 9CD0  
                                                 u11890 45B2  
                                                 u12658 54D8  
                                                 u12930 6B00  
                                                 u12850 00A2  
                             ?_USBCtrlEPServiceComplete 0001  
                                                 u12659 54EC  
                                                 u12684 5520  
                                                 u14380 5D4C  
                                                 u12685 551A  
                                                 u11990 7C4A  
                                                 u12694 5552  
                                                 u12950 6B5C  
                                                 u12695 554C  
                                                 u13770 1022  
                                                 u13870 08EC  
                                                 u14807 9416  
                                                 u14817 9420  
                                                 u14787 9F0C  
                                                 u14797 9404  
                                       __end_of___lwdiv 9538  
                          __flash_write_to_buffer@start 0014  
                                      ??__display_found 0023  
                                       __end_of___lwmod 98DC  
                                         __CFG_WDTEN$ON 000000  
                                     fat_copy_file@name 0059  
                                                 _UADDR 000F38  
                                                 _TMR0H 000FD7  
                                                 _TMR0L 000FD6  
                                 ??__parse_format_drive 002D  
                                  _file_minimum_address 0154  
                                      ??__display_start 001D  
                                                 _USTAT 000F64  
                                      __i2c_read@length 0008  
                            __size_of_parseHexFileEntry 047C  
                           ?_ExternalFlash_CapacityRead 0001  
                                       ?_display_update 0001  
                              __bootloader_program@cntr 00A5  
                              __find_nth_cluster@offset 003C  
                    __size_of_USBCtrlEPAllowStatusStage 00C4  
                        __get_first_cluster@file_number 0038  
                                  ?__bootloader_program 0001  
                                          __delete_root 9700  
                                       ??_flash_is_busy 0014  
                              __bootloader_program@root 007C  
                             __end_of__find_nth_cluster 8262  
                              __find_nth_cluster@sector 0040  
                                      __end_of_MSDTasks 2758  
                                        __CFG_FCMEN$OFF 000000  
                                       __read_fat@value 0036  
                                    _USBCheckMSDRequest 6EDA  
                       __end_of_internalFlash_getBuffer A22C  
                       __end_of_USBCtrlEPAllowDataStage 8088  
                                                 _sd000 BFCB  
                                __write_value_to_offset 9ADC  
                                                 _sd001 BEE7  
                                                 _sd002 BF1B  
                                                 _sd003 BF8A  
                        ?_USBIncrement1msInternalTimers 0001  
                        __size_of_MSDTransferTerminated 0056  
                                   ??__flash_get_status 000F  
                                __end_of_bootloader_run 8CBE  
                   i2c_display_send_init_sequence@F6812 01C7  
                         __end_of_MSDTransferTerminated 923A  
                                          _gblCBWLength 0191  
                            __end_of__parse_file_delete 6912  
                             ??_internalFlash_writePage 000B  
                                ?_MSDCheckForErrorCases 000B  
                                 ??__system_timer0_init 0001  
                            __end_of__parse_file_append 46DE  
                            __end_of__parse_file_create 4994  
                                __end_of_ResetSenseData 8E4E  
                            __end_of__parse_file_modify 22A0  
                            __end_of__parse_file_rename 5EF6  
                             internalFlash_read@address 000E  
                              fat_write_to_buffer@start 0025  
                              __parse_command_long@data 009D  
                             __data_sector_from_cluster A1F4  
                             fat_get_format_status@cntr 002E  
                            __end_of__parse_file_resize 2FDC  
                               ?__fill_buffer_read_file 009E  
                                                 pclath 000FFA  
                                       __end_of_ui_init A16E  
                                                 tablat 000FF5  
                             __size_of_USBStallEndpoint 0108  
                                   ?_USBCheckMSDRequest 0001  
                                       _MSDCommandState 00EA  
                           ??_ExternalFlash_SectorWrite 002E  
                                                 plusw1 000FE3  
                                                 plusw2 000FDB  
                       __end_of_internalFlash_erasePage 8BEC  
                        __parse_file_rename@file_number 0067  
                            __end_of__display_rebooting 92E6  
                                           ?_USBMSDInit 0001  
              ExternalFlash_WriteProtectStateGet@config 0001  
                         __size_of__system_encoder_init 003A  
                                                 utoa@c 0010  
                                                 utoa@v 000E  
                                                 status 000FD8  
              fat_copy_sector_to_buffer@physical_sector 004F  
                               i2c_eeprom_readByte@addr 0018  
                           ?__flash_copy_page_to_buffer 0014  
                                     __CFG_DSWDTPS$8192 000000  
                     __size_of__parse_settings_i2c_mode 00C2  
                                       __end_of_strncmp 7736  
                             ?__parse_settings_i2c_mode 0001  
                                 hexCharsToUint8@retVal 0006  
                       __fill_buffer_read_file@inBuffer 009E  
                    __fill_buffer_read_buffer@outBuffer 002D  
                            fat_read_from_buffer@length 0027  
                        __bootloader_check_address@cntr 000C  
              __parse_settings_i2c_frequency@out_buffer 0003  
                        ??_MSDComputeDeviceInAndResidue 0003  
                              __ic2_display_set_address 9E42  
               __fill_buffer_get_file_details@outBuffer 003A  
                                        _MSDReadHandler 35A8  
                       fat_append_to_file@old_file_size 0092  
                   __parse_settings_spi_mode@out_buffer 0003  
                          __size_of_USBStdSetCfgHandler 00E2  
                     fat_create_file@number_of_clusters 0060  
                 __bootloader_check_address@byte_status 000B  
                           __end_of__make_cluster_chain 184A  
                  __parse_sector_to_buffer@return_value 005C  
                         internalFlash_readPage@address 0018  
                     __make_cluster_chain@first_cluster 0036  
                                       __initialization 84B8  
                         fat_read_from_file@file_number 0078  
                              __parse_write_buffer@data 002B  
                             __end_of__flash_get_status 9C3C  
                          fat_get_file_information@data 0030  
                           fat_read_from_file_fast@data 004A  
                    spi_set_configuration@configuration 0001  
                                   _system_minimal_init A118  
                 __end_of_ExternalFlash_MediaInitialize A0B6  
                __size_of_ExternalFlash_MediaInitialize 001A  
                         _ExternalFlash_MediaInitialize A09C  
                  __offset_from_file_number@file_number 0003  
                        __size_of_system_encoder_enable 0010  
                               __end_of_fat_resize_file 60F2  
                                           _FileAddress 0174  
                                          __end_of_main 3FB6  
                                          __end_of_itoa 989A  
                         __end_of_system_encoder_enable A1B6  
                            i2c_eeprom_readByte@address 0012  
                       __end_of_i2c_display_write_fixed 9290  
                                          __end_of_utoa 7E04  
                         fat_read_from_file_fast@length 0046  
                                  __end_of__normal_mode 8FCE  
                                      _timer_pseudo_isr 9A74  
                         fat_read_from_file_fast@offset 0064  
                              __parse_command_short@cmd 002A  
                    fat_read_from_file_fast@read_length 0068  
                                      __end_of_i2c_init A20E  
                                    __flash_buffer_read 9588  
                    __size_of_flash_copy_page_to_buffer 001E  
                         fat_read_from_file_fast@sector 0060  
                              __end_of__i2c_acknowledge A24A  
                        __end_of__fill_buffer_find_file 7F48  
                       fat_append_to_file@new_file_size 008E  
                                         ??__i2c_open_1 0001  
                                       _hex_file_offset 00D5  
                                  ??_USBCheckMSDRequest 000C  
                     __fill_buffer_get_status@outBuffer 0015  
                                        __CFG_OSC$HSPLL 000000  
                       ??_bootloader_get_rec_dataLength 0003  
                MSDComputeDeviceInAndResidue@DiExpected 0001  
                                hexCharsToUint16@retVal 000A  
                               _USBCheckMSDRequest$2320 000E  
                                _flash_read_from_buffer 9C6A  
                               _USBCheckMSDRequest$2319 000C  
                               _bootloader_get_rec_data A144  
                             __size_of_USBCtrlEPService 00AC  
                               __display_rebooting@cntr 0001  
                                          __get_fat@idx 0001  
                                          __get_fbr@idx 0001  
                                         _startup_timer 017C  
                                  api_prepare@outBuffer 00B4  
                                                ??_main 00BB  
                                      __end_of__i2c_get A240  
                                                ??_itoa 0017  
                                    USBStallEndpoint@ep 0006  
                                  __size_of__ui_encoder 0100  
                                                ??_utoa 000E  
                            __bootloader_program@buffer 0076  
                                         __activetblptr 000003  
                                       ?_USBDeviceTasks 0001  
                                 main@bytes_transmitted 00BF  
                              _fat_get_file_information 89C0  
                              __flash_buffer_read@start 0014  
                                    __write_root@offset 002D  
                                          __get_mbr@idx 0001  
            __end_of_ExternalFlash_WriteProtectStateGet A2DA  
           __size_of_ExternalFlash_WriteProtectStateGet 0004  
                  ??_ExternalFlash_WriteProtectStateGet 0003  
                   ?_ExternalFlash_WriteProtectStateGet 0001  
                    _ExternalFlash_WriteProtectStateGet A2D6  
                                   __find_nth_cluster@n 003A  
                                   ?__flash_buffer_read 0014  
                                           ?_USBSuspend 0001  
                                    __write_root@sector 002B  
                           ?_spi_get_external_rx_buffer 0001  
                                  __size_of_api_prepare 016E  
                                 ??__bootloader_program 006E  
            __internalFlash_unlockAndActivate@UnlockKey 0001  
                         __get_available_cluster@offset 0032  
                                ?_spi_set_configuration 0001  
               fat_write_sector_from_buffer@file_number 0051  
                         __get_available_cluster@sector 0034  
                  fat_copy_sector_to_buffer@file_number 0053  
                                  _i2c_eeprom_writeByte 98DC  
                           ?_spi_get_external_tx_buffer 0001  
                                  ?_system_minimal_init 0001  
                    fat_write_sector_from_buffer@sector 0043  
                                       ?_bootloader_run 0001  
                            __end_of__display_suspended 4C3A  
                         __flash_write_to_buffer@buffer 001A  
                                       _system_delay_ms 9EFE  
                                __flash_write_to_buffer 95D8  
                       i2c_digipot_reset_off@data_array 000B  
                        __end_of__fill_buffer_read_file 2DD8  
                                  _start_from_byte_next 018D  
                                      ___llmod@dividend 0001  
                      __end_of__fat_offset_from_cluster A118  
                                                _EECON1 000FA6  
                                                _EECON2 000FA7  
                                                _DMABCH 000F66  
                                                _DMABCL 000F67  
                                     ??__display_failed 0023  
                            ?_fat_copy_sector_to_buffer 0043  
                                ?_i2c_digipot_reset_off 0001  
                                       ?_ResetSenseData 0001  
                           ??__get_available_root_entry 0036  
                                            __i2c_start A2A2  
                                SYSTEM_Initialize@state 0005  
                                            __i2c_write 9670  
                                  _fat_read_from_buffer 9FF0  
                             fat_read_from_file@cluster 0079  
                  __flash_write_page_from_buffer@buffer 0016  
                                                _INTCON 000FF2  
                                                _TABLAT 000FF5  
                             ??__bootloader_verify_file 006E  
                       ??_APP_DeviceCustomHIDInitialize 000D  
                              ?__fill_buffer_get_status 0015  
                                     ??__display_search 0001  
                                      __end_of__get_fat 933C  
                                      __end_of__get_fbr 2504  
                                      __end_of__get_mbr 6D4C  
                                                _OSCCON 000FD3  
                           __flash_partial_read@address 0024  
                                                _TBLPTR 000FF6  
                                        __CFG_WDTPS$512 000000  
                                                _RPINR1 000EE1  
                                                _RPOR21 000ED5  
                                                _RPINR2 000EE2  
                                                _RPOR22 000ED6  
                                                _RPINR3 000EE3  
                                                _RPOR23 000ED7  
                             __size_of_system_full_init 005C  
                                     ??__display_verify 001D  
                                    __size_of_i2c_reset 000E  
                                        __CFG_WPCFG$OFF 000000  
                                __end_of_MSDReadHandler 3782  
                                   _flash_pages_written 0176  
                                     __spi_init@details 0001  
                                      ??__i2c_wait_idle 0001  
                                ?_display_get_character 0001  
                                      ?_display_prepare 0001  
                                  ??__flash_buffer_read 001B  
              __fill_buffer_get_bootloader_details@cntr 000B  
                                 __parse_file_copy@data 0094  
                           __flash_partial_read@command 0020  
                                        __CFG_WPDIS$OFF 000000  
                                 __bootloader_find_file 7E04  
                                      __read_fat@offset 0034  
                                      __end_of_fat_init A1D6  
                     __bootloader_program@page_to_write 00A7  
                                      __read_fat@sector 0032  
                                     _shortPacketStatus 00F7  
                     fat_append_to_file@number_of_bytes 0056  
                                        __CFG_XINST$OFF 000000  
                                      ?_fat_modify_file 0042  
                                       USBDeviceTasks@i 0020  
                           USBStdFeatureReqHandler@pUEP 0019  
                              USBTransferOnePacket@data 0002  
                            USBCtrlTrfInHandler@lastDTS 0002  
                       __end_of_internalFlash_writePage 77EE  
                          __end_of__flash_set_page_size 885E  
                                       _hexCharsToUint8 A04A  
                                       ??_USBDeviceInit 0009  
                    __flash_copy_page_to_buffer@command 001A  
                              flash_partial_read@length 002C  
                    __parse_buffer_to_sector@out_buffer 0054  
                                                _gblCBW 0100  
                                     _fat_get_file_size 8B12  
                                    __size_of__i2c_read 008C  
                             __size_of_hexCharsToUint16 0070  
                                    __size_of__i2c_send 0008  
                                        __CFG_STVREN$ON 000000  
                        __read_value_from_offset@buffer 0003  
                                    __size_of__i2c_stop 0008  
                                             ??___lldiv 0009  
                                             ??___llmod 0009  
             SYSTEM_Initialize@pll_startup_counter_3117 0003  
                         __parse_file_delete@out_buffer 0052  
                                             ??___lwdiv 0005  
                          __size_of_flash_partial_write 0070  
                                            _SoftDetach 00E6  
                                             ??___lwmod 0005  
                                                _buffer 03C0  
     __end_of__parse_settings_i2c_slaveModeSlaveAddress 742E  
    __size_of__parse_settings_i2c_slaveModeSlaveAddress 00C2  
           ??__parse_settings_i2c_slaveModeSlaveAddress 0007  
            ?__parse_settings_i2c_slaveModeSlaveAddress 0001  
             __parse_settings_i2c_slaveModeSlaveAddress 736C  
                                     _USBEnableEndpoint 9958  
                         __bootloader_program@address32 00A0  
                        __read_value_from_offset@offset 0001  
                       __size_of_USBStdGetStatusHandler 00AA  
                     __size_of__parse_settings_spi_mode 00C2  
                             ?__parse_settings_spi_mode 0001  
                                                _memcpy 8D24  
                                    ?_fat_get_file_size 0036  
                                                _memset 9D1E  
                      __end_of__sector_from_file_number 9DA2  
                               __parse_sector_to_buffer 440E  
                                                clear_0 84F2  
                                                clear_1 8506  
                                                clear_2 8518  
                                                clear_3 8524  
                                                clear_4 8530  
                                                clear_5 853C  
                             _ExternalFlash_SectorWrite 9B42  
                                     api_parse@inBuffer 00A4  
                                       __CFG_CLKOEC$OFF 000000  
                                      __end_of_inq_resp BF6D  
                                                _reboot A0B6  
                  __bootloader_check_address@worst_case 000A  
                                ??_i2c_digipot_reset_on 000B  
                          bootloader_get_rec_data@index 0001  
                     __end_of_flash_copy_page_to_buffer A04A  
                                                _ui_run 5CFA  
                                                _spi_tx 918C  
                                    ?_USBEnableEndpoint 0009  
                           internalFlash_erasePage@page 0009  
                               i2c_eeprom_writeByte@dat 0011  
                                    _flash_partial_read 9BD8  
                __make_cluster_chain@number_of_clusters 0038  
                                                _tx_buf 01D0  
                         __parse_file_resize@out_buffer 0057  
                                      ?_fat_rename_file 0038  
                            __parse_command_long@length 00A3  
                       ??__parse_settings_spi_frequency 0007  
                             fat_copy_file@return_value 0090  
                              ??_internalFlash_readPage 0018  
                         __size_of_USBTransferOnePacket 0102  
                                   __size_of_USBMSDInit 0102  
                           i2c_display_write_fixed@data 0006  
           i2c_display_send_init_sequence@init_sequence 000B  
                                __size_of__flash_wakeup 0056  
                                                itoa@cp 0017  
                                     _i2c_set_frequency 9D4A  
                          __end_of_jump_to_main_program A2B8  
                                 __end_of_fat_find_file 69F2  
                        __parse_command_long@out_buffer 009F  
                                   ??_fat_get_file_size 003A  
                         __size_of__parse_command_short 00C6  
                      __size_of__read_value_from_offset 0046  
                           ?_bootloader_get_rec_address 0001  
                                 ?_i2c_eeprom_writeByte 000B  
                      __size_of_fat_read_from_file_fast 0226  
                                          __mediumconst BC6C  
                                   __end_of__i2c_open_1 A0E8  
                            __size_of__find_nth_cluster 009E  
                     __fill_buffer_read_buffer@inBuffer 002B  
                        i2c_digipot_reset_on@data_array 000B  
                                 ??_system_minimal_init 0004  
                                                tblptrh 000FF7  
                                                tblptrl 000FF6  
               __end_of_internalFlash_addressWithinPage 8F10  
              __size_of_internalFlash_addressWithinPage 0060  
                     ??_internalFlash_addressWithinPage 000F  
                      ?_internalFlash_addressWithinPage 0009  
                       _internalFlash_addressWithinPage 8EB0  
                                                tblptru 000FF8  
                                      __end_of_spi_init 9958  
                                             ??_ui_init 0001  
                      __size_of_APP_DeviceMSDInitialize 0010  
                                         main@rx_buffer 00C1  
                       ??__flash_compare_page_to_buffer 0017  
                                   ??_USBEnableEndpoint 000A  
                                    ?_i2c_set_frequency 0001  
                                   ?_flash_partial_read 0028  
                           ??__bootloader_check_address 0006  
                                         spi_tx_rx@data 0005  
                     __size_of__fat_sector_from_cluster 0018  
                            __end_of__root_is_available 8EB0  
                               __spi_external_rx_buffer 0300  
                             ?__fat_sector_from_cluster 0001  
                                         spi_tx_tx@data 0005  
                                 __end_of_fat_copy_file 62DA  
                                           _CtrlTrfData 000D38  
                                             ??_strncmp 0007  
                                  __size_of__write_root 0044  
                                         main@tx_buffer 00C3  
                           __end_of_fat_write_to_buffer A02C  
                                 ?_fat_read_from_buffer 0025  
                                 __end_of_ui_get_status A2D0  
                       ExternalFlash_MediaDetect@config 0001  
                                  _controlTransferState 00F6  
                            ??_APP_DeviceCustomHIDTasks 00B7  
                                  __CFG_LS48MHZ$SYS48X8 000000  
                               __spi_external_tx_buffer 0340  
                                     _SYSTEM_Initialize 943E  
                                 fat_modify_file@length 0046  
                                 fat_modify_file@offset 0066  
                                   ??_i2c_set_frequency 0001  
                                            __accesstop 0060  
                               __end_of__initialization 8542  
                                 fat_modify_file@sector 0060  
                     MSDCheckForErrorCases@MSDErrorCase 0010  
                                       ?_MSDReadHandler 0001  
                          fat_resize_file@first_cluster 0064  
             __parse_settings_i2c_frequency@out_idx_ptr 0005  
                                    ?_SYSTEM_Initialize 0001  
                                __size_of__display_done 0172  
                                         ___rparam_used 000001  
                                    parseHexFileEntry@i 001C  
                              __size_of_USBStallHandler 0044  
                          __end_of__i2c_not_acknowledge A236  
                       ExternalFlash_SectorWrite@config 0025  
                       ExternalFlash_SectorWrite@buffer 002B  
                      __fill_buffer_read_file@file_size 00A6  
                           __end_of__parse_command_long 1DA4  
                     __end_of_failed_line3_noNextRecord BE16  
                                    __size_of__get_data 0028  
                                    __size_of__get_date 000A  
                  __parse_settings_spi_mode@out_idx_ptr 0005  
                             __end_of_fat_get_file_size 8B80  
                                   __size_of_USBSuspend 0032  
                                    __size_of__get_time 000A  
                                    __size_of__get_root 0196  
             __parse_settings_spi_frequency@out_idx_ptr 0005  
                                  ??_flash_partial_read 0030  
                                        __pcstackCOMRAM 0001  
                            __size_of__flash_get_status 0032  
                             __end_of_USBEnableEndpoint 9994  
                      __size_of__parse_buffer_to_sector 0160  
                              _bootloader_get_file_size A194  
                   __size_of_ExternalFlash_CapacityRead 0012  
                             fat_read_from_buffer@start 0025  
                                         __end_of_sd000 BFCF  
                                         __end_of_sd001 BF1B  
                                         __end_of_sd002 BF49  
                                         __end_of_sd003 BFA4  
                                             ?_MSDTasks 0001  
                                          __pidataBANK0 A2DE  
                                          __pidataBANK1 9EB4  
                             ??_bootloader_get_rec_data 0001  
                                      ?_fat_resize_file 004D  
                                   ??_SYSTEM_Initialize 0001  
              __end_of_bootloader_get_flashPagesWritten A27C  
             __size_of_bootloader_get_flashPagesWritten 000A  
                    ??_bootloader_get_flashPagesWritten 0003  
                     ?_bootloader_get_flashPagesWritten 0001  
                      _bootloader_get_flashPagesWritten A272  
                             __get_available_root_entry 9F46  
                                   fat_rename_file@cntr 005E  
                                   fat_rename_file@name 0038  
                  ExternalFlash_SectorWrite@sector_addr 0027  
                        __parse_file_modify@file_number 008F  
                      __size_of_USBCtrlEPAllowDataStage 009E  
                                   fat_rename_file@root 003E  
                                    __size_of__read_fat 0056  
                                       _active_protocol 01B1  
                         __size_of_USBConfigureEndpoint 0094  
                       __end_of__bootloader_verify_file 129A  
                       ??_bootloader_get_rec_recordType 0001  
                    __size_of_ExternalFlash_MediaDetect 0004  
                           __end_of_USBCtrlTrfInHandler 6E14  
                                   _userInterfaceStatus 00E4  
                                   display_prepare@mode 0029  
                                          _gblSenseData 011F  
                          fat_copy_file@new_file_number 008F  
                                       _MSDErrorHandler 57F0  
                        ?_ExternalFlash_MediaInitialize 0001  
                  __sector_from_file_number@file_number 0003  
                            flash_write_to_buffer@start 001F  
                             __end_of_i2c_set_frequency 9D76  
                         __size_of__display_programming 01CA  
                                     __end_of_i2c_reset A1F4  
                               __end_of_system_delay_ms 9F22  
                                    __size_of_api_parse 012A  
                               parseHexFileEntry@offset 000E  
                                      _hex_file_entries 017A  
                        __end_of_failed_line3_startCode BCBD  
                                    _flash_sector_write 933C  
                                    _fat_read_from_file 62DA  
                    __parse_sector_to_buffer@out_buffer 0056  
                                    __size_of__spi_init 0038  
                            fat_delete_file@file_number 004F  
                               flash_sector_write@match 0024  
                 __end_of_MSDProcessCommandMediaPresent 085A  
                __size_of_MSDProcessCommandMediaPresent 03BE  
                         _MSDProcessCommandMediaPresent 049C  
                                          _failed_line1 BD98  
                                          _failed_line2 BCE2  
                                          _failed_line4 BE69  
                                flash_partial_read@data 002E  
                                flash_partial_read@page 0028  
                                         __get_data@idx 0001  
                         __size_of_bootloader_get_error 0006  
                              ??_USBCtrlTrfSetupHandler 001E  
                               _USBTicksSinceSuspendEnd 0192  
                     __flash_copy_page_to_buffer@buffer 0016  
                             __end_of_SYSTEM_Initialize 9492  
                                     __end_of__i2c_read 85D4  
                                     __end_of__i2c_send A2B2  
                                   hexCharToUint8@ascii 0002  
                                _USBStdGetStatusHandler 7B68  
                                   ?_flash_sector_write 0020  
                                   USBStallEndpoint@dir 0001  
                                     __end_of__i2c_stop A2A2  
                                           ?__i2c_start 0001  
                                   ?_fat_read_from_file 006E  
                                           ?__i2c_write 0006  
                         __read_value_from_offset@value 0008  
                                            __pbssBANK0 00C5  
                                            __pbssBANK1 0100  
                                            __pbssBANK2 0200  
                                            __pbssBANK3 0300  
                                 _flash_write_to_buffer 9C98  
                   __parse_sector_to_buffer@file_number 005B  
                      __size_of_i2c_display_write_fixed 0056  
                                      _USBStallEndpoint 56E8  
                          __size_of_i2c_eeprom_readByte 0050  
                                            _gblNumBLKS 015C  
                                             ?_i2c_init 0001  
                        __parse_sector_to_buffer@sector 005D  
                      __fill_buffer_read_file@outBuffer 00A0  
                                      _mediaInformation 01AA  
                               __end_of_hexCharsToUint8 A066  
                        __size_of_fat_get_format_status 00A4  
                        fat_get_file_information@offset 0035  
                                ?__bootloader_find_file 0001  
                        __get_available_cluster@cluster 0030  
                         __end_of_fat_get_format_status 7D60  
                       ??__fill_buffer_get_file_details 003C  
                                         __flash_wakeup 93E8  
                              __fill_buffer_get_display 78A6  
                               ?__get_available_cluster 002C  
                                             ?__i2c_get 0001  
                           __size_of_USBWakeFromSuspend 0038  
                                           _pBDTEntryIn 00CB  
                                 __size_of__normal_mode 005E  
                           __size_of_i2c_display_cursor 0024  
                               ?_bootloader_get_entries 0001  
                      __end_of_USBCtrlEPServiceComplete 5CFA  
                 __end_of_APP_DeviceCustomHIDInitialize 9ADC  
                __size_of_APP_DeviceCustomHIDInitialize 0034  
                         _APP_DeviceCustomHIDInitialize 9AA8  
                           MSDTransferTerminated@handle 000C  
                    __size_of__data_sector_from_cluster 000E  
                        ??__parse_settings_spi_polarity 0007  
                          __size_of__parse_write_buffer 0154  
                             __bootloader_check_address 6AD0  
                    ExternalFlash_SectorSizeRead@config 0001  
                                  USBCtrlTrfRxService@i 0001  
                             ??__parse_sector_to_buffer 005A  
                                            ??_MSDTasks 004D  
                               ??_i2c_digipot_backlight 000B  
                                            _fat_format 2FDC  
                                     ?__display_checked 0001  
                                  ??_flash_sector_write 0024  
                     __size_of__fat_offset_from_cluster 0018  
                        __flash_write_to_buffer@command 001B  
                                  ??_fat_read_from_file 005C  
                          __size_of__flash_partial_read 0078  
                             ?__fat_offset_from_cluster 0001  
                       ??__parse_settings_i2c_frequency 0007  
                              __size_of_fat_delete_file 0048  
                                             MSDTasks@i 0052  
                      ??__fill_buffer_get_configuration 0003  
                       ?__fill_buffer_get_configuration 0001  
                                               ?_memcpy 0001  
                                    _fat_append_to_file 7F48  
                                               ?_memset 0001  
                    __parse_settings_i2c_frequency@data 0001  
                                            _device_dsc BFA4  
                   fat_get_file_information@file_number 0037  
                                      ??_display_update 0011  
                        __parse_buffer_to_sector@sector 005B  
                                               ?_reboot 0001  
                                         __get_root@idx 0001  
                                    ??__display_checked 001D  
                                           __i2c_open_1 A0D0  
                                      _USBCtrlEPService 7ABC  
                                               ?_ui_run 0001  
                                            _ep_data_in 0171  
                                               ?_spi_tx 0001  
                                    __display_clear@col 0004  
                               _extended_linear_address 014C  
                                    __display_clear@row 0003  
                              __delete_root@file_number 002E  
                                     ?__parse_file_copy 0094  
                         fat_append_to_file@file_number 0097  
                                             ?__get_fat 0001  
                                             ?__get_fbr 0001  
                                         __display_done 412E  
                 __data_sector_from_cluster@fat_cluster 0001  
                                             ?__get_mbr 0001  
                           __end_of_USBCtrlTrfRxService 54CC  
                               ?__write_value_to_offset 0001  
                                    _USBCheckStdRequest 63C8  
                                ??_i2c_eeprom_writeByte 000E  
                                     _configDescriptor1 BEA7  
                       __size_of_internalFlash_readPage 0042  
                    __parse_file_append@number_of_bytes 009B  
                               ??_MSDCheckForErrorCases 000F  
                                    ??__parse_file_copy 005D  
                                   ?_fat_append_to_file 0056  
                                fat_append_to_file@data 0058  
                                            _flash_init A082  
                    __fill_buffer_get_display@outBuffer 0005  
                           __end_of_USBCtrlTrfTxService 6C7E  
                                     __end_of__get_data 9E1C  
                                     __end_of__get_date A29A  
                                   _USBStdSetCfgHandler 64AA  
                                    __display_done@cntr 001D  
                                     __end_of__get_time A290  
                                   fat_copy_file@sector 0091  
                                     __end_of__get_root 3CBA  
                                    __size_of_spi_tx_rx 0094  
                                    __size_of_spi_tx_tx 008C  
                                             ?_fat_init 0001  
                                               _RPINR21 000EFC  
                                               _RPINR22 000EFD  
                                               _RPINR23 000EFE  
                 __end_of__parse_settings_spi_frequency 736C  
                __size_of__parse_settings_spi_frequency 00C2  
                         __parse_settings_spi_frequency 72AA  
                                            _done_line1 BD68  
                                            _done_line2 BE9D  
                                            _done_line3 BD58  
                                            _done_line4 BD48  
                                               _SSP1ADD 000FC8  
                         __parse_settings_spi_mode@data 0001  
                                               _SSP1BUF 000FC9  
                                ??_fat_read_from_buffer 002B  
                       __end_of_bootloader_get_rec_data A15A  
                                               _RXADDRH 000F68  
                                               _RXADDRL 000F69  
                                _total_hex_file_entries 0178  
                                               _TXADDRH 000F6A  
                                               _TXADDRL 000F6B  
                                   ?_USBCheckStdRequest 0001  
                            ??__ic2_display_set_address 000B  
                          __size_of_USBStdGetDscHandler 013A  
                                  __flash_set_page_size 87E4  
                                               _UIEbits 000F36  
                              __end_of_timer_pseudo_isr 9AA8  
                       __parse_file_append@return_value 0099  
                                    __get_first_cluster 9492  
                                          __normal_mode 8F70  
                            __end_of_APP_DeviceMSDTasks A182  
                                               _UIRbits 000F62  
                                     __end_of__read_fat 93E8  
                       ??_internalFlash_pageFromAddress 0005  
                              _system_minimal_init_undo A1B6  
           MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                   __bootloader_verify_file@rec_counter 0096  
                               __size_of_hexCharToUint8 002C  
                     __size_of__sector_from_file_number 002C  
                 __end_of__flash_compare_page_to_buffer 88D6  
                __size_of__flash_compare_page_to_buffer 0078  
                         __flash_compare_page_to_buffer 885E  
                                            ??_i2c_init 0002  
                                      __CFG_CFGPLLEN$ON 000000  
                              __i2c_write@slave_address 0009  
                                   _bootloader_filename BFB6  
                             ?__sector_from_file_number 0001  
                   __ic2_display_set_address@data_array 000C  
                                            _pageBuffer 0800  
                                          ??_USBMSDInit 000C  
                         flash_copy_page_to_buffer@page 001E  
                            __flash_buffer_read@command 001B  
                         fat_read_from_file@return_code 007D  
                                      _system_full_init 8FCE  
                                     __read_fat@cluster 0030  
               __parse_settings_spi_polarity@out_buffer 0003  
                        __end_of__get_available_cluster 7126  
                                        ?__flash_wakeup 0001  
                fat_read_from_file_fast@working_cluster 0062  
                        __end_of_bootloader_get_entries A272  
                                fat_find_file@extension 002E  
                              ?_internalFlash_getBuffer 0001  
                                     __end_of_api_parse 528C  
                                   ?__get_first_cluster 0030  
                      i2c_eeprom_readByte@slave_address 0017  
                                            ??__i2c_get 0001  
                                     _MSDProcessCommand 54CC  
                                       hexCharToUint8@c 0001  
                                  ??_fat_append_to_file 005A  
                              fat_find_file@file_number 0032  
                                         __i2c_send@dat 0001  
                             __flash_get_status@command 000F  
                                               __Hparam 0000  
                       ??_USBIncrement1msInternalTimers 0001  
                                    __parse_file_delete 6832  
                                  ?_USBStdSetCfgHandler 0001  
                            __size_of_fat_get_file_size 006E  
             __end_of__get_available_offset_from_buffer 9084  
            __size_of__get_available_offset_from_buffer 005A  
                   ??__get_available_offset_from_buffer 0005  
                    ?__get_available_offset_from_buffer 0001  
                     __get_available_offset_from_buffer 902A  
                                     __end_of__spi_init 9A06  
                           __size_of_USBCheckHIDRequest 00E2  
                                    __parse_file_append 457A  
                                               __Lparam 0000  
                                    __parse_file_create 483E  
                                  _jump_to_main_program A2B2  
                        __parse_file_rename@out_idx_ptr 0064  
                              __size_of_fat_create_file 014E  
                                     __end_of_hid_rpt01 BF8A  
                                    ?_MSDProcessCommand 0001  
                                  __display_failed@cntr 0023  
                               __end_of_MSDErrorHandler 58F6  
                            _MSDTransferTerminated$2407 000E  
                            __size_of_USBEnableEndpoint 003C  
                                    __parse_file_modify 2028  
                               ?_flash_read_from_buffer 001F  
                                    __parse_file_rename 5DF8  
                            ??_fat_get_file_information 0032  
                                  ??_USBCheckStdRequest 001E  
                                      _hexCharsToUint16 8A32  
                                    __parse_file_resize 2DD8  
                                            _last_error 018E  
                                             ?_spi_init 0001  
                         __size_of_USBCtrlTrfOutHandler 0060  
                   ExternalFlash_MediaInitialize@config 0001  
                                      _ToSendDataBuffer 0380  
                     __end_of__data_sector_from_cluster A202  
                              ?_internalFlash_erasePage 0009  
                                  __end_of_found_line3b BE96  
                                               ___lldiv 86E6  
                                      ??_USBDeviceTasks 0020  
                                               ___llmod 8CBE  
                                               ___lwdiv 94E6  
                                     ??_USBStallHandler 0001  
                                               ___lwmod 989A  
                                     _fast_read_cluster 00FB  
                                    __display_rebooting 9290  
                           __end_of__parse_format_drive 7CBC  
                           __size_of_internalFlash_read 0036  
                                   ?__parse_file_delete 0050  
                                     ?__i2c_acknowledge 0001  
                                   ?__parse_file_append 005A  
                                   ?__parse_file_create 0059  
                                   __size_of__i2c_start 0008  
                          __end_of__system_encoder_init 99CE  
                                               __pcinit 84B8  
                                       __size_of_memcpy 0066  
                                   __size_of__i2c_write 0048  
                                       __size_of_memset 002C  
                              __size_of_MSDWriteHandler 02B8  
                             __end_of_configDescriptor1 BEE7  
                        __end_of__write_value_to_offset 9B10  
                                   ??_MSDProcessCommand 0048  
                                               __ramtop 0F00  
                                       __size_of_reboot 001A  
                          ExternalFlash_SectorRead@page 0034  
                                __display_itoa_u32@text 0021  
                                __display_itoa_u16@text 001B  
                            __size_of_i2c_set_frequency 002C  
                                        ?__display_done 0001  
                                               __ptext0 3E3A  
                                               __ptext1 5CFA  
                                       __display_failed 129A  
                                               __ptext2 A1A6  
                                               __ptext3 9CC6  
                                               __ptext4 9F6A  
                                               __ptext5 9F8C  
                                               __ptext6 9E1C  
                                               __ptext7 5AFA  
                                               __ptext8 9A74  
                                   ?__parse_file_modify 0056  
                                               __ptext9 A1B6  
                                               _inPipes 00C5  
                               ??_spi_set_configuration 0001  
                                   ?__parse_file_rename 0060  
                                       __size_of_ui_run 00FE  
                                        fat_format@cntr 0025  
                     __size_of_ExternalFlash_SectorRead 0032  
                                       __size_of_spi_tx 0058  
                           _USBDeferOUTDataStagePackets 00EC  
                                   ?__parse_file_resize 0055  
                                    ??__i2c_acknowledge 0001  
                                             _T0CONbits 000FD5  
                                            ??__get_fat 0003  
                                            ??__get_fbr 0003  
                                            ??__get_mbr 0003  
                             ?_ExternalFlash_SectorRead 002C  
                                      ??_bootloader_run 005C  
                                      ?_system_delay_ms 0001  
                           __end_of__system_timer0_init 9FF0  
                                  ??__get_first_cluster 0032  
                               __read_value_from_offset 9748  
                               _fat_read_from_file_fast 2996  
                                          ??_USBSuspend 0018  
                                       __display_search 4C3A  
                                    __end_of_USBMSDInit 59F8  
                                   ?__display_rebooting 0001  
                                      ??_ResetSenseData 0001  
                               ?__flash_write_to_buffer 0014  
                               _APP_DeviceMSDInitialize A1D6  
                                               _msd_cbw 000D40  
                                       __display_verify 528C  
                                               _msd_csw 000D80  
                              __fill_buffer_read_buffer 60F2  
                               ??_i2c_digipot_reset_off 000B  
                                  __i2c_not_acknowledge A22C  
                              __offset_from_file_number 9E8E  
                    __parse_settings_spi_frequency@data 0001  
                                               _ui_init A15A  
                                            ??_fat_init 0030  
                        __parse_file_append@file_number 009A  
                       __end_of__parse_sector_to_buffer 457A  
                    __size_of_ExternalFlash_SectorWrite 0032  
                                 ?__flash_set_page_size 0001  
                                 __end_of_flash_is_busy A144  
                                    __end_of_USB_CD_Ptr BEA5  
                              i2c_eeprom_writeByte@data 000D  
                                            _msd_buffer 000600  
                            __size_of_SYSTEM_Initialize 0054  
                       __size_of_USBCtrlTrfSetupHandler 0092  
                                ?_flash_write_to_buffer 001F  
                               __size_of__flash_is_busy 0022  
                          fat_get_file_size@file_number 0042  
                                               _strncmp 7674  
                                   _flash_partial_write 8AA2  
                           ??_fat_copy_sector_to_buffer 0045  
                                  end_of_initialization 8542  
                                  ??__parse_file_delete 0056  
         __fill_buffer_get_bootloader_details@outBuffer 0005  
                               ??_display_get_character 0002  
                                 _MSDTransferTerminated 91E4  
                 __flash_compare_page_to_buffer@command 001C  
           __end_of__fill_buffer_get_bootloader_details 33CA  
          __size_of__fill_buffer_get_bootloader_details 01EE  
                 ??__fill_buffer_get_bootloader_details 0007  
                  ?__fill_buffer_get_bootloader_details 0005  
                   __fill_buffer_get_bootloader_details 31DC  
                        ?_MSDProcessCommandMediaPresent 0001  
                                  ??__parse_file_append 0098  
                                  ??__parse_file_create 005F  
                                    __end_of_USB_SD_Ptr BE81  
                                               memcpy@d 000B  
                                               memcpy@n 0006  
                                               memcpy@s 0008  
                                   _pBDTEntryEP0OutNext 00DF  
                                  ??__parse_file_modify 005C  
                             __end_of_MSDProcessCommand 55DE  
                                               itoa@buf 0011  
                                  ??__parse_file_rename 005F  
                                               memset@c 0003  
                                               itoa@val 0013  
                                               memset@n 0005  
                                               memset@p 0007  
                          fat_delete_file@first_cluster 004D  
                                  ??__parse_file_resize 005B  
                                       _USB1msTickCount 0164  
                                      ?_hexCharsToUint8 0003  
                              __flash_partial_read@data 001A  
                                _internalFlash_readPage 9816  
                              ?_USBStdFeatureReqHandler 0001  
                              __flash_partial_read@page 0014  
                                  ??__display_rebooting 0001  
                           i2c_eeprom_writeByte@address 000B  
             __fill_buffer_get_file_details@file_number 003D  
                                 ??_USBStdSetCfgHandler 0018  
                       __parse_command_long@out_idx_ptr 00A1  
                                       ___lldiv@divisor 0005  
                                 ?_jump_to_main_program 0001  
                                       ___lldiv@counter 000D  
                                    __display_suspended 4AE8  
                        __end_of_flash_read_from_buffer 9C98  
                               __parse_buffer_to_sector 46DE  
                          ?_bootloader_get_rec_checksum 0001  
                                    __end_of_USBSuspend 9B42  
                               _USBCtrlEPAllowDataStage 7FEA  
                                     __end_of_spi_tx_rx 8426  
                                     __end_of_spi_tx_tx 8660  
                 __end_of__fill_buffer_get_file_details 89C0  
                __size_of__fill_buffer_get_file_details 0072  
                         __fill_buffer_get_file_details 894E  
                                               postdec1 000FE5  
                                               postdec2 000FDD  
          __make_cluster_chain@different_sector_cluster 0040  
                  __end_of_ExternalFlash_SectorSizeRead A254  
                 __size_of_ExternalFlash_SectorSizeRead 000A  
                          _ExternalFlash_SectorSizeRead A24A  
                                            ??_spi_init 0004  
                                               postinc0 000FEE  
                                               postinc2 000FDE  
                                           ?_fat_format 0001  
                                  ?_flash_partial_write 0020  
                      __size_of__fill_buffer_get_status 00E2  
                                         ??__ui_encoder 002A  
                                               utoa@buf 0008  
               MSDProcessCommandMediaPresent@sectorSize 003F  
                              _USBCtrlEPServiceComplete 5BFA  
                                               utoa@val 000A  
                                             _MSD_State 00EB  
                                   ?__display_suspended 0001  
               __end_of__cluster_from_sector_and_offset 9E8E  
              __size_of__cluster_from_sector_and_offset 0026  
                     ??__cluster_from_sector_and_offset 0005  
                      ?__cluster_from_sector_and_offset 0001  
                       __cluster_from_sector_and_offset 9E68  
                           __end_of__bootloader_program 0C0C  
 __parse_settings_i2c_slaveModeSlaveAddress@out_idx_ptr 0005  
                         __parse_file_modify@out_buffer 0058  
                                 _system_encoder_enable A1A6  
                       ??_internalFlash_addressFromPage 0005  
                           __size_of_USBCheckMSDRequest 00C4  
                                         ??_api_prepare 0060  
                            _USBStatusStageEnabledFlag1 00EF  
                            _USBStatusStageEnabledFlag2 00EE  
                        __parse_format_drive@out_buffer 0029  
                              flash_partial_write@match 0028  
                                    USBEnableEndpoint@p 000A  
                          __size_of__make_cluster_chain 02BE  
                                             _PORTAbits 000F80  
                                             _PORTBbits 000F81  
                                             _PORTDbits 000F83  
                              flash_partial_write@start 0022  
                        __end_of__flash_write_to_buffer 9628  
                                      __CFG_DSBOREN$OFF 000000  
                 __end_of__parse_settings_i2c_frequency 7674  
                __size_of__parse_settings_i2c_frequency 00C2  
                         __parse_settings_i2c_frequency 75B2  
                        internalFlash_writePage@address 0013  
                              ?_internalFlash_writePage 0009  
                         __parse_settings_i2c_mode@data 0001  
                    __size_of__get_available_root_entry 0024  
                                  spi_tx_rx@data_length 0007  
                                 ?__i2c_not_acknowledge 0001  
                                     ??_fat_delete_file 004D  
                         __parse_file_modify@start_byte 0092  
                      __make_cluster_chain@next_cluster 004B  
                                fat_modify_file@cluster 0063  
                                           ?_flash_init 0001  
                                      __CFG_CPUDIV$OSC1 000000  
                       __fill_buffer_find_file@inBuffer 0037  
                                             _TRISAbits 000F92  
                                             _TRISBbits 000F93  
                                             _TRISCbits 000F94  
                                    api_parse@outBuffer 00A7  
                                             _TRISDbits 000F95  
                                             _TRISEbits 000F96  
                                    _ReceivedDataBuffer 0250  
                                    _BothEP0OutUOWNsSet 00F2  
                                         __pbssBIGRAMlh 0800  
                                         __pbssBIGRAMll 03C0  
                                      ??_MSDReadHandler 0036  
 __parse_settings_i2c_masterModeSlaveAddress@out_buffer 0003  
                             __flash_partial_read@start 0016  
                             USBConfigureEndpoint@EPNum 0006  
                               _i2c_display_write_fixed 923A  
                                     __CFG_SOSCSEL$HIGH 000000  
                            ?_USBCtrlEPAllowStatusStage 0001  
                              __parse_settings_i2c_mode 742E  
                                  ??__display_suspended 0001  
                   USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                               __size_of__display_clear 0048  
                                             _USTATcopy 00FD  
                                       ??__flash_wakeup 0009  
         MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                               __size_of__display_found 01DE  
                                         _checked_line1 BDA8  
                                         _checked_line2 BC6D  
                                         _checked_line3 BE71  
                                         _checked_line4 BD06  
                                   __delete_root@offset 002B  
                            ??_bootloader_get_file_size 0005  
                        ?__parse_settings_spi_frequency 0001  
                   __parse_write_buffer@number_of_bytes 0032  
                                   __delete_root@sector 0029  
                              _failed_line3_dataTooLong BE25  
                               __size_of__display_start 01D8  
                                       _suspended_line1 BD38  
                                       _suspended_line2 BE4D  
                                       _suspended_line3 BEA5  
                                       _suspended_line4 BD28  
                          __end_of_USBTransferOnePacket 5AFA  
                                i2c_display_cursor@line 000F  
                      __fat_sector_from_cluster@cluster 0001  
                                      __CFG_IOL1WAY$OFF 000000  
                     internalFlash_writePage@block_cntr 0011  
                          __end_of__parse_command_short 6EDA  
                           __size_of__flash_buffer_read 0050  
                 __end_of_internalFlash_pageFromAddress A082  
                __size_of_internalFlash_pageFromAddress 001C  
                         _internalFlash_pageFromAddress A066  
                                  __end_of_reboot_line1 BE40  
                                  __end_of_search_line1 BDE8  
                                  __end_of_search_line2 BD28  
                                  __end_of_search_line3 BCAA  
                                  __end_of_search_line4 BE60  
                        ?__flash_compare_page_to_buffer 0014  
                         __fill_buffer_get_display@cntr 000D  
                                    __root_is_available 8E4E  
                         __fill_buffer_get_display@line 000E  
                                     __CFG_WPEND$PAGE_0 000000  
                    __flash_compare_page_to_buffer@page 0014  
                                   __CFG_MSSP7B_EN$MSK7 000000  
                    __make_cluster_chain@minimum_sector 003E  
                               __end_of__display_failed 158C  
                                      ?_MSDErrorHandler 0001  
                 fat_resize_file@new_number_of_clusters 0062  
                    __find_nth_cluster@sector_in_buffer 003E  
                          fat_resize_file@new_file_size 004D  
                                      __write_root@data 0029  
                                _USBCtrlTrfSetupHandler 8426  
                                 ??_flash_partial_write 0028  
                          __write_value_to_offset@value 0005  
                         ??_bootloader_get_rec_checksum 0001  
                  __parse_buffer_to_sector@return_value 0059  
                             _fat_copy_sector_to_buffer 77EE  
                        __bootloader_program@entry_page 0078  
                    fat_copy_sector_to_buffer@file_size 0049  
                                __display_checked@start 001F  
                      ExternalFlash_CapacityRead@config 0001  
                              __size_of_display_prepare 00DE  
                               __end_of__display_search 4D8C  
                                 __end_of_USBDeviceInit 4EDA  
                 __end_of_USBIncrement1msInternalTimers 9EFE  
                __size_of_USBIncrement1msInternalTimers 0024  
                         _USBIncrement1msInternalTimers 9EDA  
                                       ??__display_done 001D  
                       __sector_from_file_number@sector 0004  
                         ?_ExternalFlash_SectorSizeRead 0001  
                               __end_of__display_verify 53B4  
                             ??__read_value_from_offset 0005  
                                   ?__root_is_available 0001  
                                     __size_of_MSDTasks 0254  
                             ??_fat_read_from_file_fast 0050  
                              __end_of_USBStallEndpoint 57F0  
                                   _i2c_eeprom_readByte 9538  
                                     ??_fat_create_file 0055  
                   __bootloader_program@start_from_byte 00A4  
                    __fill_buffer_read_file@data_length 00AA  
                           __end_of_system_minimal_init A12E  
                              __size_of_fat_modify_file 023E  
                             ??_APP_DeviceMSDInitialize 000F  
                             _failed_line3_addressRange BC82  
                       __parse_write_buffer@out_idx_ptr 002F  
                                        __end_of_memcpy 8D8A  
                                       _MSDRetryAttempt 00E7  
                                        __end_of_memset 9D4A  
                        __parse_file_modify@out_idx_ptr 005A  
                                        __end_of_reboot A0D0  
                    __size_of__bootloader_check_address 00DA  
                                      __CFG_DSWDTEN$OFF 000000  
                            ?_flash_copy_page_to_buffer 001E  
                         __size_of_i2c_digipot_reset_on 0022  
                                     _USBBusIsSuspended 00F4  
                             flash_partial_write@length 0024  
                                        __end_of_ui_run 5DF8  
                                        __end_of_spi_tx 91E4  
                 __get_available_root_entry@file_number 0036  
                                   fat_modify_file@data 0048  
                         __parse_file_append@out_buffer 005C  
                                   __end_of__ui_encoder 5BFA  
                             __flash_set_page_size@size 0018  
                           flash_write_to_buffer@length 0021  
                                   start_initialization 84B8  
                              fat_copy_file@file_number 0093  
                                   fat_modify_file@root 006E  
                               ?_USBStdGetStatusHandler 0001  
                                         ??__write_root 002B  
                         ExternalFlash_SectorWrite@page 002E  
                         USBCtrlTrfRxService@byteToRead 0002  
                                ??__flash_set_page_size 0014  
                                   __parse_write_buffer 4994  
                                     ??_MSDWriteHandler 0030  
                                             _i2c_reset A1E6  
                                   __end_of_api_prepare 440E  
                     __end_of__get_available_root_entry 9F6A  
                              ?__bootloader_verify_file 0001  
                                  __display_found@start 0025  
                            ??__fill_buffer_get_display 0008  
                            i2c_display_cursor@position 000E  
                                ?_MSDTransferTerminated 000C  
                              __size_of_fat_rename_file 009E  
                                       _USBMSDOutHandle 00DD  
                      __ic2_display_set_address@address 000B  
                          __end_of_USBConfigureEndpoint 8392  
                                          ??__i2c_start 0001  
                               __flash_buffer_read@data 0018  
     internalFlash_addressWithinPage@page_start_address 0013  
                                          ??__i2c_write 0009  
                       __end_of_USBStdFeatureReqHandler 2028  
                                   __flash_partial_read 88D6  
                                     USBStallEndpoint@p 0007  
                                   __size_of_fat_format 0200  
                               ??__bootloader_find_file 0043  
                                         _MSDHostNoData 00E5  
                                        _hexCharToUint8 9CF2  
                internalFlash_addressWithinPage@address 0009  
                                  ??__root_is_available 0030  
                     __end_of_USBCtrlEPAllowStatusStage 7062  
                              _fast_read_cluster_number 00F9  
                                  ?_i2c_eeprom_readByte 0012  
                          __end_of__display_programming 3B24  
                              __end_of_USBCtrlEPService 7B68  
                            __size_of_MSDProcessCommand 0112  
                        ??_fat_write_sector_from_buffer 0045  
                                  __system_encoder_init 9994  
                                             __i2c_read 8548  
                                             __i2c_send A2AA  
                             ??__parse_buffer_to_sector 0058  
                                       ___llmod@divisor 0005  
                                             __i2c_stop A29A  
                                ??_jump_to_main_program 0001  
                                       ___llmod@counter 0009  
                                     __size_of_i2c_init 000C  
                             ??_USBCtrlEPAllowDataStage 0002  
                   __parse_sector_to_buffer@out_idx_ptr 0058  
                          __size_of_fat_write_to_buffer 001E  
                              ??__fill_buffer_find_file 003B  
                                        USBDeviceInit@i 0009  
                          __end_of_bootloader_get_error A2D6  
                            __flash_partial_read@length 0018  
                                  ?__parse_write_buffer 002B  
                         __end_of_failed_line3_checksum BE07  
                         __root_is_available@first_byte 0035  
                                _pBDTEntryEP0OutCurrent 00E1  
                                __size_of_fat_find_file 00E0  
                              __parse_settings_spi_mode 71E8  
                      __end_of_fat_get_file_information 8A32  
                                           _DMACON1bits 000F88  
                                           _DMACON2bits 000F86  
                                   __size_of_flash_init 001A  
                               USBTransferOnePacket@dir 0001  
                               USBTransferOnePacket@len 0004  
                                     _programming_line1 BD88  
                                     _programming_line2 BCD0  
                                     _programming_line3 BE81  
                                     _programming_line4 BD78  
                                         _MSDTasks$2372 004E  
                                         _MSDTasks$2373 0050  
                                     __size_of__i2c_get 000A  
                           MSDErrorHandler@OldMSD_State 000A  
                           __size_of_flash_partial_read 0032  
                                 spi_init@configuration 0004  
                         fat_append_to_file@return_code 0096  
                               flash_partial_read@start 002A  
                                   _USBStdGetDscHandler 5028  
                                ?_system_encoder_enable 0001  
                                  ?__flash_partial_read 0014  
                                     __CFG_ADCSEL$BIT10 000000  
                     __size_of_APP_DeviceCustomHIDTasks 00B2  
                            fat_get_file_size@file_size 003E  
                                           __pdataBANK0 00FF  
                                           __pdataBANK1 01B3  
                             ?_APP_DeviceCustomHIDTasks 0001  
                        __size_of_i2c_digipot_backlight 0026  
                                __size_of_fat_copy_file 00F2  
                                              ??_memcpy 0008  
                               __size_of__i2c_wait_idle 0058  
                                              ??_memset 0007  
                          __size_of__parse_command_long 02A2  
                         __end_of_i2c_digipot_backlight 9E42  
                                          ?__i2c_open_1 0001  
                                              ??_reboot 002A  
                                __size_of_ui_get_status 0006  
                                              ??_ui_run 002A  
                                    __end_of__i2c_start A2AA  
                                              ??_spi_tx 0005  
                        ?__fill_buffer_get_file_details 0038  
                                    __end_of__i2c_write 96B8  
                              __end_of_system_full_init 902A  
                             __root_is_available@offset 0032  
                                ??__i2c_not_acknowledge 0001  
                                _USBActiveConfiguration 00FE  
                              ??__fill_buffer_read_file 00A2  
                        __end_of_USBStdGetStatusHandler 7C12  
                            ??_system_minimal_init_undo 0001  
                              __size_of_fat_resize_file 00FE  
                              __fat_sector_from_cluster A0E8  
                           api_parse@receivedDataLength 00A6  
                                      api_parse@out_idx 00AE  
                     __end_of__bootloader_check_address 6BAA  
                                         ?__delete_root 0001  
                 __end_of_internalFlash_addressFromPage 9C6A  
                __size_of_internalFlash_addressFromPage 002E  
                         _internalFlash_addressFromPage 9C3C  
           fat_copy_sector_to_buffer@number_of_clusters 004D  
                                     __size_of__get_fat 0056  
                                     __size_of__get_fbr 0264  
                             ??_i2c_display_write_fixed 0009  
              __parse_settings_spi_frequency@out_buffer 0003  
                                         __pcstackBANK0 0060  
                          __size_of_USBCtrlTrfInHandler 00C8  
                                     __size_of__get_mbr 00CE  
                          ??_ExternalFlash_CapacityRead 0005  
                        __size_of_MSDCheckForErrorCases 00E2  
                                            ?_i2c_reset 0001  
                                  __display_search@cntr 0001  
                  __size_of_bootloader_get_rec_checksum 0006  
                          __end_of_bootloader_extension BFCB  
              __get_available_offset_from_buffer@buffer 0003  
                         __end_of_MSDCheckForErrorCases 6750  
               __bootloader_program@address_within_page 007A  
                               __end_of_suspended_line1 BD48  
                               __end_of_suspended_line2 BE57  
                               __end_of_suspended_line3 BEA6  
                               __end_of_suspended_line4 BD38  
                            fat_create_file@file_number 0064  
                                __end_of_hexCharToUint8 9D1E  
                             __size_of__display_checked 0178  
                                             _gblBLKLen 0158  
              __get_available_offset_from_buffer@offset 0007  
                    __end_of_flash_command_pagesize_512 BFC7  
                            _flash_command_pagesize_512 BFC3  
                    __end_of_flash_command_pagesize_528 BFC3  
                            _flash_command_pagesize_528 BFBF  
                        ?__parse_settings_i2c_frequency 0001  
                                        __flash_is_busy 9FAE  
                                  ?_USBStdGetDscHandler 0001  
                              __end_of_hexCharsToUint16 8AA2  
                            i2c_set_frequency@frequency 0001  
                                          _found_line3b BE8F  
                                             __get_data 9DF4  
                                             __get_date A290  
                                     _flash_sector_read 9BA6  
                      __bootloader_program@return_value 009C  
                                     __size_of_fat_init 0010  
                                 ??_i2c_eeprom_readByte 0014  
                   fat_get_file_information@root_sector 0033  
                                     ?_timer_pseudo_isr 0001  
                       __end_of__read_value_from_offset 978E  
                       __end_of_fat_read_from_file_fast 2BBC  
                                             __get_time A286  
                                             __get_root 3B24  
                                flash_sector_write@data 0022  
                                flash_sector_write@page 0020  
                                   __end_of__write_root 9816  
       __fill_buffer_get_bootloader_details@data_length 000A  
                                 ?__system_encoder_init 0001  
                            __end_of_USBWakeFromSuspend 9A3E  
                             __size_of__parse_file_copy 00FE  
                                    ?_flash_sector_read 0028  
                            __end_of_i2c_display_cursor 9F46  
                                            ?__i2c_read 0006  
                                    ??_timer_pseudo_isr 0001  
                                            ?__i2c_send 0001  
                                       _USBStallHandler 978E  
                                          _pBDTEntryOut 0146  
                                            ?__i2c_stop 0001  
                            fat_modify_file@file_number 0062  
                            fat_rename_file@file_number 003C  
                                             __read_fat 9392  
                              ?_bootloader_get_rec_data 0001  
                             __end_of_programming_line1 BD98  
                             __end_of_programming_line2 BCE2  
                             __end_of_programming_line3 BE88  
                             __end_of_programming_line4 BD88  
                      __end_of_ExternalFlash_SectorRead 9BA6  
                                 ??__parse_write_buffer 0031  
                                   flash_is_busy@result 0014  
                  __end_of_bootloader_get_total_entries A286  
                 __size_of_bootloader_get_total_entries 000A  
                          _bootloader_get_total_entries A27C  
                    __get_available_cluster@skip_sector 002E  
                                      ___lwdiv@dividend 0001  
                                 _fat_get_format_status 7CBC  
                     fat_read_from_file_fast@start_byte 0042  
                                     fat_find_file@name 002C  
                        MSDProcessCommandMediaPresent@i 0047  
                                   ??_flash_sector_read 002C  
                                             _api_parse 5162  
                             fat_create_file@root_entry 0065  
                                      ?__display_failed 0001  
                               __fill_buffer_get_status 6750  
                                    _APP_DeviceMSDTasks A16E  
                                         __pmediumconst BC6C  
                                   fat_find_file@offset 0035  
                                 ??__flash_partial_read 001C  
                                             __ptext100 A2DA  
                                             __ptext101 795A  
                                             __ptext110 6750  
                                             __ptext102 42A0  
                                             __ptext111 A12E  
                                             __ptext103 2BBC  
                                             __ptext200 9F46  
                                             __ptext120 A2BE  
                                             __ptext112 894E  
                                             __ptext104 62DA  
                                             __ptext201 77EE  
                                             __ptext121 A2C4  
                                             __ptext113 78A6  
                                             __ptext105 2996  
                                             __ptext210 7062  
                                             __ptext202 A02C  
                                             __ptext130 9F22  
                                             __ptext122 7EA6  
                                             __ptext114 9DA2  
                                             __ptext106 60F2  
                                             __ptext211 902A  
                                             __ptext203 457A  
                                             __ptext131 9E42  
                                             __ptext123 5162  
                                             __ptext115 8088  
                                             __ptext107 9FF0  
                                             __ptext220 89C0  
                                             __ptext212 9E68  
                                             __ptext204 7F48  
                                             __ptext140 A194  
                                             __ptext132 69F2  
                                             __ptext124 6E14  
                                             __ptext116 31DC  
                                             __ptext108 9C6A  
                                             __ptext221 81C4  
                                             __ptext213 2758  
                                             __ptext205 5FF4  
                                             __ptext141 129A  
                                             __ptext133 528C  
                                             __ptext125 9EFE  
                                             __ptext117 A2B8  
                                             __ptext109 9588  
                                             __ptext230 8B12  
                                             __ptext222 9BA6  
                                             __ptext214 8AA2  
                                             __ptext206 97D2  
                                             __ptext150 9628  
                                             __ptext142 A25E  
                                             __ptext134 4AE8  
                                             __ptext126 A0B6  
                                             __ptext118 A254  
                                             __ptext231 8E4E  
                                             __ptext223 9748  
                                             __ptext215 95D8  
                                             __ptext207 158C  
                                             __ptext151 3FB6  
                                             __ptext143 A2D0  
                                             __ptext135 3782  
                                             __ptext127 A2CA  
                                             __ptext119 A144  
                                             __ptext240 8392  
                                             __ptext232 9492  
                                             __ptext224 9392  
                                             __ptext216 85D4  
                                             __ptext208 933C  
                                             __ptext160 9670  
                                             __ptext152 A27C  
                                             __ptext144 A268  
                                             __ptext136 4C3A  
                                             __ptext128 8BEC  
                                             __ptext241 9D76  
                                             __ptext233 9BD8  
                                             __ptext225 A0E8  
                                             __ptext217 90DC  
                                             __ptext209 9ADC  
                                             __ptext161 9084  
                                             __ptext153 7A0C  
                                             __ptext145 0C0C  
                                             __ptext137 9290  
                                             __ptext129 923A  
                                             __ptext242 9E8E  
                                             __ptext234 55DE  
                                             __ptext226 A100  
                                             __ptext218 9134  
                                             __ptext170 71E8  
                                             __ptext162 A29A  
                                             __ptext154 9858  
                                             __ptext146 8CBE  
                                             __ptext138 395A  
                                             __ptext243 59F8  
                                             __ptext235 88D6  
                                             __ptext227 A1F4  
                                             __ptext219 885E  
                                             __ptext171 72AA  
                                             __ptext163 A2A2  
                                             __ptext155 7D60  
                                             __ptext147 86E6  
                                             __ptext139 33CA  
                                             __ptext244 0000  
                                             __ptext236 9FAE  
                                             __ptext228 46DE  
                                             __ptext180 6C7E  
                                             __ptext172 736C  
                                             __ptext164 A2AA  
                                             __ptext156 989A  
                                             __ptext148 412E  
                                             __ptext237 93E8  
                                             __ptext229 8768  
                                             __ptext181 22A0  
                                             __ptext173 742E  
                                             __ptext165 1B02  
                                             __ptext157 94E6  
                                             __ptext149 A272  
                                             __ptext238 918C  
                                             __ptext190 9700  
                                             __ptext182 92E6  
                                             __ptext174 74F0  
                                             __ptext166 4994  
                                             __ptext158 98DC  
                                             __ptext239 9C0A  
                                             __ptext191 483E  
                                             __ptext183 9DF4  
                                             __ptext175 75B2  
                                             __ptext167 A00E  
                                             __ptext159 9D4A  
                                             __ptext192 5EF6  
                                             __ptext184 2DD8  
                                             __ptext176 440E  
                                             __ptext168 9C98  
                                             __ptext193 61E8  
                                             __ptext185 5DF8  
                                             __ptext177 7C12  
                                             __ptext169 7126  
                                             __ptext194 4EDA  
                                             __ptext186 8126  
                                             __ptext178 2FDC  
                                             __ptext195 8D24  
                                             __ptext187 2028  
                                             __ptext179 3B24  
                                             __ptext196 6912  
                                             __ptext188 6832  
                                             __ptext197 7674  
                                             __ptext189 96B8  
                                             __ptext198 A286  
                                             __ptext199 A290  
                        ?_internalFlash_pageFromAddress 0001  
                                   fat_find_file@sector 0033  
                                              ?___lldiv 0001  
                                              ?___llmod 0001  
                           __size_of_flash_sector_write 0056  
                                              ?___lwdiv 0001  
                                             __spi_init 99CE  
                            ??__fill_buffer_read_buffer 002F  
                                              ?___lwmod 0001  
                            ??__offset_from_file_number 0003  
                           __size_of_fat_read_from_file 00EE  
                                      ?__display_search 0001  
                                             _hid_rpt01 BF6D  
                                           __ui_encoder 5AFA  
                             __get_first_cluster@offset 0034  
                                             _idle_rate 01B2  
                                      ?__display_verify 0001  
                                     __size_of_spi_init 003C  
                             __get_first_cluster@sector 0032  
                      __size_of_internalFlash_getBuffer 000A  
                                           _api_prepare 42A0  
                               __parse_file_delete@data 0050  
                             fat_modify_file@start_byte 0042  
                       __end_of__parse_buffer_to_sector 483E  
                                       __i2c_write@data 0006  
                                  _file_maximum_address 0150  
                                       __i2c_write@cntr 000A  
                                   fat_create_file@name 004D  
                                   ?_APP_DeviceMSDTasks 0001  
                    __flash_write_to_buffer@data_length 0018  
       __parse_settings_i2c_masterModeSlaveAddress@data 0001  
                                   fat_create_file@size 0051  
                        internalFlash_erasePage@address 000F  
                                     system_delay_ms@ms 0002  
                                  _USBTransferOnePacket 59F8  
                            __make_cluster_chain@offset 0049  
                            ?_ExternalFlash_MediaDetect 0001  
                                        ??__delete_root 0029  
                        __size_of_spi_set_configuration 010A  
                            __make_cluster_chain@sector 0045  
                        ??_ExternalFlash_SectorSizeRead 0003  
                                     ??_display_prepare 0027  
                         __end_of_spi_set_configuration 56E8  
                               ??_flash_write_to_buffer 0025  
                                  __CFG_RTCOSC$T1OSCREF 000000  
                                  __parse_command_short 6E14  
                          ??_spi_get_external_rx_buffer 0003  
                   __fill_buffer_get_display@secondHalf 0007  
                                fat_read_from_file@data 0076  
                                __end_of__flash_is_busy 9FD0  
                                         _fat_find_file 6912  
                         __size_of_i2c_eeprom_writeByte 0040  
                                              ?_ui_init 0001  
                                fat_read_from_file@root 007E  
                             __display_programming@cntr 001D  
                                     __display_itoa_u32 0C0C  
                                     __display_itoa_u16 7A0C  
                      __size_of_internalFlash_erasePage 006C  
                          __end_of_USBCtrlTrfOutHandler 8F70  
                  __end_of__parse_settings_spi_polarity 71E8  
                 __size_of__parse_settings_spi_polarity 00C2  
                          __parse_settings_spi_polarity 7126  
                                     ??_fat_modify_file 004A  
                             __end_of_flash_sector_read 9BD8  
                                 ??_USBStdGetDscHandler 0001  
                        __size_of_i2c_digipot_reset_off 0022  
                   __size_of__flash_copy_page_to_buffer 0058  
                                   __end_of_found_line1 BDD8  
                                   __end_of_found_line2 BCD0  
                                   __end_of_found_line3 BE9D  
                                   __end_of_found_line4 BD06  
                                           _ep_data_out 016E  
                                       ?_hexCharToUint8 0001  
                                      ___lwdiv@quotient 0005  
                 __end_of_bootloader_get_rec_dataLength A25E  
                __size_of_bootloader_get_rec_dataLength 000A  
                         __end_of_i2c_digipot_reset_off 9FAE  
                         _bootloader_get_rec_dataLength A254  
                          ??_spi_get_external_tx_buffer 0003  
                                         _MSDWriteState 00E8  
                          __size_of_USBCtrlTrfRxService 0118  
                                    ?__display_itoa_u32 001D  
                                    ?__display_itoa_u16 0019  
                         USBConfigureEndpoint@direction 0001  
                                              ?_strncmp 0001  
                                        __display_clear 9628  
                             __size_of__i2c_acknowledge 000A  
                                            ?__get_data 0001  
                                            ?__get_date 0001  
                __cluster_from_sector_and_offset@offset 0003  
                         __size_of_fat_read_from_buffer 001E  
                                         _fat_copy_file 61E8  
                               ?_internalFlash_readPage 0016  
                      ??_i2c_display_send_init_sequence 000B  
                       ?_i2c_display_send_init_sequence 0001  
                                        __display_found 33CA  
                      __end_of_bootloader_get_file_size A1A6  
                                           _file_buffer 0290  
                __cluster_from_sector_and_offset@sector 0001  
                                       _config_internal 016B  
                                            ?__get_time 0001  
                                            ?__get_root 0001  
                          __parse_file_copy@file_number 005F  
                                         _ui_get_status A2CA  
                                       _config_external 0168  
                                        __display_start 3782  
                        __parse_file_append@out_idx_ptr 005E  
                          __size_of_USBCtrlTrfTxService 00D4  
                        __size_of_display_get_character 002A  
                                   __make_cluster_chain 158C  
                       fat_copy_file@number_of_clusters 0089  
                                  ??_APP_DeviceMSDTasks 0053  
                         __end_of_display_get_character 9DCC  
                                           _file_number 00FF  
                                              _LATAbits 000F89  
                                              _LATBbits 000F8A  
                                              _LATCbits 000F8B  
                                              _LATDbits 000F8C  
                                              _LATEbits 000F8D  
                            __end_of_USBCheckHIDRequest 666E  
                        __root_is_available@file_number 0034  
                   __parse_buffer_to_sector@file_number 005A  
                  __flash_compare_page_to_buffer@buffer 0016  
                            ??_USBCtrlEPServiceComplete 0002  
                                            ?__read_fat 0030  
                                     ??_fat_rename_file 003C  
                                   ??__display_itoa_u32 0023  
                                   ??__display_itoa_u16 001D  
                               __i2c_read@slave_address 0010  
                              ?__parse_sector_to_buffer 0054  
                                              _PIE2bits 000FA0  
                  internalFlash_pageFromAddress@address 0001  
                         internalFlash_read@data_length 0012  
                           __size_of_fat_append_to_file 00A2  
                         __parse_file_create@out_buffer 005B  
                              __fat_offset_from_cluster A100  
                       __size_of__fill_buffer_find_file 00A2  
                        __parse_file_delete@file_number 0058  
                  __flash_compare_page_to_buffer@status 001A  
                                              _PIR2bits 000FA1  
                             parseHexFileEntry@hexEntry 0012  
                                              _PIR3bits 000FA4  
                __fill_buffer_get_file_details@inBuffer 0038  
                     __bootloader_verify_file@address32 009B  
                            __end_of_internalFlash_read 9A74  
                                            ?_api_parse 00A4  
                                              _UEP0bits 000F26  
                         ?_bootloader_get_total_entries 0001  
                     __size_of__ic2_display_set_address 0026  
                               __parse_file_append@data 005A  
                                              _MSDTasks 2504  
                            _USBDeferINDataStagePackets 00ED  
                                          ??_fat_format 0025  
                                       _fat_delete_file 96B8  
                                  _active_configuration 018C  
                             ?__ic2_display_set_address 0001  
                                              _SSP1CON1 000FC6  
                               spi_tx_rx@command_length 0003  
                               __parse_file_create@data 0059  
                               flash_partial_write@data 0026  
                           __size_of_USBCheckStdRequest 00E2  
                       ??_MSDProcessCommandMediaPresent 003A  
                               flash_partial_write@page 0020  
                       __parse_file_rename@return_value 0066  
                                              _UCONbits 000F65  
                                            ?__spi_init 0001  
                   __size_of_spi_get_external_rx_buffer 000A  
                                  _USBConfigureEndpoint 82FE  
                            ?__data_sector_from_cluster 0001  
                                     __i2c_write@length 0008  
                                             _spi_tx_rx 8392  
                                             _spi_tx_tx 85D4  
                                  __display_verify@cntr 001F  
                                  ?__make_cluster_chain 0036  
                       __make_cluster_chain@next_offset 003C  
                    __flash_write_page_from_buffer@page 0014  
                      __size_of_USBStdFeatureReqHandler 0284  
                                        _USBMSDInHandle 00DB  
                   __size_of_spi_get_external_tx_buffer 000A  
                                 flash_sector_read@data 002A  
                                  __display_programming 395A  
                        __parse_file_resize@file_number 0088  
                                 ?_USBTransferOnePacket 0001  
                                 flash_sector_read@page 0028  
                   internalFlash_addressWithinPage@page 000D  
                            ??__parse_settings_i2c_mode 0007  
                                   system_delay_ms@cntr 0003  
                           __size_of__get_first_cluster 0054  
                             __end_of__display_itoa_u16 7ABC  
                             __end_of__display_itoa_u32 0F76  
                       __size_of__fill_buffer_read_file 021C  
                                 ?__parse_command_short 0001  
                                  __end_of_verify_line1 BDC8  
                                  __end_of_verify_line2 BE4D  
                                  __end_of_verify_line3 BE8F  
                             i2c_display_cursor@address 0010  
                                      __CFG_WPFP$PAGE_1 000000  
                                        ?_fat_find_file 002C  
                              fat_rename_file@extension 003A  
                    __size_of_fat_copy_sector_to_buffer 00B8  
                                          ??_flash_init 0019  
                                          _RemoteWakeup 00F5  
                     __end_of_ExternalFlash_MediaDetect A2DE  
                          __size_of__parse_format_drive 00AA  
                                          _reboot_line1 BE33  
                                          _search_line1 BDD8  
                                          _search_line2 BD17  
                                          _search_line3 BC96  
                                          _search_line4 BE57  
                     MSDCheckForErrorCases@DeviceNoData 0011  
                              internalFlash_read@buffer 0014  
                                  spi_tx_tx@data_length 0007  
                       fat_read_from_file_fast@position 006A  
                                       ?__flash_is_busy 0001  
                                           ??_i2c_reset 0001  
                      __end_of__fill_buffer_get_display 795A  
                          ??_bootloader_get_rec_address 0003  
                                           __write_root 97D2  
                   __fill_buffer_get_display@start_line 000F  
                                __end_of__display_clear 9670  
                     __size_of_fat_get_file_information 0072  
                                  _bootloader_get_error A2D0  
                                 __display_checked@cntr 0020  
                                            spi_tx@data 0001  
                             ?_fat_get_file_information 0030  
                                __end_of__display_found 35A8  
                               __end_of_USBStallHandler 97D2  
                              __sector_from_file_number 9D76  
                        __end_of_internalFlash_readPage 9858  
                                        __i2c_read@data 0006  
                       ??__flash_write_page_from_buffer 0017  
                               __size_of_display_update 006A  
                                        __i2c_read@cntr 0011  
                        __parse_file_create@file_number 0085  
                                __end_of__display_start 395A  
                        __parse_write_buffer@out_buffer 002D  
                                           _INTCON2bits 000FF1  
                                        ?_fat_copy_file 0059  
                                           _INTCON3bits 000FF0  
              __parse_settings_spi_polarity@out_idx_ptr 0005  
                                             copy_data0 84CC  
                          __size_of__system_timer0_init 0020  
                         ?__parse_settings_spi_polarity 0001  
                                     ??_fat_resize_file 0051  
                              __size_of_system_delay_ms 0024  
                  __fill_buffer_read_buffer@data_length 0033  
                        ?_internalFlash_addressFromPage 0001  
                                        ?_ui_get_status 0001  
                                ??__system_encoder_init 0001  
                           ??_USBCtrlEPAllowStatusStage 0001  
                     __parse_settings_spi_polarity@data 0001  
                             __find_nth_cluster@cluster 0038  
                           __end_of_USBStdSetCfgHandler 658C  
                           __size_of__parse_file_delete 00E0  
                                    __end_of_fat_format 31DC  
                           __size_of__parse_file_append 0164  
                           __size_of__parse_file_create 0156  
                                   __display_found@cntr 0026  
                                              _i2c_init A202  
                    __parse_file_modify@number_of_bytes 0090  
                                           ??__i2c_read 0009  
                           __size_of__parse_file_modify 0278  
                      __size_of_internalFlash_writePage 00B8  
                                           ??__i2c_send 0001  
                                          _MSDReadState 00E9  
                           __size_of__parse_file_rename 00FE  
                                           ??__i2c_stop 0001  
                           __size_of__parse_file_resize 0204  
                        __parse_write_buffer@start_byte 0034  
                                    __end_of_device_dsc BFB6  
                                            _EECON1bits 000FA6  
                              MSDErrorHandler@ErrorCase 0009  
                                ?_fat_get_format_status 0001  
                                              __i2c_get A236  
                               ?_USBCtrlTrfSetupHandler 0001  
                      internalFlash_writePage@byte_cntr 0012  
                                       _fat_create_file 4EDA  
                           __size_of__display_rebooting 0056  
                             ??__fill_buffer_get_status 0017  
                                            _ANCON0bits 000F48  
                               USBStdGetStatusHandler@p 0002  
                              fat_read_from_file@length 0072  
                                              __Hrparam 0000  
                          __parse_file_create@file_size 0086  
                           __end_of_bootloader_filename BFBF  
                                             memcpy@tmp 000D  
                                              __Lrparam 0000  
                                USBTransferOnePacket@ep 0009  
              __fill_buffer_get_configuration@outBuffer 0001  
                                              _SetupPkt 000D30  
                                    __end_of_flash_init A09C  
                                        _TransferLength 00D9  
                                  _bootloader_extension BFC7  
                             fat_write_to_buffer@length 0027  
                            __end_of_USBCheckMSDRequest 6F9E  
                                       api_parse@in_idx 00AD  
                 fat_read_from_file_fast@cluster_number 004E  
                              __size_of_hexCharsToUint8 001C  
                                 ?_USBConfigureEndpoint 0001  
                                 __flash_is_busy@status 0012  
                              _ExternalFlash_SectorRead 9B74  
                             display_get_character@line 0004  
                                __size_of_flash_is_busy 0016  
                                    __end_of_done_line1 BD78  
                                    __end_of_done_line2 BEA3  
                                    __end_of_done_line3 BD68  
                                    __end_of_done_line4 BD58  
                                        __i2c_wait_idle 9084  
                                       _MSDWriteHandler 184A  
                          fat_create_file@first_cluster 0062  
                                      __size_of___lldiv 0082  
                                      __size_of___llmod 0066  
                   __size_of_bootloader_get_rec_address 000A  
                                 ??__make_cluster_chain 003A  
                                      __size_of___lwdiv 0052  
                                      __size_of___lwmod 0042  
             ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                            ?_spi_tx_rx 0001  
                                            ?_spi_tx_tx 0001  
                                           _MSDCBWValid 0190  
                                 ?__display_programming 0001  
                                     ?_USBStallEndpoint 0001  
                            i2c_display_write_fixed@pos 0009  
                      __end_of_system_minimal_init_undo A1C6  
                                           _found_line1 BDC8  
                                           _found_line2 BCBD  
                                           _found_line3 BE96  
                                           _found_line4 BCF4  
                                              __get_fat 92E6  
                                              __get_fbr 22A0  
                                              __get_mbr 6C7E  
                                  __size_of__i2c_open_1 0018  
                           ??_flash_copy_page_to_buffer 0020  
                                    ??_USBStallEndpoint 0002  
                       __flash_copy_page_to_buffer@page 0014  
                    __end_of_ExternalFlash_CapacityRead A194  
                            _ExternalFlash_CapacityRead A182  
                                   _fat_write_to_buffer A00E  
                               ??_MSDTransferTerminated 000E  
                                __fill_buffer_find_file 7EA6  
                               __display_suspended@cntr 0001  
                          __size_of__bootloader_program 03B2  
                                 ?_bootloader_get_error 0001  
                               __size_of_USBDeviceTasks 0180  
                                       ___lwdiv@divisor 0003  
                               __display_itoa_u32@value 001D  
                               __display_itoa_u16@value 0019  
                                              _fat_init A1C6  
                      __get_first_cluster@first_cluster 0036  
                                       ?__display_clear 0001  
                                       ___lwdiv@counter 0007  
                     __end_of_fat_copy_sector_to_buffer 78A6  
                            __size_of_flash_sector_read 0032  
                                      __display_checked 3FB6  
                 __end_of_bootloader_get_rec_recordType A2BE  
                __size_of_bootloader_get_rec_recordType 0006  
                         _bootloader_get_rec_recordType A2B8  
                              ??__get_available_cluster 0030  
                                              __ptext10 A1E6  
                                              __ptext11 A118  
                                              __ptext20 A1C6  
                                              __ptext12 A202  
                                              __ptext21 7CBC  
                                              __ptext13 A0D0  
                                              __ptext30 0020  
                                              __ptext22 9FD0  
                                              __ptext14 8FCE  
                                              __ptext31 A04A  
                                              __ptext23 9994  
                                              __ptext15 A15A  
                              fat_read_from_buffer@data 0029  
                                              __ptext40 9DCC  
                                              __ptext32 8A32  
                                              __ptext24 A20E  
                                              __ptext16 A082  
                                              __ptext41 8EB0  
                                              __ptext33 9CF2  
                                              __ptext25 A218  
                                              __ptext17 991C  
                                              __ptext50 A240  
                                              __ptext42 9C3C  
                                              __ptext34 7736  
                                              __ptext26 A2B2  
                                              __ptext18 99CE  
                                              __ptext51 3CBA  
                                              __ptext43 6AD0  
                                              __ptext35 9816  
                                              __ptext27 8C56  
                                              __ptext19 87E4  
                                              __ptext60 7FEA  
                                              __ptext52 9A06  
                                              __ptext44 7E04  
                                              __ptext36 9A3E  
                                              __ptext28 0F76  
                                              __ptext61 63C8  
                                              __ptext53 9B10  
                                              __ptext45 8F70  
                                              __ptext37 A066  
                                              __ptext29 085A  
                                              __ptext70 943E  
                                              __ptext62 64AA  
                                              __ptext54 978E  
                                              __ptext46 9538  
                                              __ptext38 A222  
                                              __ptext71 91E4  
                                              __ptext63 9D1E  
                                              __ptext55 9EDA  
                                              __ptext47 8548  
                                              __ptext39 8B80  
                                              __ptext80 6D4C  
                                              __ptext72 A1D6  
                                              __ptext64 7B68  
                                              __ptext56 4D8C  
                                              __ptext48 A22C  
                                              __ptext81 6BAA  
                                              __ptext73 58F6  
                                              __ptext65 5028  
                                              __ptext57 7ABC  
                                              __ptext49 A236  
                                              __ptext90 35A8  
                                              __ptext82 A16E  
                                              __ptext74 9AA8  
                                              __ptext66 1DA4  
                                              __ptext58 8426  
                                              __ptext91 666E  
                                              __ptext83 2504  
                                              __ptext75 9958  
                                              __ptext67 8660  
                                              __ptext59 5BFA  
                                              __ptext92 57F0  
                                              __ptext84 54CC  
                                              __ptext76 82FE  
                                              __ptext68 6EDA  
                                              __ptext93 56E8  
                                              __ptext85 8D8A  
                                              __ptext77 8F10  
                                              __ptext69 658C  
                                              __ptext94 8DEC  
                                              __ptext86 049C  
                                              __ptext78 53B4  
                                              __ptext95 9B74  
                                              __ptext87 184A  
                                              __ptext79 6F9E  
                                              __ptext96 8262  
                                              __ptext88 A2D6  
                                              __ptext97 A24A  
                                              __ptext89 9B42  
                                              __ptext98 A182  
                                              __ptext99 A09C  
                                       ?__display_found 0001  
                                      __size_of_ui_init 0014  
                                          _SSP1CON1bits 000FC6  
                                          _SSP1CON2bits 000FC5  
                              ??_bootloader_get_entries 0003  
                                       ?__display_start 0001  
                          __flash_set_page_size@command 0014  
                                          _SSP2CON1bits 000F72  
                  __end_of_MSDProcessCommandMediaAbsent 8DEC  
                 __size_of_MSDProcessCommandMediaAbsent 0062  
                          _MSDProcessCommandMediaAbsent 8D8A  
                                           ??__get_data 0003  
                                           ??__get_date 0003  
                                 __flash_wakeup@command 0009  
                      fat_copy_sector_to_buffer@cluster 0051  
                             flash_write_to_buffer@data 0023  
                                           ??__get_time 0003  
                                           ??__get_root 0003  
                            ??__parse_settings_spi_mode 0007  
                           __size_of__display_suspended 0152  
                               __size_of_bootloader_run 0068  
                                      __size_of_strncmp 00C2  
                                   __parse_command_long 1B02  
                     __end_of_failed_line3_addressRange BC96  
                            ?_ExternalFlash_SectorWrite 0025  
                 fat_write_sector_from_buffer@file_size 004B  
                        ExternalFlash_SectorRead@config 002C  
                        ExternalFlash_SectorRead@buffer 0032  
                                      __parse_file_copy 5EF6  
                            __end_of__flash_buffer_read 95D8  
                        __size_of__bootloader_find_file 00A2  
                    __end_of__flash_copy_page_to_buffer 918C  
                            __flash_copy_page_to_buffer 9134  
                               __size_of_ResetSenseData 0062  
                      __end_of_APP_DeviceCustomHIDTasks 7A0C  
                         __end_of__bootloader_find_file 7EA6  
                          __end_of_i2c_digipot_reset_on 9F8C  
                        ?_bootloader_get_rec_dataLength 0001  
                                 __end_of__flash_wakeup 943E  
                        __end_of_USBCtrlTrfSetupHandler 84B8  
                                         __size_of_main 017C  
                                     ?_USBCtrlEPService 0001  
                                         __size_of_itoa 0042  
                                              _inq_resp BF49  
                                         __size_of_utoa 00A4  
                               __end_of_fat_delete_file 9700  
                                           ??__read_fat 0032  
                                __fill_buffer_read_file 2BBC  
                           __end_of_flash_partial_write 8B12  
                                            strncmp@len 0005  
                               fat_get_file_size@offset 003C  
                                  ?_fat_write_to_buffer 0025  
                               fat_get_file_size@sector 003A  
                 fat_read_from_file_fast@needed_cluster 0066  
                                    ??_USBCtrlEPService 001E  
                                  __end_of__delete_root 9748  
                      __size_of__bootloader_verify_file 0324  
                               ??_system_encoder_enable 0001  
              __end_of_bootloader_get_rec_checksumCheck A2C4  
             __size_of_bootloader_get_rec_checksumCheck 0006  
                    ??_bootloader_get_rec_checksumCheck 0001  
                     ?_bootloader_get_rec_checksumCheck 0001  
                      _bootloader_get_rec_checksumCheck A2BE  
                        __fill_buffer_read_buffer@start 0031  
                                   _USBCtrlTrfInHandler 6D4C  
                    _MSDProcessCommandMediaPresent$2390 003C  
                              ??__write_value_to_offset 0007  
                        fat_read_from_file_fast@cluster 004C  
                                           ??_api_parse 00A9  
                                __end_of__i2c_wait_idle 90DC  
                 fat_resize_file@old_number_of_clusters 0060  
                            internalFlash_readPage@page 0016  
                                              _outPipes 013E  
                                            _ODCON3bits 000F40  
                                              _spi_init 991C  
                      __end_of__fill_buffer_read_buffer 61E8  
                                  _USBCtrlTrfOutHandler 8F10  
                      __end_of__offset_from_file_number 9EB4  
                            ??__fat_sector_from_cluster 0003  
                             _USBCtrlEPAllowStatusStage 6F9E  
                                           ??__spi_init 0004  
                               _internalFlash_getBuffer A222  
                                  ?__parse_command_long 009D  
                                          _SSP1STATbits 000FC7  
                     __size_of_bootloader_get_file_size 0012  
                     i2c_eeprom_writeByte@slave_address 0013  
                      __parse_format_drive@return_value 002E  
                                ??_USBTransferOnePacket 0005  
                             ?_bootloader_get_file_size 0001  
                            i2c_digipot_backlight@level 000B  
                                    hexCharsToUint16@c1 0009  
                                    hexCharsToUint16@c2 0003  
                                    hexCharsToUint16@c3 0004  
                                    hexCharsToUint16@c4 0005  
                __make_cluster_chain@remaining_clusters 0043  
                                   __display_start@cntr 001D  
                                          _SSP2STATbits 000F73  
                                 __end_of__display_done 42A0  
                        ??_bootloader_get_total_entries 0003  
                        ?_APP_DeviceCustomHIDInitialize 0001  
                                       ??_fat_find_file 0030  
                                ??__parse_command_short 002A  
                                     ?_system_full_init 0001  
                 MSDProcessCommandMediaPresent@capacity 0043  
                         display_get_character@position 0001  
                              __size_of_MSDErrorHandler 0106  
                                fat_copy_file@file_size 008B  
                             _USBDeferStatusStagePacket 00F0  
                    __end_of_spi_get_external_rx_buffer A222  
                            _spi_get_external_rx_buffer A218  
                            __size_of__display_itoa_u16 00B0  
                            __size_of__display_itoa_u32 036A  
                       __end_of__fill_buffer_get_status 6832  
                               __parse_file_modify@data 0056  
                     __fill_buffer_get_display@position 0010  
                                           _OSCTUNEbits 000F9B  
                                            _INTCONbits 000FF2  
              __end_of__internalFlash_unlockAndActivate 9DF4  
             __size_of__internalFlash_unlockAndActivate 0028  
                    ??__internalFlash_unlockAndActivate 0001  
                     ?__internalFlash_unlockAndActivate 0001  
                      __internalFlash_unlockAndActivate 9DCC  
                               _internalFlash_erasePage 8B80  
                              __parse_format_drive@data 0027  
                                    ??_system_full_init 0030  
                             __flash_buffer_read@buffer 001A  
                                  ?_USBCtrlTrfInHandler 0001  
                                              memcpy@d1 0001  
                                              memcpy@s1 0003  
                             __flash_buffer_read@length 0016  
                         USBCtrlTrfTxService@byteToSend 0001  
                    __end_of_spi_get_external_tx_buffer A218  
                            _spi_get_external_tx_buffer A20E  
                                       ??_fat_copy_file 0085  
                       i2c_digipot_backlight@data_array 000C  
                                              itoa@base 0015  
                         __parse_file_rename@out_buffer 0062  
                          __size_of_system_minimal_init 0016  
                                       ??_ui_get_status 0001  
                                              memset@p1 0001  
                                     _parseHexFileEntry 0020  
                      fat_read_from_file@cluster_number 007B  
                  __end_of_MSDComputeDeviceInAndResidue 82FE  
                 __size_of_MSDComputeDeviceInAndResidue 009C  
                          _MSDComputeDeviceInAndResidue 8262  
                            fat_modify_file@return_code 0065  
                                      ?_USBStallHandler 0001  
                              USBStdFeatureReqHandler@p 001C  
                               spi_tx_tx@command_length 0003  
                            ?__get_available_root_entry 0001  
                                   __end_of_start_line1 BDF8  
                                   __end_of_start_line2 BE69  
                                   __end_of_start_line3 BEA7  
                                   __end_of_start_line4 BE25  
                         __size_of__flash_set_page_size 007A  
                                         ?__normal_mode 0001  
                            fat_rename_file@return_code 003D  
                                         _flash_is_busy A12E  
                                     ?_hexCharsToUint16 0003  
                                      __i2c_acknowledge A240  
                                bootloader_run@timeslot 005C  
                               __end_of_fat_create_file 5028  
                                      spi_tx_rx@command 0001  
                              __flash_get_status@status 0010  
                                    ?_parseHexFileEntry 000C  
                              ??_flash_read_from_buffer 0025  
                           __size_of__root_is_available 0062  
                               __parse_file_rename@data 0060  
                                __size_of_USBDeviceInit 014E  
                         ?_MSDProcessCommandMediaAbsent 0001  
               __end_of_USER_USB_CALLBACK_EVENT_HANDLER 86E6  
              __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                     ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                      ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                       _USER_USB_CALLBACK_EVENT_HANDLER 8660  
                                    ??_hexCharsToUint16 0006  
                                      ___lwmod@dividend 0001  
                     __end_of_ExternalFlash_SectorWrite 9B74  
                                      ___lldiv@dividend 0001  
                  __parse_settings_i2c_mode@out_idx_ptr 0005  
                 __end_of__flash_write_page_from_buffer 9134  
                __size_of__flash_write_page_from_buffer 0058  
                         __flash_write_page_from_buffer 90DC  
                   fat_write_sector_from_buffer@cluster 0049  
                             _flash_copy_page_to_buffer A02C  
                  SYSTEM_Initialize@pll_startup_counter 0001  
                                 ??_fat_write_to_buffer 002B  
                          fat_read_from_file@start_byte 006E  
                                       _display_content 0200  
                       fat_copy_sector_to_buffer@sector 0043  
        fat_write_sector_from_buffer@number_of_clusters 004F  
                            __end_of_flash_partial_read 9C0A  
                                     ??_system_delay_ms 0001  
                               __end_of_MSDWriteHandler 1B02  
                                   ??_parseHexFileEntry 0014  
                                             strncmp@s1 0001  
                                             strncmp@s2 0003  
                               __write_root@file_number 002F  
                                      spi_tx_tx@command 0001  
                   __end_of_bootloader_get_rec_checksum A2CA  
                           _bootloader_get_rec_checksum A2C4  
                          __parse_sector_to_buffer@data 0054  
                                fat_copy_file@extension 005B  
                               __size_of_MSDReadHandler 01DA  
                         __size_of_jump_to_main_program 0006  
                         __parse_file_copy@return_value 005E  
                                   fat_resize_file@root 0067  
                          __bootloader_verify_file@root 0076  
                     __size_of__fill_buffer_get_display 00B4  
                              ?__read_value_from_offset 0001  
                              ?_fat_read_from_file_fast 0042  
                             ?__fill_buffer_get_display 0005  
                                ??_USBConfigureEndpoint 0002  
                                       ?__i2c_wait_idle 0001  
                                 ?_USBCtrlTrfOutHandler 0001  
                          __parse_buffer_to_sector@data 0052  
                                       _display_prepare 69F2  
                              ??__flash_write_to_buffer 001B  
                              ?_APP_DeviceMSDInitialize 0001  
                                 _failed_line3_checksum BDF8  
                                   _USBCtrlTrfRxService 53B4  
                             __size_of_timer_pseudo_isr 0034  
                                    _USBWakeFromSuspend 9A06  
                                 ??__parse_command_long 0060  
  __parse_settings_i2c_slaveModeSlaveAddress@out_buffer 0003  
                                     hexCharsToUint8@c1 0005  
                                     hexCharsToUint8@c2 0003  
                           internalFlash_writePage@cntr 000F  
                           internalFlash_writePage@page 0009  
                                          ?__ui_encoder 0001  
                                    _i2c_display_cursor 9F22  
                                ??__display_programming 001D  
                               _USBStdFeatureReqHandler 1DA4  
                                       _fat_modify_file 2758  
                          __fill_buffer_read_file@start 00AE  
                                           ??_spi_tx_rx 0009  
                                           ??_spi_tx_tx 0009  
                     __bootloader_check_address@address 0001  
                                   _USBCtrlTrfTxService 6BAA  
                                          ?_api_prepare 00B2  
                 __flash_write_page_from_buffer@command 001A  
                                              utoa@base 000C  
                      __end_of__parse_settings_i2c_mode 74F0  
                  __end_of_fat_write_sector_from_buffer 87E4  
                 __size_of_fat_write_sector_from_buffer 007C  
                          _fat_write_sector_from_buffer 8768  
                                       _gblMediaPresent 0184  
                      __size_of_bootloader_get_rec_data 0016  
                                 _i2c_digipot_backlight 9E1C  
                                      ??_hexCharToUint8 0001  
                   ExternalFlash_SectorRead@sector_addr 002E  
                   __parse_settings_i2c_mode@out_buffer 0003  
                                   ?_USBWakeFromSuspend 0001  
                                     ??_hexCharsToUint8 0004  
                      __end_of_failed_line3_dataTooLong BE33  
                                            _PPSCONbits 000EBF  
                                      ___lldiv@quotient 0009  
                                ??_bootloader_get_error 0001  
                                       ___lwmod@divisor 0003  
                           ??_ExternalFlash_MediaDetect 0003  
                                   ?_i2c_display_cursor 000E  
                                 ??_USBCtrlTrfInHandler 0002  
                    __end_of_bootloader_get_rec_address A268  
                            _bootloader_get_rec_address A25E  
                                 _USBAlternateInterface 01AF  
                  __bootloader_check_address@dataLength 0005  
                             __end_of_parseHexFileEntry 049C  
                                       ___lwmod@counter 0005  
                           __end_of_i2c_eeprom_readByte 9588  
                            __delete_root@deleted_value 002D  
                         __size_of__i2c_not_acknowledge 000A  
                                           _ptrNextData 0188  
                      __make_cluster_chain@data_changed 0042  
                               __parse_file_resize@data 0055  
                             _failed_line3_noNextRecord BE07  
                            ?__bootloader_check_address 0001  
                                       _fat_rename_file 8126  
                       __parse_format_drive@out_idx_ptr 002B  
                        __size_of_flash_write_to_buffer 002E  
                       __parse_file_delete@return_value 0057  
                                   USBEnableEndpoint@ep 000C  
                                       _endpoint_number 00F3  
                                        _display_update 8BEC  
                         __end_of_flash_write_to_buffer 9CC6  
                                        ??__normal_mode 0019  
                   __get_available_cluster@first_sector 002C  
                                        ?_flash_is_busy 0001  
                       __size_of__get_available_cluster 00C4  
                                  ?_USBCtrlTrfRxService 0001  
                                _failed_line3_startCode BCAA  
                              ?__parse_buffer_to_sector 0052  
                       __size_of_bootloader_get_entries 000A  
  __internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                                 _MSDCheckForErrorCases 666E  
                            ??__fat_offset_from_cluster 0003  
                         ?_MSDComputeDeviceInAndResidue 0001  
                      __end_of__ic2_display_set_address 9E68  
                              ?_USBCtrlEPAllowDataStage 0001  
                                        _MSBBufferIndex 0186  
                               _internalFlash_writePage 7736  
                           __end_of__parse_write_buffer 4AE8  
                                  ?_USBCtrlTrfTxService 0001  
                       __offset_from_file_number@offset 0004  
                        ?_bootloader_get_rec_recordType 0001  
                                            _USBMSDInit 58F6  
                          _USBStatusStageTimeoutCounter 00F1  
        __parse_settings_i2c_slaveModeSlaveAddress@data 0001  
                       ??_ExternalFlash_MediaInitialize 0003  
                     __size_of_system_minimal_init_undo 0010  
                                      ?_fat_delete_file 0001  
                                  ??_USBWakeFromSuspend 0018  
                             ?_system_minimal_init_undo 0001  
                           __end_of__flash_partial_read 894E  
                            USBTransferOnePacket@handle 000A  
                                  ??_i2c_display_cursor 000F  
                          __parse_file_copy@out_idx_ptr 0098  
                          __end_of_i2c_eeprom_writeByte 991C  
                           __parse_file_copy@out_buffer 0096  
                                          _verify_line1 BDB8  
                                          _verify_line2 BE40  
                                          _verify_line3 BE88  
                                   __parse_format_drive 7C12  
                            fat_resize_file@file_number 0066  
                                            _USB_CD_Ptr BEA3  
                                           _power_state 00E3  
                                           _USBInHandle 0180  
                              _APP_DeviceCustomHIDTasks 795A  
                            __end_of_flash_sector_write 9392  
